# Created 3. April 2022 um 18:53:36 by Gemstone Transform(1.4.0.7,chaider)
FileFormat UTF8
IfErr 1 list dictionaries
IfErr 2 stk
IfErr 3 display oops
IfErr 4 omit classoops
IfErr 5 stack
IfErr 6 Exit
DoIt
	| package |
	UserGlobals at: #FileInStartingTimestamp put: DateAndTime now.
	(UserGlobals includesKey: #FileInSymbolDictionary) ifTrue: [
		nil error: 'Previous file-in did not complete'].
	(GsSession currentSession resolveSymbol: #PDFtalkLibrary) ifNil: [
		package := GsPackageLibrary createPackageNamed: #PDFtalkLibrary.
		package initialize.
		GsPackageLibrary installPackage: package].
%
DoIt
	UserGlobals at: #FileInSymbolDictionary put: PDFtalkLibrary.
%
DoIt
	FileInSymbolDictionary at: #codeComponents put: Dictionary new.	"Add root of pundle structure"
	FileInSymbolDictionary at: #namespacePathsAtClasses put: Dictionary new.	"Add registry for namespace paths of classes"
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #Values.
	dict at: #comment put: 'Values are simple immutable literal objects.

Runtime support for Values.

Defines the root class Value and provides
- printing instances
- equality
- an example.

Specifies the responsibilities of subclasses to define the #localSpecification'.
	dict at: #notice put: 'The MIT License

Copyright Â© 2009-2018 Christian Haider

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.'.
	dict at: #padded put: true.
	dict at: #parcelName put: 'Values'.
	dict at: #storeVersion put: '3.0.1.0'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components at: dict name put: dict.
%

# VisualWorks stub classes

DoIt
DateAndTime
	subclass: 'Timestamp'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
Timestamp category: 'Values VW stub class'.
Timestamp comment: 'VisualWorks class'.
%
DoIt
Color
	subclass: 'ColorValue'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
ColorValue category: 'Values VW stub class'.
ColorValue comment: 'VisualWorks class'.
%
# Define class Value
DoIt
Object
	subclass: 'Value'
	instVarNames: #()
	classVars: #(NamedValuesRegistry)
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	Value category: 'Values'.
	Value comment: 'Value is the abstract root object of values (literal objects).
All Value classes which have subclasses are considered abstract. Only leaf classes can have instances!
Literal objects are created immutable with constructors.
The instance variables are object constants.

Subclasses must implement the following messages:
	class specification
		localSpecification'.
%
# Define class Printvalue
DoIt
Value
	subclass: 'Printvalue'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	Printvalue category: 'Values'.
	Printvalue comment: 'A Printvalue holds a representation of a Value to be printed.
It consists of
	- classname 	<String>										properly resolved against a target class (#name or #fullName)
	- arguments 	<SequenceableCollection of: Printargument>		the list of arguments with constructor variable name and a Printvalue

Printvalues are created when printing the source for a Value in the first pass. The second pass takes the Printvalue and produces a nicely indented soure string for the value.'.
%
# Define class ArrayPrintvalue
DoIt
Printvalue
	subclass: 'ArrayPrintvalue'
	instVarNames: #(arguments)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	ArrayPrintvalue category: 'Values'.
	ArrayPrintvalue comment: 'ArrayPrintvalue is a special Printvalue for sequentiable collections of Values'.
%
# Define class Emitter
DoIt
Object
	subclass: 'Emitter'
	instVarNames: #(printer stream level)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	Emitter category: 'Values'.
	Emitter comment: 'Emitter outputs a Printvalue as formatted source code to a stream.
Subclasses write source or text.
This implements the second pass of the source generation for Values.

Instance Variables
	printer	<ValuePrinter>					the printer to resolve namespace names
	level	<Integer>						the indention level
	stream	<WriteStream | TextStream>		the output stream
'.
%
# Define class SourceEmitter
DoIt
Emitter
	subclass: 'SourceEmitter'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	SourceEmitter category: 'Values'.
	SourceEmitter comment: 'SourceEmitter outputs source code.'.
%
# Define class Blockemitter
DoIt
SourceEmitter
	subclass: 'Blockemitter'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	Blockemitter category: 'Values'.
	Blockemitter comment: 'Emits source as indented block'.
%
# Define class TextEmitter
DoIt
Emitter
	subclass: 'TextEmitter'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	TextEmitter category: 'Values'.
	TextEmitter comment: 'TextEmitter outputs a descriptive text.'.
%
# Define class TextLineemitter
DoIt
TextEmitter
	subclass: 'TextLineemitter'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	TextLineemitter category: 'Values'.
	TextLineemitter comment: 'TextLineEmitter emits text as one line'.
%
# Define class Printargument
DoIt
Value
	subclass: 'Printargument'
	instVarNames: #(name value)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	Printargument category: 'Values'.
	Printargument comment: 'A Printargument holds the data to print one instance variable (constant) and its value.

	- name 	<String> 		the name of the argument
	- value 	<Printvalue>	the print value of the value

With Printvalue it represents the source for a Value'.
%
# Define class DictionaryPrintargument
DoIt
Printargument
	subclass: 'DictionaryPrintargument'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	DictionaryPrintargument category: 'Values'.
	DictionaryPrintargument comment: 'DictionaryPrintargument holds the Printvalues for key and value of an entry in a dictionary.
Both key and value can be Values'.
%
# Define class Valuemap
DoIt
Dictionary
	indexableSubclass: 'Valuemap'
	instVarNames: #(order)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	Valuemap category: 'Values'.
	Valuemap comment: 'A Valuemap is an ordered dictionary preserving the order in which entries are added.

Instances are also used as ordered volatile dictionary, not just as value.

In VisualWorks, Valuemap is subclassed from Dictionary to inherit the dictionary API.

Instance Variables:
	order	<SequenceableCollection of: Object>		the ordered keys


The class used to be named OrderedDictionary, but was renamed for dialect compatibility with Pharo, which has a class named OrderedDictionary with different semantics.'.
%
# Define class LiteralPrintvalue
DoIt
Printvalue
	subclass: 'LiteralPrintvalue'
	instVarNames: #(string)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	LiteralPrintvalue category: 'Values'.
	LiteralPrintvalue comment: 'LiteralPrintvalue is a Printvalue for literals.

Instance Variables:
	string	<String>	the representation as a string'.
%
# Define class DictionaryPrintvalue
DoIt
Printvalue
	subclass: 'DictionaryPrintvalue'
	instVarNames: #(arguments isOrdered)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	DictionaryPrintvalue category: 'Values'.
	DictionaryPrintvalue comment: 'DictionaryPrintvalue is used for printing Dictionaries

Instance Variables:
	arguments	<SequenceableCollection of DictionaryPrintargument>	the Printarguments for each entry'.
%
# Define class ValuePrinter
DoIt
Object
	subclass: 'ValuePrinter'
	instVarNames: #(target)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	ValuePrinter category: 'Values'.
	ValuePrinter comment: 'ValuePrinter creates the source for a Value.
For each level, a new ValuePrinter is created.

Instance Variables:
	target	<Value class>	defines the scoping for the created source - how class names are printed
	level	<Integer>		the indent level
	stream	<WriteStream>	a writestream passed around to collect the sources

'.
%
# Define class ValuePrintvalue
DoIt
Printvalue
	subclass: 'ValuePrintvalue'
	instVarNames: #(classname arguments)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	ValuePrintvalue category: 'Values'.
	ValuePrintvalue comment: 'ValuePrintvalue holds the data to print a Value.

Instance Variables:
	arguments	<SequenceableCollection of: (Printargument | EmptyArgument)>	the arguments
	classname	<String>														the namespace aware name of the class

'.
%
# Define class TextBlockemitter
DoIt
TextEmitter
	subclass: 'TextBlockemitter'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	TextBlockemitter category: 'Values'.
	TextBlockemitter comment: 'TextBlockEmitter emits text as indented block'.
%
# Define class Lineemitter
DoIt
SourceEmitter
	subclass: 'Lineemitter'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	Lineemitter category: 'Values'.
	Lineemitter comment: 'Emits source as one line'.
%
category: 'instance creation'
classmethod: ArrayPrintvalue
arguments: argumentsArray
	| inst |
	inst := self new.
	inst initializeArguments: argumentsArray.
	^inst
%
category: 'specification'
classmethod: ArrayPrintvalue
localSpecification
	<sequence: #arguments>
%
category: 'accessing'
method: ArrayPrintvalue
arguments
	"<Array>"

	^arguments ifNil: [#()]
%
method: ArrayPrintvalue
sourceWith: emitter
	emitter emitArraySourceFor: self arguments
%
category: 'initialize-release'
method: ArrayPrintvalue
initializeArguments: argumentsArray
	(argumentsArray notNil and: [
	argumentsArray notEmpty]) ifTrue: [
			arguments := (Array withAll: argumentsArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: ArrayPrintvalue
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer array: 'arguments' value: self arguments).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: ArrayPrintvalue
isLine
	^self arguments size = 1 or: [
	self arguments size < 5 and: [
	self arguments allSatisfy: [:arg | arg isSimple]]]
%
category: 'initialize-release'
method: Blockemitter
initializePrinter: aPrinter stream: aWriteStream level: anInteger
	printer := aPrinter.
	stream := aWriteStream.
	level := anInteger + 1
%
category: 'writing'
method: Blockemitter
emitSeparator
	self stream cr.
	self level + 1 timesRepeat: [self stream tab]
%
category: 'specification'
classmethod: DictionaryPrintargument
localSpecification
	<constant: #name class: #(#Printvalue)>
	<constant: #value class: #(#Printvalue)>
%
category: 'instance creation'
classmethod: DictionaryPrintvalue
arguments: argumentsArray isOrdered: isOrderedBoolean
	| inst |
	inst := self new.
	inst initializeArguments: argumentsArray isOrdered: isOrderedBoolean.
	^inst
%
category: 'instance creation optional'
classmethod: DictionaryPrintvalue
arguments: argumentsArray
	^self arguments: argumentsArray isOrdered: nil
%
classmethod: DictionaryPrintvalue
isOrdered: isOrderedBoolean
	^self arguments: nil isOrdered: isOrderedBoolean
%
category: 'specification'
classmethod: DictionaryPrintvalue
localSpecification
	<sequence: #arguments>
	<optional: #isOrdered class: #(#Boolean) default: 'false'>
%
category: 'accessing'
method: DictionaryPrintvalue
arguments
	"<Array>"

	^arguments ifNil: [#()]
%
method: DictionaryPrintvalue
isOrdered
	"<Boolean>"

	^isOrdered ifNil: [false]
%
method: DictionaryPrintvalue
sourceWith: emitter
	self isEmpty ifTrue: [
		^emitter emit: self targetClassname , ' new'].
	emitter emitDictionarySourceFor: self
%
method: DictionaryPrintvalue
targetClass
	^self isOrdered
		ifTrue: [Valuemap]
		ifFalse: [Dictionary]
%
method: DictionaryPrintvalue
targetClassname
	^self targetClass name asString
%
category: 'initialize-release'
method: DictionaryPrintvalue
initializeArguments: argumentsArray isOrdered: isOrderedBoolean
	(argumentsArray notNil and: [
	argumentsArray notEmpty]) ifTrue: [
			arguments := (Array withAll: argumentsArray) beImmutable].
	(isOrderedBoolean notNil and: [
	self isOrdered ~= isOrderedBoolean]) ifTrue: [
			isOrdered := isOrderedBoolean].
	self beImmutable
%
category: 'printing'
method: DictionaryPrintvalue
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer array: 'arguments' value: self arguments).
	args add: (printer optional: 'isOrdered' value: isOrdered).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: DictionaryPrintvalue
isEmpty
	^self arguments isEmpty
%
method: DictionaryPrintvalue
isLine
	^self isEmpty
%
category: 'instance creation'
classmethod: Emitter
for: aPrinter
	| inst |
	inst := self new.
	inst initializePrinter: aPrinter stream: nil level: -1.
	^inst
%
classmethod: Emitter
for: aPrinter on: aWriteStream at: anInteger
	| inst |
	inst := self new.
	inst initializePrinter: aPrinter stream: aWriteStream level: anInteger.
	^inst
%
category: 'accessing'
method: Emitter
emitterClassFor: printvalue
	"<Emitter class>"

	^self subclassResponsibility
%
method: Emitter
emitterFor: printvalue
	"<Emitter>"

	^(self emitterClassFor: printvalue) for: self printer on: self stream at: self level
%
method: Emitter
level
	"<Integer>
	the indent level"

	^level ifNil: [0]
%
method: Emitter
printer
	"<ValuePrinter>"

	^printer
%
method: Emitter
stream
	"<WriteStream | TextStream>
	the output stream"

	^stream ifNil: [stream := self streamClass on: (String new: 100)]
%
method: Emitter
streamClass
	"<WriteStream class | TextStream class>"

	^self subclassResponsibility
%
category: 'initialize-release'
method: Emitter
initializePrinter: aPrinter stream: aWriteStream level: anInteger
	printer := aPrinter.
	stream := aWriteStream.
	level := anInteger
%
category: 'writing'
method: Emitter
emit: aString
	self stream nextPutAll: aString
%
method: Emitter
emitArgument: aPrintargument
	self emit: aPrintargument name , ': '.
	aPrintargument value sourceFor: self
%
method: Emitter
emitArraySourceFor: anArray
	self inBracketsDo: [
		anArray size > 4
			ifTrue: [self emitLongCollection: anArray]
			ifFalse: [
			self emitSmallCollection: anArray]]
%
method: Emitter
emitClass: aString
	self emit: aString
%
method: Emitter
emitDictionarySourceFor: aDictionaryPrintvalue
	self inBracketsDo: [
		aDictionaryPrintvalue arguments size > 4
			ifTrue: [
			self emitLongDictionary: aDictionaryPrintvalue]
			ifFalse: [
			self emitSmallDictionary: aDictionaryPrintvalue]]
%
method: Emitter
emitEmpty: aValuePrintvalue
	"write the constructor for an empty instance"

	self emitClass: aValuePrintvalue classname.
	self emit: ' new'
%
method: Emitter
emitLongCollection: aSequenceableCollection
	self emit: '(', (OrderedCollection nameRelativeTo: self printer target) , ' new: ' , aSequenceableCollection size printString, ')'.
	aSequenceableCollection do: [:value |
		self emitSeparator.
		self emit: 'add: '.
		value sourceFor: self.
		self stream nextPut: $;].
	self emitSeparator.
	self emit: 'yourself'
%
method: Emitter
emitLongDictionary: aDictionaryPrintvalue
	self emit: '(', (aDictionaryPrintvalue targetClass nameRelativeTo: self printer target), ' new: ' , aDictionaryPrintvalue arguments size printString, ')'.
	aDictionaryPrintvalue arguments do: [:argument |
		self emitSeparator.
		self emit: 'add: '.
		argument name sourceFor: self.
		self emit: ' -> '.
		argument value sourceFor: self.
		self stream nextPut: $;].
	self emitSeparator.
	self emit: 'yourself'
%
method: Emitter
emitSeparator
	self subclassResponsibility
%
method: Emitter
emitSmallCollection: aSequenceableCollection
	self emit: (Array nameRelativeTo: self printer target).
	aSequenceableCollection do: [:value |
		self emitSeparator.
		self emit: 'with: '.
		value sourceFor: self]
%
method: Emitter
emitSmallDictionary: aDictionaryPrintvalue
	self emit: (aDictionaryPrintvalue targetClass nameRelativeTo: self printer target).
	aDictionaryPrintvalue arguments do: [:argument |
		self emitSeparator.
		self emit: 'with: '.
		argument name sourceFor: self.
		self emit: ' -> '.
		argument value sourceFor: self]
%
method: Emitter
emitValue: aString
	self emit: aString
%
method: Emitter
inBracketsDo: aZeroArgumentBlock
	self stream nextPut: $(.
	aZeroArgumentBlock ensure: [self stream nextPut: $)]
%
category: 'writing'
method: Lineemitter
emitSeparator
	self stream space
%
category: 'instance creation'
classmethod: LiteralPrintvalue
string: stringString
	| inst |
	inst := self new.
	inst initializeString: stringString.
	^inst
%
category: 'specification'
classmethod: LiteralPrintvalue
localSpecification
	<constant: #string class: #(#String)>
%
category: 'accessing'
method: LiteralPrintvalue
sourceWith: emitter
	emitter emitValue: self string
%
method: LiteralPrintvalue
string
	"<String>"

	^string
%
category: 'initialize-release'
method: LiteralPrintvalue
initializeString: stringString
	string := stringString.
	self beImmutable
%
category: 'printing'
method: LiteralPrintvalue
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'string' value: self string).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: LiteralPrintvalue
isLine
	^true
%
method: LiteralPrintvalue
isSimple
	^(self string first = $() not
%
category: 'instance creation'
classmethod: Printargument
name: nameString value: valuePrintvalue
	| inst |
	inst := self new.
	inst initializeName: nameString value: valuePrintvalue.
	^inst
%
category: 'specification'
classmethod: Printargument
localSpecification
	<constant: #name class: #(#String)>
	<constant: #value class: #(#Printvalue)>
%
category: 'accessing'
method: Printargument
name
	"<String>"

	^name
%
method: Printargument
sourceWith: emitter
	emitter emitArgument: self
%
method: Printargument
value
	"<Printvalue>"

	^value
%
category: 'initialize-release'
method: Printargument
initializeName: nameString value: valuePrintvalue
	name := nameString.
	value := valuePrintvalue.
	self beImmutable
%
category: 'printing'
method: Printargument
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'name' value: self name).
	args add: (printer constant: 'value' value: self value).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: Printargument
isSimple
	^self value isSimple
%
category: 'accessing'
method: Printvalue
description
	"<Text>"

	| emitter |
	emitter := self textemitterClass new.
	self sourceWith: emitter.
	^emitter stream contents
%
method: Printvalue
emitterClass
	"<SourceEmitter class>"

	^self isLine
		ifTrue: [Lineemitter]
		ifFalse: [Blockemitter]
%
method: Printvalue
sourceFor: outerEmitter
	"<String>"

	^self sourceWith: (outerEmitter emitterFor: self)
%
method: Printvalue
sourceWith: emitter
	"write yourself with the emitter"

	^self subclassResponsibility
%
method: Printvalue
sourceWithPrinter: aPrinter
	"<String>"

	| emitter |
	emitter := self emitterClass for: aPrinter.
	self sourceWith: emitter.
	^emitter stream contents
%
method: Printvalue
textemitterClass
	"<SourceEmitter class>"

	^self isLine
		ifTrue: [TextLineemitter]
		ifFalse: [TextBlockemitter]
%
category: 'testing'
method: Printvalue
isLine
	^false
%
method: Printvalue
isSimple
	"does it have to be printed in brackets?
	only literals are simple"

	^false
%
category: 'accessing'
method: SourceEmitter
emitterClassFor: printvalue
	^printvalue isLine
		ifTrue: [Lineemitter]
		ifFalse: [Blockemitter]
%
method: SourceEmitter
streamClass
	^WriteStream
%
category: 'initialize-release'
method: TextBlockemitter
initializePrinter: aPrinter stream: aWriteStream level: anInteger
	printer := aPrinter.
	stream := aWriteStream.
	level := anInteger + 1
%
category: 'writing'
method: TextBlockemitter
emitSeparator
	self stream cr.
	self level + 1 timesRepeat: [self stream tab]
%
method: TextBlockemitter
inBracketsDo: aZeroArgumentBlock
	aZeroArgumentBlock value
%
category: 'accessing'
method: TextEmitter
emitterClassFor: printvalue
	^printvalue isLine
		ifTrue: [TextLineemitter]
		ifFalse: [TextBlockemitter]
%
method: TextEmitter
streamClass
	^TextStream
%
category: 'writing'
method: TextEmitter
emitArraySourceFor: anArray
	self emitSmallCollection: anArray
%
method: TextEmitter
emitBold: aString
	self stream withAttributes: (Array with: TextEmphasis bold) do: [
		self stream nextPutAll: aString]
%
method: TextEmitter
emitClass: aString
	self emitBold: aString
%
method: TextEmitter
emitDictionarySourceFor: aDictionaryPrintvalue
	self emitSmallDictionary: aDictionaryPrintvalue
%
method: TextEmitter
emitSmallCollection: aSequenceableCollection
	aSequenceableCollection do: [:value |
		self emitSeparator.
		value sourceFor: self]
%
method: TextEmitter
emitSmallDictionary: aDictionaryPrintvalue
	aDictionaryPrintvalue arguments do: [:argument |
		self emitSeparator.
		argument name sourceFor: self.
		self emit: ': '.
		argument value sourceFor: self]
%
method: TextEmitter
emitValue: aString
	self emitBold: aString
%
category: 'writing'
method: TextLineemitter
emitSeparator
	self stream space
%
category: 'class initialization'
classmethod: Value
obsolete
	self allInstancesDo: #beMutable.
	super obsolete
%
category: 'initialize-release'
classmethod: Value
primeRuntime
	"reset and load all class variables to fill the caches to avoid lazy initialization at runtime.
	This should be executed when deploying after all application fonts and extensions are loaded"
	"self primeRuntime"

	self resetNamedValuesRegistry.
	Object namesByValues
%
classmethod: Value
resetNamedValuesRegistry
	"self resetNamedValuesRegistry"

	NamedValuesRegistry := nil
%
category: 'named values'
classmethod: Value
namedValuesAt: aClass
	"<Dictionary key: Value value: Symbol>
	the named instances of aClass"

	^self namedValuesRegistry at: aClass ifAbsent: [Dictionary new]
%
classmethod: Value
namedValuesAt: aClass ifAbsentPut: aBlock
	"<Dictionary key: Value value: Symbol>
	the named instances of aClass"

	^self namedValuesRegistry at: aClass ifAbsentPut: aBlock
%
classmethod: Value
namedValuesRegistry
	"<Dictionary key: Class value: (Dictionary key: Value value: Symbol)>
	the named instances of classes.
	This is a light weight implementation to hold all named instances of all classes, instead of storing them with the class"
	
	^NamedValuesRegistry ifNil: [NamedValuesRegistry := Dictionary new]
%
category: 'pragmas'
classmethod: Value
specificationPragmas
	<pragmas: #class>
	^#(
		#constant:class:
		#constant:class:comment:
		
		#optional:class:default:
		#optional:class:default:comment:
		
		#sequence:
		#sequence:comment:
		
		#map:
		#map:comment:
	)
%
category: 'specification'
classmethod: Value
localSpecification
	"specification of the constants with pragmas.
	Only for the instvars defined in this class - access the full specification with #specification"

	^self subclassResponsibility
%
category: 'comparing'
method: Value
= anObject
	"all instvars must be equal"

	^self isEqualValue: anObject
%
method: Value
hash
	^(1 to: self class instSize) inject: 0 into: [:hash :i | hash bitXor: (self instVarAt: i) hash]
%
method: Value
isEqualValue: anObject
	self == anObject ifTrue: [
		^true].
	self class = anObject class ifFalse: [
		^false].
	1 to: self class instSize do: [:i |
		((self instVarAt: i) isEqualValue: (anObject instVarAt: i)) ifFalse: [
			^false]].
	^true
%
category: 'copying'
method: Value
postCopy
	super postCopy.
	self beImmutable
%
category: 'marshaling'
method: Value
passMode
	"for OpenTalk StSt (Smalltalk to Smalltalk)"

	^#value
%
category: 'printing'
method: Value
printOn: stream
	stream nextPutAll: self asSource
%
method: Value
printvalueWith: printer
	^printer printvalue: self arguments: #()
%
category: 'testing'
method: Value
isEmpty
	^self = self class new
%
method: Value
notEmpty
	^self isEmpty not
%
category: 'accessing'
method: Valuemap
atIndex: index
	"<Association>"

	^self associationAt: (self order at: index)
%
method: Valuemap
first
	"<Association>"

	^self associationAt: self keys first
%
method: Valuemap
indexOf: aKey
	"<Integer>"

	^self order indexOf: aKey
%
method: Valuemap
keys
	"<SequenceableCollection of: Object>"

	^self order copy
%
method: Valuemap
last
	"<Association>"

	^self associationAt: self keys last
%
method: Valuemap
order
	"<SequenceableCollection of: Object>
	the order of the keys"

	^order ifNil: [order := OrderedCollection new]
%
category: 'comparing'
method: Valuemap
= otherOrderedDictionary
	^self class == otherOrderedDictionary class and: [
	self size = otherOrderedDictionary size and: [
	(1 to: self size) allSatisfy: [:i |
		(self atIndex: i) = (otherOrderedDictionary atIndex: i)]]]
%
method: Valuemap
hash
	^(1 to: self size) inject: self class hash into: [:hash :index |
		| assoc |
		assoc := self atIndex: index.
		hash bitXor: (assoc key hash bitXor: assoc value hash)]
%
category: 'copying'
method: Valuemap
copyWith: anAssociation 
	"Answer a copy of the receiver with anAssociation added"

	| copy |
	copy := self copy.
	copy add: anAssociation.
	^copy
%
method: Valuemap
copyWithAll: aDictionary
	"Answer a copy of the receiver with all associations from aDictionary added"

	| copy |
	copy := self copy.
	copy addAll: aDictionary.
	^copy
%
method: Valuemap
postCopy

	super postCopy.
	order := self order copy
%
category: 'dictionary enumerating'
method: Valuemap
associationsDo: aBlock
	"Note: do not use the keys to access anything.
	This method is used by #changeCapacityTo: and #rehash where key access is not working"

	| assocs |
	assocs := Array new: self order size.
	super associationsDo: [:assoc | assocs at: (self order indexOf: assoc key) put: assoc].
	assocs do: aBlock
%
method: Valuemap
removeKey: aKey otherwise: defaultValue
	| return |
	return := super removeKey: aKey otherwise: defaultValue.
	self order remove: aKey ifAbsent: nil.
	^return
%
method: Valuemap
removeAssociation: anAssociation otherwise: defaultValue
	| return |
	return := super removeAssociation: anAssociation otherwise: defaultValue.
	self order remove: anAssociation key ifAbsent: nil.
	^return
%
category: 'enumerating'
method: Valuemap
collect: oneArgumentBlock
	| newCollection |
	newCollection := self species new: self size.
	self keysAndValuesDo: [:eachKey :eachValue | 
		newCollection at: eachKey put: (oneArgumentBlock value: eachValue)].
	^newCollection
%
method: Valuemap
do: oneArgumentBlock
	self order do: [:key |
		oneArgumentBlock value: (self at: key)]
%
method: Valuemap
keysAndValuesDo: oneArgumentBlock
	self order do: [:key |
		oneArgumentBlock value: key value: (self at: key)]
%
method: Valuemap
keysDo: aBlock
	self keys do: aBlock
%
method: Valuemap
valuesDo: aBlock
	self keysDo: [:key | aBlock value: (self at: key)]
%
category: 'printing'
method: Valuemap
keysForPrinting
	^self keys
%
method: Valuemap
printvalueWith: printer
	^DictionaryPrintvalue arguments: (self printargumentsWith: printer) isOrdered: true
%
category: 'private'
method: Valuemap
addNewAssociation: anAssociation hash: aHashVal
	self order addLast: anAssociation key.
	^super addNewAssociation: anAssociation hash: aHashVal
%
method: Valuemap
rebuild
	| original return |
	original := self order copy.
	return := super rebuild.
	order := original.
	^return
%
category: 'instance creation'
classmethod: ValuePrinter
newFor: targetClass
	| inst |
	inst := self new.
	inst initializeTarget: targetClass.
	^inst
%
category: 'accessing'
method: ValuePrinter
array: selectorname value: object
	"<Printargument | nil>"

	object isEmpty ifTrue: [
		^nil].
	^Printargument name: selectorname value: (object printvalueWith: self)
%
method: ValuePrinter
classnameOf: value
	^value class nameRelativeTo: self target
%
method: ValuePrinter
constant: selectorname value: object
	"<Printargument>"

	^Printargument name: selectorname value: (object printvalueWith: self)
%
method: ValuePrinter
dictionary: selectorname value: object
	"<Printargument | nil>"

	object isEmpty ifTrue: [
		^nil].
	^Printargument name: selectorname value: (object printvalueWith: self)
%
method: ValuePrinter
optional: selectorname value: object
	"<Printargument | nil>"

	^object ifNotNil: [
		Printargument name: selectorname value: (object printvalueWith: self)]
%
method: ValuePrinter
printvalue: aValue arguments: arguments
	aValue class new = aValue ifTrue: [
		^ValuePrintvalue classname: (self classnameOf: aValue)].
	^ValuePrintvalue
		classname: (self classnameOf: aValue)
		arguments: (arguments select: [:arg |
			arg notNil])
%
method: ValuePrinter
target
	"<Value class>
	the class for which the object is printed.
	Takes the visibility of classes into account for short class name generation"

	^target
%
category: 'initialize-release'
method: ValuePrinter
initializeTarget: targetClass
	target := targetClass
%
category: 'instance creation'
classmethod: ValuePrintvalue
classname: classnameString arguments: argumentsArray
	| inst |
	inst := self new.
	inst initializeClassname: classnameString arguments: argumentsArray.
	^inst
%
category: 'instance creation optional'
classmethod: ValuePrintvalue
classname: classnameString
	^self classname: classnameString arguments: nil
%
category: 'specification'
classmethod: ValuePrintvalue
localSpecification
	<constant: #classname class: #(#String)>
	<sequence: #arguments>
%
category: 'accessing'
method: ValuePrintvalue
arguments
	"<Array>"

	^arguments ifNil: [#()]
%
method: ValuePrintvalue
classname
	"<String>"

	^classname
%
method: ValuePrintvalue
sourceWith: emitter
	self arguments isEmpty ifTrue: [
		^emitter emitEmpty: self].
	emitter inBracketsDo: [
		emitter emitClass: self classname.
		self arguments do: [:arg |
			emitter emitSeparator.
			emitter emitArgument: arg]]
%
category: 'initialize-release'
method: ValuePrintvalue
initializeClassname: classnameString arguments: argumentsArray
	classname := classnameString.
	(argumentsArray notNil and: [
	argumentsArray notEmpty]) ifTrue: [
			arguments := (Array withAll: argumentsArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: ValuePrintvalue
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'classname' value: self classname).
	args add: (printer array: 'arguments' value: self arguments).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: ValuePrintvalue
isLine
	self arguments size = 1 ifTrue: [
		^self arguments first value isLine].
	^self arguments size < 5 and: [
	self arguments allSatisfy: [:arg | arg isSimple]]
%
category: '*Values-instance creation'
classmethod: ColorValue
fromByte: anInteger
	^self fromBytes: (ByteArray new: 3 withAll: anInteger)
%
classmethod: ColorValue
fromBytes: threeBytes
	^self fromBytesRed: threeBytes first green: (threeBytes at: 2) blue: threeBytes last
%
classmethod: ColorValue
fromBytesRed: redByte green: greenByte blue: blueByte
	^self red: redByte / 255 green: greenByte / 255 blue: blueByte / 255
%
classmethod: ColorValue
fromColor: aColor
	^self r: aColor red g: aColor green b: aColor blue
%
classmethod: ColorValue
red: r green: g blue: b
	^self r: r g: g b: b
%
category: '*Values-named values'
classmethod: ColorValue
namedValueNames
	"The selection is the common set of color names with identical colors in VW and Squeak/Pharo
	The colors are all variations of min and max of the 3 components"
	"self namesByValues"
	
	^#(#black #white
	#red #green #blue
	#cyan #magenta #yellow)
%
classmethod: ColorValue
new
	^self basicNew
%
classmethod: ColorValue
black
	^super black asColorValue
%
classmethod: ColorValue
white
	^super white asColorValue
%
classmethod: ColorValue
red
	^super red asColorValue
%
classmethod: ColorValue
green
	^super green asColorValue
%
classmethod: ColorValue
blue
	^super blue asColorValue
%
classmethod: ColorValue
cyan
	^super cyan asColorValue
%
classmethod: ColorValue
magenta
	^super magenta asColorValue
%
classmethod: ColorValue
yellow
	^super yellow asColorValue
%
category: '*Values-converting'
method: ColorValue
asByteArray
	^ByteArray
		with: (self red * 255) truncated
		with: (self green * 255) truncated
		with: (self blue * 255) truncated
%
method: ColorValue
asGrayValue
	"<Number>
	between 0.0 (Black) and 1.0 (White) suitable for PDF DeviceGray"

	^self brightness
%
method: ColorValue
rgbIndex
	"<Integer>
	Three 8 bit RGB numbers interpreted as number for ordering"

	^self asByteArray inject: 0 into: [:num :byte | (num bitShift: 8) + byte]
%
method: ColorValue
asColorValue
	^self
%
category: '*Values-printing'
method: ColorValue
printvalueWith: printer
	| args |
	(self class nameOrNilFor: self) ifNotNil: [:symbol |
		^LiteralPrintvalue string: (printer classnameOf: self) , ' ' , symbol asString].
	args := OrderedCollection new.
	args add: (printer constant: 'fromBytesRed' value: (self red * 255) rounded).
	args add: (printer constant: 'green' value: (self green * 255) rounded).
	args add: (printer constant: 'blue' value: (self blue * 255) rounded).
	^printer printvalue: self arguments: args
%
method: ColorValue
printOn: aStream
	aStream nextPutAll: self asSource
%
category: '*Values-testing'
method: ColorValue
isEmpty
	^self privateRGB isNil
%
category: '*Values-accessing'
method: ColorValue
cyan
	"<Number[0..1]>
	the cyan part of the receiver"

	^1.0 - self red
%
method: ColorValue
magenta
	"<Number[0..1]>
	the magenta part of the receiver"

	^1.0 - self green
%
method: ColorValue
yellow
	"<Number[0..1]>
	the yellow part of the receiver"

	^1.0 - self blue
%
category: '*Values-instance creation'
classmethod: Timestamp
d: dayInteger m: monthInteger y: yearInteger
	^self d: dayInteger m: monthInteger y: yearInteger h: 0 m: 0 s: 0
%
classmethod: Timestamp
d: dayInteger m: monthInteger y: yearInteger h: hoursInteger
	^self d: dayInteger m: monthInteger y: yearInteger h: hoursInteger m: 0 s: 0
%
classmethod: Timestamp
d: dayInteger m: monthInteger y: yearInteger h: hoursInteger m: minutesInteger
	^self d: dayInteger m: monthInteger y: yearInteger h: hoursInteger m: minutesInteger s: 0
%
classmethod: Timestamp
d: dayInteger m: monthInteger y: yearInteger h: hoursInteger m: minutesInteger s: secondsInteger
	^self
		year: yearInteger
		month: monthInteger
		day: dayInteger
		hour: hoursInteger
		minute: minutesInteger
		second: secondsInteger
		offset: Duration zero
%
classmethod: Timestamp
fromDate: aDate andTime: aTime
	^self date: aDate time: aTime offset: Duration zero
%
classmethod: Timestamp
epoch
	^self d: 1 m: 1 y: 1901
%
category: '*Values-printing'
method: Timestamp
printvalueWith: printer
	| wst |
	wst := WriteStream on: (String new: 50).
	wst
		nextPut: $(;
		nextPutAll: (printer classnameOf: self);
		nextPutAll: ' d: ';
		nextPutAll: self dayOfMonth printString;
		nextPutAll: ' m: ';
		nextPutAll: self month printString;
		nextPutAll: ' y: ';
		nextPutAll: self year printString.
	(self hour isZero and: [
	self minute isZero and: [
	self second isZero]]) ifTrue: [
			wst nextPut: $).
			^LiteralPrintvalue string: wst contents].
	wst
		nextPutAll: ' h: ';
		nextPutAll: self hour printString.
	(self minute isZero and: [
	self second isZero]) ifTrue: [
			wst nextPut: $).
			^LiteralPrintvalue string: wst contents].
	wst
		nextPutAll: ' m: ';
		nextPutAll: self minute printString.
	self second isZero ifTrue: [
		wst nextPut: $).
		^LiteralPrintvalue string: wst contents].
	wst
		nextPutAll: ' s: ';
		nextPutAll: self second printString;
		nextPut: $).
	^LiteralPrintvalue string: wst contents
%
DoIt
	| package policy |
	package := GsPackageLibrary createPackageNamed: #SessionMethods.
	GsPackageLibrary installPackage: package.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: FileInSymbolDictionary.
	policy externalSymbolList: (GsSession currentSession symbolList asArray copyWithout: FileInSymbolDictionary).
	policy enable.
%
category: '*Values-printing'
method: Symbol
literalString
	self asString isValidIdentifier ifTrue: [
		^'#' , self asString].
	^super literalString
%
category: '*Values-testing'
method: Array
isLiteral
	^(self isMemberOf: Array) and: [
	self allSatisfy: #isLiteral]
%
category: '*Values-printing'
method: Array
literalString
	| wst |
	wst := String new writeStream.
	wst nextPutAll: '#('.
	self do: [:elem | wst nextPutAll: elem asSource] separatedBy: [wst space].
	wst nextPut: $).
	^wst contents
%
category: '*Values-durations'
method: Number
nanoseconds
	^Duration nanoSeconds: self
%
category: '*Values-printing'
method: Boolean
literalString
	^self printString
%
category: '*Values-printing'
method: CharacterCollection
literalString
	^self printString
%
category: '*Values-printing'
method: SmallInteger
literalString
	^self printString
%
category: '*Values-printing'
method: LargeInteger
literalString
	^self printString
%
category: '*Values-printing'
method: Character
literalString
	^self printString
%
category: '*Values-printing'
method: UndefinedObject
literalString
	^self printString
%
category: '*Values-printing'
method: BinaryFloat
literalString
	^self asStringLocaleC
%
category: '*Values-printing'
method: DecimalFloat
literalString
	^self asStringLocaleC
%
category: '*Values-printing'
method: FixedPoint
literalString
	^self asStringLocaleC
%
category: '*Values-printing'
method: ScaledDecimal
literalString
	^self asStringLocaleC
%
category: '*Values-converting'
method: Color
asColorValue
	^ColorValue fromColor: self
%
category: '*Values-accessing'
method: Class
nameRelativeTo: targetClass
	"<String>"
	"self nameRelativeTo: Object"

	(targetClass isInScope: self) ifTrue: [
		^self name asString].
	^self nameAccessExpression: self namespacePath
%
method: Class
definitionDictionary
	"<Dictionary | nil>
	symbol dictionary in which the receiver is defined or nil if the receiver is in the scope of the ProfileUsers symbolDict"

	| symlist |
	self namespacePath isEmpty ifTrue: [
		^nil].
	symlist := GsSession currentSession.
	self namespacePath do: [:symbol |
		symlist := (symlist resolveSymbol: symbol)
			ifNotNil: [:assoc |
			SymbolList with: assoc value]
			ifNil: [
			^nil]].
	^symlist
%
method: Class
nameAccessExpression: aPath
	"<String>"

	aPath isEmpty ifTrue: [
		^self name asString].
	aPath size = 1 ifTrue: [
		^aPath first asString].
	^'(' , (self nameAccessExpression: (aPath allButLast: 1)) , ' at: ' , aPath last printString , ')'
%
method: Class
namespacePath
	"<Array of: Symbol>
	the list of symbol dictionary names where the receiver is defined"

	^self namespacePathsAtClasses at: self ifAbsent: [#()]
%
method: Class
namespacePath: anArrayOfSymbols
	self namespacePathsAtClasses at: self put: anArrayOfSymbols
%
category: '*Values-testing'
method: Class
isInScope: aClass
	"<Boolean>
	true if aClass is visible by the receiver - aClass can be used in the source without namespace qualifier.
	false when aClass cannot be seen by the receiver - use the fullName"

	self definitionDictionary ifNotNil: [:symlist |
		(symlist resolveSymbol: aClass name) ifNotNil: [:entity |
			^entity value == aClass]].
	^(GsSession currentSession resolveSymbol: aClass name) notNil
%
category: '*Values-instance creation'
classmethod: Date
d: dayInteger m: monthInteger y: yearInteger
	^self newDay: dayInteger monthNumber: monthInteger year: yearInteger
%
category: '*Values-accessing'
classmethod: Date
nameRelativeTo: targetClass
	"for all technical subclasses.
	Save, because Date is global"

	^'Date'
%
category: '*Values-printing'
method: Date
printvalueWith: printer
	| wst |
	wst := WriteStream on: (String new: 25).
	wst
		nextPut: $(;
		nextPutAll: (printer classnameOf: self);
		nextPutAll: ' d: ';
		nextPutAll: self dayOfMonth printString;
		nextPutAll: ' m: ';
		nextPutAll: self monthIndex printString;
		nextPutAll: ' y: ';
		nextPutAll: self year printString;
		nextPut: $).
	^LiteralPrintvalue string: wst contents
%
category: '*Values-printing'
method: Dictionary
keysForPrinting
	^[self keys asSortedCollection] on: Error do: [:ex | ex return: self keys]
%
method: Dictionary
printargumentsWith: aPrinter
	^self keysForPrinting collect: [:key |
		DictionaryPrintargument
			name: (key printvalueWith: aPrinter)
			value: ((self at: key) printvalueWith: aPrinter)]
%
method: Dictionary
printvalueWith: printer
	^DictionaryPrintvalue arguments: (self printargumentsWith: printer)
%
category: '*Values-instance creation'
classmethod: Duration
nanoseconds: aNumber
	^self nanoSeconds: aNumber
%
classmethod: Duration
nanoseconds: aNumber
	^self nanoSeconds: aNumber
%
category: '*Values-printing'
method: Duration
printvalueWith: printer
	| wst |
	wst := WriteStream on: (String new: 25).
	wst
		nextPut: $(;
		nextPutAll: (printer classnameOf: self);
		nextPutAll: ' nanoseconds: ';
		nextPutAll: self asNanoseconds printString;
		nextPut: $).
	^LiteralPrintvalue string: wst contents
%
category: '*Values-converting'
method: Duration
asNanoseconds
	^self asNanoSeconds
%
category: '*Values-named values'
classmethod: Object
namedValueNames
	"<Array of: Symbol>
	names to print for special known values"
	
	^#()
%
classmethod: Object
nameOrNilFor: aValue
	"<Symbol | nil>"

	^self namesByValues at: aValue ifAbsent: [nil]
%
classmethod: Object
namesByValues
	"<Dictionary key: Value value: Symbol>"

	^Value namedValuesAt: self ifAbsentPut: [self newNamesByValues]
%
classmethod: Object
newNamesByValues
	"<Dictionary key: Value value: Symbol>"

	| dict |
	dict := Valuemap new: self namedValueNames size.
	self namedValueNames do: [:symbol | dict at: (self perform: symbol) put: symbol].
	^dict
%
category: '*Values-comparing'
method: Object
isEqualValue: anObject
	^self = anObject
%
category: '*Values-printing'
method: Object
asDescription
	"<Text>
	produces a text equivalent to the soure with bold leaf values"

	^self asDescriptionFor: self class
%
method: Object
asDescriptionFor: targetClass
	"<Text>
	produces a text equivalent to the source"

	| printer printvalue |
	printer := ValuePrinter newFor: targetClass.
	printvalue := self printvalueWith: printer.
	^printvalue description
%
method: Object
asSource
	"<String>
	produces a string which can be evaluated in the context of the receiver class to an object equivalent to the receiver"

	^self asSourceFor: self class
%
method: Object
asSourceFor: targetClass
	"<String>
	produces a string which can be evaluated in the context of targetClass to an object equivalent to the receiver"

	| printer printvalue |
	printer := ValuePrinter newFor: targetClass.
	printvalue := self printvalueWith: printer.
	^printvalue sourceWithPrinter: printer
%
method: Object
printvalueWith: printer
	^LiteralPrintvalue string: (self literalString ifNil: [self printString])
%
method: Object
literalString
	"<String | nil>
	answers a string iff the receiver can be printed so that the compiler reconstructs the receiver from it"

	^nil
%
category: '*Values-accessing'
method: Object
namespacePathsAtClasses
	^PDFtalkLibrary at: #namespacePathsAtClasses
%
category: '*Values-testing'
method: Object
isLiteral
	^self literalString notNil
%
category: '*Values-actions'
method: Object
beImmutable
	^self immediateInvariant
%
method: Object
beMutable
	"do nothing on Gemstone"

%
category: '*Values-printing'
method: Point
printvalueWith: printer
	| string |
	string := (self x asSourceFor: printer target) , ' @ ' , (self y asSourceFor: printer target).
	^LiteralPrintvalue string: string
%
category: '*Values-printing'
method: Rectangle
printvalueWith: printer
	| wst |
	wst := WriteStream on: (String new: 25).
	wst
		nextPut: $(;
		nextPutAll: (self origin asSourceFor: printer target);
		nextPutAll: ' corner: ';
		nextPutAll: (self corner asSourceFor: printer target);
		nextPut: $).
	^LiteralPrintvalue string: wst contents
%
category: '*Values-printing'
method: SequenceableCollection
printvalueWith: printer
	self isLiteral ifTrue: [
		^LiteralPrintvalue string: self literalString].
	^ArrayPrintvalue arguments: (self collect: [:item | item printvalueWith: printer])
%
category: '*Values-instance creation'
classmethod: Time
h: hoursInteger
	^self h: hoursInteger m: 0 s: 0
%
classmethod: Time
h: hoursInteger m: minutesInteger
	^self h: hoursInteger m: minutesInteger s: 0
%
classmethod: Time
h: hoursInteger m: minutesInteger s: secondsInteger
	^self fromSeconds: hoursInteger * 3600 + (minutesInteger * 60) + secondsInteger
%
classmethod: Time
zero
	^self h: 0
%
category: '*Values-accessing'
classmethod: Time
nameRelativeTo: targetClass
	"for all technical subclasses.
	Save, because Time is global"

	^'Time'
%
category: '*Values-printing'
method: Time
printvalueWith: printer
	| wst |
	wst := WriteStream on: (String new: 25).
	(self hours isZero and: [
	self minutes isZero and: [
	self seconds isZero]]) ifTrue: [
			wst
				nextPutAll: (printer classnameOf: self);
				nextPutAll: ' zero'.
			^LiteralPrintvalue string: wst contents].
	wst
		nextPut: $(;
		nextPutAll: (printer classnameOf: self);
		nextPutAll: ' h: ';
		nextPutAll: self hours printString.
	(self minutes isZero and: [
	self seconds isZero]) ifTrue: [
			wst nextPut: $).
			^LiteralPrintvalue string: wst contents].
	wst
		nextPutAll: ' m: ';
		nextPutAll: self minutes printString.
	self seconds isZero ifTrue: [
		wst nextPut: $).
		^LiteralPrintvalue string: wst contents].
	wst
		nextPutAll: ' s: ';
		nextPutAll: self seconds printString;
		nextPut: $).
	^LiteralPrintvalue string: wst contents
%
DoIt
	| dict policy |
	dict := SymbolDictionary new.
	dict at: #UNWRITABLE put: dict.
	dict immediateInvariant.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: dict.
	policy externalSymbolList: Array new.
	policy enable.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #PDFtalk.
	dict at: #comment put: 'The runtime code for writing and reading PDF files'.
	dict at: #developmentPrerequisites put: #(#(#any 'Compression-ZLib' '') #(#any 'MD5' '') #(#any 'Values' '')).
	dict at: #notice put: 'The MIT License

Copyright Â© 2011-2018 Christian Haider

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.'.
	dict at: #packageName put: 'PDFtalk'.
	dict at: #padded put: true.
	dict at: #parcelName put: 'PDFtalk'.
	dict at: #prerequisiteDescriptions put: #(#(#name 'Compression-ZLib') #(#name 'MD5') #(#name 'Values' #componentType #package)).
	dict at: #prerequisiteParcels put: #(#('Compression-ZLib' '') #('MD5' '') #('Values' '')).
	dict at: #storeVersion put: '2.5.3.0'.
	dict at: #versionSelectionBlock put: '[:parcelName :versionString :requiredVersionString |
	parcelName ~= ''Values'' or: [
	versionString = ''image'' or: [
	(versionString readStream upTo: $.) asNumber >= 3]]]'.
	dict at: #codeComponents put: SymbolDictionary new.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #PostScript.
	dict at: #comment put: 'PostScript language interpreter

The central class is PostScript.Interpreter. 
You can send #run: with a PostScript code string to the class or an instance which returns an instance which consumed and processed the code given.

Example:
| ps |
ps := PostScript.Interpreter run: ''3 4 add''.
ps run: ''dup mul''.
ps stack top. "is 49"

The interpreter provides access to its state:
the 3 stacks: #stack (or #operandStack), #dictionaryStack and #executionStack,
the #resources and the #scanner

Restrictions:
- no support for graphics operators
- local / global differentiation is not implemented

See https://wiki.pdftalk.de/doku.php?id=postscript for more information'.
	dict at: #developmentPrerequisites put: #(#(#any 'Values' '') #(#any 'URISupport' '')).
	dict at: #isFunctional put: true.
	dict at: #notice put: 'The MIT License

Copyright Â© 2020 Christian Haider

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.'.
	dict at: #prerequisiteDescriptions put: #(#(#name 'Values' #componentType #package) #(#name 'URISupport' #componentType #package)).
	dict at: #prerequisiteParcels put: #(#('Values' '') #('URISupport' '')).
	dict at: #storeVersion put: '2.5.0.1'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
# Define namespace PostScript
DoIt
	| newDictionary |
	newDictionary := SymbolDictionary new.
	newDictionary at: #PostScript put: newDictionary.
	PDFtalkLibrary at: #PostScript put: newDictionary
%
DoIt
System myUserProfile insertDictionary: PostScript at: 1.
%
# Define class PSDictionary
DoIt
Valuemap
	indexableSubclass: 'PSDictionary'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	PSDictionary category: 'PostScript'.
	PSDictionary comment: 'A PostScript dictionary

The keys are names.
It may contain itself as a value of a key'.
	PSDictionary namespacePath: #(#PostScript).
%
# Define class ProcSet
DoIt
Object
	subclass: 'ProcSet'
	instVarNames: #(action)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	ProcSet category: 'PostScript'.
	ProcSet comment: 'Library

#findresource returns a dictionary of the library.

Holds a one argument block as action.
The action is executed with an interpreter as argument.'.
	ProcSet namespacePath: #(#PostScript).
%
# Define class PostScriptError
DoIt
Error
	subclass: 'PostScriptError'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	PostScriptError category: 'PostScript'.
	PostScriptError comment: 'PostScript error'.
	PostScriptError namespacePath: #(#PostScript).
%
# Define class Unmatchedmark
DoIt
PostScriptError
	subclass: 'Unmatchedmark'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Unmatchedmark category: 'PostScript'.
	Unmatchedmark comment: 'Error when a mark operation does not find a mark on the operand stack'.
	Unmatchedmark namespacePath: #(#PostScript).
%
# Define class Interpreter
DoIt
Object
	subclass: 'Interpreter'
	instVarNames: #(scanner operandStack dictionaryStack executionStack resources properties)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Interpreter category: 'PostScript'.
	Interpreter comment: 'PostScript interpreter'.
	Interpreter namespacePath: #(#PostScript).
%
# Define class Stackunderflow
DoIt
PostScriptError
	subclass: 'Stackunderflow'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Stackunderflow category: 'PostScript'.
	Stackunderflow comment: 'Error when requesting an object from an empty stack'.
	Stackunderflow namespacePath: #(#PostScript).
%
# Define class Stack
DoIt
Object
	subclass: 'Stack'
	instVarNames: #(objects)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Stack category: 'PostScript'.
	Stack comment: 'A stack supporting basic operations for the PostScript interpreter

The objects are held in an OrderedCollection named #objects'.
	Stack namespacePath: #(#PostScript).
%
# Define class Syntaxerror
DoIt
PostScriptError
	subclass: 'Syntaxerror'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Syntaxerror category: 'PostScript'.
	Syntaxerror comment: 'The PostScript source does not conform with the syntax'.
	Syntaxerror namespacePath: #(#PostScript).
%
# Define class CharacterNames
DoIt
Object
	subclass: 'CharacterNames'
	instVarNames: #()
	classVars: #(NameToUnicode UnicodeToName)
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	CharacterNames category: 'PostScript'.
	CharacterNames comment: 'Provides the mapping of PostScript character names to Unicode'.
	CharacterNames namespacePath: #(#PostScript).
%
# Define class ControlNotification
DoIt
Notification
	subclass: 'ControlNotification'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	ControlNotification category: 'PostScript'.
	ControlNotification comment: 'Notifies the PostScript interpreter about the flow of control'.
	ControlNotification namespacePath: #(#PostScript).
%
# Define class ExitNotification
DoIt
ControlNotification
	subclass: 'ExitNotification'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	ExitNotification category: 'PostScript'.
	ExitNotification comment: 'terminates execution of the innermost, dynamically enclosing instance of a looping context without regard to lexical relationship.
A looping context is a procedure invoked repeatedly by one of the following control operators:
	forall 
	repeat
	for 
	loop 
	pathforall
	filenameforall 
	resourceforall
	cshow 
	kshow 

exit pops the execution stack down to the level of that operator.
The interpreter then resumes execution at the next object in normal sequence after that operator.'.
	ExitNotification namespacePath: #(#PostScript).
%
# Define class Scanner
DoIt
Object
	subclass: 'Scanner'
	instVarNames: #(stream specialActionsByCharacter)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Scanner category: 'PostScript'.
	Scanner comment: 'Scanner reads PostScript objects from a PostScript source stream'.
	Scanner namespacePath: #(#PostScript).
%
# Define class ObjectWrapper
DoIt
Object
	subclass: 'ObjectWrapper'
	instVarNames: #(object)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	ObjectWrapper category: 'PostScript'.
	ObjectWrapper comment: 'Wrapper for native objects with additional PostScript behavior'.
	ObjectWrapper namespacePath: #(#PostScript).
%
# Define class ExecutableString
DoIt
ObjectWrapper
	subclass: 'ExecutableString'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	ExecutableString category: 'PostScript'.
	ExecutableString comment: 'PostScript string with the executable attribute = true'.
	ExecutableString namespacePath: #(#PostScript).
%
# Define class Procedure
DoIt
Object
	subclass: 'Procedure'
	instVarNames: #(objects)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Procedure category: 'PostScript'.
	Procedure comment: 'PLRM.pdf 3.2.2 p.46'.
	Procedure namespacePath: #(#PostScript).
%
# Define class Category
DoIt
Object
	subclass: 'Category'
	instVarNames: #(implementation instances)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Category category: 'PostScript'.
	Category comment: 'A resource category defining a resource type and holding instances of it

The implementation dictionary contains the 5 procedures dealing with resources among other things and
a list of all instances of the resource.


From PLRM3-0.pdf 3.9.2 "Resource Categories" pp.104:

Resource categories are identified by name. Tables 3.7, 3.8, and 3.9 list the standard
resource categories. Within a given category, every resource instance that resides
in VM is of a particular type and has a particular intended interpretation or
use.

Regular resources are those whose instances are ordinary useful objects, such as
font or halftone dictionaries. For example, a program typically uses the result returned
by findresource as an operand of some other operator, such as scalefont
or sethalftone.

Implicit resources represent some built-in capability of the PostScript interpreter.
For example, the instances of the Filter category are filter names, such as
ASCII85Decode and CCITTFaxDecode, that are passed directly to the filter operator.
For such resources, the findresource operator returns only its name operand.
However, resourceforall and resourcestatus are useful for inquiring about the
availability of capabilities such as specific filter algorithms.'.
	Category namespacePath: #(#PostScript).
%
# Define class StopNotification
DoIt
ControlNotification
	subclass: 'StopNotification'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	StopNotification category: 'PostScript'.
	StopNotification comment: 'terminates execution of the innermost, dynamically enclosing instance of a stopped context, without regard to lexical relationship. 
A stopped context is a procedure or other executable object invoked by the stopped operator. 
stop pops the execution stack down to the level of the stopped operator. 
The interpreter then pushes the boolean value true on the operand stack and resumes execution at the next object in normal sequence after the stopped operator. 
It thus appears that stopped returned the value true, whereas it normally returns false.'.
	StopNotification namespacePath: #(#PostScript).
%
# Define class Mark
DoIt
Object
	subclass: 'Mark'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Mark category: 'PostScript'.
	Mark comment: 'PLRM.pdf 3.3.12 p.58'.
	Mark namespacePath: #(#PostScript).
%
# Define class EndOfTokenStreamNotification
DoIt
Notification
	subclass: 'EndOfTokenStreamNotification'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	EndOfTokenStreamNotification category: 'PostScript'.
	EndOfTokenStreamNotification comment: 'End of stream notification returning nil when not handled

The same as EndOfStreamNotification of VW.
Created my own class for compatibility with Gemstone which does not have a EndOfStreamNotification'.
	EndOfTokenStreamNotification namespacePath: #(#PostScript).
%
# Define class LiteralName
DoIt
ObjectWrapper
	subclass: 'LiteralName'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	LiteralName category: 'PostScript'.
	LiteralName comment: 'PLRM.pdf 3.2.2 p.45'.
	LiteralName namespacePath: #(#PostScript).
%
# Define class BuildIn
DoIt
ProcSet
	subclass: 'BuildIn'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	BuildIn category: 'PostScript'.
	BuildIn comment: 'build-in operations'.
	BuildIn namespacePath: #(#PostScript).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| package policy |
	package := GsPackageLibrary createPackageNamed: #SessionMethods.
	GsPackageLibrary installPackage: package.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: FileInSymbolDictionary.
	policy externalSymbolList: (GsSession currentSession symbolList asArray copyWithout: FileInSymbolDictionary).
	policy enable.
%
category: '*PostScript-accessing'
method: ImproperOperation
object
	^object
%
category: '*PostScript-accessing'
method: LookupError
key
	^key
%
category: '*PostScript-accessing'
method: Array
postScriptType
	^#arraytype
%
category: '*PostScript-converting'
method: Array
asPostScriptExecutable
	^(PostScript at: #Procedure) withAll: self
%
category: '*PostScript-double dispatching'
method: Array
copyFor: aPostScriptInterpreter
	aPostScriptInterpreter pop doWithIndex: [:value :i | self at: i put: value copy].
	aPostScriptInterpreter push: self
%
method: Array
forAllDo: proc for: aPostScriptInterpreter
	self do: [:value |
		aPostScriptInterpreter push: value.
		proc doIn: aPostScriptInterpreter]
%
method: Array
get: index for: aPostScriptInterpreter
	^self at: index + 1
%
method: Array
put: any at: index
	"array index any put â
	Put any into array at index"

	self at: index + 1 put: any
%
category: '*PostScript-testing'
method: Array
postScriptEqual: otherCollection 
	"Other composite objects (arrays and dictionaries) are equal only if they share the same value.
	Separate values are considered unequal, even if all the components of those values are the same."

	^self == otherCollection
%
category: '*PostScript-accessing'
method: Boolean
postScriptType
	^#booleantype
%
category: '*PostScript-converting'
method: Boolean
asPostScriptString
	^self printPostScript
%
category: '*PostScript-logical operations'
method: Boolean
postScriptAnd: aBoolean
	^self & aBoolean
%
method: Boolean
postScriptNot
	^self not
%
method: Boolean
postScriptOr: aBoolean
	^self | aBoolean
%
method: Boolean
postScriptXor: aBoolean
	^self xor: aBoolean
%
category: '*PostScript-testing'
method: Character
isPostScriptWhitespace
	^#(0 9 10 12 13 32) includes: self asInteger
%
category: '*PostScript-accessing'
method: Integer
postScriptType
	^#integertype
%
category: '*PostScript-bit manipulation'
method: Integer
postScriptAnd: anInteger
	^self bitAnd: anInteger
%
category: '*PostScript-double dispatching'
method: Integer
copyFor: aPostScriptInterpreter
	| elements |
	elements := OrderedCollection new.
	self timesRepeat: [elements add: aPostScriptInterpreter pop].
	elements reverse do: [:element | aPostScriptInterpreter push: element].
	elements reverse do: [:element | aPostScriptInterpreter push: element]
%
category: '*PostScript-logical operations'
method: Integer
postScriptNot
	^self bitInvert
%
method: Integer
postScriptOr: anInteger
	^self bitOr: anInteger
%
method: Integer
postScriptXor: anInteger
	^self bitXor: anInteger
%
category: '*PostScript-printing'
method: Integer
printPostScriptHexByte
	"<String[2]>
	padded to 2 characters
	the receiver is a byte, i.e. between 0 and 255"

	^'00' , (self printPostScriptRadix: 16) last: 2
%
method: Integer
printPostScriptOn: aStream
	self negative ifTrue: [
		aStream nextPut: $-.
		^self negated writeDecimalDigitsOn: aStream].
	self writeDecimalDigitsOn: aStream
%
method: Integer
printPostScriptRadix: radix
	"<String>"

	| chars wst num |
	self isZero ifTrue: [
		^'0'].
	chars := '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'.
	wst := String new writeStream.
	num := self.
	self negative ifTrue: [
		num := (2 raisedTo: 32) + self].
	[num isZero] whileFalse: [
		wst nextPut: (chars at: num \\ radix + 1).
		num := num // radix].
	^wst contents reverse
%
method: Integer
writeDecimalDigitsOn: aStream
	self >= 10 ifTrue: [
		self // 10 writeDecimalDigitsOn: aStream].
	aStream nextPut: ($0 asInteger + (self \\ 10)) asCharacter
%
category: '*PostScript-reading'
classmethod: Number
digitFor: aCharacter base: aBase
	"<Integer>
	anInteger is between 2 and 36"

	| digit |
	digit := self radixDigitFor: aCharacter.
	digit >= aBase ifTrue: [
		self error: aCharacter printString , ' is not a valid digit for base ' , aBase printString].
	^digit
%
classmethod: Number
postScriptIntegerFrom: aString base: aBase
	"<Integer>
	anInteger is between 2 and 36"

	^(aString asArray collect: [:char | self digitFor: char base: aBase]) inject: 0 into: [:number :digit |
		number * aBase + digit]
%
classmethod: Number
radixDigitFor: aCharacter
	| code |
	code := aCharacter asInteger.
	(code between: $0 asInteger and: $9 asInteger) ifTrue: [
		^code - $0 asInteger].
	(code between: $a asInteger and: $z asInteger) ifTrue: [
		^code - $a asInteger + 10].
	(code between: $A asInteger and: $Z asInteger) ifTrue: [
		^code - $A asInteger + 10].
	self error: 'illegal character for a radix number'
%
classmethod: Number
readDigitsFrom: aStream
	"<SequenceableCollection on: Integer[0..9]>
	read all decimal digits off aStream"

	| wst zeroCode |
	wst := Array new writeStream.
	zeroCode := $0 asInteger.
	[aStream atEnd] whileFalse: [
		(aStream peek between: $0 and: $9)
			ifTrue: [
			wst nextPut: aStream next asInteger - zeroCode]
			ifFalse: [
			^wst contents]].
	^wst contents
%
classmethod: Number
readPostScriptNumberFrom: aStream
	"<Number | nil>
	the sign has been consumed already"

	| number |
	number := (self readDigitsFrom: aStream) inject: 0 into: [:num :digit | num * 10 + digit].
	aStream atEnd ifTrue: [
		^number].
	(aStream peekFor: $#) ifTrue: [
		^self postScriptIntegerFrom: aStream upToEnd base: number].
	(aStream peekFor: $.) ifTrue: [
		| digits numerator denominator |
		digits := self readDigitsFrom: aStream.
		numerator := digits inject: 0 into: [:num :digit | num * 10 + digit].
		denominator := 10 raisedTo: digits size.
		number := number + (numerator / denominator).
		aStream atEnd ifTrue: [
			^number]].
	('eE' includes: aStream peek) ifTrue: [
		| exponent |
		aStream next.
		exponent := self readPostScriptSyntaxFrom: aStream.
		exponent ifNil: [
			^nil].
		^number * (10 raisedTo: exponent)].
	^nil
%
classmethod: Number
readPostScriptSyntaxFrom: aStream
	"<Number>
	a decimal number"

	| negative number |
	aStream peekFor: $+.
	negative := aStream peekFor: $-.
	number := self readPostScriptNumberFrom: aStream.
	negative ifTrue: [
		^number negated].
	^number
%
category: '*PostScript-accessing'
method: Number
postScriptType
	^#realtype
%
category: '*PostScript-comparing'
method: Number
postScriptGreaterEqual: aNumber
	^self >= aNumber
%
method: Number
postScriptGreaterThan: aNumber
	^self > aNumber
%
method: Number
postScriptLessEqual: aNumber
	^self <= aNumber
%
method: Number
postScriptLessThan: aNumber
	^self < aNumber
%
category: '*PostScript-converting'
method: Number
asPostScriptInteger
	^self truncated
%
method: Number
asPostScriptReal
	^self
%
method: Number
asPostScriptString
	^self printPostScript
%
category: '*PostScript-printing'
method: Number
postScriptEpsilon
	"Nonzero real values closest to the next integer (approximate).
Values closer than these are automatically converted to the integer."
	"Float fmin is 1.4013e-45"
 
	^1.175d-38
%
method: Number
postScriptSignificantDecimals
	"Significant decimal digits of precision (approximate)."

	^8
%
method: Number
printPostScriptOn: aStream
	| integer fraction rounded precision |
	self abs < self postScriptEpsilon ifTrue: [
		aStream nextPut: $0.
		^self].
	self negative ifTrue: [
		| wst string |
		wst := String new writeStream.
		self negated printPostScriptOn: wst.
		string := wst contents.
		string = '0' ifTrue: [
			aStream nextPut: $0.
			^self].
		aStream nextPut: $-.
		aStream nextPutAll: string.
		^self].
	integer := self truncated.
	integer printPostScriptOn: aStream.
	fraction := self - integer.
	precision := 10 raisedTo: self postScriptSignificantDecimals.
	rounded := (fraction * precision) rounded.
	rounded strictlyPositive ifTrue: [
		aStream nextPut: $..
		rounded / precision writeFractionDecimalsOn: aStream]
%
method: Number
writeFractionDecimalsOn: aStream
	| tenfold digit |
	self strictlyPositive ifFalse: [
		^self].
	tenfold := self * 10.
	digit := tenfold truncated.
	aStream nextPut: ($0 asInteger + digit) asCharacter.
	tenfold - digit writeFractionDecimalsOn: aStream
%
category: '*PostScript-accessing'
method: Object
postScriptKey
	^self
%
method: Object
postScriptType
	^self error: 'no known PostScript type'
%
category: '*PostScript-actions'
method: Object
doIn: aPostScriptInterpreter
	"execute if executable"

	self processIn: aPostScriptInterpreter
%
method: Object
processIn: aPostScriptInterpreter
	aPostScriptInterpreter push: self.
	aPostScriptInterpreter hasMark ifFalse: [
		aPostScriptInterpreter trace: self]
%
category: '*PostScript-comparing'
method: Object
postScriptEqual: anObject
	^self = anObject
%
category: '*PostScript-converting'
method: Object
asPostScriptExecutable
	^self
%
method: Object
asPostScriptLiteral
	^self
%
method: Object
asPostScriptString
	^'--nostringval--'
%
category: '*PostScript-printing'
method: Object
prettyPrintPSOn: aStream indent: anInteger
	"write the receiver as PostScript to aStream"

	self printOn: aStream
%
method: Object
prettyPrintString
	"<String>
	the object as PostScript source with propper indentation"

	| wst |
	wst := String new writeStream.
	self prettyPrintPSOn: wst indent: 0.
	^wst contents
%
method: Object
printPostScript
	"<String>"

	| aStream |
	aStream := WriteStream on: (String new: 16).
	self printPostScriptOn: aStream.
	^aStream contents
%
method: Object
printPostScriptOn: aStream
	self printOn: aStream
%
category: '*PostScript-printing'
method: SequenceableCollection
prettyPrintPSOn: aStream indent: anInteger
	self printPostScriptOn: aStream
%
method: SequenceableCollection
printPostScriptOn: aStream
	aStream nextPutAll: '['.
	self do: [:value | value printPostScriptOn: aStream] separatedBy: [aStream space].
	aStream nextPutAll: ']'
%
category: '*PostScript-instance creation'
classmethod: String
decodeASCII85Group: inputString
	"<ByteString[4]>"

	| encodedString number wst |
	inputString = 'z' ifTrue: [
		^self new: 4 withAll: 0 asCharacter].
	inputString size = 1 ifTrue: [
		^UserDefinedError raiseSignal: 'Decoding error in ASCII85 encoded string'].
	encodedString := inputString.
	inputString size < 5 ifTrue: [
		encodedString := encodedString , (self new: 5 - inputString size withAll: $u)].
	number := encodedString inject: 0 into: [:num :char |
		| int |
		int := char asInteger.
		(int between: 33 and: 117) ifFalse: [
			^UserDefinedError raiseSignal: 'Illegal character in ASCII85 encoded string'].
		num * 85 + (int - 33)].
	(number > 16rFFFFFFFF and: [
	inputString size = 5]) ifTrue: [
			^UserDefinedError raiseSignal: 'Decoding error in ASCII85 encoded string'].
	wst := (self new: 4) writeStream.
	4 timesRepeat: [
		wst nextPut: (number rem: 256) asCharacter.
		number := number quo: 256].
	^wst contents reverse first: inputString size - 1
%
classmethod: String
fromASCII85: anASCII85String
	| wst rst |
	wst := (self new: (anASCII85String size * 4 / 5) ceiling) writeStream.
	rst := anASCII85String readStream.
	[rst atEnd] whileFalse: [
		wst nextPutAll: (self decodeASCII85Group: (self nextEncodedASCII85GroupFrom: rst))].
	^wst contents
%
classmethod: String
nextEncodedASCII85GroupFrom: aReadStream
	"<String>"

	| wst |
	[aReadStream peek isPostScriptWhitespace] whileTrue: [aReadStream next].
	aReadStream peek == $z ifTrue: [
		^self with: aReadStream next].
	wst := (self new: 5) writeStream.
	[
	aReadStream atEnd not and: [
	wst position < 5]] whileTrue: [
			| char |
			char := aReadStream next.
			(char = 16r7E asCharacter and: [
			[aReadStream peek isPostScriptWhitespace] whileTrue: [aReadStream next].
			aReadStream peek = 16r3E asCharacter]) ifTrue: [
					aReadStream setToEnd.
					^wst contents].
			char isPostScriptWhitespace ifFalse: [
				wst nextPut: char]].
	^wst contents
%
category: '*PostScript-accessing'
method: String
postScriptType
	^#stringtype
%
category: '*PostScript-comparing'
method: String
postScriptGreaterEqual: aString
	"<Boolean>
	the strings are compared element by element, treating the elements as integers in the range 0 to 255."

	| rst |
	rst := aString readStream.
	self do: [:char |
		| char2 |
		rst atEnd ifTrue: [
			^true].
		char2 := rst next.
		char > char2
			ifTrue: [
			^true]
			ifFalse: [
			char < char2 ifTrue: [
				^false]]].
	^true
%
method: String
postScriptGreaterThan: aString
	"<Boolean>
	the strings are compared element by element, treating the elements as integers in the range 0 to 255."

	| rst |
	rst := aString readStream.
	self do: [:char |
		| char2 |
		rst atEnd ifTrue: [
			^(self size = aString size) not].
		char2 := rst next.
		char > char2
			ifTrue: [
			^true]
			ifFalse: [
			char < char2 ifTrue: [
				^false]]].
	^false
%
method: String
postScriptLessEqual: aString
	"<Boolean>
	the strings are compared element by element, treating the elements as integers in the range 0 to 255."

	| rst |
	rst := aString readStream.
	self do: [:char |
		| char2 |
		rst atEnd ifTrue: [
			^self size = aString size].
		char2 := rst next.
		char < char2
			ifTrue: [
			^true]
			ifFalse: [
			char > char2 ifTrue: [
				^false]]].
	^true
%
method: String
postScriptLessThan: aString
	"<Boolean>
	the strings are compared element by element, treating the elements as integers in the range 0 to 255."

	| rst |
	rst := aString readStream.
	self do: [:char |
		| char2 |
		rst atEnd ifTrue: [
			^false].
		char2 := rst next.
		char < char2
			ifTrue: [
			^true]
			ifFalse: [
			char > char2 ifTrue: [
				^false]]].
	^false
%
category: '*PostScript-converting'
method: String
asASCII85
	"<String>"

	| wst rem last rst |
	wst := (String new: (self size * 5 / 4) ceiling + 2) writeStream.
	rem := self size rem: 4.
	last := rem isZero
		ifTrue: [self class new]
		ifFalse: [self last: rem].
	rst := (self allButLast: rem) readStream.
	[rst atEnd] whileFalse: [wst nextPutAll: (rst next: 4) encodedASCII85Group].
	last isEmpty ifFalse: [
		| input output |
		input := last , (self class new: 4 - last size withAll: 0 asCharacter).
		output := input encodedASCII85Group.
		output = 'z' ifTrue: [
			output := '!!!!!'].
		wst nextPutAll: (output first: last size + 1)].
	wst
		nextPut: 16r7E asCharacter;
		nextPut: 16r3E asCharacter.
	^wst contents
%
method: String
asOctalString: char
	| numberString |
	numberString := char asInteger printStringRadix: 8.
	^'\' , (self class new: 3 - numberString size withAll: $0) , numberString
%
method: String
asPostScripName
	"<Symbol | LiteralName | nil>"

	^(PostScript at: #LiteralName) on: self asSymbol
%
method: String
asPostScriptExecutable
	^(PostScript at: #ExecutableString) on: self
%
method: String
asPostScriptInteger
	"<Integer | nil>"

	^[((PostScript at: #Scanner) on: self) nextPostScriptObject truncated] on: (PostScript at: #EndOfTokenStreamNotification) do: [:ex |
		ex return: nil]
%
method: String
asPostScriptReal
	"<Number | nil>"

	^[((PostScript at: #Scanner) on: self) nextPostScriptObject] on: (PostScript at: #EndOfTokenStreamNotification) do: [:ex |
		ex return: nil]
%
method: String
asPostScriptString
	^self printPostScript
%
method: String
asProcedure
	"<Procedure>"

	^(PostScript at: #Procedure) source: self
%
method: String
encodedASCII85Group
	"<ByteString[5]>
	the receiver is a fourByteString"

	| number wst |
	number := self inject: 0 into: [:num :char | num * 256 + char asInteger].
	number isZero ifTrue: [
		^'z'].
	wst := (self class new: 5) writeStream.
	5 timesRepeat: [
		wst nextPut: ((number rem: 85) + 33) asCharacter.
		number := number quo: 85].
	^wst contents reverse
%
category: '*PostScript-double dispatching'
method: String
copyFor: aPostScriptInterpreter
	aPostScriptInterpreter pop doWithIndex: [:char :i | self at: i put: char].
	aPostScriptInterpreter push: self
%
method: String
forAllDo: proc for: aPostScriptInterpreter
	self do: [:char |
		aPostScriptInterpreter push: char asInteger.
		proc doIn: aPostScriptInterpreter]
%
method: String
get: index for: aPostScriptInterpreter
	"<Integer>"

	^(self at: index + 1) asInteger
%
method: String
put: int at: index
	"string index int put â
	Put int into string at index"

	self at: index + 1 put: int asCharacter
%
category: '*PostScript-printing'
method: String
printPostScriptOn: aStream
	aStream nextPutAll: '('.
	self do: [:char |
		(char asInteger between: Character space asInteger and: 126)
			ifTrue: [
			aStream nextPut: char]
			ifFalse: [
			aStream nextPutAll: (self asOctalString: char)]].
	aStream nextPutAll: ')'
%
category: '*PostScript-accessing'
method: Symbol
postScriptType
	^#operatortype
%
category: '*PostScript-actions'
method: Symbol
processIn: interpreter
	(interpreter valueAt: self) doIn: interpreter
%
category: '*PostScript-converting'
method: Symbol
asPostScriptExecutable
	^self
%
category: '*PostScript-printing'
method: Symbol
prettyPrintPSOn: aStream indent: anInteger
	self printOn: aStream
%
method: Symbol
printPostScriptOn: aStream
	aStream nextPutAll: self asString
%
category: '*PostScript-accessing'
method: UndefinedObject
postScriptType
	^#nulltype
%
category: '*PostScript-printing'
method: UndefinedObject
printPostScriptOn: aStream
	aStream nextPutAll: 'null'
%
DoIt
	| dict policy |
	dict := SymbolDictionary new.
	dict at: #UNWRITABLE put: dict.
	dict immediateInvariant.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: dict.
	policy externalSymbolList: Array new.
	policy enable.
%
DoIt
System myUserProfile insertDictionary: PostScript at: 1.
%
category: 'Arithmetic and Math'
classmethod: BuildIn
abs
	"num1 abs num2
	Return absolute value of num1"

	<operator>
	^self action: [:ps | ps push: ps pop abs]
%
classmethod: BuildIn
add
	"num1 num2 add sum
	Return num1 plus num2"

	<operator>
	^self action: [:ps | ps push: ps pop + ps pop]
%
classmethod: BuildIn
atan
	"num den atan angle
	Return arctangent of num/den in degrees"

	<operator>
	^self action: [:ps |
		| den num |
		den := ps pop.
		num := ps pop.
		ps push: (den isZero
			ifTrue: [
			num positive
				ifTrue: [90]
				ifFalse: [270]]
			ifFalse: [
			(num / den) arcTan radiansToDegrees])]
%
classmethod: BuildIn
ceiling
	"num1 ceiling num2
	Return ceiling of num1"

	<operator>
	^self action: [:ps | ps push: ps pop ceiling]
%
classmethod: BuildIn
cos
	"angle cos real
	Return cosine of angle degrees"

	<operator>
	^self action: [:ps | ps push: ps pop asFloat degreesToRadians cos]
%
classmethod: BuildIn
div
	"num1 num2 div quotient
	Return num1 divided by num2"

	<operator>
	^self action: [:ps |
		| div |
		div := ps pop.
		ps push: ps pop / div]
%
classmethod: BuildIn
exp
	"base exponent exp real
	Raise base to exponent power"

	<operator>
	^self action: [:ps |
		| base exponent |
		exponent := ps pop.
		base := ps pop.
		ps push: (base raisedTo: exponent)]
%
classmethod: BuildIn
floor
	"num1 floor num2
	Return floor of num1"

	<operator>
	^self action: [:ps | ps push: ps pop floor]
%
classmethod: BuildIn
idiv
	"int1 int2 idiv quotient
	Return int1 divided by int2"

	<operator>
	^self action: [:ps |
		| div |
		div := ps pop.
		ps push: (ps pop / div) truncated]
%
classmethod: BuildIn
ln
	"num ln real
	Return natural logarithm (base e)"

	<operator>
	^self action: [:ps | ps push: ps pop asFloat ln]
%
classmethod: BuildIn
log
	"num log real
	Return common logarithm (base 10)"

	<operator>
	^self action: [:ps | ps push: (ps pop asFloat log: 10)]
%
classmethod: BuildIn
mod
	"int1 int2 mod remainder
	Return remainder after dividing int1 by int2"

	<operator>
	^self action: [:ps |
		| div |
		div := ps pop.
		ps push: (ps pop rem: div)]
%
classmethod: BuildIn
mul
	"num1 num2 mul product
	Return num1 times num2"

	<operator>
	^self action: [:ps | ps push: ps pop * ps pop]
%
classmethod: BuildIn
neg
	"num1 neg num2
	Return negative of num1"

	<operator>
	^self action: [:ps | ps push: ps pop negated]
%
classmethod: BuildIn
rand
	"â rand int
	Generate pseudo-random integer.
	Returns a random integer in the range 0 to 2^31 - 1, produced by a pseudo-random number generator.
	The random number generatorâs state can be reset by srand and interrogated by rrand."

	<operator>
	^self action: [:ps | ps push: (ps random next * ((2 raisedTo: 31) - 1)) rounded]
%
classmethod: BuildIn
round
	"num1 round num2
	Round num1 to nearest integer"

	<operator>
	^self action: [:ps | ps push: ps pop rounded]
%
classmethod: BuildIn
rrand
	"â rrand int
	Return random number seed"

	<operator>
	^self action: [:ps | ps push: ps random fullState last first]
%
classmethod: BuildIn
sin
	"angle sin real
	Return sin of angle degrees"

	<operator>
	^self action: [:ps | ps push: ps pop asFloat degreesToRadians sin]
%
classmethod: BuildIn
sqrt
	"num sqrt real
	Return square root of num"

	<operator>
	^self action: [:ps | ps push: ps pop sqrt]
%
classmethod: BuildIn
srand
	"int srand â
	Set random number seed"

	<operator>
	^self action: [:ps | ps random seed: ps pop]
%
classmethod: BuildIn
sub
	"num1 num2 sub difference
	Return num1 minus num2"

	<operator>
	^self action: [:ps |
		| sub |
		sub := ps pop.
		ps push: ps pop - sub]
%
classmethod: BuildIn
truncate
	"num1 truncate num2
	Remove fractional part of num1"

	<operator>
	^self action: [:ps | ps push: ps pop truncated]
%
category: 'Array'
classmethod: BuildIn
aload
	"array aload any0 â¦ anyn-1 array
	Push all elements of array on stack"

	<operator>
	^self action: [:ps |
		| array |
		array := ps pop.
		array do: [:value | ps push: value].
		ps push: array]
%
classmethod: BuildIn
array
	"int array array
	Create array of length int"

	<operator>
	^self action: [:ps | ps push: (Array new: ps pop)]
%
classmethod: BuildIn
astore
	"any0 â¦ anyn-1 array astore array
	Pop elements from stack into array"

	<operator>
	^self action: [:ps |
		| array values |
		array := ps pop.
		values := (1 to: array size) collect: [:i | ps pop].
		(1 to: array size) with: values reverse do: [:i :value | array at: i put: value].
		ps push: array]
%
classmethod: BuildIn
endArray
	"mark obj0 â¦ objn-1 ] array
	End array construction"

	<operator: #']'>
	^self action: [:ps |
		ps push: ps popTillMark reverse asArray.
		ps trace: ps stack top]
%
classmethod: BuildIn
startArray
	"â [ mark
	Start array construction"

	<operator: #'['>
	^'mark' asProcedure
%
category: 'Collections'
classmethod: BuildIn
copyAction
	<operator: #copy>
	^self action: [:ps | ps pop copyFor: ps]
%
classmethod: BuildIn
forall
	"array proc forall â
	Execute proc for each element of array"

	<operator>
	^self action: [:ps |
		| proc |
		proc := ps pop.
		[ps pop forAllDo: proc for: ps] on: ExitNotification do: [:ex | ps executionStack popTill: proc]]
%
classmethod: BuildIn
get
	"array index get any
	Return array element indexed by index"

	<operator>
	^self action: [:ps |
		| index |
		index := ps pop.
		ps push: (ps pop get: index for: ps)]
%
classmethod: BuildIn
getinterval
	"array index count getinterval subarray
	Return subarray of array starting at index for count elements"

	<operator>
	^self action: [:ps |
		| count index |
		count := ps pop.
		index := ps pop.
		ps push: (ps pop copyFrom: index + 1 to: index + count)]
%
classmethod: BuildIn
length
	"array length int
	Return number of elements in array"

	<operator>
	^self action: [:ps | ps push: ps pop size]
%
classmethod: BuildIn
put
	"array index any put â
	Put any into array at index"

	<operator>
	^self action: [:ps |
		| any index |
		any := ps pop.
		index := ps pop.
		ps pop put: any at: index]
%
classmethod: BuildIn
putinterval
	"array1 index array2|packedarray2 putinterval â
	Replace subarray of array1 starting at index by array2|packedarray2"

	<operator>
	^self action: [:ps |
		| array2 index array1 |
		array2 := ps pop.
		index := ps pop.
		array1 := ps pop.
		array2 inject: index + 1 into: [:i :value |
			array1 at: i put: value.
			i + 1]]
%
category: 'Control'
classmethod: BuildIn
countexecstack
	"â countexecstack int
	Count elements on execution stack"

	<operator>
	^self action: [:ps | ps push: ps executionStack size]
%
classmethod: BuildIn
exec
	"any exec â
	Execute arbitrary object"

	<operator>
	^self action: [:ps | ps pop doIn: ps]
%
classmethod: BuildIn
execstack
	"array execstack subarray
	Copy execution stack into array"

	<operator>
	^self action: [:ps |
		| array |
		array := ps pop.
		1 to: (array size min: ps executionStack size) do: [:i |
			array at: i put: (ps executionStack at: i)].
		ps push: array reverse]
%
classmethod: BuildIn
exit
	"â exit â
	Exit innermost active loop"

	<operator>
	^self action: [:ps | ExitNotification raiseSignal]
%
classmethod: BuildIn
for
	"initial increment limit proc for â
	Execute proc with values from initial by steps of increment to limit"

	<operator>
	^self action: [:ps |
		| proc limit increment |
		proc := ps pop.
		limit := ps pop.
		increment := ps pop.
		[
		(ps pop to: limit by: increment) do: [:i |
			ps push: i.
			proc doIn: ps]] on: ExitNotification do: [:ex |
				ps executionStack popTill: proc]]
%
classmethod: BuildIn
if
	"bool proc if â
	Execute proc if bool is true"

	<operator>
	^self action: [:ps |
		| proc |
		proc := ps pop.
		ps pop ifTrue: [
			proc doIn: ps]]
%
classmethod: BuildIn
ifelse
	"bool proc1 proc2 ifelse â
	Execute proc1 if bool is true, proc2 if false"

	<operator>
	^self action: [:ps |
		| proc1 proc2 |
		proc2 := ps pop.
		proc1 := ps pop.
		ps pop
			ifTrue: [proc1 doIn: ps]
			ifFalse: [proc2 doIn: ps]]
%
classmethod: BuildIn
loop
	"proc loop â
	Execute proc an indefinite number of times"

	<operator>
	^self action: [:ps |
		| proc |
		proc := ps pop.
		[[proc doIn: ps] repeat] on: ExitNotification do: [:ex | ps executionStack popTill: proc]]
%
classmethod: BuildIn
quit
	"â quit â
	Terminate interpreter"

	<operator>
	^self notImplemented
%
classmethod: BuildIn
repeatAction
	"int proc repeat â
	Execute proc int times"
	"could not use #repeat as method, since Gemstone does not allow to define #repeat (!)"

	<operator: #repeat>
	^self action: [:ps |
		| proc |
		proc := ps pop.
		[ps pop timesRepeat: [proc doIn: ps]] on: ExitNotification do: [:ex |
			ps executionStack popTill: proc]]
%
classmethod: BuildIn
stop
	"â stop â
	Terminate stopped context"

	<operator>
	^self action: [:ps | StopNotification raiseSignal]
%
classmethod: BuildIn
stopped
	"any stopped bool
	Establish context for catching stop"

	<operator>
	^self action: [:ps |
		| proc stopped |
		proc := ps pop.
		stopped := [
		proc doIn: ps.
		false] on: StopNotification do: [:ex |
				ps executionStack popTill: proc.
				ex return: true].
		ps push: stopped]
%
category: 'Dictionary'
classmethod: BuildIn
begin
	"dict begin â 
	Push dict on dictionary stack"

	<operator>
	^self action: [:ps | ps dictionaryStack push: ps pop]
%
classmethod: BuildIn
cleardictstack
	"â cleardictstack â
	Pop all nonpermanent dictionaries off dictionary stack"

	<operator>
	^self action: [:ps | [ps dictionaryStack size <= 3] whileFalse: [ps dictionaryStack pop]]
%
classmethod: BuildIn
countdictstack
	"â countdictstack int
	Count elements on dictionary stack"

	<operator>
	^self action: [:ps | ps push: ps dictionaryStack size]
%
classmethod: BuildIn
currentdict
	"â currentdict dict
	Return current dictionary"

	<operator>
	^self action: [:ps | ps push: ps dictionaryStack top]
%
classmethod: BuildIn
def
	"key value def â 
	Associate key and value in current dictionary"

	<operator>
	^self action: [:ps |
		| value literalName |
		value := ps pop.
		literalName := ps pop.
		ps dictionaryStack top at: literalName object put: value]
%
classmethod: BuildIn
dict
	"int dict dict
	creates an empty dictionary with an initial capacity of int elements and pushes the
	created dictionary object on the operand stack.
	int is expected to be a nonnegative integer."

	<operator>
	^self action: [:ps | ps push: (PSDictionary new: ps pop)]
%
classmethod: BuildIn
end
	"â end â
	Pop current dictionary off dictionary stack"

	<operator>
	^self action: [:ps | ps dictionaryStack pop]
%
classmethod: BuildIn
endDictionary
	"mark key1 value1 â¦ keyn valuen >> dict
	End dictionary construction"

	<operator: #>> >
	^self action: [:ps |
		| dict rst |
		dict := PSDictionary new.
		rst := ps popTillMark reverse readStream.
		[rst atEnd] whileFalse: [dict at: rst next object put: rst next].
		ps push: dict.
		ps trace: ps stack top]
%
classmethod: BuildIn
known
	"dict key known bool
	Test whether key is in dict"

	<operator>
	^self action: [:ps |
		| key |
		key := ps pop.
		ps push: (ps pop includesKey: key)]
%
classmethod: BuildIn
load
	"key load value
	Search dictionary stack for key and return associated value"

	<operator>
	^self action: [:ps | ps push: (ps valueAt: ps pop object)]
%
classmethod: BuildIn
maxlength
	"dict maxlength int
	Return current capacity of dict"

	<operator>
	^self action: [:ps | ps push: ps pop basicSize]
%
classmethod: BuildIn
startDictionary
	"â << mark
	Start dictionary construction"

	<operator: #<< >
	^self action: [:ps | ps mark]
%
classmethod: BuildIn
store
	"key value store â
	Replace topmost definition of key"

	<operator>
	^self action: [:ps |
		| value key dict |
		value := ps pop.
		key := ps pop object.
		dict := ps dictionaryStack objects detect: [:dict1 | dict1 includesKey: key] ifNone: [
			ps dictionaryStack top].
		dict at: key put: value]
%
classmethod: BuildIn
undef
	"dict key undef â
	Remove key and its value from dict"

	<operator>
	^self action: [:ps |
		| key |
		key := ps pop object.
		ps pop removeKey: key]
%
classmethod: BuildIn
where
	"key where dict true
			or false
	Find dictionary in which key is defined"

	<operator>
	^self action: [:ps |
		| key |
		key := ps pop object.
		(ps dictionaryWith: key)
			ifNotNil: [:dict |
			ps push: dict.
			ps push: true]
			ifNil: [
			ps push: false]]
%
category: 'Miscellaneous'
classmethod: BuildIn
currentglobal
	"â currentglobal bool
	Return current VM allocation mode"

	<operator>
	^self action: [:ps | ps push: ps global]
%
classmethod: BuildIn
languagelevel
	"â languagelevel int
	Return LanguageLevel"

	<operator>
	^'3' asProcedure
%
classmethod: BuildIn
product
	"â product string
	Return product name"

	<operator>
	^'(PDFtalk PostScript)' asProcedure
%
classmethod: BuildIn
realtime
	"â realtime int
	Return real time in milliseconds"

	<operator>
	^self action: [:ps | ps push: Time now asMilliseconds]
%
classmethod: BuildIn
revision
	"â revision int
	Return product revision level"

	<operator>
	^self action: [:ps | ps push: (ps version tokensBasedOn: $.) last asNumber]
%
classmethod: BuildIn
serialnumber
	"â serialnumber int
	Return machine serial number"

	<operator>
	^'1' asProcedure
%
classmethod: BuildIn
setglobal
	"bool setglobal â
	Set VM allocation mode (false = local, true = global)"

	<operator>
	^self action: [:ps | ps global: ps pop]
%
classmethod: BuildIn
usertime
	"â usertime int
	Return execution time in milliseconds"

	<operator>
	^self action: [:ps | ps push: Time now asMilliseconds]
%
classmethod: BuildIn
version
	"â version string
	Return interpreter version"

	<operator>
	^self action: [:ps | ps push: ps version]
%
category: 'Operand Stack Manipulation'
classmethod: BuildIn
clear
	"|| any1 â¦ anyn < clear || <
	Discard all elements"

	<operator>
	^self action: [:ps | ps clear]
%
classmethod: BuildIn
cleartomark
	"mark obj1 â¦ objn cleartomark â 
	Discard elements down through mark"

	<operator>
	^self action: [:ps |
		[
		[ps stack top = Mark new] whileFalse: [ps pop].
		ps pop.
		ps unmark] on: Stackunderflow do: [:ex |
				ex resignalAs: Unmatchedmark new]]
%
classmethod: BuildIn
count
	"any1 â¦ anyn count any1 â¦ anyn n
	Count elements on stack"

	<operator>
	^self action: [:ps | ps push: ps stack size]
%
classmethod: BuildIn
counttomark
	"mark obj1 â¦ objn counttomark mark obj1 â¦ objn n
	Count elements down to mark"

	<operator>
	^self action: [:ps |
		| index |
		index := ps stack indexOf: Mark new.
		index isZero ifTrue: [
			^Unmatchedmark raiseSignal].
		ps push: index - 1]
%
classmethod: BuildIn
dup
	"any dup any any
	Duplicate top element"

	<operator>
	^self action: [:ps | ps push: ps stack top]
%
classmethod: BuildIn
exch
	"any1 any2 exch any2 any1
	Exchange top two elements"

	<operator>
	^self action: [:ps |
		| v1 v2 |
		v1 := ps pop.
		v2 := ps pop.
		ps push: v1.
		ps push: v2]
%
classmethod: BuildIn
index
	"anyn â¦ any0 n index anyn â¦ any0 anyn
	Duplicate arbitrary element"

	<operator>
	^self action: [:ps | ps push: (ps stack at: ps pop)]
%
classmethod: BuildIn
mark
	"â mark mark
	Push mark on stack"

	<operator>
	^self action: [:ps | ps mark]
%
classmethod: BuildIn
pop
	"any pop â
	Discard top element"

	<operator>
	^self action: [:ps | ps pop]
%
classmethod: BuildIn
roll
	"anyn-1 â¦ any0 n j roll any(j-1) mod n â¦ any0 anyn-1 â¦ anyj mod n
	Roll n elements up j times"

	<operator>
	^self action: [:ps |
		| shifts elements |
		shifts := ps pop.
		elements := OrderedCollection new.
		ps pop timesRepeat: [elements add: ps pop].
		shifts positive
			ifTrue: [
			shifts timesRepeat: [elements addLast: elements removeFirst]]
			ifFalse: [
			shifts negated timesRepeat: [elements addFirst: elements removeLast]].
		elements reverseDo: [:element | ps push: element]]
%
category: 'Relational, Boolean, and Bitwise'
classmethod: BuildIn
and
	"bool1|int1 bool2|int2 and bool3|int3
	Perform logical|bitwise and"

	<operator>
	^self action: [:ps | ps push: (ps pop postScriptAnd: ps pop)]
%
classmethod: BuildIn
bitshift
	"int1 shift bitshift int2
	Perform bitwise shift of int1 (positive is left)"

	<operator>
	^self action: [:ps |
		| shift |
		shift := ps pop.
		ps push: (ps pop bitShift: shift)]
%
classmethod: BuildIn
eq
	"any1 any2 eq bool
	Test equal"

	<operator>
	^self action: [:ps | ps push: (ps pop postScriptEqual: ps pop)]
%
classmethod: BuildIn
ge
	"num1|str1 num2|str2 ge bool
	Test greater than or equal"

	<operator>
	^self action: [:ps |
		| value2 |
		value2 := ps pop.
		ps push: (ps pop postScriptGreaterEqual: value2)]
%
classmethod: BuildIn
gt
	"num1|str1 num2|str2 gt bool
	Test greater than"

	<operator>
	^self action: [:ps |
		| value2 |
		value2 := ps pop.
		ps push: (ps pop postScriptGreaterThan: value2)]
%
classmethod: BuildIn
le
	"num1|str1 num2|str2 le bool
	Test less than or equal"

	<operator>
	^self action: [:ps |
		| value2 |
		value2 := ps pop.
		ps push: (ps pop postScriptLessEqual: value2)]
%
classmethod: BuildIn
lt
	"num1|str1 num2|str2 lt bool
	Test less than"

	<operator>
	^self action: [:ps |
		| value2 |
		value2 := ps pop.
		ps push: (ps pop postScriptLessThan: value2)]
%
classmethod: BuildIn
ne
	"any1 any2 ne bool
	Test not equal"

	<operator>
	^self action: [:ps | ps push: (ps pop postScriptEqual: ps pop) not]
%
classmethod: BuildIn
not
	"bool1|int1 not bool2|int2
	Perform logical|bitwise not"

	<operator>
	^self action: [:ps | ps push: ps pop postScriptNot]
%
classmethod: BuildIn
or
	"bool1|int1 bool2|int2 or bool3|int3
	Perform logical|bitwise inclusive or"

	<operator>
	^self action: [:ps | ps push: (ps pop postScriptOr: ps pop)]
%
classmethod: BuildIn
xor
	"bool1|int1 bool2|int2 xor bool3|int3
	Perform logical|bitwise exclusive or"

	<operator>
	^self action: [:ps | ps push: (ps pop postScriptXor: ps pop)]
%
category: 'Resource'
classmethod: BuildIn
definefont
	"key font definefont font
	Register named resource instance in category"

	<operator>
	^'/Font defineresource' asProcedure
%
classmethod: BuildIn
defineresource
	"key instance category defineresource instance
	Register named resource instance in category"

	<operator>
	^self action: [:ps |
		(ps categoryAt: ps stack top object) in: ps withImplementationDo: [
			#DefineResource processIn: ps]]
%
classmethod: BuildIn
findfont
	"key findfont (font | cidfont)
	Return resource instance identified by key in category"

	<operator>
	^'/Font findresource' asProcedure
%
classmethod: BuildIn
findresource
	"key category findresource instance
	Return resource instance identified by key in category"

	<operator>
	^self action: [:ps |
		(ps categoryAt: ps stack top object) in: ps withImplementationDo: [
			#FindResource processIn: ps]]
%
classmethod: BuildIn
resourceforall
	"template proc scratch category resourceforall â
	Enumerate resource instances in category"

	<operator>
	^self action: [:ps |
		(ps categoryAt: ps stack top object) in: ps withImplementationDo: [
			#ResourceForAll processIn: ps]]
%
classmethod: BuildIn
resourcestatus
	"key category resourcestatus status size true
							  or false
	Return status of resource instance"

	<operator>
	^self action: [:ps |
		(ps categoryAt: ps stack top object) in: ps withImplementationDo: [
			#ResourceStatus processIn: ps]]
%
classmethod: BuildIn
undefinefont
	"key undefinefont â
	Remove resource registration"

	<operator>
	^'/Font undefineresource' asProcedure
%
classmethod: BuildIn
undefineresource
	"key category undefineresource â
	Remove resource registration"

	<operator>
	^self action: [:ps |
		(ps categoryAt: ps stack top object) in: ps withImplementationDo: [
			#UndefineResource processIn: ps]]
%
category: 'String'
classmethod: BuildIn
anchorsearch
	"string seek anchorsearch post match true
				         	 or string false
	Search for seek at start of string"

	<operator>
	^self action: [:ps |
		| seek string |
		seek := ps pop.
		string := ps pop.
		(string copyFrom: 1 to: seek size) = seek
			ifTrue: [
			ps push: (string allButFirst: seek size).
			ps push: seek.
			ps push: true]
			ifFalse: [
			ps push: string.
			ps push: false]]
%
classmethod: BuildIn
search
	"string seek search post match pre true
				       or string false
	Search for seek in string"

	<operator>
	^self action: [:ps |
		| seek string rst pre post |
		seek := ps pop.
		string := ps pop.
		rst := string readStream.
		pre := rst upToAll: seek.
		rst atEnd
			ifTrue: [
			ps push: string.
			ps push: false]
			ifFalse: [
			rst next: seek size.
			post := rst upToEnd.
			ps push: post.
			ps push: seek.
			ps push: pre.
			ps push: true]]
%
classmethod: BuildIn
string
	"int string string
	Create string of length int"

	<operator>
	^self action: [:ps | ps push: (String new: ps pop withAll: 0 asCharacter)]
%
classmethod: BuildIn
token
	"string token post any true
			     or false
	Read token from start of string"

	<operator>
	^self action: [:ps |
		| scanner |
		scanner := Scanner on: ps pop.
		([scanner nextPostScriptObject] on: EndOfTokenStreamNotification do: [:ex | ex return: nil])
			ifNotNil: [:object |
			scanner readWhitespace.
			ps push: scanner upToEnd.
			ps push: object.
			ps push: true]
			ifNil: [
			ps push: false]]
%
category: 'Type, Attribute, and Conversion'
classmethod: BuildIn
cvi
	"num|string cvi int
	Convert to integer"

	<operator>
	^self action: [:ps | ps push: ps pop asPostScriptInteger]
%
classmethod: BuildIn
cvlit
	"any cvlit any
	Make object literal"

	<operator>
	^self action: [:ps | ps push: ps pop asPostScriptLiteral]
%
classmethod: BuildIn
cvn
	"string cvn name
	Convert to name"

	<operator>
	^self action: [:ps | ps push: ps pop asPostScripName]
%
classmethod: BuildIn
cvr
	"num|string cvr real
	Convert to real"

	<operator>
	^self action: [:ps | ps push: ps pop asPostScriptReal]
%
classmethod: BuildIn
cvrs
	"num radix string cvrs substring
	Convert with radix to string
	
	If string is too small to hold the result, a rangcheck error should be thrown.
	I dont do that..."

	<operator>
	^self action: [:ps |
		| radix num |
		ps pop.
		radix := ps pop.
		num := ps pop.
		ps push: (radix = 10
			ifTrue: [num asPostScriptString]
			ifFalse: [
			num truncated printPostScriptRadix: radix])]
%
classmethod: BuildIn
cvs
	"any string cvs substring
	Convert to string
	
	If string is too small to hold the result, a rangcheck error should be thrown.
	I dont do that..."

	<operator>
	^self action: [:ps |
		ps pop.
		ps push: ps pop asPostScriptString]
%
classmethod: BuildIn
cvx
	"any cvx any
	Make object executable"

	<operator>
	^self action: [:ps | ps push: ps pop asPostScriptExecutable]
%
classmethod: BuildIn
type
	"any type name
	Return type of any"

	<operator>
	^self action: [:ps | ps push: ps pop postScriptType]
%
category: 'Type, Attribute, and Conversion todo'
classmethod: BuildIn
executeonly
	"array|packedarray|file|string executeonly array|packedarray|file|string
	Reduce access to execute-only"

	<operator>
	^self notImplemented
%
classmethod: BuildIn
noaccess
	"array|packedarray|dict|file|string noaccess array|packedarray|dict|file|string
	Disallow any access"

	<operator>
	^self notImplemented
%
classmethod: BuildIn
rcheck
	"array|packedarray|dict|file|string rcheck bool
	Test read access"

	<operator>
	^self notImplemented
%
classmethod: BuildIn
readonly
	"array|packedarray|dict|file|string readonly array|packedarray|dict|file|string
	Reduce access to read-only"

	<operator>
	^self notImplemented
%
classmethod: BuildIn
wcheck
	"array|packedarray|dict|file|string wcheck bool
	Test write access"

	<operator>
	^self notImplemented
%
classmethod: BuildIn
xcheck
	"any xcheck bool
	Test executable attribute"

	<operator>
	^self notImplemented
%
category: 'accessing'
classmethod: Category
genericResource
	"<Dictionary>"

	| dict |
	dict := PSDictionary new.
	dict at: #DefineResource put: self genericDefineResource.
	dict at: #UndefineResource put: self genericUndefineResource.
	dict at: #FindResource put: self genericFindResource.
	dict at: #ResourceStatus put: self genericResourceStatus.
	dict at: #ResourceForAll put: self genericResourceForAll.
	^dict
%
classmethod: Category
implicitResourceCategories
	^#(#Filter #ColorSpaceFamily #Emulator #IODevice #ColorRenderingType #FMapType #FontType #FormType #HalftoneType #ImageType #PatternType #FunctionType #ShadingType #TrappingType)
%
classmethod: Category
predefinedResourceCategories
	^self regularResourceCategories , self implicitResourceCategories , self specialResourceCategories
%
classmethod: Category
regularResourceCategories
	^#(#Font #CIDFont #CMap #FontSet #Encoding #Form #Pattern #ProcSet #ColorSpace #Halftone #ColorRendering #IdiomSet #InkParams #TrapParams #OutputDevice #ControlLanguage #Localization #PDL #HWOptions)
%
classmethod: Category
specialResourceCategories
	^#(#Category #Generic)
%
category: 'instance creation'
classmethod: Category
implementing: aPSDictionary
	| inst |
	inst := self new.
	inst initializeImplementation: aPSDictionary.
	^inst
%
classmethod: Category
predefined: aCategorySymbol
	"<Category | nil>"

	(self predefinedResourceCategories includes: aCategorySymbol) ifTrue: [
		^(self respondsTo: aCategorySymbol)
			ifTrue: [self perform: aCategorySymbol]
			ifFalse: [
			| dict |
			dict := self genericResource.
			dict at: #Category put: aCategorySymbol.
			self implementing: dict]].
	^nil
%
category: 'instances'
classmethod: Category
Category
	| dict |
	dict := self genericResource.
	dict at: #DefineResource put: self categoryDefineResource.
	dict at: #FindResource put: self categoryFindResource.
	^self implementing: dict
%
classmethod: Category
Generic
	| inst |
	inst := self new.
	inst instances addAll: self genericResource associations.
	^inst
%
classmethod: Category
ProcSet
	| dict |
	dict := self genericResource.
	dict at: #FindResource put: self procSetFindResource.
	dict at: #Category put: #ProcSet.
	dict at: #InstanceType put: #dicttype.
	^self implementing: dict
%
category: 'operators'
classmethod: Category
categoryDefineResource
	"key instance category defineresource instance
	Register named resource instance in category"

	^BuildIn action: [:ps |
		| category instance key |
		category := ps pop object.
		instance := ps pop.
		key := ps pop object.
		ps push: (ps inCategory: category at: key put: (self implementing: instance))]
%
classmethod: Category
categoryFindResource
	"key category findresource instance
	Return resource instance identified by key in category"

	^BuildIn action: [:ps | ps push: (ps category: ps pop object at: ps pop object) instances]
%
classmethod: Category
genericDefineResource
	"key instance category defineresource instance
	Register named resource instance in category"

	^BuildIn action: [:ps |
		| category instance key |
		category := ps pop object.
		instance := ps pop.
		key := ps pop object.
		ps push: (ps inCategory: category at: key put: instance)]
%
classmethod: Category
genericFindResource
	"key category findresource instance
	Return resource instance identified by key in category"

	^BuildIn action: [:ps | ps push: (ps category: ps pop object at: ps pop object)]
%
classmethod: Category
genericResourceFileName
	"scratch key ResourceFileName string
	translates from a resource name to a file name"

	^BuildIn action: [:ps |
		| key |
		key := ps pop object.
		ps pop.
		ps push: key asString]
%
classmethod: Category
genericResourceForAll
	"template proc scratch category resourceforall â
	Enumerate resource instances in category"

	^BuildIn action: [:ps |
		| categoryName scratch proc template category keys |
		categoryName := ps pop object.
		scratch := ps pop.
		proc := ps pop.
		template := ps pop.
		category := ps categoryAt: categoryName.
		keys := category instances keys select: [:key |
			| string patternString pattern |
			string := key asString first: (scratch size min: key asString size).
			patternString := template copyReplaceAll: '?' with: '#'.
			pattern := OrderedCollection new.
			(patternString subStrings: $*) do: [:subString | pattern add: subString] separatedBy: [
				pattern add: $*].
			string matchPattern: pattern asArray].
		[
		keys do: [:key |
			ps push: key.
			proc doIn: ps]] on: ExitNotification do: [:ex |
				ps executionStack popTill: proc]]
%
classmethod: Category
genericResourceStatus
	"key category resourcestatus status size true
							  or false
	Return status of resource instance"

	^BuildIn action: [:ps |
		| category resource key |
		category := ps pop object.
		key := ps pop object.
		resource := ps categoryAt: category.
		(resource instances includesKey: key)
			ifTrue: [
			ps push: 0.
			ps push: (resource at: key) size.
			ps push: true]
			ifFalse: [
			ps push: false]]
%
classmethod: Category
genericUndefineResource
	"key category undefineresource â
	Remove resource registration"

	^BuildIn action: [:ps | ps inCategory: ps pop object removeKey: ps pop object]
%
classmethod: Category
procSetFindResource
	"key category findresource instance
	Return resource instance identified by key in category"

	^BuildIn action: [:ps |
		| category key |
		category := ps categoryAt: ps pop object.
		key := ps pop object.
		category at: key ifAbsentPut: [
			| procset subclassesInPS |
			subclassesInPS := OrderedCollection new.
			PostScript classesDo: [:aUserProfile :aSymbolDictionary :aClass |
				aClass superclass = ProcSet ifTrue: [
					subclassesInPS add: aClass]].
			procset := (subclassesInPS copyWithout: BuildIn) detect: [:class | class name = key] ifNone: [
				ps error: 'ProcSet ' , key printString , ' not found'].
			procset operators].
		ps push: (category at: key)]
%
category: 'accessing'
method: Category
at: aSymbol
	"<Object>"
	
	^self instances at: aSymbol
%
method: Category
at: aSymbol ifAbsent: aBlock
	^self instances at: aSymbol ifAbsent: aBlock
%
method: Category
at: aSymbol ifAbsentPut: aBlock
	^self instances at: aSymbol ifAbsentPut: aBlock
%
method: Category
at: aSymbol put: anObject
	"<Object>"
	
	^self instances at: aSymbol put: anObject
%
method: Category
implementation
	"<Dictionary key: Symbol value: (Procedure | Object)>"

	^implementation ifNil: [implementation := PSDictionary new]
%
method: Category
instances
	"<Dictionary key: Symbol value: Object>
	named instances"

	^instances ifNil: [instances := PSDictionary new]
%
method: Category
name
	"<String>"

	^self implementation at: #Category ifAbsent: [
		self instances keyAtValue: self ifAbsent: ['-']]
%
category: 'actions'
method: Category
in: anInterpreter withImplementationDo: aZeroArgumentBlock
	anInterpreter dictionaryStack push: self implementation.
	[aZeroArgumentBlock value] ensure: [anInterpreter dictionaryStack pop]
%
category: 'initialize-release'
method: Category
initializeImplementation: aPSDictionary
	implementation := nil.
	self implementation addAll: aPSDictionary associations
%
category: 'printing'
method: Category
printOn: aStream
	aStream
		nextPutAll: self class name asString;
		nextPut: $(;
		nextPutAll: self name;
		nextPut: $)
%
category: 'accessing'
classmethod: CharacterNames
nameToUnicode
	"<Dictionary key: Symbol value: Integer>
	a glyph name is associated with a unicode"

	^NameToUnicode ifNil: [
		NameToUnicode := self nameToUnicodeMappingsFrom: (self adobeZapfdingbatsTxt , self adobeGlyphlistTxt , self otherGlyphNames) readStream]
%
classmethod: CharacterNames
unicodeNamed: aPostScriptGlyphNameSymbol
	"<Integer | nil>
	from http://www.adobe.com/devnet/opentype/archives/glyph.html
	or http://www.adobe.com/devnet-archive/opentype/archives/glyph.html.
	If the name maps to more than one character, no character is returned since this glyph cannot adequately be encoded.
	This behavior is not correct, but a correct change need to change the structure of the senders."

	| listOfIntegers |
	listOfIntegers := self unicodesForGlyphName: aPostScriptGlyphNameSymbol.
	listOfIntegers isEmpty ifTrue: [
		^nil].
	listOfIntegers size > 1 ifTrue: [
		"not correct: this should be a string of integers, but we just return the first (main) code"
		^listOfIntegers first].
	^listOfIntegers first
%
classmethod: CharacterNames
unicodeToNames
	"<Dictionary key: Integer value: (Array of: Symbol)>
	a unicode is associated with a list of glyph names"

	^UnicodeToName ifNil: [
		| dict |
		dict := IdentityDictionary new.
		self nameToUnicode keysAndValuesDo: [:glyphSymbol :unicode |
			dict at: unicode put: ((dict at: unicode ifAbsent: [#()]) copyWith: glyphSymbol)].
		UnicodeToName := dict]
%
category: 'encoding decoding'
classmethod: CharacterNames
characterNamed: aPostScriptGlyphNameSymbol
	"<Character | nil>"

	^(self unicodeNamed: aPostScriptGlyphNameSymbol) ifNotNil: [:code | code asCharacter]
%
classmethod: CharacterNames
characterNamesAtUnicode: anInteger
	"<SequenceableCollection of: Symbol>"

	(self unicodeToNames at: anInteger ifAbsent: [nil]) ifNotNil: [:names |
		^names].
	(self isBMPCode: anInteger) ifTrue: [
		^Array with: ('uni' , ('000' , (anInteger printStringRadix: 16) last: 4)) asSymbol].
	(self isSupplementaryCode: anInteger) ifTrue: [
		^Array with: ('u' , (anInteger printStringRadix: 16)) asSymbol].
	^#(#'.notdef')
%
classmethod: CharacterNames
unicodesForGlyphName: aPostScriptGlyphNameSymbol
	"<SequenceableCollection of: Integer>
	see https://github.com/adobe-type-tools/agl-specification"

	^((aPostScriptGlyphNameSymbol readStream upTo: $.) tokensBasedOn: $_) inject: OrderedCollection new into: [:list :component |
		(self nameToUnicode at: component asSymbol ifAbsent: [nil])
			ifNil: [
			list addAll: (self unicodesForHexName: component)]
			ifNotNil: [:unicode |
			list add: unicode].
		list]
%
classmethod: CharacterNames
unicodesForHexName: aPostScriptGlyphNameString
	"<SequenceableCollection of: Integer>
	aPostScriptGlyphNameString starts either with 'uni' or 'u', followed by hexadecimal digits"

	| digits unicode |
	(aPostScriptGlyphNameString notEmpty and: [
	aPostScriptGlyphNameString first = $u]) ifFalse: [
			^#()].
	(aPostScriptGlyphNameString size >= 3 and: [
	(aPostScriptGlyphNameString first: 3) = 'uni']) ifTrue: [
			| groupsOf4Digits rst list |
			groupsOf4Digits := aPostScriptGlyphNameString allButFirst: 3.
			((groupsOf4Digits allSatisfy: [:char | '0123456789ABCDEF' includes: char]) and: [
			(groupsOf4Digits size \\ 4) isZero]) ifFalse: [
					^#()].
			rst := groupsOf4Digits readStream.
			list := OrderedCollection new.
			[rst atEnd] whileFalse: [
				| number |
				number := ('16r' , (rst next: 4)) asNumber.
				(self isBMPCode: number) ifTrue: [
					list add: number]].
			^list].
	"4 to 6 hex digits"
	digits := aPostScriptGlyphNameString allButFirst: 1.
	((digits allSatisfy: [:char | '0123456789ABCDEF' includes: char]) and: [
	digits size between: 4 and: 6]) ifFalse: [
			^#()].
	unicode := ('16r' , digits) asNumber.
	((self isBMPCode: unicode) or: [
	self isSupplementaryCode: unicode]) ifTrue: [
			^Array with: unicode].
	^#()
%
category: 'font metric loading'
classmethod: CharacterNames
adobeGlyphlistTxt
	"from https://github.com/adobe-type-tools/agl-aglfn"

	^'# -----------------------------------------------------------
# Copyright 2002-2019 Adobe (http://www.adobe.com/).
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the
# following conditions are met:
#
# Redistributions of source code must retain the above
# copyright notice, this list of conditions and the following
# disclaimer.
#
# Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials
# provided with the distribution.
#
# Neither the name of Adobe nor the names of its contributors
# may be used to endorse or promote products derived from this
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------
# Name:          Adobe Glyph List
# Table version: 2.0
# Date:          September 20, 2002
# URL:           https://github.com/adobe-type-tools/agl-aglfn
#
# Format: two semicolon-delimited fields:
#   (1) glyph name--upper/lowercase letters and digits
#   (2) Unicode scalar value--four uppercase hexadecimal digits
#
A;0041
AE;00C6
AEacute;01FC
AEmacron;01E2
AEsmall;F7E6
Aacute;00C1
Aacutesmall;F7E1
Abreve;0102
Abreveacute;1EAE
Abrevecyrillic;04D0
Abrevedotbelow;1EB6
Abrevegrave;1EB0
Abrevehookabove;1EB2
Abrevetilde;1EB4
Acaron;01CD
Acircle;24B6
Acircumflex;00C2
Acircumflexacute;1EA4
Acircumflexdotbelow;1EAC
Acircumflexgrave;1EA6
Acircumflexhookabove;1EA8
Acircumflexsmall;F7E2
Acircumflextilde;1EAA
Acute;F6C9
Acutesmall;F7B4
Acyrillic;0410
Adblgrave;0200
Adieresis;00C4
Adieresiscyrillic;04D2
Adieresismacron;01DE
Adieresissmall;F7E4
Adotbelow;1EA0
Adotmacron;01E0
Agrave;00C0
Agravesmall;F7E0
Ahookabove;1EA2
Aiecyrillic;04D4
Ainvertedbreve;0202
Alpha;0391
Alphatonos;0386
Amacron;0100
Amonospace;FF21
Aogonek;0104
Aring;00C5
Aringacute;01FA
Aringbelow;1E00
Aringsmall;F7E5
Asmall;F761
Atilde;00C3
Atildesmall;F7E3
Aybarmenian;0531
B;0042
Bcircle;24B7
Bdotaccent;1E02
Bdotbelow;1E04
Becyrillic;0411
Benarmenian;0532
Beta;0392
Bhook;0181
Blinebelow;1E06
Bmonospace;FF22
Brevesmall;F6F4
Bsmall;F762
Btopbar;0182
C;0043
Caarmenian;053E
Cacute;0106
Caron;F6CA
Caronsmall;F6F5
Ccaron;010C
Ccedilla;00C7
Ccedillaacute;1E08
Ccedillasmall;F7E7
Ccircle;24B8
Ccircumflex;0108
Cdot;010A
Cdotaccent;010A
Cedillasmall;F7B8
Chaarmenian;0549
Cheabkhasiancyrillic;04BC
Checyrillic;0427
Chedescenderabkhasiancyrillic;04BE
Chedescendercyrillic;04B6
Chedieresiscyrillic;04F4
Cheharmenian;0543
Chekhakassiancyrillic;04CB
Cheverticalstrokecyrillic;04B8
Chi;03A7
Chook;0187
Circumflexsmall;F6F6
Cmonospace;FF23
Coarmenian;0551
Csmall;F763
D;0044
DZ;01F1
DZcaron;01C4
Daarmenian;0534
Dafrican;0189
Dcaron;010E
Dcedilla;1E10
Dcircle;24B9
Dcircumflexbelow;1E12
Dcroat;0110
Ddotaccent;1E0A
Ddotbelow;1E0C
Decyrillic;0414
Deicoptic;03EE
Delta;2206
Deltagreek;0394
Dhook;018A
Dieresis;F6CB
DieresisAcute;F6CC
DieresisGrave;F6CD
Dieresissmall;F7A8
Digammagreek;03DC
Djecyrillic;0402
Dlinebelow;1E0E
Dmonospace;FF24
Dotaccentsmall;F6F7
Dslash;0110
Dsmall;F764
Dtopbar;018B
Dz;01F2
Dzcaron;01C5
Dzeabkhasiancyrillic;04E0
Dzecyrillic;0405
Dzhecyrillic;040F
E;0045
Eacute;00C9
Eacutesmall;F7E9
Ebreve;0114
Ecaron;011A
Ecedillabreve;1E1C
Echarmenian;0535
Ecircle;24BA
Ecircumflex;00CA
Ecircumflexacute;1EBE
Ecircumflexbelow;1E18
Ecircumflexdotbelow;1EC6
Ecircumflexgrave;1EC0
Ecircumflexhookabove;1EC2
Ecircumflexsmall;F7EA
Ecircumflextilde;1EC4
Ecyrillic;0404
Edblgrave;0204
Edieresis;00CB
Edieresissmall;F7EB
Edot;0116
Edotaccent;0116
Edotbelow;1EB8
Efcyrillic;0424
Egrave;00C8
Egravesmall;F7E8
Eharmenian;0537
Ehookabove;1EBA
Eightroman;2167
Einvertedbreve;0206
Eiotifiedcyrillic;0464
Elcyrillic;041B
Elevenroman;216A
Emacron;0112
Emacronacute;1E16
Emacrongrave;1E14
Emcyrillic;041C
Emonospace;FF25
Encyrillic;041D
Endescendercyrillic;04A2
Eng;014A
Enghecyrillic;04A4
Enhookcyrillic;04C7
Eogonek;0118
Eopen;0190
Epsilon;0395
Epsilontonos;0388
Ercyrillic;0420
Ereversed;018E
Ereversedcyrillic;042D
Escyrillic;0421
Esdescendercyrillic;04AA
Esh;01A9
Esmall;F765
Eta;0397
Etarmenian;0538
Etatonos;0389
Eth;00D0
Ethsmall;F7F0
Etilde;1EBC
Etildebelow;1E1A
Euro;20AC
Ezh;01B7
Ezhcaron;01EE
Ezhreversed;01B8
F;0046
Fcircle;24BB
Fdotaccent;1E1E
Feharmenian;0556
Feicoptic;03E4
Fhook;0191
Fitacyrillic;0472
Fiveroman;2164
Fmonospace;FF26
Fourroman;2163
Fsmall;F766
G;0047
GBsquare;3387
Gacute;01F4
Gamma;0393
Gammaafrican;0194
Gangiacoptic;03EA
Gbreve;011E
Gcaron;01E6
Gcedilla;0122
Gcircle;24BC
Gcircumflex;011C
Gcommaaccent;0122
Gdot;0120
Gdotaccent;0120
Gecyrillic;0413
Ghadarmenian;0542
Ghemiddlehookcyrillic;0494
Ghestrokecyrillic;0492
Gheupturncyrillic;0490
Ghook;0193
Gimarmenian;0533
Gjecyrillic;0403
Gmacron;1E20
Gmonospace;FF27
Grave;F6CE
Gravesmall;F760
Gsmall;F767
Gsmallhook;029B
Gstroke;01E4
H;0048
H18533;25CF
H18543;25AA
H18551;25AB
H22073;25A1
HPsquare;33CB
Haabkhasiancyrillic;04A8
Hadescendercyrillic;04B2
Hardsigncyrillic;042A
Hbar;0126
Hbrevebelow;1E2A
Hcedilla;1E28
Hcircle;24BD
Hcircumflex;0124
Hdieresis;1E26
Hdotaccent;1E22
Hdotbelow;1E24
Hmonospace;FF28
Hoarmenian;0540
Horicoptic;03E8
Hsmall;F768
Hungarumlaut;F6CF
Hungarumlautsmall;F6F8
Hzsquare;3390
I;0049
IAcyrillic;042F
IJ;0132
IUcyrillic;042E
Iacute;00CD
Iacutesmall;F7ED
Ibreve;012C
Icaron;01CF
Icircle;24BE
Icircumflex;00CE
Icircumflexsmall;F7EE
Icyrillic;0406
Idblgrave;0208
Idieresis;00CF
Idieresisacute;1E2E
Idieresiscyrillic;04E4
Idieresissmall;F7EF
Idot;0130
Idotaccent;0130
Idotbelow;1ECA
Iebrevecyrillic;04D6
Iecyrillic;0415
Ifraktur;2111
Igrave;00CC
Igravesmall;F7EC
Ihookabove;1EC8
Iicyrillic;0418
Iinvertedbreve;020A
Iishortcyrillic;0419
Imacron;012A
Imacroncyrillic;04E2
Imonospace;FF29
Iniarmenian;053B
Iocyrillic;0401
Iogonek;012E
Iota;0399
Iotaafrican;0196
Iotadieresis;03AA
Iotatonos;038A
Ismall;F769
Istroke;0197
Itilde;0128
Itildebelow;1E2C
Izhitsacyrillic;0474
Izhitsadblgravecyrillic;0476
J;004A
Jaarmenian;0541
Jcircle;24BF
Jcircumflex;0134
Jecyrillic;0408
Jheharmenian;054B
Jmonospace;FF2A
Jsmall;F76A
K;004B
KBsquare;3385
KKsquare;33CD
Kabashkircyrillic;04A0
Kacute;1E30
Kacyrillic;041A
Kadescendercyrillic;049A
Kahookcyrillic;04C3
Kappa;039A
Kastrokecyrillic;049E
Kaverticalstrokecyrillic;049C
Kcaron;01E8
Kcedilla;0136
Kcircle;24C0
Kcommaaccent;0136
Kdotbelow;1E32
Keharmenian;0554
Kenarmenian;053F
Khacyrillic;0425
Kheicoptic;03E6
Khook;0198
Kjecyrillic;040C
Klinebelow;1E34
Kmonospace;FF2B
Koppacyrillic;0480
Koppagreek;03DE
Ksicyrillic;046E
Ksmall;F76B
L;004C
LJ;01C7
LL;F6BF
Lacute;0139
Lambda;039B
Lcaron;013D
Lcedilla;013B
Lcircle;24C1
Lcircumflexbelow;1E3C
Lcommaaccent;013B
Ldot;013F
Ldotaccent;013F
Ldotbelow;1E36
Ldotbelowmacron;1E38
Liwnarmenian;053C
Lj;01C8
Ljecyrillic;0409
Llinebelow;1E3A
Lmonospace;FF2C
Lslash;0141
Lslashsmall;F6F9
Lsmall;F76C
M;004D
MBsquare;3386
Macron;F6D0
Macronsmall;F7AF
Macute;1E3E
Mcircle;24C2
Mdotaccent;1E40
Mdotbelow;1E42
Menarmenian;0544
Mmonospace;FF2D
Msmall;F76D
Mturned;019C
Mu;039C
N;004E
NJ;01CA
Nacute;0143
Ncaron;0147
Ncedilla;0145
Ncircle;24C3
Ncircumflexbelow;1E4A
Ncommaaccent;0145
Ndotaccent;1E44
Ndotbelow;1E46
Nhookleft;019D
Nineroman;2168
Nj;01CB
Njecyrillic;040A
Nlinebelow;1E48
Nmonospace;FF2E
Nowarmenian;0546
Nsmall;F76E
Ntilde;00D1
Ntildesmall;F7F1
Nu;039D
O;004F
OE;0152
OEsmall;F6FA
Oacute;00D3
Oacutesmall;F7F3
Obarredcyrillic;04E8
Obarreddieresiscyrillic;04EA
Obreve;014E
Ocaron;01D1
Ocenteredtilde;019F
Ocircle;24C4
Ocircumflex;00D4
Ocircumflexacute;1ED0
Ocircumflexdotbelow;1ED8
Ocircumflexgrave;1ED2
Ocircumflexhookabove;1ED4
Ocircumflexsmall;F7F4
Ocircumflextilde;1ED6
Ocyrillic;041E
Odblacute;0150
Odblgrave;020C
Odieresis;00D6
Odieresiscyrillic;04E6
Odieresissmall;F7F6
Odotbelow;1ECC
Ogoneksmall;F6FB
Ograve;00D2
Ogravesmall;F7F2
Oharmenian;0555
Ohm;2126
Ohookabove;1ECE
Ohorn;01A0
Ohornacute;1EDA
Ohorndotbelow;1EE2
Ohorngrave;1EDC
Ohornhookabove;1EDE
Ohorntilde;1EE0
Ohungarumlaut;0150
Oi;01A2
Oinvertedbreve;020E
Omacron;014C
Omacronacute;1E52
Omacrongrave;1E50
Omega;2126
Omegacyrillic;0460
Omegagreek;03A9
Omegaroundcyrillic;047A
Omegatitlocyrillic;047C
Omegatonos;038F
Omicron;039F
Omicrontonos;038C
Omonospace;FF2F
Oneroman;2160
Oogonek;01EA
Oogonekmacron;01EC
Oopen;0186
Oslash;00D8
Oslashacute;01FE
Oslashsmall;F7F8
Osmall;F76F
Ostrokeacute;01FE
Otcyrillic;047E
Otilde;00D5
Otildeacute;1E4C
Otildedieresis;1E4E
Otildesmall;F7F5
P;0050
Pacute;1E54
Pcircle;24C5
Pdotaccent;1E56
Pecyrillic;041F
Peharmenian;054A
Pemiddlehookcyrillic;04A6
Phi;03A6
Phook;01A4
Pi;03A0
Piwrarmenian;0553
Pmonospace;FF30
Psi;03A8
Psicyrillic;0470
Psmall;F770
Q;0051
Qcircle;24C6
Qmonospace;FF31
Qsmall;F771
R;0052
Raarmenian;054C
Racute;0154
Rcaron;0158
Rcedilla;0156
Rcircle;24C7
Rcommaaccent;0156
Rdblgrave;0210
Rdotaccent;1E58
Rdotbelow;1E5A
Rdotbelowmacron;1E5C
Reharmenian;0550
Rfraktur;211C
Rho;03A1
Ringsmall;F6FC
Rinvertedbreve;0212
Rlinebelow;1E5E
Rmonospace;FF32
Rsmall;F772
Rsmallinverted;0281
Rsmallinvertedsuperior;02B6
S;0053
SF010000;250C
SF020000;2514
SF030000;2510
SF040000;2518
SF050000;253C
SF060000;252C
SF070000;2534
SF080000;251C
SF090000;2524
SF100000;2500
SF110000;2502
SF190000;2561
SF200000;2562
SF210000;2556
SF220000;2555
SF230000;2563
SF240000;2551
SF250000;2557
SF260000;255D
SF270000;255C
SF280000;255B
SF360000;255E
SF370000;255F
SF380000;255A
SF390000;2554
SF400000;2569
SF410000;2566
SF420000;2560
SF430000;2550
SF440000;256C
SF450000;2567
SF460000;2568
SF470000;2564
SF480000;2565
SF490000;2559
SF500000;2558
SF510000;2552
SF520000;2553
SF530000;256B
SF540000;256A
Sacute;015A
Sacutedotaccent;1E64
Sampigreek;03E0
Scaron;0160
Scarondotaccent;1E66
Scaronsmall;F6FD
Scedilla;015E
Schwa;018F
Schwacyrillic;04D8
Schwadieresiscyrillic;04DA
Scircle;24C8
Scircumflex;015C
Scommaaccent;0218
Sdotaccent;1E60
Sdotbelow;1E62
Sdotbelowdotaccent;1E68
Seharmenian;054D
Sevenroman;2166
Shaarmenian;0547
Shacyrillic;0428
Shchacyrillic;0429
Sheicoptic;03E2
Shhacyrillic;04BA
Shimacoptic;03EC
Sigma;03A3
Sixroman;2165
Smonospace;FF33
Softsigncyrillic;042C
Ssmall;F773
Stigmagreek;03DA
T;0054
Tau;03A4
Tbar;0166
Tcaron;0164
Tcedilla;0162
Tcircle;24C9
Tcircumflexbelow;1E70
Tcommaaccent;0162
Tdotaccent;1E6A
Tdotbelow;1E6C
Tecyrillic;0422
Tedescendercyrillic;04AC
Tenroman;2169
Tetsecyrillic;04B4
Theta;0398
Thook;01AC
Thorn;00DE
Thornsmall;F7FE
Threeroman;2162
Tildesmall;F6FE
Tiwnarmenian;054F
Tlinebelow;1E6E
Tmonospace;FF34
Toarmenian;0539
Tonefive;01BC
Tonesix;0184
Tonetwo;01A7
Tretroflexhook;01AE
Tsecyrillic;0426
Tshecyrillic;040B
Tsmall;F774
Twelveroman;216B
Tworoman;2161
U;0055
Uacute;00DA
Uacutesmall;F7FA
Ubreve;016C
Ucaron;01D3
Ucircle;24CA
Ucircumflex;00DB
Ucircumflexbelow;1E76
Ucircumflexsmall;F7FB
Ucyrillic;0423
Udblacute;0170
Udblgrave;0214
Udieresis;00DC
Udieresisacute;01D7
Udieresisbelow;1E72
Udieresiscaron;01D9
Udieresiscyrillic;04F0
Udieresisgrave;01DB
Udieresismacron;01D5
Udieresissmall;F7FC
Udotbelow;1EE4
Ugrave;00D9
Ugravesmall;F7F9
Uhookabove;1EE6
Uhorn;01AF
Uhornacute;1EE8
Uhorndotbelow;1EF0
Uhorngrave;1EEA
Uhornhookabove;1EEC
Uhorntilde;1EEE
Uhungarumlaut;0170
Uhungarumlautcyrillic;04F2
Uinvertedbreve;0216
Ukcyrillic;0478
Umacron;016A
Umacroncyrillic;04EE
Umacrondieresis;1E7A
Umonospace;FF35
Uogonek;0172
Upsilon;03A5
Upsilon1;03D2
Upsilonacutehooksymbolgreek;03D3
Upsilonafrican;01B1
Upsilondieresis;03AB
Upsilondieresishooksymbolgreek;03D4
Upsilonhooksymbol;03D2
Upsilontonos;038E
Uring;016E
Ushortcyrillic;040E
Usmall;F775
Ustraightcyrillic;04AE
Ustraightstrokecyrillic;04B0
Utilde;0168
Utildeacute;1E78
Utildebelow;1E74
V;0056
Vcircle;24CB
Vdotbelow;1E7E
Vecyrillic;0412
Vewarmenian;054E
Vhook;01B2
Vmonospace;FF36
Voarmenian;0548
Vsmall;F776
Vtilde;1E7C
W;0057
Wacute;1E82
Wcircle;24CC
Wcircumflex;0174
Wdieresis;1E84
Wdotaccent;1E86
Wdotbelow;1E88
Wgrave;1E80
Wmonospace;FF37
Wsmall;F777
X;0058
Xcircle;24CD
Xdieresis;1E8C
Xdotaccent;1E8A
Xeharmenian;053D
Xi;039E
Xmonospace;FF38
Xsmall;F778
Y;0059
Yacute;00DD
Yacutesmall;F7FD
Yatcyrillic;0462
Ycircle;24CE
Ycircumflex;0176
Ydieresis;0178
Ydieresissmall;F7FF
Ydotaccent;1E8E
Ydotbelow;1EF4
Yericyrillic;042B
Yerudieresiscyrillic;04F8
Ygrave;1EF2
Yhook;01B3
Yhookabove;1EF6
Yiarmenian;0545
Yicyrillic;0407
Yiwnarmenian;0552
Ymonospace;FF39
Ysmall;F779
Ytilde;1EF8
Yusbigcyrillic;046A
Yusbigiotifiedcyrillic;046C
Yuslittlecyrillic;0466
Yuslittleiotifiedcyrillic;0468
Z;005A
Zaarmenian;0536
Zacute;0179
Zcaron;017D
Zcaronsmall;F6FF
Zcircle;24CF
Zcircumflex;1E90
Zdot;017B
Zdotaccent;017B
Zdotbelow;1E92
Zecyrillic;0417
Zedescendercyrillic;0498
Zedieresiscyrillic;04DE
Zeta;0396
Zhearmenian;053A
Zhebrevecyrillic;04C1
Zhecyrillic;0416
Zhedescendercyrillic;0496
Zhedieresiscyrillic;04DC
Zlinebelow;1E94
Zmonospace;FF3A
Zsmall;F77A
Zstroke;01B5
a;0061
aabengali;0986
aacute;00E1
aadeva;0906
aagujarati;0A86
aagurmukhi;0A06
aamatragurmukhi;0A3E
aarusquare;3303
aavowelsignbengali;09BE
aavowelsigndeva;093E
aavowelsigngujarati;0ABE
abbreviationmarkarmenian;055F
abbreviationsigndeva;0970
abengali;0985
abopomofo;311A
abreve;0103
abreveacute;1EAF
abrevecyrillic;04D1
abrevedotbelow;1EB7
abrevegrave;1EB1
abrevehookabove;1EB3
abrevetilde;1EB5
acaron;01CE
acircle;24D0
acircumflex;00E2
acircumflexacute;1EA5
acircumflexdotbelow;1EAD
acircumflexgrave;1EA7
acircumflexhookabove;1EA9
acircumflextilde;1EAB
acute;00B4
acutebelowcmb;0317
acutecmb;0301
acutecomb;0301
acutedeva;0954
acutelowmod;02CF
acutetonecmb;0341
acyrillic;0430
adblgrave;0201
addakgurmukhi;0A71
adeva;0905
adieresis;00E4
adieresiscyrillic;04D3
adieresismacron;01DF
adotbelow;1EA1
adotmacron;01E1
ae;00E6
aeacute;01FD
aekorean;3150
aemacron;01E3
afii00208;2015
afii08941;20A4
afii10017;0410
afii10018;0411
afii10019;0412
afii10020;0413
afii10021;0414
afii10022;0415
afii10023;0401
afii10024;0416
afii10025;0417
afii10026;0418
afii10027;0419
afii10028;041A
afii10029;041B
afii10030;041C
afii10031;041D
afii10032;041E
afii10033;041F
afii10034;0420
afii10035;0421
afii10036;0422
afii10037;0423
afii10038;0424
afii10039;0425
afii10040;0426
afii10041;0427
afii10042;0428
afii10043;0429
afii10044;042A
afii10045;042B
afii10046;042C
afii10047;042D
afii10048;042E
afii10049;042F
afii10050;0490
afii10051;0402
afii10052;0403
afii10053;0404
afii10054;0405
afii10055;0406
afii10056;0407
afii10057;0408
afii10058;0409
afii10059;040A
afii10060;040B
afii10061;040C
afii10062;040E
afii10063;F6C4
afii10064;F6C5
afii10065;0430
afii10066;0431
afii10067;0432
afii10068;0433
afii10069;0434
afii10070;0435
afii10071;0451
afii10072;0436
afii10073;0437
afii10074;0438
afii10075;0439
afii10076;043A
afii10077;043B
afii10078;043C
afii10079;043D
afii10080;043E
afii10081;043F
afii10082;0440
afii10083;0441
afii10084;0442
afii10085;0443
afii10086;0444
afii10087;0445
afii10088;0446
afii10089;0447
afii10090;0448
afii10091;0449
afii10092;044A
afii10093;044B
afii10094;044C
afii10095;044D
afii10096;044E
afii10097;044F
afii10098;0491
afii10099;0452
afii10100;0453
afii10101;0454
afii10102;0455
afii10103;0456
afii10104;0457
afii10105;0458
afii10106;0459
afii10107;045A
afii10108;045B
afii10109;045C
afii10110;045E
afii10145;040F
afii10146;0462
afii10147;0472
afii10148;0474
afii10192;F6C6
afii10193;045F
afii10194;0463
afii10195;0473
afii10196;0475
afii10831;F6C7
afii10832;F6C8
afii10846;04D9
afii299;200E
afii300;200F
afii301;200D
afii57381;066A
afii57388;060C
afii57392;0660
afii57393;0661
afii57394;0662
afii57395;0663
afii57396;0664
afii57397;0665
afii57398;0666
afii57399;0667
afii57400;0668
afii57401;0669
afii57403;061B
afii57407;061F
afii57409;0621
afii57410;0622
afii57411;0623
afii57412;0624
afii57413;0625
afii57414;0626
afii57415;0627
afii57416;0628
afii57417;0629
afii57418;062A
afii57419;062B
afii57420;062C
afii57421;062D
afii57422;062E
afii57423;062F
afii57424;0630
afii57425;0631
afii57426;0632
afii57427;0633
afii57428;0634
afii57429;0635
afii57430;0636
afii57431;0637
afii57432;0638
afii57433;0639
afii57434;063A
afii57440;0640
afii57441;0641
afii57442;0642
afii57443;0643
afii57444;0644
afii57445;0645
afii57446;0646
afii57448;0648
afii57449;0649
afii57450;064A
afii57451;064B
afii57452;064C
afii57453;064D
afii57454;064E
afii57455;064F
afii57456;0650
afii57457;0651
afii57458;0652
afii57470;0647
afii57505;06A4
afii57506;067E
afii57507;0686
afii57508;0698
afii57509;06AF
afii57511;0679
afii57512;0688
afii57513;0691
afii57514;06BA
afii57519;06D2
afii57534;06D5
afii57636;20AA
afii57645;05BE
afii57658;05C3
afii57664;05D0
afii57665;05D1
afii57666;05D2
afii57667;05D3
afii57668;05D4
afii57669;05D5
afii57670;05D6
afii57671;05D7
afii57672;05D8
afii57673;05D9
afii57674;05DA
afii57675;05DB
afii57676;05DC
afii57677;05DD
afii57678;05DE
afii57679;05DF
afii57680;05E0
afii57681;05E1
afii57682;05E2
afii57683;05E3
afii57684;05E4
afii57685;05E5
afii57686;05E6
afii57687;05E7
afii57688;05E8
afii57689;05E9
afii57690;05EA
afii57694;FB2A
afii57695;FB2B
afii57700;FB4B
afii57705;FB1F
afii57716;05F0
afii57717;05F1
afii57718;05F2
afii57723;FB35
afii57793;05B4
afii57794;05B5
afii57795;05B6
afii57796;05BB
afii57797;05B8
afii57798;05B7
afii57799;05B0
afii57800;05B2
afii57801;05B1
afii57802;05B3
afii57803;05C2
afii57804;05C1
afii57806;05B9
afii57807;05BC
afii57839;05BD
afii57841;05BF
afii57842;05C0
afii57929;02BC
afii61248;2105
afii61289;2113
afii61352;2116
afii61573;202C
afii61574;202D
afii61575;202E
afii61664;200C
afii63167;066D
afii64937;02BD
agrave;00E0
agujarati;0A85
agurmukhi;0A05
ahiragana;3042
ahookabove;1EA3
aibengali;0990
aibopomofo;311E
aideva;0910
aiecyrillic;04D5
aigujarati;0A90
aigurmukhi;0A10
aimatragurmukhi;0A48
ainarabic;0639
ainfinalarabic;FECA
aininitialarabic;FECB
ainmedialarabic;FECC
ainvertedbreve;0203
aivowelsignbengali;09C8
aivowelsigndeva;0948
aivowelsigngujarati;0AC8
akatakana;30A2
akatakanahalfwidth;FF71
akorean;314F
alef;05D0
alefarabic;0627
alefdageshhebrew;FB30
aleffinalarabic;FE8E
alefhamzaabovearabic;0623
alefhamzaabovefinalarabic;FE84
alefhamzabelowarabic;0625
alefhamzabelowfinalarabic;FE88
alefhebrew;05D0
aleflamedhebrew;FB4F
alefmaddaabovearabic;0622
alefmaddaabovefinalarabic;FE82
alefmaksuraarabic;0649
alefmaksurafinalarabic;FEF0
alefmaksurainitialarabic;FEF3
alefmaksuramedialarabic;FEF4
alefpatahhebrew;FB2E
alefqamatshebrew;FB2F
aleph;2135
allequal;224C
alpha;03B1
alphatonos;03AC
amacron;0101
amonospace;FF41
ampersand;0026
ampersandmonospace;FF06
ampersandsmall;F726
amsquare;33C2
anbopomofo;3122
angbopomofo;3124
angkhankhuthai;0E5A
angle;2220
anglebracketleft;3008
anglebracketleftvertical;FE3F
anglebracketright;3009
anglebracketrightvertical;FE40
angleleft;2329
angleright;232A
angstrom;212B
anoteleia;0387
anudattadeva;0952
anusvarabengali;0982
anusvaradeva;0902
anusvaragujarati;0A82
aogonek;0105
apaatosquare;3300
aparen;249C
apostrophearmenian;055A
apostrophemod;02BC
apple;F8FF
approaches;2250
approxequal;2248
approxequalorimage;2252
approximatelyequal;2245
araeaekorean;318E
araeakorean;318D
arc;2312
arighthalfring;1E9A
aring;00E5
aringacute;01FB
aringbelow;1E01
arrowboth;2194
arrowdashdown;21E3
arrowdashleft;21E0
arrowdashright;21E2
arrowdashup;21E1
arrowdblboth;21D4
arrowdbldown;21D3
arrowdblleft;21D0
arrowdblright;21D2
arrowdblup;21D1
arrowdown;2193
arrowdownleft;2199
arrowdownright;2198
arrowdownwhite;21E9
arrowheaddownmod;02C5
arrowheadleftmod;02C2
arrowheadrightmod;02C3
arrowheadupmod;02C4
arrowhorizex;F8E7
arrowleft;2190
arrowleftdbl;21D0
arrowleftdblstroke;21CD
arrowleftoverright;21C6
arrowleftwhite;21E6
arrowright;2192
arrowrightdblstroke;21CF
arrowrightheavy;279E
arrowrightoverleft;21C4
arrowrightwhite;21E8
arrowtableft;21E4
arrowtabright;21E5
arrowup;2191
arrowupdn;2195
arrowupdnbse;21A8
arrowupdownbase;21A8
arrowupleft;2196
arrowupleftofdown;21C5
arrowupright;2197
arrowupwhite;21E7
arrowvertex;F8E6
asciicircum;005E
asciicircummonospace;FF3E
asciitilde;007E
asciitildemonospace;FF5E
ascript;0251
ascriptturned;0252
asmallhiragana;3041
asmallkatakana;30A1
asmallkatakanahalfwidth;FF67
asterisk;002A
asteriskaltonearabic;066D
asteriskarabic;066D
asteriskmath;2217
asteriskmonospace;FF0A
asterisksmall;FE61
asterism;2042
asuperior;F6E9
asymptoticallyequal;2243
at;0040
atilde;00E3
atmonospace;FF20
atsmall;FE6B
aturned;0250
aubengali;0994
aubopomofo;3120
audeva;0914
augujarati;0A94
augurmukhi;0A14
aulengthmarkbengali;09D7
aumatragurmukhi;0A4C
auvowelsignbengali;09CC
auvowelsigndeva;094C
auvowelsigngujarati;0ACC
avagrahadeva;093D
aybarmenian;0561
ayin;05E2
ayinaltonehebrew;FB20
ayinhebrew;05E2
b;0062
babengali;09AC
backslash;005C
backslashmonospace;FF3C
badeva;092C
bagujarati;0AAC
bagurmukhi;0A2C
bahiragana;3070
bahtthai;0E3F
bakatakana;30D0
bar;007C
barmonospace;FF5C
bbopomofo;3105
bcircle;24D1
bdotaccent;1E03
bdotbelow;1E05
beamedsixteenthnotes;266C
because;2235
becyrillic;0431
beharabic;0628
behfinalarabic;FE90
behinitialarabic;FE91
behiragana;3079
behmedialarabic;FE92
behmeeminitialarabic;FC9F
behmeemisolatedarabic;FC08
behnoonfinalarabic;FC6D
bekatakana;30D9
benarmenian;0562
bet;05D1
beta;03B2
betasymbolgreek;03D0
betdagesh;FB31
betdageshhebrew;FB31
bethebrew;05D1
betrafehebrew;FB4C
bhabengali;09AD
bhadeva;092D
bhagujarati;0AAD
bhagurmukhi;0A2D
bhook;0253
bihiragana;3073
bikatakana;30D3
bilabialclick;0298
bindigurmukhi;0A02
birusquare;3331
blackcircle;25CF
blackdiamond;25C6
blackdownpointingtriangle;25BC
blackleftpointingpointer;25C4
blackleftpointingtriangle;25C0
blacklenticularbracketleft;3010
blacklenticularbracketleftvertical;FE3B
blacklenticularbracketright;3011
blacklenticularbracketrightvertical;FE3C
blacklowerlefttriangle;25E3
blacklowerrighttriangle;25E2
blackrectangle;25AC
blackrightpointingpointer;25BA
blackrightpointingtriangle;25B6
blacksmallsquare;25AA
blacksmilingface;263B
blacksquare;25A0
blackstar;2605
blackupperlefttriangle;25E4
blackupperrighttriangle;25E5
blackuppointingsmalltriangle;25B4
blackuppointingtriangle;25B2
blank;2423
blinebelow;1E07
block;2588
bmonospace;FF42
bobaimaithai;0E1A
bohiragana;307C
bokatakana;30DC
bparen;249D
bqsquare;33C3
braceex;F8F4
braceleft;007B
braceleftbt;F8F3
braceleftmid;F8F2
braceleftmonospace;FF5B
braceleftsmall;FE5B
bracelefttp;F8F1
braceleftvertical;FE37
braceright;007D
bracerightbt;F8FE
bracerightmid;F8FD
bracerightmonospace;FF5D
bracerightsmall;FE5C
bracerighttp;F8FC
bracerightvertical;FE38
bracketleft;005B
bracketleftbt;F8F0
bracketleftex;F8EF
bracketleftmonospace;FF3B
bracketlefttp;F8EE
bracketright;005D
bracketrightbt;F8FB
bracketrightex;F8FA
bracketrightmonospace;FF3D
bracketrighttp;F8F9
breve;02D8
brevebelowcmb;032E
brevecmb;0306
breveinvertedbelowcmb;032F
breveinvertedcmb;0311
breveinverteddoublecmb;0361
bridgebelowcmb;032A
bridgeinvertedbelowcmb;033A
brokenbar;00A6
bstroke;0180
bsuperior;F6EA
btopbar;0183
buhiragana;3076
bukatakana;30D6
bullet;2022
bulletinverse;25D8
bulletoperator;2219
bullseye;25CE
c;0063
caarmenian;056E
cabengali;099A
cacute;0107
cadeva;091A
cagujarati;0A9A
cagurmukhi;0A1A
calsquare;3388
candrabindubengali;0981
candrabinducmb;0310
candrabindudeva;0901
candrabindugujarati;0A81
capslock;21EA
careof;2105
caron;02C7
caronbelowcmb;032C
caroncmb;030C
carriagereturn;21B5
cbopomofo;3118
ccaron;010D
ccedilla;00E7
ccedillaacute;1E09
ccircle;24D2
ccircumflex;0109
ccurl;0255
cdot;010B
cdotaccent;010B
cdsquare;33C5
cedilla;00B8
cedillacmb;0327
cent;00A2
centigrade;2103
centinferior;F6DF
centmonospace;FFE0
centoldstyle;F7A2
centsuperior;F6E0
chaarmenian;0579
chabengali;099B
chadeva;091B
chagujarati;0A9B
chagurmukhi;0A1B
chbopomofo;3114
cheabkhasiancyrillic;04BD
checkmark;2713
checyrillic;0447
chedescenderabkhasiancyrillic;04BF
chedescendercyrillic;04B7
chedieresiscyrillic;04F5
cheharmenian;0573
chekhakassiancyrillic;04CC
cheverticalstrokecyrillic;04B9
chi;03C7
chieuchacirclekorean;3277
chieuchaparenkorean;3217
chieuchcirclekorean;3269
chieuchkorean;314A
chieuchparenkorean;3209
chochangthai;0E0A
chochanthai;0E08
chochingthai;0E09
chochoethai;0E0C
chook;0188
cieucacirclekorean;3276
cieucaparenkorean;3216
cieuccirclekorean;3268
cieuckorean;3148
cieucparenkorean;3208
cieucuparenkorean;321C
circle;25CB
circlemultiply;2297
circleot;2299
circleplus;2295
circlepostalmark;3036
circlewithlefthalfblack;25D0
circlewithrighthalfblack;25D1
circumflex;02C6
circumflexbelowcmb;032D
circumflexcmb;0302
clear;2327
clickalveolar;01C2
clickdental;01C0
clicklateral;01C1
clickretroflex;01C3
club;2663
clubsuitblack;2663
clubsuitwhite;2667
cmcubedsquare;33A4
cmonospace;FF43
cmsquaredsquare;33A0
coarmenian;0581
colon;003A
colonmonetary;20A1
colonmonospace;FF1A
colonsign;20A1
colonsmall;FE55
colontriangularhalfmod;02D1
colontriangularmod;02D0
comma;002C
commaabovecmb;0313
commaaboverightcmb;0315
commaaccent;F6C3
commaarabic;060C
commaarmenian;055D
commainferior;F6E1
commamonospace;FF0C
commareversedabovecmb;0314
commareversedmod;02BD
commasmall;FE50
commasuperior;F6E2
commaturnedabovecmb;0312
commaturnedmod;02BB
compass;263C
congruent;2245
contourintegral;222E
control;2303
controlACK;0006
controlBEL;0007
controlBS;0008
controlCAN;0018
controlCR;000D
controlDC1;0011
controlDC2;0012
controlDC3;0013
controlDC4;0014
controlDEL;007F
controlDLE;0010
controlEM;0019
controlENQ;0005
controlEOT;0004
controlESC;001B
controlETB;0017
controlETX;0003
controlFF;000C
controlFS;001C
controlGS;001D
controlHT;0009
controlLF;000A
controlNAK;0015
controlRS;001E
controlSI;000F
controlSO;000E
controlSOT;0002
controlSTX;0001
controlSUB;001A
controlSYN;0016
controlUS;001F
controlVT;000B
copyright;00A9
copyrightsans;F8E9
copyrightserif;F6D9
cornerbracketleft;300C
cornerbracketlefthalfwidth;FF62
cornerbracketleftvertical;FE41
cornerbracketright;300D
cornerbracketrighthalfwidth;FF63
cornerbracketrightvertical;FE42
corporationsquare;337F
cosquare;33C7
coverkgsquare;33C6
cparen;249E
cruzeiro;20A2
cstretched;0297
curlyand;22CF
curlyor;22CE
currency;00A4
cyrBreve;F6D1
cyrFlex;F6D2
cyrbreve;F6D4
cyrflex;F6D5
d;0064
daarmenian;0564
dabengali;09A6
dadarabic;0636
dadeva;0926
dadfinalarabic;FEBE
dadinitialarabic;FEBF
dadmedialarabic;FEC0
dagesh;05BC
dageshhebrew;05BC
dagger;2020
daggerdbl;2021
dagujarati;0AA6
dagurmukhi;0A26
dahiragana;3060
dakatakana;30C0
dalarabic;062F
dalet;05D3
daletdagesh;FB33
daletdageshhebrew;FB33
dalethatafpatah;05D3 05B2
dalethatafpatahhebrew;05D3 05B2
dalethatafsegol;05D3 05B1
dalethatafsegolhebrew;05D3 05B1
dalethebrew;05D3
dalethiriq;05D3 05B4
dalethiriqhebrew;05D3 05B4
daletholam;05D3 05B9
daletholamhebrew;05D3 05B9
daletpatah;05D3 05B7
daletpatahhebrew;05D3 05B7
daletqamats;05D3 05B8
daletqamatshebrew;05D3 05B8
daletqubuts;05D3 05BB
daletqubutshebrew;05D3 05BB
daletsegol;05D3 05B6
daletsegolhebrew;05D3 05B6
daletsheva;05D3 05B0
daletshevahebrew;05D3 05B0
dalettsere;05D3 05B5
dalettserehebrew;05D3 05B5
dalfinalarabic;FEAA
dammaarabic;064F
dammalowarabic;064F
dammatanaltonearabic;064C
dammatanarabic;064C
danda;0964
dargahebrew;05A7
dargalefthebrew;05A7
dasiapneumatacyrilliccmb;0485
dblGrave;F6D3
dblanglebracketleft;300A
dblanglebracketleftvertical;FE3D
dblanglebracketright;300B
dblanglebracketrightvertical;FE3E
dblarchinvertedbelowcmb;032B
dblarrowleft;21D4
dblarrowright;21D2
dbldanda;0965
dblgrave;F6D6
dblgravecmb;030F
dblintegral;222C
dbllowline;2017
dbllowlinecmb;0333
dbloverlinecmb;033F
dblprimemod;02BA
dblverticalbar;2016
dblverticallineabovecmb;030E
dbopomofo;3109
dbsquare;33C8
dcaron;010F
dcedilla;1E11
dcircle;24D3
dcircumflexbelow;1E13
dcroat;0111
ddabengali;09A1
ddadeva;0921
ddagujarati;0AA1
ddagurmukhi;0A21
ddalarabic;0688
ddalfinalarabic;FB89
dddhadeva;095C
ddhabengali;09A2
ddhadeva;0922
ddhagujarati;0AA2
ddhagurmukhi;0A22
ddotaccent;1E0B
ddotbelow;1E0D
decimalseparatorarabic;066B
decimalseparatorpersian;066B
decyrillic;0434
degree;00B0
dehihebrew;05AD
dehiragana;3067
deicoptic;03EF
dekatakana;30C7
deleteleft;232B
deleteright;2326
delta;03B4
deltaturned;018D
denominatorminusonenumeratorbengali;09F8
dezh;02A4
dhabengali;09A7
dhadeva;0927
dhagujarati;0AA7
dhagurmukhi;0A27
dhook;0257
dialytikatonos;0385
dialytikatonoscmb;0344
diamond;2666
diamondsuitwhite;2662
dieresis;00A8
dieresisacute;F6D7
dieresisbelowcmb;0324
dieresiscmb;0308
dieresisgrave;F6D8
dieresistonos;0385
dihiragana;3062
dikatakana;30C2
dittomark;3003
divide;00F7
divides;2223
divisionslash;2215
djecyrillic;0452
dkshade;2593
dlinebelow;1E0F
dlsquare;3397
dmacron;0111
dmonospace;FF44
dnblock;2584
dochadathai;0E0E
dodekthai;0E14
dohiragana;3069
dokatakana;30C9
dollar;0024
dollarinferior;F6E3
dollarmonospace;FF04
dollaroldstyle;F724
dollarsmall;FE69
dollarsuperior;F6E4
dong;20AB
dorusquare;3326
dotaccent;02D9
dotaccentcmb;0307
dotbelowcmb;0323
dotbelowcomb;0323
dotkatakana;30FB
dotlessi;0131
dotlessj;F6BE
dotlessjstrokehook;0284
dotmath;22C5
dottedcircle;25CC
doubleyodpatah;FB1F
doubleyodpatahhebrew;FB1F
downtackbelowcmb;031E
downtackmod;02D5
dparen;249F
dsuperior;F6EB
dtail;0256
dtopbar;018C
duhiragana;3065
dukatakana;30C5
dz;01F3
dzaltone;02A3
dzcaron;01C6
dzcurl;02A5
dzeabkhasiancyrillic;04E1
dzecyrillic;0455
dzhecyrillic;045F
e;0065
eacute;00E9
earth;2641
ebengali;098F
ebopomofo;311C
ebreve;0115
ecandradeva;090D
ecandragujarati;0A8D
ecandravowelsigndeva;0945
ecandravowelsigngujarati;0AC5
ecaron;011B
ecedillabreve;1E1D
echarmenian;0565
echyiwnarmenian;0587
ecircle;24D4
ecircumflex;00EA
ecircumflexacute;1EBF
ecircumflexbelow;1E19
ecircumflexdotbelow;1EC7
ecircumflexgrave;1EC1
ecircumflexhookabove;1EC3
ecircumflextilde;1EC5
ecyrillic;0454
edblgrave;0205
edeva;090F
edieresis;00EB
edot;0117
edotaccent;0117
edotbelow;1EB9
eegurmukhi;0A0F
eematragurmukhi;0A47
efcyrillic;0444
egrave;00E8
egujarati;0A8F
eharmenian;0567
ehbopomofo;311D
ehiragana;3048
ehookabove;1EBB
eibopomofo;311F
eight;0038
eightarabic;0668
eightbengali;09EE
eightcircle;2467
eightcircleinversesansserif;2791
eightdeva;096E
eighteencircle;2471
eighteenparen;2485
eighteenperiod;2499
eightgujarati;0AEE
eightgurmukhi;0A6E
eighthackarabic;0668
eighthangzhou;3028
eighthnotebeamed;266B
eightideographicparen;3227
eightinferior;2088
eightmonospace;FF18
eightoldstyle;F738
eightparen;247B
eightperiod;248F
eightpersian;06F8
eightroman;2177
eightsuperior;2078
eightthai;0E58
einvertedbreve;0207
eiotifiedcyrillic;0465
ekatakana;30A8
ekatakanahalfwidth;FF74
ekonkargurmukhi;0A74
ekorean;3154
elcyrillic;043B
element;2208
elevencircle;246A
elevenparen;247E
elevenperiod;2492
elevenroman;217A
ellipsis;2026
ellipsisvertical;22EE
emacron;0113
emacronacute;1E17
emacrongrave;1E15
emcyrillic;043C
emdash;2014
emdashvertical;FE31
emonospace;FF45
emphasismarkarmenian;055B
emptyset;2205
enbopomofo;3123
encyrillic;043D
endash;2013
endashvertical;FE32
endescendercyrillic;04A3
eng;014B
engbopomofo;3125
enghecyrillic;04A5
enhookcyrillic;04C8
enspace;2002
eogonek;0119
eokorean;3153
eopen;025B
eopenclosed;029A
eopenreversed;025C
eopenreversedclosed;025E
eopenreversedhook;025D
eparen;24A0
epsilon;03B5
epsilontonos;03AD
equal;003D
equalmonospace;FF1D
equalsmall;FE66
equalsuperior;207C
equivalence;2261
erbopomofo;3126
ercyrillic;0440
ereversed;0258
ereversedcyrillic;044D
escyrillic;0441
esdescendercyrillic;04AB
esh;0283
eshcurl;0286
eshortdeva;090E
eshortvowelsigndeva;0946
eshreversedloop;01AA
eshsquatreversed;0285
esmallhiragana;3047
esmallkatakana;30A7
esmallkatakanahalfwidth;FF6A
estimated;212E
esuperior;F6EC
eta;03B7
etarmenian;0568
etatonos;03AE
eth;00F0
etilde;1EBD
etildebelow;1E1B
etnahtafoukhhebrew;0591
etnahtafoukhlefthebrew;0591
etnahtahebrew;0591
etnahtalefthebrew;0591
eturned;01DD
eukorean;3161
euro;20AC
evowelsignbengali;09C7
evowelsigndeva;0947
evowelsigngujarati;0AC7
exclam;0021
exclamarmenian;055C
exclamdbl;203C
exclamdown;00A1
exclamdownsmall;F7A1
exclammonospace;FF01
exclamsmall;F721
existential;2203
ezh;0292
ezhcaron;01EF
ezhcurl;0293
ezhreversed;01B9
ezhtail;01BA
f;0066
fadeva;095E
fagurmukhi;0A5E
fahrenheit;2109
fathaarabic;064E
fathalowarabic;064E
fathatanarabic;064B
fbopomofo;3108
fcircle;24D5
fdotaccent;1E1F
feharabic;0641
feharmenian;0586
fehfinalarabic;FED2
fehinitialarabic;FED3
fehmedialarabic;FED4
feicoptic;03E5
female;2640
ff;FB00
ffi;FB03
ffl;FB04
fi;FB01
fifteencircle;246E
fifteenparen;2482
fifteenperiod;2496
figuredash;2012
filledbox;25A0
filledrect;25AC
finalkaf;05DA
finalkafdagesh;FB3A
finalkafdageshhebrew;FB3A
finalkafhebrew;05DA
finalkafqamats;05DA 05B8
finalkafqamatshebrew;05DA 05B8
finalkafsheva;05DA 05B0
finalkafshevahebrew;05DA 05B0
finalmem;05DD
finalmemhebrew;05DD
finalnun;05DF
finalnunhebrew;05DF
finalpe;05E3
finalpehebrew;05E3
finaltsadi;05E5
finaltsadihebrew;05E5
firsttonechinese;02C9
fisheye;25C9
fitacyrillic;0473
five;0035
fivearabic;0665
fivebengali;09EB
fivecircle;2464
fivecircleinversesansserif;278E
fivedeva;096B
fiveeighths;215D
fivegujarati;0AEB
fivegurmukhi;0A6B
fivehackarabic;0665
fivehangzhou;3025
fiveideographicparen;3224
fiveinferior;2085
fivemonospace;FF15
fiveoldstyle;F735
fiveparen;2478
fiveperiod;248C
fivepersian;06F5
fiveroman;2174
fivesuperior;2075
fivethai;0E55
fl;FB02
florin;0192
fmonospace;FF46
fmsquare;3399
fofanthai;0E1F
fofathai;0E1D
fongmanthai;0E4F
forall;2200
four;0034
fourarabic;0664
fourbengali;09EA
fourcircle;2463
fourcircleinversesansserif;278D
fourdeva;096A
fourgujarati;0AEA
fourgurmukhi;0A6A
fourhackarabic;0664
fourhangzhou;3024
fourideographicparen;3223
fourinferior;2084
fourmonospace;FF14
fournumeratorbengali;09F7
fouroldstyle;F734
fourparen;2477
fourperiod;248B
fourpersian;06F4
fourroman;2173
foursuperior;2074
fourteencircle;246D
fourteenparen;2481
fourteenperiod;2495
fourthai;0E54
fourthtonechinese;02CB
fparen;24A1
fraction;2044
franc;20A3
g;0067
gabengali;0997
gacute;01F5
gadeva;0917
gafarabic;06AF
gaffinalarabic;FB93
gafinitialarabic;FB94
gafmedialarabic;FB95
gagujarati;0A97
gagurmukhi;0A17
gahiragana;304C
gakatakana;30AC
gamma;03B3
gammalatinsmall;0263
gammasuperior;02E0
gangiacoptic;03EB
gbopomofo;310D
gbreve;011F
gcaron;01E7
gcedilla;0123
gcircle;24D6
gcircumflex;011D
gcommaaccent;0123
gdot;0121
gdotaccent;0121
gecyrillic;0433
gehiragana;3052
gekatakana;30B2
geometricallyequal;2251
gereshaccenthebrew;059C
gereshhebrew;05F3
gereshmuqdamhebrew;059D
germandbls;00DF
gershayimaccenthebrew;059E
gershayimhebrew;05F4
getamark;3013
ghabengali;0998
ghadarmenian;0572
ghadeva;0918
ghagujarati;0A98
ghagurmukhi;0A18
ghainarabic;063A
ghainfinalarabic;FECE
ghaininitialarabic;FECF
ghainmedialarabic;FED0
ghemiddlehookcyrillic;0495
ghestrokecyrillic;0493
gheupturncyrillic;0491
ghhadeva;095A
ghhagurmukhi;0A5A
ghook;0260
ghzsquare;3393
gihiragana;304E
gikatakana;30AE
gimarmenian;0563
gimel;05D2
gimeldagesh;FB32
gimeldageshhebrew;FB32
gimelhebrew;05D2
gjecyrillic;0453
glottalinvertedstroke;01BE
glottalstop;0294
glottalstopinverted;0296
glottalstopmod;02C0
glottalstopreversed;0295
glottalstopreversedmod;02C1
glottalstopreversedsuperior;02E4
glottalstopstroke;02A1
glottalstopstrokereversed;02A2
gmacron;1E21
gmonospace;FF47
gohiragana;3054
gokatakana;30B4
gparen;24A2
gpasquare;33AC
gradient;2207
grave;0060
gravebelowcmb;0316
gravecmb;0300
gravecomb;0300
gravedeva;0953
gravelowmod;02CE
gravemonospace;FF40
gravetonecmb;0340
greater;003E
greaterequal;2265
greaterequalorless;22DB
greatermonospace;FF1E
greaterorequivalent;2273
greaterorless;2277
greateroverequal;2267
greatersmall;FE65
gscript;0261
gstroke;01E5
guhiragana;3050
guillemotleft;00AB
guillemotright;00BB
guilsinglleft;2039
guilsinglright;203A
gukatakana;30B0
guramusquare;3318
gysquare;33C9
h;0068
haabkhasiancyrillic;04A9
haaltonearabic;06C1
habengali;09B9
hadescendercyrillic;04B3
hadeva;0939
hagujarati;0AB9
hagurmukhi;0A39
haharabic;062D
hahfinalarabic;FEA2
hahinitialarabic;FEA3
hahiragana;306F
hahmedialarabic;FEA4
haitusquare;332A
hakatakana;30CF
hakatakanahalfwidth;FF8A
halantgurmukhi;0A4D
hamzaarabic;0621
hamzadammaarabic;0621 064F
hamzadammatanarabic;0621 064C
hamzafathaarabic;0621 064E
hamzafathatanarabic;0621 064B
hamzalowarabic;0621
hamzalowkasraarabic;0621 0650
hamzalowkasratanarabic;0621 064D
hamzasukunarabic;0621 0652
hangulfiller;3164
hardsigncyrillic;044A
harpoonleftbarbup;21BC
harpoonrightbarbup;21C0
hasquare;33CA
hatafpatah;05B2
hatafpatah16;05B2
hatafpatah23;05B2
hatafpatah2f;05B2
hatafpatahhebrew;05B2
hatafpatahnarrowhebrew;05B2
hatafpatahquarterhebrew;05B2
hatafpatahwidehebrew;05B2
hatafqamats;05B3
hatafqamats1b;05B3
hatafqamats28;05B3
hatafqamats34;05B3
hatafqamatshebrew;05B3
hatafqamatsnarrowhebrew;05B3
hatafqamatsquarterhebrew;05B3
hatafqamatswidehebrew;05B3
hatafsegol;05B1
hatafsegol17;05B1
hatafsegol24;05B1
hatafsegol30;05B1
hatafsegolhebrew;05B1
hatafsegolnarrowhebrew;05B1
hatafsegolquarterhebrew;05B1
hatafsegolwidehebrew;05B1
hbar;0127
hbopomofo;310F
hbrevebelow;1E2B
hcedilla;1E29
hcircle;24D7
hcircumflex;0125
hdieresis;1E27
hdotaccent;1E23
hdotbelow;1E25
he;05D4
heart;2665
heartsuitblack;2665
heartsuitwhite;2661
hedagesh;FB34
hedageshhebrew;FB34
hehaltonearabic;06C1
heharabic;0647
hehebrew;05D4
hehfinalaltonearabic;FBA7
hehfinalalttwoarabic;FEEA
hehfinalarabic;FEEA
hehhamzaabovefinalarabic;FBA5
hehhamzaaboveisolatedarabic;FBA4
hehinitialaltonearabic;FBA8
hehinitialarabic;FEEB
hehiragana;3078
hehmedialaltonearabic;FBA9
hehmedialarabic;FEEC
heiseierasquare;337B
hekatakana;30D8
hekatakanahalfwidth;FF8D
hekutaarusquare;3336
henghook;0267
herutusquare;3339
het;05D7
hethebrew;05D7
hhook;0266
hhooksuperior;02B1
hieuhacirclekorean;327B
hieuhaparenkorean;321B
hieuhcirclekorean;326D
hieuhkorean;314E
hieuhparenkorean;320D
hihiragana;3072
hikatakana;30D2
hikatakanahalfwidth;FF8B
hiriq;05B4
hiriq14;05B4
hiriq21;05B4
hiriq2d;05B4
hiriqhebrew;05B4
hiriqnarrowhebrew;05B4
hiriqquarterhebrew;05B4
hiriqwidehebrew;05B4
hlinebelow;1E96
hmonospace;FF48
hoarmenian;0570
hohipthai;0E2B
hohiragana;307B
hokatakana;30DB
hokatakanahalfwidth;FF8E
holam;05B9
holam19;05B9
holam26;05B9
holam32;05B9
holamhebrew;05B9
holamnarrowhebrew;05B9
holamquarterhebrew;05B9
holamwidehebrew;05B9
honokhukthai;0E2E
hookabovecomb;0309
hookcmb;0309
hookpalatalizedbelowcmb;0321
hookretroflexbelowcmb;0322
hoonsquare;3342
horicoptic;03E9
horizontalbar;2015
horncmb;031B
hotsprings;2668
house;2302
hparen;24A3
hsuperior;02B0
hturned;0265
huhiragana;3075
huiitosquare;3333
hukatakana;30D5
hukatakanahalfwidth;FF8C
hungarumlaut;02DD
hungarumlautcmb;030B
hv;0195
hyphen;002D
hypheninferior;F6E5
hyphenmonospace;FF0D
hyphensmall;FE63
hyphensuperior;F6E6
hyphentwo;2010
i;0069
iacute;00ED
iacyrillic;044F
ibengali;0987
ibopomofo;3127
ibreve;012D
icaron;01D0
icircle;24D8
icircumflex;00EE
icyrillic;0456
idblgrave;0209
ideographearthcircle;328F
ideographfirecircle;328B
ideographicallianceparen;323F
ideographiccallparen;323A
ideographiccentrecircle;32A5
ideographicclose;3006
ideographiccomma;3001
ideographiccommaleft;FF64
ideographiccongratulationparen;3237
ideographiccorrectcircle;32A3
ideographicearthparen;322F
ideographicenterpriseparen;323D
ideographicexcellentcircle;329D
ideographicfestivalparen;3240
ideographicfinancialcircle;3296
ideographicfinancialparen;3236
ideographicfireparen;322B
ideographichaveparen;3232
ideographichighcircle;32A4
ideographiciterationmark;3005
ideographiclaborcircle;3298
ideographiclaborparen;3238
ideographicleftcircle;32A7
ideographiclowcircle;32A6
ideographicmedicinecircle;32A9
ideographicmetalparen;322E
ideographicmoonparen;322A
ideographicnameparen;3234
ideographicperiod;3002
ideographicprintcircle;329E
ideographicreachparen;3243
ideographicrepresentparen;3239
ideographicresourceparen;323E
ideographicrightcircle;32A8
ideographicsecretcircle;3299
ideographicselfparen;3242
ideographicsocietyparen;3233
ideographicspace;3000
ideographicspecialparen;3235
ideographicstockparen;3231
ideographicstudyparen;323B
ideographicsunparen;3230
ideographicsuperviseparen;323C
ideographicwaterparen;322C
ideographicwoodparen;322D
ideographiczero;3007
ideographmetalcircle;328E
ideographmooncircle;328A
ideographnamecircle;3294
ideographsuncircle;3290
ideographwatercircle;328C
ideographwoodcircle;328D
ideva;0907
idieresis;00EF
idieresisacute;1E2F
idieresiscyrillic;04E5
idotbelow;1ECB
iebrevecyrillic;04D7
iecyrillic;0435
ieungacirclekorean;3275
ieungaparenkorean;3215
ieungcirclekorean;3267
ieungkorean;3147
ieungparenkorean;3207
igrave;00EC
igujarati;0A87
igurmukhi;0A07
ihiragana;3044
ihookabove;1EC9
iibengali;0988
iicyrillic;0438
iideva;0908
iigujarati;0A88
iigurmukhi;0A08
iimatragurmukhi;0A40
iinvertedbreve;020B
iishortcyrillic;0439
iivowelsignbengali;09C0
iivowelsigndeva;0940
iivowelsigngujarati;0AC0
ij;0133
ikatakana;30A4
ikatakanahalfwidth;FF72
ikorean;3163
ilde;02DC
iluyhebrew;05AC
imacron;012B
imacroncyrillic;04E3
imageorapproximatelyequal;2253
imatragurmukhi;0A3F
imonospace;FF49
increment;2206
infinity;221E
iniarmenian;056B
integral;222B
integralbottom;2321
integralbt;2321
integralex;F8F5
integraltop;2320
integraltp;2320
intersection;2229
intisquare;3305
invbullet;25D8
invcircle;25D9
invsmileface;263B
iocyrillic;0451
iogonek;012F
iota;03B9
iotadieresis;03CA
iotadieresistonos;0390
iotalatin;0269
iotatonos;03AF
iparen;24A4
irigurmukhi;0A72
ismallhiragana;3043
ismallkatakana;30A3
ismallkatakanahalfwidth;FF68
issharbengali;09FA
istroke;0268
isuperior;F6ED
iterationhiragana;309D
iterationkatakana;30FD
itilde;0129
itildebelow;1E2D
iubopomofo;3129
iucyrillic;044E
ivowelsignbengali;09BF
ivowelsigndeva;093F
ivowelsigngujarati;0ABF
izhitsacyrillic;0475
izhitsadblgravecyrillic;0477
j;006A
jaarmenian;0571
jabengali;099C
jadeva;091C
jagujarati;0A9C
jagurmukhi;0A1C
jbopomofo;3110
jcaron;01F0
jcircle;24D9
jcircumflex;0135
jcrossedtail;029D
jdotlessstroke;025F
jecyrillic;0458
jeemarabic;062C
jeemfinalarabic;FE9E
jeeminitialarabic;FE9F
jeemmedialarabic;FEA0
jeharabic;0698
jehfinalarabic;FB8B
jhabengali;099D
jhadeva;091D
jhagujarati;0A9D
jhagurmukhi;0A1D
jheharmenian;057B
jis;3004
jmonospace;FF4A
jparen;24A5
jsuperior;02B2
k;006B
kabashkircyrillic;04A1
kabengali;0995
kacute;1E31
kacyrillic;043A
kadescendercyrillic;049B
kadeva;0915
kaf;05DB
kafarabic;0643
kafdagesh;FB3B
kafdageshhebrew;FB3B
kaffinalarabic;FEDA
kafhebrew;05DB
kafinitialarabic;FEDB
kafmedialarabic;FEDC
kafrafehebrew;FB4D
kagujarati;0A95
kagurmukhi;0A15
kahiragana;304B
kahookcyrillic;04C4
kakatakana;30AB
kakatakanahalfwidth;FF76
kappa;03BA
kappasymbolgreek;03F0
kapyeounmieumkorean;3171
kapyeounphieuphkorean;3184
kapyeounpieupkorean;3178
kapyeounssangpieupkorean;3179
karoriisquare;330D
kashidaautoarabic;0640
kashidaautonosidebearingarabic;0640
kasmallkatakana;30F5
kasquare;3384
kasraarabic;0650
kasratanarabic;064D
kastrokecyrillic;049F
katahiraprolongmarkhalfwidth;FF70
kaverticalstrokecyrillic;049D
kbopomofo;310E
kcalsquare;3389
kcaron;01E9
kcedilla;0137
kcircle;24DA
kcommaaccent;0137
kdotbelow;1E33
keharmenian;0584
kehiragana;3051
kekatakana;30B1
kekatakanahalfwidth;FF79
kenarmenian;056F
kesmallkatakana;30F6
kgreenlandic;0138
khabengali;0996
khacyrillic;0445
khadeva;0916
khagujarati;0A96
khagurmukhi;0A16
khaharabic;062E
khahfinalarabic;FEA6
khahinitialarabic;FEA7
khahmedialarabic;FEA8
kheicoptic;03E7
khhadeva;0959
khhagurmukhi;0A59
khieukhacirclekorean;3278
khieukhaparenkorean;3218
khieukhcirclekorean;326A
khieukhkorean;314B
khieukhparenkorean;320A
khokhaithai;0E02
khokhonthai;0E05
khokhuatthai;0E03
khokhwaithai;0E04
khomutthai;0E5B
khook;0199
khorakhangthai;0E06
khzsquare;3391
kihiragana;304D
kikatakana;30AD
kikatakanahalfwidth;FF77
kiroguramusquare;3315
kiromeetorusquare;3316
kirosquare;3314
kiyeokacirclekorean;326E
kiyeokaparenkorean;320E
kiyeokcirclekorean;3260
kiyeokkorean;3131
kiyeokparenkorean;3200
kiyeoksioskorean;3133
kjecyrillic;045C
klinebelow;1E35
klsquare;3398
kmcubedsquare;33A6
kmonospace;FF4B
kmsquaredsquare;33A2
kohiragana;3053
kohmsquare;33C0
kokaithai;0E01
kokatakana;30B3
kokatakanahalfwidth;FF7A
kooposquare;331E
koppacyrillic;0481
koreanstandardsymbol;327F
koroniscmb;0343
kparen;24A6
kpasquare;33AA
ksicyrillic;046F
ktsquare;33CF
kturned;029E
kuhiragana;304F
kukatakana;30AF
kukatakanahalfwidth;FF78
kvsquare;33B8
kwsquare;33BE
l;006C
labengali;09B2
lacute;013A
ladeva;0932
lagujarati;0AB2
lagurmukhi;0A32
lakkhangyaothai;0E45
lamaleffinalarabic;FEFC
lamalefhamzaabovefinalarabic;FEF8
lamalefhamzaaboveisolatedarabic;FEF7
lamalefhamzabelowfinalarabic;FEFA
lamalefhamzabelowisolatedarabic;FEF9
lamalefisolatedarabic;FEFB
lamalefmaddaabovefinalarabic;FEF6
lamalefmaddaaboveisolatedarabic;FEF5
lamarabic;0644
lambda;03BB
lambdastroke;019B
lamed;05DC
lameddagesh;FB3C
lameddageshhebrew;FB3C
lamedhebrew;05DC
lamedholam;05DC 05B9
lamedholamdagesh;05DC 05B9 05BC
lamedholamdageshhebrew;05DC 05B9 05BC
lamedholamhebrew;05DC 05B9
lamfinalarabic;FEDE
lamhahinitialarabic;FCCA
laminitialarabic;FEDF
lamjeeminitialarabic;FCC9
lamkhahinitialarabic;FCCB
lamlamhehisolatedarabic;FDF2
lammedialarabic;FEE0
lammeemhahinitialarabic;FD88
lammeeminitialarabic;FCCC
lammeemjeeminitialarabic;FEDF FEE4 FEA0
lammeemkhahinitialarabic;FEDF FEE4 FEA8
largecircle;25EF
lbar;019A
lbelt;026C
lbopomofo;310C
lcaron;013E
lcedilla;013C
lcircle;24DB
lcircumflexbelow;1E3D
lcommaaccent;013C
ldot;0140
ldotaccent;0140
ldotbelow;1E37
ldotbelowmacron;1E39
leftangleabovecmb;031A
lefttackbelowcmb;0318
less;003C
lessequal;2264
lessequalorgreater;22DA
lessmonospace;FF1C
lessorequivalent;2272
lessorgreater;2276
lessoverequal;2266
lesssmall;FE64
lezh;026E
lfblock;258C
lhookretroflex;026D
lira;20A4
liwnarmenian;056C
lj;01C9
ljecyrillic;0459
ll;F6C0
lladeva;0933
llagujarati;0AB3
llinebelow;1E3B
llladeva;0934
llvocalicbengali;09E1
llvocalicdeva;0961
llvocalicvowelsignbengali;09E3
llvocalicvowelsigndeva;0963
lmiddletilde;026B
lmonospace;FF4C
lmsquare;33D0
lochulathai;0E2C
logicaland;2227
logicalnot;00AC
logicalnotreversed;2310
logicalor;2228
lolingthai;0E25
longs;017F
lowlinecenterline;FE4E
lowlinecmb;0332
lowlinedashed;FE4D
lozenge;25CA
lparen;24A7
lslash;0142
lsquare;2113
lsuperior;F6EE
ltshade;2591
luthai;0E26
lvocalicbengali;098C
lvocalicdeva;090C
lvocalicvowelsignbengali;09E2
lvocalicvowelsigndeva;0962
lxsquare;33D3
m;006D
mabengali;09AE
macron;00AF
macronbelowcmb;0331
macroncmb;0304
macronlowmod;02CD
macronmonospace;FFE3
macute;1E3F
madeva;092E
magujarati;0AAE
magurmukhi;0A2E
mahapakhhebrew;05A4
mahapakhlefthebrew;05A4
mahiragana;307E
maichattawalowleftthai;F895
maichattawalowrightthai;F894
maichattawathai;0E4B
maichattawaupperleftthai;F893
maieklowleftthai;F88C
maieklowrightthai;F88B
maiekthai;0E48
maiekupperleftthai;F88A
maihanakatleftthai;F884
maihanakatthai;0E31
maitaikhuleftthai;F889
maitaikhuthai;0E47
maitholowleftthai;F88F
maitholowrightthai;F88E
maithothai;0E49
maithoupperleftthai;F88D
maitrilowleftthai;F892
maitrilowrightthai;F891
maitrithai;0E4A
maitriupperleftthai;F890
maiyamokthai;0E46
makatakana;30DE
makatakanahalfwidth;FF8F
male;2642
mansyonsquare;3347
maqafhebrew;05BE
mars;2642
masoracirclehebrew;05AF
masquare;3383
mbopomofo;3107
mbsquare;33D4
mcircle;24DC
mcubedsquare;33A5
mdotaccent;1E41
mdotbelow;1E43
meemarabic;0645
meemfinalarabic;FEE2
meeminitialarabic;FEE3
meemmedialarabic;FEE4
meemmeeminitialarabic;FCD1
meemmeemisolatedarabic;FC48
meetorusquare;334D
mehiragana;3081
meizierasquare;337E
mekatakana;30E1
mekatakanahalfwidth;FF92
mem;05DE
memdagesh;FB3E
memdageshhebrew;FB3E
memhebrew;05DE
menarmenian;0574
merkhahebrew;05A5
merkhakefulahebrew;05A6
merkhakefulalefthebrew;05A6
merkhalefthebrew;05A5
mhook;0271
mhzsquare;3392
middledotkatakanahalfwidth;FF65
middot;00B7
mieumacirclekorean;3272
mieumaparenkorean;3212
mieumcirclekorean;3264
mieumkorean;3141
mieumpansioskorean;3170
mieumparenkorean;3204
mieumpieupkorean;316E
mieumsioskorean;316F
mihiragana;307F
mikatakana;30DF
mikatakanahalfwidth;FF90
minus;2212
minusbelowcmb;0320
minuscircle;2296
minusmod;02D7
minusplus;2213
minute;2032
miribaarusquare;334A
mirisquare;3349
mlonglegturned;0270
mlsquare;3396
mmcubedsquare;33A3
mmonospace;FF4D
mmsquaredsquare;339F
mohiragana;3082
mohmsquare;33C1
mokatakana;30E2
mokatakanahalfwidth;FF93
molsquare;33D6
momathai;0E21
moverssquare;33A7
moverssquaredsquare;33A8
mparen;24A8
mpasquare;33AB
mssquare;33B3
msuperior;F6EF
mturned;026F
mu;00B5
mu1;00B5
muasquare;3382
muchgreater;226B
muchless;226A
mufsquare;338C
mugreek;03BC
mugsquare;338D
muhiragana;3080
mukatakana;30E0
mukatakanahalfwidth;FF91
mulsquare;3395
multiply;00D7
mumsquare;339B
munahhebrew;05A3
munahlefthebrew;05A3
musicalnote;266A
musicalnotedbl;266B
musicflatsign;266D
musicsharpsign;266F
mussquare;33B2
muvsquare;33B6
muwsquare;33BC
mvmegasquare;33B9
mvsquare;33B7
mwmegasquare;33BF
mwsquare;33BD
n;006E
nabengali;09A8
nabla;2207
nacute;0144
nadeva;0928
nagujarati;0AA8
nagurmukhi;0A28
nahiragana;306A
nakatakana;30CA
nakatakanahalfwidth;FF85
napostrophe;0149
nasquare;3381
nbopomofo;310B
nbspace;00A0
ncaron;0148
ncedilla;0146
ncircle;24DD
ncircumflexbelow;1E4B
ncommaaccent;0146
ndotaccent;1E45
ndotbelow;1E47
nehiragana;306D
nekatakana;30CD
nekatakanahalfwidth;FF88
newsheqelsign;20AA
nfsquare;338B
ngabengali;0999
ngadeva;0919
ngagujarati;0A99
ngagurmukhi;0A19
ngonguthai;0E07
nhiragana;3093
nhookleft;0272
nhookretroflex;0273
nieunacirclekorean;326F
nieunaparenkorean;320F
nieuncieuckorean;3135
nieuncirclekorean;3261
nieunhieuhkorean;3136
nieunkorean;3134
nieunpansioskorean;3168
nieunparenkorean;3201
nieunsioskorean;3167
nieuntikeutkorean;3166
nihiragana;306B
nikatakana;30CB
nikatakanahalfwidth;FF86
nikhahitleftthai;F899
nikhahitthai;0E4D
nine;0039
ninearabic;0669
ninebengali;09EF
ninecircle;2468
ninecircleinversesansserif;2792
ninedeva;096F
ninegujarati;0AEF
ninegurmukhi;0A6F
ninehackarabic;0669
ninehangzhou;3029
nineideographicparen;3228
nineinferior;2089
ninemonospace;FF19
nineoldstyle;F739
nineparen;247C
nineperiod;2490
ninepersian;06F9
nineroman;2178
ninesuperior;2079
nineteencircle;2472
nineteenparen;2486
nineteenperiod;249A
ninethai;0E59
nj;01CC
njecyrillic;045A
nkatakana;30F3
nkatakanahalfwidth;FF9D
nlegrightlong;019E
nlinebelow;1E49
nmonospace;FF4E
nmsquare;339A
nnabengali;09A3
nnadeva;0923
nnagujarati;0AA3
nnagurmukhi;0A23
nnnadeva;0929
nohiragana;306E
nokatakana;30CE
nokatakanahalfwidth;FF89
nonbreakingspace;00A0
nonenthai;0E13
nonuthai;0E19
noonarabic;0646
noonfinalarabic;FEE6
noonghunnaarabic;06BA
noonghunnafinalarabic;FB9F
noonhehinitialarabic;FEE7 FEEC
nooninitialarabic;FEE7
noonjeeminitialarabic;FCD2
noonjeemisolatedarabic;FC4B
noonmedialarabic;FEE8
noonmeeminitialarabic;FCD5
noonmeemisolatedarabic;FC4E
noonnoonfinalarabic;FC8D
notcontains;220C
notelement;2209
notelementof;2209
notequal;2260
notgreater;226F
notgreaternorequal;2271
notgreaternorless;2279
notidentical;2262
notless;226E
notlessnorequal;2270
notparallel;2226
notprecedes;2280
notsubset;2284
notsucceeds;2281
notsuperset;2285
nowarmenian;0576
nparen;24A9
nssquare;33B1
nsuperior;207F
ntilde;00F1
nu;03BD
nuhiragana;306C
nukatakana;30CC
nukatakanahalfwidth;FF87
nuktabengali;09BC
nuktadeva;093C
nuktagujarati;0ABC
nuktagurmukhi;0A3C
numbersign;0023
numbersignmonospace;FF03
numbersignsmall;FE5F
numeralsigngreek;0374
numeralsignlowergreek;0375
numero;2116
nun;05E0
nundagesh;FB40
nundageshhebrew;FB40
nunhebrew;05E0
nvsquare;33B5
nwsquare;33BB
nyabengali;099E
nyadeva;091E
nyagujarati;0A9E
nyagurmukhi;0A1E
o;006F
oacute;00F3
oangthai;0E2D
obarred;0275
obarredcyrillic;04E9
obarreddieresiscyrillic;04EB
obengali;0993
obopomofo;311B
obreve;014F
ocandradeva;0911
ocandragujarati;0A91
ocandravowelsigndeva;0949
ocandravowelsigngujarati;0AC9
ocaron;01D2
ocircle;24DE
ocircumflex;00F4
ocircumflexacute;1ED1
ocircumflexdotbelow;1ED9
ocircumflexgrave;1ED3
ocircumflexhookabove;1ED5
ocircumflextilde;1ED7
ocyrillic;043E
odblacute;0151
odblgrave;020D
odeva;0913
odieresis;00F6
odieresiscyrillic;04E7
odotbelow;1ECD
oe;0153
oekorean;315A
ogonek;02DB
ogonekcmb;0328
ograve;00F2
ogujarati;0A93
oharmenian;0585
ohiragana;304A
ohookabove;1ECF
ohorn;01A1
ohornacute;1EDB
ohorndotbelow;1EE3
ohorngrave;1EDD
ohornhookabove;1EDF
ohorntilde;1EE1
ohungarumlaut;0151
oi;01A3
oinvertedbreve;020F
okatakana;30AA
okatakanahalfwidth;FF75
okorean;3157
olehebrew;05AB
omacron;014D
omacronacute;1E53
omacrongrave;1E51
omdeva;0950
omega;03C9
omega1;03D6
omegacyrillic;0461
omegalatinclosed;0277
omegaroundcyrillic;047B
omegatitlocyrillic;047D
omegatonos;03CE
omgujarati;0AD0
omicron;03BF
omicrontonos;03CC
omonospace;FF4F
one;0031
onearabic;0661
onebengali;09E7
onecircle;2460
onecircleinversesansserif;278A
onedeva;0967
onedotenleader;2024
oneeighth;215B
onefitted;F6DC
onegujarati;0AE7
onegurmukhi;0A67
onehackarabic;0661
onehalf;00BD
onehangzhou;3021
oneideographicparen;3220
oneinferior;2081
onemonospace;FF11
onenumeratorbengali;09F4
oneoldstyle;F731
oneparen;2474
oneperiod;2488
onepersian;06F1
onequarter;00BC
oneroman;2170
onesuperior;00B9
onethai;0E51
onethird;2153
oogonek;01EB
oogonekmacron;01ED
oogurmukhi;0A13
oomatragurmukhi;0A4B
oopen;0254
oparen;24AA
openbullet;25E6
option;2325
ordfeminine;00AA
ordmasculine;00BA
orthogonal;221F
oshortdeva;0912
oshortvowelsigndeva;094A
oslash;00F8
oslashacute;01FF
osmallhiragana;3049
osmallkatakana;30A9
osmallkatakanahalfwidth;FF6B
ostrokeacute;01FF
osuperior;F6F0
otcyrillic;047F
otilde;00F5
otildeacute;1E4D
otildedieresis;1E4F
oubopomofo;3121
overline;203E
overlinecenterline;FE4A
overlinecmb;0305
overlinedashed;FE49
overlinedblwavy;FE4C
overlinewavy;FE4B
overscore;00AF
ovowelsignbengali;09CB
ovowelsigndeva;094B
ovowelsigngujarati;0ACB
p;0070
paampssquare;3380
paasentosquare;332B
pabengali;09AA
pacute;1E55
padeva;092A
pagedown;21DF
pageup;21DE
pagujarati;0AAA
pagurmukhi;0A2A
pahiragana;3071
paiyannoithai;0E2F
pakatakana;30D1
palatalizationcyrilliccmb;0484
palochkacyrillic;04C0
pansioskorean;317F
paragraph;00B6
parallel;2225
parenleft;0028
parenleftaltonearabic;FD3E
parenleftbt;F8ED
parenleftex;F8EC
parenleftinferior;208D
parenleftmonospace;FF08
parenleftsmall;FE59
parenleftsuperior;207D
parenlefttp;F8EB
parenleftvertical;FE35
parenright;0029
parenrightaltonearabic;FD3F
parenrightbt;F8F8
parenrightex;F8F7
parenrightinferior;208E
parenrightmonospace;FF09
parenrightsmall;FE5A
parenrightsuperior;207E
parenrighttp;F8F6
parenrightvertical;FE36
partialdiff;2202
paseqhebrew;05C0
pashtahebrew;0599
pasquare;33A9
patah;05B7
patah11;05B7
patah1d;05B7
patah2a;05B7
patahhebrew;05B7
patahnarrowhebrew;05B7
patahquarterhebrew;05B7
patahwidehebrew;05B7
pazerhebrew;05A1
pbopomofo;3106
pcircle;24DF
pdotaccent;1E57
pe;05E4
pecyrillic;043F
pedagesh;FB44
pedageshhebrew;FB44
peezisquare;333B
pefinaldageshhebrew;FB43
peharabic;067E
peharmenian;057A
pehebrew;05E4
pehfinalarabic;FB57
pehinitialarabic;FB58
pehiragana;307A
pehmedialarabic;FB59
pekatakana;30DA
pemiddlehookcyrillic;04A7
perafehebrew;FB4E
percent;0025
percentarabic;066A
percentmonospace;FF05
percentsmall;FE6A
period;002E
periodarmenian;0589
periodcentered;00B7
periodhalfwidth;FF61
periodinferior;F6E7
periodmonospace;FF0E
periodsmall;FE52
periodsuperior;F6E8
perispomenigreekcmb;0342
perpendicular;22A5
perthousand;2030
peseta;20A7
pfsquare;338A
phabengali;09AB
phadeva;092B
phagujarati;0AAB
phagurmukhi;0A2B
phi;03C6
phi1;03D5
phieuphacirclekorean;327A
phieuphaparenkorean;321A
phieuphcirclekorean;326C
phieuphkorean;314D
phieuphparenkorean;320C
philatin;0278
phinthuthai;0E3A
phisymbolgreek;03D5
phook;01A5
phophanthai;0E1E
phophungthai;0E1C
phosamphaothai;0E20
pi;03C0
pieupacirclekorean;3273
pieupaparenkorean;3213
pieupcieuckorean;3176
pieupcirclekorean;3265
pieupkiyeokkorean;3172
pieupkorean;3142
pieupparenkorean;3205
pieupsioskiyeokkorean;3174
pieupsioskorean;3144
pieupsiostikeutkorean;3175
pieupthieuthkorean;3177
pieuptikeutkorean;3173
pihiragana;3074
pikatakana;30D4
pisymbolgreek;03D6
piwrarmenian;0583
plus;002B
plusbelowcmb;031F
pluscircle;2295
plusminus;00B1
plusmod;02D6
plusmonospace;FF0B
plussmall;FE62
plussuperior;207A
pmonospace;FF50
pmsquare;33D8
pohiragana;307D
pointingindexdownwhite;261F
pointingindexleftwhite;261C
pointingindexrightwhite;261E
pointingindexupwhite;261D
pokatakana;30DD
poplathai;0E1B
postalmark;3012
postalmarkface;3020
pparen;24AB
precedes;227A
prescription;211E
primemod;02B9
primereversed;2035
product;220F
projective;2305
prolongedkana;30FC
propellor;2318
propersubset;2282
propersuperset;2283
proportion;2237
proportional;221D
psi;03C8
psicyrillic;0471
psilipneumatacyrilliccmb;0486
pssquare;33B0
puhiragana;3077
pukatakana;30D7
pvsquare;33B4
pwsquare;33BA
q;0071
qadeva;0958
qadmahebrew;05A8
qafarabic;0642
qaffinalarabic;FED6
qafinitialarabic;FED7
qafmedialarabic;FED8
qamats;05B8
qamats10;05B8
qamats1a;05B8
qamats1c;05B8
qamats27;05B8
qamats29;05B8
qamats33;05B8
qamatsde;05B8
qamatshebrew;05B8
qamatsnarrowhebrew;05B8
qamatsqatanhebrew;05B8
qamatsqatannarrowhebrew;05B8
qamatsqatanquarterhebrew;05B8
qamatsqatanwidehebrew;05B8
qamatsquarterhebrew;05B8
qamatswidehebrew;05B8
qarneyparahebrew;059F
qbopomofo;3111
qcircle;24E0
qhook;02A0
qmonospace;FF51
qof;05E7
qofdagesh;FB47
qofdageshhebrew;FB47
qofhatafpatah;05E7 05B2
qofhatafpatahhebrew;05E7 05B2
qofhatafsegol;05E7 05B1
qofhatafsegolhebrew;05E7 05B1
qofhebrew;05E7
qofhiriq;05E7 05B4
qofhiriqhebrew;05E7 05B4
qofholam;05E7 05B9
qofholamhebrew;05E7 05B9
qofpatah;05E7 05B7
qofpatahhebrew;05E7 05B7
qofqamats;05E7 05B8
qofqamatshebrew;05E7 05B8
qofqubuts;05E7 05BB
qofqubutshebrew;05E7 05BB
qofsegol;05E7 05B6
qofsegolhebrew;05E7 05B6
qofsheva;05E7 05B0
qofshevahebrew;05E7 05B0
qoftsere;05E7 05B5
qoftserehebrew;05E7 05B5
qparen;24AC
quarternote;2669
qubuts;05BB
qubuts18;05BB
qubuts25;05BB
qubuts31;05BB
qubutshebrew;05BB
qubutsnarrowhebrew;05BB
qubutsquarterhebrew;05BB
qubutswidehebrew;05BB
question;003F
questionarabic;061F
questionarmenian;055E
questiondown;00BF
questiondownsmall;F7BF
questiongreek;037E
questionmonospace;FF1F
questionsmall;F73F
quotedbl;0022
quotedblbase;201E
quotedblleft;201C
quotedblmonospace;FF02
quotedblprime;301E
quotedblprimereversed;301D
quotedblright;201D
quoteleft;2018
quoteleftreversed;201B
quotereversed;201B
quoteright;2019
quoterightn;0149
quotesinglbase;201A
quotesingle;0027
quotesinglemonospace;FF07
r;0072
raarmenian;057C
rabengali;09B0
racute;0155
radeva;0930
radical;221A
radicalex;F8E5
radoverssquare;33AE
radoverssquaredsquare;33AF
radsquare;33AD
rafe;05BF
rafehebrew;05BF
ragujarati;0AB0
ragurmukhi;0A30
rahiragana;3089
rakatakana;30E9
rakatakanahalfwidth;FF97
ralowerdiagonalbengali;09F1
ramiddlediagonalbengali;09F0
ramshorn;0264
ratio;2236
rbopomofo;3116
rcaron;0159
rcedilla;0157
rcircle;24E1
rcommaaccent;0157
rdblgrave;0211
rdotaccent;1E59
rdotbelow;1E5B
rdotbelowmacron;1E5D
referencemark;203B
reflexsubset;2286
reflexsuperset;2287
registered;00AE
registersans;F8E8
registerserif;F6DA
reharabic;0631
reharmenian;0580
rehfinalarabic;FEAE
rehiragana;308C
rehyehaleflamarabic;0631 FEF3 FE8E 0644
rekatakana;30EC
rekatakanahalfwidth;FF9A
resh;05E8
reshdageshhebrew;FB48
reshhatafpatah;05E8 05B2
reshhatafpatahhebrew;05E8 05B2
reshhatafsegol;05E8 05B1
reshhatafsegolhebrew;05E8 05B1
reshhebrew;05E8
reshhiriq;05E8 05B4
reshhiriqhebrew;05E8 05B4
reshholam;05E8 05B9
reshholamhebrew;05E8 05B9
reshpatah;05E8 05B7
reshpatahhebrew;05E8 05B7
reshqamats;05E8 05B8
reshqamatshebrew;05E8 05B8
reshqubuts;05E8 05BB
reshqubutshebrew;05E8 05BB
reshsegol;05E8 05B6
reshsegolhebrew;05E8 05B6
reshsheva;05E8 05B0
reshshevahebrew;05E8 05B0
reshtsere;05E8 05B5
reshtserehebrew;05E8 05B5
reversedtilde;223D
reviahebrew;0597
reviamugrashhebrew;0597
revlogicalnot;2310
rfishhook;027E
rfishhookreversed;027F
rhabengali;09DD
rhadeva;095D
rho;03C1
rhook;027D
rhookturned;027B
rhookturnedsuperior;02B5
rhosymbolgreek;03F1
rhotichookmod;02DE
rieulacirclekorean;3271
rieulaparenkorean;3211
rieulcirclekorean;3263
rieulhieuhkorean;3140
rieulkiyeokkorean;313A
rieulkiyeoksioskorean;3169
rieulkorean;3139
rieulmieumkorean;313B
rieulpansioskorean;316C
rieulparenkorean;3203
rieulphieuphkorean;313F
rieulpieupkorean;313C
rieulpieupsioskorean;316B
rieulsioskorean;313D
rieulthieuthkorean;313E
rieultikeutkorean;316A
rieulyeorinhieuhkorean;316D
rightangle;221F
righttackbelowcmb;0319
righttriangle;22BF
rihiragana;308A
rikatakana;30EA
rikatakanahalfwidth;FF98
ring;02DA
ringbelowcmb;0325
ringcmb;030A
ringhalfleft;02BF
ringhalfleftarmenian;0559
ringhalfleftbelowcmb;031C
ringhalfleftcentered;02D3
ringhalfright;02BE
ringhalfrightbelowcmb;0339
ringhalfrightcentered;02D2
rinvertedbreve;0213
rittorusquare;3351
rlinebelow;1E5F
rlongleg;027C
rlonglegturned;027A
rmonospace;FF52
rohiragana;308D
rokatakana;30ED
rokatakanahalfwidth;FF9B
roruathai;0E23
rparen;24AD
rrabengali;09DC
rradeva;0931
rragurmukhi;0A5C
rreharabic;0691
rrehfinalarabic;FB8D
rrvocalicbengali;09E0
rrvocalicdeva;0960
rrvocalicgujarati;0AE0
rrvocalicvowelsignbengali;09C4
rrvocalicvowelsigndeva;0944
rrvocalicvowelsigngujarati;0AC4
rsuperior;F6F1
rtblock;2590
rturned;0279
rturnedsuperior;02B4
ruhiragana;308B
rukatakana;30EB
rukatakanahalfwidth;FF99
rupeemarkbengali;09F2
rupeesignbengali;09F3
rupiah;F6DD
ruthai;0E24
rvocalicbengali;098B
rvocalicdeva;090B
rvocalicgujarati;0A8B
rvocalicvowelsignbengali;09C3
rvocalicvowelsigndeva;0943
rvocalicvowelsigngujarati;0AC3
s;0073
sabengali;09B8
sacute;015B
sacutedotaccent;1E65
sadarabic;0635
sadeva;0938
sadfinalarabic;FEBA
sadinitialarabic;FEBB
sadmedialarabic;FEBC
sagujarati;0AB8
sagurmukhi;0A38
sahiragana;3055
sakatakana;30B5
sakatakanahalfwidth;FF7B
sallallahoualayhewasallamarabic;FDFA
samekh;05E1
samekhdagesh;FB41
samekhdageshhebrew;FB41
samekhhebrew;05E1
saraaathai;0E32
saraaethai;0E41
saraaimaimalaithai;0E44
saraaimaimuanthai;0E43
saraamthai;0E33
saraathai;0E30
saraethai;0E40
saraiileftthai;F886
saraiithai;0E35
saraileftthai;F885
saraithai;0E34
saraothai;0E42
saraueeleftthai;F888
saraueethai;0E37
saraueleftthai;F887
sarauethai;0E36
sarauthai;0E38
sarauuthai;0E39
sbopomofo;3119
scaron;0161
scarondotaccent;1E67
scedilla;015F
schwa;0259
schwacyrillic;04D9
schwadieresiscyrillic;04DB
schwahook;025A
scircle;24E2
scircumflex;015D
scommaaccent;0219
sdotaccent;1E61
sdotbelow;1E63
sdotbelowdotaccent;1E69
seagullbelowcmb;033C
second;2033
secondtonechinese;02CA
section;00A7
seenarabic;0633
seenfinalarabic;FEB2
seeninitialarabic;FEB3
seenmedialarabic;FEB4
segol;05B6
segol13;05B6
segol1f;05B6
segol2c;05B6
segolhebrew;05B6
segolnarrowhebrew;05B6
segolquarterhebrew;05B6
segoltahebrew;0592
segolwidehebrew;05B6
seharmenian;057D
sehiragana;305B
sekatakana;30BB
sekatakanahalfwidth;FF7E
semicolon;003B
semicolonarabic;061B
semicolonmonospace;FF1B
semicolonsmall;FE54
semivoicedmarkkana;309C
semivoicedmarkkanahalfwidth;FF9F
sentisquare;3322
sentosquare;3323
seven;0037
sevenarabic;0667
sevenbengali;09ED
sevencircle;2466
sevencircleinversesansserif;2790
sevendeva;096D
seveneighths;215E
sevengujarati;0AED
sevengurmukhi;0A6D
sevenhackarabic;0667
sevenhangzhou;3027
sevenideographicparen;3226
seveninferior;2087
sevenmonospace;FF17
sevenoldstyle;F737
sevenparen;247A
sevenperiod;248E
sevenpersian;06F7
sevenroman;2176
sevensuperior;2077
seventeencircle;2470
seventeenparen;2484
seventeenperiod;2498
seventhai;0E57
sfthyphen;00AD
shaarmenian;0577
shabengali;09B6
shacyrillic;0448
shaddaarabic;0651
shaddadammaarabic;FC61
shaddadammatanarabic;FC5E
shaddafathaarabic;FC60
shaddafathatanarabic;0651 064B
shaddakasraarabic;FC62
shaddakasratanarabic;FC5F
shade;2592
shadedark;2593
shadelight;2591
shademedium;2592
shadeva;0936
shagujarati;0AB6
shagurmukhi;0A36
shalshelethebrew;0593
shbopomofo;3115
shchacyrillic;0449
sheenarabic;0634
sheenfinalarabic;FEB6
sheeninitialarabic;FEB7
sheenmedialarabic;FEB8
sheicoptic;03E3
sheqel;20AA
sheqelhebrew;20AA
sheva;05B0
sheva115;05B0
sheva15;05B0
sheva22;05B0
sheva2e;05B0
shevahebrew;05B0
shevanarrowhebrew;05B0
shevaquarterhebrew;05B0
shevawidehebrew;05B0
shhacyrillic;04BB
shimacoptic;03ED
shin;05E9
shindagesh;FB49
shindageshhebrew;FB49
shindageshshindot;FB2C
shindageshshindothebrew;FB2C
shindageshsindot;FB2D
shindageshsindothebrew;FB2D
shindothebrew;05C1
shinhebrew;05E9
shinshindot;FB2A
shinshindothebrew;FB2A
shinsindot;FB2B
shinsindothebrew;FB2B
shook;0282
sigma;03C3
sigma1;03C2
sigmafinal;03C2
sigmalunatesymbolgreek;03F2
sihiragana;3057
sikatakana;30B7
sikatakanahalfwidth;FF7C
siluqhebrew;05BD
siluqlefthebrew;05BD
similar;223C
sindothebrew;05C2
siosacirclekorean;3274
siosaparenkorean;3214
sioscieuckorean;317E
sioscirclekorean;3266
sioskiyeokkorean;317A
sioskorean;3145
siosnieunkorean;317B
siosparenkorean;3206
siospieupkorean;317D
siostikeutkorean;317C
six;0036
sixarabic;0666
sixbengali;09EC
sixcircle;2465
sixcircleinversesansserif;278F
sixdeva;096C
sixgujarati;0AEC
sixgurmukhi;0A6C
sixhackarabic;0666
sixhangzhou;3026
sixideographicparen;3225
sixinferior;2086
sixmonospace;FF16
sixoldstyle;F736
sixparen;2479
sixperiod;248D
sixpersian;06F6
sixroman;2175
sixsuperior;2076
sixteencircle;246F
sixteencurrencydenominatorbengali;09F9
sixteenparen;2483
sixteenperiod;2497
sixthai;0E56
slash;002F
slashmonospace;FF0F
slong;017F
slongdotaccent;1E9B
smileface;263A
smonospace;FF53
sofpasuqhebrew;05C3
softhyphen;00AD
softsigncyrillic;044C
sohiragana;305D
sokatakana;30BD
sokatakanahalfwidth;FF7F
soliduslongoverlaycmb;0338
solidusshortoverlaycmb;0337
sorusithai;0E29
sosalathai;0E28
sosothai;0E0B
sosuathai;0E2A
space;0020
spacehackarabic;0020
spade;2660
spadesuitblack;2660
spadesuitwhite;2664
sparen;24AE
squarebelowcmb;033B
squarecc;33C4
squarecm;339D
squarediagonalcrosshatchfill;25A9
squarehorizontalfill;25A4
squarekg;338F
squarekm;339E
squarekmcapital;33CE
squareln;33D1
squarelog;33D2
squaremg;338E
squaremil;33D5
squaremm;339C
squaremsquared;33A1
squareorthogonalcrosshatchfill;25A6
squareupperlefttolowerrightfill;25A7
squareupperrighttolowerleftfill;25A8
squareverticalfill;25A5
squarewhitewithsmallblack;25A3
srsquare;33DB
ssabengali;09B7
ssadeva;0937
ssagujarati;0AB7
ssangcieuckorean;3149
ssanghieuhkorean;3185
ssangieungkorean;3180
ssangkiyeokkorean;3132
ssangnieunkorean;3165
ssangpieupkorean;3143
ssangsioskorean;3146
ssangtikeutkorean;3138
ssuperior;F6F2
sterling;00A3
sterlingmonospace;FFE1
strokelongoverlaycmb;0336
strokeshortoverlaycmb;0335
subset;2282
subsetnotequal;228A
subsetorequal;2286
succeeds;227B
suchthat;220B
suhiragana;3059
sukatakana;30B9
sukatakanahalfwidth;FF7D
sukunarabic;0652
summation;2211
sun;263C
superset;2283
supersetnotequal;228B
supersetorequal;2287
svsquare;33DC
syouwaerasquare;337C
t;0074
tabengali;09A4
tackdown;22A4
tackleft;22A3
tadeva;0924
tagujarati;0AA4
tagurmukhi;0A24
taharabic;0637
tahfinalarabic;FEC2
tahinitialarabic;FEC3
tahiragana;305F
tahmedialarabic;FEC4
taisyouerasquare;337D
takatakana;30BF
takatakanahalfwidth;FF80
tatweelarabic;0640
tau;03C4
tav;05EA
tavdages;FB4A
tavdagesh;FB4A
tavdageshhebrew;FB4A
tavhebrew;05EA
tbar;0167
tbopomofo;310A
tcaron;0165
tccurl;02A8
tcedilla;0163
tcheharabic;0686
tchehfinalarabic;FB7B
tchehinitialarabic;FB7C
tchehmedialarabic;FB7D
tchehmeeminitialarabic;FB7C FEE4
tcircle;24E3
tcircumflexbelow;1E71
tcommaaccent;0163
tdieresis;1E97
tdotaccent;1E6B
tdotbelow;1E6D
tecyrillic;0442
tedescendercyrillic;04AD
teharabic;062A
tehfinalarabic;FE96
tehhahinitialarabic;FCA2
tehhahisolatedarabic;FC0C
tehinitialarabic;FE97
tehiragana;3066
tehjeeminitialarabic;FCA1
tehjeemisolatedarabic;FC0B
tehmarbutaarabic;0629
tehmarbutafinalarabic;FE94
tehmedialarabic;FE98
tehmeeminitialarabic;FCA4
tehmeemisolatedarabic;FC0E
tehnoonfinalarabic;FC73
tekatakana;30C6
tekatakanahalfwidth;FF83
telephone;2121
telephoneblack;260E
telishagedolahebrew;05A0
telishaqetanahebrew;05A9
tencircle;2469
tenideographicparen;3229
tenparen;247D
tenperiod;2491
tenroman;2179
tesh;02A7
tet;05D8
tetdagesh;FB38
tetdageshhebrew;FB38
tethebrew;05D8
tetsecyrillic;04B5
tevirhebrew;059B
tevirlefthebrew;059B
thabengali;09A5
thadeva;0925
thagujarati;0AA5
thagurmukhi;0A25
thalarabic;0630
thalfinalarabic;FEAC
thanthakhatlowleftthai;F898
thanthakhatlowrightthai;F897
thanthakhatthai;0E4C
thanthakhatupperleftthai;F896
theharabic;062B
thehfinalarabic;FE9A
thehinitialarabic;FE9B
thehmedialarabic;FE9C
thereexists;2203
therefore;2234
theta;03B8
theta1;03D1
thetasymbolgreek;03D1
thieuthacirclekorean;3279
thieuthaparenkorean;3219
thieuthcirclekorean;326B
thieuthkorean;314C
thieuthparenkorean;320B
thirteencircle;246C
thirteenparen;2480
thirteenperiod;2494
thonangmonthothai;0E11
thook;01AD
thophuthaothai;0E12
thorn;00FE
thothahanthai;0E17
thothanthai;0E10
thothongthai;0E18
thothungthai;0E16
thousandcyrillic;0482
thousandsseparatorarabic;066C
thousandsseparatorpersian;066C
three;0033
threearabic;0663
threebengali;09E9
threecircle;2462
threecircleinversesansserif;278C
threedeva;0969
threeeighths;215C
threegujarati;0AE9
threegurmukhi;0A69
threehackarabic;0663
threehangzhou;3023
threeideographicparen;3222
threeinferior;2083
threemonospace;FF13
threenumeratorbengali;09F6
threeoldstyle;F733
threeparen;2476
threeperiod;248A
threepersian;06F3
threequarters;00BE
threequartersemdash;F6DE
threeroman;2172
threesuperior;00B3
threethai;0E53
thzsquare;3394
tihiragana;3061
tikatakana;30C1
tikatakanahalfwidth;FF81
tikeutacirclekorean;3270
tikeutaparenkorean;3210
tikeutcirclekorean;3262
tikeutkorean;3137
tikeutparenkorean;3202
tilde;02DC
tildebelowcmb;0330
tildecmb;0303
tildecomb;0303
tildedoublecmb;0360
tildeoperator;223C
tildeoverlaycmb;0334
tildeverticalcmb;033E
timescircle;2297
tipehahebrew;0596
tipehalefthebrew;0596
tippigurmukhi;0A70
titlocyrilliccmb;0483
tiwnarmenian;057F
tlinebelow;1E6F
tmonospace;FF54
toarmenian;0569
tohiragana;3068
tokatakana;30C8
tokatakanahalfwidth;FF84
tonebarextrahighmod;02E5
tonebarextralowmod;02E9
tonebarhighmod;02E6
tonebarlowmod;02E8
tonebarmidmod;02E7
tonefive;01BD
tonesix;0185
tonetwo;01A8
tonos;0384
tonsquare;3327
topatakthai;0E0F
tortoiseshellbracketleft;3014
tortoiseshellbracketleftsmall;FE5D
tortoiseshellbracketleftvertical;FE39
tortoiseshellbracketright;3015
tortoiseshellbracketrightsmall;FE5E
tortoiseshellbracketrightvertical;FE3A
totaothai;0E15
tpalatalhook;01AB
tparen;24AF
trademark;2122
trademarksans;F8EA
trademarkserif;F6DB
tretroflexhook;0288
triagdn;25BC
triaglf;25C4
triagrt;25BA
triagup;25B2
ts;02A6
tsadi;05E6
tsadidagesh;FB46
tsadidageshhebrew;FB46
tsadihebrew;05E6
tsecyrillic;0446
tsere;05B5
tsere12;05B5
tsere1e;05B5
tsere2b;05B5
tserehebrew;05B5
tserenarrowhebrew;05B5
tserequarterhebrew;05B5
tserewidehebrew;05B5
tshecyrillic;045B
tsuperior;F6F3
ttabengali;099F
ttadeva;091F
ttagujarati;0A9F
ttagurmukhi;0A1F
tteharabic;0679
ttehfinalarabic;FB67
ttehinitialarabic;FB68
ttehmedialarabic;FB69
tthabengali;09A0
tthadeva;0920
tthagujarati;0AA0
tthagurmukhi;0A20
tturned;0287
tuhiragana;3064
tukatakana;30C4
tukatakanahalfwidth;FF82
tusmallhiragana;3063
tusmallkatakana;30C3
tusmallkatakanahalfwidth;FF6F
twelvecircle;246B
twelveparen;247F
twelveperiod;2493
twelveroman;217B
twentycircle;2473
twentyhangzhou;5344
twentyparen;2487
twentyperiod;249B
two;0032
twoarabic;0662
twobengali;09E8
twocircle;2461
twocircleinversesansserif;278B
twodeva;0968
twodotenleader;2025
twodotleader;2025
twodotleadervertical;FE30
twogujarati;0AE8
twogurmukhi;0A68
twohackarabic;0662
twohangzhou;3022
twoideographicparen;3221
twoinferior;2082
twomonospace;FF12
twonumeratorbengali;09F5
twooldstyle;F732
twoparen;2475
twoperiod;2489
twopersian;06F2
tworoman;2171
twostroke;01BB
twosuperior;00B2
twothai;0E52
twothirds;2154
u;0075
uacute;00FA
ubar;0289
ubengali;0989
ubopomofo;3128
ubreve;016D
ucaron;01D4
ucircle;24E4
ucircumflex;00FB
ucircumflexbelow;1E77
ucyrillic;0443
udattadeva;0951
udblacute;0171
udblgrave;0215
udeva;0909
udieresis;00FC
udieresisacute;01D8
udieresisbelow;1E73
udieresiscaron;01DA
udieresiscyrillic;04F1
udieresisgrave;01DC
udieresismacron;01D6
udotbelow;1EE5
ugrave;00F9
ugujarati;0A89
ugurmukhi;0A09
uhiragana;3046
uhookabove;1EE7
uhorn;01B0
uhornacute;1EE9
uhorndotbelow;1EF1
uhorngrave;1EEB
uhornhookabove;1EED
uhorntilde;1EEF
uhungarumlaut;0171
uhungarumlautcyrillic;04F3
uinvertedbreve;0217
ukatakana;30A6
ukatakanahalfwidth;FF73
ukcyrillic;0479
ukorean;315C
umacron;016B
umacroncyrillic;04EF
umacrondieresis;1E7B
umatragurmukhi;0A41
umonospace;FF55
underscore;005F
underscoredbl;2017
underscoremonospace;FF3F
underscorevertical;FE33
underscorewavy;FE4F
union;222A
universal;2200
uogonek;0173
uparen;24B0
upblock;2580
upperdothebrew;05C4
upsilon;03C5
upsilondieresis;03CB
upsilondieresistonos;03B0
upsilonlatin;028A
upsilontonos;03CD
uptackbelowcmb;031D
uptackmod;02D4
uragurmukhi;0A73
uring;016F
ushortcyrillic;045E
usmallhiragana;3045
usmallkatakana;30A5
usmallkatakanahalfwidth;FF69
ustraightcyrillic;04AF
ustraightstrokecyrillic;04B1
utilde;0169
utildeacute;1E79
utildebelow;1E75
uubengali;098A
uudeva;090A
uugujarati;0A8A
uugurmukhi;0A0A
uumatragurmukhi;0A42
uuvowelsignbengali;09C2
uuvowelsigndeva;0942
uuvowelsigngujarati;0AC2
uvowelsignbengali;09C1
uvowelsigndeva;0941
uvowelsigngujarati;0AC1
v;0076
vadeva;0935
vagujarati;0AB5
vagurmukhi;0A35
vakatakana;30F7
vav;05D5
vavdagesh;FB35
vavdagesh65;FB35
vavdageshhebrew;FB35
vavhebrew;05D5
vavholam;FB4B
vavholamhebrew;FB4B
vavvavhebrew;05F0
vavyodhebrew;05F1
vcircle;24E5
vdotbelow;1E7F
vecyrillic;0432
veharabic;06A4
vehfinalarabic;FB6B
vehinitialarabic;FB6C
vehmedialarabic;FB6D
vekatakana;30F9
venus;2640
verticalbar;007C
verticallineabovecmb;030D
verticallinebelowcmb;0329
verticallinelowmod;02CC
verticallinemod;02C8
vewarmenian;057E
vhook;028B
vikatakana;30F8
viramabengali;09CD
viramadeva;094D
viramagujarati;0ACD
visargabengali;0983
visargadeva;0903
visargagujarati;0A83
vmonospace;FF56
voarmenian;0578
voicediterationhiragana;309E
voicediterationkatakana;30FE
voicedmarkkana;309B
voicedmarkkanahalfwidth;FF9E
vokatakana;30FA
vparen;24B1
vtilde;1E7D
vturned;028C
vuhiragana;3094
vukatakana;30F4
w;0077
wacute;1E83
waekorean;3159
wahiragana;308F
wakatakana;30EF
wakatakanahalfwidth;FF9C
wakorean;3158
wasmallhiragana;308E
wasmallkatakana;30EE
wattosquare;3357
wavedash;301C
wavyunderscorevertical;FE34
wawarabic;0648
wawfinalarabic;FEEE
wawhamzaabovearabic;0624
wawhamzaabovefinalarabic;FE86
wbsquare;33DD
wcircle;24E6
wcircumflex;0175
wdieresis;1E85
wdotaccent;1E87
wdotbelow;1E89
wehiragana;3091
weierstrass;2118
wekatakana;30F1
wekorean;315E
weokorean;315D
wgrave;1E81
whitebullet;25E6
whitecircle;25CB
whitecircleinverse;25D9
whitecornerbracketleft;300E
whitecornerbracketleftvertical;FE43
whitecornerbracketright;300F
whitecornerbracketrightvertical;FE44
whitediamond;25C7
whitediamondcontainingblacksmalldiamond;25C8
whitedownpointingsmalltriangle;25BF
whitedownpointingtriangle;25BD
whiteleftpointingsmalltriangle;25C3
whiteleftpointingtriangle;25C1
whitelenticularbracketleft;3016
whitelenticularbracketright;3017
whiterightpointingsmalltriangle;25B9
whiterightpointingtriangle;25B7
whitesmallsquare;25AB
whitesmilingface;263A
whitesquare;25A1
whitestar;2606
whitetelephone;260F
whitetortoiseshellbracketleft;3018
whitetortoiseshellbracketright;3019
whiteuppointingsmalltriangle;25B5
whiteuppointingtriangle;25B3
wihiragana;3090
wikatakana;30F0
wikorean;315F
wmonospace;FF57
wohiragana;3092
wokatakana;30F2
wokatakanahalfwidth;FF66
won;20A9
wonmonospace;FFE6
wowaenthai;0E27
wparen;24B2
wring;1E98
wsuperior;02B7
wturned;028D
wynn;01BF
x;0078
xabovecmb;033D
xbopomofo;3112
xcircle;24E7
xdieresis;1E8D
xdotaccent;1E8B
xeharmenian;056D
xi;03BE
xmonospace;FF58
xparen;24B3
xsuperior;02E3
y;0079
yaadosquare;334E
yabengali;09AF
yacute;00FD
yadeva;092F
yaekorean;3152
yagujarati;0AAF
yagurmukhi;0A2F
yahiragana;3084
yakatakana;30E4
yakatakanahalfwidth;FF94
yakorean;3151
yamakkanthai;0E4E
yasmallhiragana;3083
yasmallkatakana;30E3
yasmallkatakanahalfwidth;FF6C
yatcyrillic;0463
ycircle;24E8
ycircumflex;0177
ydieresis;00FF
ydotaccent;1E8F
ydotbelow;1EF5
yeharabic;064A
yehbarreearabic;06D2
yehbarreefinalarabic;FBAF
yehfinalarabic;FEF2
yehhamzaabovearabic;0626
yehhamzaabovefinalarabic;FE8A
yehhamzaaboveinitialarabic;FE8B
yehhamzaabovemedialarabic;FE8C
yehinitialarabic;FEF3
yehmedialarabic;FEF4
yehmeeminitialarabic;FCDD
yehmeemisolatedarabic;FC58
yehnoonfinalarabic;FC94
yehthreedotsbelowarabic;06D1
yekorean;3156
yen;00A5
yenmonospace;FFE5
yeokorean;3155
yeorinhieuhkorean;3186
yerahbenyomohebrew;05AA
yerahbenyomolefthebrew;05AA
yericyrillic;044B
yerudieresiscyrillic;04F9
yesieungkorean;3181
yesieungpansioskorean;3183
yesieungsioskorean;3182
yetivhebrew;059A
ygrave;1EF3
yhook;01B4
yhookabove;1EF7
yiarmenian;0575
yicyrillic;0457
yikorean;3162
yinyang;262F
yiwnarmenian;0582
ymonospace;FF59
yod;05D9
yoddagesh;FB39
yoddageshhebrew;FB39
yodhebrew;05D9
yodyodhebrew;05F2
yodyodpatahhebrew;FB1F
yohiragana;3088
yoikorean;3189
yokatakana;30E8
yokatakanahalfwidth;FF96
yokorean;315B
yosmallhiragana;3087
yosmallkatakana;30E7
yosmallkatakanahalfwidth;FF6E
yotgreek;03F3
yoyaekorean;3188
yoyakorean;3187
yoyakthai;0E22
yoyingthai;0E0D
yparen;24B4
ypogegrammeni;037A
ypogegrammenigreekcmb;0345
yr;01A6
yring;1E99
ysuperior;02B8
ytilde;1EF9
yturned;028E
yuhiragana;3086
yuikorean;318C
yukatakana;30E6
yukatakanahalfwidth;FF95
yukorean;3160
yusbigcyrillic;046B
yusbigiotifiedcyrillic;046D
yuslittlecyrillic;0467
yuslittleiotifiedcyrillic;0469
yusmallhiragana;3085
yusmallkatakana;30E5
yusmallkatakanahalfwidth;FF6D
yuyekorean;318B
yuyeokorean;318A
yyabengali;09DF
yyadeva;095F
z;007A
zaarmenian;0566
zacute;017A
zadeva;095B
zagurmukhi;0A5B
zaharabic;0638
zahfinalarabic;FEC6
zahinitialarabic;FEC7
zahiragana;3056
zahmedialarabic;FEC8
zainarabic;0632
zainfinalarabic;FEB0
zakatakana;30B6
zaqefgadolhebrew;0595
zaqefqatanhebrew;0594
zarqahebrew;0598
zayin;05D6
zayindagesh;FB36
zayindageshhebrew;FB36
zayinhebrew;05D6
zbopomofo;3117
zcaron;017E
zcircle;24E9
zcircumflex;1E91
zcurl;0291
zdot;017C
zdotaccent;017C
zdotbelow;1E93
zecyrillic;0437
zedescendercyrillic;0499
zedieresiscyrillic;04DF
zehiragana;305C
zekatakana;30BC
zero;0030
zeroarabic;0660
zerobengali;09E6
zerodeva;0966
zerogujarati;0AE6
zerogurmukhi;0A66
zerohackarabic;0660
zeroinferior;2080
zeromonospace;FF10
zerooldstyle;F730
zeropersian;06F0
zerosuperior;2070
zerothai;0E50
zerowidthjoiner;FEFF
zerowidthnonjoiner;200C
zerowidthspace;200B
zeta;03B6
zhbopomofo;3113
zhearmenian;056A
zhebrevecyrillic;04C2
zhecyrillic;0436
zhedescendercyrillic;0497
zhedieresiscyrillic;04DD
zihiragana;3058
zikatakana;30B8
zinorhebrew;05AE
zlinebelow;1E95
zmonospace;FF5A
zohiragana;305E
zokatakana;30BE
zparen;24B5
zretroflexhook;0290
zstroke;01B6
zuhiragana;305A
zukatakana;30BA
# END
'
%
classmethod: CharacterNames
adobeZapfdingbatsTxt
	"from https://github.com/adobe-type-tools/agl-aglfn"

	^'# -----------------------------------------------------------
# Copyright 2002-2019 Adobe (http://www.adobe.com/).
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the
# following conditions are met:
#
# Redistributions of source code must retain the above
# copyright notice, this list of conditions and the following
# disclaimer.
#
# Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials
# provided with the distribution.
#
# Neither the name of Adobe nor the names of its contributors
# may be used to endorse or promote products derived from this
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------
# Name:          ITC Zapf Dingbats Glyph List
# Table version: 2.0
# Date:          September 20, 2002
# URL:           https://github.com/adobe-type-tools/agl-aglfn
#
# Format: two semicolon-delimited fields:
#   (1) glyph name--upper/lowercase letters and digits
#   (2) Unicode scalar value--four uppercase hexadecimal digits
#
a100;275E
a101;2761
a102;2762
a103;2763
a104;2764
a105;2710
a106;2765
a107;2766
a108;2767
a109;2660
a10;2721
a110;2665
a111;2666
a112;2663
a117;2709
a118;2708
a119;2707
a11;261B
a120;2460
a121;2461
a122;2462
a123;2463
a124;2464
a125;2465
a126;2466
a127;2467
a128;2468
a129;2469
a12;261E
a130;2776
a131;2777
a132;2778
a133;2779
a134;277A
a135;277B
a136;277C
a137;277D
a138;277E
a139;277F
a13;270C
a140;2780
a141;2781
a142;2782
a143;2783
a144;2784
a145;2785
a146;2786
a147;2787
a148;2788
a149;2789
a14;270D
a150;278A
a151;278B
a152;278C
a153;278D
a154;278E
a155;278F
a156;2790
a157;2791
a158;2792
a159;2793
a15;270E
a160;2794
a161;2192
a162;27A3
a163;2194
a164;2195
a165;2799
a166;279B
a167;279C
a168;279D
a169;279E
a16;270F
a170;279F
a171;27A0
a172;27A1
a173;27A2
a174;27A4
a175;27A5
a176;27A6
a177;27A7
a178;27A8
a179;27A9
a17;2711
a180;27AB
a181;27AD
a182;27AF
a183;27B2
a184;27B3
a185;27B5
a186;27B8
a187;27BA
a188;27BB
a189;27BC
a18;2712
a190;27BD
a191;27BE
a192;279A
a193;27AA
a194;27B6
a195;27B9
a196;2798
a197;27B4
a198;27B7
a199;27AC
a19;2713
a1;2701
a200;27AE
a201;27B1
a202;2703
a203;2750
a204;2752
a205;276E
a206;2770
a20;2714
a21;2715
a22;2716
a23;2717
a24;2718
a25;2719
a26;271A
a27;271B
a28;271C
a29;2722
a2;2702
a30;2723
a31;2724
a32;2725
a33;2726
a34;2727
a35;2605
a36;2729
a37;272A
a38;272B
a39;272C
a3;2704
a40;272D
a41;272E
a42;272F
a43;2730
a44;2731
a45;2732
a46;2733
a47;2734
a48;2735
a49;2736
a4;260E
a50;2737
a51;2738
a52;2739
a53;273A
a54;273B
a55;273C
a56;273D
a57;273E
a58;273F
a59;2740
a5;2706
a60;2741
a61;2742
a62;2743
a63;2744
a64;2745
a65;2746
a66;2747
a67;2748
a68;2749
a69;274A
a6;271D
a70;274B
a71;25CF
a72;274D
a73;25A0
a74;274F
a75;2751
a76;25B2
a77;25BC
a78;25C6
a79;2756
a7;271E
a81;25D7
a82;2758
a83;2759
a84;275A
a85;276F
a86;2771
a87;2772
a88;2773
a89;2768
a8;271F
a90;2769
a91;276C
a92;276D
a93;276A
a94;276B
a95;2774
a96;2775
a97;275B
a98;275C
a99;275D
a9;2720
# END
'
%
classmethod: CharacterNames
nameToUnicodeMappingsFrom: aReadStream
	"<IdentityDictionary key: Symbol value: Integer>"

	| dict |
	dict := IdentityDictionary new.
	[aReadStream atEnd] whileFalse: [
		| line |
		line := aReadStream upTo: Character lf.
		(line notEmpty and: [
		(line first = $#) not]) ifTrue: [
				| tokens |
				tokens := line tokensBasedOn: $;.
				dict at: tokens first asSymbol put: ('16r' , tokens last) asNumber]].
	^dict
%
classmethod: CharacterNames
otherGlyphNames
	"Glyphs found in the wild which are not included in the official lists"

	^'#
# Format: two semicolon-delimited fields:
#   (1) glyph name--upper/lowercase letters and digits
#   (2) Unicode scalar value--four uppercase hexadecimal digits
#
thinspace;2009
# END
'
%
category: 'initialize-release'
classmethod: CharacterNames
primeRuntime
	"reset and load all class variables to fill the caches to avoid lazy initialization at runtime"
	"self primeRuntime"

	self resetMappings.
	self unicodeToNames
%
classmethod: CharacterNames
resetMappings
	"self resetMappings"

	NameToUnicode := nil.
	UnicodeToName := nil
%
category: 'testing'
classmethod: CharacterNames
isBMPCode: anInteger
	"true, iff anInteger is a code point in the unicode Base Multilingual Plane"

	^(anInteger between: 16r0000 and: 16rD7FF) or: [
	anInteger between: 16rE000 and: 16rFFFF]
%
classmethod: CharacterNames
isSupplementaryCode: anInteger
	"true, iff anInteger is a code point in a unicode supplementary plane"

	^anInteger between: 16r10000 and: 16r10FFFF
%
category: 'accessing'
method: ExecutableString
postScriptType
	^#stringtype
%
category: 'actions'
method: ExecutableString
doIn: aPostScriptInterpreter
	| scanner |
	aPostScriptInterpreter executionStack push: self.
	scanner := Scanner on: self object.
	[scanner atEnd] whileFalse: [
		scanner nextPostScriptObject processIn: aPostScriptInterpreter].
	aPostScriptInterpreter executionStack pop
%
category: 'converting'
method: ExecutableString
asPostScripName
	"<Symbol | nil>"

	^self object asSymbol
%
method: ExecutableString
asPostScriptLiteral
	^self object
%
category: 'printing'
method: ExecutableString
printOn: stream
	self object printOn: stream
%
category: 'accessing'
classmethod: Interpreter
permittedPDFType4FunctionOperators
	"PostScript operators allowed in type 4 functions.
	See the PDF spec chapter 7.10.5 Type 4 (PostScript Calculator) Functions"

	| arithmetic bitwise conditional stack |
	arithmetic := #(#abs #add #atan #ceiling #cos #cvi #cvr #div #exp #floor #idiv #ln #log #mod #mul #neg #round #sin #sqrt #sub #truncate).
	bitwise := #(#and #bitshift #eq false #ge #gt #le #lt #ne).
	conditional := #(#if #ifelse).
	stack := #(#copy #dup #exch #index #pop #roll).
	^arithmetic , bitwise , conditional , stack
%
category: 'instance creation'
classmethod: Interpreter
on: postScriptSourceString
	| inst |
	inst := self new.
	inst initializeScanner: (Scanner on: postScriptSourceString).
	^inst
%
classmethod: Interpreter
run: aPostScriptSourceString
	"run aPostScriptSourceString in a new instance"

	^(self on: aPostScriptSourceString) run
%
category: 'accessing'
method: Interpreter
executionStack
	^executionStack ifNil: [executionStack := Stack new]
%
method: Interpreter
global
	"<Boolean>
	true: allocate objects in the global vm
	false: allocate objects in the local vm"

	^self properties at: #global ifAbsent: [false]
%
method: Interpreter
global: aBoolean
	self properties at: #global put: aBoolean
%
method: Interpreter
operandStack
	^operandStack ifNil: [operandStack := Stack new]
%
method: Interpreter
random
	"<Random>"

	^self properties at: #random ifAbsentPut: [Random seed: 15]
%
method: Interpreter
scanner
	^scanner ifNil: [scanner := Scanner on: '']
%
method: Interpreter
stack
	^self operandStack
%
method: Interpreter
trace
	"<SequenceableCollection of: Object>
	Sequence of executed token"

	^self properties at: #trace ifAbsentPut: [OrderedCollection new]
%
method: Interpreter
version
	"<String>"

	^((((PDFtalkLibrary at: #codeComponents) at: #PDFtalk) at: #codeComponents) at: #PostScript) at: #storeVersion
%
category: 'accessing dictionaries'
method: Interpreter
dictionaryStack
	^dictionaryStack ifNil: [
		| sys stack |
		sys := self newSystemdict.
		stack := Stack new.
		stack push: (sys at: #systemdict).
		stack push: (sys at: #globaldict).
		stack push: (sys at: #userdict).
		dictionaryStack := stack]
%
method: Interpreter
dictionaryWith: aSymbol
	"<Dictionary | nil>"

	^self dictionaryStack objects detect: [:dict | dict includesKey: aSymbol] ifNone: [
		nil]
%
method: Interpreter
newSystemdict
	| dict |
	dict := PSDictionary new.
	dict at: #systemdict put: dict.
	dict at: #globaldict put: PSDictionary new.
	dict at: #userdict put: PSDictionary new.
	dict at: #null put: nil.
	dict at: #true put: true.
	dict at: #false put: false.
	BuildIn operators keysAndValuesDo: [:symbol :operator | dict at: symbol put: operator].
	dict beImmutable.
	^dict
%
method: Interpreter
valueAt: aSymbol
	"<Object>
	look up aSymbol in the dictionary stack.
	Raise error when not found"

	^self valueAt: aSymbol ifAbsent: [
		(LookupError new)
			object: self;
			key: aSymbol;
			reason: #valueAt:;
			details: aSymbol , ' was not found';
			signal]
%
method: Interpreter
valueAt: aSymbol ifAbsent: aZeroArgumentBlock
	"<Object>
	look up aSymbol in the dictionary stack.
	Evaluate aZeroArgumentBlock when not found"

	self dictionaryStack objects do: [:dict |
		dict at: aSymbol ifPresent: [:op |
			^op]].
	^aZeroArgumentBlock value
%
category: 'accessing properties'
method: Interpreter
properties
	"<Dictionary>
	arbitrary properties.
	Used for state information and as temporary storage during execution"

	^properties ifNil: [properties := Dictionary new]
%
method: Interpreter
propertyAt: aSymbol
	"<Object>
	property named aSymbol.
	Raises an error if not defined"

	^self propertyAt: aSymbol ifAbsent: [
		LookupError raiseSignal: aSymbol , ' was not found']
%
method: Interpreter
propertyAt: aSymbol ifAbsent: aZeroArgumentBlock
	^self properties at: aSymbol ifAbsent: aZeroArgumentBlock
%
method: Interpreter
propertyAt: aSymbol ifAbsentPut: aZeroArgumentBlock
	^self properties at: aSymbol ifAbsentPut: aZeroArgumentBlock
%
method: Interpreter
propertyAt: aSymbol ifPresent: aOneArgumentBlock
	^self properties at: aSymbol ifPresent: aOneArgumentBlock
%
method: Interpreter
propertyAt: aSymbol put: anObject
	^self properties at: aSymbol put: anObject
%
method: Interpreter
propertyRemove: aSymbol
	"<Object>
	remove property named aSymbol and answer its value"

	^self propertyRemove: aSymbol ifAbsent: [
		LookupError raiseSignal: aSymbol , ' was not found']
%
method: Interpreter
propertyRemove: aSymbol ifAbsent: aZeroArgumentBlock
	"<Object>
	remove property named aSymbol and answer its value"

	^self properties removeKey: aSymbol ifAbsent: aZeroArgumentBlock
%
category: 'accessing resources'
method: Interpreter
category: categorySymbol at: aKey
	"<Object>"

	^(self categoryAt: categorySymbol) at: aKey ifAbsent: [
		LookupError raiseSignal: aKey , ' was not found']
%
method: Interpreter
categoryAt: categorySymbol
	"<Category>"

	^self categoryAt: categorySymbol ifAbsent: [
		LookupError raiseSignal: categorySymbol , ' was not found']
%
method: Interpreter
categoryAt: categorySymbol ifAbsent: absentBlock
	"<Category>"

	^self resources at: categorySymbol ifAbsent: [
		(Category predefined: categorySymbol)
			ifNotNil: [:category |
			self resources at: categorySymbol put: category.
			self resources at: categorySymbol]
			ifNil: [
			absentBlock value]]
%
method: Interpreter
inCategory: categorySymbol at: keySymbol put: anObject
	"<Object>"

	(self categoryAt: categorySymbol) at: keySymbol put: anObject.
	^anObject
%
method: Interpreter
inCategory: categorySymbol removeKey: keySymbol
	(self categoryAt: categorySymbol) removeKey: keySymbol.
	categorySymbol = #Category ifTrue: [
		self resources removeKey: keySymbol]
%
method: Interpreter
resources
	"<Category>"

	^resources ifNil: [
		| category |
		category := Category predefined: #Category.
		category at: #Category put: category.
		category at: #Generic put: (Category predefined: #Generic).
		resources := category]
%
category: 'actions'
method: Interpreter
clear
	operandStack := nil
%
method: Interpreter
mark
	"Optimization: keep a separate stack of marks
	to avoid searching the potentially large stack for a mark on every step of the program"

	(self propertyAt: #marks ifAbsentPut: [OrderedCollection new]) add: #mark.
	^self stack push: Mark new
%
method: Interpreter
next
	^self scanner nextPostScriptObject
%
method: Interpreter
pop
	^self stack pop
%
method: Interpreter
popTillMark
	"<OrderedCollection of: Object>
	in the order: top-of-stack first continuing towards the bottom-of-stack"

	self unmark.
	^self stack popTillMark
%
method: Interpreter
push: anObject
	^self stack push: anObject
%
method: Interpreter
run
	[self scanner atEnd] whileFalse: [self step].
	^self
%
method: Interpreter
run: aPostScriptSourceString
	"run aPostScriptSourceString in the current instance with the default scanning behavior.
	The PostScript code is evaluated at the current source position.
	After evaluation, the original source position is restored, therefore the execution can be nested."

	| oldScanner |
	oldScanner := self scanner.
	^[
	self initializeScanner: (Scanner on: aPostScriptSourceString).
	self run.
	self] ensure: [
			self initializeScanner: oldScanner]
%
method: Interpreter
step
	"read the next token, create the object and execute it"

	| token |
	token := [self next] on: EndOfTokenStreamNotification do: [:ex |
		^self].
	token processIn: self.
	^self
%
method: Interpreter
step: anInteger
	"step anInteger times"

	anInteger timesRepeat: [self step].
	^self
%
method: Interpreter
trace: anObject
	self trace add: anObject
%
method: Interpreter
unmark
	| list |
	list := self propertyAt: #marks ifAbsent: [
		^Unmatchedmark raiseSignal].
	list isEmpty ifTrue: [
		^Unmatchedmark raiseSignal].
	list removeLast.
	list isEmpty ifTrue: [
		self propertyRemove: #marks]
%
category: 'initialize-release'
method: Interpreter
initializeScanner: aScanner
	scanner := aScanner
%
category: 'printing'
method: Interpreter
printOn: aStream
	self stack printPostScriptOn: aStream
%
category: 'testing'
method: Interpreter
hasMark
	^(self propertyAt: #marks ifAbsent: [#()]) notEmpty
%
category: 'instance creation'
classmethod: LiteralName
for: aString
	^self on: aString
%
category: 'accessing'
method: LiteralName
postScriptKey
	"<Symbol>"

	^self object
%
method: LiteralName
postScriptType
	^#nametype
%
category: 'converting'
method: LiteralName
asPostScriptExecutable
	^self object
%
method: LiteralName
asString
	^self object asString
%
category: 'printing'
method: LiteralName
printOn: stream
	stream nextPut: $/.
	stream nextPutAll: self object asString
%
category: 'testing'
method: LiteralName
postScriptEqual: anObject
	^self asString = anObject asString
%
category: 'accessing'
method: Mark
postScriptType
	^#marktype
%
method: Mark
value
	^self
%
category: 'comparing'
method: Mark
= anObject
	^self class == anObject class
%
method: Mark
hash
	^self class hash
%
category: 'printing'
method: Mark
printOn: stream
	stream nextPutAll: '*mark*'
%
category: 'instance creation'
classmethod: ObjectWrapper
on: anObject
	| inst |
	inst := self new.
	inst initializeObject: anObject.
	^inst
%
category: 'accessing'
method: ObjectWrapper
object
	^object
%
method: ObjectWrapper
size
	^self object size
%
category: 'comparing'
method: ObjectWrapper
= anObject
	^self class == anObject class and: [
	self object = anObject object]
%
method: ObjectWrapper
hash
	^self object hash
%
category: 'converting'
method: ObjectWrapper
asPostScriptString
	^self printPostScript
%
category: 'initialize-release'
method: ObjectWrapper
initializeObject: anObject
	object := anObject
%
category: 'instance creation'
classmethod: Procedure
source: aString
	| scanner objects |
	scanner := Scanner on: aString.
	objects := OrderedCollection new.
	[scanner atEnd] whileFalse: [objects add: scanner nextPostScriptObject].
	^self withAll: objects
%
classmethod: Procedure
withAll: aCollection
	| inst |
	inst := self new.
	inst initializeObjects: aCollection.
	^inst
%
category: 'accessing'
method: Procedure
objects
	^objects ifNil: [objects := OrderedCollection new]
%
category: 'actions'
method: Procedure
doIn: aPostScriptInterpreter
	self objects isEmpty ifTrue: [
		^self].
	aPostScriptInterpreter executionStack push: self.
	self objects do: [:object | object processIn: aPostScriptInterpreter].
	aPostScriptInterpreter executionStack pop
%
category: 'converting'
method: Procedure
asPostScriptLiteral
	^self objects asArray
%
category: 'initialize-release'
method: Procedure
initializeObjects: aCollection
	objects := nil.
	self objects addAll: aCollection
%
category: 'printing'
method: Procedure
printOn: stream
	self printPostScriptOn: stream
%
method: Procedure
printPostScriptOn: aStream
	aStream nextPutAll: '{'.
	self objects do: [:object | object printPostScriptOn: aStream] separatedBy: [
		aStream space].
	aStream nextPutAll: '}'
%
category: 'accessing'
classmethod: ProcSet
notImplemented
	^self action: [:ps | ps error: 'This operator is not implemented']
%
classmethod: ProcSet
operators
	"<Dictionary key: Symbol value: BuildIn>
	self operators"

	| dict |
	dict := IdentityDictionary new.
	(Pragma allNamed: #operator in: self class) do: [:pragma |
		| operator |
		operator := self perform: pragma selector.
		dict at: pragma selector put: operator].
	(Pragma allNamed: #operator: in: self class) do: [:pragma |
		| symbol operator |
		symbol := pragma message arguments first.
		operator := self perform: pragma selector.
		dict at: symbol put: operator].
	^dict
%
classmethod: ProcSet
pragmas
	<pragmas: #class>

	^#(operator operator:)
%
category: 'instance creation'
classmethod: ProcSet
action: oneArgumentBlock
	| inst |
	inst := self new.
	inst initializeAction: oneArgumentBlock.
	^inst
%
category: 'accessing'
method: ProcSet
action
	"<BlockClosure with: Interpreter>"

	^action
%
method: ProcSet
initializeAction: oneArgumentBlock
	action := oneArgumentBlock
%
method: ProcSet
postScriptType
	^#operatortype
%
category: 'actions'
method: ProcSet
doIn: aPostScriptInterpreter
	self action value: aPostScriptInterpreter
%
category: 'accessing'
method: PSDictionary
postScriptType
	^#dicttype
%
category: 'double dispatching'
method: PSDictionary
copyFor: aPostScriptInterpreter
	aPostScriptInterpreter pop keysAndValuesDo: [:key :value | self at: key put: value copy].
	aPostScriptInterpreter push: self
%
method: PSDictionary
forAllDo: proc for: aPostScriptInterpreter
	self keysAndValuesDo: [:key :value |
		aPostScriptInterpreter push: key.
		aPostScriptInterpreter push: value.
		proc doIn: aPostScriptInterpreter]
%
method: PSDictionary
get: key for: aPostScriptInterpreter
	^self at: key postScriptKey
%
method: PSDictionary
put: value at: key
	"dict key value put â
	Associate key with value in dict"

	self at: key put: value
%
category: 'printing'
method: PSDictionary
prettyPrintPSOn: aStream indent: anInteger
	aStream nextPutAll: '<<'; cr.
	self keys
		do: [:key |
		anInteger + 1 timesRepeat: [aStream tab].
		key isSymbol ifTrue: [
			aStream nextPut: $/].
		key printPostScriptOn: aStream.
		aStream space.
		(self at: key) == self
			ifTrue: [aStream nextPutAll: '***MYSELF***']
			ifFalse: [
			(self at: key) prettyPrintPSOn: aStream indent: anInteger + 1]]
		separatedBy: [
		aStream cr].
	aStream nextPutAll: '>>'
%
method: PSDictionary
printargumentsWith: printer
	(self keysForPrinting anySatisfy: [:key | (self at: key) == self]) ifTrue: [
		^self error: 'The receiver cannot be printed asSource, because it contains itself'].
	^super printargumentsWith: printer
%
method: PSDictionary
printOn: aStream
	"the receiver may be a value of a key"

	aStream nextPutAll: '<<'.
	self keys
		do: [:key |
		key isSymbol ifTrue: [
			aStream nextPut: $/].
		key printPostScriptOn: aStream.
		aStream space.
		(self at: key) == self
			ifTrue: [aStream nextPutAll: '***MYSELF***']
			ifFalse: [
			(self at: key) printPostScriptOn: aStream]]
		separatedBy: [
		aStream space].
	aStream nextPutAll: '>>'
%
method: PSDictionary
printPostScriptOn: aStream
	aStream nextPutAll: '<<'.
	self keys
		do: [:key |
		key isSymbol ifTrue: [
			aStream nextPut: $/].
		key printPostScriptOn: aStream.
		aStream space.
		(self at: key) == self ifTrue: [
			^self error: 'The receiver cannot be printed asPostScript, because it contains itself'].
		(self at: key) printPostScriptOn: aStream]
		separatedBy: [
		aStream space].
	aStream nextPutAll: '>>'
%
method: PSDictionary
storeOn: aStream
	| noneYet |
	aStream nextPutAll: '(('.
	aStream store: self class.
	aStream nextPutAll: ' new)'.
	noneYet := true.
	self associationsDo: [:association |
		association value == self ifTrue: [
			^self error: 'The receiver cannot be stored, because it contains itself'].
		noneYet
			ifTrue: [noneYet := false]
			ifFalse: [aStream nextPut: $;].
		aStream nextPutAll: ' add: '.
		aStream store: association].
	noneYet ifFalse: [
		aStream nextPutAll: '; yourself'].
	aStream nextPut: $)
%
category: 'testing'
method: PSDictionary
postScriptEqual: otherCollection 
	"Other composite objects (arrays and dictionaries) are equal only if they share the same value.
	Separate values are considered unequal, even if all the components of those values are the same."

	^self == otherCollection
%
category: 'instance creation'
classmethod: Scanner
on: postScriptSourceString
	^self onStream: postScriptSourceString readStream
%
classmethod: Scanner
onStream: aReadStream
	| inst |
	inst := self new.
	inst initializeStream: aReadStream.
	^inst
%
category: 'accessing'
method: Scanner
stream
	"<ReadStream on: String>"

	^stream
%
category: 'actions'
method: Scanner
defaultLessAction
	^[
	self peek = $~
		ifTrue: [
		self next.
		self readAsciiBase85ByteString]
		ifFalse: [
		self peek = $<
			ifTrue: [
			self next.
			#<<]
			ifFalse: [
			self readHexadecimalByteString]]]
%
method: Scanner
escapeActions
	| dict |
	dict := Dictionary new.
	dict at: $n put: [:wst | wst cr].
	dict at: $r put: [:wst | wst cr].
	dict at: $t put: [:wst | wst tab].
	dict at: $b put: [:wst | wst skip: -1	"no way"].
	dict at: $f put: [:wst | wst cr].
	dict at: $\ put: [:wst | wst nextPut: $\].
	dict at: $/ put: [:wst | wst nextPut: $/].
	dict at: $( put: [:wst | wst nextPut: $(].
	dict at: $) put: [:wst | wst nextPut: $)].
	^dict
%
method: Scanner
specialActionsByCharacter
	"<Dictionary key: Character value: Block>"

	^specialActionsByCharacter ifNil: [
		| dict |
		dict := Dictionary new.
		dict at: $% put: [self readComment].
		dict at: $/ put: [LiteralName on: self readToken asSymbol].
		dict at: $( put: [self readString].
		dict at: $[ put: [#'['].
		dict at: $] put: [#']'].
		dict at: ${ put: [self readProcedure].
		dict at: $} put: [#'}'].
		dict at: $< put: self defaultLessAction.
		dict at: $> put: [
			self peek = $> ifTrue: [
				self next.
				#>>]].
		specialActionsByCharacter := dict]
%
category: 'delegating'
method: Scanner
next
	"<Character>"

	^self stream next
%
method: Scanner
peek
	"<Character>"

	^self stream peek
%
method: Scanner
reset
	self stream reset
%
method: Scanner
upTo: aCharacter
	"<String>"

	^self stream upTo: aCharacter
%
method: Scanner
upToEnd
	"<String>"

	^self stream upToEnd
%
category: 'initialize-release'
method: Scanner
initializeStream: aReadStream
	stream := aReadStream
%
category: 'reading'
method: Scanner
nextPostScriptObject
	"<Object>
	Skips comments.
	Raises an exception if atEnd of the token stream"

	self readWhitespace.
	(self isSpecial: self peek) ifTrue: [
		^self readSpecialObject ifNil: [self nextPostScriptObject]].
	^self readNumberOrName ifNil: [EndOfTokenStreamNotification raiseSignal]
%
method: Scanner
readAsciiBase85ByteString
	"<ByteString>"

	| asciiString |
	asciiString := self upTo: $~.
	self next = $> ifFalse: [
		Syntaxerror raiseSignal: 'closing angle bracket expected'].
	^String fromASCII85: asciiString
%
method: Scanner
readComment
	"<nil>"

	[
	self atEnd or: [
	self isNewline: self peek]] whileFalse: [self next].
	^nil
%
method: Scanner
readEscapeTo: aWriteStream
	"<String>
	the $\ was read"

	| char |
	char := self next.
	(self isNewline: char) ifTrue: [
		^nil].
	self escapeActions at: char ifPresent: [:block |
		^block value: aWriteStream].
	(char between: $0 and: $7) ifTrue: [
		^aWriteStream nextPut: (self readOctCodeStartingWith: char)].
	Syntaxerror raiseSignal: 'special character not recognized'
%
method: Scanner
readNumberOrName
	"<Number | Symbol>"

	| token |
	token := self readToken.
	token isEmpty ifTrue: [
		^nil].
	(Number readPostScriptSyntaxFrom: token readStream) ifNotNil: [:number |
		^number].
	^token asSymbol
%
method: Scanner
readOctCodeStartingWith: digit
	"<Character>"

	| oct code |
	oct := WriteStream on: (String new: 3).
	oct nextPut: digit.
	(self peek between: $0 and: $7) ifTrue: [
		oct nextPut: self next.
		(self peek between: $0 and: $7) ifTrue: [
			oct nextPut: self next]].
	code := ('8r' , oct contents) asNumber.
	^code asCharacter
%
method: Scanner
readProcedure
	"<Procedure>"
	"the opening curly bracket has been read"

	| ops |
	ops := OrderedCollection new.
	[self atEnd] whileFalse: [
		| next |
		next := self nextPostScriptObject.
		next = #'}' ifTrue: [
			^Procedure withAll: ops].
		ops add: next].
	Syntaxerror raiseSignal: 'closing curly bracket expected'
%
method: Scanner
readSpecialObject
	"<Object>"

	^(self specialActionsByCharacter at: self next) value
%
method: Scanner
readString
	"<String>"
	"the opening bracket has been read"

	| wst |
	wst := WriteStream on: (String new: 20).
	[self atEnd] whileFalse: [
		| next |
		next := self next.
		next = $) ifTrue: [^wst contents].
		next = $( ifTrue: [wst nextPutAll: '(', self readString, ')'] ifFalse: [
		next = $\ ifTrue: [self readEscapeTo: wst] ifFalse: [
		wst nextPut: next]]].
	Syntaxerror raiseSignal: 'closing bracket expected'
%
method: Scanner
readToken
	"<String>"

	| wst |
	wst := WriteStream on: (String new: 10).
	[self peek ifNotNil: [:char | self isDelimiter: char] ifNil: [true]] whileFalse: [
		wst nextPut: self next].
	^wst contents
%
method: Scanner
readWhitespace
	[self peek ifNotNil: [:char | self isWhitespace: char] ifNil: [false]] whileTrue: [
		self next]
%
category: 'reading hexadecimal'
method: Scanner
hexByteStringFrom: aString
	"<ByteString>"

	| wst |
	wst := (String new: (aString size + 1) // 2) writeStream.
	self withHexCharsIn: aString do: [:char1 :char2 |
		wst nextPut: (((self nibbleFor: char1) bitShift: 4) bitOr: (self nibbleFor: char2)) asCharacter].
	^wst contents
%
method: Scanner
nibbleFor: aCharacter
	"<Integer [0..15] | nil>
	the hexadecimal code of aCharacter.
	Throws error when aCharacter is not a hex character"

	| code values |
	code := aCharacter asInteger.
	values := #(nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil 0 1 2 3 4 5 6 7 8 9 nil nil nil nil nil nil nil 10 11 12 13 14 15 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil 10 11 12 13 14 15).
	(code between: 1 and: values size) ifTrue: [
		(values at: code) ifNotNil: [:value |
			^value]].
	Syntaxerror raiseSignal: 'no hexadecimal string'
%
method: Scanner
readHexadecimalByteString
	"<ByteString>"

	^self hexByteStringFrom: ((self stream upTo: $>) reject: #isSeparator)
%
method: Scanner
withHexCharsIn: aString do: aTwoArgumentBlock
	| rst |
	rst := aString readStream.
	[rst atEnd] whileFalse: [
		aTwoArgumentBlock
			value: rst next
			value: (rst atEnd
				ifTrue: [$0]
				ifFalse: [
				rst next])]
%
category: 'testing'
method: Scanner
atEnd
	"<Boolean>"

	^self stream atEnd
%
method: Scanner
isDelimiter: aCharacter
	"<Boolean>
	true, if aCharacter delimits a token"

	^(self isWhitespace: aCharacter) or: [
	self isSpecial: aCharacter]
%
method: Scanner
isInteger: string
	^(string allSatisfy: #isDigit) or: [
	string size > 1 and: [
	('+-' includes: string first) and: [
	(string allButFirst: 1) allSatisfy: #isDigit]]]
%
method: Scanner
isNewline: aCharacterOrNil
	^aCharacterOrNil notNil and: [
	#(10 13) includes: aCharacterOrNil asInteger]
%
method: Scanner
isRadix: string
	| numberToken base |
	(string includes: $#) ifFalse: [
		^false].
	numberToken := string tokensBasedOn: $#.
	base := numberToken first asNumber.
	^(base between: 2 and: 36) and: [
	numberToken last allSatisfy: [:c |
		c isDigit or: [
		c asUppercase asInteger between: $A asInteger and: $A asInteger - 1 + (base - 10)]]]
%
method: Scanner
isReal: string
	| rst number exponent |
	(string anySatisfy: [:c | '.eE' includes: c]) ifFalse: [^false].
	rst := string readStream.
	number := String new.
	('+-' includes: rst peek) ifTrue: [rst next].
	[rst atEnd or: ['eE' includes: rst peek]] whileFalse: [
		number := (String with: rst next), number].
	(number anySatisfy: #isDigit) ifFalse: [^false].
	(number allSatisfy: [:c | c isDigit or: [c = $.]]) ifFalse: [^false].
	exponent := String new.
	('eE' includes: rst peek) ifTrue: [
		rst next.
		('+-' includes: rst peek) ifTrue: [rst next].
		exponent := rst upToEnd.
		(exponent allSatisfy: #isDigit) ifFalse: [^false]].
	^true
%
method: Scanner
isSpecial: aCharacter
	^'()<>[]{}/%' includes: aCharacter
%
method: Scanner
isWhitespace: aCharacter
	^#(0 9 10 12 13 32) includes: aCharacter asInteger
%
category: 'accessing'
method: Stack
at: zeroBasedIndex
	self objects size <= zeroBasedIndex ifTrue: [
		^Stackunderflow raiseSignal].
	^self objects at: zeroBasedIndex + 1
%
method: Stack
indexOf: anObject
	^self objects indexOf: anObject
%
method: Stack
objects
	"<OrderedCollection>"

	^objects ifNil: [objects := OrderedCollection new]
%
method: Stack
size
	^self objects size
%
method: Stack
top
	self objects isEmpty ifTrue: [
		^Stackunderflow raiseSignal].
	^self objects first
%
category: 'actions'
method: Stack
pop
	self objects isEmpty ifTrue: [
		^Stackunderflow raiseSignal].
	^self objects removeFirst
%
method: Stack
popTill: anObject
	"<OrderedCollection of: Object>
	pops all elements off the receiver including anObject"

	| list |
	list := OrderedCollection new.
	[self top = anObject] whileFalse: [list add: self pop].
	self pop.
	^list
%
method: Stack
popTillMark
	"<OrderedCollection of: Object>
	in the order: top-of-stack first continuing towards the bottom-of-stack"

	^self popTill: Mark new
%
method: Stack
push: anObject
	^self objects addFirst: anObject
%
category: 'printing'
method: Stack
printOn: stream
	self printPostScriptOn: stream
%
method: Stack
printPostScriptOn: aStream
	aStream nextPutAll: '|| '.
	self objects reverse do: [:object | object printPostScriptOn: aStream] separatedBy: [
		aStream space].
	aStream nextPutAll: ' <'
%
category: 'testing'
method: Stack
isEmpty
	^self objects isEmpty
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Basics'.
	dict at: #comment put: 'Basic objects for reading a PDF'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #storeVersion put: '2.5.0.3'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
	PDFtalkLibrary at: #PDF put: nil.
%
# Define namespace PDFtalk
DoIt
	| newDictionary |
	newDictionary := SymbolDictionary new.
	newDictionary at: #PDFtalk put: newDictionary.
	PDFtalkLibrary at: #PDFtalk put: newDictionary
%
# Define class ByteWriteStream
DoIt
WriteStreamPortable
	subclass: 'ByteWriteStream'
	instVarNames: #(bigEndian)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	ByteWriteStream category: 'PDFtalk Basics'.
	ByteWriteStream comment: 'stream to write binary data'.
%
# Define class ByteReadStream
DoIt
ReadStreamPortable
	subclass: 'ByteReadStream'
	instVarNames: #(bigEndian)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	ByteReadStream category: 'PDFtalk Basics'.
	ByteReadStream comment: 'stream to read binary data
'.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class Error
DoIt
Error
	subclass: 'Error'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Error category: 'PDFtalk Basics'.
	Error comment: 'Super class of all exceptions thrown by the PDF code'.
	Error namespacePath: #(#PDFtalk).
%
# Define class Unsupported
DoIt
Error
	subclass: 'Unsupported'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Unsupported category: 'PDFtalk Basics'.
	Unsupported comment: 'Unsupported is raised when a feature of the PDF specification is not (yet) supported'.
	Unsupported namespacePath: #(#PDFtalk).
%
# Define class Version
DoIt
Magnitude
	subclass: 'Version'
	instVarNames: #(major minor)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Version category: 'PDFtalk Basics'.
	Version comment: 'The PDF version of a specific feature

Each released version is represented by named instances (class methods) for easier referencing and testing

Note: May need to be extended for sub versions like addendums and patches '.
	Version namespacePath: #(#PDFtalk).
%
# Define class PDFEncoder
DoIt
Object
	subclass: 'PDFEncoder'
	instVarNames: #(stream)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PDFEncoder category: 'PDFtalk Basics'.
	PDFEncoder comment: 'Encoders user by the PDF Parser.

Inspired by VW StreamEncoder'.
	PDFEncoder namespacePath: #(#PDFtalk).
%
# Define class HexStringEncoder
DoIt
PDFEncoder
	subclass: 'HexStringEncoder'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	HexStringEncoder category: 'PDFtalk Basics'.
	HexStringEncoder comment: 'A de- and en-coder for PDF Hexadecimal Strings (see PDF 32000_2008.pdf p.16)

Use String>>fromPdfHexString to convert from PDF to Smalltalk
Use String>>asPdfHexString to convert from Smalltalk to PDF'.
	HexStringEncoder namespacePath: #(#PDFtalk).
%
# Define class CharacterMap
DoIt
Object
	subclass: 'CharacterMap'
	instVarNames: #(name encoder decoder)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CharacterMap category: 'PDFtalk Basics'.
	CharacterMap comment: 'provides a mapping of bytes to characters

#encode: maps a Character to a byte
#decode: maps a byte to a Character

Unusual name to not conflict with VW ByteCharacterEncoder which was used before and provides some of its services'.
	CharacterMap namespacePath: #(#PDFtalk).
%
# Define class FileError
DoIt
Error
	subclass: 'FileError'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FileError category: 'PDFtalk Basics'.
	FileError comment: 'Error in the PDF file structure'.
	FileError namespacePath: #(#PDFtalk).
%
# Define class ExtraCharacterInStreamError
DoIt
FileError
	subclass: 'ExtraCharacterInStreamError'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ExtraCharacterInStreamError category: 'PDFtalk Basics'.
	ExtraCharacterInStreamError comment: 'One extra character was read in a stream after the position given by the /Length parameter'.
	ExtraCharacterInStreamError namespacePath: #(#PDFtalk).
%
# Define class PDF
DoIt
Object
	subclass: 'PDF'
	instVarNames: #()
	classVars: #(MacRomanEncoder PDFDocEncoder PDFSpecification PDFSpecificationFilenameString StandardEncoder WinAnsiEncoder)
	classInstVars: #(types)
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PDF category: 'PDFtalk Basics'.
	PDF comment: 'Global class for utilities used from anywhere.

There are no instances; all functionality is implemented as class methods.'.
	PDF namespacePath: #(#PDFtalk).
%
# Define class NameEncoder
DoIt
PDFEncoder
	subclass: 'NameEncoder'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NameEncoder category: 'PDFtalk Basics'.
	NameEncoder comment: 'A de- and en-coder for PDF Names (see PDF 32000_2008.pdf p.17)

Use String>>fromPdfName to convert from PDF to Smalltalk
Use String>>asPdfName to convert from Smalltalk to PDF'.
	NameEncoder namespacePath: #(#PDFtalk).
%
# Define class ReadError
DoIt
Error
	subclass: 'ReadError'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ReadError category: 'PDFtalk Basics'.
	ReadError comment: 'Syntax error while reading a PDF.
The parameter contains the position in the PDF file where the error occured'.
	ReadError namespacePath: #(#PDFtalk).
%
# Define class TypeError
DoIt
Error
	subclass: 'TypeError'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TypeError category: 'PDFtalk Basics'.
	TypeError comment: 'signals a type mismatch'.
	TypeError namespacePath: #(#PDFtalk).
%
# Define class MissingObjectError
DoIt
FileError
	subclass: 'MissingObjectError'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	MissingObjectError category: 'PDFtalk Basics'.
	MissingObjectError comment: 'A reference is pointing to a missing object'.
	MissingObjectError namespacePath: #(#PDFtalk).
%
# Define class StringEncoder
DoIt
PDFEncoder
	subclass: 'StringEncoder'
	instVarNames: #(quoteParenthesis)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	StringEncoder category: 'PDFtalk Basics'.
	StringEncoder comment: 'A de- and en-coder for PDF Literal Strings (see PDF 32000_2008.pdf p.15)

Use String>>fromPdfString to convert from PDF to Smalltalk
Use String>>asPdfString to convert from Smalltalk to PDF'.
	StringEncoder namespacePath: #(#PDFtalk).
%
# Define class Writer
DoIt
WriteStream
	subclass: 'Writer'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Writer category: 'PDFtalk Basics'.
	Writer comment: 'A stream to write PDF objects to a byte stream'.
	Writer namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
category: 'accessing'
classmethod: ByteReadStream
systemIsBigEndian
	^System gemIsBigEndian
%
category: 'instance creation'
classmethod: ByteReadStream
bigEndianOn: aByteArray
	| inst |
	inst := self on: aByteArray.
	inst bigEndian: true.
	^inst
%
classmethod: ByteReadStream
littleEndianOn: aByteArray
	| inst |
	inst := self on: aByteArray.
	inst bigEndian: false.
	^inst
%
category: 'accessing'
method: ByteReadStream
bigEndian
	"<Boolean>
	true iff big endian, false iff little endian"

	^bigEndian ifNil: [self class systemIsBigEndian]
%
method: ByteReadStream
bigEndian: aBoolean
	bigEndian := aBoolean
%
category: 'accessing by position'
method: ByteReadStream
atPosition: anInteger do: oneArgumentBlock
	"<Integer>"

	| old |
	old := self position.
	self position: anInteger - 1.
	^[oneArgumentBlock value: self] ensure: [self position: old]
%
method: ByteReadStream
longAt: anInteger
	"<Integer>"

	^self atPosition: anInteger do: #nextLong
%
method: ByteReadStream
longLongAt: anInteger
	"<Integer>"

	^self atPosition: anInteger do: #nextLongLong
%
method: ByteReadStream
shortAt: anInteger
	"<Integer>"

	^self atPosition: anInteger do: #nextShort
%
method: ByteReadStream
unsignedLongAt: anInteger
	"<Integer>"

	^self atPosition: anInteger do: #nextUnsignedLong
%
method: ByteReadStream
unsignedShortAt: anInteger
	"<Integer>"

	^self atPosition: anInteger do: #nextUnsignedShort
%
category: 'accessing stream'
method: ByteReadStream
nextBooleanByte
	"<Boolean>"

	^(self nextOrError: 1) first isZero not
%
method: ByteReadStream
nextLong
	"<Integer>"

	| rst b0 b1 b2 w h |
	rst := self nextLongBytes readStream.
	b0 := rst next.
	b1 := rst next.
	b2 := rst next.
	w := rst next.
	h := ((b0 bitAnd: 16r7F) - (b0 bitAnd: 16r80) bitShift: 8) + b1.
	b2 = 0 ifFalse: [
		w := (b2 bitShift: 8) + w].
	h = 0 ifFalse: [
		w := (h bitShift: 16) + w].
	^w
%
method: ByteReadStream
nextLongBytes
	"<Array[4] of: Integer>
	in big endian format for internal use"

	| bytes |
	bytes := self nextOrError: 4.
	self bigEndian ifTrue: [
		^bytes].
	^bytes reverse
%
method: ByteReadStream
nextLongLong
	"<Integer>"

	| rst b0 b1 b2 b3 b4 b5 b6 w h |
	rst := self nextLongLongBytes readStream.
	b0 := rst next.
	b1 := rst next.
	b2 := rst next.
	b3 := rst next.
	b4 := rst next.
	b5 := rst next.
	b6 := rst next.
	w := rst next.
	h := ((b0 bitAnd: 16r7F) - (b0 bitAnd: 16r80) bitShift: 8) + b1.
	b6 = 0 ifFalse: [
		w := (b6 bitShift: 8) + w].
	b5 = 0 ifFalse: [
		w := (b5 bitShift: 16) + w].
	b4 = 0 ifFalse: [
		w := (b4 bitShift: 24) + w].
	b3 = 0 ifFalse: [
		w := (b3 bitShift: 32) + w].
	b2 = 0 ifFalse: [
		w := (b2 bitShift: 40) + w].
	h = 0 ifFalse: [
		w := (h bitShift: 48) + w].
	^w
%
method: ByteReadStream
nextLongLongBytes
	"<Array[8] of: Integer>
	in big endian format for internal use"

	| bytes |
	bytes := self nextOrError: 8.
	self bigEndian ifTrue: [
		^bytes].
	^bytes reverse
%
method: ByteReadStream
nextOrError: anInteger
	"<Array of: Integer>
	raise IncompleteNextCountError when there are not enough elements available"

	| answer |
	answer := self next: anInteger.
	answer size < anInteger ifTrue: [
		^EndOfStream signal].
	^answer
%
method: ByteReadStream
nextShort
	"<Integer>"

	| word |
	word := self nextUnsignedShort.
	^(word bitAnd: 16r7FFF) - (word bitAnd: 16r8000)
%
method: ByteReadStream
nextString
	"<ByteString>"

	^(self upTo: 0) asString
%
method: ByteReadStream
nextUnsignedLong
	"<Integer>"

	| rst b0 b1 b2 w |
	rst := self nextLongBytes readStream.
	b0 := rst next.
	b1 := rst next.
	b2 := rst next.
	w := rst next.
	b2 = 0 ifFalse: [
		w := (b2 bitShift: 8) + w].
	b1 = 0 ifFalse: [
		w := (b1 bitShift: 16) + w].
	b0 = 0 ifFalse: [
		w := (b0 bitShift: 24) + w].
	^w
%
method: ByteReadStream
nextUnsignedShort
	"<Integer>"

	| bytes byte1 byte2 |
	bytes := self nextOrError: 2.
	byte1 := bytes first.
	byte2 := bytes last.
	self bigEndian ifTrue: [
		^(byte1 bitShift: 8) + byte2].
	^(byte2 bitShift: 8) + byte1
%
category: 'accessing'
classmethod: ByteWriteStream
systemIsBigEndian
	^System gemIsBigEndian
%
category: 'instance creation'
classmethod: ByteWriteStream
bigEndianOn: aByteArray
	| inst |
	inst := self on: aByteArray.
	inst bigEndian: true.
	^inst
%
classmethod: ByteWriteStream
littleEndianOn: aByteArray
	| inst |
	inst := self on: aByteArray.
	inst bigEndian: false.
	^inst
%
category: 'accessing'
method: ByteWriteStream
bigEndian
	"<Boolean>
	true iff big endian, false iff little endian"

	^bigEndian ifNil: [self class systemIsBigEndian]
%
method: ByteWriteStream
bigEndian: aBoolean
	bigEndian := aBoolean
%
method: ByteWriteStream
nextPutBooleanByte: aBoolean
	self nextPut: (aBoolean
		ifTrue: [1]
		ifFalse: [0])
%
method: ByteWriteStream
nextPutLong: anInteger
	| b0 b1 b2 b3 |
	b0 := anInteger bitShift: -24.
	b0 := (b0 bitAnd: 16r7F) - (b0 bitAnd: -16r80).
	b1 := (anInteger bitShift: -16) bitAnd: 16rFF.
	b2 := (anInteger bitShift: -8) bitAnd: 16rFF.
	b3 := anInteger bitAnd: 16rFF.
	self bigEndian ifTrue: [
		self nextPut: b0.
		self nextPut: b1.
		self nextPut: b2.
		^self nextPut: b3].
	self nextPut: b3.
	self nextPut: b2.
	self nextPut: b1.
	self nextPut: b0
%
method: ByteWriteStream
nextPutLongLong: anInteger
	"bit representation of 64 bit negative numbers are differnt in VW and GS - dont use #bitShift:"
	
	| b0 b1 b2 b3 b4 b5 b6 b7 |
	b0 := anInteger // (2 raisedTo: 56).
	b0 := (b0 bitAnd: 16r7F) - (b0 bitAnd: -16r80).
	b1 := (anInteger // (2 raisedTo: 48)) bitAnd: 16rFF.
	b2 := (anInteger // (2 raisedTo: 40)) bitAnd: 16rFF.
	b3 := (anInteger // (2 raisedTo: 32)) bitAnd: 16rFF.
	b4 := (anInteger // (2 raisedTo: 24)) bitAnd: 16rFF.
	b5 := (anInteger // (2 raisedTo: 16)) bitAnd: 16rFF.
	b6 := (anInteger // (2 raisedTo: 8)) bitAnd: 16rFF.
	b7 := anInteger bitAnd: 16rFF.
	self bigEndian ifTrue: [
		self nextPut: b0.
		self nextPut: b1.
		self nextPut: b2.
		self nextPut: b3.
		self nextPut: b4.
		self nextPut: b5.
		self nextPut: b6.
		^self nextPut: b7].
	self nextPut: b7.
	self nextPut: b6.
	self nextPut: b5.
	self nextPut: b4.
	self nextPut: b3.
	self nextPut: b2.
	self nextPut: b1.
	self nextPut: b0
%
method: ByteWriteStream
nextPutShort: anInteger
	self nextPutUnsignedShort: (anInteger bitAnd: 16r7FFF) - (anInteger bitAnd: -16r8000)
%
method: ByteWriteStream
nextPutString: aByteString
	self
		nextPutAll: aByteString asByteArray;
		nextPut: 0
%
method: ByteWriteStream
nextPutUnsignedLong: anInteger
	| b0 b1 b2 b3 |
	b0 := anInteger bitShift: -24.
	b1 := (anInteger bitShift: -16) bitAnd: 16rFF.
	b2 := (anInteger bitShift: -8) bitAnd: 16rFF.
	b3 := anInteger bitAnd: 16rFF.
	self bigEndian ifTrue: [
		self nextPut: b0.
		self nextPut: b1.
		self nextPut: b2.
		^self nextPut: b3].
	self nextPut: b3.
	self nextPut: b2.
	self nextPut: b1.
	self nextPut: b0
%
method: ByteWriteStream
nextPutUnsignedShort: anInteger
	| b0 b1 |
	b0 := anInteger bitShift: -8.
	b1 := anInteger bitAnd: 16rFF.
	self bigEndian ifTrue: [
		self nextPut: b0.
		^self nextPut: b1].
	self nextPut: b1.
	self nextPut: b0
%
DoIt
	| package policy |
	package := GsPackageLibrary createPackageNamed: #SessionMethods.
	GsPackageLibrary installPackage: package.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: FileInSymbolDictionary.
	policy externalSymbolList: (GsSession currentSession symbolList asArray copyWithout: FileInSymbolDictionary).
	policy enable.
%
category: '*PDFtalk Basics-accessing'
method: Behavior
instanceBehavior
	^self theNonMetaClass
%
category: '*PDFtalk Basics-instance creation'
classmethod: ClassOrganizer
pdfNewWithRoot: aClass symbolList: aSymbolList
	(self respondsTo: #_newWithRoot:symbolList:env:) ifTrue: [
		^self _newWithRoot: aClass symbolList: aSymbolList env: 0].
	^self _newWithRoot: aClass symbolList: aSymbolList
%
category: '*PDFtalk Basics-testing'
method: AbstractException
isSignalledException
	^true
%
category: '*PDFtalk Basics-PDF'
classmethod: Character
pdfDelimiters
	"<SequenceableCollection of Character>"

	^'()<>[]{}/%'
%
classmethod: Character
pdfNumeric
	"<SequenceableCollection of Character>"

	^'+-.0123456789'
%
classmethod: Character
illegalCode
	^16rFFFF
%
category: '*PDFtalk Basics-testing'
method: Character
isAscii
	^self asInteger < 128
%
method: Character
isPdfDelimiter
	^self class pdfDelimiters includes: self
%
method: Character
isPdfNumeric
	^self class pdfNumeric includes: self
%
method: Character
isPdfRegular
	^self isPdfDelimiter not and: [
	self isPostScriptWhitespace not]
%
DoIt
	| dict policy |
	dict := SymbolDictionary new.
	dict at: #UNWRITABLE put: dict.
	dict immediateInvariant.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: dict.
	policy externalSymbolList: Array new.
	policy enable.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'instance creation'
classmethod: CharacterMap
iso8859_1
	"the platform encoding"
	"self iso8859_1"

	| map |
	map := WordArray new: 256 withAll: Character illegalCode.
	1 to: 256 do: [:index | map at: index put: (index - 1) asCharacter codePoint].
	^self named: #iso8859_1 withCodes: map
%
classmethod: CharacterMap
named: aSymbol withCodes: arrayWithCharacterCodes
	| inst |
	inst := self new.
	inst initializeName: aSymbol withCodes: arrayWithCharacterCodes.
	^inst
%
category: 'accessing'
method: CharacterMap
decode: anInteger
	"<Character>"

	^self decoder at: anInteger + 1
%
method: CharacterMap
decoder
	"<SequenceableCollection[256] of: Character>"

	^decoder ifNil: [
		decoder := DoubleByteString new: 256 withAll: Character illegalCode asCharacter]
%
method: CharacterMap
encode: aCharacter
	"<Integer>"

	^self encoder at: aCharacter ifAbsent: [Character illegalCode]
%
method: CharacterMap
encoder
	"<Dictionary[256] key: Character value: Byte>"

	^encoder ifNil: [encoder := IdentityDictionary new: 256]
%
method: CharacterMap
name
	"<Symbol>"
	
	^name
%
category: 'initialize-release'
method: CharacterMap
encode: aCharacter as: aByte
	| oldCharacter newByte |
	oldCharacter := self decoder at: aByte + 1.
	oldCharacter == aCharacter ifTrue: [
		^self].
	self decoder at: aByte + 1 put: aCharacter.
	aCharacter asInteger = Character illegalCode ifFalse: [
		self encoder at: aCharacter put: aByte].
	(self encoder at: oldCharacter ifAbsent: []) == aByte ifTrue: [
		newByte := decoder indexOf: oldCharacter.
		newByte = 0
			ifTrue: [self encoder removeKey: oldCharacter]
			ifFalse: [
			self encoder at: oldCharacter put: newByte - 1]]
%
method: CharacterMap
initializeName: aSymbol withCodes: arrayWithCharacterCodes
	name := aSymbol.
	1 to: arrayWithCharacterCodes size do: [:index |
		self encode: (Character value: (arrayWithCharacterCodes at: index)) as: index - 1]
%
category: 'instance creation'
classmethod: Error
newSignal: aString
	^(self new)
		messageText: aString;
		yourself
%
classmethod: Error
newWith: aParameter message: aString
	"Create an exception without raising it"

	^(self new)
		messageText: aString;
		arg: aParameter;
		yourself
%
category: 'signalling'
classmethod: Error
signal: aString with: aParameter
	"Raise an exception"

	^(self newWith: aParameter message: aString) signal
%
category: 'testing'
classmethod: Error
mayResume

	^true
%
category: 'initialize-release'
method: Error
initialize
	super initialize.
	gsResumable := self class mayResume
%
category: 'printing'
method: Error
description
	"<String>"

	| result |
	self messageText ifNotNil: [:something |
		result := [something asString] onException: Error do: [:ex | ex return: nil]].
	^result ifNil: [self asString]
%
category: 'reading'
method: HexStringEncoder
nextCharacter
	| hex1 hexString |
	hex1 := (self nextHexFrom: stream) ifNil: [
		^nil].
	hexString := String
		with: hex1
		with: ((self nextHexFrom: stream) ifNil: [$0]).
	^(self integerFrom: hexString radix: 16) asCharacter
%
method: HexStringEncoder
nextHexFrom: aStream
	"<Character | nil>
	read until we find a valid hexadecimal character.
	nil iff at the end of the stream"

	| character |
	character := aStream next.
	character ifNil: [
		^nil].
	(#(8 9 10 12 13 32) includes: character asInteger) ifTrue: [
		^self nextHexFrom: aStream].
	(character isDigit or: [
	'abcdef' includes: character asLowercase]) ifTrue: [
			^character].
	^self unknownHexCharacter: character
%
method: HexStringEncoder
unknownHexCharacter: aCharacter
	(OutOfRange new)
		messageText: aCharacter printString , ' is not a hexadecimal character';
		arg: aCharacter;
		signal.
	^Character illegalCode asCharacter
%
category: 'writing'
method: HexStringEncoder
nextPut: aCharacter
	"put the character equivalent to the PDF aCharacter onto aStream"

	| string |
	(stream position > 63 and: [
	(stream position rem: 64) <= 1]) ifTrue: [
			stream nextPut: Character lf asInteger].
	string := aCharacter asInteger printStringRadix: 16.
	string size = 1 ifTrue: [
		string := '0' , string].
	stream nextPutAll: string asByteArray
%
category: 'reading'
method: NameEncoder
nextCharacter
	| char |
	char := stream next.
	char == $# ifFalse: [
		^char].
	^(self integerFrom: (stream next: 2) radix: 16) asCharacter
%
category: 'writing'
method: NameEncoder
nextPut: aCharacter
	"put the character equivalent to the PDF aCharacter onto aStream"

	| i |
	i := aCharacter asInteger.
	(aCharacter isPdfRegular and: [
	(i between: 16r21 and: 16r7E) and: [
	(aCharacter == $#) not]]) ifTrue: [
			^stream nextPut: i].
	stream nextPut: $# asInteger.
	stream nextPutAll: (aCharacter asInteger printStringRadix: 16) asByteArray
%
category: 'accessing'
classmethod: PDF
libraryVersionString
	"<String>
	the version of the PDFtalk library.
	This corresponds to the version in the public store.
	The version consists of 2 parts:
		major: 		gets increased with a major rewrite.
		minor: 		gets increased with new features or incompatible changes.
	The store version has a 3rd and 4th component:
		release: 	increases every time when a version is released.
		build:	denotes a build when changes are internally published"

	^'2.5'
%
category: 'accessing encoders'
classmethod: PDF
d2LatinCharacterSetAndEncodings
	"<Dictionary key: String value: (Array of: characterCode stdInteger macInteger winInteger pdfInteger)>
PDF 32000_2008.pdf pp. 653.
D.2, 'Latin Character Set and Encodings', describes the entire character set for the Adobe standard Latin-text fonts.
This character set shall be supported by the Times, Helvetica, and Courier font families, which are among the standard 14 predefined fonts.
For each named character, an octal character code is defined for four different encodings:
		StandardEncoding, MacRomanEncoding, WinAnsiEncoding, and PDFDocEncoding.
Unencoded characters are indicated by a dash (â)."
	"the last element is the character code in Smalltalk"

	| dict |
	dict := IdentityDictionary new.
	dict    "Name 					Std 	Mac 	Win 	PDF 	#asCharacter"
		at: 'A'				put: #(	8r101 	8r101 	8r101 	8r101 	8r101);
		at: 'AE'				put: #(	8r341 	8r256 	8r306 	8r306 	8r306);
		at: 'Aacute'			put: #(	nil		8r347 	8r301 	8r301 	8r301);
		at: 'Acircumflex'		put: #(	nil		8r345 	8r302 	8r302 	8r302);
		at: 'Adieresis'		put: #(	nil		8r200 	8r304 	8r304 	8r304);
		at: 'Agrave'			put: #(	nil		8r313 	8r300 	8r300 	8r300);
		at: 'Aring'			put: #(	nil		8r201 	8r305 	8r305 	8r305);
		at: 'Atilde'			put: #(	nil		8r314 	8r303 	8r303 	8r303);
		at: 'B'				put: #(	8r102 	8r102 	8r102 	8r102 	8r102);
		at: 'C'				put: #(	8r103 	8r103 	8r103 	8r103 	8r103);
		at: 'Ccedilla'			put: #(	nil		8r202 	8r307 	8r307 	8r307);
		at: 'D'				put: #(	8r104 	8r104 	8r104 	8r104 	8r104);
		at: 'E'				put: #(	8r105 	8r105 	8r105 	8r105 	8r105);
		at: 'Eacute'			put: #(	nil		8r203 	8r311 	8r311 	8r311);
		at: 'Ecircumflex'		put: #(	nil		8r346 	8r312 	8r312 	8r312);
		at: 'Edieresis'		put: #(	nil		8r350 	8r313 	8r313 	8r313);
		at: 'Egrave'			put: #(	nil		8r351 	8r310 	8r310 	8r310);
		at: 'Eth'				put: #(	nil		nil		8r320 	8r320 	8r320);
		at: 'Euro'			put: #(	nil		nil		8r200 	8r240 	16r20AC);
		at: 'F'				put: #(	8r106 	8r106 	8r106 	8r106 	8r106);
		at: 'G'				put: #(	8r107 	8r107 	8r107 	8r107 	8r107);
		at: 'H'				put: #(	8r110 	8r110 	8r110 	8r110 	8r110);
		at: 'I'				put: #(	8r111 	8r111 	8r111 	8r111 	8r111);
		at: 'Iacute'			put: #(	nil		8r352 	8r315 	8r315 	8r315);
		at: 'Icircumflex'		put: #(	nil		8r353 	8r316 	8r316 	8r316);
		at: 'Idieresis'			put: #(	nil		8r354 	8r317 	8r317 	8r317);
		at: 'Igrave'			put: #(	nil		8r355 	8r314 	8r314 	8r314);
		at: 'J'				put: #(	8r112 	8r112 	8r112 	8r112 	8r112);
		at: 'K'				put: #(	8r113 	8r113 	8r113 	8r113 	8r113);
		at: 'L'				put: #(	8r114 	8r114 	8r114 	8r114 	8r114);
		at: 'Lslash'			put: #(	8r350	nil		nil		8r225	16r141);
		at: 'M'				put: #(	8r115 	8r115 	8r115 	8r115 	8r115);
		at: 'N'				put: #(	8r116 	8r116 	8r116 	8r116 	8r116);
		at: 'Ntilde'			put: #(	nil		8r204 	8r321 	8r321 	8r321);
		at: 'O'				put: #(	8r117 	8r117 	8r117 	8r117 	8r117);
		at: 'OE'				put: #(	8r352 	8r316 	8r214 	8r226	16r152);
		at: 'Oacute'			put: #(	nil		8r356 	8r323 	8r323 	8r323);
		at: 'Ocircumflex'		put: #(	nil		8r357 	8r324 	8r324 	8r324);
		at: 'Odieresis'		put: #(	nil		8r205 	8r326 	8r326 	8r326);
		at: 'Ograve'			put: #(	nil		8r361 	8r322 	8r322 	8r322);
		at: 'Oslash'			put: #(	8r351 	8r257 	8r330 	8r330 	8r330);
		at: 'Otilde'			put: #(	nil		8r315 	8r325 	8r325 	8r325);
		at: 'P'				put: #(	8r120 	8r120 	8r120 	8r120 	8r120);
		at: 'Q'				put: #(	8r121 	8r121 	8r121 	8r121 	8r121);
		at: 'R'				put: #(	8r122 	8r122 	8r122 	8r122 	8r122);
		at: 'S'				put: #(	8r123 	8r123 	8r123 	8r123 	8r123);
		at: 'Scaron'			put: #(	nil		nil	 	8r212 	8r227 	16r160);
		at: 'T'				put: #(	8r124 	8r124 	8r124 	8r124 	8r124);
		at: 'Thorn'			put: #(	nil		nil	 	8r336 	8r336 	8r336);
		at: 'U'				put: #(	8r125 	8r125 	8r125 	8r125 	8r125);
		at: 'Uacute'			put: #(	nil		8r362 	8r332 	8r332 	8r332);
		at: 'Ucircumflex'		put: #(	nil		8r363 	8r333 	8r333 	8r333);
		at: 'Udieresis'		put: #(	nil		8r206 	8r334 	8r334 	8r334);
		at: 'Ugrave'			put: #(	nil		8r364 	8r331 	8r331 	8r331);
		at: 'V'				put: #(	8r126 	8r126 	8r126 	8r126 	8r126);
		at: 'W'				put: #(	8r127 	8r127 	8r127 	8r127 	8r127);
		at: 'X'				put: #(	8r130 	8r130 	8r130 	8r130 	8r130);
		at: 'Y'				put: #(	8r131 	8r131 	8r131 	8r131 	8r131);
		at: 'Yacute'			put: #(	nil		nil	 	8r335 	8r335 	8r335);
		at: 'Ydieresis'		put: #(	nil		8r331 	8r237 	8r230 	16r178);
		at: 'Z'				put: #(	8r132 	8r132 	8r132 	8r132 	8r132);
		at: 'Zcaron'			put: #(	nil		nil	 	8r216 	8r231 	16r17D);
		at: 'a'				put: #(	8r141 	8r141 	8r141 	8r141 	8r141);
		at: 'aacute'			put: #(	nil		8r207 	8r341 	8r341 	8r341);
		at: 'acircumflex'		put: #(	nil		8r211 	8r342 	8r342 	8r342);
		at: 'acute'			put: #(	8r302	8r253 	8r264 	8r264 	8r264);
		at: 'adieresis'		put: #(	nil		8r212 	8r344 	8r344 	8r344);
		at: 'ae'				put: #(	8r361 	8r276 	8r346 	8r346 	8r346);
		at: 'agrave'			put: #(	nil		8r210 	8r340 	8r340 	8r340);
		at: 'ampersand'		put: #(	8r046 	8r046 	8r046 	8r046 	8r046);
		at: 'aring'			put: #(	nil		8r214 	8r345 	8r345 	8r345);
		at: 'asciicircum'		put: #(	8r136 	8r136 	8r136 	8r136 	8r136);
		at: 'asciitilde'		put: #(	8r176 	8r176 	8r176 	8r176 	8r176);
		at: 'asterisk'			put: #(	8r052 	8r052 	8r052 	8r052 	8r052);
		at: 'at'				put: #(	8r100 	8r100 	8r100 	8r100 	8r100);
		at: 'atilde'			put: #(	nil		8r213 	8r343 	8r343 	8r343);
		at: 'b'				put: #(	8r142 	8r142 	8r142 	8r142 	8r142);
		at: 'backslash'		put: #(	8r134 	8r134 	8r134 	8r134 	8r134);
		at: 'bar'				put: #(	8r174 	8r174 	8r174 	8r174 	8r174);
		at: 'braceleft'		put: #(	8r173 	8r173 	8r173 	8r173 	8r173);
		at: 'braceright'		put: #(	8r175 	8r175 	8r175 	8r175 	8r175);
		at: 'bracketleft'		put: #(	8r133 	8r133 	8r133 	8r133 	8r133);
		at: 'bracketright'		put: #(	8r135 	8r135 	8r135 	8r135 	8r135);
		at: 'breve'			put: #(	8r306 	8r371 	nil 	 	8r030 	16r2D8);
		at: 'brokenbar'		put: #(	nil 	 	nil 	 	8r246 	8r246 	8r246);
		at: 'bullet'			put: #(	8r267 	8r245 	8r225 	8r200 	16r2022);
		at: 'c'				put: #(	8r143 	8r143 	8r143 	8r143 	8r143);
		at: 'caron'			put: #(	8r317 	8r377 	nil 	 	8r031 	16r2C7);
		at: 'ccedilla'			put: #(	nil		8r215 	8r347 	8r347 	8r347);
		at: 'cedilla'			put: #(	8r313 	8r374 	8r270 	8r270 	8r270);
		at: 'cent'			put: #(	8r242 	8r242 	8r242 	8r242 	8r242);
		at: 'circumflex'		put: #(	8r303 	8r366 	8r210 	8r032 	16r2C6);
		at: 'colon'			put: #(	8r072 	8r072 	8r072 	8r072 	8r072);
		at: 'comma'			put: #(	8r054 	8r054 	8r054 	8r054 	8r054);
		at: 'copyright'		put: #(	nil		8r251 	8r251 	8r251 	8r251);
		at: 'currency'		put: #(	8r250 	8r333 	8r244 	8r244 	8r244);
		at: 'd'				put: #(	8r144 	8r144 	8r144 	8r144 	8r144);
		at: 'dagger'			put: #(	8r262 	8r240 	8r206 	8r201 	16r2020);
		at: 'daggerdbl'		put: #(	8r263 	8r340 	8r207 	8r202	16r2021);
		at: 'degree'			put: #(	nil		8r241 	8r260 	8r260 	8r260);
		at: 'dieresis'			put: #(	8r310 	8r254 	8r250 	8r250 	8r250);
		at: 'divide'			put: #(	nil		8r326 	8r367 	8r367 	8r367);
		at: 'dollar'			put: #(	8r044 	8r044 	8r044 	8r044 	8r044);
		at: 'dotaccent'		put: #(	8r307 	8r372 	nil 	 	8r033 	16r2D9);
		at: 'dotlessi'			put: #(	8r365 	8r365 	nil 	 	8r232 	16r131);
		at: 'e'				put: #(	8r145 	8r145 	8r145 	8r145 	8r145);
		at: 'eacute'			put: #(	nil		8r216 	8r351 	8r351 	8r351);
		at: 'ecircumflex'		put: #(	nil		8r220 	8r352 	8r352 	8r352);
		at: 'edieresis'		put: #(	nil		8r221 	8r353 	8r353 	8r353);
		at: 'egrave'			put: #(	nil		8r217 	8r350 	8r350 	8r350);
		at: 'eight'			put: #(	8r070 	8r070 	8r070 	8r070 	8r070);
		at: 'ellipsis'			put: #(	8r274 	8r311 	8r205 	8r203 	16r2026);
		at: 'emdash'			put: #(	8r320 	8r321 	8r227 	8r204 	16r2014);
		at: 'endash'			put: #(	8r261 	8r320 	8r226 	8r205 	16r2013);
		at: 'equal'			put: #(	8r075 	8r075 	8r075 	8r075 	8r075);
		at: 'eth'				put: #(	nil		nil 	 	8r360 	8r360 	8r360);
		at: 'exclam'			put: #(	8r041 	8r041 	8r041 	8r041 	8r041);
		at: 'exclamdown'		put: #(	8r241 	8r301 	8r241 	8r241 	8r241);
		at: 'f'				put: #(	8r146 	8r146 	8r146 	8r146 	8r146);
		at: 'fi'				put: #(	8r256 	8r336 	nil 	 	8r223 	16rFB01);
		at: 'five'				put: #(	8r065 	8r065 	8r065 	8r065 	8r065);
		at: 'fl'				put: #(	8r257 	8r337 	nil 	 	8r224 	16rFB02);
		at: 'florin'			put: #(	8r246 	8r304 	8r203 	8r206 	16r192);
		at: 'four'				put: #(	8r064 	8r064 	8r064 	8r064 	8r064);
		at: 'fraction'			put: #(	8r244 	8r332 	nil 	 	8r207 	16r2215);
		at: 'g'				put: #(	8r147 	8r147 	8r147 	8r147 	8r147);
		at: 'germandbls'		put: #(	8r373 	8r247 	8r337 	8r337 	8r337);
		at: 'grave'			put: #(	8r301 	8r140 	8r140 	8r140 	8r140);
		at: 'greater'			put: #(	8r076 	8r076 	8r076 	8r076 	8r076);
		at: 'guillemotleft'		put: #(	8r253 	8r307 	8r253 	8r253 	8r253);
		at: 'guillemotright'	put: #(	8r273 	8r310 	8r273 	8r273 	8r273);
		at: 'guilsinglleft'		put: #(	8r254 	8r334 	8r213 	8r210 	16r2039);
		at: 'guilsinglright'		put: #(	8r255 	8r335 	8r233 	8r211 	16r203A);
		at: 'h'				put: #(	8r150 	8r150 	8r150 	8r150 	8r150);
		at: 'hungarumlaut'	put: #(	8r315 	8r375 	nil 	 	8r034 	16r2DD);
		at: 'hyphen'			put: #(	8r055 	8r055 	8r055 	8r055 	8r055);
		at: 'i'				put: #(	8r151 	8r151 	8r151 	8r151 	8r151);
		at: 'iacute'			put: #(	nil		8r222 	8r355 	8r355 	8r355);
		at: 'icircumflex'		put: #(	nil		8r224 	8r356 	8r356 	8r356);
		at: 'idieresis'			put: #(	nil		8r225 	8r357 	8r357 	8r357);
		at: 'igrave'			put: #(	nil		8r223 	8r354 	8r354 	8r354);
		at: 'j'				put: #(	8r152 	8r152 	8r152 	8r152 	8r152);
		at: 'k'				put: #(	8r153 	8r153 	8r153 	8r153 	8r153);
		at: 'l'				put: #(	8r154 	8r154 	8r154 	8r154 	8r154);
		at: 'less'				put: #(	8r074 	8r074 	8r074 	8r074 	8r074);
		at: 'logicalnot'		put: #(	nil		8r302 	8r254 	8r254 	8r254);
		at: 'lslash'			put: #(	8r370	nil		nil		8r233	16r142);
		at: 'm'				put: #(	8r155 	8r155 	8r155 	8r155 	8r155);
		at: 'macron'			put: #(	8r305	8r370 	8r257 	8r257 	8r257);
		at: 'minus'			put: #(	nil 		nil		nil		8r212	16r2212);
		at: 'mu'				put: #(	nil		8r265 	8r265 	8r265 	8r265);
		at: 'multiply'			put: #(	nil		nil 	 	8r327 	8r327 	8r327);
		at: 'n'				put: #(	8r156 	8r156 	8r156 	8r156 	8r156);
		at: 'nine'				put: #(	8r071 	8r071 	8r071 	8r071 	8r071);
		at: 'ntilde'			put: #(	nil		8r226 	8r361 	8r361 	8r361);
		at: 'numbersign'		put: #(	8r043 	8r043 	8r043 	8r043 	8r043);
		at: 'o'				put: #(	8r157 	8r157 	8r157 	8r157 	8r157);
		at: 'oacute'			put: #(	nil		8r227 	8r363 	8r363 	8r363);
		at: 'ocircumflex'		put: #(	nil		8r231 	8r364 	8r364 	8r364);
		at: 'odieresis'		put: #(	nil		8r232 	8r366 	8r366 	8r366);
		at: 'oe'				put: #(	8r372 	8r317 	8r234 	8r234 	16r153);
		at: 'ogonek'			put: #(	8r316 	8r376 	nil 	 	8r035 	16r2DB);
		at: 'ograve'			put: #(	nil		8r230 	8r362 	8r362 	8r362);
		at: 'one'				put: #(	8r061 	8r061 	8r061 	8r061 	8r061);
		at: 'onehalf'			put: #(	nil		nil 	 	8r275 	8r275 	8r275);
		at: 'onequarter'		put: #(	nil		nil 	 	8r274 	8r274 	8r274);
		at: 'onesuperior'		put: #(	nil		nil 	 	8r271 	8r271 	8r271);
		at: 'ordfeminine'		put: #(	8r343 	8r273 	8r252 	8r252 	8r252);
		at: 'ordmasculine'	put: #(	8r353 	8r274 	8r272 	8r272 	8r272);
		at: 'oslash'			put: #(	8r371 	8r277 	8r370 	8r370 	8r370);
		at: 'otilde'			put: #(	nil		8r233 	8r365 	8r365 	8r365);
		at: 'p'				put: #(	8r160 	8r160 	8r160 	8r160 	8r160);
		at: 'paragraph'		put: #(	8r266 	8r246 	8r266 	8r266 	8r266);
		at: 'parenleft'		put: #(	8r050 	8r050 	8r050 	8r050 	8r050);
		at: 'parenright'		put: #(	8r051 	8r051 	8r051 	8r051 	8r051);
		at: 'percent'			put: #(	8r045 	8r045 	8r045 	8r045 	8r045);
		at: 'period'			put: #(	8r056 	8r056 	8r056 	8r056 	8r056);
		at: 'periodcentered'	put: #(	8r264 	8r341 	8r267 	8r267 	8r267);
		at: 'perthousand'		put: #(	8r275 	8r344 	8r211 	8r213 	16r2030);
		at: 'plus'				put: #(	8r053 	8r053 	8r053 	8r053 	8r053);
		at: 'plusminus'		put: #(	nil 	 	8r261 	8r261 	8r261 	8r261);
		at: 'q'				put: #(	8r161 	8r161 	8r161 	8r161 	8r161);
		at: 'question'		put: #(	8r077 	8r077 	8r077 	8r077 	8r077);
		at: 'questiondown'	put: #(	8r277 	8r300 	8r277 	8r277 	8r277);
		at: 'quotedbl'		put: #(	8r042 	8r042 	8r042 	8r042 	8r042);
		at: 'quotedblbase'	put: #(	8r271 	8r343 	8r204 	8r214 	16r201E);
		at: 'quotedblleft'		put: #(	8r252 	8r322 	8r223 	8r215 	16r201C);
		at: 'quotedblright'	put: #(	8r272 	8r323 	8r224 	8r216 	16r201D);
		at: 'quoteleft'		put: #(	8r140 	8r324 	8r221 	8r217 	16r2018);
		at: 'quoteright'		put: #(	8r047 	8r325 	8r222 	8r220 	16r2019);
		at: 'quotesinglbase'	put: #(	8r270 	8r342 	8r202 	8r221 	16r201A);
		at: 'quotesingle'		put: #(	8r251 	8r047 	8r047 	8r047 	8r047);
		at: 'r'				put: #(	8r162 	8r162 	8r162 	8r162 	8r162);
		at: 'registered'		put: #(	nil 	 	8r250 	8r256 	8r256 	8r256);
		at: 'ring'				put: #(	8r312 	8r373 	nil 	 	8r036 	16r2DA);
		at: 's'				put: #(	8r163 	8r163 	8r163 	8r163 	8r163);
		at: 'scaron'			put: #(	nil		nil 	 	8r232 	8r235 	16r161);
		at: 'section'			put: #(	8r247 	8r244 	8r247 	8r247 	8r247);
		at: 'semicolon'		put: #(	8r073 	8r073 	8r073 	8r073 	8r073);
		at: 'seven'			put: #(	8r067 	8r067 	8r067 	8r067 	8r067);
		at: 'six'				put: #(	8r066 	8r066 	8r066 	8r066 	8r066);
		at: 'slash'			put: #(	8r057 	8r057 	8r057 	8r057 	8r057);
		at: 'space'			put: #(	8r040 	8r040 	8r040 	8r040 	8r040);
		at: 'sterling'			put: #(	8r243 	8r243 	8r243 	8r243 	8r243);
		at: 't'				put: #(	8r164 	8r164 	8r164 	8r164 	8r164);
		at: 'thorn'			put: #(	nil		nil 	 	8r376 	8r376 	8r376);
		at: 'three'			put: #(	8r063 	8r063 	8r063 	8r063 	8r063);
		at: 'threequarters'	put: #(	nil		nil 	 	8r276 	8r276 	8r276);
		at: 'threesuperior'	put: #(	nil		nil 	 	8r263 	8r263 	8r263);
		at: 'tilde'				put: #(	8r304 	8r367 	8r230 	8r037 	16r2DC);
		at: 'trademark'		put: #(	nil 	 	8r252 	8r231 	8r222 	16r2122);
		at: 'two'				put: #(	8r062 	8r062 	8r062 	8r062 	8r062);
		at: 'twosuperior'	put: #(	nil		nil 	 	8r262 	8r262 	8r262);
		at: 'u'				put: #(	8r165 	8r165 	8r165 	8r165 	8r165);
		at: 'uacute'			put: #(	nil		8r234 	8r372 	8r372 	8r372);
		at: 'ucircumflex'		put: #(	nil		8r236 	8r373 	8r373 	8r373);
		at: 'udieresis'		put: #(	nil		8r237 	8r374 	8r374 	8r374);
		at: 'ugrave'			put: #(	nil		8r235 	8r371 	8r371 	8r371);
		at: 'underscore'		put: #(	8r137 	8r137 	8r137 	8r137 	8r137);
		at: 'v'				put: #(	8r166 	8r166 	8r166 	8r166 	8r166);
		at: 'w'				put: #(	8r167 	8r167 	8r167 	8r167 	8r167);
		at: 'x'				put: #(	8r170 	8r170 	8r170 	8r170 	8r170);
		at: 'y'				put: #(	8r171 	8r171 	8r171 	8r171 	8r171);
		at: 'yacute'			put: #(	nil		nil 	 	8r375 	8r375 	8r375);
		at: 'ydieresis'		put: #(	nil		8r330 	8r377 	8r377 	8r377);
		at: 'yen'				put: #(	8r245 	8r264 	8r245 	8r245 	8r245);
		at: 'z'				put: #(	8r172 	8r172 	8r172 	8r172 	8r172);
		at: 'zcaron'			put: #(	nil		nil 	 	8r236 	8r236 	16r17E);
		at: 'zero'			put: #(	8r060 	8r060 	8r060 	8r060 	8r060);
	"extra from the footnotes - the names are not official"
		at: 'softhyphen'		put: #(	nil 	 	nil 	 	8r255 	nil 	 	8r255);
		at: 'nonbreakspace'	put: #(	nil 	 	8r312 	8r240 	nil 	 	8r240);
	"non printing ASCII characters"
		at: 'tab'				put: #(	8r011 	8r011 	8r011 	8r011 	8r011);
		at: 'line feed'			put: #(	8r012 	8r012 	8r012 	8r012 	8r012);
		at: 'carriage return'	put: #(	8r015 	8r015 	8r015 	8r015 	8r015);
		yourself.
	^dict
%
classmethod: PDF
encoderAt: aSymbol
	aSymbol = #WinAnsiEncoding ifTrue: [
		^self winAnsiEncoder].
	aSymbol = #MacRomanEncoding ifTrue: [
		^self macRomanEncoder].
	^nil
%
classmethod: PDF
encoderNamed: nameSymbol at: column
	| map |
	map := WordArray new: 256 withAll: Character illegalCode.
	self d2LatinCharacterSetAndEncodings do: [:array |
		| charsetCode character |
		charsetCode := array at: column.
		character := array at: 5.
		charsetCode ifNotNil: [
			(map at: charsetCode + 1) = Character illegalCode ifFalse: [
				self error: 'double encoding, please check the table'].
			map at: charsetCode + 1 put: character]].
	^CharacterMap named: nameSymbol withCodes: map
%
classmethod: PDF
macRomanEncoder
	"<ByteCharacterEncoder>
Mac OS standard encoding for Latin text in Western writing systems. 
Conforming readers shall have a predefined encoding named MacRomanEncoding that may be used with both Type 1 and TrueType fonts."

	^MacRomanEncoder ifNil: [MacRomanEncoder := self encoderNamed: #MacRoman at: 2]
%
classmethod: PDF
pdfDocEncoder
	"<ByteCharacterEncoder>
Encoding for text strings in a PDF document outside the documentâs content streams.
This is one of two encodings (the other being Unicode) that may be used to represent text strings.
PDF does not have a predefined encoding named PDFDocEncoding; it is not customary to use this encoding to show text from fonts."

	^PDFDocEncoder ifNil: [PDFDocEncoder := self encoderNamed: #PDFDoc at: 4]
%
classmethod: PDF
standardEncoder
	"<ByteCharacterEncoder>
Adobe standard Latin-text encoding. 
This is the built-in encoding defined in Type 1 Latin-text font programs (but generally not in TrueType font programs). 
Conforming readers shall not have a predefined encoding named StandardEncoding. 
However, it is necessary to describe this encoding, since a fontâs built-in encoding can be used as the base encoding from which differences may be specified in an encoding dictionary."

	^StandardEncoder ifNil: [StandardEncoder := self encoderNamed: #Standard at: 1]
%
classmethod: PDF
winAnsiEncoder
	"<CharacterMap>
Windows Code Page 1252, often called the âWindows ANSIâ encoding.
This is the standard Windows encoding for Latin text in Western writing systems.
Conforming readers shall have a predefined encoding named WinAnsiEncoding that may be used with both Type 1 and TrueType fonts."

	^WinAnsiEncoder ifNil: [WinAnsiEncoder := self encoderNamed: #WinAnsi at: 3]
%
category: 'instance creation'
classmethod: PDF
new
	self shouldNotImplement
%
category: 'encoding'
classmethod: PDFEncoder
decoded: aString
	"<ByteString>"

	^self new decoded: aString
%
classmethod: PDFEncoder
encoded: aString
	"<ByteArray>"

	^self new encoded: aString
%
category: 'instance creation'
classmethod: PDFEncoder
asEncoder
	^self new
%
category: 'reading'
method: PDFEncoder
decoded: aString
	"<ByteString>"

	| wst |
	stream := aString readStream.
	wst := String new writeStream.
	[stream atEnd] whileFalse: [
		self nextCharacter ifNotNil: [:character | wst nextPut: character]].
	^wst contents
%
method: PDFEncoder
integerFrom: aString radix: anInteger
	"<Integer>"

	^42 class readFrom: aString base: anInteger
%
method: PDFEncoder
nextCharacter
	"<Character | nil>
	read a string character from aStream.
	Answer the equivalent PDF character"

	self subclassResponsibility
%
category: 'writing'
method: PDFEncoder
encoded: aString
	"<ByteArray>"

	self setupWriteStreamFor: aString.
	aString do: [:character | self nextPutCharacter: character].
	^stream contents
%
method: PDFEncoder
nextPut: aCharacter
	"Encode aCharacter and write it to the stream."

	self subclassResponsibility
%
method: PDFEncoder
nextPutCharacter: aCharacter
	aCharacter == Character cr ifTrue: [
		^self nextPut: Character lf].
	self nextPut: aCharacter
%
method: PDFEncoder
setupWriteStreamFor: aString
	stream := ByteArray new writeStream
%
category: 'accessing'
method: StringEncoder
quoteParenthesis
	^quoteParenthesis ifNil: [false]
%
method: StringEncoder
quoteParenthesis: aBoolean
	quoteParenthesis := aBoolean
%
category: 'reading'
method: StringEncoder
characterFormOctal: octalString
	"<Character>"

	^(self integerFrom: octalString radix: 8) asCharacter
%
method: StringEncoder
nextCharacter
	| character |
	character := stream next.
	character ifNil: [
		^nil].
	character == $\ ifTrue: [
		^self nextQuotedCharacterFrom: stream].
	^character
%
method: StringEncoder
nextOctalCharacterWith: firstDigit from: aStream
	| secondDigit |
	(aStream peek ifNil: [false] ifNotNil: [:c | c isDigit]) ifFalse: [
		^self characterFormOctal: (String with: firstDigit)].
	secondDigit := aStream next.
	(aStream peek ifNil: [false] ifNotNil: [:c | c isDigit]) ifFalse: [
		^self characterFormOctal: (String
			with: firstDigit
			with: secondDigit)].
	^self characterFormOctal: (String
		with: firstDigit
		with: secondDigit
		with: aStream next)
%
method: StringEncoder
nextQuotedCharacterFrom: aStream
	"we just read a quote (\). Decifer the following"

	| character |
	character := aStream next.
	character == Character cr ifTrue: [
		^nil].
	character == Character lf ifTrue: [
		^nil].
	character == $n ifTrue: [
		^Character lf].
	character == $r ifTrue: [
		^Character lf].
	character == $t ifTrue: [
		^Character tab].
	character == $b ifTrue: [
		^Character backspace].
	character == $f ifTrue: [
		^Character newPage].
	('()\' includes: character) ifTrue: [
		^character].
	character isDigit ifTrue: [
		^self nextOctalCharacterWith: character from: aStream].
	"ignore backslash without known directive"
	aStream skip: -1.
	^nil
%
category: 'testing'
method: StringEncoder
hasUnbalancedParenthesis: aString
	| count rst |
	count := 0.
	rst := aString readStream.
	[rst atEnd] whileFalse: [
		| char |
		char := rst next.
		char = $( ifTrue: [
			count := count + 1].
		char = $) ifTrue: [
			count := count - 1.
			count negative ifTrue: [
				^true]]].
	^count isZero not
%
method: StringEncoder
shouldQuote: aCharacter
	^aCharacter = $\ or: [
	self quoteParenthesis and: [
	'()' includes: aCharacter]]
%
category: 'writing'
method: StringEncoder
nextPut: aCharacter
	"put the character equivalent to the PDF aCharacter onto aStream"

	| i |
	i := aCharacter asInteger.
	(i between: 32 and: 127) ifTrue: [
		(self shouldQuote: aCharacter) ifTrue: [
			stream nextPut: $\ asInteger].
		^stream nextPut: i].
	(#(8 9 10 12) includes: i) ifTrue: [
		^stream nextPut: i].
	i = 13 ifTrue: [
		^stream nextPut: 10].
	self putOctal: i
%
method: StringEncoder
noEncodingFor: aCharacter
	(OutOfRange new)
		messageText: 'No character available for character value ' , aCharacter asInteger printString;
		arg: aCharacter;
		signal.
	^Character illegalCode asCharacter
%
method: StringEncoder
putOctal: integer
	| numberString |
	(integer between: 0 and: 255) ifFalse: [
		^self noEncodingFor: integer asCharacter].
	numberString := integer printStringRadix: 8.
	stream nextPut: $\ asInteger.
	3 - numberString size timesRepeat: [stream nextPut: $0 asInteger].
	stream nextPutAll: numberString asByteArray
%
method: StringEncoder
setupWriteStreamFor: aString
	super setupWriteStreamFor: aString.
	self quoteParenthesis: (self hasUnbalancedParenthesis: aString)
%
category: 'printing'
method: Unsupported
printOn: stream
	stream nextPutAll: self description
%
category: 'instance creation'
classmethod: Version
major: majorInteger minor: minorInteger
	| inst |
	inst := self new.
	inst initializeMajor: majorInteger minor: minorInteger.
	^inst
%
category: 'instances'
classmethod: Version
pdf1_0
	^self major: 1 minor: 0
%
classmethod: Version
pdf1_1
	^self major: 1 minor: 1
%
classmethod: Version
pdf1_2
	^self major: 1 minor: 2
%
classmethod: Version
pdf1_3
	^self major: 1 minor: 3
%
classmethod: Version
pdf1_4
	^self major: 1 minor: 4
%
classmethod: Version
pdf1_5
	^self major: 1 minor: 5
%
classmethod: Version
pdf1_6
	^self major: 1 minor: 6
%
classmethod: Version
pdf1_7
	^self major: 1 minor: 7
%
classmethod: Version
pdf1_8
	^self major: 1 minor: 8
%
classmethod: Version
pdf2_0
	^self major: 2 minor: 0
%
category: 'services'
classmethod: Version
highestVersionIn: someReferences
	"<Version>
	the highest version of the objects references by someReferences"

	^someReferences inject: self pdf1_0 into: [:highestVersion :reference |
		highestVersion max: reference referent pdfVersion]
%
category: 'accessing'
method: Version
major
	"<Integer>"

	^major
%
method: Version
minor
	"<Integer>"

	^minor
%
category: 'comparing'
method: Version
< aVersion
	self major = aVersion major ifTrue: [
		^self minor < aVersion minor].
	^self major < aVersion major
%
method: Version
= aVersion
	^self class == aVersion class and: [
	self major = aVersion major and: [
	self minor = aVersion minor]]
%
method: Version
hash
	^(self major bitShift: 10) bitXor: self minor
%
category: 'initialize-release'
method: Version
initializeMajor: majorInteger minor: minorInteger
	major := majorInteger.
	minor := minorInteger.
	self beImmutable
%
category: 'printing'
method: Version
printOn: stream
	stream
		nextPutAll: self class name asString;
		nextPutAll: ' major: ';
		nextPutAll: self major printString;
		nextPutAll: ' minor: ';
		nextPutAll: self minor printString
%
category: 'writing'
method: Version
numberString
	"<String>"

	^self major printString , '.' , self minor printString
%
method: Version
writePDFOn: aWriter indent: anInteger
	aWriter nextPutAll: ('PDF-' , self numberString) asByteArray
%
category: 'instance creation'
classmethod: Writer
new
	^self on: ByteArray new
%
category: 'character writing'
method: Writer
cr
	self nextPutByte: 10
%
method: Writer
space
	self nextPutByte: 32
%
method: Writer
tab
	self nextPutByte: 9
%
category: 'testing'
method: Writer
hasUnbalancedParenthesis: aPDFString
	| count rst |
	count := 0.
	rst := aPDFString content asString readStream.
	[rst atEnd] whileFalse: [
		| char |
		char := rst next.
		char = $( ifTrue: [
			count := count + 1].
		char = $) ifTrue: [
			count := count - 1.
			count negative ifTrue: [
				^true]]].
	^count isZero not
%
method: Writer
nextPutByte: aByte
	^self nextPut: aByte
%
method: Writer
nextPutCharacter: aCharacter
	self nextPutAll: (String with: aCharacter) convertToByteArray.
	^aCharacter
%
category: 'writing'
method: Writer
nextPutHexString: aPDFString
	self nextPutByte: $< asInteger.
	self nextPutAll: (HexStringEncoder encoded: aPDFString content asString).
	self nextPutByte: $> asInteger
%
method: Writer
nextPutName: aPDFName
	self nextPutByte: $/ asInteger.
	self nextPutNameWithoutSolidus: aPDFName
%
method: Writer
nextPutNameWithoutSolidus: aPDFName
	(aPDFName content isNil or: [
	aPDFName content isEmpty]) ifTrue: [
			^self].
	self nextPutAll: (NameEncoder encoded: aPDFName content asString)
%
method: Writer
nextPutString: aPDFString
	self nextPutByte: $( asInteger.
	aPDFString isEmpty ifFalse: [
		self nextPutAll: (StringEncoder encoded: aPDFString content asString)].
	self nextPutByte: $) asInteger
%
method: Writer
writeCrossReferenceSection: aCrossReferenceSection
	self
		cr;
		nextPutAll: 'xref' asByteArray;
		cr.
	aCrossReferenceSection writePDFOn: self indent: 0
%
method: Writer
writeStartxref: anInteger
	"write the last lines of the PDF with the start position of the reference table"

	self
		cr;
		nextPutAll: 'startxref' asByteArray;
		cr;
		nextPutAll: anInteger printString asByteArray;
		cr;
		nextPutAll: '%%EOF' asByteArray
%
method: Writer
writeTrailer: aTrailer
	self
		cr;
		nextPutAll: 'trailer' asByteArray;
		cr.
	aTrailer writePDFOn: self indent: 0
%
method: Writer
writeVersionHeader: aVersion
	"write the first 2 lines of a PDF file with the PDF version of the objects.
	write binary data in the second line to cue readers that the file is binary."

	self nextPutByte: $% asInteger.
	aVersion writePDFOn: self indent: 0.
	self
		cr;
		nextPutByte: $% asInteger;
		nextPutAll: #[226 227 207 211];
		cr
%
category: 'accessing'
method: Writer
position
	^self positionA
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	PDFtalkLibrary at: #PDF put: [PDFtalk at: #PDF] value.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Typing'.
	dict at: #comment put: 'PDF Dictionary and Stream objects as defined in PDF 32000_2008.pdf pp. 18.'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Typing'.
	dict at: #storeVersion put: '2.5.0.3'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class AttributeType
DoIt
Object
	subclass: 'AttributeType'
	instVarNames: #(type)
	classVars: #(TypeClasses)
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	AttributeType category: 'PDFtalk Typing'.
	AttributeType comment: 'A type specified by a pragma in an attribute method.

Used for type checking attribute values and their specialization.'.
	AttributeType namespacePath: #(#PDFtalk).
%
# Define class DictionaryType
DoIt
AttributeType
	subclass: 'DictionaryType'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	DictionaryType category: 'PDFtalk Typing'.
	DictionaryType comment: 'This type matches a uniform dictionary of attribute values of the same type.

The values of the dictionary are checked and specialized with the type
'.
	DictionaryType namespacePath: #(#PDFtalk).
%
# Define class PDFTypeDefinition
DoIt
Value
	subclass: 'PDFTypeDefinition'
	instVarNames: #(name supertype version section documentation)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PDFTypeDefinition category: 'PDFtalk Typing'.
	PDFTypeDefinition comment: 'The definition of a PDF type represented by a Smalltalk class

A Smalltalk class representing a PDF type declares the type with an object of this class.
The type definition is accessed by the #pdfTypeDefinition class method which returns a PDFTypeDefinition instance.

The PDF type hierarchy is a tree similar to but independent of the Smalltalk class hierarchy.'.
	PDFTypeDefinition namespacePath: #(#PDFtalk).
%
# Define class NameTreeType
DoIt
DictionaryType
	subclass: 'NameTreeType'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NameTreeType category: 'PDFtalk Typing'.
	NameTreeType comment: 'This type matches a NameTree with values of a specific type.

The elements of the NameTree are checked and specialized with the type
'.
	NameTreeType namespacePath: #(#PDFtalk).
%
# Define class UndefinedType
DoIt
AttributeType
	subclass: 'UndefinedType'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	UndefinedType category: 'PDFtalk Typing'.
	UndefinedType comment: 'A type for anything unrecognized'.
	UndefinedType namespacePath: #(#PDFtalk).
%
# Define class ObjectType
DoIt
AttributeType
	subclass: 'ObjectType'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ObjectType category: 'PDFtalk Typing'.
	ObjectType comment: 'This type matches concrete types of attribute values.

#subsumes: aPDFObject answers:

true, if the type of aPDFObject is the identical to the type of the receiver
true, if the type is a subtype of the receiver''s type'.
	ObjectType namespacePath: #(#PDFtalk).
%
# Define class NameType
DoIt
AttributeType
	subclass: 'NameType'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NameType category: 'PDFtalk Typing'.
	NameType comment: 'This type matches a specific name

'.
	NameType namespacePath: #(#PDFtalk).
%
# Define class ErrorWrapper
DoIt
Object
	subclass: 'ErrorWrapper'
	instVarNames: #(myObject types)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ErrorWrapper category: 'PDFtalk Typing'.
	ErrorWrapper comment: 'Wrapper around an error with the wrong PDF object and its types'.
	ErrorWrapper namespacePath: #(#PDFtalk).
%
# Define class MissingObject
DoIt
ErrorWrapper
	subclass: 'MissingObject'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	MissingObject category: 'PDFtalk Typing'.
	MissingObject comment: 'A reference is pointing to a missing object'.
	MissingObject namespacePath: #(#PDFtalk).
%
# Define class TypeMismatch
DoIt
ErrorWrapper
	subclass: 'TypeMismatch'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TypeMismatch category: 'PDFtalk Typing'.
	TypeMismatch comment: 'TypeMismatch is a wrapper around a PDF object with the wrong type'.
	TypeMismatch namespacePath: #(#PDFtalk).
%
# Define class Objecttype
DoIt
Object
	subclass: 'Objecttype'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Objecttype category: 'PDFtalk Typing'.
	Objecttype comment: 'Subclasses stand for abstract PDF types which have specializations somewhere in the class hierarchy
'.
	Objecttype namespacePath: #(#PDFtalk).
%
# Define class DirectType
DoIt
AttributeType
	subclass: 'DirectType'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	DirectType category: 'PDFtalk Typing'.
	DirectType comment: 'This type matches a concrete PDF object - no Reference.'.
	DirectType namespacePath: #(#PDFtalk).
%
# Define class Type
DoIt
Object
	subclass: 'Type'
	instVarNames: #(typeDefinition implementingClass supertype subtypes)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Type category: 'PDFtalk Typing'.
	Type comment: 'The concrete type object used as node in the PDF type hierarchy

Includes the PDFTypeDefinition, the implementing Smalltalk class and the subtypes which are collected when the hierarchy is assembled.

Type should be isomorph to Class in order to show the hierarchy in the browser.'.
	Type namespacePath: #(#PDFtalk).
%
# Define class IndirectType
DoIt
AttributeType
	subclass: 'IndirectType'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	IndirectType category: 'PDFtalk Typing'.
	IndirectType comment: 'This type matches a Reference to a PDF object - the object cannot be direct.'.
	IndirectType namespacePath: #(#PDFtalk).
%
# Define class ArrayType
DoIt
AttributeType
	subclass: 'ArrayType'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ArrayType category: 'PDFtalk Typing'.
	ArrayType comment: 'This type matches a uniform array of attribute values of the same type.

The elements of the array are checked and specialized with the type'.
	ArrayType namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| package policy |
	package := GsPackageLibrary createPackageNamed: #SessionMethods.
	GsPackageLibrary installPackage: package.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: FileInSymbolDictionary.
	policy externalSymbolList: (GsSession currentSession symbolList asArray copyWithout: FileInSymbolDictionary).
	policy enable.
%
category: '*PDFtalk Typing-finding'
classmethod: Pragma
allInMethod: aMethod
	^aMethod pragmas
%
category: '*PDFtalk Typing-accessing'
classmethod: Object
pdfTypeDefinition
	"<PDFtalk.Type>"

	^(PDFtalk at: #PDFTypeDefinition) new
%
category: '*PDFtalk Typing-converting'
classmethod: Object
newPDFTypeOfClass
	"<PDFtalk.Type>
	returns a new Type instance - only used for constructing the type hierarchy"

	^(PDFtalk at: #Type) newFromClass: self
%
classmethod: Object
pdfType
	"<PDFtalk.Type | nil>"

	^(self class whichClassIncludesSelector: #pdfTypeDefinition) ifNotNil: [:metaclass | metaclass instanceBehavior pdfTypeOfClass]
%
classmethod: Object
pdfTypeOfClass
	"<PDFtalk.Type>"

	^PDF typeAt: self pdfTypeDefinition name
%
category: '*PDFtalk Typing-testing'
classmethod: Object
isPDFType
	"<Boolean>
	true if the receiver represents a PDF type"

	^self class includesSelector: #pdfTypeDefinition
%
category: '*PDFtalk Typing-accessing'
method: Object
pdfType
	"<PDFtalk.Type | nil>"
	
	^self class pdfType
%
DoIt
	| dict policy |
	dict := SymbolDictionary new.
	dict at: #UNWRITABLE put: dict.
	dict immediateInvariant.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: dict.
	policy externalSymbolList: Array new.
	policy enable.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
method: ArrayType
name
	^'[' , self type name asString , ']'
%
category: 'testing'
method: ArrayType
isForArray
	^true
%
method: ArrayType
specifiesArray: aPDFArray
	"elements can be direct or indirect"

	| elementType |
	elementType := self asObjectType.
	^aPDFArray content allSatisfy: [:element | element compliesTo: elementType]
%
method: ArrayType
specifiesReference: aPDFReference
	^aPDFReference referent compliesTo: self
%
category: 'typing'
method: ArrayType
specializedArray: aPDFArray
	| elementType |
	elementType := self asObjectType.
	^(aPDFArray content collect: [:element |
		(element asType: elementType) ifNil: [
			^nil]]) asPDF
%
category: 'accessing'
classmethod: AttributeType
pragmaKeywords
	"<Set of: Symbol>"

	^self typeClassesAtKey keys
%
classmethod: AttributeType
typeClassAt: aPragmaKeywod
	"the Type class corresponding to the pragma keyword"

	^self typeClassesAtKey at: aPragmaKeywod ifAbsent: [UndefinedType]
%
classmethod: AttributeType
typeClassesAtKey
	"the key is the pragma keyword used in attributes. The value is the specific Type class"

	^TypeClasses ifNil: [
		| dict |
		dict := IdentityDictionary new.
		dict at: #type: put: ObjectType.
		dict at: #typeArrayOf: put: ArrayType.
		dict at: #typeDictionaryOf: put: DictionaryType.
		dict at: #typeName: put: NameType.
		dict at: #typeNameTreeOf: put: NameTreeType.
		dict at: #typeIndirect: put: IndirectType.
		dict at: #typeDirect: put: DirectType.
		TypeClasses := dict]
%
category: 'instance creation'
classmethod: AttributeType
allInMethod: aCompiledMethod
	"<Array of: AttributeType>
	the declared types in aCompiledMethod"

	| pragmas keywords typePragmas |
	pragmas := Pragma allInMethod: aCompiledMethod.
	keywords := self pragmaKeywords.
	typePragmas := pragmas select: [:pragma | 
		keywords includes: pragma keyword].
	^typePragmas collect: [:pragma |
		(self typeClassAt: pragma keyword) onSymbol: pragma arguments first]
%
classmethod: AttributeType
onSymbol: aSymbol
	"<AttributeType>"
	"cheating if there is no type named aSymbol: 
	remembering the missing type name as type.
	Beware when using instances of UndefinedType"

	(PDF typeAt: aSymbol) ifNotNil: [:type | ^self onType: type].
	^UndefinedType onType: aSymbol
%
classmethod: AttributeType
onType: aPDFType

	| inst |
	inst := self new.
	inst initializeType: aPDFType.
	^inst
%
category: 'accessing'
method: AttributeType
name
	"<String>"

	^self subclassResponsibility
%
method: AttributeType
type
	"<Type>
	the object type"

	^type
%
category: 'comparing'
method: AttributeType
= otherAttributeType
	^self class = otherAttributeType class and: [
	self type = otherAttributeType type]
%
method: AttributeType
hash
	^self type hash
%
method: AttributeType
isMoreSpecificThan: anAttributeType
	self class = anAttributeType class ifFalse: [
		^false].
	^self type isSubtypeOf: anAttributeType type
%
category: 'converting'
method: AttributeType
asDirectType
	"<Type>
	derived type suitable for the value of a reference"

	^self
%
method: AttributeType
asIndirectType
	"<Type>
	derived type suitable for the value of a reference"

	^IndirectType onType: self type
%
method: AttributeType
asObjectType
	"<Type>
	derived type suitable for direct and indirect values"

	^ObjectType onType: self type
%
category: 'initialize-release'
method: AttributeType
initializeType: aPDFType
	type := aPDFType
%
category: 'printing'
method: AttributeType
printOn: stream
	stream nextPutAll: self class name asString, ' onSymbol: ', self type name printString
%
category: 'testing'
method: AttributeType
appliesToReference
	"is the type applicable to references?"

	^true
%
method: AttributeType
isDirectType
	^false
%
method: AttributeType
isForArray
	^false
%
method: AttributeType
isForDictionary
	^false
%
method: AttributeType
isIndirect
	^false
%
method: AttributeType
specifiesArray: aPDFArray
	"<Boolean>
	true, if the argument is compatible with the receiver"

	^false
%
method: AttributeType
specifiesDictionary: aPDFDictionary
	"<Boolean>
	true, if the argument is compatible with the receiver"

	^false
%
method: AttributeType
specifiesObject: aPDFObject
	"<Boolean>
	true, if the argument is compatible with the receiver"

	^false
%
method: AttributeType
specifiesReference
	^false
%
method: AttributeType
specifiesReference: aPDFReference
	"<Boolean>
	true, if the argument is compatible with the receiver"

	^false
%
category: 'typing'
method: AttributeType
specializedArray: aPDFArray
	"<PDFObject | nil>
	exemplar of #type with the content of aPDFArray
	or nil, if #type is no subtype of aPDFArray type"

	^self specializedObject: aPDFArray
%
method: AttributeType
specializedDictionary: aPDFDictionary
	"<PDFObject | nil>
	exemplar of #type with the content of aPDFDictionary
	or nil, if #type is no subtype of aPDFDictionary type"

	^self specializedObject: aPDFDictionary
%
method: AttributeType
specializedObject: aPDFObject
	"<PDFObject | nil>
	instance of #type with the content of aPDFObject
	or nil, if #type is no subclass of aPDFObject class"

	^nil
%
method: AttributeType
specializedReference: aReference
	"<Reference | nil>"

	^nil
%
category: 'accessing'
method: DictionaryType
name
	^'<<' , self type name asString , '>>'
%
category: 'testing'
method: DictionaryType
isForDictionary
	^true
%
method: DictionaryType
specifiesDictionary: aPDFDictionary
	"elements can be direct or indirect"

	| elementType |
	elementType := self asObjectType.
	^aPDFDictionary values allSatisfy: [:element | element compliesTo: elementType]
%
method: DictionaryType
specifiesReference: aPDFReference
	^aPDFReference referent compliesTo: self
%
category: 'typing'
method: DictionaryType
specializedDictionary: aPDFDictionary
	| elementType dict |
	elementType := self asObjectType.
	dict := PDF Dictionary new.
	aPDFDictionary keys do: [:key |
		dict
			at: key
			put: (((aPDFDictionary at: key) asType: elementType) ifNil: [
				^nil])].
	^dict
%
method: DictionaryType
typedDictionary: aPDFDictionary
	"<PDF.Dictionary>
	a copy of aPDFDictionary with the values specialized according to the pdfType"

	| contentCopy |
	contentCopy := Valuemap new: aPDFDictionary size.
	aPDFDictionary content keysAndValuesDo: [:key :value |
		contentCopy at: key put: (value typed: (Array with: self asObjectType))].
	^aPDFDictionary class on: contentCopy
%
category: 'accessing'
method: DirectType
name
	^'!', self type name asString
%
category: 'testing'
method: DirectType
appliesToReference
	^false
%
method: DirectType
isDirectType
	^true
%
method: DirectType
specifiesArray: aPDFArray
	^self type isExemplar: aPDFArray
%
method: DirectType
specifiesDictionary: aPDFDictionary
	^self type isExemplar: aPDFDictionary
%
method: DirectType
specifiesObject: aPDFObject
	^self type isExemplar: aPDFObject
%
method: DirectType
specifiesReference
	^self type name = #Reference
%
category: 'typing'
method: DirectType
specializedObject: aPDFObject
	^self type specialized: aPDFObject
%
category: 'accessing'
method: ErrorWrapper
myObject
	^myObject
%
method: ErrorWrapper
types
	"<Array of: AttributeType>"

	^types
%
method: ErrorWrapper
typesString
	"<String>"

	| wst |
	wst := String new writeStream.
	self types do: [:type | wst nextPutAll: type name] separatedBy: [
		wst nextPutAll: '|'].
	^wst contents
%
category: 'error handling'
method: ErrorWrapper
errorClass
	"<Error class>"

	^self subclassResponsibility
%
method: ErrorWrapper
signalError
	| error |
	error := self errorClass new.
	error arg: self.
	error signal
%
category: 'initialize-release'
method: ErrorWrapper
initializeObject: aPDFObject types: someTypes
	myObject := aPDFObject.
	types := someTypes
%
category: 'typing'
method: ErrorWrapper
typed: listOfAttributeTypes
	^self
%
category: 'accessing'
method: IndirectType
name
	^'Â»', self type name asString
%
category: 'converting'
method: IndirectType
asDirectType
	^DirectType onType: self type
%
method: IndirectType
asIndirectType
	^self
%
category: 'testing'
method: IndirectType
isIndirect
	^true
%
method: IndirectType
specifiesReference: aPDFReference
	^aPDFReference referent compliesTo: self asDirectType
%
category: 'typing'
method: IndirectType
specializedReference: aReference
	^(aReference referent asType: self asDirectType) ifNotNil: [:specialized |
		aReference copyWithReferent: specialized]
%
category: 'instance creation'
classmethod: MissingObject
at: anObjectId expected: someTypes
	| inst |
	inst := self new.
	inst initializeObject: anObjectId types: someTypes.
	inst signalError.
	^inst
%
category: 'error handling'
method: MissingObject
errorClass
	^MissingObjectError
%
category: 'printing'
method: MissingObject
printOn: stream
	stream
		nextPutAll: self class name;
		nextPut: $(;
		nextPutAll: myObject printString;
		nextPut: $/;
		nextPutAll: self typesString;
		nextPut: $)
%
category: 'writing'
method: MissingObject
writePDFOn: aWriter indent: anInteger
	| string |
	string := 'The original object is missing'.
	self types notEmpty ifTrue: [
		string := string, '. It should have been a ' , self typesString].
	aWriter nextPutString: string asPDF
%
category: 'accessing'
method: NameTreeType
name
	^'NameTree(' , self type name asString , ')'
%
category: 'testing'
method: NameTreeType
specifiesDictionary: aPDFDictionary

	| elementType |
	elementType := self asObjectType.
	^(aPDFDictionary elements collect: #value)
		allSatisfy: [:element | element compliesTo: elementType]
%
category: 'typing'
method: NameTreeType
typedDictionary: aPDFDictionary
	| contentCopy isValue |
	contentCopy := aPDFDictionary content copy.
	(aPDFDictionary hasKey: #Kids) ifTrue: [
		contentCopy
			at: #Kids
			put: ((aPDFDictionary at: #Kids) content collect: [:element |
				element typed: (Array with: self)]).
		^(PDF classAt: #NameTree) nodeClass on: contentCopy].
	isValue := false.
	contentCopy
		at: #Names
		put: ((aPDFDictionary at: #Names) content collect: [:element |
			| e |
			e := isValue
				ifTrue: [element typed: (Array with: self asObjectType)]
				ifFalse: [element].
			isValue := isValue not.
			e]).
	^(PDF classAt: #NameTree) leafClass on: contentCopy
%
category: 'instance creation'
classmethod: NameType
onSymbol: aSymbol
	^self onType: aSymbol
%
category: 'accessing'
method: NameType
name
	^self type asString
%
category: 'printing'
method: NameType
printOn: stream
	stream nextPutAll: self class name asString , ' onSymbol: ' , self type printString
%
category: 'testing'
method: NameType
specifiesObject: aPDFObject
	^self type asPDF = aPDFObject
%
category: 'accessing'
method: ObjectType
name
	^self type name asString
%
category: 'comparing'
method: ObjectType
= anObject
	^self class == anObject class and: [
	self type name == anObject type name]
%
method: ObjectType
hash
	^self type hash
%
category: 'converting'
method: ObjectType
asDirectType
	^DirectType onType: self type
%
category: 'testing'
method: ObjectType
specifiesArray: aPDFArray
	^self type isExemplar: aPDFArray
%
method: ObjectType
specifiesDictionary: aPDFDictionary
	^self type isExemplar: aPDFDictionary
%
method: ObjectType
specifiesObject: aPDFObject
	^self type isExemplar: aPDFObject
%
method: ObjectType
specifiesReference
	^self type name = #Reference
%
method: ObjectType
specifiesReference: aPDFReference
	^aPDFReference referent compliesTo: self asDirectType
%
category: 'typing'
method: ObjectType
specializedObject: aPDFObject
	^self type specialized: aPDFObject
%
category: 'instance creation'
classmethod: PDFTypeDefinition
name: nameSymbol supertype: supertypeSymbol version: versionArray section: sectionString documentation: documentationString
	| inst |
	inst := self new.
	inst
		initializeName: nameSymbol
		supertype: supertypeSymbol
		version: versionArray
		section: sectionString
		documentation: documentationString.
	^inst
%
category: 'instance creation optional'
classmethod: PDFTypeDefinition
name: nameSymbol supertype: supertypeSymbol section: sectionString documentation: documentationString
	^self
		name: nameSymbol
		supertype: supertypeSymbol
		version: nil
		section: sectionString
		documentation: documentationString
%
category: 'specification'
classmethod: PDFTypeDefinition
localSpecification
	<constant: #name class: #(#Symbol) comment: 'The name of the PDF type.
	It is used in the type declarations of attributes.
	The name should be identical or close to the name in the PDF specification.
	A name should begin with a capital letter.'>
	<constant: #supertype class: #(#Symbol) comment: 'The type name of the PDF supertype.
	The supertype of top level types is nil.'>
	<sequence: #version comment: 'The version in which the type was introduced in PDF.
	Array with two integers: major and minor, i.e. #(1 6) is PDF version 1.6.'>
	<constant: #section class: #(#String) comment: 'The section of the PDF specification where the type is defined.
	A string with numbers separated by a period: like ''12.5.6.19'' or ''7.3.2''.
	This allows the PDF specification to be opened on the documentation of the type.'>
	<constant: #documentation class: #(#String) comment: 'A short description of the type.
	Usually derived from the first paragraph from the PDF specification.'>
%
category: 'accessing'
method: PDFTypeDefinition
documentation
	"<ByteString>
	A short description of the type.
	Usually derived from the first paragraph from the PDF specification."

	^documentation
%
method: PDFTypeDefinition
name
	"<Symbol>
	The name of the PDF type.
	It is used in the type declarations of attributes.
	The name should be identical or close to the name in the PDF specification.
	A name should begin with a capital letter."

	^name
%
method: PDFTypeDefinition
pdfVersion
	self version isEmpty ifTrue: [
		^Version pdf1_0].
	^Version major: self version first minor: self version last
%
method: PDFTypeDefinition
section
	"<ByteString>
	The section of the PDF specification where the type is defined.
	A string with numbers separated by a period: like '12.5.6.19' or '7.3.2'.
	This allows the PDF specification to be opened on the documentation of the type."

	^section
%
method: PDFTypeDefinition
supertype
	"<Symbol>
	The type name of the PDF supertype.
	The supertype of top level types is nil."

	^supertype
%
method: PDFTypeDefinition
version
	"<Array>
	The version in which the type was introduced in PDF.
	Array with two integers: major and minor, i.e. #(1 6) is PDF version 1.6."

	^version ifNil: [#()]
%
category: 'initialize-release'
method: PDFTypeDefinition
initializeName: nameSymbol supertype: supertypeSymbol version: versionArray section: sectionString documentation: documentationString
	name := nameSymbol.
	supertype := supertypeSymbol.
	(versionArray notNil and: [
	versionArray notEmpty]) ifTrue: [
			version := (Array withAll: versionArray) beImmutable].
	section := sectionString.
	documentation := documentationString.
	self beImmutable
%
category: 'printing'
method: PDFTypeDefinition
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'name' value: self name).
	args add: (printer constant: 'supertype' value: self supertype).
	args add: (printer array: 'version' value: self version).
	args add: (printer constant: 'section' value: self section).
	args add: (printer constant: 'documentation' value: self documentation).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: Type
newFromClass: aClass
	"<PDFtalk.Type>
	returns a new Type instance - only used for constructing the type hierarchy"

	^self typeDefinition: aClass pdfTypeDefinition implementingClass: aClass
%
classmethod: Type
typeDefinition: aPDFTypeDefinition implementingClass: aClass

	| inst |
	inst := self new.
	inst initializeTypeDefinition: aPDFTypeDefinition implementingClass: aClass.
	^inst
%
category: 'accessing'
method: Type
allSubtypes
	"<SequenceableCollection of: Type>
	returns all sub types of the receiver"

	self subtypes isEmpty ifTrue: [
		^#()].
	^self subtypes inject: OrderedCollection new into: [:all :type |
		all add: type.
		all addAll: type allSubtypes.
		all]
%
method: Type
allTerminalSubtypes
	"<SequenceableCollection of: Type>
	returns all sub types of the receiver which do not have subtypes, including the receiver"

	self subtypes isEmpty ifTrue: [^Array with: self].
	^self subtypes inject: (OrderedCollection new)
		into: 
			[:all :type |
			all addAll: type allTerminalSubtypes.
			all]
%
method: Type
implementingClass
	"<Class>
	subclass of Object.
	Implements #pdfType as class method"

	^implementingClass
%
method: Type
name
	"<Symbol>"
	
	^self typeDefinition name
%
method: Type
subtypes
	"<SeqenceableCollection of: Type>"

	^subtypes ifNil: [subtypes := OrderedCollection new]
%
method: Type
supertype
	"<Type | nil>
	The PDF supertype.
	The supertype of top level types is nil."

	^supertype
%
method: Type
supertypeName
	"<Symbol | nil>
	The type name of the PDF supertype.
	The supertype of top level types is nil."

	^self typeDefinition supertype
%
method: Type
supertypes
	"<SequenceableCollection of: Type>
	The PDF supertypes.
	The supertype of top level types is nil."

	self supertype ifNotNil: [:st |
		^(Array with: st) , st supertypes].
	^#()
%
method: Type
typeDefinition
	"<PDFTypeDefinition>"

	^typeDefinition
%
method: Type
withAllSubtypes
	"<SequenceableCollection of: Type>
	returns the receiver and all sub types of the receiver"

	self subtypes isEmpty ifTrue: [
		^Array with: self].
	^self subtypes inject: (OrderedCollection with: self) into: [:all :type |
		all addAll: type withAllSubtypes.
		all]
%
category: 'comparing'
method: Type
= anObject

	^self == anObject or: 
			[self class == anObject class and: 
					[self typeDefinition = anObject typeDefinition
						and: [self implementingClass = anObject implementingClass]]]
%
method: Type
hash

	^self typeDefinition hash bitXor: self implementingClass hash
%
category: 'initialize-release'
method: Type
initializeTypeDefinition: aPDFTypeDefinition implementingClass: aClass

	typeDefinition := aPDFTypeDefinition.
	implementingClass := aClass
%
method: Type
supertype: aType

	supertype := aType.
	aType subtypes add: self
%
category: 'printing'
method: Type
printOn: stream

	stream
		nextPutAll: self name asString;
		nextPutAll: '(';
		nextPutAll: self implementingClass name asString;
		nextPutAll: ')'
%
category: 'testing'
method: Type
isExemplar: aPDFObject
	"<Boolean>
	true, iff aPDFObject is an examplar of the receiver"
	
	aPDFObject pdfType ifNotNil: [:objectType | 
		^objectType isTypeOf: self].
	^false
%
method: Type
isSubtypeOf: aType

	self supertype ifNil: [^false].		"Object does not have a supertype"
	^self supertype = aType or: [		"I am not a subtype of myself"
	self supertype isSubtypeOf: aType]
%
method: Type
isTypeOf: aType
	"true iff the receiver is aType or aType is a supertype"
	^self = aType or: [self isSubtypeOf: aType]
%
category: 'typing'
method: Type
specialized: aPDFObject
	"<PDFObject | nil>
	returns a new instance of the receiver with the contents of aPDFObject"

	| matchingTypes mostSpecialTypes |
	(aPDFObject pdfType isTypeOf: self) ifTrue: [
		^aPDFObject].
	matchingTypes := self withAllSubtypes select: [:type | aPDFObject canBeExemplarOf: type].
	matchingTypes isEmpty ifTrue: [
		^nil].
	matchingTypes size = 1 ifTrue: [
		^matchingTypes first implementingClass newFrom: aPDFObject].
	mostSpecialTypes := matchingTypes select: [:type |
		| allSubtypes |
		allSubtypes := type allSubtypes asSet.
		(matchingTypes anySatisfy: [:otherType | allSubtypes includes: otherType]) not].
	mostSpecialTypes size = 1 ifTrue: [
		^mostSpecialTypes first implementingClass newFrom: aPDFObject].
	^self error: 'more than one type is matching the object'
%
category: 'instance creation'
classmethod: TypeMismatch
for: aPDFObject expected: someTypes
	| inst |
	inst := self new.
	inst initializeObject: aPDFObject types: someTypes.
	inst signalError.
	^inst
%
category: 'accessing'
method: TypeMismatch
pdfVersion
	^myObject pdfVersion
%
category: 'error handling'
method: TypeMismatch
doesNotUnderstand: aMessage
	(myObject respondsTo: aMessage selector) ifTrue: [
		^myObject perform: aMessage selector withArguments: aMessage arguments].
	^super doesNotUnderstand: aMessage
%
method: TypeMismatch
errorClass
	^TypeError
%
category: 'printing'
method: TypeMismatch
printOn: stream
	stream
		nextPutAll: self class name;
		nextPut: $(;
		nextPutAll: (myObject pdfType ifNotNil: [:type | type name] ifNil: ['nil']);
		nextPut: $/;
		nextPutAll: self typesString;
		nextPut: $)
%
category: 'tracing'
method: TypeMismatch
copyWithNewReferencesIn: visited
	| copy |
	copy := self class new.
	copy initializeObject: (myObject copyWithNewReferencesIn: visited) types: self types.
	^copy
%
method: TypeMismatch
tracedReferences: visited do: oneArgumentBlock
	myObject tracedReferences: visited do: oneArgumentBlock
%
category: 'writing'
method: TypeMismatch
writePDFOn: aWriter indent: anInteger
	myObject writePDFOn: aWriter indent: anInteger
%
category: 'accessing'
method: UndefinedType
name
	^self type printString
%
category: 'printing'
method: UndefinedType
printOn: stream
	stream nextPutAll: self class name asString, ' onSymbol: ', self name
%
category: 'testing'
method: UndefinedType
specifiesObject: aPDFObject
	^true
%
method: UndefinedType
specifiesReference: aPDFReference
	^true
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: '*PDFtalk Typing-accessing'
classmethod: PDF
allObjectClasses
	"assumes that all subclasses are defined in namespaces PDFtalk or Globals"

	| classOrganizer |
	classOrganizer := ClassOrganizer
		pdfNewWithRoot: Object
		symbolList: (SymbolList
			with: PDFtalk
			with: Globals).
	^classOrganizer allSubclassesOf: Object
%
classmethod: PDF
newTypeHierarchy
	"<IdentityDictionary key: Symbol value: Type>"

	| typesDict |
	typesDict := self newTypesDictionary.
	typesDict values do: [:type |
		type supertypeName ifNotNil: [:supertypeName |
			| supertype |
			supertype := typesDict at: supertypeName ifAbsent: [
				^self error: 'PDF type /' , supertypeName , ' is not defined'].
			type supertype: supertype]].
	^typesDict
%
classmethod: PDF
newTypesDictionary
	"<IdentityDictionary key: Symbol value: Type>"

	| typesDict |
	typesDict := self typesDictionaryClass new.
	((self allObjectClasses select: #isPDFType) collect: #newPDFTypeOfClass) do: [:type |
		typesDict at: type name put: type].
	^typesDict
%
classmethod: PDF
pdfTypeDefinition
	"Defines the PDF type of a Smalltalk class.
	#pdfType is a special method used to construct the PDF type hierarchy.
	ALL #pdfType methods shall only construct and return a PDFType object.
	In order to do so, ALL implementers of #pdfType are collected, evaluated and sorted into the type hierarchy.
	Therefore, none of the #pdfType methods shall have any side effects.
	This allows to define a PDF object class independent of the Smalltalk class hierarchy."

	^PDFTypeDefinition
		name: #Object
		supertype: nil
		section: '7.3'
		documentation: 'PDF includes eight basic types of objects: Boolean values, Integer and Real numbers, Strings, Names, Arrays, Dictionaries, Streams, and the null object.'
%
classmethod: PDF
typeAt: aSymbol
	"<Type | nil>"

	^self types at: aSymbol ifAbsent: [nil]
%
classmethod: PDF
types
	"<IdentityDictionary key: Symbol value: Type>
	all classes representing a type of pdf object"

	^types ifNil: [types := self newTypeHierarchy]
%
classmethod: PDF
typesDictionaryClass
	"less collisions (23 collisions with 165 elements) than IdentityDictionary and SymbolKeyValueDictionary: 160 collisions"

	^FastIdentityKeyValueDictionary
%
category: '*PDFtalk Typing-accessing type classes'
classmethod: PDF
classAt: aSymbol
	"<PDFType implementation class | nil>"
	
	^(self typeAt: aSymbol) ifNotNil: [:type | type implementingClass]
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Basic Objects'.
	dict at: #comment put: 'PDF Objects (PDF 32000_2008.pdf pp. 13)'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Basic Objects'.
	dict at: #storeVersion put: '2.5.0.4'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class NativeValue
DoIt
Value
	subclass: 'NativeValue'
	instVarNames: #(content)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NativeValue category: 'PDFtalk Basic Objects'.
	NativeValue comment: 'A PDF value.

Abstract superclass of all PDF values, i.e. objects which do not change after creation.
The sister class hierarchy contains PDF Objects.

A PDF value wraps a corresponding Smalltalk value which is held in the instvar #content.

Values are created with: #on:'.
	NativeValue namespacePath: #(#PDFtalk).
%
# Define class Number
DoIt
NativeValue
	subclass: 'Number'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Number category: 'PDFtalk Basic Objects'.
	Number comment: 'PDF Number object as defined in PDF 32000_2008.pdf p. 14.

Real objects represent mathematical real numbers.
The range and precision of numbers may be limited by the internal representations used in the computer on which the conforming reader is running.'.
	Number namespacePath: #(#PDFtalk).
%
# Define class PDFString
DoIt
NativeValue
	subclass: 'PDFString'
	instVarNames: #(encrypted)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PDFString category: 'PDFtalk Basic Objects'.
	PDFString comment: 'PDF String object as defined in PDF 32000_2008.pdf pp. 15.

The value of a String is a ByteArray where each byte represents one character (2 byte per character for UTF16Textstring) in a specific encoding (if any).
The encodings are specific to the subclasses:
- ASCII 				for AsciiString
- PDFDocEncoding 	for Textstring
- UTF-16BE			for UTF16Textstring
- specified			for EncodedString

The class String is abstract and is used as interface. All conversions are done automatically.

The bytes are written as they are (with escaping non-ASCII characters) to the PDF source and read from it.
The methods #pdfSource and (class)#fromPdf: are used for writing and reading.

When Strings are created programatically, the characters have to be encoded in a specific way and the encoding has to be remembered for later reencoding.
Creation of a String should be done with: (class)#on:encoded: with a Smalltalk ByteString and an encoding. An error is signalled when the string cannot be encoded.
For direct creation, use (class)#value: with a ByteArray

To get a Smalltalk String from a PDF.String, use #asString.

In a Contents stream, strings exist only in text object with a specific font. The interpretation of Strings uses the encoding of the selected font.

Strings can be represented as Bytestring (in ()) or as hexadecimal string (in <>).'.
	PDFString namespacePath: #(#PDFtalk).
%
# Define class PDFDate
DoIt
PDFString
	subclass: 'PDFDate'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PDFDate category: 'PDFtalk Basic Objects'.
	PDFDate comment: 'PDF String object as defined in PDF 32000_2008.pdf pp. 87.

The internal value is local time.

Date values used in a PDF shall conform to a standard date format, which closely follows that of the international standard ASN.1 (Abstract Syntax Notation One), defined in ISO/IEC 8824.
A date shall be a text string of the form
	(D:YYYYMMDDHHmmSSOHH''mm)
where:
	YYYY shall be the year
	MM shall be the month (01â12)
	DD shall be the day (01â31)
	HH shall be the hour (00â23)
	mm shall be the minute (00â59)
	SS shall be the second (00â59)
	O shall be the relationship of local time to Universal Time (UT), and shall be denoted by one of the characters PLUS SIGN (U+002B) (+), HYPHEN-MINUS (U+002D) (-), or LATIN CAPITAL LETTER Z (U+005A) (Z) (see below)
	HH followed by APOSTROPHE (U+0027) ('') shall be the absolute value of the offset from UT in hours (00â23)
	mm shall be the absolute value of the offset from UT in minutes (00â59)

The prefix D: shall be present, the year field (YYYY) shall be present and all other fields may be present but only if all of their preceding fields are also present. The APOSTROPHE following the hour offset field (HH) shall only be present if the HH field is present. The minute offset field (mm) shall only be present if the APOSTROPHE following the hour offset field (HH) is present. The default values for MM and DD shall be both 01; all other numerical fields shall default to zero values. A PLUS SIGN as the value of the O field signifies that local time is later than UT, a HYPHEN-MINUS signifies that local time is earlier than UT, and the LATIN CAPITAL LETTER Z signifies that local time is equal to UT. If no UT information is specified, the relationship of the specified time to UT shall be considered to be GMT. Regardless of whether the time zone is specified, the rest of the date shall be specified in local time.

EXAMPLE
For example, December 23, 1998, at 7:52 PM, U.S. Pacific Standard Time, is represented by the string D:199812231952-08''00'.
	PDFDate namespacePath: #(#PDFtalk).
%
# Define class Textstring
DoIt
PDFString
	subclass: 'Textstring'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Textstring category: 'PDFtalk Basic Objects'.
	Textstring comment: 'PDF Text String object as defined in PDF 32000_2008.pdf pp. 86.

The text string type shall be used for character strings that contain information intended to be human-readable, such as text annotations, bookmark names, article names, document information, and so forth.

	NOTE 1		Text string type is a subtype of string type and represents data encoded using specific conventions.

The text string type shall be used for character strings that shall be encoded in either PDFDocEncoding or the UTF-16BE Unicode character encoding scheme.

The value should be shown with PDFDocEncoding'.
	Textstring namespacePath: #(#PDFtalk).
%
# Define class Entity
DoIt
Object
	subclass: 'Entity'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Entity category: 'PDFtalk Basic Objects'.
	Entity comment: 'Any object which can appear in a PDF file.

Such entity can be read by or with a PDF reader and
can be written to a PDF writer.

The sister hierarchy for immutable PDF objects is PdfValue.
'.
	Entity namespacePath: #(#PDFtalk).
%
# Define class Reference
DoIt
Entity
	subclass: 'Reference'
	instVarNames: #(id referent)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Reference category: 'PDFtalk Basic Objects'.
	Reference comment: 'PDF Reference to an indirect object as defined in PDF 32000_2008.pdf section 7.3.10, pp. 21.'.
	Reference namespacePath: #(#PDFtalk).
%
# Define class ObjectId
DoIt
Value
	subclass: 'ObjectId'
	instVarNames: #(number generation)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ObjectId category: 'PDFtalk Basic Objects'.
	ObjectId comment: 'The ID of an indirect object

Consists of a number and a generation'.
	ObjectId namespacePath: #(#PDFtalk).
%
# Define class Real
DoIt
Number
	subclass: 'Real'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Real category: 'PDFtalk Basic Objects'.
	Real comment: 'PDF Number object as defined in PDF 32000_2008.pdf p. 14.

A real value shall be written as one or more decimal digits with an optional sign and a leading, trailing, or embedded PERIOD (2Eh) (decimal point).
The value shall be interpreted as a real number and shall be converted to a real object.'.
	Real namespacePath: #(#PDFtalk).
%
# Define class UTF16Textstring
DoIt
Textstring
	subclass: 'UTF16Textstring'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	UTF16Textstring category: 'PDFtalk Basic Objects'.
	UTF16Textstring comment: 'PDF Text String object as defined in PDF 32000_2008.pdf pp. 86.

For text strings encoded in Unicode, the first two bytes shall be 254 followed by 255.
These two bytes represent the Unicode byte order marker, U+FEFF, indicating that the string is encoded in the UTF-16BE (big-endian) encoding scheme specified in the Unicode standard.

The value should be shown with UTF-16BEEncoding'.
	UTF16Textstring namespacePath: #(#PDFtalk).
%
# Define class PDFObject
DoIt
Entity
	subclass: 'PDFObject'
	instVarNames: #(content)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PDFObject category: 'PDFtalk Basic Objects'.
	PDFObject comment: 'Super class of all PDF objects defined in PDF 32000_2008.pdf pp. 14.

All PDFObjects are defined in the PDF namespace and use their proper name from the specification.
Many PDFObjects have the same class name as normal Smalltalk objects - Do not confuse them!

The creation of these objects is done by a PDF.File with a PDF.Reader.'.
	PDFObject namespacePath: #(#PDFtalk).
%
# Define class PDFDictionary
DoIt
PDFObject
	subclass: 'PDFDictionary'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PDFDictionary category: 'PDFtalk Basic Objects'.
	PDFDictionary comment: 'PDF Dictionary object as defined in PDF 32000_2008.pdf pp. 18.

Dictionaries use PDFNames as keys. Internally the implementation uses Symbols as keys for efficency.
The keys must be symbols.
Dictionaries hold PDF objects only. Any object put into it will be converted to its corresponding PDF object.
Dictionaries always answer PDF objects.'.
	PDFDictionary namespacePath: #(#PDFtalk).
%
# Define class ContentString
DoIt
PDFString
	subclass: 'ContentString'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ContentString category: 'PDFtalk Basic Objects'.
	ContentString comment: 'PDF String in a stream as defined in PDF 32000_2008.pdf pp. 650.

Strings in contents streams have the imlementation limit of 32767 bytes'.
	ContentString namespacePath: #(#PDFtalk).
%
# Define class ObjectRead
DoIt
Announcement
	subclass: 'ObjectRead'
	instVarNames: #(reference object)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ObjectRead category: 'PDFtalk Basic Objects'.
	ObjectRead comment: 'Announced when an object was read from the stream.

Includes the reference and the object'.
	ObjectRead namespacePath: #(#PDFtalk).
%
# Define class PDFArray
DoIt
PDFObject
	subclass: 'PDFArray'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PDFArray category: 'PDFtalk Basic Objects'.
	PDFArray comment: 'PDF Array object as defined in PDF 32000_2008.pdf, section 7.3.6, pp. 18.

An array object is a one-dimensional collection of objects arranged sequentially.
Unlike arrays in many other computer languages, PDF arrays may be heterogeneous; that is, an arrayâs elements may be any combination of numbers, strings, dictionaries, or any other objects, including other arrays.
An array may have zero elements.
'.
	PDFArray namespacePath: #(#PDFtalk).
%
# Define class Integer
DoIt
Number
	subclass: 'Integer'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Integer category: 'PDFtalk Basic Objects'.
	Integer comment: 'PDF Number object as defined in PDF 32000_2008.pdf p. 14.

An integer shall be written as one or more decimal digits optionally preceded by a sign.
The value shall be interpreted as a signed decimal integer and shall be converted to an integer object.'.
	Integer namespacePath: #(#PDFtalk).
%
# Define class TypedDictionary
DoIt
PDFDictionary
	subclass: 'TypedDictionary'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TypedDictionary category: 'PDFtalk Basic Objects'.
	TypedDictionary comment: 'Super class of all dictionaries with a ''Type'' key'.
	TypedDictionary namespacePath: #(#PDFtalk).
%
# Define class AsciiString
DoIt
PDFString
	subclass: 'AsciiString'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	AsciiString category: 'PDFtalk Basic Objects'.
	AsciiString comment: 'The bytes are all in the ASCII range'.
	AsciiString namespacePath: #(#PDFtalk).
%
# Define class Name
DoIt
NativeValue
	subclass: 'Name'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Name category: 'PDFtalk Basic Objects'.
	Name comment: 'PDF Name object as defined in PDF 32000_2008.pdf pp. 17.

A name is represented by a Symbol, for browsing references'.
	Name namespacePath: #(#PDFtalk).
%
# Define class EncodedString
DoIt
PDFString
	subclass: 'EncodedString'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	EncodedString category: 'PDFtalk Basic Objects'.
	EncodedString comment: 'A byte string with a specific encoder'.
	EncodedString namespacePath: #(#PDFtalk).
%
# Define class FileReference
DoIt
Object
	subclass: 'FileReference'
	instVarNames: #(id file types)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FileReference category: 'PDFtalk Basic Objects'.
	FileReference comment: 'Holds a cross reference pointing to an object in a file

The object is not present yet and must be read from the file to be used'.
	FileReference namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
category: '*PDFtalk Basic Objects-converting'
method: Timestamp
asPDF
	^(PDF classAt: #Date) on: self
%
DoIt
	| package policy |
	package := GsPackageLibrary createPackageNamed: #SessionMethods.
	GsPackageLibrary installPackage: package.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: FileInSymbolDictionary.
	policy externalSymbolList: (GsSession currentSession symbolList asArray copyWithout: FileInSymbolDictionary).
	policy enable.
%
category: '*PDFtalk Basic Objects-converting'
method: BinaryFloat
asPDF
	^(PDFtalk at: #Real) on: self asFloat
%
category: '*PDFtalk Basic Objects-converting'
method: SmallFraction
asPDF
	^(PDFtalk at: #Real) on: self asFloat
%
category: '*PDFtalk Basic Objects-converting'
method: CharacterCollection
asPDF
	^PDF String fromPdf: self
%
method: CharacterCollection
tokensBasedOn: aCharacter
	^self subStrings: aCharacter
%
category: '*PDFtalk Basic Objects-testing'
method: BlockClosure
isResolvedPDFObject
	^false
%
category: '*PDFtalk Basic Objects-accessing'
classmethod: Boolean
pdfTypeDefinition

	^(PDFtalk at: #PDFTypeDefinition)
		name: #Boolean
		supertype: #Object
		section: '7.3.2'
		documentation: 'Boolean objects represent the logical values of true and false. They appear in PDF files using the keywords true and false.'
%
category: '*PDFtalk Basic Objects-writing'
method: Boolean
writePDFOn: aWriter indent: anInteger
	aWriter nextPutAll: self printString asByteArray
%
category: '*PDFtalk Basic Objects-converting'
method: Dictionary
asPDF
	^PDF Dictionary on: self
%
category: '*PDFtalk Basic Objects-converting'
method: FixedPoint
asPDF
	^(PDFtalk at: #Real) on: self asFloat
%
category: '*PDFtalk Basic Objects-converting'
method: Fraction
asPDF
	^(PDFtalk at: #Real) on: self asFloat
%
category: '*PDFtalk Basic Objects-converting'
method: Integer
asPDF
	^(PDFtalk at: #Number) on: self
%
category: '*PDFtalk Basic Objects-printing'
method: Integer
writePDFOn: aWriter indent: anInteger
	aWriter nextPutAll: self printPostScript asByteArray
%
category: '*PDFtalk Basic Objects-printing'
method: Number
pdfSignificantDecimals
	"Number of significant decimal digits of precision in fractional part (approximate)."

	^5
%
method: Number
writePDFOn: aWriter indent: anInteger
	| precision rounded integer fraction wst |
	self abs < self postScriptEpsilon ifTrue: [
		aWriter nextPutByte: $0 asInteger.
		^self].
	self negative ifTrue: [
		| writer |
		writer := aWriter class new.
		self negated writePDFOn: writer indent: 0.
		writer contents asString = '0' ifTrue: [
			aWriter nextPutByte: $0 asInteger.
			^self].
		aWriter nextPutByte: $- asInteger.
		aWriter nextPutAll: writer contents.
		^self].
	precision := 10 raisedTo: self pdfSignificantDecimals.
	rounded := (self * precision) rounded / precision.
	integer := rounded truncated.
	integer writePDFOn: aWriter indent: anInteger.
	fraction := rounded - integer.
	fraction strictlyPositive ifFalse: [
		^self].
	aWriter nextPutByte: $. asInteger.
	wst := WriteStream on: String new.
	fraction writeFractionDecimalsOn: wst.
	aWriter nextPutAll: wst contents asByteArray
%
category: '*PDFtalk Basic Objects-accessing'
classmethod: Object
pdfVersion
	"<Version>
	the minimal version for this class with its features"

	^self pdfTypeDefinition pdfVersion
%
category: '*PDFtalk Basic Objects-testing'
classmethod: Object
isClassForArray: anArray
	"<Boolean>
	true, iff a proper instance can be created from anObject"

	^false
%
classmethod: Object
isClassForDictionary: aDictionary
	"<Boolean>
	true, iff the receiver can represent aDictionary as instance"

	^false
%
classmethod: Object
isClassForName: aName
	"<Boolean>
	true, iff a proper instance can be created from anObject"

	^false
%
classmethod: Object
isClassForStream: aStream
	"<Boolean>
	true, iff the receiver can represent aStream as instance"

	^false
%
category: '*PDFtalk Basic Objects-accessing'
method: Object
content
	"<Object>
	the Smalltalk object for the value I represent"

	^self
%
method: Object
pdfObject
	"<Object>
	the direct object"

	^self
%
method: Object
pdfVersion
	"<Version | nil>
	the minimal version for this object with its features"
	
	^self class pdfVersion
%
method: Object
readAllRawObjects
	"read all raw objects (without typing) from the PDF by following all references"

	self unresolvedReferences do: [:ref |
		ref isResolved ifFalse: [
			ref baseObject readAllRawObjects]]
%
method: Object
resolveAllReferences
	"read all objects from the PDF by following all references"

	self unresolvedReferences do: [:ref |
		ref isResolved ifFalse: [
			ref pdfObject resolveAllReferences]]
%
method: Object
resolveAllReferencesBreathFirst
	"read all objects from the PDF by following all references breadth first"

	| referencesToDo |
	referencesToDo := self unresolvedReferences.
	[referencesToDo isEmpty] whileFalse: [
		referencesToDo := referencesToDo inject: Set new into: [:new :ref |
			ref isResolved ifFalse: [
				new addAll: ref pdfObject unresolvedReferences].
			new]]
%
method: Object
unresolvedReferences
	"<Array of: Reference>"

	^#()
%
method: Object
unspecifiedAttributes
	"<Array of: Association>"

	^#()
%
category: '*PDFtalk Basic Objects-converting'
method: Object
asPDF
	"<Object>
	returns the receiver converted to a valid PDF object"

	^self
%
method: Object
asSmalltalkValue
	^self
%
method: Object
asType: aType
	"<Object | nil>
	an instance of aType if the receiver can be specialized"
	
	^aType specializedObject: self
%
method: Object
newReference
	"<Reference on: Object>"
	^(PDF classAt: #Reference) referent: self
%
category: '*PDFtalk Basic Objects-testing'
method: Object
canBeExemplarOf: aType
	"<Boolean>
	true, iff the receiver can be represented as an exemplar of aType"
	
	^self isKindOf: aType implementingClass
%
method: Object
compliesTo: anAttributeType
	^anAttributeType specifiesObject: self
%
method: Object
isDirect
	^true
%
method: Object
isReferencedBy: aCrossReference
	^false
%
method: Object
isResolvedPDFObject
	^true
%
method: Object
isSameReference: anObject
	^false
%
method: Object
refersTo: aPDFReference
	^false
%
method: Object
isSignalledException
	^false
%
category: '*PDFtalk Basic Objects-tracing'
method: Object
copyWithNewReferencesIn: visited
	"<Object copy>"
	"collect new references with copied referent"
	"direct object. No references here"

	^self
%
method: Object
tracedReferences: visitedReferences do: oneArgumentBlock
	"executes oneArgumentBlock with a new unique reference"
	"direct object. No references here"
%
category: '*PDFtalk Basic Objects-typing'
method: Object
errorWrongTypes: someTypes
	"<TypeMismatch>"

	^(PDFtalk at: #TypeMismatch) for: self expected: someTypes
%
method: Object
typed: listOfAttributeTypes
	"<PDFObject>
	if the receiver can be of any of the listOfAttributeTypes, a specialized copy is returned,
	otherwise the receiver is returned unchanged.
	Non-PDF objects return themselfs"

	(listOfAttributeTypes anySatisfy: #isIndirect) ifTrue: [
		^self errorWrongTypes: listOfAttributeTypes].
	listOfAttributeTypes isEmpty ifTrue: [
		^self].
	listOfAttributeTypes do: [:type |
		(self compliesTo: type) ifTrue: [
			^self]].
	listOfAttributeTypes do: [:type |
		(self asType: type) ifNotNil: [:specialized |
			^specialized]].
	^self errorWrongTypes: listOfAttributeTypes
%
category: '*PDFtalk Basic Objects-writing'
method: Object
pdfSource
	"<String>
	the object as PDF source"

	| wst |
	wst := (PDFtalk at: #Writer) new.
	self writePDFOn: wst indent: 0.
	^wst contents asString
%
method: Object
writePDFOn: aWriter indent: anInteger
	"write the receiver to the PDF byte stream"

	"do nothing by default"
%
category: '*PDFtalk Basic Objects-converting'
method: SequenceableCollection
asPDF
	^PDF Array on: self
%
category: '*PDFtalk Basic Objects-converting'
method: SmallInteger
asPDF
	^(PDFtalk at: #Integer) on: self
%
category: '*PDFtalk Basic Objects-converting'
method: Symbol
asPDF
	^(PDF classAt: #Name) on: self
%
category: '*PDFtalk Basic Objects-accessing'
classmethod: UndefinedObject
pdfTypeDefinition

	^(PDFtalk at: #PDFTypeDefinition)
		name: #Null
		supertype: #Object
		section: '7.3.9'
		documentation: 'The null object has a type and value that are unequal to those of any other object.
There shall be only one object of type null, denoted by the keyword null.
An indirect object reference to a nonexistent object shall be treated the same as a null object.
Specifying the null object as the value of a dictionary entry shall be equivalent to omitting the entry entirely.'
%
category: '*PDFtalk Basic Objects-testing'
method: UndefinedObject
canBeExemplarOf: aType 
	^false
%
category: '*PDFtalk Basic Objects-typing'
method: UndefinedObject
typed: listOfAttributeTypes
	"<nil | TypeMismatch>
	when there are no arguments, nil is returned,
	otherwise, nil does not match any types"

	(listOfAttributeTypes isEmpty or: [
	listOfAttributeTypes anySatisfy: [:type | self compliesTo: type]]) ifTrue: [
			^self].
	^self errorWrongTypes: listOfAttributeTypes
%
category: '*PDFtalk Basic Objects-writing'
method: UndefinedObject
writePDFOn: aWriter indent: anInteger
	aWriter nextPutAll: 'null' asByteArray
%
DoIt
	| dict policy |
	dict := SymbolDictionary new.
	dict at: #UNWRITABLE put: dict.
	dict immediateInvariant.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: dict.
	policy externalSymbolList: Array new.
	policy enable.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
classmethod: AsciiString
pdfTypeDefinition
	^PDFTypeDefinition
		name: #AsciiString
		supertype: #Textstring
		section: '7.9.2.1'
		documentation: 'Shall be used for characters that are represented in a single byte using ASCII encoding.'
%
category: 'implementation limits'
classmethod: ContentString
maxSize
	"Maximum length of a string, in bytes.
This restriction applies only to strings in content streams.
There is no effective restriction on other strings in PDF files."

	^32767
%
category: 'instance creation'
classmethod: ContentString
content: aByteArray encrypted: encryptedBoolean
	aByteArray size <= self maxSize ifTrue: [
		^super content: aByteArray encrypted: encryptedBoolean].
	^Error raiseSignal: 'the string is too big for PDF strings in content streams'
%
category: 'accessing'
classmethod: EncodedString
pdfTypeDefinition

	^PDFTypeDefinition
		name: #EncodedString
		supertype: #String
		section: '7.9.2.4'
		documentation: 'The byte string type shall be used for binary data that shall be represented as a series of bytes, where each byte may be any value representable in 8 bits. Byte string type is a subtype of string type.

NOTE The string may represent characters but the encoding is not known. The bytes of the string may not represent characters.'
%
category: 'instance creation'
classmethod: EncodedString
string: aString
	| wst encoder |
	wst := ByteArray new writeStream.
	encoder := PDF winAnsiEncoder.
	aString do: [:char |
		| code |
		code := encoder encode: char.
		code = Character illegalCode
			ifTrue: [
			char asInteger < 256 ifTrue: [
				wst nextPut: char asInteger]]
			ifFalse: [
			wst nextPut: code]].
	^self content: wst contents
%
category: 'converting'
method: EncodedString
asString
	| wst encoder |
	wst := String new writeStream.
	encoder := PDF winAnsiEncoder.
	self content do: [:code | wst nextPut: (encoder decode: code)].
	^wst contents
%
category: 'printing'
method: Entity
printOn: aStream
	aStream nextPutAll: self pdfSource
%
category: 'instance creation'
classmethod: FileReference
id: anObjectId file: aPDFFile
	| inst |
	inst := self new.
	inst initializeId: anObjectId file: aPDFFile.
	^inst
%
category: 'test instances'
classmethod: FileReference
example
	^self id: (ObjectId number: 42) file: nil
%
category: 'accessing'
method: FileReference
crossReference
	"<CrossReference | nil>
	pointer to the object in the file or stream"

	^self file crossReferenceAtId: self id
%
method: FileReference
file
	"<PDFtalk.File>"
	
	^file
%
method: FileReference
id
	"<ObjectId>
	ID of the object in the file or stream"

	^id
%
method: FileReference
object
	"<PDFObject>
	specialized by the types"

	^self readIndirectObject typed: self types
%
method: FileReference
types
	"<Array of: AttributeType>"
	
	^types ifNil: [types := OrderedCollection new]
%
category: 'adding'
method: FileReference
addTypes: someAttributeTypes
	| new notMoreGeneralThanAnyExisting notMoreGeneralThanNewOnes |
	new := someAttributeTypes reject: [:at | self types includes: at].
	notMoreGeneralThanAnyExisting := new reject: [:at |
		self types anySatisfy: [:myType | myType isMoreSpecificThan: at]].
	notMoreGeneralThanNewOnes := self types reject: [:myType |
		notMoreGeneralThanAnyExisting anySatisfy: [:newType | newType isMoreSpecificThan: myType]].
	types := notMoreGeneralThanNewOnes , notMoreGeneralThanAnyExisting
%
category: 'initialize-release'
method: FileReference
initializeId: anObjectId file: aPDFFile
	id := anObjectId.
	file := aPDFFile
%
category: 'printing'
method: FileReference
printOn: aStream
	aStream
		nextPutAll: self id printString;
		nextPutAll: ' in ';
		nextPutAll: self file printString
%
category: 'reading'
method: FileReference
readIndirectObject
	"<PDFObject>"

	(self file crossReferenceAtId: self id) ifNotNil: [:xref |
		| object |
		object := xref readIndirectObjectWith: self file.
		self file announce: (ObjectRead reference: self id object: object).
		^object].
	^MissingObject at: self id expected: self types asArray
%
category: 'testing'
method: FileReference
isResolvedPDFObject
	^false
%
category: 'accessing'
classmethod: Integer
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Integer
		supertype: #Number
		section: '7.3.3'
		documentation: 'An integer shall be written as one or more decimal digits optionally preceded by a sign.
The value shall be interpreted as a signed decimal integer and shall be converted to an integer object.'
%
category: 'instance creation'
classmethod: Integer
on: anInteger
	^self content: anInteger
%
category: 'accessing'
classmethod: Name
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Name
		supertype: #Object
		section: '7.3.5'
		documentation: 'A name object is an atomic symbol uniquely defined by a sequence of any characters (8-bit values) except null (character code 0).
Uniquely defined means that any two name objects made up of the same sequence of characters denote the same object.
Atomic means that a name has no internal structure; although it is defined by a sequence of characters, those characters are not considered elements of the name.'
%
category: 'implementation limits'
classmethod: Name
maxSize
	"Maximum length of a name, in bytes."

	^127
%
category: 'instance creation'
classmethod: Name
on: aSymbol
	(aSymbol size <= self maxSize) ifTrue: [
		^super on: aSymbol].
	^Error raiseSignal: 'the symbol ' , aSymbol printString , ' is too big for PDF names'
%
category: 'testing'
classmethod: Name
isClassForName: aName
	
	^self name = aName asSmalltalkValue
%
category: 'accessing'
method: Name
pdfVersion
	(self pdfSource includes: $#) ifTrue: [
		^Version pdf1_2].
	^super pdfVersion
%
category: 'testing'
method: Name
canBeExemplarOf: aType
	
	^aType implementingClass isClassForName: self
%
category: 'writing'
method: Name
writePDFOn: aWriter indent: anInteger
	aWriter nextPutName: self
%
category: 'accessing'
classmethod: NativeValue
type
	"<Symbol>
	type entry"
	^self name
%
category: 'instance creation'
classmethod: NativeValue
content: contentValue
	"<NativeValue>
	A new PDF object on anObject"

	| inst |
	inst := self new.
	inst initializeContent: contentValue.
	^inst
%
classmethod: NativeValue
empty
	^self new
%
classmethod: NativeValue
newFrom: aPDFObject
	"<PDF.Object>
	A new PDF object on aPDFObject.
	Needed for specialization 
		where aPDFObject is an instance of a superclass like Dictionary or Array 
		which gets copied as an instance of the receiver"

	^self on: aPDFObject content
%
classmethod: NativeValue
on: anObject
	"<PDF.NativeValue>
	A new PDF object on anObject"

	^self content: anObject
%
category: 'specification'
classmethod: NativeValue
localSpecification
	<constant: #content class: #(#Value) comment: 'the Smalltalk object for the value I represent'>
%
category: 'accessing'
method: NativeValue
content
	"<Value>
	the Smalltalk object for the value I represent"

	^content
%
category: 'converting'
method: NativeValue
asSmalltalkValue
	^self content
%
category: 'copying'
method: NativeValue
copy
	^self class on: self content
%
category: 'initialize-release'
method: NativeValue
initializeContent: contentValue
	content := contentValue.
	self beImmutable
%
category: 'printing'
method: NativeValue
printOn: aStream
	aStream nextPutAll: self pdfSource
%
method: NativeValue
printvalueWith: printer
	^LiteralPrintvalue string: self content asSource
%
category: 'accessing'
classmethod: Number
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Number
		supertype: #Object
		section: '7.3.3'
		documentation: 'PDF provides two types of numeric objects: integer and real. Integer objects represent mathematical integers. Real objects represent mathematical real numbers.'
%
category: 'instance creation'
classmethod: Number
on: aNumber
	"<PDF.Integer | PDF.Real>"

	aNumber isInteger ifTrue: [
		^Integer on: aNumber].
	^Real on: aNumber
%
classmethod: Number
zero
	^Integer content: 0
%
category: 'testing'
method: Number
isPositiveInteger
	^self asSmalltalkValue isInteger and: [
	self asSmalltalkValue strictlyPositive]
%
method: Number
nonNegativeInteger
	^self asSmalltalkValue isInteger and: [
	self asSmalltalkValue positive]
%
category: 'writing'
method: Number
writePDFOn: aWriter indent: anInteger
	self asSmalltalkValue writePDFOn: aWriter indent: anInteger
%
category: 'instance creation'
classmethod: ObjectId
number: numberInteger generation: generationInteger
	| inst |
	inst := self new.
	inst initializeNumber: numberInteger generation: generationInteger.
	^inst
%
category: 'instance creation optional'
classmethod: ObjectId
number: numberInteger
	^self number: numberInteger generation: nil
%
category: 'specification'
classmethod: ObjectId
localSpecification
	<constant: #number class: #(#Integer) comment: 'A positive integer object number.
	Indirect objects may be numbered sequentially within a PDF file, but this is not required; 
	object numbers may be assigned in any arbitrary order'>
	<optional: #generation class: #(#Integer) default: '0' comment: 'A non-negative integer generation number.
	In a newly created file, all indirect objects shall have generation numbers of 0. 
	Nonzero generation numbers may be introduced when the file is later updated'>
%
category: 'accessing'
method: ObjectId
generation
	"<Integer>
	A non-negative integer generation number.
	In a newly created file, all indirect objects shall have generation numbers of 0. 
	Nonzero generation numbers may be introduced when the file is later updated"

	^generation ifNil: [0]
%
method: ObjectId
number
	"<Integer>
	A positive integer object number.
	Indirect objects may be numbered sequentially within a PDF file, but this is not required; 
	object numbers may be assigned in any arbitrary order"

	^number
%
category: 'initialize-release'
method: ObjectId
initializeNumber: numberInteger generation: generationInteger
	number := numberInteger.
	(generationInteger notNil and: [
	self generation ~= generationInteger]) ifTrue: [
			generation := generationInteger].
	self beImmutable
%
category: 'printing'
method: ObjectId
printOn: aStream
	aStream
		nextPutAll: self number printString;
		space;
		nextPutAll: self generation printString
%
method: ObjectId
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'number' value: self number).
	args add: (printer optional: 'generation' value: generation).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: ObjectRead
reference: aReference object: aPDFObject
	| inst |
	inst := self new.
	inst initializeReference: aReference object: aPDFObject.
	^inst
%
category: 'accessing'
method: ObjectRead
object
	"<PDFObject>"

	^object
%
method: ObjectRead
reference
	"<Reference>"

	^reference
%
category: 'initialize-release'
method: ObjectRead
initializeReference: aReference object: aPDFObject
	reference := aReference.
	object := aPDFObject
%
category: 'accessing'
classmethod: PDFArray
attributesIntervalString
	| numString |
	numString := self numberOfAttributes printString.
	self numberOfAttributes = self maxNumberOfAttributes ifFalse: [
		^numString , '-' , self maxNumberOfAttributes printString].
	^numString
%
classmethod: PDFArray
maxNumberOfAttributes
	^self numberOfAttributes
%
classmethod: PDFArray
numberOfAttributes
	"<Integer>
	the fixed number of attributes in specialized subclasses"

	^self subclassResponsibility
%
classmethod: PDFArray
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Array
		supertype: #Object
		section: '7.3.6'
		documentation: 'An array object is a one-dimensional collection of objects arranged sequentially.
Unlike arrays in many other computer languages, PDF arrays may be heterogeneous; that is, an arrayâs elements may be any combination of numbers, strings, dictionaries, or any other objects, including other arrays.
An array may have zero elements.'
%
category: 'instance creation'
classmethod: PDFArray
empty
	self class == PDF Array ifTrue: [
		^self new].
	^self new: self maxNumberOfAttributes
%
classmethod: PDFArray
new: numberOfElements
	^self content: (Array new: numberOfElements withAll: nil)
%
classmethod: PDFArray
on: anArray
	| inst |
	inst := self new: anArray size.
	anArray doWithIndex: [:element :index | inst at: index put: element].
	inst hasValidNumberOfElements ifFalse: [
		inst raiseTypeError].
	^inst
%
classmethod: PDFArray
with: aPDFObject
	^self on: (Array with: aPDFObject)
%
classmethod: PDFArray
with: firstPDFObject with: secondPDFObject
	^self on: (Array
		with: firstPDFObject
		with: secondPDFObject)
%
classmethod: PDFArray
with: firstPDFObject with: secondPDFObject with: thirdPDFObject
	^self on: (Array
		with: firstPDFObject
		with: secondPDFObject
		with: thirdPDFObject)
%
classmethod: PDFArray
with: firstPDFObject with: secondPDFObject with: thirdPDFObject with: fourthPDFObject
	^self on: (Array
		with: firstPDFObject
		with: secondPDFObject
		with: thirdPDFObject
		with: fourthPDFObject)
%
classmethod: PDFArray
withAll: somePDFObjects
	^self on: (Array withAll: somePDFObjects)
%
category: 'testing'
classmethod: PDFArray
isClassForArray: anArray

	^anArray size between: self numberOfAttributes
		and: self maxNumberOfAttributes
%
classmethod: PDFArray
isValidNumberOfElements: anInteger
	^self == PDF Array or: [
	anInteger between: self numberOfAttributes and: self maxNumberOfAttributes]
%
category: 'accessing'
method: PDFArray
at: index
	^self content at: index
%
method: PDFArray
at: anInteger put: anObject
	"<PDFObject>
	anObject is added as its most specific version"

	anInteger isInteger ifFalse: [
		^Error raiseSignal: 'PDF arrays have integers as keys'].
	^self content at: anInteger put: (anObject asPDF typed: (self attributeTypesAt: anInteger))
%
method: PDFArray
at: anInteger putPlain: anObject
	"<PDFObject>
	anObject is added as is. No typing is performed"

	anInteger isInteger ifFalse: [
		^Error raiseSignal: 'PDF arrays have integers as keys'].
	^self content at: anInteger put: anObject asPDF
%
method: PDFArray
content
	"<Array of: PDF.Object>"

	^super content ifNil: [#()]
%
method: PDFArray
first
	^self content first pdfObject
%
method: PDFArray
last
	^self content last pdfObject
%
method: PDFArray
objectAt: index ifNil: aBlock
	"<PDF.Object>
	returns the object stored in a slot or the value of a Reference"

	((1 to: self content size) includes: index) ifFalse: [
		^aBlock value].
	(self content at: index) ifNotNil: [:pdf |
		^pdf pdfObject].
	^aBlock value
%
method: PDFArray
objects
	"<Core.Array of: PDF.Object>
	resolved objects"

	^self content collect: #pdfObject
%
method: PDFArray
size
	^self content size
%
method: PDFArray
unresolvedReferences
	"<OrderedCollection>
	without duplicates: the first one is used.
	Comparison uses equal #="

	| allWithDuplicates used |
	allWithDuplicates := self content inject: OrderedCollection new into: [:new :value |
		new addAll: value unresolvedReferences.
		new].
	used := Set new.
	^allWithDuplicates select: [:element |
		(used includes: element)
			ifTrue: [false]
			ifFalse: [
			used add: element.
			true]]
%
category: 'accessing attributes'
method: PDFArray
sortedAttributePragmas
	^((Pragma
		allNamed: #attribute:documentation:
		from: self class
		to: PDF Array
		sortedByArgument: 1) first: self size) asOrderedCollection
%
category: 'converting'
method: PDFArray
asSmalltalkValue
	^self content collect: #asSmalltalkValue
%
method: PDFArray
asType: aType
	^aType specializedArray: self
%
category: 'copying'
method: PDFArray
, anArray
	^self class on: self content , anArray content
%
method: PDFArray
with: aPDFObject
	^(self content, (Array with: aPDFObject)) asPDF
%
category: 'enumerating'
method: PDFArray
do: aBlockClosure
	self content do: aBlockClosure
%
category: 'instance creation'
method: PDFArray
raiseTypeError
	TypeError raiseSignal: 'the size of the argument (' , self size printString , ') does not match the required number of attributes (' , self class attributesIntervalString , ')'
%
category: 'printing'
method: PDFArray
printvalueWith: printer
	"Value protocol to print the object literally"

	^LiteralPrintvalue string: self asSmalltalkValue asSource
%
category: 'testing'
method: PDFArray
canBeExemplarOf: aType
	
	^aType implementingClass isClassForArray: self
%
method: PDFArray
compliesTo: anAttributeType
	^anAttributeType specifiesArray: self
%
method: PDFArray
hasKey: anInteger
	^anInteger between: 1 and: self size
%
method: PDFArray
hasRequiredAttributes
	^self attributesRequired allSatisfy: [:pragma |
		pragma arguments first between: 1 and: self size]
%
method: PDFArray
hasValidNumberOfElements
	^self class isValidNumberOfElements: self size
%
category: 'tracing'
method: PDFArray
copyWithNewReferencesIn: visited
	^self class content: (self content collect: [:pdfObject |
		pdfObject copyWithNewReferencesIn: visited])
%
method: PDFArray
tracedReferences: visited do: oneArgumentBlock
	self do: [:pdfObject | pdfObject tracedReferences: visited do: oneArgumentBlock]
%
category: 'typing'
method: PDFArray
attributeTypesAt: index

	| indexPragmas pragmaForSlot |
	indexPragmas := Pragma allNamed: #attribute:documentation: in: self class.
	indexPragmas isEmpty ifTrue: [^#()].
	pragmaForSlot := indexPragmas
				detect: [:pragma | pragma arguments first = index]
				ifNone: [^#()].
	^AttributeType allInMethod: pragmaForSlot method
%
method: PDFArray
typed: listOfAttributeTypes
	"<PDFArray>
	a copy of the receiver with the values specialized according to the listOfTypes"

	| types elementTypes contentCopy |
	types := listOfAttributeTypes select: #isForArray.
	types isEmpty ifTrue: [
		^super typed: listOfAttributeTypes].
	types size > 1 ifTrue: [
		Error raiseSignal: 'Only one #typeArrayOf: pragma is allowed'.
		^super typed: listOfAttributeTypes].
	elementTypes := Array with: types first asObjectType.
	contentCopy := self content collect: [:value | value typed: elementTypes].
	^self class on: contentCopy
%
category: 'writing'
method: PDFArray
writePDFOn: aWriter indent: anInteger
	aWriter nextPutByte: $[ asInteger.
	self content do: [:element | element writePDFOn: aWriter indent: anInteger] separatedBy: [
		aWriter space].
	aWriter nextPutByte: $] asInteger
%
category: 'accessing'
classmethod: PDFDate
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Date
		supertype: #Object
		section: '7.9.4'
		documentation: 'The internal value is local time.

Date values used in a PDF shall conform to a standard date format, which closely follows that of the international standard ASN.1 (Abstract Syntax Notation One), defined in ISO/IEC 8824.
A date shall be a text string of the form
	(D:YYYYMMDDHHmmSSOHH''mm)
where:
	YYYY shall be the year
	MM shall be the month (01â12)
	DD shall be the day (01â31)
	HH shall be the hour (00â23)
	mm shall be the minute (00â59)
	SS shall be the second (00â59)
	O shall be the relationship of local time to Universal Time (UT), and shall be denoted by one of the characters PLUS SIGN (U+002B) (+), HYPHEN-MINUS (U+002D) (-), or LATIN CAPITAL LETTER Z (U+005A) (Z) (see below)
	HH followed by APOSTROPHE (U+0027) ('') shall be the absolute value of the offset from UT in hours (00â23)
	mm shall be the absolute value of the offset from UT in minutes (00â59)

The prefix D: shall be present, the year field (YYYY) shall be present and all other fields may be present but only if all of their preceding fields are also present. The APOSTROPHE following the hour offset field (HH) shall only be present if the HH field is present. The minute offset field (mm) shall only be present if the APOSTROPHE following the hour offset field (HH) is present. The default values for MM and DD shall be both 01; all other numerical fields shall default to zero values. A PLUS SIGN as the value of the O field signifies that local time is later than UT, a HYPHEN-MINUS signifies that local time is earlier than UT, and the LATIN CAPITAL LETTER Z signifies that local time is equal to UT. If no UT information is specified, the relationship of the specified time to UT shall be considered to be GMT. Regardless of whether the time zone is specified, the rest of the date shall be specified in local time.

EXAMPLE
For example, December 23, 1998, at 7:52 PM, U.S. Pacific Standard Time, is represented by the string D:199812231952-08''00'
%
category: 'instance creation'
classmethod: PDFDate
dateFrom: rst
	"<Date>"

	| month day year |
	year := (rst next: 4) asNumber.
	month := (rst next: 2) asNumber.
	day := (rst next: 2) asNumber.
	^Date newDay: day monthNumber: month year: year
%
classmethod: PDFDate
fromPdf: aByteString
	| timestamp rst date time |
	rst := (aByteString allButFirst: 2) readStream.
	date := self dateFrom: rst.
	time := self timeFrom: rst.
	timestamp := Timestamp fromDate: date andTime: time.
	(rst atEnd or: [
	('Z+-' includes: rst peek) not]) ifFalse: [
			| duration |
			duration := Duration minutes: (self timezoneOffsetMinutesFor: rst next from: rst).
			timestamp := timestamp asLocal - duration].
	^self content: timestamp
%
classmethod: PDFDate
timeFrom: rst
	"<Time>"

	| hours minutes seconds |
	hours := (rst atEnd not and: [
	rst peek isDigit])
			ifTrue: [(rst next: 2) asNumber]
			ifFalse: [
			0].
	minutes := (rst atEnd not and: [
	rst peek isDigit])
			ifTrue: [(rst next: 2) asNumber]
			ifFalse: [
			0].
	seconds := (rst atEnd not and: [
	rst peek isDigit])
			ifTrue: [(rst next: 2) asNumber]
			ifFalse: [
			0].
	^Time h: hours m: minutes s: seconds
%
classmethod: PDFDate
timezoneOffsetMinutesFor: char from: rst
	| offset |
	char = $Z ifTrue: [
		^0].
	offset := (rst next: 2) asNumber * 60.
	(rst atEnd not and: [
	rst peek isDigit]) ifTrue: [
			offset := offset + (rst next: 2) asNumber].
	^char = $-
		ifTrue: [offset negated]
		ifFalse: [offset]
%
category: 'converting'
method: PDFDate
asSmalltalkValue
	^self content
%
method: PDFDate
asString
	^self pdfSource
%
category: 'testing'
method: PDFDate
isEmpty
	^self = self class new
%
category: 'writing'
method: PDFDate
asUTC
	"<String>
	in the form 20080701000000+02"

	| timestamp wst secondsDiference diffTime |
	timestamp := self asSmalltalkValue.
	wst := String new writeStream.
	wst nextPutAll: (timestamp year printPaddedWith: $0 to: 4 base: 10).
	wst nextPutAll: (timestamp month printPaddedWith: $0 to: 2 base: 10).
	wst nextPutAll: (timestamp dayOfMonth printPaddedWith: $0 to: 2 base: 10).
	wst nextPutAll: (timestamp hour printPaddedWith: $0 to: 2 base: 10).
	wst nextPutAll: (timestamp minute printPaddedWith: $0 to: 2 base: 10).
	wst nextPutAll: (timestamp second rounded printPaddedWith: $0 to: 2 base: 10).
	secondsDiference := TimeZone current offset asSeconds.
	wst nextPut: (secondsDiference negative
		ifTrue: [$-]
		ifFalse: [$+]).
	diffTime := Time fromSeconds: secondsDiference.
	wst nextPutAll: (diffTime hours printPaddedWith: $0 to: 2 base: 10).
	wst nextPut: $'.
	diffTime minutes isZero ifFalse: [
		wst nextPutAll: (diffTime minutes printPaddedWith: $0 to: 2 base: 10)].
	^wst contents
%
method: PDFDate
writePDFOn: aWriter indent: anInteger
	self encrypted ifTrue: [
		^aWriter nextPutString: self].
	aWriter
		nextPutAll: '(D:' asByteArray;
		nextPutAll: self asUTC asByteArray;
		nextPutByte: $) asInteger
%
category: 'accessing'
classmethod: PDFDictionary
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Dictionary
		supertype: #Object
		section: '7.3.7'
		documentation: 'A dictionary object is an associative table containing pairs of objects, known as the dictionaryâs entries.
The first element of each entry is the key and the second element is the value.
The key shall be a name.
The value may be any kind of object, including another dictionary.
A dictionary entry whose value is null shall be treated the same as if the entry does not exist.
A dictionary may have zero entries.'
%
classmethod: PDFDictionary
type
	"<Symbol>
	type entry"

	^self name
%
category: 'instance creation'
classmethod: PDFDictionary
empty
	^self new
%
classmethod: PDFDictionary
subclassFor: aDictionary
	"<Dictionary class | nil>"

	self subclasses do: [:subclass | 
		(subclass subclassFor: aDictionary) ifNotNil: [:sc |
			^sc]].
	(self isClassForDictionary: aDictionary) ifTrue: [
		^self].
	^nil
%
classmethod: PDFDictionary
with: aPDFObject
	^self on: (Valuemap with: aPDFObject)
%
classmethod: PDFDictionary
with: firstPDFObject with: secondPDFObject
	^self on: (Valuemap
		with: firstPDFObject
		with: secondPDFObject)
%
classmethod: PDFDictionary
with: firstPDFObject with: secondPDFObject with: thirdPDFObject
	^self on: (Valuemap
		with: firstPDFObject
		with: secondPDFObject
		with: thirdPDFObject)
%
classmethod: PDFDictionary
with: firstPDFObject with: secondPDFObject with: thirdPDFObject with: fourthPDFObject
	^self on: (Valuemap
		with: firstPDFObject
		with: secondPDFObject
		with: thirdPDFObject
		with: fourthPDFObject)
%
category: 'testing'
classmethod: PDFDictionary
isClassForDictionary: aDictionary
	^true
%
category: 'accessing'
method: PDFDictionary
at: aSymbol
	"<PDFObject>
	returns the object stored in a slot (PDF.Object or Reference).
	A value of null is treated as non existant entry"

	^self content at: aSymbol
%
method: PDFDictionary
at: aSymbol ifAbsent: aBlock
	"<PDF.Object>
	it is not possible to return a null, since null erases the entry"

	^self content at: aSymbol ifAbsent: aBlock
%
method: PDFDictionary
at: aSymbol ifAbsentPut: valueBlock
	"<PDFObject>
	Answer the value at aSymbol.  If aSymbol is not found, create a new
	entry for aSymbol, set its value to be the result of evaluating
	valueBlock, and answer that value."

	^self at: aSymbol ifAbsent: [self at: aSymbol put: valueBlock value]
%
method: PDFDictionary
at: aSymbol ifAbsentPutPlain: valueBlock
	"<PDFObject>
	Answer the value at aSymbol.  If aSymbol is not found, create a new
	entry for aSymbol, set its value to be the result of evaluating
	valueBlock, and answer that value."

	^self at: aSymbol ifAbsent: [self at: aSymbol putPlain: valueBlock value]
%
method: PDFDictionary
at: key ifPresent: aBlock 
	"Answer the value at key.  If key is found, evaluate aBlock with the corresponding value."

	| found value |
	found := true.
	value := self at: key ifAbsent: [found := false].
	^found
		ifTrue: [aBlock value: value]
		ifFalse: [nil]
%
method: PDFDictionary
at: aSymbol put: anObject
	"<PDFObject>
	A null removes any existant entry at aSymbol.
	anObject is added as its most specific version"
	aSymbol isSymbol ifFalse: [
		^Error raiseSignal: 'PDF dictionaries use only symbols as keys'].
	anObject ifNil: [
		self content removeKey: aSymbol ifAbsent: [nil].
		^nil].
	^self content at: aSymbol put: (anObject asPDF typed: (self attributeTypesAt: aSymbol))
%
method: PDFDictionary
at: aSymbol putPlain: anObject
	"<PDFObject>
	A null removes any existant entry at aSymbol.
	anObject is added as is. No typing is performed"

	aSymbol isSymbol ifFalse: [
		^Error raiseSignal: 'PDF dictionaries use only symbols as keys'].
	anObject ifNil: [
		self content removeKey: aSymbol ifAbsent: [nil].
		^nil].
	^self content at: aSymbol put: anObject asPDF
%
method: PDFDictionary
classesForAttributes
	"<SequenceableCollection of: Dictionary class>
	all super classes which may have attributes from the top to self"

	^(self class allSuperclasses reverse allButLast: self topClassLevel) reverse , (Array with: self class)
%
method: PDFDictionary
content
	^content ifNil: [content := Valuemap new]
%
method: PDFDictionary
contentWithoutCycles
	"<OrderedDictionary>
	a copy of content with entries removed which create a circular structure"

	^self content copy
%
method: PDFDictionary
keys
	"<Array of: Symbol>"

	^self content keys
%
method: PDFDictionary
objectAt: aSymbol ifAbsent: aBlock
	"<PDF.Object>
	returns the object stored in a slot or the value of a Reference"

	| pdf |
	pdf := self content at: aSymbol ifAbsent: [
		^aBlock value].
	^pdf pdfObject
%
method: PDFDictionary
pdfVersion
	"<Version>
	the highest version of the class and its attributes.
	Does not follow the objects contained as values of attributes."

	^self attributesPresent inject: self class pdfVersion into: [:maxVersion :pragma |
		| conditional maxCond attributes |
		attributes := self tagsIn: pragma method withSelector: #version:dot:ifValue:.
		conditional := attributes isEmpty
			ifTrue: [#()]
			ifFalse: [attributes].
		maxCond := conditional inject: maxVersion into: [:max1 :pragma1 |
			pragma1 arguments last = (self perform: pragma selector) content
				ifTrue: [
				max1 max: (Version major: pragma1 arguments first minor: (pragma1 arguments at: 2))]
				ifFalse: [
				max1]].
		maxVersion max: ((self pdfVersionOf: pragma method) max: maxCond)]
%
method: PDFDictionary
size
	"<Integer>"

	^self content size
%
method: PDFDictionary
topClassLevel
	"<Integer>
	the level of the receiver's topmost relevant superclass in the class hierarchy"

	^3
%
method: PDFDictionary
unresolvedReferences
	"<OrderedCollection>
	without duplicates: the first one is used.
	Comparison uses equal #="

	| allWithDuplicates used |
	allWithDuplicates := self values inject: OrderedCollection new into: [:new :value |
		new addAll: value unresolvedReferences.
		new].
	used := Set new.
	^allWithDuplicates select: [:element |
		(used includes: element)
			ifTrue: [false]
			ifFalse: [
			used add: element.
			true]]
%
method: PDFDictionary
values
	"<Array of: PDF.Object>"

	^self content values
%
category: 'accessing attributes'
method: PDFDictionary
attributeHasValue: anAttributePragma
	"<Boolean>"

	^self keys includes: anAttributePragma selector
%
method: PDFDictionary
attributesPresent
	"<Collection of: Pragma>"

	| keys |
	keys := self keys asSet.
	^self sortedAttributePragmas select: [:pragma | keys includes: pragma selector]
%
method: PDFDictionary
sort: aAttributePragma before: bAttributePragma
	"<Boolean>"

	| aClass bClass aRequired bRequired aValue bValue aVersion bVersion |
	aRequired := self attributeIsRequired: aAttributePragma.
	bRequired := self attributeIsRequired: bAttributePragma.
	(aRequired and: [
	bRequired not]) ifTrue: [
			^true].
	(aRequired not and: [
	bRequired]) ifTrue: [
			^false].
	aValue := self attributeHasValue: aAttributePragma.
	bValue := self attributeHasValue: bAttributePragma.
	(aValue and: [
	bValue not]) ifTrue: [
			^true].
	(aValue not and: [
	bValue]) ifTrue: [
			^false].
	aClass := aAttributePragma methodClass.
	bClass := bAttributePragma methodClass.
	(aClass inheritsFrom: bClass) ifTrue: [
		^false].
	(bClass inheritsFrom: aClass) ifTrue: [
		^true].
	"same class"
	aVersion := self attributeVersion: aAttributePragma.
	bVersion := self attributeVersion: bAttributePragma.
	aVersion = bVersion ifTrue: [
		^aAttributePragma arguments first < bAttributePragma arguments first].
	^aVersion < bVersion
%
method: PDFDictionary
sortedAttributeKeys
	"<SequenceableCollection of: Symbol>
	The attributes are sorted by the specified order.
	Unspecified attribute are ordered by appearance"

	| keys known sortedKeys otherKeys |
	keys := self keys asSet.
	sortedKeys := self sortedAttributePragmas collect: #selector.
	known := sortedKeys select: [:key | keys includes: key].
	otherKeys := self keys asOrderedCollection.
	sortedKeys do: [:key | otherKeys remove: key ifAbsent: []].
	^known , otherKeys
%
method: PDFDictionary
sortedAttributePragmas
	"If there are attributes with the same selector, the most specific is returned.
	The order is from the specific class up the hierarchy"

	| dict |
	dict := Valuemap new.
	self classesForAttributes do: [:class |
		(Pragma allNamed: #attribute:documentation: in: class sortedByArgument: 1) do: [:pragma |
			dict at: pragma selector put: pragma]].
	^dict values
%
method: PDFDictionary
unspecifiedAttributes
	"<SequenceableCollection of: (Association key: Symbol value: PDF.Object)>"

	| keys |
	keys := self keys asOrderedCollection.
	self sortedAttributePragmas do: [:pragma | keys remove: pragma selector ifAbsent: []].
	^keys collect: [:key | key -> (self at: key)]
%
category: 'converting'
method: PDFDictionary
asSmalltalkValue
	| dict |
	dict := Valuemap new.
	self content keysAndValuesDo: [:key :aValue | dict at: key put: aValue asSmalltalkValue].
	^dict
%
method: PDFDictionary
asType: aType
	^aType specializedDictionary: self
%
category: 'enumerating'
method: PDFDictionary
keysAndValuesDo: aBlockClosure
	self content keysAndValuesDo: aBlockClosure
%
category: 'initialize-release'
method: PDFDictionary
initializeContent: aDictionary
	"we need to use the official #at:put: to convert all non-PDF objects to PDFs"

	content := Valuemap new: aDictionary size.
	aDictionary associations do: [:assoc | self at: assoc key put: assoc value]
%
method: PDFDictionary
initializeDirectWithContent: aValuemap
	"low level initialization without typing"

	content := aValuemap
%
category: 'testing'
method: PDFDictionary
canBeExemplarOf: aType
	^aType implementingClass isClassForDictionary: self
%
method: PDFDictionary
compliesTo: anAttributeType
	^anAttributeType specifiesDictionary: self
%
method: PDFDictionary
hasKey: aSymbol
	^self keys asSet includes: aSymbol
%
method: PDFDictionary
hasRequiredAttributes
	| keys |
	keys := self keys asSet.
	^self attributesRequired allSatisfy: [:pragma | keys includes: pragma selector]
%
category: 'tracing'
method: PDFDictionary
copyWithNewReferencesIn: visited
	| newDict inst |
	newDict := Valuemap new: self size.
	self content keysAndValuesDo: [:key :pdfObject |
		newDict at: key put: (pdfObject copyWithNewReferencesIn: visited)].
	inst := self class new.
	inst initializeDirectWithContent: newDict.
	^inst
%
method: PDFDictionary
tracedReferences: visited do: oneArgumentBlock
	self values do: [:pdfObject | pdfObject tracedReferences: visited do: oneArgumentBlock]
%
category: 'typing'
method: PDFDictionary
attributeTypesAt: anAttributeSymbol

	| implementingClass method |
	implementingClass := self class whichClassIncludesSelector: anAttributeSymbol.
	implementingClass ifNil: [
		^#()].
	method := implementingClass compiledMethodAt: anAttributeSymbol.
	^AttributeType allInMethod: method
%
method: PDFDictionary
typed: listOfAttributeTypes
	"<PDF.Dictionary>
	a copy of the receiver with the values specialized according to the listOfTypes"

	| types |
	types := listOfAttributeTypes select: #isForDictionary.
	types isEmpty ifTrue: [
		^super typed: listOfAttributeTypes].
	types size > 1 ifTrue: [
		Error raiseSignal: 'Only one #typeDictionaryOf: or #typeNameTreeOf: pragma is allowed'.
		^super typed: listOfAttributeTypes].
	^types first typedDictionary: self
%
category: 'writing'
method: PDFDictionary
writePDFOn: aWriter indent: anInteger
	aWriter nextPutAll: '<<' asByteArray.
	(anInteger > 0 and: [
	self size > 1]) ifTrue: [
			aWriter cr].
	self content associations
		do: [:assoc |
		anInteger + 1 timesRepeat: [aWriter tab].
		assoc key asPDF writePDFOn: aWriter indent: anInteger.
		aWriter space.
		assoc value writePDFOn: aWriter indent: anInteger + 1]
		separatedBy: [
		aWriter cr].
	aWriter
		tab;
		nextPutAll: '>>' asByteArray
%
category: 'accessing'
classmethod: PDFObject
pragmas
	<pragmas: #instance>
	^self pragmasForType , self pragmasForRequired , self pragmasForVersion , self pragmasForDocumentation
%
classmethod: PDFObject
pragmasForDocumentation
	^#(#attribute:documentation:)
%
classmethod: PDFObject
pragmasForRequired
	^#(#required #requiredIf: #inheritable)
%
classmethod: PDFObject
pragmasForType
	^AttributeType pragmaKeywords asArray
%
classmethod: PDFObject
pragmasForVersion
	^#(#version:dot: #version:dot:ifValue:)
%
classmethod: PDFObject
undefinedTypes
	"<Collection of: Symbol>"
	"self undefinedTypes"

	| typesReferenced |
	typesReferenced := Set new.
	(PDFtalk.PDF types collect: #implementingClass) do: [:class |
		self pragmasForType do: [:pragmaSelector |
			(Pragma allNamed: pragmaSelector in: class) do: [:pragma |
				typesReferenced add: pragma message arguments first]]].
	^typesReferenced select: [:type | (PDF typeAt: type) isNil]
%
category: 'instance creation'
classmethod: PDFObject
content: anObject
	"<PDFObject>
	A new PDF object on anObject.
	The low level object creation - no type checking and no conversions are done!"

	| inst |
	inst := self new.
	inst initializeContent: anObject.
	^inst
%
classmethod: PDFObject
newFrom: aPDFObject
	"<PDF.Object>
	A new PDF object from aPDFObject.
	Needed for specialization 
		where aPDFObject is an instance of a superclass like Dictionary or Array 
		which gets copied as an instance of the receiver"

	^self on: aPDFObject content
%
classmethod: PDFObject
on: anObject
	"<PDF.Object>
	A new PDF object on anObject"

	^self content: anObject
%
category: 'accessing'
method: PDFObject
content
	"<Core.Object>
	the Smalltalk object for the value I represent"

	^content
%
method: PDFObject
objectAt: aSymbolOrInteger
	"<PDF.Object>
	returns the object stored in a slot or the value of a Reference"

	^(self at: aSymbolOrInteger) pdfObject
%
category: 'accessing attributes'
method: PDFObject
attributeCanInherit: anAttributePragma
	^self hasTag: #inheritable in: anAttributePragma method
%
method: PDFObject
attributeDocumentation: aMethod
	| attributes |
	attributes := self tagsIn: aMethod withSelector: #attribute:documentation:.
	attributes isEmpty ifTrue: [
		^String new].
	^attributes first arguments last
%
method: PDFObject
attributeHighestConditionalVersion: anAttributePragma
	"<Integer>
	minor pdf version"

	| attrValue attributes |
	attributes := self tagsIn: anAttributePragma method withSelector: #version:dot:ifValue:.
	attributes isEmpty ifTrue: [
		^Version pdf1_0].
	attrValue := (self perform: anAttributePragma selector) content.
	^attributes inject: Version pdf1_0 into: [:maxVersion :attributeMessage |
		attributeMessage arguments last = attrValue
			ifTrue: [
			maxVersion max: (Version
				major: attributeMessage arguments first
				minor: (attributeMessage arguments at: 2))]
			ifFalse: [
			maxVersion]]
%
method: PDFObject
attributeIsRequired: anAttributePragma
	^(self attributeIsRequiredIf: anAttributePragma) or: [
	self attributeIsUnconditionallyRequired: anAttributePragma]
%
method: PDFObject
attributeIsRequiredIf: anAttributePragma
	"<Boolean>
	true if the attribute argument is present"

	^(self tagsIn: anAttributePragma method withSelector: #requiredIf:) anySatisfy: [:attribute |
		self hasKey: attribute arguments first]
%
method: PDFObject
attributeIsUnconditionallyRequired: anAttributePragma
	^self hasTag: #required in: anAttributePragma method
%
method: PDFObject
attributesRequired
	"<Collection of: Pragma>"

	^self sortedAttributePragmas select: [:pragma | self attributeIsRequired: pragma]
%
method: PDFObject
attributeVersion: anAttributePragma
	"<Version>"

	^self class pdfVersion max: ((self pdfVersionOf: anAttributePragma method) max: (self attributeHighestConditionalVersion: anAttributePragma))
%
method: PDFObject
hasTag: aSymbol in: aMethod
	^aMethod pragmas anySatisfy: [:pragma | pragma keyword = aSymbol]
%
method: PDFObject
pdfVersionOf: aMethod
	"<Version>"

	| tag |
	tag := self tagAt: #version:dot: in: aMethod ifAbsent: [
		^Version pdf1_0].
	^Version major: tag arguments first minor: tag arguments last
%
method: PDFObject
sortedAttributePragmas
	"<OrderedCollection of: Pragma>"

	^self subclassResponsibility
%
method: PDFObject
tagAt: aSymbol in: aMethod ifAbsent: aBlock
	"<Message>"

	^aMethod pragmas detect: [:pragma | pragma keyword = aSymbol] ifNone: aBlock
%
method: PDFObject
tagsIn: aMethod withSelector: aSymbol
	^aMethod pragmas select: [:attribute | attribute keyword = aSymbol]
%
category: 'comparing'
method: PDFObject
= anObject
	^self class == anObject class and: [
	self content = anObject content]
%
method: PDFObject
hash
	^self content hash
%
category: 'copying'
method: PDFObject
copy
	^self class on: self content
%
category: 'initialize-release'
method: PDFObject
initializeContent: aSmalltalkObject
	content := aSmalltalkObject
%
category: 'testing'
method: PDFObject
hasKey: aSymbolOrInteger
	"<Boolean>
	true, if the receiver has aSymbolOrInteger as accessor for #at:"

	^self subclassResponsibility
%
method: PDFObject
hasRequiredAttributes
	"<Boolean>"

	^self subclassResponsibility
%
method: PDFObject
isEmpty
	^self content isEmpty
%
method: PDFObject
notEmpty
	^self isEmpty not
%
category: 'tracing'
method: PDFObject
copyWithNewReferences
	"<PDFObject>"

	^self copyWithNewReferencesIn: IdentityDictionary new
%
method: PDFObject
tracedReferences
	"<Array of: Reference>
	The set is used for fast detection of already visited references.
	The list collects all references depth-first in a reproducible order"

	| set list |
	set := IdentitySet new.
	list := OrderedCollection new.
	self tracedReferences: set do: [:ref | list add: ref].
	^list asArray
%
category: 'typing'
method: PDFObject
attributeTypesAt: anAttributeSymbol
	"<Array of: AttributeType>
	the declared types of attribute anAttributeSymbol"

	^self subclassResponsibility
%
category: 'accessing'
classmethod: PDFString
pdfTypeDefinition

	^PDFTypeDefinition
		name: #String
		supertype: #Object
		section: '7.3.4'
		documentation: 'A string object shall consist of a series of zero or more bytes. String objects are not integer objects, but are stored in a more compact format.'
%
classmethod: PDFString
utf16Header
	^String
		with: 254 asCharacter
		with: 255 asCharacter
%
category: 'implementation limits'
classmethod: PDFString
maxSize
	"Maximum length of a string, in bytes.
This restriction applies only to strings in content streams.
There is no effective restriction on other strings in PDF files."

	^nil
%
category: 'instance creation'
classmethod: PDFString
asPDFEndOfLines: aByteString
	"<PDF.String>
	replace EOL to LF"

	| rst wst |
	rst := aByteString readStream.
	wst := String new writeStream.
	[rst atEnd] whileFalse: [
		| char |
		char := rst next.
		char == Character cr ifTrue: [
			char := rst peek == Character lf
				ifTrue: [rst next]
				ifFalse: [Character lf]].
		wst nextPut: char].
	^wst contents
%
classmethod: PDFString
content: contentValue encrypted: encryptedBoolean
	| inst |
	inst := self new.
	inst initializeContent: contentValue encrypted: encryptedBoolean.
	^inst
%
classmethod: PDFString
fromEncryptedPdf: aByteString
	"<PDF.String>
	aByteString is an uninterpreted encrypted string of bytes"

	^PDF String content: aByteString asByteArray encrypted: true
%
classmethod: PDFString
fromPdf: aString
	"<PDFString | PDFDate>
	called from the parser after escaped octals are converted to bytes.
	aByteString is an uninterpreted string of bytes"

	| string |
	(self isDateString: aString) ifTrue: [
		^(PDF classAt: #Date) fromPdf: aString].
	(aString size >= 2 and: [
	(aString first: 2) = self utf16Header]) ifTrue: [
			| text |
			text := UTF16Textstring fromPdf: aString.
			^(self isDateString: text asString)
				ifTrue: [
				(PDF classAt: #Date) fromPdf: text asString]
				ifFalse: [
				text]].
	string := self asPDFEndOfLines: aString.
	(string allSatisfy: #isAscii) ifTrue: [
		^(PDF classAt: #AsciiString) content: string asByteArray].
	^(PDF classAt: #EncodedString) string: string
%
classmethod: PDFString
newFrom: aPDFObject

	^self content: aPDFObject content encrypted: aPDFObject encrypted
%
category: 'instance creation optional'
classmethod: PDFString
content: contentValue
	^self content: contentValue encrypted: nil
%
category: 'specification'
classmethod: PDFString
localSpecification
	<optional: #encrypted class: #(#Boolean) default: 'false' comment: 'true, iff the string is encrypted'>
%
category: 'testing'
classmethod: PDFString
isDateString: aSmalltalkString
	"<Boolean>"

	^aSmalltalkString size >= 6 and: [
	(aSmalltalkString first: 2) = 'D:' and: [
	(aSmalltalkString copyFrom: 3 to: 6) allSatisfy: #isDigit]]
%
category: 'accessing'
method: PDFString
encrypted
	"<Boolean>
	true, iff the string is encrypted"

	^encrypted ifNil: [false]
%
method: PDFString
numberOfSpaces
	"<Integer>"

	^(self asString select: [:c | c codePoint = 32]) size
%
method: PDFString
size
	^self content size
%
category: 'converting'
method: PDFString
asByteArray
	"<ByteArray>"

	^self content
%
method: PDFString
asSmalltalkValue
	^self asString
%
method: PDFString
asString
	"<ByteString>
	the equivalent Smalltalk string"

	^self content asString
%
category: 'initialize-release'
method: PDFString
initializeContent: contentValue encrypted: encryptedBoolean
	content := contentValue.
	(encryptedBoolean notNil and: [
	self encrypted ~= encryptedBoolean]) ifTrue: [
			encrypted := encryptedBoolean].
	self beImmutable
%
category: 'printing'
method: PDFString
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'content' value: self content).
	args add: (printer optional: 'encrypted' value: encrypted).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: PDFString
isEmpty
	^super isEmpty or: [
	self content isEmpty]
%
category: 'writing'
method: PDFString
pdfHexSource
	"<String>
	the object as PDF source"

	| wst |
	wst := Writer new.
	wst nextPutHexString: self.
	^wst contents asString
%
method: PDFString
writePDFOn: aWriter indent: anInteger
	aWriter nextPutString: self
%
category: 'accessing'
classmethod: Real
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Real
		supertype: #Number
		section: '7.3.3'
		documentation: 'A real value shall be written as one or more decimal digits with an optional sign and a leading, trailing, or embedded PERIOD (2Eh) (decimal point).
The value shall be interpreted as a real number and shall be converted to a real object.'
%
category: 'implementation limits'
classmethod: Real
epsilon
	"Nonzero real values closest to the next integer (approximate).
Values closer than these are automatically converted to the integer."
	"Float fmin is 1.4013e-45"
 
	^1.175d-38
%
classmethod: Real
significantDecimals
	"Number of significant decimal digits of precision in fractional part (approximate)."

	^5
%
category: 'instance creation'
classmethod: Real
on: aFloat
	(aFloat between: self epsilon negated and: self epsilon) ifTrue: [
		^Integer on: 0].
	^self content: aFloat
%
category: 'accessing'
classmethod: Reference
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Reference
		supertype: #Object
		section: '7.3.10'
		documentation: 'Any object in a PDF file may be labelled as an indirect object.
This gives the object a unique object identifier by which other objects can refer to it (for example, as an element of an array or as the value of a dictionary entry).'
%
category: 'instance creation'
classmethod: Reference
id: idObjectId
	| inst |
	inst := self new.
	inst initializeId: idObjectId referent: nil.
	^inst
%
classmethod: Reference
id: idObjectId referent: aPDFObject
	| inst |
	inst := self new.
	inst initializeId: idObjectId referent: aPDFObject.
	^inst
%
classmethod: Reference
referent: aPDFObject
	^self id: nil referent: aPDFObject
%
category: 'accessing'
method: Reference
assignNewNumber: anInteger
	"set the object number with generation 0 for writing"

	self isNew ifFalse: [
		self error: 'used reference'].
	id := ObjectId number: anInteger
%
method: Reference
baseObject
	"<PDFObject>
	read the object from the file without typing"

	self isResolved ifFalse: [
		referent := self readIndirectObject].
	^referent
%
method: Reference
content
	^self referent
%
method: Reference
generation
	"<Integer>"

	^self id generation
%
method: Reference
id
	"<ObjectId>"

	^id ifNil: [ObjectId number: 0]
%
method: Reference
number
	"<Integer>"

	^self id number
%
method: Reference
pdfObject
	^self referent ifNil: [self]
%
method: Reference
referent
	"<PDF.Object>
	lazy reading the object from the file.
	Initially, value stores a block which reads the object"

	self isResolved ifFalse: [
		referent := referent object].
	^referent
%
method: Reference
referent: aPDFObject
	referent := aPDFObject
%
method: Reference
unresolvedReferences
	self isResolved ifFalse: [
		^Array with: self].
	^#()
%
category: 'comparing'
method: Reference
= anObject
	^self class == anObject class and: [
	self isResolved = anObject isResolved and: [
	self id = anObject id and: [
	(self isResolved and: [
	self referent == anObject referent]) or: [
		self isResolved not]]]]
%
method: Reference
hash
	| hash |
	hash := self id hash.
	(self isNew and: [
	self isResolved]) ifTrue: [
			^self referent hash bitXor: hash].
	^hash
%
category: 'converting'
method: Reference
asMissingObject
	"<MissingObject>"

	^MissingObject at: self id expected: self referent types asArray
%
method: Reference
asSmalltalkValue
	^self referent asSmalltalkValue
%
method: Reference
asType: aType
	"<Reference | nil>"

	^aType specializedReference: self
%
category: 'copying'
method: Reference
copyWithReferent: aPDFObject
	^self class id: self id referent: aPDFObject
%
category: 'initialize-release'
method: Reference
initializeId: idObjectId referent: aPDFObject
	id := idObjectId.
	referent := aPDFObject
%
category: 'printing'
method: Reference
printOn: aStream

	super printOn: aStream.
	self isResolved ifFalse: [^aStream nextPut: $*].
	aStream
		nextPutAll: ' (';
		nextPutAll: self referent printString;
		nextPutAll: ')'
%
method: Reference
printvalueWith: printer
	"Value protocol to print the object literally"

	^LiteralPrintvalue string: self referent asSource, ' newReference'
%
category: 'reading'
method: Reference
readIndirectObject
	"<PDFObject>
	the referent must be unresolved"

	^referent readIndirectObject
%
category: 'testing'
method: Reference
compliesTo: anAttributeType
	^anAttributeType specifiesReference: self
%
method: Reference
isDirect
	^false
%
method: Reference
isNew
	"the object does not come from an existing PDF"

	^id isNil
%
method: Reference
isReferencedBy: aCrossReference
	^aCrossReference refersTo: self
%
method: Reference
isResolved
	"<Boolean>
	the object has been read from the file"

	^referent isResolvedPDFObject
%
method: Reference
isSameReference: anObject
	^self = anObject or: [
	anObject refersTo: self]
%
category: 'tracing'
method: Reference
copyWithNewReferences
	^self copyWithNewReferencesIn: IdentityDictionary new
%
method: Reference
copyWithNewReferencesIn: visited
	"<SequenceableCollection of: Reference>"

	| newReference |
	visited at: self ifPresent: [:value |
		^value].
	newReference := self class new.
	visited at: self put: newReference.
	^newReference referent: (self referent copyWithNewReferencesIn: visited)
%
method: Reference
tracedReferences: visited do: oneArgumentBlock
	"<SequenceableCollection of: Reference>"

	(visited includes: self) ifTrue: [
		^self].
	visited add: self.
	oneArgumentBlock value: self.
	self referent tracedReferences: visited do: oneArgumentBlock
%
category: 'typing'
method: Reference
typed: listOfAttributeTypes
	"<PDFObject>
	a more specialized version copy of the receiver or the receiver itself.
	Dont resolve an object if it is not resolved yet (this would read in all referenced objects),
	instead, wrap the object reading block in another block to convert the object after it was read.
	This casting will globally effect the file, so that each holder of the receiver sees the new object.
	Beware of multiple users of the object!!"

	| specialized referentTypes |
	(listOfAttributeTypes anySatisfy: #specifiesReference) ifTrue: [
		^self].
	(listOfAttributeTypes anySatisfy: #isDirectType) ifTrue: [
		^self errorWrongTypes: listOfAttributeTypes].
	referentTypes := (listOfAttributeTypes select: #appliesToReference) collect: #asDirectType.
	referentTypes isEmpty ifTrue: [
		^self].
	self isResolved ifFalse: [
		referent ifNil: [
			^FileError raiseSignal: 'Illegal reference - References must be created by a PDF.File'].
		referent addTypes: referentTypes.
		^self].
	specialized := self referent typed: referentTypes.
	self referent == specialized ifFalse: [
		self referent: specialized].
	^self
%
category: 'writing'
method: Reference
writeIndirectObjectOn: aWriter indent: integer
	aWriter
		nextPutAll: self id printString asByteArray;
		space;
		nextPutAll: 'obj' asByteArray;
		cr.
	self referent writePDFOn: aWriter indent: 0.
	aWriter
		cr;
		nextPutAll: 'endobj' asByteArray
%
method: Reference
writePDFOn: aWriter indent: anInteger
	aWriter
		nextPutAll: self id printString asByteArray;
		space;
		nextPutByte: $R asInteger
%
category: 'accessing'
classmethod: Textstring
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Textstring
		supertype: #String
		section: '7.9.2.2'
		documentation: 'The text string type shall be used for character strings that contain information intended to be human-readable, such as text annotations, bookmark names, article names, document information, and so forth.

	NOTE 1		Text string type is a subtype of string type and represents data encoded using specific conventions.

The text string type shall be used for character strings that shall be encoded in either PDFDocEncoding or the UTF-16BE Unicode character encoding scheme.

The value should be shown with PDFDocEncoding'
%
category: 'instance creation'
classmethod: Textstring
fromString: aByteString
	| encoder wst |
	wst := ByteArray new writeStream.
	encoder := PDF pdfDocEncoder.
	aByteString do: [:char | wst nextPut: (encoder encode: char)].
	^self content: wst contents
%
category: 'converting'
method: Textstring
asString
	| encoder wst |
	wst := String new writeStream.
	encoder := PDF pdfDocEncoder.
	self content do: [:code | wst nextPut: (encoder decode: code)].
	^wst contents asString
%
category: 'instance creation'
classmethod: TypedDictionary
empty
	| inst |
	inst := super empty.
	inst at: #Type put: self type.
	^inst
%
category: 'testing'
classmethod: TypedDictionary
isClassForDictionary: aDictionary
	| typeEntry |
	typeEntry := aDictionary at: #Type ifAbsent: [
		^false].
	^self type asPDF = typeEntry
%
category: 'accessing'
method: TypedDictionary
attributesRequired
	^self sortedAttributePragmas select: [:pragma |
		pragma selector == #Type or: [
		self attributeIsRequired: pragma]]
%
method: TypedDictionary
topClassLevel
	^4
%
category: 'accessing entries'
method: TypedDictionary
Type
	<type: #Name>
	<required>
	<attribute: 1 documentation: 'The type of PDF object that this dictionary describes.

The value of the Type entry can almost always be inferred from context.
The value of an entry in a page''s font resource dictionary, for example, shall be a font object;
therefore, the Type entry in a font dictionary serves primarily as documentation and as information for error checking.
The Type entry shall not be required unless so stated in its description; however, if the entry is present, it shall have the correct value.
In addition, the value of the Type entry in any dictionary, even in private data, shall be either a name defined in this standard or a registered name.'>
	^self objectAt: #Type
%
category: 'instance creation'
classmethod: UTF16Textstring
fromPdf: aByteString
	"aByteString has the 2 UTF16 header bytes - strip them"

	^self content: (aByteString allButFirst: 2) asByteArray
%
category: 'converting'
method: UTF16Textstring
asString
	| rst wst |
	rst := ByteReadStream bigEndianOn: self content.
	wst := WriteStream on: Unicode16 new.
	[rst atEnd] whileFalse: [wst nextPut: rst nextUnsignedShort asCharacter].
	^wst contents
%
category: 'writing'
method: UTF16Textstring
writePDFOn: aWriter indent: anInteger
	aWriter
		nextPutByte: $( asInteger;
		nextPutAll: self class utf16Header asByteArray;
		nextPutAll: self content;
		nextPutByte: $) asInteger
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: '*PDFtalk Basic Objects-accessing type classes'
classmethod: PDF
Array
	^self classAt: #Array
%
classmethod: PDF
Dictionary
	^self classAt: #Dictionary
%
classmethod: PDF
String
	^self classAt: #String
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Streams'.
	dict at: #comment put: 'PDF Stream objects as defined in PDF 32000_2008.pdf section 7.3.8, pp. 19
'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Streams'.
	dict at: #storeVersion put: '2.5.0.2'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class Predictor
DoIt
Object
	subclass: 'Predictor'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Predictor category: 'PDFtalk Streams'.
	Predictor comment: 'A de/encoder used by ZipFilters as defined in PDF 32000_2008.pdf pp. 27.
(see http://gnupdf.org/PNG_and_TIFF_Predictors_Filter)

Only the PNG Predictors are implemented.'.
	Predictor namespacePath: #(#PDFtalk).
%
# Define class PNGPredictor
DoIt
Predictor
	subclass: 'PNGPredictor'
	instVarNames: #(offsetLeft)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PNGPredictor category: 'PDFtalk Streams'.
	PNGPredictor comment: 'PNG Predictors as defined in http://www.w3.org/TR/PNG/#9Filters.
A nice description can be found at http://www.libpng.org/pub/png/book/LCH-png-chapter.pdf'.
	PNGPredictor namespacePath: #(#PDFtalk).
%
# Define class AveragePredictor
DoIt
PNGPredictor
	subclass: 'AveragePredictor'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	AveragePredictor category: 'PDFtalk Streams'.
	AveragePredictor comment: 'Each byte is replaced with the difference between it and the average of the corresponding bytes to its left and above it, truncating any fractional part.'.
	AveragePredictor namespacePath: #(#PDFtalk).
%
# Define class ZipFilterParameter
DoIt
PDFDictionary
	subclass: 'ZipFilterParameter'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ZipFilterParameter category: 'PDFtalk Streams'.
	ZipFilterParameter comment: 'PDF Image Dictionaries as defined in PDF 32000_2008.pdf, section 7.4.4.3, pp. 27.

The LZWDecode and FlateDecode filters shall accept optional parameters to control the decoding process.
NOTE
	Most of these parameters are related to techniques that reduce the size of compressed sampled images (rectangular arrays of colour values).
For example, image data typically changes very little from sample to sample.
Therefore, subtracting the values of adjacent samples (a process called differencing), and encoding the differences rather than the raw sample values, can reduce the size of the output data.
Furthermore, when the image data contains several colour components (red-green-blue or cyan-magenta-yellow-black) per sample, taking the difference between the values of corresponding components in adjacent samples, rather than between different colour components in the same sample, often reduces the output data size'.
	ZipFilterParameter namespacePath: #(#PDFtalk).
%
# Define class Filter
DoIt
Entity
	subclass: 'Filter'
	instVarNames: #(internal external)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Filter category: 'PDFtalk Streams'.
	Filter comment: 'PDF Filter as defined in PDF 32000_2008.pdf pp. 22.

A de-/en-coder for the contents of PDF Streams.

A filter has two buffers:
	external: 	The encoded contents as read from an external source.
				This is written to a file or used as #internal to the next filter.
	internal: 	The decoded contents as used internally by the system or as #external by the next filter.

A new filter is created with either the external or the internal content.
The other buffer is filled lazy on demand.
Any error is stored in the corresponding buffer.'.
	Filter namespacePath: #(#PDFtalk).
%
# Define class ZipFilter
DoIt
Filter
	subclass: 'ZipFilter'
	instVarNames: #(predictor colors bitsPerComponent columns predictors predicted)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ZipFilter category: 'PDFtalk Streams'.
	ZipFilter comment: 'Zip filters as defined in PDF 32000_2008.pdf pp. 25.

This class implements some common state and functionality for Zip-based filters.'.
	ZipFilter namespacePath: #(#PDFtalk).
%
# Define class FlateDecode
DoIt
ZipFilter
	subclass: 'FlateDecode'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FlateDecode category: 'PDFtalk Streams'.
	FlateDecode comment: 'PDF Filter as defined in PDF 32000_2008.pdf pp. 25.

Decompresses data encoded using the zlib/deflate compression method, reproducing the original text or binary data.'.
	FlateDecode namespacePath: #(#PDFtalk).
%
# Define class PDFStream
DoIt
PDFDictionary
	subclass: 'PDFStream'
	instVarNames: #(filter internal external encrypted)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PDFStream category: 'PDFtalk Streams'.
	PDFStream comment: 'PDF Stream object as defined in PDF 32000_2008.pdf pp. 19.'.
	PDFStream namespacePath: #(#PDFtalk).
%
# Define class Textstream
DoIt
PDFStream
	subclass: 'Textstream'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Textstream category: 'PDFtalk Streams'.
	Textstream comment: 'PDF Stream object as defined in PDF 32000_2008.pdf pp. 87.

A text stream shall be a PDF stream object whose unencoded bytes shall meet the same requirements as a text string with respect to encoding, byte order, and lead bytes.'.
	Textstream namespacePath: #(#PDFtalk).
%
# Define class TIFFPredictor
DoIt
Predictor
	subclass: 'TIFFPredictor'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TIFFPredictor category: 'PDFtalk Streams'.
	TIFFPredictor comment: 'The TIFF predictor is not implemented, since it applies mostly to images which is not my focus.
See the TIFF specification (http://partners.adobe.com/public/developer/en/tiff/TIFF6.pdf) section 14, Horizontal Differencing, for details.'.
	TIFFPredictor namespacePath: #(#PDFtalk).
%
# Define class LZWFilterParameter
DoIt
ZipFilterParameter
	subclass: 'LZWFilterParameter'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	LZWFilterParameter category: 'PDFtalk Streams'.
	LZWFilterParameter comment: 'PDF Image Dictionaries as defined in PDF 32000_2008.pdf, section 7.4.4.3, pp. 27.

The LZWDecode and FlateDecode filters shall accept optional parameters to control the decoding process.
NOTE
	Most of these parameters are related to techniques that reduce the size of compressed sampled images (rectangular arrays of colour values).
For example, image data typically changes very little from sample to sample.
Therefore, subtracting the values of adjacent samples (a process called differencing), and encoding the differences rather than the raw sample values, can reduce the size of the output data.
Furthermore, when the image data contains several colour components (red-green-blue or cyan-magenta-yellow-black) per sample, taking the difference between the values of corresponding components in adjacent samples, rather than between different colour components in the same sample, often reduces the output data size
'.
	LZWFilterParameter namespacePath: #(#PDFtalk).
%
# Define class NoPredictor
DoIt
PNGPredictor
	subclass: 'NoPredictor'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NoPredictor category: 'PDFtalk Streams'.
	NoPredictor comment: 'Each byte is unchanged.'.
	NoPredictor namespacePath: #(#PDFtalk).
%
# Define class JPXDecode
DoIt
Filter
	subclass: 'JPXDecode'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	JPXDecode category: 'PDFtalk Streams'.
	JPXDecode comment: 'PDF Filter as defined in PDF 32000_2008.pdf pp. 35.

Decompresses data encoded using the wavelet-based JPEG2000 standard, reproducing the original image data.'.
	JPXDecode namespacePath: #(#PDFtalk).
%
# Define class UpPredictor
DoIt
PNGPredictor
	subclass: 'UpPredictor'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	UpPredictor category: 'PDFtalk Streams'.
	UpPredictor comment: 'Each byte is replaced with the difference between it and the byte above it (in the previous row, as it was before filtering).'.
	UpPredictor namespacePath: #(#PDFtalk).
%
# Define class RunLengthDecode
DoIt
Filter
	subclass: 'RunLengthDecode'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	RunLengthDecode category: 'PDFtalk Streams'.
	RunLengthDecode comment: 'PDF Filter as defined in PDF 32000_2008.pdf pp. 29.

Decompresses data encoded using a byte-oriented run-length encoding algorithm, reproducing the original text or binary data
(typically monochrome image data, or any data that contains frequent long runs of a single byte value).'.
	RunLengthDecode namespacePath: #(#PDFtalk).
%
# Define class DCTDecode
DoIt
Filter
	subclass: 'DCTDecode'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	DCTDecode category: 'PDFtalk Streams'.
	DCTDecode comment: 'PDF Filter as defined in PDF 32000_2008.pdf pp. 34.

Decompresses data encoded using a DCT (discrete cosine transform) technique based on the JPEG standard, reproducing image sample data that approximates the original data.'.
	DCTDecode namespacePath: #(#PDFtalk).
%
# Define class ASCIIFilter
DoIt
Filter
	subclass: 'ASCIIFilter'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ASCIIFilter category: 'PDFtalk Streams'.
	ASCIIFilter comment: 'ASCII filters as defined in PDF 32000_2008.pdf pp. 24.

This class implements no functionality but serves only for structuring purposes.'.
	ASCIIFilter namespacePath: #(#PDFtalk).
%
# Define class ASCII85Decode
DoIt
ASCIIFilter
	subclass: 'ASCII85Decode'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ASCII85Decode category: 'PDFtalk Streams'.
	ASCII85Decode comment: 'PDF Filter as defined in PDF 32000_2008.pdf pp. 25.

Decodes data encoded in an ASCII base-85 representation, reproducing the original binary data.'.
	ASCII85Decode namespacePath: #(#PDFtalk).
%
# Define class Crypt
DoIt
Filter
	subclass: 'Crypt'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Crypt category: 'PDFtalk Streams'.
	Crypt comment: 'PDF Filter as defined in PDF 32000_2008.pdf pp. 38.

Decrypts data encrypted by a security handler, reproducing the data as it was before encryption.'.
	Crypt namespacePath: #(#PDFtalk).
%
# Define class PaethPredictor
DoIt
PNGPredictor
	subclass: 'PaethPredictor'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PaethPredictor category: 'PDFtalk Streams'.
	PaethPredictor comment: 'Each byte is replaced with the difference between it and the Paeth predictor of the corresponding bytes to its left, above it, and to its upper left.'.
	PaethPredictor namespacePath: #(#PDFtalk).
%
# Define class ASCIIHexDecode
DoIt
ASCIIFilter
	subclass: 'ASCIIHexDecode'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ASCIIHexDecode category: 'PDFtalk Streams'.
	ASCIIHexDecode comment: 'PDF Filter as defined in PDF 32000_2008.pdf pp. 24.

Decodes data encoded in an ASCII hexadecimal representation, reproducing the original binary data.'.
	ASCIIHexDecode namespacePath: #(#PDFtalk).
%
# Define class SubPredictor
DoIt
PNGPredictor
	subclass: 'SubPredictor'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SubPredictor category: 'PDFtalk Streams'.
	SubPredictor comment: 'Each byte is replaced with the difference between it and the ``corresponding byte'''' to its left.'.
	SubPredictor namespacePath: #(#PDFtalk).
%
# Define class LZWDecode
DoIt
ZipFilter
	subclass: 'LZWDecode'
	instVarNames: #(earlyChange)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	LZWDecode category: 'PDFtalk Streams'.
	LZWDecode comment: 'PDF Filter as defined in PDF 32000_2008.pdf pp. 25.

Decompresses data encoded using the LZW (Lempel-Ziv-Welch) adaptive compression method, reproducing the original text or binary data.

This filter is depreciated and not (initially implemented).'.
	LZWDecode namespacePath: #(#PDFtalk).
%
# Define class CCITTFaxDecode
DoIt
Filter
	subclass: 'CCITTFaxDecode'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CCITTFaxDecode category: 'PDFtalk Streams'.
	CCITTFaxDecode comment: 'PDF Filter as defined in PDF 32000_2008.pdf pp. 30.

Decompresses data encoded using the CCITT facsimile standard, reproducing the original data (typically monochrome image data at 1 bit per pixel).'.
	CCITTFaxDecode namespacePath: #(#PDFtalk).
%
# Define class JBIG2Decode
DoIt
Filter
	subclass: 'JBIG2Decode'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	JBIG2Decode category: 'PDFtalk Streams'.
	JBIG2Decode comment: 'PDF Filter as defined in PDF 32000_2008.pdf pp. 31.

Decompresses data encoded using the JBIG2 standard, reproducing the original monochrome (1 bit per pixel) image data (or an approximation of that data).'.
	JBIG2Decode namespacePath: #(#PDFtalk).
%
# Define class TypedStream
DoIt
PDFStream
	subclass: 'TypedStream'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TypedStream category: 'PDFtalk Streams'.
	TypedStream comment: 'Super class of all streams with a /Type key'.
	TypedStream namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| package policy |
	package := GsPackageLibrary createPackageNamed: #SessionMethods.
	GsPackageLibrary installPackage: package.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: FileInSymbolDictionary.
	policy externalSymbolList: (GsSession currentSession symbolList asArray copyWithout: FileInSymbolDictionary).
	policy enable.
%
category: '*PDFtalk Streams-instance creation'
classmethod: ByteArray
fromASCII85String: aString
	^(String fromASCII85: aString) asByteArray
%
category: '*PDFtalk Streams-printing'
method: ByteArray
asASCII85String
	"<String>
	formatted to 80 columns;
	except when a $' is the last character of a line. In this case, all next $' chars are added.
	Added tab as first character to not disturb Gemstone by an $% as first Character"

	| wst rst |
	wst := String new writeStream.
	wst
		nextPut: $(;
		nextPutAll: self class name asString;
		space;
		nextPutAll: #fromASCII85String: asString.
	rst := self asString asASCII85 printString readStream.
	[rst atEnd] whileFalse: [
		| line |
		line := rst nextAvailable: 80.
		wst
			cr;
			tab;
			nextPutAll: line.
		line last = $' ifTrue: [
			[rst peek = $'] whileTrue: [wst nextPut: rst next]]].
	wst nextPut: $).
	^wst contents
%
method: ByteArray
printvalueWith: printer
	| wst |
	self size > 200 ifTrue: [
		^LiteralPrintvalue string: self asASCII85String].
	wst := WriteStream on: (String new: self size).
	wst nextPutAll: '#['.
	self do: [:element | wst nextPutAll: element asSource] separatedBy: [wst space].
	wst nextPut: $].
	^LiteralPrintvalue string: wst contents
%
DoIt
	| dict policy |
	dict := SymbolDictionary new.
	dict at: #UNWRITABLE put: dict.
	dict immediateInvariant.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: dict.
	policy externalSymbolList: Array new.
	policy enable.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
classmethod: ASCII85Decode
pdfTypeDefinition

	^PDFTypeDefinition
		name: #ASCII85Decode
		supertype: #Filter
		section: '7.4.3'
		documentation: 'Decodes data encoded in an ASCII base-85 representation, reproducing the original binary data.'
%
category: 'filtering'
method: ASCII85Decode
decoded
	self external isSignalledException ifTrue: [
		^self external].
	^[String fromASCII85: self external] on: UserDefinedError do: [:ex |
		ex resignalAs: (ReadError new messageText: ex messageText)]
%
method: ASCII85Decode
encoded
	self internal isSignalledException ifTrue: [
		^self internal].
	^self internal asASCII85
%
category: 'accessing'
classmethod: ASCIIHexDecode
pdfTypeDefinition

	^PDFTypeDefinition
		name: #ASCIIHexDecode
		supertype: #Filter
		section: '7.4.2'
		documentation: 'Decodes data encoded in an ASCII hexadecimal representation, reproducing the original binary data.'
%
category: 'accessing'
method: ASCIIHexDecode
decoded
	self external isSignalledException ifTrue: [
		^self external].
	^HexStringEncoder decoded: (self external readStream upTo: $>)
%
method: ASCIIHexDecode
encoded
	"<String>"

	self internal isSignalledException ifTrue: [
		^self internal].
	^(HexStringEncoder encoded: self internal) asString , '>'
%
category: 'accessing'
classmethod: AveragePredictor
type
	^3
%
category: 'filtering'
method: AveragePredictor
predict: aByteArray withUpperRow: upperByteArray
	"<ByteArray>"

	| filtered |
	filtered := ByteArray new: aByteArray size.
	1 to: aByteArray size do: [:index |
		| indexLeft a b output |
		indexLeft := index - self offsetLeft.
		a := indexLeft strictlyPositive
			ifTrue: [aByteArray at: indexLeft]
			ifFalse: [0].
		b := upperByteArray at: index.
		output := (aByteArray at: index) - ((a + b) // 2).
		filtered at: index put: output \\ 256].
	^filtered
%
method: AveragePredictor
unpredict: filteredByteArray withUpperRow: upperReconstructedByteArray
	"<ByteArray>"

	| reconstructed |
	reconstructed := ByteArray new: filteredByteArray size.
	1 to: filteredByteArray size do: [:index |
		| indexLeft a b output |
		indexLeft := index - self offsetLeft.
		a := indexLeft strictlyPositive
			ifTrue: [reconstructed at: indexLeft]
			ifFalse: [0].
		b := upperReconstructedByteArray at: index.
		output := (filteredByteArray at: index) + ((a + b) // 2).
		reconstructed at: index put: output \\ 256].
	^reconstructed
%
category: 'accessing'
classmethod: CCITTFaxDecode
pdfTypeDefinition

	^PDFTypeDefinition
		name: #CCITTFaxDecode
		supertype: #Filter
		section: '7.4.6'
		documentation: 'Decompresses data encoded using the CCITT facsimile standard, reproducing the original data (typically monochrome image data at 1 bit per pixel).'
%
category: 'accessing'
classmethod: Crypt
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Crypt
		supertype: #Filter
		version: #(1 5)
		section: '7.4.10'
		documentation: 'Decrypts data encrypted by a security handler, reproducing the data as it was before encryption.'
%
category: 'accessing'
classmethod: DCTDecode
pdfTypeDefinition

	^PDFTypeDefinition
		name: #DCTDecode
		supertype: #Filter
		section: '7.4.8'
		documentation: 'Decompresses data encoded using a DCT (discrete cosine transform) technique based on the JPEG standard, reproducing image sample data that approximates the original data.'
%
category: 'accessing'
classmethod: Filter
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Filter
		supertype: #Object
		section: '7.4'
		documentation: 'An option when reading stream data is to decode it using a filter to produce the original non-encoded data.
		Whether to do so and which decoding filter or filters to use may be specified in the stream dictionary.'
%
classmethod: Filter
subclassNamed: aSymbol
	"<Filter class>
	assumes that all subclasses are defined in namespace #{PDFtalk}"

	| classOrganizer |
	classOrganizer := ClassOrganizer
		pdfNewWithRoot: Filter
		symbolList: (SymbolList with: PDFtalk).
	^(classOrganizer allSubclassesOf: Filter) detect: [:subclass | subclass name = aSymbol]
%
category: 'instance creation'
classmethod: Filter
external: externalByteString
	^self external: externalByteString with: Dictionary new
%
classmethod: Filter
external: externalByteString with: aDecodeParms
	| inst |
	inst := self new.
	inst initializeInternal: nil external: externalByteString from: aDecodeParms.
	^inst
%
classmethod: Filter
internal: internalByteString
	^self internal: internalByteString with: Dictionary new
%
classmethod: Filter
internal: internalByteString with: aDecodeParms
	| inst |
	inst := self new.
	inst initializeInternal: internalByteString external: nil from: aDecodeParms.
	^inst
%
category: 'accessing'
method: Filter
decoded
	"<ByteString>"

	^Unsupported raiseSignal: self class name asString, ' is not supported (yet)'
%
method: Filter
encoded
	"<ByteString>"

	^Unsupported raiseSignal: self class name asString, ' is not supported (yet)'
%
method: Filter
external
	^external ifNil: [
		internal ifNotNil: [external := [self encoded] on: Error do: [:ex | ex return: ex]]]
%
method: Filter
internal
	^internal ifNil: [external ifNotNil: [internal := [self decoded] on: Error do: [:ex | ex return: ex]]]
%
category: 'initialize-release'
method: Filter
initializeInternal: internalByteString external: externalByteString from: aDecodeParmsOrNil
	"initialize the filter with either internal or external content.
	Use the parameters in aDecodeParmsOrNil"

	((internalByteString isNil and: [
	externalByteString isNil]) or: [
		internalByteString notNil and: [
		externalByteString notNil]]) ifTrue: [
			^Error raiseSignal: 'A filter can only be created with EITHER the internal OR the external bytes'].
	internal := internalByteString.
	external := externalByteString.
	aDecodeParmsOrNil ifNotNil: [self initializeParameters: aDecodeParmsOrNil]
%
method: Filter
initializeParameters: aDecodeParms
	"don't do anything by default.
	Subclasses may redefine this"
%
category: 'writing'
method: Filter
writePDFOn: aWriter indent: anInteger
	self class name asPDF writePDFOn: aWriter indent: anInteger
%
category: 'accessing'
classmethod: FlateDecode
pdfTypeDefinition
	^PDFTypeDefinition
		name: #FlateDecode
		supertype: #Filter
		version: #(1 2)
		section: '7.4.4'
		documentation: 'Decompresses data encoded using the zlib/deflate compression method, reproducing the original text or binary data.'
%
category: 'accessing'
method: FlateDecode
minPdfVersion
	^Version pdf1_2
%
category: 'filtering'
method: FlateDecode
compressed: aByteString
	"<ByteString>"

	^(self compressedBytes: aByteString asByteArray) asString
%
method: FlateDecode
compressedBytes: aByteArray
	"<ByteArray>
	see RFC1950 (ZLIB Compressed Data Format Specification version 3.3)
	https://tools.ietf.org/html/rfc1950"

	| wst |
	wst := ByteWriteStream bigEndianOn: ByteArray new.
	"CM (Compression Method) = 2r1000 = 8 => deflate
	CINFO = 2r0111 = 7 => 2^7 = 32K window size"
	wst nextPut: 2r01111000.
	"FLG (Flags)
	FCHECK = bits 0 to 4 (2r11010) => value to make the unsigned short of the header be a multiple of 31. 
		(2r01111000 * 256 + 2r11011010) rem: 31 = 0
	FDICT (preset Dictionary) = bit 5 = 0
	FLEVEL (Compression Level) = bits 6 and 7 = 2r11 => maximum compression"
	wst nextPut: 2r11011010.
	wst nextPutAll: aByteArray _compressBytes.
	wst nextPutUnsignedLong: (CZstream adler32: aByteArray initialCrc: 1).
	^wst contents
%
method: FlateDecode
decompressed: aByteString
	"<ByteString>"

	^(self decompressedBytes: aByteString asByteArray) asString
%
method: FlateDecode
decompressedBytes: aByteArray
	"<ByteArray>"

	| rst header1 header2 compressed uncompressed footer |
	rst := ByteReadStream bigEndianOn: aByteArray.
	header1 := rst next.
	(header1 bitAnd: 16rF) = 8 ifFalse: [
		^self error: 'Only DEFLATE (8) is permitted as compression method'].
	(header1 bitShift: -4) > 7 ifTrue: [
		^self error: 'A window size is too big for this compression method'].
	header2 := rst next.
	(header2 bitAnd: 2r100000) isZero ifFalse: [
		^self error: 'preset dictionaries are not supported'].
	(header1 * 256 + header2 rem: 31) isZero ifFalse: [
		^self error: 'the checksum of the header is not correct'].
	compressed := rst next: aByteArray size - 6.
	uncompressed := compressed _decompressBytes.
	footer := rst nextUnsignedLong.
	footer = (CZstream adler32: uncompressed initialCrc: 1) ifFalse: [
		^self error: 'the ADLER32 checksum is not correct'].
	^uncompressed
%
category: 'accessing'
classmethod: JBIG2Decode
pdfTypeDefinition
	^PDFTypeDefinition
		name: #JBIG2Decode
		supertype: #Filter
		version: #(1 4)
		section: '7.4.7'
		documentation: 'Decompresses data encoded using the JBIG2 standard, reproducing the original monochrome (1 bit per pixel) image data (or an approximation of that data).'
%
category: 'accessing'
classmethod: JPXDecode
pdfTypeDefinition
	^PDFTypeDefinition
		name: #JPXDecode
		supertype: #Filter
		version: #(1 5)
		section: '7.4.9'
		documentation: 'The JPXDecode filter decodes data that has been encoded using the JPEG2000 compression method, an ISO standard for the compression and packaging of image data.'
%
category: 'accessing'
classmethod: LZWDecode
pdfTypeDefinition

	^PDFTypeDefinition
		name: #LZWDecode
		supertype: #Filter
		section: '7.4.4'
		documentation: 'Decompresses data encoded using the LZW (Lempel-Ziv-Welch) adaptive compression method, reproducing the original text or binary data.

This filter is depreciated and not (initially implemented).'
%
category: 'accessing'
method: LZWDecode
earlyChange
	"<Integer>
	An indication of when to increase the code length.
	If the value of this entry is 0, code length increases shall be postponed as long as possible.
	If the value is 1, code length increases shall occur one code early.
	This parameter is included because LZW sample code distributed by some vendors increases the code length one code earlier than necessary.
	Default value: 1."

	^earlyChange ifNil: [1]
%
category: 'filtering'
method: LZWDecode
compressed: aByteString
	^self notYetImplemented
%
method: LZWDecode
decompressed: aByteString
	^self notYetImplemented
%
category: 'initialize-release'
method: LZWDecode
initializeParameters: aDecodeParms
	super initializeParameters: aDecodeParms.
	earlyChange := (aDecodeParms at: #EarlyChange ifAbsent: [nil]) value
%
category: 'accessing'
classmethod: LZWFilterParameter
pdfTypeDefinition

	^PDFTypeDefinition
		name: #LZWFilterParameter
		supertype: #Dictionary
		section: '7.4.4.3'
		documentation: 'The LZWDecode and FlateDecode filters shall accept optional parameters to control the decoding process.
NOTE
	Most of these parameters are related to techniques that reduce the size of compressed sampled images (rectangular arrays of colour values).
For example, image data typically changes very little from sample to sample.
Therefore, subtracting the values of adjacent samples (a process called differencing), and encoding the differences rather than the raw sample values, can reduce the size of the output data.
Furthermore, when the image data contains several colour components (red-green-blue or cyan-magenta-yellow-black) per sample, taking the difference between the values of corresponding components in adjacent samples, rather than between different colour components in the same sample, often reduces the output data size.'
%
category: 'accessing entries'
method: LZWFilterParameter
EarlyChange
	<type: #Integer>
	<attribute: 1 documentation: 'An indication of when to increase the code length.
If the value of this entry is 0, code length increases shall be postponed as long as possible.
If the value is 1, code length increases shall occur one code early.
This parameter is included because LZW sample code distributed by some vendors increases the code length one code earlier than necessary'>
	^self objectAt: #EarlyChange ifAbsent: [1 asPDF]
%
category: 'accessing'
classmethod: NoPredictor
type
	^0
%
category: 'filtering'
method: NoPredictor
predict: aByteArray withUpperRow: upperByteArray
	^aByteArray copy
%
method: NoPredictor
unpredict: filteredByteArray withUpperRow: upperReconstructedByteArray
	^filteredByteArray copy
%
category: 'accessing'
classmethod: PaethPredictor
type
	^4
%
category: 'filtering'
method: PaethPredictor
a: a b: b c: c
	| p pa pb pc |
	p := a + b - c.
	pa := (p - a) abs.
	pb := (p - b) abs.
	pc := (p - c) abs.
	(pa <= pb and: [
	pa <= pc]) ifTrue: [
			^a].
	pb <= pc ifTrue: [
		^b].
	^c
%
method: PaethPredictor
predict: aByteArray withUpperRow: upperByteArray
	"<ByteArray>"

	| filtered |
	filtered := ByteArray new: aByteArray size.
	1 to: aByteArray size do: [:index |
		| indexLeft a b c output |
		b := upperByteArray at: index.
		indexLeft := index - self offsetLeft.
		indexLeft strictlyPositive
			ifTrue: [
			a := aByteArray at: indexLeft.
			c := upperByteArray at: indexLeft]
			ifFalse: [
			a := c := 0].
		output := (aByteArray at: index) - (self a: a b: b c: c).
		filtered at: index put: output \\ 256].
	^filtered
%
method: PaethPredictor
unpredict: filteredByteArray withUpperRow: upperReconstructedByteArray
	"<ByteArray>"

	| reconstructed |
	reconstructed := ByteArray new: filteredByteArray size.
	1 to: filteredByteArray size do: [:index |
		| indexLeft a b c output |
		b := upperReconstructedByteArray at: index.
		indexLeft := index - self offsetLeft.
		indexLeft strictlyPositive
			ifTrue: [
			a := reconstructed at: indexLeft.
			c := upperReconstructedByteArray at: indexLeft]
			ifFalse: [
			a := c := 0].
		output := (filteredByteArray at: index) + (self a: a b: b c: c).
		reconstructed at: index put: output \\ 256].
	^reconstructed
%
category: 'accessing'
classmethod: PDFStream
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Stream
		supertype: #Object
		section: '7.3.8'
		documentation: 'A stream object, like a string object, is a sequence of bytes.
Furthermore, a stream may be of unlimited length, whereas a string shall be subject to an implementation limit.
For this reason, objects with potentially large amounts of data, such as images and page descriptions, shall be represented as streams.'
%
category: 'instance creation'
classmethod: PDFStream
newFrom: aPDFObject

	^self
		on: aPDFObject content
		external: aPDFObject external
		encrypted: aPDFObject encrypted
%
classmethod: PDFStream
on: anOrderedDictionary external: externalByteString
	^self on: anOrderedDictionary external: externalByteString encrypted: false
%
classmethod: PDFStream
on: anOrderedDictionary external: externalByteString encrypted: encryptedBoolean
	| inst |
	inst := self new.
	inst
		initializeContent: anOrderedDictionary
		external: externalByteString
		encrypted: encryptedBoolean.
	^inst
%
classmethod: PDFStream
on: anOrderedDictionary externalBytes: externalByteArray
	^self on: anOrderedDictionary external: externalByteArray asString encrypted: false
%
classmethod: PDFStream
on: anOrderedDictionary internal: internalByteString
	^self on: anOrderedDictionary internal: internalByteString encrypted: false
%
classmethod: PDFStream
on: anOrderedDictionary internal: internalByteString encrypted: encryptedBoolean
	| inst |
	inst := self new.
	inst
		initializeContent: anOrderedDictionary
		internal: internalByteString
		encrypted: encryptedBoolean.
	^inst
%
category: 'testing'
classmethod: PDFStream
isClassForDictionary: aDictionary
	^false
%
classmethod: PDFStream
isClassForStream: aStream
	^true
%
category: 'accessing'
method: PDFStream
addFilter: aSymbol
	"Filters are added in front as the outer filter.
		aStream addFilter: #FlateDecode.
		aStream addFilter: #ASCIIHexDecode.
	result in [/ASCIIHexDecode /FlateDecode].
	This encodes the internal contents first with /FlateDecode followed by /ASCIIHexDecode to produce the external representation.
	Decoding first applies /ASCIIHexDecode and on the result /FlateDecode to yield the unfiltered internal contents."

	| oldFilter |
	(self hasKey: #Filter) ifFalse: [
		^self filter: aSymbol].
	oldFilter := (self at: #Filter) asSmalltalkValue.
	oldFilter isSymbol ifTrue: [
		^self filter: (Array
			with: aSymbol
			with: oldFilter)].
	self filter: (Array with: aSymbol) , oldFilter
%
method: PDFStream
contents: internalByteString
	internal := internalByteString.
	self resetExternal
%
method: PDFStream
encrypted
	"<Boolean>
	true, iff the string is encrypted"

	^encrypted ifNil: [false]
%
method: PDFStream
external
	"<ByteString>
	the internal decoded contents"

	^external ifNil: [internal ifNotNil: [external := self externalValue]]
%
method: PDFStream
externalValue
	"<ByteString>"

	self filter isEmpty ifTrue: [
		^self internal].
	^self filter first external
%
method: PDFStream
filter
	"<SequenceableCollection of: Filter>"

	^filter ifNil: [
		filter := internal ifNil: [self newFiltersFromExternal] ifNotNil: [
			self newFiltersFromInternal]]
%
method: PDFStream
filter: aSymbolOrArrayOfSymbol
	self at: #Filter put: aSymbolOrArrayOfSymbol.
	internal ifNotNil: [self resetExternal]
%
method: PDFStream
filterClasses
	^self filterNames collect: [:filterName |
		((PDF typeAt: #Filter) subtypes detect: [:type | type name = filterName asSmalltalkValue]) implementingClass]
%
method: PDFStream
filterNames
	"<Array of: Name>"

	| filterAttr |
	filterAttr := self Filter.
	(filterAttr isKindOf: PDF Array) ifTrue: [
		^filterAttr content].
	^Array with: filterAttr
%
method: PDFStream
internal
	"<ByteString>
	the internal decoded contents"

	^internal ifNil: [external ifNotNil: [internal := self internalValue]]
%
method: PDFStream
internalValue
	"<ByteString | PDF.Error>"

	self encrypted ifTrue: [
		^'*** Encrypted ***'].
	self filter isEmpty ifTrue: [
		^self external].
	^self filter last internal
%
method: PDFStream
newFiltersFromExternal
	| filterClasses decodeParams decodeParamsReadStream filters |
	filterClasses := self filterClasses.
	filterClasses isEmpty ifTrue: [
		^#()].
	filterClasses size = 1 ifTrue: [
		^Array with: (filterClasses first external: self external with: self DecodeParms)].
	decodeParams := self objectAt: #DecodeParms ifAbsent: [
		(Array new: filterClasses size withAll: nil) asPDF].
	decodeParamsReadStream := (decodeParams content collect: #pdfObject) readStream.
	filters := OrderedCollection new.
	filterClasses inject: self external into: [:input :filterClass |
		| aFilter |
		aFilter := filterClass external: input with: decodeParamsReadStream next.
		filters add: aFilter.
		aFilter internal].
	^filters
%
method: PDFStream
newFiltersFromInternal
	| filters |
	filters := OrderedCollection new.
	self filterClasses reverse inject: self internal into: [:input :filterClass |
		| aFilter |
		aFilter := filterClass internal: input with: self DecodeParms.
		filters add: aFilter.
		[aFilter external] on: Error do: [:ex |
			^filters reverse]].
	^filters reverse
%
method: PDFStream
readStream
	"<ReadStream on: Byte>"

	^self asByteArray readStream
%
method: PDFStream
topClassLevel
	^4
%
category: 'accessing entries'
method: PDFStream
DecodeParms
	<type: #ZipFilterParameter>
	<type: #Array>
	<attribute: 3 documentation: 'A parameter dictionary or an array of such dictionaries, used by the filters specified by Filter.
If there is only one filter and that filter has parameters, DecodeParms shall be set to the filterâs parameter dictionary unless all the filterâs parameters have their default values, in which case the DecodeParms entry may be omitted.
If there are multiple filters and any of the filters has parameters set to nondefault values, DecodeParms shall be an array with one entry for each filter: either the parameter dictionary for that filter, or the null object if that filter has no parameters (or if all of its parameters have their default values).
If none of the filters have parameters, or if all their parameters have default values, the DecodeParms entry may be omitted.'>
	^self objectAt: #DecodeParms ifAbsent: [PDF Dictionary empty]
%
method: PDFStream
DL
	<type: #Integer>
	<version: 1 dot: 5>
	<attribute: 7 documentation: 'A non-negative integer representing the number of bytes in the decoded (defiltered) stream.
It can be used to determine, for example, whether enough disk space is available to write a stream to a file.
This value shall be considered a hint only; for some stream filters, it may not be possible to determine this value precisely.'>
	^self objectAt: #DL ifAbsent: [nil]
%
method: PDFStream
F
	"<#fileSpecification | nil>"

	<type: #String>
	<type: #Dictionary>
	<version: 1 dot: 2>
	<attribute: 4 documentation: 'The file containing the stream data.
If this entry is present, the bytes between stream and endstreamshall be ignored.
However, the Length entry should still specify the number of those bytes (usually, there are no bytes and Length is 0).
The filters that are applied to the file data shall be specified by FFilter and the filter parameters shall be specified by FDecodeParms.'>
	^self objectAt: #F ifAbsent: ['' asPDF]
%
method: PDFStream
FDecodeParms
	<type: #Dictionary>
	<typeArrayOf: #Dictionary>
	<version: 1 dot: 2>
	<attribute: 6 documentation: 'A parameter dictionary, or an array of such dictionaries, used by the filters specified by FFilter.
The same rules apply as for DecodeParms.'>
	^self objectAt: #FDecodeParms ifAbsent: [PDF Dictionary empty]
%
method: PDFStream
FFilter
	<type: #Name>
	<typeArrayOf: #Name>
	<version: 1 dot: 2>
	<attribute: 5 documentation: 'The name of a filter to be applied in processing the data found in the streamâs external file, or an array of zero, one or several such names.
The same rules apply as for Filter.'>
	^self objectAt: #FFilter ifAbsent: [nil]
%
method: PDFStream
Filter
	<type: #Name>
	<typeArrayOf: #Name>
	<attribute: 2 documentation: 'The name of a filter that shall be applied in processing the stream data found between the keywords stream and endstream, or an array of zero, one or several names.
Multiple filters shall be specified in the order in which they are to be applied.'>
	^self objectAt: #Filter ifAbsent: [#() asPDF]
%
method: PDFStream
Length
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'The number of bytes from the beginning of the line following the keyword stream to the last byte just before the keyword endstream.
(There may be an additional EOL marker, preceding endstream, that is not included in the count and is not logically part of the stream data.)'>
	^self objectAt: #Length
%
category: 'comparing'
method: PDFStream
= anObject
	^super = anObject and: [
	self internal = anObject internal and: [
	self external = anObject external]]
%
method: PDFStream
hash
	^super hash bitXor: (self internal hash bitXor: self external hash)
%
category: 'converting'
method: PDFStream
asByteArray
	"<ByteArray>"

	^self internal asByteArray
%
method: PDFStream
asDictionary
	"<Dictionary>
	plain Dictionary without the stream"

	| dict |
	dict := PDF Dictionary new.
	self keysAndValuesDo: [:key :value | dict at: key put: value].
	^dict
%
category: 'copying'
method: PDFStream
copy
	^self class on: self content internal: self internal
%
category: 'initialize-release'
method: PDFStream
initializeContent: anOrderedDictionary external: externalByteString encrypted: encryptedBoolean
	self initializeContent: anOrderedDictionary.
	internal := nil.
	external := externalByteString.
	encrypted := encryptedBoolean.
	self at: #Length put: self external size
%
method: PDFStream
initializeContent: anOrderedDictionary internal: internalByteString encrypted: encryptedBoolean
	self initializeContent: anOrderedDictionary.
	internal := internalByteString.
	external := nil.
	encrypted := encryptedBoolean.
	self at: #Length put: self external size
%
method: PDFStream
resetExternal
	"internal has changed. Force external to be recomputed"

	external := nil.
	filter := nil.
	self at: #Length put: self external size
%
category: 'testing'
method: PDFStream
canBeExemplarOf: aType
	^aType implementingClass isClassForStream: self
%
category: 'tracing'
method: PDFStream
copyWithNewReferencesIn: visited
	| newDict |
	newDict := Valuemap new: self size.
	self content keysAndValuesDo: [:key :pdfObject |
		newDict at: key put: (pdfObject copyWithNewReferencesIn: visited)].
	^self class on: newDict external: self external encrypted: self encrypted
%
category: 'writing'
method: PDFStream
writePDFOn: aWriter indent: anInteger
	super writePDFOn: aWriter indent: anInteger.
	aWriter
		cr;
		nextPutAll: 'stream' asByteArray;
		cr;
		nextPutAll: (self external asByteArray ifNil: [ByteArray new]);
		cr;
		nextPutAll: 'endstream' asByteArray
%
category: 'accessing'
classmethod: PNGPredictor
type
	"<Integer>"

	^self subclassResponsibility
%
category: 'instance creation'
classmethod: PNGPredictor
offsetLeft: anInteger
	"implemented this way for easier testing"

	| inst |
	inst := self new.
	inst initializeOffsetLeft: anInteger.
	^inst
%
classmethod: PNGPredictor
subclassFor: anInteger
	"assumes that all subclasses are defined in namespace #{PDFtalk}"

	| classOrganizer |
	classOrganizer := ClassOrganizer
		pdfNewWithRoot: PNGPredictor
		symbolList: (SymbolList with: PDFtalk).
	^(classOrganizer subclassesOf: PNGPredictor) detect: [:subclass | subclass type = anInteger]
%
category: 'accessing'
method: PNGPredictor
offsetLeft
	"<Integer>
	the distance to the left pixel in number of bytes"

	^offsetLeft ifNil: [1]
%
method: PNGPredictor
type
	^self class type
%
category: 'filtering'
method: PNGPredictor
predict: aByteArray withUpperRow: upperByteArray
	"<ByteArray>"

	^self subclassResponsibility
%
method: PNGPredictor
unpredict: filteredByteArray withUpperRow: upperReconstructedByteArray
	"<ByteArray>"

	^self subclassResponsibility
%
category: 'initialize-release'
method: PNGPredictor
initializeOffsetLeft: anInteger
	offsetLeft := anInteger
%
category: 'accessing'
classmethod: RunLengthDecode
pdfTypeDefinition

	^PDFTypeDefinition
		name: #RunLengthDecode
		supertype: #Filter
		section: '7.4.5'
		documentation: 'Decompresses data encoded using a byte-oriented run-length encoding algorithm, reproducing the original text or binary data (typically monochrome image data, or any data that contains frequent long runs of a single byte value).'
%
category: 'accessing'
classmethod: SubPredictor
type
	^1
%
category: 'filtering'
method: SubPredictor
predict: aByteArray withUpperRow: upperByteArray
	"<ByteArray>"

	| filtered |
	filtered := ByteArray new: aByteArray size.
	1 to: aByteArray size do: [:index |
		| indexLeft a output |
		indexLeft := index - self offsetLeft.
		a := indexLeft strictlyPositive
			ifTrue: [aByteArray at: indexLeft]
			ifFalse: [0].
		output := (aByteArray at: index) - a.
		filtered at: index put: output \\ 256].
	^filtered
%
method: SubPredictor
unpredict: filteredByteArray withUpperRow: upperReconstructedByteArray
	"<ByteArray>"

	| reconstructed |
	reconstructed := ByteArray new: filteredByteArray size.
	1 to: filteredByteArray size do: [:index |
		| indexLeft a output |
		indexLeft := index - self offsetLeft.
		a := indexLeft strictlyPositive
			ifTrue: [reconstructed at: indexLeft]
			ifFalse: [0].
		output := (filteredByteArray at: index) + a.
		reconstructed at: index put: output \\ 256].
	^reconstructed
%
category: 'accessing'
classmethod: Textstream
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Textstream
		supertype: #Stream
		version: #(1 5)
		section: '7.9.3'
		documentation: 'A text stream shall be a PDF stream object whose unencoded bytes shall meet the same requirements as a text string with respect to encoding, byte order, and lead bytes.'
%
category: 'converting'
method: Textstream
asString
	"<Core.String>
	the value as a Smalltalk String; properly encoded to be displayed to humans.
	Textstring takes care of the encoding"

	^((PDF classAt: #Textstring) on: self internal) asString
%
category: 'instance creation'
classmethod: TIFFPredictor
newFor: aZipFilter
	| inst |
	inst := self new.
	inst initializeFrom: aZipFilter.
	^inst
%
category: 'filtering'
method: TIFFPredictor
predicted: aByteString
	^Unsupported newSignal: 'TIFF prediction is not supported'
%
method: TIFFPredictor
unpredicted: aByteString
	^Unsupported newSignal: 'TIFF prediction is not supported'
%
category: 'initialize-release'
method: TIFFPredictor
initializeFrom: aZipFilter
	"do nothing for now"
%
category: 'instance creation'
classmethod: TypedStream
empty
	| inst |
	inst := self new.
	inst at: #Type put: self type.
	^inst
%
category: 'accessing'
method: TypedStream
attributesRequired
	^self sortedAttributePragmas select: [:pragma |
		pragma selector == #Type or: [
		self attributeIsRequired: pragma]]
%
category: 'accessing entries'
method: TypedStream
Type
	<type: #Name>
	<required>
	<attribute: 1 documentation: 'The type of PDF object that this dictionary describes.

The value of the Type entry can almost always be inferred from context.
The value of an entry in a page''s font resource dictionary, for example, shall be a font object;
therefore, the Type entry in a font dictionary serves primarily as documentation and as information for error checking.
The Type entry shall not be required unless so stated in its description; however, if the entry is present, it shall have the correct value.
In addition, the value of the Type entry in any dictionary, even in private data, shall be either a name defined in this standard or a registered name.'>
	^self objectAt: #Type
%
category: 'accessing'
classmethod: UpPredictor
type
	^2
%
category: 'filtering'
method: UpPredictor
predict: aByteArray withUpperRow: upperByteArray
	"<ByteArray>"

	| filtered |
	filtered := ByteArray new: aByteArray size.
	1 to: aByteArray size do: [:index |
		| output |
		output := (aByteArray at: index) - (upperByteArray at: index).
		filtered at: index put: output \\ 256].
	^filtered
%
method: UpPredictor
unpredict: filteredByteArray withUpperRow: upperReconstructedByteArray
	| reconstructed |
	reconstructed := ByteArray new: filteredByteArray size.
	1 to: filteredByteArray size do: [:index |
		| output |
		output := (filteredByteArray at: index) + (upperReconstructedByteArray at: index).
		reconstructed at: index put: output \\ 256].
	^reconstructed
%
category: 'accessing'
method: ZipFilter
bitsPerComponent
	"<Integer>
	(May be used only if Predictor is greater than 1)
	The number of bits used to represent each colour component in a sample.
	Valid values are 1, 2, 4, 8, and (PDF 1.5) 16.
	Default value: 8."

	^bitsPerComponent ifNil: [8]
%
method: ZipFilter
colors
	"<Integer>
	(May be used only if Predictor is greater than 1)
	The number of interleaved colour components per sample.
	Valid values are 1 to 4 (PDF 1.0) and 1 or greater (PDF 1.3).
	Default value: 1."

	^colors ifNil: [1]
%
method: ZipFilter
columns
	"<Integer>
	(May be used only if Predictor is greater than 1)
	The number of samples in each row.
	Default value: 1."

	^columns ifNil: [1]
%
method: ZipFilter
decoded
	(self external isSignalledException or: [
	self external isEmpty]) ifTrue: [
			^self external].
	^self unpredicted: self predicted
%
method: ZipFilter
encoded
	self internal isSignalledException ifTrue: [
		^self internal].
	^self compressed: self predicted
%
method: ZipFilter
minPdfVersion
	^Version pdf1_0
%
method: ZipFilter
pdfVersion
	self predictor = 1 ifTrue: [
		^self minPdfVersion].
	self bitsPerComponent = 16 ifTrue: [
		^Version pdf1_5].
	self colors > 4 ifTrue: [
		^Version pdf1_3].
	^self minPdfVersion
%
method: ZipFilter
pixelDistance
	"<Integer>
	the horizontal distance in bytes between corresponding bytes of adjacent pixels"

	self bitsPerComponent < 8 ifTrue: [
		^1].
	^self colors * self bitsPerComponent // 8
%
method: ZipFilter
predicted
	"<ByteString>
	Buffer for prediction"

	^predicted ifNil: [
		predicted := internal ifNotNil: [self predicted: self internal] ifNil: [
			self decompressed: self external]]
%
method: ZipFilter
predictor
	"<Integer>
	A code that selects the predictor algorithm, if any.
	If the value of this entry is 1, the filter shall assume that the normal algorithm was used to encode the data, without prediction.
	If the value is greater than 1, the filter shall assume that the data was differenced before being encoded, and Predictor selects the predictor algorithm.
	Default value: 1."

	^predictor ifNil: [1]
%
method: ZipFilter
predictorAt: anInteger
	"<PNGPredictor>"

	^self predictors at: anInteger ifAbsentPut: [
		(PNGPredictor subclassFor: anInteger) offsetLeft: self pixelDistance]
%
method: ZipFilter
predictors
	"<Dictionary key: Integer value: PNGPredictor>
	Cache for row predictors. The key can be between 0 and 4"

	^predictors ifNil: [predictors := IdentityDictionary new]
%
category: 'filtering'
method: ZipFilter
compressed: aByteString
	"<ByteString>"

	^self subclassResponsibility
%
method: ZipFilter
decompressed: aByteString
	"<ByteString>"

	^self subclassResponsibility
%
method: ZipFilter
predicted: aByteString
	"<ByteString>"

	| bytesPerRow rows rst wst |
	self predictor = 1 ifTrue: [
		^aByteString].
	self predictor = 2 ifTrue: [
		^(TIFFPredictor newFor: self) predicted: aByteString].
	"we deal only with PNG predictors"
	bytesPerRow := self colors * self bitsPerComponent * self columns // 8.
	rows := OrderedCollection new: aByteString size // bytesPerRow.
	rst := aByteString asByteArray readStream.
	[rst atEnd] whileFalse: [rows add: (rst next: bytesPerRow)].
	wst := (ByteArray new: aByteString size + rows size) writeStream.
	rows inject: (ByteArray new: bytesPerRow + 1 withAll: 0) into: [:upperRow :row |
		| rowPredictor predictedRow predictorType |
		predictorType := self predictor - 10.
		predictorType = 5 ifTrue: [
			predictorType := 0].
		rowPredictor := self predictorAt: predictorType.
		wst nextPut: rowPredictor type.
		predictedRow := rowPredictor predict: row withUpperRow: upperRow.
		wst nextPutAll: predictedRow.
		row].
	^wst contents asString
%
method: ZipFilter
unpredicted: aByteString
	"<ByteString>"

	| bytesPerRow rows rst wst |
	self predictor = 1 ifTrue: [
		^aByteString].
	self predictor = 2 ifTrue: [
		^(TIFFPredictor newFor: self) unpredicted: aByteString].
	"we deal only with PNG predictors"
	bytesPerRow := self colors * self bitsPerComponent * self columns // 8 + 1.
	rows := OrderedCollection new: aByteString size // bytesPerRow.
	rst := aByteString asByteArray readStream.
	[rst atEnd] whileFalse: [rows add: (rst next: bytesPerRow)].
	wst := (ByteArray new: aByteString size - rows size) writeStream.
	rows inject: (ByteArray new: bytesPerRow - 1 withAll: 0) into: [:upperRow :row |
		| rowPredictor unpredicted |
		rowPredictor := self predictorAt: row first.
		unpredicted := rowPredictor unpredict: (row allButFirst: 1) withUpperRow: upperRow.
		wst nextPutAll: unpredicted.
		unpredicted].
	^wst contents asString
%
category: 'initialize-release'
method: ZipFilter
initializeParameters: aDecodeParms
	predictor := (aDecodeParms at: #Predictor ifAbsent: [
		^self]) content.
	colors := aDecodeParms at: #Colors ifPresent: #content.
	bitsPerComponent := aDecodeParms at: #BitsPerComponent ifPresent: #content.
	columns := aDecodeParms at: #Columns ifPresent: #content
%
category: 'accessing'
classmethod: ZipFilterParameter
pdfTypeDefinition

	^PDFTypeDefinition
		name: #ZipFilterParameter
		supertype: #Dictionary
		section: '7.4.4.3'
		documentation: 'The LZWDecode and FlateDecode filters shall accept optional parameters to control the decoding process.
NOTE
	Most of these parameters are related to techniques that reduce the size of compressed sampled images (rectangular arrays of colour values).
For example, image data typically changes very little from sample to sample.
Therefore, subtracting the values of adjacent samples (a process called differencing), and encoding the differences rather than the raw sample values, can reduce the size of the output data.
Furthermore, when the image data contains several colour components (red-green-blue or cyan-magenta-yellow-black) per sample, taking the difference between the values of corresponding components in adjacent samples, rather than between different colour components in the same sample, often reduces the output data size'
%
category: 'accessing entries'
method: ZipFilterParameter
BitsPerComponent
	<type: #Integer>
	<attribute: 3 documentation: '(May be used only if Predictor is greater than 1)
The number of bits used to represent each colour component in a sample.
Valid values are 1, 2, 4, 8, and (PDF 1.5) 16'>
	^self objectAt: #BitsPerComponent ifAbsent: [8 asPDF]
%
method: ZipFilterParameter
Colors
	<type: #Integer>
	<attribute: 2 documentation: '(May be used only if Predictor is greater than 1)
The number of interleaved colour components per sample.
Valid values are 1 to 4 (PDF 1.0) and 1 or greater (PDF 1.3)'>
	^self objectAt: #Colors ifAbsent: [1 asPDF]
%
method: ZipFilterParameter
Columns
	<type: #Integer>
	<attribute: 4 documentation: '(May be used only if Predictor is greater than 1)
The number of samples in each row'>
	^self objectAt: #Columns ifAbsent: [1 asPDF]
%
method: ZipFilterParameter
Predictor
	<type: #Integer>
	<attribute: 1 documentation: 'A code that selects the predictor algorithm, if any.
If the value of this entry is 1, the filter shall assume that the normal algorithm was used to encode the data, without prediction.
If the value is greater than 1, the filter shall assume that the data was differenced before being encoded, and Predictor selects the predictor algorithm'>
	^self objectAt: #Predictor ifAbsent: [1 asPDF]
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: '*PDFtalk Streams-accessing type classes'
classmethod: PDF
Stream
	^self classAt: #Stream
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Data Structures'.
	dict at: #comment put: 'PDF Common Data Structures as defined in PDF 32000_2008.pdf section 7.9 and 7.10, pp. 84

As mentioned at the beginning of this clause, there are some general-purpose data structures that are built from the basic object types described in 7.3, "Objects," and are used in many places throughout PDF. This sub-clause describes data structures for text strings, dates, rectangles, name trees, and number trees.
'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Data Structures'.
	dict at: #storeVersion put: '2.3.4.0'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class NumberTree
DoIt
PDFDictionary
	subclass: 'NumberTree'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NumberTree category: 'PDFtalk Data Structures'.
	NumberTree comment: 'PDF Number Trees as defined in PDF 32000_2008.pdf pp. 91.

A number tree is similar to a name tree (see NameTree), except that its keys shall be integers instead of strings and shall be sorted in ascending numerical order.
The entries in the leaf (or root) nodes containing the key-value pairs shall be named Nums instead of Names as in a name tree.'.
	NumberTree namespacePath: #(#PDFtalk).
%
# Define class NumberTreeLeaf
DoIt
NumberTree
	subclass: 'NumberTreeLeaf'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NumberTreeLeaf category: 'PDFtalk Data Structures'.
	NumberTreeLeaf comment: 'PDF Number Trees as defined in PDF 32000_2008.pdf pp. 91.

A number tree is similar to a name tree (see NameTree), except that its keys shall be integers instead of strings and shall be sorted in ascending numerical order.
The entries in the leaf (or root) nodes containing the key-value pairs shall be named Nums instead of Names as in a name tree.'.
	NumberTreeLeaf namespacePath: #(#PDFtalk).
%
# Define class FunctionStream
DoIt
PDFStream
	subclass: 'FunctionStream'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FunctionStream category: 'PDFtalk Data Structures'.
	FunctionStream comment: 'PDF Function Dictionary as defined in PDF 32000_2008.pdf pp. 92.

PDF is not a programming language, and a PDF file is not a program.
However, PDF provides several types of function objects (PDF 1.2) that represent parameterized classes of functions, including mathematical formulas and sampled representations with arbitrary resolution.'.
	FunctionStream namespacePath: #(#PDFtalk).
%
# Define class Identity
DoIt
Name
	subclass: 'Identity'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Identity category: 'PDFtalk Data Structures'.
	Identity comment: 'the identity function'.
	Identity namespacePath: #(#PDFtalk).
%
# Define class Rectangle
DoIt
PDFArray
	subclass: 'Rectangle'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Rectangle category: 'PDFtalk Data Structures'.
	Rectangle comment: 'PDF Rectangle as defined in PDF 32000_2008.pdf, section 7.9.5, pp. 88.

Rectangles are used to describe locations on a page and bounding boxes for a variety of objects.
A rectangle shall be written as an array of four numbers giving the coordinates of a pair of diagonally opposite corners.

NOTE
Although rectangles are conventionally specified by their lower-left and upper-right corners, it is acceptable to specify any two diagonally opposite corners.
Applications that process PDF should be prepared to normalize such rectangles in situations where specific corners are required.

Typically, the array takes the form
	[llx lly urx ury]
specifying the lower-left x, lower-left y, upper-right x, and upper-right y coordinates of the rectangle, in that order.
The other two corners of the rectangle are then assumed to have coordinates (llx, ury) and (urx, lly).
'.
	Rectangle namespacePath: #(#PDFtalk).
%
# Define class OptionalContentProperties
DoIt
PDFDictionary
	subclass: 'OptionalContentProperties'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	OptionalContentProperties category: 'PDFtalk Data Structures'.
	OptionalContentProperties comment: 'PDF Optional Content as defined in PDF 32000_2008.pdf section 8.11.4.2, pp. 228.

The optional OCProperties entry in the document catalog shall contain, when present, the optional content properties dictionary, which contains a list of all the optional content groups in the document, as well as information about the default and alternate configurations for optional content.
This dictionary shall be present if the file contains any optional content; if it is missing, a conforming reader shall ignore any optional content structures in the document'.
	OptionalContentProperties namespacePath: #(#PDFtalk).
%
# Define class SampledFunction
DoIt
FunctionStream
	subclass: 'SampledFunction'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SampledFunction category: 'PDFtalk Data Structures'.
	SampledFunction comment: 'PDF Function as defined in PDF 32000_2008.pdf pp. 93.

Type 0 functions use a sequence of sample values (contained in a stream) to provide an approximation for functions whose domains and ranges are bounded.
The samples are organized as an m-dimensional table in which each entry has n components.'.
	SampledFunction namespacePath: #(#PDFtalk).
%
# Define class FunctionDictionary
DoIt
PDFDictionary
	subclass: 'FunctionDictionary'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FunctionDictionary category: 'PDFtalk Data Structures'.
	FunctionDictionary comment: 'PDF Function Dictionary as defined in PDF 32000_2008.pdf section 7.10, pp. 92.

PDF is not a programming language, and a PDF file is not a program.
However, PDF provides several types of function objects (PDF 1.2) that represent parameterized classes of functions, including mathematical formulas and sampled representations with arbitrary resolution.
'.
	FunctionDictionary namespacePath: #(#PDFtalk).
%
# Define class ExponentialInterpolationFunction
DoIt
FunctionDictionary
	subclass: 'ExponentialInterpolationFunction'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ExponentialInterpolationFunction category: 'PDFtalk Data Structures'.
	ExponentialInterpolationFunction comment: 'PDF Function as defined in PDF 32000_2008.pdf pp. 96.

Type 2 functions include a set of parameters that define an exponential interpolation of one input value and n output values:
	f(x) = y0, ..., yn-1'.
	ExponentialInterpolationFunction namespacePath: #(#PDFtalk).
%
# Define class OptionalContentUsage
DoIt
PDFDictionary
	subclass: 'OptionalContentUsage'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	OptionalContentUsage category: 'PDFtalk Data Structures'.
	OptionalContentUsage comment: 'PDF Optional Content as defined in PDF 32000_2008.pdf section 8.11.4.4, pp. 232.

Optional content groups are typically constructed to control the visibility of graphic objects that are related in some way.
Objects can be related in several ways; for example, a group may contain content in a particular language or content suitable for viewing at a particular magnification.

An optional content groupâs usage dictionary (the value of the Usage entry in an optional content group dictionary) shall contain information describing the nature of the content controlled by the group'.
	OptionalContentUsage namespacePath: #(#PDFtalk).
%
# Define class NameTree
DoIt
PDFDictionary
	subclass: 'NameTree'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NameTree category: 'PDFtalk Data Structures'.
	NameTree comment: 'PDF Name Trees as defined in PDF 32000_2008.pdf pp. 88.

A name tree serves a similar purpose to a dictionaryâassociating keys and valuesâbut by different means.
A name tree differs from a dictionary in the following important ways:
	â¢ Unlike the keys in a dictionary, which are name objects, those in a name tree are strings.
	â¢ The keys are ordered.
	â¢ The values associated with the keys may be objects of any type.
	Stream objects shall be specified by indirect object references.
	The dictionary, array, and string objects should be specified by indirect object references, and other PDF objects (nulls, numbers, booleans, and names) should be specified as direct objects.
	â¢ The data structure can represent an arbitrarily large collection of key-value pairs, which can be looked up efficiently without requiring the entire data structure to be read from the PDF file. (In contrast, a dictionary can be subject to an implementation limit on the number of entries it can contain.)

A name tree shall be constructed of nodes, each of which shall be a dictionary object.
The nodes shall be of three kinds, depending on the specific entries they contain.
The tree shall always have exactly one root node, which shall contain a single entry: either Kids or Names but not both.
If the root node has a Names entry, it shall be the only node in the tree.
If it has a Kids entry, each of the remaining nodes shall be either an intermediate node, that shall contain a Limits entry and a Kids entry, or a leaf node, that shall contain a Limits entry and a Names entry.'.
	NameTree namespacePath: #(#PDFtalk).
%
# Define class NameTreeNode
DoIt
NameTree
	subclass: 'NameTreeNode'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NameTreeNode category: 'PDFtalk Data Structures'.
	NameTreeNode comment: 'PDF Name Trees as defined in PDF 32000_2008.pdf pp. 88.

The Kids entries in the root and intermediate nodes define the treeâs structure by identifying the immediate children of each node.'.
	NameTreeNode namespacePath: #(#PDFtalk).
%
# Define class StichingFunction
DoIt
FunctionDictionary
	subclass: 'StichingFunction'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	StichingFunction category: 'PDFtalk Data Structures'.
	StichingFunction comment: 'PDF Function as defined in PDF 32000_2008.pdf pp. 96.

Type 3 functions define a stitching of the subdomains of several 1-input functions to produce a single new 1-input function.
Since the resulting stitching function is a 1-input function, the domain is given by a two-element array, [Domain0 Domain1].'.
	StichingFunction namespacePath: #(#PDFtalk).
%
# Define class OptionalContentUsageCreatorInfo
DoIt
PDFDictionary
	subclass: 'OptionalContentUsageCreatorInfo'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	OptionalContentUsageCreatorInfo category: 'PDFtalk Data Structures'.
	OptionalContentUsageCreatorInfo comment: 'PDF Optional Content as defined in PDF 32000_2008.pdf section 8.11.4.4, pp. 232.

A dictionary used by the creating application to store application-specific data associated with this optional content group.
It shall contain two required entries:
	Creator 		A text string specifying the application that created the group.
	Subtype 	A name defining the type of content controlled by the group. Suggested values include but shall not be limited to Artwork, for graphic-design or publishing applications, and Technical, for technical designs such as building plans or schematics.

Additional entries may be included to present information relevant to the creating application or related applications'.
	OptionalContentUsageCreatorInfo namespacePath: #(#PDFtalk).
%
# Define class OptionalContentUsageLanguage
DoIt
PDFDictionary
	subclass: 'OptionalContentUsageLanguage'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	OptionalContentUsageLanguage category: 'PDFtalk Data Structures'.
	OptionalContentUsageLanguage comment: 'PDF Optional Content as defined in PDF 32000_2008.pdf section 8.11.4.4, pp. 232.

A dictionary specifying the language of the content controlled by this optional content group.
It may contain the following two entries:
	Lang (required) 		A text string that specifies a language and possibly a locale. For example, es-MX represents Mexican Spanish.
	Preferred (optional) 	A name whose values shall be either ON or OFF. Default value: OFF. It shall be used by conforming readers when there is a partial match but no exact match between the system language and the language strings in all usage dictionaries'.
	OptionalContentUsageLanguage namespacePath: #(#PDFtalk).
%
# Define class OptionalContentConfiguration
DoIt
PDFDictionary
	subclass: 'OptionalContentConfiguration'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	OptionalContentConfiguration category: 'PDFtalk Data Structures'.
	OptionalContentConfiguration comment: 'PDF Optional Content as defined in PDF 32000_2008.pdf section 8.11.4.3, pp. 229.

The D and Configs entries in a OptionalContentProperties are configuration dictionaries, which represent different presentations of a documentâs optional content groups for use by conforming readers.
The D configuration dictionary shall be used to specify the initial state of the optional content groups when a document is first opened.
Configs lists other configurations that may be used under particular circumstances'.
	OptionalContentConfiguration namespacePath: #(#PDFtalk).
%
# Define class NameTreeLeaf
DoIt
NameTree
	subclass: 'NameTreeLeaf'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NameTreeLeaf category: 'PDFtalk Data Structures'.
	NameTreeLeaf comment: 'PDF Name Trees as defined in PDF 32000_2008.pdf pp. 88.

The Names entries in the leaf (or root) nodes shall contain the treeâs keys and their associated values, arranged in key-value pairs and shall be sorted lexically in ascending order by key.
Shorter keys shall appear before longer ones beginning with the same byte sequence.
Any encoding of the keys may be used as long as it is self-consistent; keys shall be compared for equality on a simple byte-by-byte basis.'.
	NameTreeLeaf namespacePath: #(#PDFtalk).
%
# Define class OptionalContentGroup
DoIt
TypedDictionary
	subclass: 'OptionalContentGroup'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	OptionalContentGroup category: 'PDFtalk Data Structures'.
	OptionalContentGroup comment: 'PDF Optional Content as defined in PDF 32000_2008.pdf section 8.11.2.1, pp. 222.

An optional content group is a dictionary representing a collection of graphics that can be made visible or invisible dynamically by users of conforming readers.
The graphics belonging to such a group may reside anywhere in the document: they need not be consecutive in drawing order, nor even belong to the same content stream'.
	OptionalContentGroup namespacePath: #(#PDFtalk).
%
# Define class OptionalContentUsageApplication
DoIt
PDFDictionary
	subclass: 'OptionalContentUsageApplication'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	OptionalContentUsageApplication category: 'PDFtalk Data Structures'.
	OptionalContentUsageApplication comment: 'PDF Optional Content as defined in PDF 32000_2008.pdf section 8.11.4.4, pp. 233.

A usage application dictionary specifies the rules for which usage entries shall be used by conforming readers to automatically manipulate the state of optional content groups, which groups shall be affected, and under which circumstances.

Usage application dictionaries shall only be used by interactive conforming readers, and shall not be used by applications that use PDF as final form output'.
	OptionalContentUsageApplication namespacePath: #(#PDFtalk).
%
# Define class Function
DoIt
Objecttype
	subclass: 'Function'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Function category: 'PDFtalk Data Structures'.
	Function comment: 'PDF Function Dictionary as defined in PDF 32000_2008.pdf pp. 92.

PDF is not a programming language, and a PDF file is not a program.
However, PDF provides several types of function objects (PDF 1.2) that represent parameterized classes of functions, including mathematical formulas and sampled representations with arbitrary resolution.
'.
	Function namespacePath: #(#PDFtalk).
%
# Define class PostScriptCalculatorFunction
DoIt
FunctionStream
	subclass: 'PostScriptCalculatorFunction'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PostScriptCalculatorFunction category: 'PDFtalk Data Structures'.
	PostScriptCalculatorFunction comment: 'PDF Function as defined in PDF 32000_2008.pdf pp. 97.

A type 4 function, also called a PostScript calculator function, shall be represented as a stream containing code written in a small subset of the PostScript language.

Errors in Type 4 Functions
The part of a conforming reader that reads a type 4 function (analogous to the PostScript scanner) shall detect and report syntax errors.
Any errors detected by the conforming reader shall be errors in the PDF file and shall be handled like other errors in the file.

The part of a conforming reader that executes a type 4 function (analogous to the PostScript interpreter) shall detect and report errors.
This specification does not define a representation for the errors; those details shall be provided by the conforming reader that processes the PDF file.
The following types of errors can occur (among others):
	â¢ Stack overflow
	â¢ Stack underflow
	â¢ A type error (for example, applying not to a real number)
	â¢ A range error (for example, applying sqrt to a negative number)
	â¢ An undefined result (for example, dividing by 0)'.
	PostScriptCalculatorFunction namespacePath: #(#PDFtalk).
%
# Define class NumberTreeNode
DoIt
NumberTree
	subclass: 'NumberTreeNode'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NumberTreeNode category: 'PDFtalk Data Structures'.
	NumberTreeNode comment: 'PDF Number Trees as defined in PDF 32000_2008.pdf pp. 91.

A number tree is similar to a name tree (see NameTree), except that its keys shall be integers instead of strings and shall be sorted in ascending numerical order.
The entries in the leaf (or root) nodes containing the key-value pairs shall be named Nums instead of Names as in a name tree.'.
	NumberTreeNode namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| package policy |
	package := GsPackageLibrary createPackageNamed: #SessionMethods.
	GsPackageLibrary installPackage: package.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: FileInSymbolDictionary.
	policy externalSymbolList: (GsSession currentSession symbolList asArray copyWithout: FileInSymbolDictionary).
	policy enable.
%
category: '*PDFtalk Data Structures-converting'
method: Rectangle
asPDF
	^(PDF classAt: #Rectangle) fromRectangle: self
%
DoIt
	| dict policy |
	dict := SymbolDictionary new.
	dict at: #UNWRITABLE put: dict.
	dict immediateInvariant.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: dict.
	policy externalSymbolList: Array new.
	policy enable.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
classmethod: ExponentialInterpolationFunction
functionType
	^2
%
classmethod: ExponentialInterpolationFunction
pdfTypeDefinition
	^PDFTypeDefinition
		name: #ExponentialInterpolationFunction
		supertype: #Function
		version: #(1 3)
		section: '7.10.3'
		documentation: 'Type 2 functions include a set of parameters that define an exponential interpolation of one input value and n output values:
	f(x) = y0, ..., yn-1'
%
category: 'accessing entries'
method: ExponentialInterpolationFunction
C0
	<typeArrayOf: #Number>
	<attribute: 1 documentation: 'An array of n numbers that shall define the function result when x = 0.0.
Default value: [0.0].'>
	^self objectAt: #C0 ifAbsent: [#(0.0) asPDF]
%
method: ExponentialInterpolationFunction
C1
	<typeArrayOf: #Number>
	<attribute: 2 documentation: 'An array of n numbers that shall define the function result when x = 1.0.
Default value: [1.0].'>
	^self objectAt: #C1 ifAbsent: [#(1.0) asPDF]
%
method: ExponentialInterpolationFunction
N
	<type: #Number>
	<required>
	<attribute: 3 documentation: 'The interpolation exponent.
Each input value x shall return n values, given by yj = C0j + xN x (C1j - C0j), for 0 <= j < n.'>
	^self objectAt: #N
%
category: 'accessing'
classmethod: Function
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Function
		supertype: #Object
		version: #(1 2)
		section: '7.10.1'
		documentation: 'PDF is not a programming language, and a PDF file is not a program.
However, PDF provides several types of function objects that represent parameterized classes of functions, including mathematical formulas and sampled representations with arbitrary resolution.'
%
category: 'accessing'
classmethod: FunctionDictionary
functionType
	"<Integer>
	-1 never matches"

	^-1
%
category: 'instance creation'
classmethod: FunctionDictionary
empty
	| inst |
	inst := self new.
	inst at: #FunctionType put: self functionType.
	^inst
%
category: 'testing'
classmethod: FunctionDictionary
isClassForDictionary: aDictionary
	| typeEntry |
	typeEntry := aDictionary at: #FunctionType ifAbsent: [
		^false].
	^self functionType asPDF = typeEntry
%
category: 'accessing entries'
method: FunctionDictionary
Domain
	<typeArrayOf: #Number>
	<required>
	<attribute: 2 documentation: 'An array of 2 x m numbers, where m shall be the number of input values.
For each i from 0 to m-1, Domain2i shall be less than or equal to Domain2i+1, and the ith input value, xi, shall lie in the interval Domain2i <= xi <= Domain2i+1.
Input values outside the declared domain shall be clipped to the nearest boundary value.'>
	^self objectAt: #Domain
%
method: FunctionDictionary
FunctionType
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'The function type:
	0 Sampled function
	2 Exponential interpolation function
	3 Stitching function
	4 PostScript calculator function'>
	^self objectAt: #FunctionType
%
method: FunctionDictionary
Range
	<typeArrayOf: #Number>
	<attribute: 3 documentation: '(Required for type 0 and type 4 functions, optional otherwise)
An array of 2 x n numbers, where n shall be the number of output values.
For each j from 0 to n-1, Range2j shall be less than or equal to Range2j+1, and the jth output value, yj , shall lie in the interval Range2j <= yj <= Range2j+1.
Output values outside the declared range shall be clipped to the nearest boundary value.
If this entry is absent, no clipping shall be done.'>
	^self objectAt: #Range ifAbsent: [#() asPDF]
%
category: 'accessing'
classmethod: FunctionStream
functionType
	"<Integer>
	-1 never matches"

	^-1
%
category: 'instance creation'
classmethod: FunctionStream
empty
	| inst |
	inst := self new.
	inst at: #FunctionType put: self functionType.
	^inst
%
category: 'testing'
classmethod: FunctionStream
isClassForStream: aStream

	| typeEntry |
	typeEntry := aStream at: #FunctionType ifAbsent: [^false].
	^self functionType asPDF = typeEntry
%
category: 'accessing entries'
method: FunctionStream
Domain
	<typeArrayOf: #Number>
	<required>
	<attribute: 2 documentation: 'An array of 2 x m numbers, where m shall be the number of input values.
For each i from 0 to m-1, Domain2i shall be less than or equal to Domain2i+1, and the ith input value, xi, shall lie in the interval Domain2i <= xi <= Domain2i+1.
Input values outside the declared domain shall be clipped to the nearest boundary value.'>
	^self objectAt: #Domain
%
method: FunctionStream
FunctionType
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'The function type:
	0 Sampled function
	2 Exponential interpolation function
	3 Stitching function
	4 PostScript calculator function'>
	^self objectAt: #FunctionType
%
method: FunctionStream
Range
	<typeArrayOf: #Number>
	<required>
	<attribute: 3 documentation: 'An array of 2 x n numbers, where n shall be the number of output values.
For each j from 0 to n-1, Range2j shall be less than or equal to Range2j+1, and the jth output value, yj , shall lie in the interval Range2j <= yj <= Range2j+1.
Output values outside the declared range shall be clipped to the nearest boundary value.
If this entry is absent, no clipping shall be done.'>
	^self objectAt: #Range
%
category: 'accessing'
classmethod: Identity
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Identity
		supertype: #Function
		version: #(1 2)
		section: '7.10'
		documentation: 'the identity function'
%
category: 'accessing'
method: Identity
content
	^#Identity
%
category: 'accessing'
classmethod: NameTree
leafClass
	^NameTreeLeaf
%
classmethod: NameTree
nodeClass
	^NameTreeNode
%
classmethod: NameTree
pdfTypeDefinition

	^PDFTypeDefinition
		name: #NameTree
		supertype: #Dictionary
		section: '7.9.6'
		documentation: 'A name tree serves a similar purpose to a dictionaryâassociating keys and valuesâbut by different means.
A name tree differs from a dictionary in the following important ways:
	â¢ Unlike the keys in a dictionary, which are name objects, those in a name tree are strings.
	â¢ The keys are ordered.
	â¢ The values associated with the keys may be objects of any type.
	Stream objects shall be specified by indirect object references.
	The dictionary, array, and string objects should be specified by indirect object references, and other PDF objects (nulls, numbers, booleans, and names) should be specified as direct objects.
	â¢ The data structure can represent an arbitrarily large collection of key-value pairs, which can be looked up efficiently without requiring the entire data structure to be read from the PDF file. (In contrast, a dictionary can be subject to an implementation limit on the number of entries it can contain.)

A name tree shall be constructed of nodes, each of which shall be a dictionary object.
The nodes shall be of three kinds, depending on the specific entries they contain.
The tree shall always have exactly one root node, which shall contain a single entry: either Kids or Names but not both.
If the root node has a Names entry, it shall be the only node in the tree.
If it has a Kids entry, each of the remaining nodes shall be either an intermediate node, that shall contain a Limits entry and a Kids entry, or a leaf node, that shall contain a Limits entry and a Names entry.'
%
category: 'instance creation'
classmethod: NameTree
on: aDictionary
	aDictionary at: #Names ifAbsent: [
		^(PDF classAt: #NameTree) nodeClass content: aDictionary].
	^(PDF classAt: #NameTree) leafClass content: aDictionary
%
category: 'accessing'
method: NameTree
elements
	"<SequenceableCollection of: (Association key: String value: PDFObject)>"

	^#()
%
category: 'accessing entries'
method: NameTree
Limits
	<typeArrayOf: #String>
	<attribute: 1 documentation: 'Shall be an array of two strings, that shall specify the (lexically) least and greatest keys included in the Names array of a leaf node or in the Names arrays of any leaf nodes that are descendants of an intermediate node.'>
	^self objectAt: #Limits ifAbsent: [#() asPDF]
%
category: 'accessing'
method: NameTreeLeaf
elements
	| elements rst |
	elements := OrderedCollection new.
	rst := self Names content readStream.
	[rst atEnd] whileFalse: [elements add: rst next -> rst next].
	^elements
%
category: 'accessing entries'
method: NameTreeLeaf
Limits
	<typeArrayOf: #String>
	<required>
	<attribute: 2 documentation: 'Shall be an array of two strings, that shall specify the (lexically) least and greatest keys included in the Names array of a leaf node or in the Names arrays of any leaf nodes that are descendants of an intermediate node.'>
	^self objectAt: #Limits
%
method: NameTreeLeaf
Names
	<type: #Array>
	<required>
	<attribute: 1 documentation: 'Shall be an array of the form
	[key1 value1 key2 value2 â¦ keyn valuen]
where each key i shall be a string and the corresponding value i shall be the object associated with that key.
The keys shall be sorted in lexical order.'>
	^self objectAt: #Names
%
category: 'accessing'
method: NameTreeNode
elements
	| wst |
	wst := Array new writeStream.
	self Kids do: [:nameTree | wst nextPutAll: nameTree elements].
	^wst contents
%
category: 'accessing entries'
method: NameTreeNode
Kids
	<typeArrayOf: #NameTree>
	<required>
	<attribute: 1 documentation: '(Root and intermediate nodes only; present in the root node if and only if Names is not present)
Shall be an array of indirect references to the immediate children of this node. The children may be intermediate or leaf nodes.'>
	^self objectAt: #Kids
%
category: 'accessing'
classmethod: NumberTree
leafClass
	^NumberTreeLeaf
%
classmethod: NumberTree
nodeClass
	^NumberTreeNode
%
classmethod: NumberTree
pdfTypeDefinition

	^PDFTypeDefinition
		name: #NumberTree
		supertype: #Dictionary
		section: '7.9.7'
		documentation: 'A number tree is similar to a name tree (see NameTree), except that its keys shall be integers instead of strings and shall be sorted in ascending numerical order.
The entries in the leaf (or root) nodes containing the key-value pairs shall be named Nums instead of Names as in a name tree.'
%
category: 'instance creation'
classmethod: NumberTree
on: aDictionary
	aDictionary at: #Nums ifAbsent: [
		^(PDF classAt: #NumberTree) nodeClass content: aDictionary].
	^(PDF classAt: #NumberTree) leafClass content: aDictionary
%
category: 'accessing entries'
method: NumberTree
Limits
	<typeArrayOf: #Integer>
	<attribute: 1 documentation: '(Shall be present in Intermediate and leaf nodes only)
Shall be an array of two integers, that shall specify the (numerically) least and greatest keys included in the Nums array of a leaf node or in the Nums arrays of any leaf nodes that are descendants of an intermediate node.'>
	^self objectAt: #Limits ifAbsent: [#() asPDF]
%
category: 'accessing entries'
method: NumberTreeLeaf
Nums
	<type: #Array>
	<required>
	<attribute: 1 documentation: 'Shall be an array of the form
	[key1 value1 key2 value2 â¦ keyn valuen]
where each key i is an integer and the corresponding value i shall be the object associated with that key.
The keys shall be sorted in numerical order, analogously to the arrangement of keys in a name tree'>
	^self objectAt: #Nums
%
category: 'accessing entries'
method: NumberTreeNode
Kids
	<typeArrayOf: #NumberTree>
	<required>
	<attribute: 1 documentation: 'Shall be an array of indirect references to the immediate children of this node.
The children may be intermediate or leaf nodes.'>
	^self objectAt: #Kids
%
category: 'accessing'
classmethod: OptionalContentConfiguration
pdfTypeDefinition
	^PDFTypeDefinition
		name: #OptionalContentConfiguration
		supertype: #Dictionary
		version: #(1 5)
		section: '8.11.4.3'
		documentation: 'The D and Configs entries in a OptionalContentProperties are configuration dictionaries, which represent different presentations of a documentâs optional content groups for use by conforming readers.
The D configuration dictionary shall be used to specify the initial state of the optional content groups when a document is first opened.
Configs lists other configurations that may be used under particular circumstances'
%
category: 'accessing entries'
method: OptionalContentConfiguration
AS
	<typeArrayOf: #OptionalContentUsageApplication>
	<attribute: 7 documentation: 'An array of usage application dictionaries specifying which usage dictionary categories shall be consulted by conforming readers to automatically set the states of optional content groups based on external factors, such as the current system language or viewing magnification, and when they shall be applied'>
	^self objectAt: #AS ifAbsent: [#() asPDF]
%
method: OptionalContentConfiguration
BaseState
	<type: #Name>
	<attribute: 3 documentation: 'Used to initialize the states of all the optional content groups in a document when this configuration is applied.
The value of this entry shall be one of the following names:
	ON The states of all groups shall be turned ON.
	OFF The states of all groups shall be turned OFF.
	Unchanged The states of all groups shall be left unchanged.
After this initialization, the contents of the ON and OFF arrays shall beprocessed, overriding the state of the groups included in the arrays.

If BaseState is present in the documentâs default configuration dictionary, its value shall be ON.'>
	^self objectAt: #BaseState ifAbsent: [#ON asPDF]
%
method: OptionalContentConfiguration
Creator
	<type: #String>
	<attribute: 2 documentation: 'Name of the application or feature that created this configuration dictionary'>
	^self objectAt: #Creator ifAbsent: ['' asPDF]
%
method: OptionalContentConfiguration
Intent
	<type: #Name>
	<typeArrayOf: #Name>
	<attribute: 6 documentation: 'A single intent name or an array containing any combination of names.
It shall be used to determine which optional content groupsâ states to consider and which to ignore in calculating the visibility of content.

PDF defines two intent names, View and Design.
In addition, the name All shall indicate the set of all intents, including those not yet defined.
The value shall be View for the documentâs default configuration'>
	^self objectAt: #Intent ifAbsent: [#View asPDF]
%
method: OptionalContentConfiguration
ListMode
	<type: #Name>
	<attribute: 9 documentation: 'A name specifying which optional content groups in the Order array shall be displayed to the user.
Valid values shall be:
	AllPages 		Display all groups in the Order array.
	VisiblePages 	Display only those groups in the Order array that are referenced by one or more visible pages'>
	^self objectAt: #ListMode ifAbsent: [#AllPages asPDF]
%
method: OptionalContentConfiguration
Locked
	<type: #Array>
	<version: 1 dot: 6>
	<attribute: 11 documentation: 'An array of optional content groups that shall be locked when this configuration is applied.
The state of a locked group cannot be changed through the user interface of a conforming reader.
Conforming writers can use this entry to prevent the visibility of content that depends on these groups from being changed by users.

A conforming reader may allow the states of optional content groups from being changed by means other than the user interface, such as JavaScript or items in the AS entry of a configuration dictionary'>
	^self objectAt: #Locked ifAbsent: [#() asPDF]
%
method: OptionalContentConfiguration
Name
	<type: #String>
	<attribute: 1 documentation: 'A name for the configuration, suitable for presentation in a user interface'>
	^self objectAt: #Name ifAbsent: ['' asPDF]
%
method: OptionalContentConfiguration
OFF
	<typeArrayOf: #OptionalContentGroup>
	<attribute: 5 documentation: 'An array of optional content groups whose state shall beset to OFF when this configuration is applied.
If the BaseState entry is OFF, this entry is redundant'>
	^self objectAt: #OFF ifAbsent: [#() asPDF]
%
method: OptionalContentConfiguration
ON
	<typeArrayOf: #OptionalContentGroup>
	<attribute: 4 documentation: 'An array of optional content groups whose state shall beset to ON when this configuration is applied.
If the BaseState entry is ON, this entry is redundant'>
	^self objectAt: #ON ifAbsent: [#() asPDF]
%
method: OptionalContentConfiguration
Order
	<type: #Array>
	<attribute: 8 documentation: 'An array specifying the order for presentation of optional content groups in a conforming readerâs user interface.
The array elements may include the following objects:

	Optional content group dictionaries, whose Name entry shall be displayed in the user interface by the conforming reader.

	Arrays of optional content groups which may be displayed by a conforming reader in a tree or outline structure. Each nested array may optionally have as its first element a text string to be used as a non-selectable label in a conforming readerâs user interface.

	Text labels in nested arrays shall be used to present collections of related optional content groups, and not to communicate actual nesting of content inside multiple layers of groups.
To reflect actual nesting of groups in the content, such as for layers with sublayers, nested arrays of groups without a text label shall be used.

	An empty array [] explicitly specifies that no groups shall be presented.

In the default configuration dictionary, the default value shall be an empty array; in other configuration dictionaries, the default shall be the Order value from the default configuration dictionary.

Any groups not listed in this array shall not be presented in any user interface that uses the configuration'>
	^self objectAt: #Order ifAbsent: [#() asPDF]
%
method: OptionalContentConfiguration
RBGroups
	<typeArrayOf: #Array>
	<attribute: 10 documentation: 'An array consisting of one or more arrays, each of which represents a collection of optional content groups whose states shall be intended to follow a radio button paradigm.
That is, the state of at most one optional content group in each array shall be ON at a time.
If one group is turned ON, all others shall be turned OFF.
However, turning a group from ON to OFF does not force any other group to be turned ON.

An empty array [] explicitly indicates that no such collections exist.

In the default configuration dictionary, the default value shall be an empty array; in other configuration dictionaries, the default is the RBGroups value from the default configuration dictionary'>
	^self objectAt: #RBGroups ifAbsent: [#() asPDF]
%
category: 'accessing'
classmethod: OptionalContentGroup
pdfTypeDefinition
	^PDFTypeDefinition
		name: #OptionalContentGroup
		supertype: #Dictionary
		version: #(1 5)
		section: '8.11.2'
		documentation: 'An optional content group is a dictionary representing a collection of graphics that can be made visible or invisible dynamically by users of conforming readers.
The graphics belonging to such a group may reside anywhere in the document: they need not be consecutive in drawing order, nor even belong to the same content stream'
%
classmethod: OptionalContentGroup
resourcePrefix
	^'MC'
%
classmethod: OptionalContentGroup
resourceType
	"<Symbol>
	the name of a /Resources key"

	^#Properties
%
classmethod: OptionalContentGroup
type
	^#OCG
%
category: 'accessing entries'
method: OptionalContentGroup
Intent
	<type: #Name>
	<typeArrayOf: #Name>
	<attribute: 2 documentation: 'A single intent name or an array containing any combination of names.
PDF defines two names, View and Design, that may indicate the intended use of the graphics in the group.
A conforming reader may choose to use only groups that have a specific intent and ignore others'>
	^self objectAt: #Intent ifAbsent: [#View asPDF]
%
method: OptionalContentGroup
Name
	<type: #String>
	<required>
	<attribute: 1 documentation: 'The name of the optional content group, suitable for presentation in a readerâs user interface'>
	^self objectAt: #Name
%
method: OptionalContentGroup
Usage
	<type: #OptionalContentUsage>
	<attribute: 3 documentation: 'A usage dictionary describing the nature of the content controlled by the group.
It may be used by features that automatically control the state of the group based on outside factors'>
	^self objectAt: #Usage ifAbsent: [PDF Dictionary empty]
%
category: 'accessing'
classmethod: OptionalContentProperties
pdfTypeDefinition
	^PDFTypeDefinition
		name: #OptionalContentProperties
		supertype: #Dictionary
		version: #(1 5)
		section: '8.11.4.2'
		documentation: 'The optional OCProperties entry in the document catalog shall contain, when present, the optional content properties dictionary, which contains a list of all the optional content groups in the document, as well as information about the default and alternate configurations for optional content.
This dictionary shall be present if the file contains any optional content; if it is missing, a conforming reader shall ignore any optional content structures in the document'
%
category: 'accessing entries'
method: OptionalContentProperties
Configs
	<typeArrayOf: #OptionalContentConfiguration>
	<attribute: 3 documentation: 'An array of alternate optional content configuration dictionaries'>
	^self objectAt: #Configs ifAbsent: [#() asPDF]
%
method: OptionalContentProperties
D
	<type: #OptionalContentConfiguration>
	<required>
	<attribute: 2 documentation: 'The default viewing optional content configuration dictionary'>
	^self objectAt: #D
%
method: OptionalContentProperties
OCGs
	<typeArrayOf: #Reference>
	<required>
	<attribute: 1 documentation: 'An array of indirect references to all the optional content groups in the document, in any order.
Every optional content group shall be included in this array'>
	^self objectAt: #OCGs
%
category: 'accessing'
classmethod: OptionalContentUsage
pdfTypeDefinition
	^PDFTypeDefinition
		name: #OptionalContentUsage
		supertype: #Dictionary
		version: #(1 5)
		section: '8.11.4.4'
		documentation: 'Optional content groups are typically constructed to control the visibility of graphic objects that are related in some way.
Objects can be related in several ways; for example, a group may contain content in a particular language or content suitable for viewing at a particular magnification.

An optional content groupâs usage dictionary (the value of the Usage entry in an optional content group dictionary) shall contain information describing the nature of the content controlled by the group'
%
category: 'accessing entries'
method: OptionalContentUsage
CreatorInfo
	<type: #OptionalContentUsageCreatorInfo>
	<attribute: 1 documentation: 'A dictionary used by the creating application to store application-specific data associated with this optional content group.
It shall contain two required entries:
	Creator 	A text string specifying the application that created the group.
	Subtype 	A name defining the type of content controlled by the group. Suggested values include but shall not be limited to Artwork, for graphic-design or publishing applications, and Technical, for technical designs such as building plans or schematics.

Additional entries may be included to present information relevant to the creating application or related applications.
Groups whose Intent entry contains Design typically include a CreatorInfo entry.'>
	^self objectAt: #CreatorInfo ifAbsent: [PDF Dictionary empty]
%
method: OptionalContentUsage
Export
	<type: #Dictionary>
	<attribute: 3 documentation: 'A dictionary containing one entry, ExportState, a name whose value shall be either ON or OFF.
This value shall indicate the recommended state for content in this group when the document (or part of it) is saved by a conforming reader to a format that does not support optional content (for example, a raster image format).'>
	^self objectAt: #Export ifAbsent: [PDF Dictionary empty]
%
method: OptionalContentUsage
Language
	<type: #OptionalContentUsageLanguage>
	<attribute: 2 documentation: 'A dictionary specifying the language of the content controlled by this optional content group.
It may contain the following two entries:
	Lang (required) 		A text string that specifies a language and possibly a locale. For example, es-MX represents Mexican Spanish.
	Preferred (optional) 	A name whose values shall be either ON or OFF. Default value: OFF. It shall be used by conforming readers when there is a partial match but no exact match between the system language and the language strings in all usage dictionaries'>
	^self objectAt: #Language ifAbsent: [PDF Dictionary empty]
%
method: OptionalContentUsage
PageElement
	<type: #Dictionary>
	<attribute: 8 documentation: 'A dictionary declaring that the group contains a pagination artifact.
It shall contain one entry, Subtype, whose value shall be a name that is either
	HF (header/footer), 
	FG (foreground image or graphic), 
	BG (background image or graphic), or 
	L (logo)'>
	^self objectAt: #PageElement ifAbsent: [PDF Dictionary empty]
%
method: OptionalContentUsage
Print
	<type: #Dictionary>
	<attribute: 5 documentation: 'A dictionary specifying that the content in this group is shall be used when printing.
It may contain the following optional entries:
	Subtype 	A name object specifying the kind of content controlled by the group; for example, Trapping, PrintersMarks and Watermark.
	PrintState 	A name that shall be either ON or OFF, indicating that the group shall be set to that state when the document is printed from a conforming reader'>
	^self objectAt: #Print ifAbsent: [PDF Dictionary empty]
%
method: OptionalContentUsage
User
	<type: #Dictionary>
	<attribute: 7 documentation: 'A dictionary specifying one or more users for whom this optional content group is primarily intended.
Each dictionary shall have two required entries:
	Type 	A name object that shall be either Ind (individual), Ttl (title), or Org (organization).
	Name 	A text string or array of text strings representing the name(s) of the individual, position or organization'>
	^self objectAt: #User ifAbsent: [PDF Dictionary empty]
%
method: OptionalContentUsage
View
	<type: #Dictionary>
	<attribute: 6 documentation: 'A dictionary that shall have a single entry, ViewState, a name that shall have a value of either ON or OFF, indicating that the group shall be set to that state when the document is opened in a conforming reader.'>
	^self objectAt: #View ifAbsent: [PDF Dictionary empty]
%
method: OptionalContentUsage
Zoom
	<type: #Dictionary>
	<attribute: 4 documentation: 'A dictionary specifying a range of magnifications at which the content in this optional content group is best viewed.
It shall contain one or both of the following entries:
	min 	The minimum recommended magnification factor at which the group shall be ON. Default value: 0.
	max 	The magnification factor below which the group shall be ON. Default value: infinity'>
	^self objectAt: #Zoom ifAbsent: [PDF Dictionary empty]
%
category: 'accessing'
classmethod: OptionalContentUsageApplication
pdfTypeDefinition
	^PDFTypeDefinition
		name: #OptionalContentUsageApplication
		supertype: #Dictionary
		version: #(1 5)
		section: '8.11.4.4'
		documentation: 'A usage application dictionary specifies the rules for which usage entries shall be used by conforming readers to automatically manipulate the state of optional content groups, which groups shall be affected, and under which circumstances.

Usage application dictionaries shall only be used by interactive conforming readers, and shall not be used by applications that use PDF as final form output'
%
category: 'accessing entries'
method: OptionalContentUsageApplication
Category
	<typeArrayOf: #Name>
	<attribute: 3 documentation: 'An array of names, each of which corresponds to a usage dictionary entry.
When managing the states of the optional content groups in the OCGs array, each of the corresponding categories in the groupâs usage dictionary shall be considered.'>
	^self objectAt: #Category ifAbsent: [#() asPDF]
%
method: OptionalContentUsageApplication
Creator
	<type: #String>
	<required>
	<attribute: 1 documentation: 'A text string specifying the application that created the group'>
	^self objectAt: #Creator
%
method: OptionalContentUsageApplication
Event
	<type: #Name>
	<required>
	<attribute: 1 documentation: 'A name defining the situation in which this usage application dictionary should be used.
Shall be one of View, Print, or Export'>
	^self objectAt: #Event
%
method: OptionalContentUsageApplication
OCGs
	<typeArrayOf: #OptionalContentGroup>
	<attribute: 2 documentation: 'An array listing the optional content groups that shall have their states automatically managed based on information in their usage dictionary'>
	^self objectAt: #OCGs ifAbsent: [#() asPDF]
%
category: 'accessing'
classmethod: OptionalContentUsageCreatorInfo
pdfTypeDefinition
	^PDFTypeDefinition
		name: #OptionalContentUsageCreatorInfo
		supertype: #Dictionary
		version: #(1 5)
		section: '8.11.4.4'
		documentation: 'A dictionary used by the creating application to store application-specific data associated with this optional content group.
It shall contain two required entries:
	Creator 		A text string specifying the application that created the group.
	Subtype 	A name defining the type of content controlled by the group. Suggested values include but shall not be limited to Artwork, for graphic-design or publishing applications, and Technical, for technical designs such as building plans or schematics.

Additional entries may be included to present information relevant to the creating application or related applications'
%
category: 'accessing entries'
method: OptionalContentUsageCreatorInfo
Creator
	<type: #String>
	<required>
	<attribute: 1 documentation: 'A text string specifying the application that created the group'>
	^self objectAt: #Creator
%
method: OptionalContentUsageCreatorInfo
Subtype
	<type: #Name>
	<attribute: 2 documentation: 'A name defining the type of content controlled by the group.
Suggested values include but shall not be limited to Artwork, for graphic-design or publishing applications, and Technical, for technical designs such as building plans or schematics'>
	^self objectAt: #Subtype
%
category: 'accessing'
classmethod: OptionalContentUsageLanguage
pdfTypeDefinition
	^PDFTypeDefinition
		name: #OptionalContentUsageLanguage
		supertype: #Dictionary
		version: #(1 5)
		section: '8.11.4.4'
		documentation: 'A dictionary specifying the language of the content controlled by this optional content group.
It may contain the following two entries:
	Lang (required) 		A text string that specifies a language and possibly a locale. For example, es-MX represents Mexican Spanish.
	Preferred (optional) 	A name whose values shall be either ON or OFF. Default value: OFF. It shall be used by conforming readers when there is a partial match but no exact match between the system language and the language strings in all usage dictionaries'
%
category: 'accessing entries'
method: OptionalContentUsageLanguage
Lang
	<type: #String>
	<required>
	<attribute: 1 documentation: 'A text string that specifies a language and possibly a locale.
For example, es-MX represents Mexican Spanish'>
	^self objectAt: #Lang
%
method: OptionalContentUsageLanguage
Preferred
	<type: #Name>
	<attribute: 2 documentation: 'A name whose values shall be either ON or OFF.
It shall be used by conforming readers when there is a partial match but no exact match between the system language and the language strings in all usage dictionaries'>
	^self objectAt: #Preferred ifAbsent: [#OFF asPDF]
%
category: 'accessing'
classmethod: PostScriptCalculatorFunction
allowedOperators
	| arithmetic relationalBooleanBitwise conditional stack |
	arithmetic := #(#abs #add #atan #ceiling #cos #cvi #cvr #div #exp #floor #idiv #ln #log #mod #mul #neg #round #sin #sqrt #sub #truncate).
	relationalBooleanBitwise := #(#and #bitshift #eq false #ge #gt #le #lt #ne #not #or true #xor).
	conditional := #(#if #ifelse).
	stack := #(#copy #dup #exch #index #pop #roll).
	^arithmetic , relationalBooleanBitwise , conditional , stack
%
classmethod: PostScriptCalculatorFunction
functionType
	^4
%
classmethod: PostScriptCalculatorFunction
pdfTypeDefinition
	^PDFTypeDefinition
		name: #PostScriptCalculatorFunction
		supertype: #Function
		version: #(1 2)
		section: '7.10.5'
		documentation: 'A type 4 function, also called a PostScript calculator function, shall be represented as a stream containing code written in a small subset of the PostScript language.

Errors in Type 4 Functions
The part of a conforming reader that reads a type 4 function (analogous to the PostScript scanner) shall detect and report syntax errors.
Any errors detected by the conforming reader shall be errors in the PDF file and shall be handled like other errors in the file.

The part of a conforming reader that executes a type 4 function (analogous to the PostScript interpreter) shall detect and report errors.
This specification does not define a representation for the errors; those details shall be provided by the conforming reader that processes the PDF file.
The following types of errors can occur (among others):
	â¢ Stack overflow
	â¢ Stack underflow
	â¢ A type error (for example, applying not to a real number)
	â¢ A range error (for example, applying sqrt to a negative number)
	â¢ An undefined result (for example, dividing by 0)'
%
category: 'accessing'
classmethod: Rectangle
numberOfAttributes
	^4
%
classmethod: Rectangle
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Rectangle
		supertype: #Object
		section: '7.9.5'
		documentation: 'Rectangles are used to describe locations on a page and bounding boxes for a variety of objects.
A rectangle shall be written as an array of four numbers giving the coordinates of a pair of diagonally opposite corners.

NOTE
Although rectangles are conventionally specified by their lower-left and upper-right corners, it is acceptable to specify any two diagonally opposite corners.
Applications that process PDF should be prepared to normalize such rectangles in situations where specific corners are required.

Typically, the array takes the form
	[llx lly urx ury]
specifying the lower-left x, lower-left y, upper-right x, and upper-right y coordinates of the rectangle, in that order.
The other two corners of the rectangle are then assumed to have coordinates (llx, ury) and (urx, lly).'
%
category: 'instance creation'
classmethod: Rectangle
fromRectangle: aRectangle
	^self
		with: aRectangle left
		with: aRectangle origin y
		with: aRectangle right
		with: aRectangle corner y
%
category: 'accessing entries'
method: Rectangle
llx
	<type: #Number>
	<required>
	<attribute: 1 documentation: 'lower-left x'>
	^self objectAt: 1
%
method: Rectangle
lly
	<type: #Number>
	<required>
	<attribute: 2 documentation: 'lower-left y'>
	^self objectAt: 2
%
method: Rectangle
urx
	<type: #Number>
	<required>
	<attribute: 3 documentation: 'upper-right x'>
	^self objectAt: 3
%
method: Rectangle
ury
	<type: #Number>
	<required>
	<attribute: 4 documentation: 'upper-right y'>
	^self objectAt: 4
%
category: 'converting'
method: Rectangle
asRectangle
	"<Rectangle>"

	| norm |
	norm := self normalized.
	^norm llx asSmalltalkValue @ norm lly asSmalltalkValue corner: norm urx asSmalltalkValue @ norm ury asSmalltalkValue
%
method: Rectangle
normalized
	"<Rectangle>
	where llx @ lly is the lower left corner and urx @ ury is the upper right corner"

	| new |
	new := self class empty.
	self llx asSmalltalkValue <= self urx asSmalltalkValue
		ifTrue: [
		new at: 1 put: (self at: 1).
		new at: 3 put: (self at: 3)]
		ifFalse: [
		new at: 1 put: (self at: 3).
		new at: 3 put: (self at: 1)].
	self lly asSmalltalkValue <= self ury asSmalltalkValue
		ifTrue: [
		new at: 2 put: (self at: 2).
		new at: 4 put: (self at: 4)]
		ifFalse: [
		new at: 2 put: (self at: 4).
		new at: 4 put: (self at: 2)].
	^new
%
category: 'accessing'
classmethod: SampledFunction
functionType
	^0
%
classmethod: SampledFunction
pdfTypeDefinition
	^PDFTypeDefinition
		name: #SampledFunction
		supertype: #Function
		version: #(1 2)
		section: '7.10.2'
		documentation: 'Type 0 functions use a sequence of sample values (contained in a stream) to provide an approximation for functions whose domains and ranges are bounded.
The samples are organized as an m-dimensional table in which each entry has n components.'
%
category: 'accessing entries'
method: SampledFunction
BitsPerSample
	<type: #Integer>
	<required>
	<attribute: 3 documentation: 'The number of bits that shall represent each sample. (If the function has multiple output values, each one shall occupy BitsPerSample bits.)
Valid values shall be 1, 2, 4, 8, 12, 16, 24, and 32.'>
	^self objectAt: #BitsPerSample
%
method: SampledFunction
Decode
	<typeArrayOf: #Number>
	<attribute: 6 documentation: 'An array of 2 Ã n numbers specifying the linear mapping of sample values into the range appropriate for the functionâs output values.
Default value: same as the value of Range.'>
	^self objectAt: #Decode ifAbsent: [#() asPDF]
%
method: SampledFunction
Encode
	<typeArrayOf: #Number>
	<attribute: 5 documentation: 'An array of 2 Ã m numbers specifying the linear mapping of input values into the domain of the functionâs sample table.
Default value: [0 (Size0 - 1) 0 (Size1 - 1) â¦].'>
	^self objectAt: #Encode ifAbsent: [
		| list |
		list := OrderedCollection new.
		self Size asSmalltalkValue do: [:s |
			list add: 0.
			list add: s value - 1].
		list asPDF]
%
method: SampledFunction
Order
	<type: #Integer>
	<attribute: 4 documentation: 'The order of interpolation between samples.
Valid values shall be 1 and 3, specifying linear and cubic spline interpolation, respectively.
Default value: 1.'>
	^self objectAt: #Order ifAbsent: [1 asPDF]
%
method: SampledFunction
Size
	<typeArrayOf: #Integer>
	<required>
	<attribute: 2 documentation: 'An array of m positive integers that shall specify the number of samples in each input dimension of the sample table.'>
	^self objectAt: #Size
%
category: 'accessing'
classmethod: StichingFunction
functionType
	^3
%
classmethod: StichingFunction
pdfTypeDefinition
	^PDFTypeDefinition
		name: #StichingFunction
		supertype: #Function
		version: #(1 3)
		section: '7.10.4'
		documentation: 'Type 3 functions define a stitching of the subdomains of several 1-input functions to produce a single new 1-input function.
Since the resulting stitching function is a 1-input function, the domain is given by a two-element array, [Domain0 Domain1].'
%
category: 'accessing entries'
method: StichingFunction
Bounds
	<typeArrayOf: #Number>
	<required>
	<attribute: 2 documentation: 'An array of k - 1 numbers that, in combination with Domain, shall define the intervals to which each function from the Functions array shall apply.
Bounds elements shall be in order of increasing value, and each value shall be within the domain defined by Domain.'>
	^self objectAt: #Bounds
%
method: StichingFunction
Encode
	<typeArrayOf: #Number>
	<required>
	<attribute: 3 documentation: 'An array of 2 Ã k numbers that, taken in pairs, shall map each subset of the domain defined by Domain and the Bounds array to the domain of the corresponding function.'>
	^self objectAt: #Encode
%
method: StichingFunction
Functions
	<typeArrayOf: #Function>
	<required>
	<attribute: 1 documentation: 'An array of k 1-input functions that shall make up the stitching function.
The output dimensionality of all functions shall be the same, and compatible with the value of Range if Range is present.'>
	^self objectAt: #Functions
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Parsing'.
	dict at: #comment put: 'Parsing PDF source'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Parsing'.
	dict at: #storeVersion put: '2.5.0.2'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class Parser
DoIt
Object
	subclass: 'Parser'
	instVarNames: #(stream tokenActions errors)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Parser category: 'PDFtalk Parsing'.
	Parser comment: 'Reads PDF objects of a byte stream.
Comments are not remembered'.
	Parser namespacePath: #(#PDFtalk).
%
# Define class ObjectParser
DoIt
Parser
	subclass: 'ObjectParser'
	instVarNames: #(peekPositions accessLock)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ObjectParser category: 'PDFtalk Parsing'.
	ObjectParser comment: 'This parser reads PDF objects from a file or from an object stream.'.
	ObjectParser namespacePath: #(#PDFtalk).
%
# Define class FileParser
DoIt
ObjectParser
	subclass: 'FileParser'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FileParser category: 'PDFtalk Parsing'.
	FileParser comment: 'This parser reads PDF objects from a file.
Indirect objects are expected to have number, generation and #obj and #endobj tags.
Only the file parser knows about streams'.
	FileParser namespacePath: #(#PDFtalk).
%
# Define class ObjectStreamParser
DoIt
ObjectParser
	subclass: 'ObjectStreamParser'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ObjectStreamParser category: 'PDFtalk Parsing'.
	ObjectStreamParser comment: 'This parser reads PDF objects from an object stream.
Indirect objects are expected NOT to have number, generation and #obj and #endobj tags.'.
	ObjectStreamParser namespacePath: #(#PDFtalk).
%
# Define class EncryptedFileParser
DoIt
FileParser
	subclass: 'EncryptedFileParser'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	EncryptedFileParser category: 'PDFtalk Parsing'.
	EncryptedFileParser comment: 'This parser reads PDF objects from an encrypted file.'.
	EncryptedFileParser namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| package policy |
	package := GsPackageLibrary createPackageNamed: #SessionMethods.
	GsPackageLibrary installPackage: package.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: FileInSymbolDictionary.
	policy externalSymbolList: (GsSession currentSession symbolList asArray copyWithout: FileInSymbolDictionary).
	policy enable.
%
category: '*PDFtalk Parsing-reading'
classmethod: Number
readPDFNumberFrom: aStream
	"<Number>
	the sign has been consumed already"

	| integer digits numerator denominator |
	integer := (self readDigitsFrom: aStream) inject: 0 into: [:number :digit | number * 10 + digit].
	(aStream peekFor: $.) ifFalse: [
		^integer].
	digits := self readDigitsFrom: aStream.
	numerator := digits inject: 0 into: [:number :digit | number * 10 + digit].
	denominator := 10 raisedTo: digits size.
	^integer + (numerator / denominator)
%
classmethod: Number
readPDFSyntaxFrom: aStream
	"<Number>
	a decimal number"

	| negative number |
	aStream peekFor: $+.
	negative := aStream peekFor: $-.
	number := self readPDFNumberFrom: aStream.
	negative ifTrue: [
		^number negated].
	^number
%
DoIt
	| dict policy |
	dict := SymbolDictionary new.
	dict at: #UNWRITABLE put: dict.
	dict immediateInvariant.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: dict.
	policy externalSymbolList: Array new.
	policy enable.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'reading objects'
method: EncryptedFileParser
readStreamWith: anOrderedDictionary
	| length |
	length := anOrderedDictionary at: #Length ifAbsent: [
		^ReadError raiseSignal: 'The stream dictonary has no Length entry'].
	^PDF Stream
		on: anOrderedDictionary
		external: (self readStreamContents: length pdfObject asSmalltalkValue)
		encrypted: true
%
method: EncryptedFileParser
readString

	^PDF String fromEncryptedPdf: self readStringCharacters
%
category: 'testing'
method: EncryptedFileParser
isForEncrypted
	^true
%
category: 'converting'
method: FileParser
forEncryption
	"<EncryptedFileParser>
	answer a new parser on the same stream without closing it"

	| newParser |
	newParser := EncryptedFileParser onStream: self stream.
	stream := nil.
	^newParser
%
category: 'initialize-release'
method: FileParser
setPositionToXRef
	"set the stream to the begin of the last cross-reference section"

	self stream setToEnd.
	self skipBackAfterAll: 'startxref'.
	self position: self nextInteger
%
category: 'reading'
method: FileParser
expectEndstream
	"read the token >endstream< off the aStream.
	If not found at the expected position (after reading whitespaces), skip one byte, raise a proceedable error and try again.
	This is a special treatment for streams with a length entry too small by 1"

	[self expectToken: #endstream] on: ReadError do: [:ex |
		(ExtraCharacterInStreamError newWith: self next message: 'Extra character in stream') raiseSignal.
		self expectToken: #endstream]
%
method: FileParser
peekToken
	"<String | Symbol | nil>
	read a token off the aStream.
	Answer the token string.
	Reset the stream to where we found it"

	^self keepPositionAfter: [self nextToken]
%
method: FileParser
readHeaderVersion
	| first5 major minor |
	self reset.
	first5 := self next: 5.
	first5 = '%PDF-' ifFalse: [
		ReadError raiseSignal: '"' , first5 , '" is no PDF header! "%PDF-" expected.'].
	major := self nextInteger.
	self next = $. ifFalse: [
		ReadError raiseSignal: 'invalid version. "." expected.'].
	minor := self nextInteger.
	^Version major: major minor: minor
%
category: 'reading objects'
method: FileParser
pickObjectFor: aReference with: aFile
	"read an object at top level from the file.
	Set the position and reset it to the original after reading, so that calls can be nested."

	^self keepPositionAfter: [
		| result |
		self position: aReference value.
		self expectInteger: aReference number.
		self expectInteger: aReference generation.
		self expectToken: #obj.
		result := aFile indirectObjectFrom: self.
		self expectToken: #endobj.
		result]
%
method: FileParser
readCrossReferenceStreamWith: aFile
	| object |
	self nextInteger.
	self nextInteger.
	self expectToken: #obj.
	object := self readObjectWith: aFile.
	self expectToken: #endobj.
	^object
%
method: FileParser
readDictionaryOrStreamWith: aFile
	"<PDF.Dictionary | PDF.Stream>"

	| dict |
	dict := self readOrderedDictionaryWith: aFile.
	self peekToken == #stream ifTrue: [
		^self readStreamWith: dict].
	^PDF Dictionary on: dict
%
method: FileParser
readStreamContents: numberOfBytes
	"<ByteString>"

	| contents |
	self expectToken: #stream.
	self expectLfPrecededByWhitespace.
	contents := self next: numberOfBytes.
	self expectEndstream.
	^contents
%
method: FileParser
readStreamWith: anOrderedDictionary
	| length |
	length := anOrderedDictionary at: #Length ifAbsent: [
		^ReadError raiseSignal: 'The stream dictonary has no Length entry'].
	^PDF Stream on: anOrderedDictionary external: (self readStreamContents: length pdfObject asSmalltalkValue)
%
category: 'stream access'
method: FileParser
prev
	"<Character>
	Reads the character before the current position.
	Leaves the position before the read character."

	self skip: -1.
	^self peek asCharacter
%
method: FileParser
prev: count
	"<String>
	Reads the characters before the current position.
	Leaves the position before the read characters.
	Throughs an PositionOutOfBoundsError when there are not enought characters available"

	| target |
	target := self position - count.
	self position: target.
	^[(self next: count) asString] ensure: [self position: target]
%
method: FileParser
reset
	^self stream reset
%
method: FileParser
skipBackAfterAll: aString
	"search back from here for aString and leave the position after the occurence.
	If aString was not found, the position is at the beginning"

	| pattern size search |
	pattern := aString reverse.
	size := pattern size.
	search := (self prev: size) reverse.
	[pattern = search] whileFalse: [
		search := (search allButFirst: 1) copyWith: self prev].
	pattern = search ifTrue: [
		self skip: size]
%
category: 'accessing'
method: ObjectParser
initialTokenActions
	^(Dictionary new)
		at: #null put: [:aFile | nil];
		at: #true put: [:aFile | true];
		at: #false put: [:aFile | false];
		at: '(' put: [:aFile | self readString];
		at: '<' put: [:aFile | self readHexString];
		at: '/' put: [:aFile | self readName];
		at: '[' put: [:aFile | self readArrayWith: aFile];
		at: '<<' put: [:aFile | self readDictionaryOrStreamWith: aFile];
		yourself
%
method: ObjectParser
peekPositions
	"<SequenceableCollection of: Integer>
	the stack for the peek positions"

	^peekPositions ifNil: [peekPositions := OrderedCollection new]
%
category: 'actions'
method: ObjectParser
keepPositionAfter: zeroArgumentBlock
	self savePosition.
	^accessLock critical: [zeroArgumentBlock ensure: [self restorePosition]]
%
method: ObjectParser
restorePosition
	"throws Error when the stack is empty"

	self position: self peekPositions removeLast
%
method: ObjectParser
savePosition
	"push the current position onto the stack"

	self peekPositions addLast: self position
%
category: 'initialize-release'
method: ObjectParser
initializeStream: aBinaryStream
	super initializeStream: aBinaryStream.
	accessLock := CriticalSection new
%
category: 'reading'
method: ObjectParser
readNumberOrReference: numericToken with: aFile
	| number pos |
	number := self readNumber: numericToken.
	pos := self position.
	^(self readReferenceOrNilStartingWith: number with: aFile) ifNil: [
		self position: pos.
		number]
%
method: ObjectParser
readReferenceOrNilStartingWith: aNumber with: aFile
	"<Reference | nil>"

	| number2 nextToken |
	aNumber isPositiveInteger ifFalse: [
		^nil].
	nextToken := self nextToken ifNil: [
		^nil].
	nextToken first isPdfNumeric ifFalse: [
		^nil].
	number2 := self readNumber: nextToken.
	number2 nonNegativeInteger ifFalse: [
		^nil].
	self nextToken = #R ifTrue: [
		^aFile referenceAt: (ObjectId number: aNumber asSmalltalkValue generation: number2 asSmalltalkValue)].
	^nil
%
category: 'reading objects'
method: ObjectParser
readArrayWith: aFile
	"<PDF.Array of: PDFObject>"

	| objects done |
	done := false.
	objects := OrderedCollection new.
	[done] whileFalse: [
		self skipWhitespace.
		self atEnd
			ifTrue: [
			ReadError raiseSignal: 'End of Array (]) expected'.
			done := true]
			ifFalse: [
			self peek == $]
				ifTrue: [
				self next.
				done := true]
				ifFalse: [
				objects add: (self readObjectWith: aFile)]]].
	^objects asPDF
%
method: ObjectParser
readDictionaryOrStreamWith: aFile
	"<PDF.Dictionary>
	no streams allowed in object or contents streams"

	^PDF Dictionary on: (self readOrderedDictionaryWith: aFile)
%
method: ObjectParser
readObjectWith: aFile
	"<PDFObject | nil>
	read a PDF object off the aStream.
	Answer the PDF object"

	| token action |
	token := self nextToken ifNil: [
		^nil].
	action := self tokenActions at: token ifAbsent: [
		token first isPdfNumeric ifTrue: [
			^self readNumberOrReference: token with: aFile].
		ReadError raiseSignal: 'Token "' , token asString , '" not recognized'.
		^token asPDF].
	^action value: aFile
%
method: ObjectParser
readOrderedDictionaryWith: aFile
	| done dict |
	done := false.
	dict := Valuemap new.
	[done] whileFalse: [
		self skipWhitespace.
		self
			whenNext: $/
			do: [
			dict at: self nextNameSymbol put: (self readObjectWith: aFile)]
			ifNot: [:char |
			char == $>
				ifTrue: [
				self next.
				self whenNext: $> do: [done := true] ifNot: [:char1 |
					ReadError raiseSignal: 'Read ' , char1 asSource , ' but end of Dictionary (>>) expected']]
				ifFalse: [
				ReadError raiseSignal: 'Read ' , char asSource , ' but $/ or $> expected']]].
	^dict
%
category: 'reading objects'
method: ObjectStreamParser
pickObjectAt: position with: aFile
	"read an object at top level from the object stream.
	Set the position and reset it to the original after reading, so that calls can be nested."

	^self keepPositionAfter: [
		self position: position.
		aFile indirectObjectFrom: self]
%
category: 'instance creation'
classmethod: Parser
onStream: aBinaryStream
	| inst |
	inst := self new.
	inst initializeStream: aBinaryStream.
	^inst
%
classmethod: Parser
onString: aString
	^self onStream: aString asByteArray readStream
%
category: 'accessing'
method: Parser
errors
	"<SequenceableCollection of: Error>
	skipped errors during reading"

	^errors ifNil: [errors := OrderedCollection new]
%
method: Parser
initialTokenActions
	"<Core.Dictionary key: (String | Symbol) value: Block>"

	^self subclassResponsibility
%
method: Parser
stream
	"<Stream>
	a byte read stream"

	^stream
%
method: Parser
tokenActions
	"blocks to read a PDF object with a reader.
	true, false and null answer the identical object (for each file)"

	^tokenActions ifNil: [tokenActions := self initialTokenActions]
%
category: 'initialize-release'
method: Parser
initializeStream: aBinaryStream
	stream := aBinaryStream
%
method: Parser
release
	self stream ifNotNil: [:aStream |
		aStream close.
		stream := nil].
	super release
%
category: 'reading'
method: Parser
addError: anError
	anError raiseSignal.
	self errors add: anError
%
method: Parser
expectInteger: anInteger
	"read a token off the aStream.
	Throw error if the token is not as expected"

	| int pos |
	pos := self position.
	int := self nextInteger.
	int = anInteger ifTrue: [
		^self].
	self addError: (ReadError
		newWith: pos
		message: 'Read "' , int printString , '". "' , anInteger printString , '" expected').
	self position: pos
%
method: Parser
expectLfPrecededByWhitespace
	"read a LF off the aStream ignoring whitespace.
	Throw error if any other character is encountered"

	| char pos |
	pos := self position.
	[self atEnd] whileFalse: [
		char := self next.
		char = Character lf
			ifTrue: [
			^self]
			ifFalse: [
			(self isWhitespace: char) ifFalse: [
				self addError: (ReadError
					newWith: pos
					message: 'Read "' , char asSource , '". "<Character lf>" expected').
				^self position: pos]]].
	self addError: (ReadError newWith: pos message: 'Unexpected end of stream').
	self position: pos
%
method: Parser
expectToken: aStringOrSymbol
	"read a token off the aStream.
	Throw error if the token is not as expected"

	| token pos error |
	pos := self position.
	token := self nextToken.
	token = aStringOrSymbol ifTrue: [
		^self].
	error := ReadError
		newWith: pos
		message: 'Read ' , token printString , '. "' , aStringOrSymbol , '" expected'.
	self position: pos.
	self addError: error
%
method: Parser
nextEncodedName
	"<String>"

	| wst |
	wst := String new writeStream.
	[self atEnd] whileFalse: [
		| char |
		char := self peek.
		(char isPdfRegular and: [
		char asInteger between: 16r21 and: 16r7E])
				ifTrue: [
				wst nextPut: self next]
				ifFalse: [
				^wst contents]].
	^wst contents
%
method: Parser
nextEncodedString
	"<String>
	The position is just after the first opening parenthesis.
	aStream is read up to and including the closing balanced parenthesis"

	| wst count c |
	count := 0.
	wst := String new writeStream.
	[self atEnd] whileFalse: [
		c := self next.
		wst nextPut: c.
		c == $\
			ifTrue: [wst nextPut: self next]
			ifFalse: [
			c == $( ifTrue: [
				count := count + 1].
			c == $) ifTrue: [
				count := count - 1.
				count negative ifTrue: [
					wst skip: -1.
					^wst contents]]]].
	^wst contents
%
method: Parser
nextInteger
	"<Integer>"

	| wst |
	self skipWhitespace.
	wst := String new writeStream.
	[self atEnd] whileFalse: [
		self peek isDigit
			ifTrue: [wst nextPut: self next]
			ifFalse: [
			^wst contents asNumber]].
	^wst contents asNumber
%
method: Parser
nextNameSymbol
	"<Symbol>"

	^(NameEncoder decoded: self nextEncodedName) asSymbol
%
method: Parser
nextNumberToken
	"<String>"

	| wst char hadPeriod |
	wst := String new writeStream.
	char := self peek.
	char == $+ ifTrue: [
		self next].
	char == $- ifTrue: [
		wst nextPut: self next].
	hadPeriod := false.
	self peek == $. ifTrue: [wst nextPut: $0].
	[self atEnd] whileFalse: [
		char := self peek.
		char == $.
			ifTrue: [
			hadPeriod
				ifTrue: [
				^wst contents]
				ifFalse: [
				wst nextPut: self next.
				hadPeriod := true]]
			ifFalse: [
			char isDigit
				ifTrue: [wst nextPut: self next]
				ifFalse: [
				^wst contents]]].
	^wst contents
%
method: Parser
nextToken
	"<String | Symbol | nil>
	read a token off the aStream.
	Answer the token string"

	| char |
	self skipWhitespace.
	char := self peek ifNil: [
		^nil].
	char isPdfDelimiter ifTrue: [
		self next.
		char == $< ifTrue: [
			self peek == $< ifTrue: [
				self next.
				^'<<']].
		^String with: char].
	char isPdfNumeric ifTrue: [
		^self nextNumberToken].
	char isPdfRegular ifTrue: [
		^self nextNameSymbol].
	ReadError raiseSignal: 'No token found for: ' , char printString
%
method: Parser
skipWhitespace
	[self atEnd] whileFalse: [
		| char |
		char := self peek.
		(self isWhitespace: char)
			ifTrue: [self next]
			ifFalse: [
			char = $%
				ifTrue: [self skipToEol]
				ifFalse: [
				^self]]]
%
method: Parser
whenNext: aCharacter do: trueZeroArgumentBlock ifNot: falseOneArgumentBlock
	"read aCharacter as next from the aStream.
	If aCharacter is the next one, leave the position after aCharacter.
	If aCharacter is not the next, leave the position before aCharacter"

	| char |
	char := self next.
	^char == aCharacter
		ifTrue: [trueZeroArgumentBlock value]
		ifFalse: [
		self skip: -1.
		falseOneArgumentBlock value: char]
%
category: 'reading objects'
method: Parser
readHexString
	"<PDFString>"

	^(HexStringEncoder decoded: (self upTo: $>)) asPDF
%
method: Parser
readName
	"<PDF.Name>"

	^self nextNameSymbol asPDF
%
method: Parser
readNumber: token
	| numstr |
	numstr := token.
	numstr first == $+ ifTrue: [
		numstr := token allButFirst: 1].
	(token includes: $.) ifTrue: [
		^(Float fromStringLocaleC: numstr) asPDF].
	^numstr asNumber asPDF
%
method: Parser
readString
	"<PDF.String>"

	^self readStringCharacters asPDF
%
method: Parser
readStringCharacters
	"<String>"

	^StringEncoder decoded: self nextEncodedString
%
category: 'stream access'
method: Parser
atEnd
	"<Boolean>"

	^self stream atEnd
%
method: Parser
next
	"<Character | nil>"

	^self stream next ifNotNil: [:int | int asCharacter]
%
method: Parser
next: count
	"<String>"
	
	^(self stream next: count) asString
%
method: Parser
peek
	"<Character | nil>"

	^self stream peek ifNotNil: [:int | int asCharacter]
%
method: Parser
position
	"<Integer>"

	^self stream position
%
method: Parser
position: anInteger
	self stream position: anInteger
%
method: Parser
skip: anInteger
	self stream skip: anInteger
%
method: Parser
skipToEol
	"skip all characters up to and including EndOfLine"

	[self atEnd] whileFalse: [
		| int |
		int := self stream next.
		(#(10 13) includes: int) ifTrue: [
			(int == 13 and: [
			self stream peek = 10]) ifTrue: [
					self stream next].
			^self]]
%
method: Parser
upTo: aCharacter
	"<String>
	answers all characters up to aCharacter as string.
	aCharacter is consumed.
	If aCharacter does not occur, upToEnd is answered"

	| wst |
	wst := String new writeStream.
	[self atEnd] whileFalse: [
		| char |
		char := self next.
		char = aCharacter ifTrue: [
			^wst contents].
		wst nextPut: char].
	^wst contents
%
category: 'testing'
method: Parser
isForEncrypted
	^false
%
method: Parser
isWhitespace: aCharacter
	^#(0 9 10 12 13 32) includes: aCharacter asInteger
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Colour'.
	dict at: #comment put: 'PDF Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6, pp. 138

PDF includes facilities for specifying the colours of graphics objects to be painted on the current page. The colour facilities are divided into two parts:
	â¢ Colour specification. A conforming writer may specify abstract colours in a device-independent way. Colours may be described in any of a variety of colour systems, or colour spaces. Some colour spaces are related to device colour representation (grayscale, RGB, CMYK), others to human visual perception (CIE-based). Certain special features are also modelled as colour spaces: patterns, colour mapping, separations, and high-fidelity and multitone colour.
	â¢ Colour rendering. A conforming reader shall reproduce colours on the raster output device by a multiple-step process that includes some combination of colour conversion, gamma correction, halftoning, and scan conversion. Some aspects of this process use information that is specified in PDF. However, unlike the facilities for colour specification, the colour-rendering facilities are device-dependent and should not be included in a page description.'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Colour'.
	dict at: #storeVersion put: '2.5.0.0'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%

# VisualWorks stub classes

DoIt
Object
	subclass: 'CoverageValue'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
CoverageValue category: 'PDFtalk Colour VW stub class'.
CoverageValue comment: 'VisualWorks class'.
%
# Define class CmykColor
DoIt
Value
	subclass: 'CmykColor'
	instVarNames: #(name cyan magenta yellow black rgb)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalkLibrary
%
DoIt
	CmykColor category: 'PDFtalk Colour'.
	CmykColor comment: 'CmykColor used for printing.

This class is defined in the Smalltalk.Graphics namespace, because it is widely used elsewhere.

Instance Variables
	name		<String>		the color name
	cyan		<Number>		between 0 and 1
	magenta	<Number>		between 0 and 1
	yellow		<Number>		between 0 and 1
	black		<Number>		the k component. Between 0 and 1
	rgb			<ByteArray>	optional explicit screen color. ByteArray with 3 bytes (RGB)
'.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class CIEColourSpace
DoIt
PDFArray
	subclass: 'CIEColourSpace'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CIEColourSpace category: 'PDFtalk Colour'.
	CIEColourSpace comment: 'PDF CIE-Based Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.5, pp. 144.

Calibrated colour in PDF shall be defined in terms of an international standard used in the graphic arts, television, and printing industries. CIE-based colour spaces enable a page description to specify colour values in a way that is related to human visual perception. The goal is for the same colour specification to produce consistent results on different output devices, within the limitations of each device; Figure L.2 in Annex Lillustrates the kind of variation in colour reproduction that can result from the use of uncalibrated colour on different devices. PDF 1.1 supports three CIE-based colour space families, named CalGray, CalRGB, and Lab; PDF 1.3 added a fourth, named ICCBased.

NOTE 1
In PDF 1.1, a colour space family named CalCMYK was partially defined, with the expectation that its definition would be completed in a future version. However, this feature has been deprecated. PDF 1.3 and later versions support calibrated four-component colour spaces by means of ICC profiles. A conforming reader should ignore CalCMYK colour space attributes and render colours specified in this family as if they had been specified using DeviceCMYK.

NOTE 2
The details of the CIE colourimetric system and the theory on which it is based are beyond the scope of this specification; see the Bibliography for sources of further information. The semantics of CIE-based colour spaces are defined in terms of the relationship between the spaceâs components and the tristimulus values X, Y, and Z of the CIE 1931 XYZ space. The CalRGB and Lab colour spaces (PDF 1.1) are special cases of three-component CIE-based colour spaces, known as CIE-based ABC colour spaces. These spaces are defined in terms of a two-stage, nonlinear transformation of the CIE 1931 XYZ space. The formulation of such colour spaces models a simple zone theory of colour vision, consisting of a nonlinear trichromatic first stage combined with a nonlinear opponent-colour second stage. This formulation allows colours to be digitized with minimum loss of fidelity, an important consideration in sampled images.

Colour values in a CIE-based ABC colour space shall have three components, arbitrarily named A, B, and C. The first stage shall transform these components by first forcing their values to a specified range, then applying decoding functions, and then multiplying the results by a 3-by-3 matrix, producing three intermediate components arbitrarily named L, M, and N. The second stage shall transform these intermediate components in a similar fashion, producing the final X, Y, and Z components of the CIE 1931 XYZ space.

Colour spaces in the CIE-based families shall be defined by an array
	[name dictionary]
where name is the name of the family and dictionary is a dictionary containing parameters that further characterize the space. The entries in this dictionary have specific interpretations that depend on the colour space; some entries are required and some are optional. Setting the current stroking or nonstroking colour space to any CIE-based colour space shall initialize all components of the corresponding current colour to 0.0 (unless the range of valid values for a given component does not include 0.0, in which case the nearest valid value shall be substituted.).

NOTE 3
The model and terminology used hereâCIE-based ABC (above) and CIE-based A (below)âare derived from the PostScript language, which supports these colour space families in their full generality. PDF supports specific useful cases of CIE-based ABC and CIE-based A spaces; most others can be represented as ICCBased spaces.'.
	CIEColourSpace namespacePath: #(#PDFtalk).
%
# Define class Lab
DoIt
CIEColourSpace
	subclass: 'Lab'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Lab category: 'PDFtalk Colour'.
	Lab comment: 'PDF Lab Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.5.4, pp. 148.

A Lab colour space is a CIE-based ABC colour space with two transformation stages. 
In this type of space, A, B, and C represent the L*, a*, and b* components of a CIE 1976 L*a*b* space. 
The range of the first (L*) component shall be 0 to 100; 
the ranges of the second and third (a* and b*) components shall be defined by the Range entry in the colour space dictionary.'.
	Lab namespacePath: #(#PDFtalk).
%
# Define class DeviceColourSpace
DoIt
Name
	subclass: 'DeviceColourSpace'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	DeviceColourSpace category: 'PDFtalk Colour'.
	DeviceColourSpace comment: 'PDF Device Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.4, pp. 142.

The device colour spaces enable a page description to specify colour values that are directly related to their representation on an output device. 
Colour values in these spaces map directly (or by simple conversions) to the application of device colorants, such as quantities of ink or intensities of display phosphors. 
This enables a conforming writer to control colours precisely for a particular device, but the results might not be consistent from one device to another.

Output devices form colours either by adding light sources together or by subtracting light from an illuminating source. 
Computer displays and film recorders typically add colours; printing inks typically subtract them. 
These two ways of forming colours give rise to two complementary methods of colour specification, called additive and subtractive colour. 
The most widely used forms of these two types of colour specification are known as RGB and CMYK, respectively, 
for the names of the primary colours on which they are based. 
They correspond to the following device colour spaces:
	â¢	DeviceGray controls the intensity of achromatic light, on a scale from black to white.
	â¢	DeviceRGB controls the intensities of red, green, and blue light, the three additive primary colours used in displays.
	â¢	DeviceCMYK controls the concentrations of cyan, magenta, yellow, and black inks, the four subtractive process colours used in printing.

NOTE
Although the notion of explicit colour spaces is a PDF 1.1 feature, 
the operators for specifying colours in the device colour spacesâG, g, RG, rg, K, and kâare available in all versions of PDF. 
Beginning with PDF 1.2, colours specified in device colour spaces can optionally be remapped systematically into other colour spaces.

In the transparent imaging model (PDF 1.4), the use of device colour spaces is subject to special treatment 
within a transparency group whose group colour space is CIE-based. 
In particular, the device colour space operators should be used only if device colour spaces have 
been remapped to CIE-based spaces by means of the default colour space mechanism. 
Otherwise, the results are implementation-dependent and unpredictable.'.
	DeviceColourSpace namespacePath: #(#PDFtalk).
%
# Define class DeviceCMYK
DoIt
DeviceColourSpace
	subclass: 'DeviceCMYK'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	DeviceCMYK category: 'PDFtalk Colour'.
	DeviceCMYK comment: 'PDF DeviceCMYK Colour Space as defined in PDF 32000_2008.pdf, section 8.6.4.4, pp. 143.

The DeviceCMYK colour space allows colours to be specified according to the subtractive CMYK (cyan-magenta-yellow-black) model typical of printers and other paper-based output devices. The four components in a DeviceCMYK colour value shall represent the concentrations of these process colorants. Each component shall be a number in the range 0.0 to 1.0, where 0.0 shall denote the complete absence of a process colorant and 1.0 shall denote maximum concentration (absorbs as much as possible of the additive primary).

NOTE
As much as the reflective colours (CMYK) decrease reflection with increased ink values and radiant colours (RGB) increases the intensity of colours with increased values the values work in an opposite manner.

EXAMPLE
The following shows alternative ways to select the DeviceCMYK colour space and a specific colour within that space for stroking operations.
	/DeviceCMYK CS 					% Set DeviceCMYK colour space
	cyan magenta yellow black SC 		% Set colour
	cyan magenta yellow black K 		% Set both in one operation
The CS and SC operators shall select the current stroking colour space and current stroking colour separately; K shall set them in combination. 
The cs, sc, and k operators shall perform the same functions for nonstroking operations. 
Setting either current colour space to DeviceCMYK shall initialize the cyan, magenta, and yellow components of the corresponding current colour to 0.0 and the black component to 1.0.'.
	DeviceCMYK namespacePath: #(#PDFtalk).
%
# Define class ICCBased
DoIt
CIEColourSpace
	subclass: 'ICCBased'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ICCBased category: 'PDFtalk Colour'.
	ICCBased comment: 'PDF ICCBased Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.5.5, pp. 149.

ICCBased colour spaces (PDF 1.3) shall be based on a cross-platform colour profile as defined by the International Color Consortium (ICC). 
Unlike the CalGray, CalRGB, and Lab colour spaces, which are characterized by entries in the colour space dictionary, 
an ICCBased colour space shall be characterized by a sequence of bytes in a standard format. 
Details of the profile format can be found in the ICC specification.'.
	ICCBased namespacePath: #(#PDFtalk).
%
# Define class CalRGBColourSpaceDictionary
DoIt
PDFDictionary
	subclass: 'CalRGBColourSpaceDictionary'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CalRGBColourSpaceDictionary category: 'PDFtalk Colour'.
	CalRGBColourSpaceDictionary comment: 'PDF CalRGB Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.5.3, pp. 146.

A CalRGB colour space is a CIE-based ABC colour space with only one transformation stage instead of two. 
In this type of space, A, B, and C represent calibrated red, green, and blue colour values. 
These three colour components shall be in the range 0.0 to 1.0; 
component values falling outside that range shall be adjusted to the nearest valid value without error indication. 
The decoding functions are gamma functions whose coefficients shall be specified by the Gamma entry in the colour space dictionary. 
The transformation matrix shall be defined by the dictionaryâs Matrix entry. 
Since there is no second transformation stage, âDecode LMNâ and âMatrix LMNâ shall be implicitly taken to be identity transformations.
'.
	CalRGBColourSpaceDictionary namespacePath: #(#PDFtalk).
%
# Define class ICCProfileStream
DoIt
PDFStream
	subclass: 'ICCProfileStream'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ICCProfileStream category: 'PDFtalk Colour'.
	ICCProfileStream comment: 'PDF ICCBased Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.5.5, pp. 149.

ICCBased colour spaces (PDF 1.3) shall be based on a cross-platform colour profile as defined by the International Color Consortium (ICC).
Unlike the CalGray, CalRGB, and Lab colour spaces, which are characterized by entries in the colour space dictionary, an ICCBased colour space shall be characterized by a sequence of bytes in a standard format.'.
	ICCProfileStream namespacePath: #(#PDFtalk).
%
# Define class DeviceNProcessDictionary
DoIt
PDFDictionary
	subclass: 'DeviceNProcessDictionary'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	DeviceNProcessDictionary category: 'PDFtalk Colour'.
	DeviceNProcessDictionary comment: 'PDF DeviceN Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.6.5, pp. 161.

A dictionary that describes the process colour space whose components are included in the DeviceN colour space'.
	DeviceNProcessDictionary namespacePath: #(#PDFtalk).
%
# Define class CalGrayColourSpaceDictionary
DoIt
PDFDictionary
	subclass: 'CalGrayColourSpaceDictionary'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CalGrayColourSpaceDictionary category: 'PDFtalk Colour'.
	CalGrayColourSpaceDictionary comment: 'PDF CalGray Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.5.2, pp. 145.

A CalGray colour space (PDF 1.1) is a special case of a single-component CIE-based colour space, known as a CIE-based A colour space. 
This type of space is the one-dimensional (and usually achromatic) analog of CIE-based ABC spaces. 
Colour values in a CIE-based A space shall have a single component, arbitrarily named A.'.
	CalGrayColourSpaceDictionary namespacePath: #(#PDFtalk).
%
# Define class SpecialColourSpace
DoIt
PDFArray
	subclass: 'SpecialColourSpace'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SpecialColourSpace category: 'PDFtalk Colour'.
	SpecialColourSpace comment: 'PDF Special Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.6, pp. 155.

Special colour spaces add features or properties to an underlying colour space. 
There are four special colour space families: Pattern, Indexed, Separation, and DeviceN.'.
	SpecialColourSpace namespacePath: #(#PDFtalk).
%
# Define class DeviceN
DoIt
SpecialColourSpace
	subclass: 'DeviceN'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	DeviceN category: 'PDFtalk Colour'.
	DeviceN comment: 'PDF DeviceN Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.6.5, pp. 159.

DeviceN colour spaces (PDF 1.3) may contain an arbitrary number of colour components.'.
	DeviceN namespacePath: #(#PDFtalk).
%
# Define class Pattern
DoIt
SpecialColourSpace
	subclass: 'Pattern'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Pattern category: 'PDFtalk Colour'.
	Pattern comment: 'PDF Pattern Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.6.2, pp. 156.

A Pattern colour space (PDF 1.2) specifies that an area is to be painted with a pattern rather than a single colour. 
The pattern shall be either a tiling pattern (type 1) or a shading pattern (type 2).'.
	Pattern namespacePath: #(#PDFtalk).
%
# Define class SimplePattern
DoIt
Name
	subclass: 'SimplePattern'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SimplePattern category: 'PDFtalk Colour'.
	SimplePattern comment: 'An UncolouredPattern without arguments as it appears in a color space resource dictionary'.
	SimplePattern namespacePath: #(#PDFtalk).
%
# Define class Separation
DoIt
SpecialColourSpace
	subclass: 'Separation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Separation category: 'PDFtalk Colour'.
	Separation comment: 'PDF Separation Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.6.4, pp. 157.

A Separation colour space (PDF 1.2) provides a means for specifying the use of additional colorants or 
for isolating the control of individual colour components of a device colour space for a subtractive device. 
When such a space is the current colour space, the current colour shall be a single-component value, 
called a tint, that controls the application of the given colorant or colour components only.'.
	Separation namespacePath: #(#PDFtalk).
%
# Define class LabColourSpaceDictionary
DoIt
PDFDictionary
	subclass: 'LabColourSpaceDictionary'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	LabColourSpaceDictionary category: 'PDFtalk Colour'.
	LabColourSpaceDictionary comment: 'PDF Lab Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.5.4, pp. 148.

A Lab colour space is a CIE-based ABC colour space with two transformation stages. 
In this type of space, A, B, and C represent the L*, a*, and b* components of a CIE 1976 L*a*b* space. 
The range of the first (L*) component shall be 0 to 100; 
the ranges of the second and third (a* and b*) components shall be defined by the Range entry in the colour space dictionary.
'.
	LabColourSpaceDictionary namespacePath: #(#PDFtalk).
%
# Define class Indexed
DoIt
SpecialColourSpace
	subclass: 'Indexed'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Indexed category: 'PDFtalk Colour'.
	Indexed comment: 'PDF Indexed Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.6.3, pp. 156.

An Indexed colour space specifies that an area is to be painted using a colour map or colour table of arbitrary colours in some other space. 
A conforming reader shall treat each sample value as an index into the colour table and shall use the colour value it finds there. 
This technique can considerably reduce the amount of data required to represent a sampled image.'.
	Indexed namespacePath: #(#PDFtalk).
%
# Define class DeviceNColourSpaceAttributes
DoIt
PDFDictionary
	subclass: 'DeviceNColourSpaceAttributes'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	DeviceNColourSpaceAttributes category: 'PDFtalk Colour'.
	DeviceNColourSpaceAttributes comment: 'PDF DeviceN Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.6.5, pp. 161.

The optional attributes parameter shall be a dictionary containing additional information about the components of colour space that conforming readers may use.
Conforming readers need not use the alternateSpace and tintTransform parameters, and may instead use custom blending algorithms, along with other information provided in the attributes dictionary if present. (If the value of the Subtype entry in the attributes dictionary is NChannel, such information shall be present.)
However, alternateSpace and tintTransform shall always be provided for conforming readers that want to use them or do not support PDF 1.6.
'.
	DeviceNColourSpaceAttributes namespacePath: #(#PDFtalk).
%
# Define class UncolouredPattern
DoIt
SpecialColourSpace
	subclass: 'UncolouredPattern'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	UncolouredPattern category: 'PDFtalk Colour'.
	UncolouredPattern comment: 'PDF Uncoloured Tiling Patterns as defined in PDF 32000_2008.pdf, section 8.7.3.3, pp. 178.

An uncoloured tiling pattern is a pattern that has no inherent colour: the colour shall be specified separately whenever the pattern is used.
It provides a way to tile different regions of the page with pattern cells having the same shape but different colours.
This type of pattern shall be identified by a pattern type of 1 and a paint type of 2 in the pattern dictionary.
The patternâs content stream shall not explicitly specify any colours; it may paint an image mask but no other kind of image.

A Pattern colour space representing an uncoloured tiling pattern shall have a parameter: an object identifying the underlying colour space in which the actual colour of the pattern shall be specified.
The underlying colour space shall be given as the second element of the array that defines the Pattern colour space.
'.
	UncolouredPattern namespacePath: #(#PDFtalk).
%
# Define class ColourSpace
DoIt
Objecttype
	subclass: 'ColourSpace'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ColourSpace category: 'PDFtalk Colour'.
	ColourSpace comment: 'PDF Colour Space Families as defined in PDF 32000_2008.pdf, section 8.6.3, pp. 139.

Colour spaces are classified into colour space families. 
Spaces within a family share the same general characteristics; 
they shall be distinguished by parameter values supplied at the time the space is specified. 
The families fall into three broad categories:

	â¢	Device colour spaces directly specify colours or shades of gray that the output device shall produce. 
		They provide a variety of colour specification methods, including grayscale, RGB (red-green-blue), and CMYK(cyan-magenta-yellow-black), 
		corresponding to the colour space families DeviceGray, DeviceRGB, and DeviceCMYK. 
		Since each of these families consists of just a single colour space with no parameters, 
		they may be referred to as the DeviceGray, DeviceRGB, and DeviceCMYK colour spaces.
	â¢	CIE-based colour spaces shall be based on an international standard for colour specification created 
		by the Commission Internationale de lâÃclairage (International Commission on Illumination). 
		These spaces specify colours in a way that is independent of the characteristics of any particular output device. 
		Colour space families in this category include CalGray, CalRGB, Lab, and ICCBased. 
		Individual colour spaces within these families shall be specified by means of dictionaries containing the parameter values needed to define the space.
	â¢	Special colour spaces add features or properties to an underlying colour space. 
		They include facilities for patterns, colour mapping, separations, and high-fidelity and multitone colour. 
		The corresponding colour space families are Pattern, Indexed, Separation, and DeviceN. 
		Individual colour spaces within these families shall be specified by means of additional parameters.
'.
	ColourSpace namespacePath: #(#PDFtalk).
%
# Define class DeviceNMixingHints
DoIt
PDFDictionary
	subclass: 'DeviceNMixingHints'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	DeviceNMixingHints category: 'PDFtalk Colour'.
	DeviceNMixingHints comment: 'PDF DeviceN Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.6.5, pp. 161.

Provides information about the characteristics of colorants that may be used in blending calculations when the actual colorants are not available on the target device.
Conforming readers need not use this information'.
	DeviceNMixingHints namespacePath: #(#PDFtalk).
%
# Define class DeviceRGB
DoIt
DeviceColourSpace
	subclass: 'DeviceRGB'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	DeviceRGB category: 'PDFtalk Colour'.
	DeviceRGB comment: 'PDF DeviceRGB Colour Space as defined in PDF 32000_2008.pdf, section 8.6.4.3, pp. 143.

Colours in the DeviceRGB colour space shall be specified according to the additive RGB (red-green-blue) colour model, 
in which colour values shall be defined by three components representing the intensities of the additive primary colorants red, green, and blue. 
Each component shall be specified by a number in the range 0.0 to 1.0, 
where 0.0 shall denote the complete absence of a primary component and 1.0 shall denote maximum intensity.

EXAMPLE
This example shows alternative ways to select the DeviceRGB colour space and a specific colour within that space for stroking operations.
	/DeviceRGB CS 	% Set DeviceRGB colour space
	red green blue SC 	% Set colour
	red green blue RG 	% Set both in one operation
The CS and SC operators shall select the current stroking colour space and current stroking colour separately; RG shall set them in combination. 
The cs, sc, and rg operators shall perform the same functions for nonstroking operations. 
Setting either current colour space to DeviceRGB shall initialize the red, green, and blue components of the corresponding current colour to 0.0.'.
	DeviceRGB namespacePath: #(#PDFtalk).
%
# Define class CalGray
DoIt
CIEColourSpace
	subclass: 'CalGray'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CalGray category: 'PDFtalk Colour'.
	CalGray comment: 'PDF CalGray Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.5.2, pp. 145.

A CalGray colour space (PDF 1.1) is a special case of a single-component CIE-based colour space, known as a CIE-based A colour space. 
This type of space is the one-dimensional (and usually achromatic) analog of CIE-based ABC spaces. 
Colour values in a CIE-based A space shall have a single component, arbitrarily named A.'.
	CalGray namespacePath: #(#PDFtalk).
%
# Define class CalRGB
DoIt
CIEColourSpace
	subclass: 'CalRGB'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CalRGB category: 'PDFtalk Colour'.
	CalRGB comment: 'PDF CalRGB Colour Spaces as defined in PDF 32000_2008.pdf, section 8.6.5.3, pp. 146.

A CalRGB colour space is a CIE-based ABC colour space with only one transformation stage instead of two. 
In this type of space, A, B, and C represent calibrated red, green, and blue colour values. 
These three colour components shall be in the range 0.0 to 1.0; 
component values falling outside that range shall be adjusted to the nearest valid value without error indication. 
The decoding functions are gamma functions whose coefficients shall be specified by the Gamma entry in the colour space dictionary. 
The transformation matrix shall be defined by the dictionaryâs Matrix entry. 
Since there is no second transformation stage, âDecode LMNâ and âMatrix LMNâ shall be implicitly taken to be identity transformations.'.
	CalRGB namespacePath: #(#PDFtalk).
%
# Define class DeviceGray
DoIt
DeviceColourSpace
	subclass: 'DeviceGray'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	DeviceGray category: 'PDFtalk Colour'.
	DeviceGray comment: 'PDF DeviceGrayColour Space as defined in PDF 32000_2008.pdf, section 8.6.4.2, pp. 143.

Black, white, and intermediate shades of gray are special cases of full colour. 
A grayscale value shall be represented by a single number in the range 0.0 to 1.0, 
where 0.0 corresponds to black, 1.0 to white, and intermediate values to different gray levels.

EXAMPLE
This example shows alternative ways to select the DeviceGray colour space and a specific gray level within that space for stroking operations.
	/DeviceGray CS 	% Set DeviceGray colour space
	gray SC 			% Set gray level
	gray G 				% Set both in one operation
The CS and SC operators shall select the current stroking colour space and current stroking colour separately; G shall set them in combination. 
(The cs, sc, and g operators shall perform the same functions for nonstroking operations.) 
Setting either current colour space to DeviceGray shall initialize the corresponding current colour to 0.0.'.
	DeviceGray namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
category: 'instance creation'
classmethod: CmykColor
fromColorValue: aColorValue
	aColorValue = ColorValue black ifTrue: [
		^self black].
	aColorValue isGray ifTrue: [
		^self gray: 1 - aColorValue brightness].
	^self
		cyan: aColorValue cyan
		magenta: aColorValue magenta
		yellow: aColorValue yellow
		black: 1 - aColorValue brightness
		rgb: aColorValue asByteArray
%
classmethod: CmykColor
gray: colorValueBrightness
	colorValueBrightness <= 0 ifTrue: [
		^self white].
	colorValueBrightness >= 1 ifTrue: [
		^self black].
	^self cyan: 0 magenta: 0 yellow: 0 black: colorValueBrightness
%
classmethod: CmykColor
name: nameString cyan: cyanNumber magenta: magentaNumber yellow: yellowNumber black: blackNumber rgb: rgbByteArray
	| inst |
	inst := self new.
	inst
		initializeName: nameString
		cyan: cyanNumber
		magenta: magentaNumber
		yellow: yellowNumber
		black: blackNumber
		rgb: rgbByteArray.
	^inst
%
category: 'instance creation optional'
classmethod: CmykColor
cyan: cyanNumber magenta: magentaNumber yellow: yellowNumber black: blackNumber
	| inst |
	inst := self new.
	inst
		initializeName: nil
		cyan: cyanNumber
		magenta: magentaNumber
		yellow: yellowNumber
		black: blackNumber
		rgb: nil.
	^inst
%
classmethod: CmykColor
cyan: cyanNumber magenta: magentaNumber yellow: yellowNumber black: blackNumber rgb: rgbByteArray
	| inst |
	inst := self new.
	inst
		initializeName: nil
		cyan: cyanNumber
		magenta: magentaNumber
		yellow: yellowNumber
		black: blackNumber
		rgb: rgbByteArray.
	^inst
%
classmethod: CmykColor
name: nameString cyan: cyanNumber magenta: magentaNumber yellow: yellowNumber black: blackNumber
	| inst |
	inst := self new.
	inst
		initializeName: nameString
		cyan: cyanNumber
		magenta: magentaNumber
		yellow: yellowNumber
		black: blackNumber
		rgb: nil.
	^inst
%
category: 'named instances'
classmethod: CmykColor
black
	^self name: 'Black' cyan: 0 magenta: 0 yellow: 0 black: 1
%
classmethod: CmykColor
white
	^self name: 'White' cyan: 0 magenta: 0 yellow: 0 black: 0
%
category: 'specification'
classmethod: CmykColor
localSpecification
	<optional: #name class: #(#String) default: 'String new'>
	<constant: #cyan class: #(#Number)>
	<constant: #magenta class: #(#Number)>
	<constant: #yellow class: #(#Number)>
	<constant: #black class: #(#Number)>
	<optional: #rgb class: #(#ByteArray) default: 'self computedRGB'>
%
category: 'accessing'
method: CmykColor
black
	"<Number[0..1]>"

	^black
%
method: CmykColor
cyan
	"<Number[0..1]>"

	^cyan
%
method: CmykColor
magenta
	"<Number[0..1]>"

	^magenta
%
method: CmykColor
name
	"<String>"

	^name ifNil: [String new]
%
method: CmykColor
nameForPostScript
	"<String>"

	self name isEmpty ifTrue: [
		^self syntheticName].
	^self name
%
method: CmykColor
rgb
	"<ByteArray3>
	optional - can have a custom RGB color attached"

	^rgb ifNil: [self computedRGB]
%
method: CmykColor
syntheticName
	"<String>"

	| wst |
	wst := WriteStream on: (String new: 10).
	wst
		nextPutAll: (self cyan * 100) rounded printString;
		nextPut: $c;
		nextPutAll: (self magenta * 100) rounded printString;
		nextPut: $m;
		nextPutAll: (self yellow * 100) rounded printString;
		nextPut: $y;
		nextPutAll: (self black * 100) rounded printString;
		nextPut: $k.
	^wst contents
%
method: CmykColor
yellow
	"<Number[0..1]>"

	^yellow
%
category: 'converting'
method: CmykColor
asArray
	"<Array4 of: Number>
	Array of 4 numbers between 0.0 (zero concentration) and 1.0 (maximum concentration) suitable for PDF DeviceCMYK"

	^Array
		with: self cyan
		with: self magenta
		with: self yellow
		with: self black
%
method: CmykColor
asCMY
	"<Array3 of: Number [0..1]>"

	| c blackInv m y |
	blackInv := 1 - self black.
	self isMonochrome ifTrue: [
		^Array
			with: blackInv
			with: blackInv
			with: blackInv].
	self black = 1.0 ifTrue: [
		^#(0 0 0)].
	c := self cyan * blackInv.
	m := self magenta * blackInv.
	y := self yellow * blackInv.
	^Array
		with: c + self black
		with: m + self black
		with: y + self black
%
method: CmykColor
asCmykColor
	"<CmykColor>"

	^self
%
method: CmykColor
asColorRef
	"<Integer>"

	^self asColorValue asColorRef
%
method: CmykColor
asColorValue
	"<ColorValue>"

	| cmy |
	rgb ifNotNil: [:rgbBytes |
		^ColorValue red: (rgbBytes at: 1) green: (rgbBytes at: 2) blue: (rgbBytes at: 3) range: 255].
	self cyan + self magenta + self yellow = 0 ifTrue: [
		^ColorValue brightness: 1 - self black].
	self black = 1.0 ifTrue: [
		^ColorValue black].
	cmy := self asCMY.
	^ColorValue red: 1 - (cmy at: 1) green: 1 - (cmy at: 2) blue: 1 - (cmy at: 3)
%
method: CmykColor
asGrayValue
	"<Number>
	between 0.0 (Black) and 1.0 (White) suitable for PDF DeviceGray"

	self isMonochrome ifFalse: [
		^self error: 'no grayscale color'].
	^1.0 - self black
%
method: CmykColor
asPDFArray
	"<Array4 of: Number>
	Array of 4 numbers between 0.0 (zero concentration) and 1.0 (maximum concentration) suitable for PDF DeviceCMYK"

	^Array
		with: self cyan
		with: self magenta
		with: self yellow
		with: self black
%
method: CmykColor
asPsComment
	"<String>
	a string suitable for eps header"

	| wst |
	wst := WriteStream on: (String new: 20).
	wst
		nextPutAll: (self asPsNumber: self cyan);
		space;
		nextPutAll: (self asPsNumber: self magenta);
		space;
		nextPutAll: (self asPsNumber: self yellow);
		space;
		nextPutAll: (self asPsNumber: self black);
		space;
		nextPutAll: self psName.
	^wst contents
%
method: CmykColor
asPsNumber: aNumber
	"<String>
	a string suitable for eps header"

	^(aNumber isInteger
		ifTrue: [aNumber]
		ifFalse: [aNumber asFloat]) asSource
%
method: CmykColor
blendWith: aCmykColor
	"DOES NOT WORK - need to study CMYK math"
	"Answer a new CmykColor which is a 50% blend of the receiver and the
	supplied CmykColor."
	"Simply interpolates in CMYK space."

	^self class
		cyan: (self cyan + aCmykColor cyan) / 2
		magenta: (self magenta + aCmykColor magenta) / 2
		yellow: (self yellow + aCmykColor yellow) / 2
		black: (self black + aCmykColor black) / 2
%
method: CmykColor
computedRGB
	"<ByteArray3 of: Number [0..255]>"

	^self asColorValue asByteArray
%
method: CmykColor
psName
	"<String>
	a string suitable for PostScript sources"

	| wst |
	wst := WriteStream on: (String new: 10).
	wst
		nextPut: $(;
		nextPutAll: self nameForPostScript;
		nextPut: $).
	^wst contents
%
category: 'initialize-release'
method: CmykColor
initializeName: nameString cyan: cyanNumber magenta: magentaNumber yellow: yellowNumber black: blackNumber rgb: rgbByteArray
	(nameString notNil and: [
	self name ~= nameString]) ifTrue: [
			name := nameString].
	cyan := cyanNumber.
	magenta := magentaNumber.
	yellow := yellowNumber.
	black := blackNumber.
	(rgbByteArray notNil and: [
	self rgb ~= rgbByteArray]) ifTrue: [
			rgb := rgbByteArray].
	self beImmutable
%
category: 'printing'
method: CmykColor
printOn: stream
	stream
		nextPutAll: self class name asString;
		space;
		nextPutAll: self asPsComment
%
method: CmykColor
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer optional: 'name' value: name).
	args add: (printer constant: 'cyan' value: self cyan).
	args add: (printer constant: 'magenta' value: self magenta).
	args add: (printer constant: 'yellow' value: self yellow).
	args add: (printer constant: 'black' value: self black).
	args add: (printer optional: 'rgb' value: rgb).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: CmykColor
isMonochrome
	^self cyan isZero and: [
	self magenta isZero and: [
	self yellow isZero]]
%
category: '*PDFtalk Colour-accessing'
method: ColorValue
colorspace
	^#DeviceRGB
%
category: '*PDFtalk Colour-converting'
method: ColorValue
asCmykColor
	"<CmykColor>"

	^CmykColor fromColorValue: self
%
method: ColorValue
asColorRef
	"^a COLORREF, a long"
	"like 0x00bbggrr"

	^(ByteReadStream littleEndianOn: (ByteArray
		with: ((self red * 256) truncated min: 255)
		with: ((self green * 256) truncated min: 255)
		with: ((self blue * 256) truncated min: 255)
		with: 0)) nextLong
%
method: ColorValue
asPDFArray
	"<Array3 of: Number>
	Array of 3 numbers between 0.0 (zero intensity) and 1.0 (maximum intensity) suitable for PDF DeviceRGB"

	^Array
		with: self red
		with: self green
		with: self blue
%
category: '*PDFtalk Colour-converting'
method: CoverageValue
asGrayValue
	"<Number>
	between 0.0 (transparent) and 1.0 (opaque) suitable for PDF DeviceGray"

	^self coverage
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
classmethod: CalGray
pdfTypeDefinition
	^PDFTypeDefinition
		name: #CalGray
		supertype: #CIEColourSpace
		version: #(1 1)
		section: '8.6.5.2'
		documentation: 'A CalGray colour space is a special case of a single-component CIE-based colour space, known as a CIE-based A colour space. 
This type of space is the one-dimensional (and usually achromatic) analog of CIE-based ABC spaces. 
Colour values in a CIE-based A space shall have a single component, arbitrarily named A.'
%
category: 'accessing'
method: CalGray
defaultDecodeArray
	^#(0.0 1.0) asPDF
%
method: CalGray
initialColourValues
	^#(0.0)
%
method: CalGray
numberOfComponents
	^1
%
method: CalGray
procSet
	^#ImageB
%
category: 'accessing entries'
method: CalGray
dictionary
	<type: #CalGrayColourSpaceDictionary>
	<required>
	<attribute: 2 documentation: 'A dictionary containing parameters that further characterize the space. The entries in this dictionary have specific interpretations that depend on the colour space; some entries are required and some are optional.'>
	^self objectAt: 2
%
category: 'accessing'
classmethod: CalGrayColourSpaceDictionary
pdfTypeDefinition
	^PDFTypeDefinition
		name: #CalGrayColourSpaceDictionary
		supertype: #Dictionary
		version: #(1 1)
		section: '8.6.5.2'
		documentation: 'A CalGray colour space (PDF 1.1) is a special case of a single-component CIE-based colour space, known as a CIE-based A colour space. 
This type of space is the one-dimensional (and usually achromatic) analog of CIE-based ABC spaces. 
Colour values in a CIE-based A space shall have a single component, arbitrarily named A.'
%
category: 'accessing entries'
method: CalGrayColourSpaceDictionary
BlackPoint
	<typeArrayOf: #Number>
	<attribute: 2 documentation: 'An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point.
All three of these numbers shall be non-negative'>
	^self objectAt: #BlackPoint ifAbsent: [#(0.0 0.0 0.0) asPDF]
%
method: CalGrayColourSpaceDictionary
Gamma
	<type: #Number>
	<attribute: 3 documentation: 'A number G defining the gamma for the gray (A)component.
G shall be positive and is generally greater than or equal to 1'>
	^self objectAt: #Gamma ifAbsent: [1 asPDF]
%
method: CalGrayColourSpaceDictionary
WhitePoint
	<typeArrayOf: #Number>
	<required>
	<attribute: 1 documentation: 'An array of three numbers [XW YW ZW] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point.
The numbers XW and ZW shall be positive, and YW shall be equal to 1.0.'>
	^self objectAt: #WhitePoint
%
category: 'accessing'
classmethod: CalRGB
pdfTypeDefinition
	^PDFTypeDefinition
		name: #CalRGB
		supertype: #CIEColourSpace
		version: #(1 1)
		section: '8.6.5.3'
		documentation: 'A CalRGB colour space is a CIE-based ABC colour space with only one transformation stage instead of two. 
In this type of space, A, B, and C represent calibrated red, green, and blue colour values. 
These three colour components shall be in the range 0.0 to 1.0; 
component values falling outside that range shall be adjusted to the nearest valid value without error indication. 
The decoding functions are gamma functions whose coefficients shall be specified by the Gamma entry in the colour space dictionary. 
The transformation matrix shall be defined by the dictionaryâs Matrix entry. 
Since there is no second transformation stage, âDecode LMNâ and âMatrix LMNâ shall be implicitly taken to be identity transformations.'
%
category: 'accessing'
method: CalRGB
defaultDecodeArray
	^#(0.0 1.0 0.0 1.0 0.0 1.0) asPDF
%
method: CalRGB
initialColourValues
	^#(0.0 0.0 0.0)
%
method: CalRGB
numberOfComponents
	^3
%
category: 'accessing entries'
method: CalRGB
dictionary
	<type: #CalRGBColourSpaceDictionary>
	<required>
	<attribute: 2 documentation: 'A dictionary containing parameters that further characterize the space. The entries in this dictionary have specific interpretations that depend on the colour space; some entries are required and some are optional.'>
	^self objectAt: 2
%
category: 'accessing'
classmethod: CalRGBColourSpaceDictionary
pdfTypeDefinition
	^PDFTypeDefinition
		name: #CalRGBColourSpaceDictionary
		supertype: #Dictionary
		version: #(1 1)
		section: '8.6.5.3'
		documentation: 'A CalRGB colour space is a CIE-based ABC colour space with only one transformation stage instead of two. 
In this type of space, A, B, and C represent calibrated red, green, and blue colour values. 
These three colour components shall be in the range 0.0 to 1.0; 
component values falling outside that range shall be adjusted to the nearest valid value without error indication. 
The decoding functions are gamma functions whose coefficients shall be specified by the Gamma entry in the colour space dictionary. 
The transformation matrix shall be defined by the dictionaryâs Matrix entry. 
Since there is no second transformation stage, âDecode LMNâ and âMatrix LMNâ shall be implicitly taken to be identity transformations.'
%
category: 'accessing entries'
method: CalRGBColourSpaceDictionary
BlackPoint
	<typeArrayOf: #Number>
	<attribute: 2 documentation: 'An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point.
All three of these numbers shall be non-negative'>
	^self objectAt: #BlackPoint ifAbsent: [#(0.0 0.0 0.0) asPDF]
%
method: CalRGBColourSpaceDictionary
Gamma
	<typeArrayOf: #Number>
	<attribute: 3 documentation: 'An array of three numbers [GR GG GB] specifying the gamma for the red, green, and blue (A, B, and C) components of the colour space'>
	^self objectAt: #Gamma ifAbsent: [#(1.0 1.0 1.0) asPDF]
%
method: CalRGBColourSpaceDictionary
Matrix
	<typeArrayOf: #Number>
	<attribute: 4 documentation: 'An array of nine numbers [XA YA ZA XB YB ZB XC YC ZC] specifying the linear interpretation of the decoded A, B, and C components of the colour space with respect to the final XYZ representation.
Default value: the identity matrix [1 0 0 0 1 0 0 0 1].'>
	^self objectAt: #Matrix ifAbsent: [#(1 0 0 0 1 0 0 0 1) asPDF]
%
method: CalRGBColourSpaceDictionary
WhitePoint
	<typeArrayOf: #Number>
	<required>
	<attribute: 1 documentation: 'An array of three numbers [XW YW ZW] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point.
The numbers XW and ZW shall be positive, and YW shall be equal to 1.0'>
	^self objectAt: #WhitePoint
%
category: 'accessing'
classmethod: CIEColourSpace
numberOfAttributes
	^2
%
classmethod: CIEColourSpace
pdfTypeDefinition
	^PDFTypeDefinition
		name: #CIEColourSpace
		supertype: #ColourSpace
		version: #(1 1)
		section: '8.6.5.1'
		documentation: 'Calibrated colour in PDF shall be defined in terms of an international standard used in the graphic arts, television, and printing industries. 
CIE-based colour spaces enable a page description to specify colour values in a way that is related to human visual perception. 
The goal is for the same colour specification to produce consistent results on different output devices, within the limitations of each device; 
Figure L.2 in Annex Lillustrates the kind of variation in colour reproduction that can result from the use of uncalibrated colour on different devices. 
PDF 1.1 supports three CIE-based colour space families, named CalGray, CalRGB, and Lab; PDF 1.3 added a fourth, named ICCBased.

NOTE 1		In PDF 1.1, a colour space family named CalCMYK was partially defined, with the expectation that its definition would be completed in a future version. 
			However, this feature has been deprecated. PDF 1.3 and later versions support calibrated four-component colour spaces by means of ICC profiles. 
			A conforming reader should ignore CalCMYK colour space attributes and render colours specified in this family as if they had been specified using DeviceCMYK.

NOTE 2		The details of the CIE colourimetric system and the theory on which it is based are beyond the scope of this specification; 
			see the Bibliography for sources of further information. 
			The semantics of CIE-based colour spaces are defined in terms of the relationship between 
			the spaceâs components and the tristimulus values X, Y, and Z of the CIE 1931 XYZ space. 
			The CalRGB and Lab colour spaces (PDF 1.1) are special cases of three-component CIE-based colour spaces, 
			known as CIE-based ABC colour spaces. 
			These spaces are defined in terms of a two-stage, nonlinear transformation of the CIE 1931 XYZ space. 
			The formulation of such colour spaces models a simple zone theory of colour vision, 
			consisting of a nonlinear trichromatic first stage combined with a nonlinear opponent-colour second stage. 
			This formulation allows colours to be digitized with minimum loss of fidelity, an important consideration in sampled images.

Colour values in a CIE-based ABC colour space shall have three components, arbitrarily named A, B, and C.
The first stage shall transform these components by first forcing their values to a specified range, 
then applying decoding functions, and 
then multiplying the results by a 3-by-3 matrix, producing three intermediate components arbitrarily named L, M, and N. 
The second stage shall transform these intermediate components in a similar fashion, producing the final X, Y, and Z components of the CIE 1931 XYZ space.

Colour spaces in the CIE-based families shall be defined by an array
	[name dictionary]
where name is the name of the family and dictionary is a dictionary containing parameters that further characterize the space. 
The entries in this dictionary have specific interpretations that depend on the colour space; some entries are required and some are optional. 
Setting the current stroking or nonstroking colour space to any CIE-based colour space 
shall initialize all components of the corresponding current colour to 0.0 
(unless the range of valid values for a given component does not include 0.0, in which case the nearest valid value shall be substituted.).

NOTE 3		The model and terminology used hereâCIE-based ABC (above) and CIE-based A (below)âare derived from the PostScript language, 
			which supports these colour space families in their full generality. 
			PDF supports specific useful cases of CIE-based ABC and CIE-based A spaces; most others can be represented as ICCBased spaces.'
%
classmethod: CIEColourSpace
resourcePrefix
	^'CS'
%
classmethod: CIEColourSpace
resourceType
	"<Symbol>
	the name of a /Resources key"

	^#ColorSpace
%
classmethod: CIEColourSpace
type
	^self name
%
category: 'testing'
classmethod: CIEColourSpace
isClassForArray: anArray

	^(super isClassForArray: anArray) and: [
	anArray first asPDF = self type asPDF]
%
category: 'accessing'
method: CIEColourSpace
defaultBlack
	"<Color>"

	^self initialColourValues asPDF
%
method: CIEColourSpace
defaultDecodeArray
	"<PDFArray of: Number>"

	^self subclassResponsibility
%
method: CIEColourSpace
initialColourValues
	"<Array of Number>
	the initial colour when the current colour space is set"

	^self subclassResponsibility
%
method: CIEColourSpace
numberOfComponents
	"<Integer>"

	^self subclassResponsibility
%
method: CIEColourSpace
procSet
	^#ImageC
%
category: 'accessing entries'
method: CIEColourSpace
name
	<type: #Name>
	<required>
	<attribute: 1 documentation: 'The name of the colour space type.'>
	^self objectAt: 1
%
category: 'accessing'
classmethod: ColourSpace
pdfTypeDefinition
	^PDFTypeDefinition
		name: #ColourSpace
		supertype: #Object
		version: #(1 1)
		section: '8.6.3'
		documentation: 'Colour spaces are classified into colour space families. 
Spaces within a family share the same general characteristics; 
they shall be distinguished by parameter values supplied at the time the space is specified. 
The families fall into three broad categories:

	â¢	Device colour spaces directly specify colours or shades of gray that the output device shall produce. 
		They provide a variety of colour specification methods, including grayscale, RGB (red-green-blue), and CMYK(cyan-magenta-yellow-black), 
		corresponding to the colour space families DeviceGray, DeviceRGB, and DeviceCMYK. 
		Since each of these families consists of just a single colour space with no parameters, 
		they may be referred to as the DeviceGray, DeviceRGB, and DeviceCMYK colour spaces.
	â¢	CIE-based colour spaces shall be based on an international standard for colour specification created 
		by the Commission Internationale de lâÃclairage (International Commission on Illumination). 
		These spaces specify colours in a way that is independent of the characteristics of any particular output device. 
		Colour space families in this category include CalGray, CalRGB, Lab, and ICCBased. 
		Individual colour spaces within these families shall be specified by means of dictionaries containing the parameter values needed to define the space.
	â¢	Special colour spaces add features or properties to an underlying colour space. 
		They include facilities for patterns, colour mapping, separations, and high-fidelity and multitone colour. 
		The corresponding colour space families are Pattern, Indexed, Separation, and DeviceN. 
		Individual colour spaces within these families shall be specified by means of additional parameters.'
%
category: 'accessing'
classmethod: DeviceCMYK
pdfTypeDefinition
	^PDFTypeDefinition
		name: #DeviceCMYK
		supertype: #DeviceColourSpace
		version: #(1 1)
		section: '8.6.4.4'
		documentation: 'The DeviceCMYK colour space allows colours to be specified according to the subtractive CMYK (cyan-magenta-yellow-black) model typical of printers and other paper-based output devices. The four components in a DeviceCMYK colour value shall represent the concentrations of these process colorants. Each component shall be a number in the range 0.0 to 1.0, where 0.0 shall denote the complete absence of a process colorant and 1.0 shall denote maximum concentration (absorbs as much as possible of the additive primary).

NOTE
As much as the reflective colours (CMYK) decrease reflection with increased ink values and radiant colours (RGB) increases the intensity of colours with increased values the values work in an opposite manner.

EXAMPLE
The following shows alternative ways to select the DeviceCMYK colour space and a specific colour within that space for stroking operations.
	/DeviceCMYK CS 					% Set DeviceCMYK colour space
	cyan magenta yellow black SC 		% Set colour
	cyan magenta yellow black K 		% Set both in one operation
The CS and SC operators shall select the current stroking colour space and current stroking colour separately; K shall set them in combination. 
The cs, sc, and k operators shall perform the same functions for nonstroking operations. 
Setting either current colour space to DeviceCMYK shall initialize the cyan, magenta, and yellow components of the corresponding current colour to 0.0 and the black component to 1.0.'
%
category: 'accessing'
method: DeviceCMYK
content
	^#DeviceCMYK
%
method: DeviceCMYK
defaultDecodeArray
	^#(0.0 1.0 0.0 1.0 0.0 1.0 0.0 1.0) asPDF
%
method: DeviceCMYK
initialColour
	^CmykColor black
%
method: DeviceCMYK
initialColourValues
	^#(0.0 0.0 0.0 1.0)
%
method: DeviceCMYK
numberOfComponents
	^4
%
category: 'accessing'
classmethod: DeviceColourSpace
pdfTypeDefinition
	^PDFTypeDefinition
		name: #DeviceColourSpace
		supertype: #ColourSpace
		version: #(1 1)
		section: '8.6.4'
		documentation: 'The device colour spaces enable a page description to specify colour values that are directly related to their representation on an output device.
Colour values in these spaces map directly (or by simple conversions) to the application of device colorants, such as quantities of ink or intensities of display phosphors.
This enables a conforming writer to control colours precisely for a particular device, but the results might not be consistent from one device to another.'
%
category: 'accessing'
method: DeviceColourSpace
black
	^self initialColourValues asPDF
%
method: DeviceColourSpace
defaultBlack
	^self initialColour
%
method: DeviceColourSpace
defaultDecodeArray
	"<PDFArray of: Number>"

	^self subclassResponsibility
%
method: DeviceColourSpace
initialColour
	"<ColorValue | CmykColor>
	the initial colour when the current colour space is set.
	This is not relevant for device colour spaces, since the colour space is set implicitly when setting a colour.
	Implemented for documentation only"

	^ColorValue black
%
method: DeviceColourSpace
initialColourValues
	"<Array of Number>
	the initial colour when the current colour space is set"

	^self subclassResponsibility
%
method: DeviceColourSpace
numberOfComponents
	"<Integer>"

	^self subclassResponsibility
%
method: DeviceColourSpace
procSet
	^#ImageC
%
category: 'accessing'
classmethod: DeviceGray
pdfTypeDefinition
	^PDFTypeDefinition
		name: #DeviceGray
		supertype: #DeviceColourSpace
		version: #(1 1)
		section: '8.6.4.2'
		documentation: 'Black, white, and intermediate shades of gray are special cases of full colour. 
A grayscale value shall be represented by a single number in the range 0.0 to 1.0, 
where 0.0 corresponds to black, 1.0 to white, and intermediate values to different gray levels.

EXAMPLE
This example shows alternative ways to select the DeviceGray colour space and a specific gray level within that space for stroking operations.
	/DeviceGray CS 	% Set DeviceGray colour space
	gray SC 			% Set gray level
	gray G 				% Set both in one operation
The CS and SC operators shall select the current stroking colour space and current stroking colour separately; G shall set them in combination. 
(The cs, sc, and g operators shall perform the same functions for nonstroking operations.) 
Setting either current colour space to DeviceGray shall initialize the corresponding current colour to 0.0.'
%
category: 'accessing'
method: DeviceGray
bitsFor: aSimplePaint withSizes: bitsPerComponents
	"<Integer>
	the bits stored in the pixel array"

	^(aSimplePaint asGrayValue * ((1 bitShift: bitsPerComponents first) - 1)) rounded
%
method: DeviceGray
bytesFromMappedPalette: aMappedPalette
	| byteArray |
	byteArray := ByteArray new: aMappedPalette size.
	1 to: byteArray size do: [:index |
		byteArray at: index put: ((aMappedPalette elementData at: index - 1 * 3 + 1) bitShift: -5)].
	^byteArray
%
method: DeviceGray
colorAt: someBits withSizes: bitsPerComponents decodeWith: anArray
	"<ColorValue>"

	| mask dMin dMax brightness |
	mask := (1 bitShift: bitsPerComponents first) - 1.
	dMin := anArray first.
	dMax := anArray last.
	brightness := (((dMax - dMin) * someBits / mask + dMin) * ColorValue scalingValue) truncated.
	^ColorValue scaledRed: brightness scaledGreen: brightness scaledBlue: brightness
%
method: DeviceGray
colorByteArrayFor: aColorValue
	"<ByteArray[1]>"

	^aColorValue asByteArray first: 1
%
method: DeviceGray
colorFromByteStream: aByteReadStream
	"<ColorValue>"

	^ColorValue fromBytes: (Array new: 3 withAll: aByteReadStream next)
%
method: DeviceGray
content
	^#DeviceGray
%
method: DeviceGray
coverageAt: someBits withSizes: bitsPerComponents decodeWith: anArray
	"<CoverageValue>
	applies to masks.
	The meaning of transparent and opaque is opposite in Smalltalk and PDF:
	0 means 'transparent' (the background is painted) in Smalltalk and 'opaque' in PDF
	1 means 'opaque' (the image is painted) in Smalltalk and 'transparent' in PDF"

	| mask dMin dMax brightness |
	mask := (1 bitShift: bitsPerComponents first) - 1.
	dMin := anArray first.
	dMax := anArray last.
	brightness := (dMax - dMin) * someBits / mask + dMin.
	^CoverageValue coverage: 1 - brightness
%
method: DeviceGray
defaultDecodeArray
	^#(0.0 1.0) asPDF
%
method: DeviceGray
initialColourValues
	^#(0.0)
%
method: DeviceGray
numberOfComponents
	^1
%
method: DeviceGray
procSet
	^#ImageB
%
method: DeviceGray
rgbBytesFrom: aByteArray
	"<ByteArray>"

	| wst rst |
	wst := (ByteArray new: aByteArray size * 3) writeStream.
	rst := aByteArray readStream.
	[rst atEnd] whileFalse: [
		| byte |
		byte := rst next.
		wst nextPut: byte.
		wst nextPut: byte.
		wst nextPut: byte].
	^wst contents
%
category: 'accessing'
classmethod: DeviceN
maxNumberOfAttributes
	^5
%
classmethod: DeviceN
numberOfAttributes
	^4
%
classmethod: DeviceN
pdfTypeDefinition
	^PDFTypeDefinition
		name: #DeviceN
		supertype: #ColourSpace
		version: #(1 3)
		section: '8.6.6.5'
		documentation: 'DeviceN colour spaces may contain an arbitrary number of colour components.'
%
category: 'accessing'
method: DeviceN
defaultDecodeArray
	| list |
	list := OrderedCollection new.
	self numberOfComponents timesRepeat: [list addAll: #(0.0 1.0)].
	^list asPDF
%
method: DeviceN
initialColourValues
	^#(0.0)
%
method: DeviceN
numberOfComponents
	^self names size
%
category: 'accessing entries'
method: DeviceN
alternateSpace
	<type: #DeviceColourSpace>
	<type: #CIEColourSpace>
	<required>
	<attribute: 3 documentation: 'When the colour space is set to a DeviceN space, if any of the component names in the colour space do not correspond to a colorant available on the device, the conforming reader shall perform subsequent painting operations in the alternate colour space specified by this parameter.

For NChannel colour spaces, the components shall be evaluated individually; that is, only the ones not present on the output device shall use the alternate colour space.'>
	^self objectAt: 3
%
method: DeviceN
attributes
	<type: #DeviceNColourSpaceAttributes>
	<attribute: 5 documentation: 'The optional attributes parameter shall be a dictionary containing additional information about the components of colour space that conforming readers may use.
Conforming readers need not use the alternateSpace and tintTransform parameters, and may instead use custom blending algorithms, along with other information provided in the attributes dictionary if present.
(If the value of the Subtype entry in the attributes dictionary is NChannel, such information shall be present.)
However, alternateSpace and tintTransform shall always be provided for conforming readers that want to use them or do not support PDF 1.6.'>
	^self objectAt: 5
%
method: DeviceN
names
	<typeArrayOf: #Name>
	<required>
	<attribute: 2 documentation: 'The names parameter shall be an array of name objects specifying the individual colour components.
The length of the array shall determine the number of components in the DeviceN colour space, which is subject to an implementation limit.
The component names shall all be different from one another, except for the name None, which may be repeated.
The special name All, used by Separation colour spaces, shall not be used.'>
	^self objectAt: 2
%
method: DeviceN
tintTransform
	<type: #Function>
	<required>
	<attribute: 4 documentation: 'The tintTransform parameter shall specify a function that is used to transform the tint values into the alternate colour space.
It shall be called with n tint values and returns m colour component values, where n is the number of components needed to specify a colour in the DeviceN colour space and m is the number required by the alternate colour space.'>
	^self objectAt: 4
%
category: 'accessing'
classmethod: DeviceNColourSpaceAttributes
pdfTypeDefinition
	^PDFTypeDefinition
		name: #DeviceNColourSpaceAttributes
		supertype: #Dictionary
		version: #(1 3)
		section: '8.6.6.5'
		documentation: 'The optional attributes parameter shall be a dictionary containing additional information about the components of colour space that conforming readers may use.
Conforming readers need not use the alternateSpace and tintTransform parameters, and may instead use custom blending algorithms, along with other information provided in the attributes dictionary if present. (If the value of the Subtype entry in the attributes dictionary is NChannel, such information shall be present.)
However, alternateSpace and tintTransform shall always be provided for conforming readers that want to use them or do not support PDF 1.6.'
%
category: 'accessing entries'
method: DeviceNColourSpaceAttributes
Colorants
	<typeDictionaryOf: #Separation>
	<version: 1 dot: 6>
	<attribute: 2 documentation: '(Required if Subtype is NChannel and the colour space includes spot colorants; otherwise optional)
A dictionary describing the individual colorants that shall be used in the DeviceN colour space.
For each entry in this dictionary, the key shall be a colorant name and the value shall be an array defining a Separation colour space for that colorant.
The key shall match the colorant name given in that colour space.

This dictionary provides information about the individual colorants that may be useful to some conforming readers.
In particular, the alternate colour space and tint transformation function of a Separation colour space describe the appearance of that colorant alone, whereas those of a DeviceN colour space describe only the appearance of its colorants in combination.

If Subtype is NChannel, this dictionary shall have entries for all spot colorants in this colour space.
This dictionary may also include additional colorants not used by this colour space.'>
	^self objectAt: #Colorants ifAbsent: [PDF Dictionary empty]
%
method: DeviceNColourSpaceAttributes
MixingHints
	<type: #Dictionary>
	<version: 1 dot: 6>
	<attribute: 3 documentation: 'A dictionary that specifies optional attributes of the inks that shall be used in blending calculations when used as an alternative to the tint transformation function.'>
	^self objectAt: #MixingHints ifAbsent: [PDF Dictionary empty]
%
method: DeviceNColourSpaceAttributes
Process
	<type: #DeviceNProcessDictionary>
	<version: 1 dot: 6>
	<attribute: 3 documentation: '(Required if Subtype is NChannel and the colour space includes components of a process colour space, otherwise optional; PDF 1.6)
A dictionary that describes the process colour space whose components are included in this colour space.'>
	^self objectAt: #Process ifAbsent: [PDF Dictionary empty]
%
method: DeviceNColourSpaceAttributes
Subtype
	<type: #Name>
	<version: 1 dot: 6>
	<attribute: 1 documentation: 'A name specifying the preferred treatment for the colour space. Values shall be DeviceN or NChannel'>
	^self objectAt: #Subtype ifAbsent: [#DeviceN asPDF]
%
category: 'accessing'
classmethod: DeviceNMixingHints
pdfTypeDefinition

	^PDFTypeDefinition
		name: #DeviceNMixingHints
		supertype: #Dictionary
		section: '8.6.6.5'
		documentation: 'Provides information about the characteristics of colorants that may be used in blending calculations when the actual colorants are not available on the target device.
Conforming readers need not use this information'
%
category: 'accessing entries'
method: DeviceNMixingHints
DotGain
	<typeDictionaryOf: #Function>
	<attribute: 3 documentation: 'A dictionary specifying the dot gain of inks that shall be used in blending calculations when used as an alternative to the tint transformation function.
Dot gain (or loss) represents the amount by which a printerâs halftone dots change as the ink spreads and is absorbed by paper.

For each entry, the key shall be a colorant name, and the value shall be a function that maps values in the range 0 to 1 to values in the range 0 to 1.
The dictionary may list colorants unused by this specific DeviceNinstance and need not list all colorants.
An entry with a key of Default shall specify a function to be used by all colorants for which a dot gain function is not explicitly specified.

Conforming readers may ignore values in this dictionary when other sources of dot gain information are available, such as ICC profiles associated with the process colour space or tint transformation functions associated with individual colorants.'>
	^self objectAt: #DotGain ifAbsent: [PDF Dictionary empty]
%
method: DeviceNMixingHints
PrintingOrder
	<typeArrayOf: #Name>
	<requiredIf: #Solidities>
	<attribute: 2 documentation: 'An array of colorant names, specifying the order in which inks shall be laid down.
Each component in the names array of the DeviceN colour space shall appear in this array (although the order is unrelated to the order specified in the namesarray).
This entry may also list colorants unused by this specific DeviceN instance.'>
	^self objectAt: #PrintingOrder ifAbsent: [#() asPDF]
%
method: DeviceNMixingHints
Solidities
	<typeDictionaryOf: #Number>
	<attribute: 1 documentation: 'A dictionary specifying the solidity of inks that shall be used in blending calculations when used as an alternative to the tint transformation function. For each entry, the key shall be a colorantname, and the value shall be a number between 0.0 and 1.0.
This dictionary need not contain entries for all colorants used in this colour space; it may also include additional colorants not used by this colour space.

A value of 1.0 simulates an ink that completely covers the inks beneath; a value of 0.0 simulates a transparent ink that completely reveals the inks beneath.
An entry with a key of Default specifies a value that shall be used by all components in the associated DeviceN colour space for which a solidity value is not explicitly provided.
If Default is not present, the default value for unspecified colorants shall be 0.0; conforming readers may choose to use other values.
If this entry is present, PrintingOrder shall also be present.'>
	^self objectAt: #Solidities ifAbsent: [PDF Dictionary empty]
%
category: 'accessing'
classmethod: DeviceNProcessDictionary
pdfTypeDefinition

	^PDFTypeDefinition
		name: #DeviceNProcessDictionary
		supertype: #Dictionary
		section: '8.6.6.5'
		documentation: 'A dictionary that describes the process colour space whose components are included in the DeviceN colour space'
%
category: 'accessing entries'
method: DeviceNProcessDictionary
ColorSpace
	<type: #DeviceColourSpace>
	<type: #CIEColourSpace>
	<required>
	<attribute: 1 documentation: 'If an ICCBased colour space is specified, it shall provide calibration information appropriate for the process colour components specified in the names array of the DeviceN colour space'>
	^self objectAt: #ColorSpace
%
method: DeviceNProcessDictionary
Components
	<typeArrayOf: #Name>
	<required>
	<attribute: 2 documentation: 'An array of component names that correspond, in order, to the components of the process colour space specified in ColorSpace.
For example, an RGB colour space shall have three names corresponding to red, green, and blue.
The names may be arbitrary (that is, not the same as the standard names for the colour space components) and shall match those specified in the names array of the DeviceN colour space, even if all components are not present in the names array'>
	^self objectAt: #Components
%
category: 'accessing'
classmethod: DeviceRGB
pdfTypeDefinition
	^PDFTypeDefinition
		name: #DeviceRGB
		supertype: #DeviceColourSpace
		version: #(1 1)
		section: '8.6.4.3'
		documentation: 'Colours in the DeviceRGB colour space shall be specified according to the additive RGB (red-green-blue) colour model, 
in which colour values shall be defined by three components representing the intensities of the additive primary colorants red, green, and blue. 
Each component shall be specified by a number in the range 0.0 to 1.0, 
where 0.0 shall denote the complete absence of a primary component and 1.0 shall denote maximum intensity.

EXAMPLE
This example shows alternative ways to select the DeviceRGB colour space and a specific colour within that space for stroking operations.
	/DeviceRGB CS 	% Set DeviceRGB colour space
	red green blue SC 	% Set colour
	red green blue RG 	% Set both in one operation
The CS and SC operators shall select the current stroking colour space and current stroking colour separately; RG shall set them in combination. 
The cs, sc, and rg operators shall perform the same functions for nonstroking operations. 
Setting either current colour space to DeviceRGB shall initialize the red, green, and blue components of the corresponding current colour to 0.0.'
%
category: 'accessing'
method: DeviceRGB
bitsFor: aColorValue withSizes: bitsPerComponents
	"<Integer>
	the bits stored in the pixel array"

	| maxBits nativeBitsPerComponent scales redBits greenBits blueBits |
	maxBits := bitsPerComponents inject: 0 into: [:max :number | max max: number].
	nativeBitsPerComponent := (PDF classAt: #ImageXObject) nativeBitsPerComponentFor: maxBits.
	scales := bitsPerComponents collect: [:bits | (1 bitShift: bits) - 1].
	redBits := (aColorValue red * scales first) rounded.
	greenBits := (aColorValue green * (scales at: 2)) rounded.
	blueBits := (aColorValue blue * scales last) rounded.
	^(redBits bitShift: nativeBitsPerComponent * 2) + (greenBits bitShift: nativeBitsPerComponent) + blueBits
%
method: DeviceRGB
bytesFromMappedPalette: aMappedPalette
	| byteArray |
	byteArray := ByteArray new: aMappedPalette elementData size.
	1 to: byteArray size do: [:index |
		byteArray at: index put: ((aMappedPalette elementData at: index) bitShift: -5)].
	^byteArray
%
method: DeviceRGB
colorAt: someBits withSizes: bitsPerComponents decodeWith: anArray
	"<ColorValue>"

	| maxBits nativeBitsPerComponent componentMask components values scale |
	maxBits := bitsPerComponents inject: 0 into: [:max :number | max max: number].
	nativeBitsPerComponent := (PDF classAt: #ImageXObject) nativeBitsPerComponentFor: maxBits.
	componentMask := (1 bitShift: nativeBitsPerComponent) - 1.
	components := (bitsPerComponents size to: 1 by: -1) collect: [:index |
		(someBits bitShift: ((index - 1) * nativeBitsPerComponent) negated) bitAnd: componentMask].
	values := OrderedCollection new: components size.
	scale := ColorValue scalingValue.
	components doWithIndex: [:value :index |
		| dMin dMax |
		dMin := anArray at: index * 2 - 1.
		dMax := anArray at: index * 2.
		values add: (((dMax - dMin) * value / componentMask + dMin) * scale) truncated].
	^ColorValue scaledRed: values first scaledGreen: (values at: 2) scaledBlue: values last
%
method: DeviceRGB
colorByteArrayFor: aColorValue
	"<ByteArray[3]>"

	^aColorValue asByteArray
%
method: DeviceRGB
colorFromByteStream: aByteReadStream
	"<ColorValue>"

	^ColorValue fromBytes: (aByteReadStream next: 3)
%
method: DeviceRGB
content
	^#DeviceRGB
%
method: DeviceRGB
defaultDecodeArray
	^#(0.0 1.0 0.0 1.0 0.0 1.0) asPDF
%
method: DeviceRGB
initialColourValues
	^#(0.0 0.0 0.0)
%
method: DeviceRGB
numberOfComponents
	^3
%
method: DeviceRGB
rgbBytesFrom: aByteArray
	"<ByteArray>"

	^aByteArray
%
category: 'accessing'
classmethod: ICCBased
pdfTypeDefinition
	^PDFTypeDefinition
		name: #ICCBased
		supertype: #CIEColourSpace
		version: #(1 3)
		section: '8.6.5.5'
		documentation: 'ICCBased colour spaces shall be based on a cross-platform colour profile as defined by the International Color Consortium (ICC). 
Unlike the CalGray, CalRGB, and Lab colour spaces, which are characterized by entries in the colour space dictionary, 
an ICCBased colour space shall be characterized by a sequence of bytes in a standard format. 
Details of the profile format can be found in the ICC specification.'
%
category: 'accessing'
method: ICCBased
black
	"preliminary implementation"
	
	^self stream Alternate black
%
method: ICCBased
colorAt: someBits withSizes: bitsPerComponents decodeWith: anArray
	"<ColorValue>"

	self stream Alternate asSmalltalkValue = #DeviceRGB ifFalse: [
		^self error: 'only /DeviceRGB is supported as base colour space'].
	^self stream Alternate colorAt: someBits withSizes: bitsPerComponents decodeWith: anArray
%
method: ICCBased
defaultBlack
	^self stream Alternate defaultBlack
%
method: ICCBased
defaultDecodeArray
	^self stream Range
%
method: ICCBased
initialColourValues
	"the initial colour shall have all components equal to 0.0 unless that falls outside the intervals specified by the spaceâs Range entry, in which case the nearest valid value shall be substituted."

	^#(0.0)
%
method: ICCBased
numberOfComponents
	"given by the #N parameter in the ICC Profile stream"

	^self stream N asSmalltalkValue
%
method: ICCBased
paletteFor: anImageXObject
	^self stream Alternate paletteFor: anImageXObject
%
category: 'accessing entries'
method: ICCBased
stream
	<type: #ICCProfileStream>
	<required>
	<attribute: 2 documentation: 'A dictionary containing parameters that further characterize the space. The entries in this dictionary have specific interpretations that depend on the colour space; some entries are required and some are optional.'>
	^self objectAt: 2
%
category: 'accessing'
classmethod: ICCProfileStream
pdfTypeDefinition
	^PDFTypeDefinition
		name: #ICCProfileStream
		supertype: #Stream
		version: #(1 3)
		section: '8.6.6.5'
		documentation: 'ICCBased colour spaces shall be based on a cross-platform colour profile as defined by the International Color Consortium (ICC).
Unlike the CalGray, CalRGB, and Lab colour spaces, which are characterized by entries in the colour space dictionary, an ICCBased colour space shall be characterized by a sequence of bytes in a standard format.'
%
category: 'accessing entries'
method: ICCProfileStream
Alternate
	<type: #ColourSpace>
	<attribute: 2 documentation: 'An alternate colour space that shall be used in case the one specified in the stream data is not supported.
Non-conforming readers may use this colour space.
The alternate space may be any valid colour space (except a Pattern colour space) that has the number of components specified by N.
If this entry is omitted and the conforming reader does not understand the ICC profile data, the colour space that shall be used is DeviceGray, DeviceRGB, or DeviceCMYK, depending on whether the value of N is 1, 3, or 4, respectively.

There shall not be conversion of source colour values, such as a tint transformation, when using the alternate colour space.
Colour values within the range of the ICCBased colour space might not be within the range of the alternate colour space.
In this case, the nearest values within the range of the alternate space shall be substituted.'>
	^self objectAt: #Alternate ifAbsent: [
		self N asSmalltalkValue = 1 ifTrue: [
			^(PDF classAt: #DeviceGray) empty].
		self N asSmalltalkValue = 3 ifTrue: [
			^(PDF classAt: #DeviceRGB) empty].
		^(PDF classAt: #DeviceCMYK) empty]
%
method: ICCProfileStream
Metadata
	<type: #Stream>
	<version: 1 dot: 4>
	<attribute: 4 documentation: 'A metadata stream that shall contain metadata for the colour space'>
	^self objectAt: #Metadata ifAbsent: [PDF Stream empty]
%
method: ICCProfileStream
N
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'The number of colour components in the colour space described by the ICC profile data.
This number shall match the number of components actually in the ICC profile. N shall be 1, 3, or 4.'>
	^self objectAt: #N
%
method: ICCProfileStream
Range
	<typeArrayOf: #Number>
	<attribute: 3 documentation: 'An array of 2 Ã N numbers [min0 max0 min1 max1 â¦] that shall specify the minimum and maximum valid values of the corresponding colour components.
These values shall match the information in the ICC profile. Default value: [0.0 1.0 0.0 1.0 â¦].'>
	^self objectAt: #Range ifAbsent: [
		| array |
		array := Array new: self N asSmalltalkValue * 2.
		0 to: self N asSmalltalkValue - 1 do: [:i |
			array at: i * 2 + 1 put: 0.0.
			array at: i * 2 + 2 put: 1.0].
		array asPDF]
%
category: 'accessing'
classmethod: Indexed
numberOfAttributes
	^4
%
classmethod: Indexed
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Indexed
		supertype: #ColourSpace
		version: #(1 1)
		section: '8.6.6.3'
		documentation: 'An Indexed colour space specifies that an area is to be painted using a colour map or colour table of arbitrary colours in some other space. 
A conforming reader shall treat each sample value as an index into the colour table and shall use the colour value it finds there. 
This technique can considerably reduce the amount of data required to represent a sampled image.'
%
category: 'instance creation'
classmethod: Indexed
base: aColorspaceSymbol number: anInteger bytes: aByteArray
	"Constructor for the value printer"
	
	| inst |
	inst := self empty.
	inst at: 2 put: aColorspaceSymbol.
	inst at: 3 put: anInteger.
	inst at: 4 put: aByteArray asString.
	^inst
%
classmethod: Indexed
newForColors: someColors
	| inst |
	inst := self empty.
	inst initializeWithColors: someColors.
	^inst
%
classmethod: Indexed
newForColorspace: aColorspace
	| inst |
	inst := self empty.
	inst initializeForColorspace: aColorspace.
	^inst
%
category: 'accessing'
method: Indexed
bitsFor: aColorValue withSizes: bitsPerComponents
	"<Integer>
	the bits stored in the pixel array.
	If aColorValue is not found, it is added"

	| colorBytes hival bytes numberOfComponents |
	colorBytes := self base colorByteArrayFor: aColorValue.
	hival := self hival asSmalltalkValue.
	bytes := self lookup content.
	numberOfComponents := self base numberOfComponents.
	0 to: hival do: [:index |
		| byteIndex paletteBytes |
		byteIndex := index * numberOfComponents + 1.
		paletteBytes := bytes copyFrom: byteIndex to: byteIndex + numberOfComponents - 1.
		paletteBytes = colorBytes ifTrue: [
			^index]].
	hival >= 255 ifTrue: [
		"This error should be cought on a higher level to select an image format with more colors"
		^OffsetError raiseSignal: 'The color cannot be added: the indexed colour space is full.'].
	self at: 3 put: hival + 1.
	self at: 4 put: (self lookup class content: bytes , colorBytes).
	^self hival asSmalltalkValue
%
method: Indexed
bytesAt: zeroBasedIndex
	"<ByteArray>"

	| numberOfComponents |
	numberOfComponents := self base numberOfComponents.
	^self lookup content
		copyFrom: zeroBasedIndex * numberOfComponents + 1
		to: (zeroBasedIndex + 1) * numberOfComponents
%
method: Indexed
bytesFromMappedPalette: aMappedPalette
	^self base bytesFromMappedPalette: aMappedPalette
%
method: Indexed
colorAt: zeroBasedIndex withSizes: bitsPerComponents decodeWith: anArray
	"<ColorValue>"

	(#(#DeviceRGB #DeviceGray) includes: self base asSmalltalkValue) ifFalse: [
		^self error: 'only /DeviceRGB and /DeviceGray are supported as base colour space'].
	self base asSmalltalkValue = #DeviceGray ifTrue: [
		^ColorValue fromByte: (self bytesAt: zeroBasedIndex) first].
	^ColorValue fromBytes: (self bytesAt: zeroBasedIndex)
%
method: Indexed
defaultDecodeArray
	^(Array with: 0 with: self hival) asPDF
%
method: Indexed
initialColourValues
	^#(0)
%
method: Indexed
numberOfColors
	"<Integer>"

	^self hival asSmalltalkValue + 1
%
method: Indexed
numberOfComponents
	^1
%
method: Indexed
procSet
	^#ImageI
%
method: Indexed
rgbBytes
	"<ByteArray>
	uses 3 bytes per color"

	^self base rgbBytesFrom: self lookup asByteArray
%
category: 'accessing entries'
method: Indexed
base
	<type: #ColourSpace>
	<required>
	<attribute: 2 documentation: 'The base parameter shall be an array or name that identifies the base colour space in which the values in the colour table are to be interpreted.
It shall be any device or CIE-based colour space or (PDF 1.3) a Separation or DeviceN space, but shall not be a Pattern space or another Indexed space.
If the base colour space is DeviceRGB, the values in the colour table shall be interpreted as red, green, and blue components; if the base colour space is a CIE-based ABC space such as a CalRGB or Lab space, the values shall be interpreted as A, B, and C components.'>
	^self objectAt: 2
%
method: Indexed
hival
	<type: #Integer>
	<required>
	<attribute: 3 documentation: 'The hival parameter shall be an integer that specifies the maximum valid index value.
The colour table shall be indexed by integers in the range 0 to hival.
hival shall be no greater than 255, which is the integer required to index a table with 8-bit index values.'>
	^self objectAt: 3
%
method: Indexed
lookup
	<type: #Stream>
	<type: #String>
	<required>
	<attribute: 4 documentation: 'The colour table shall be defined by the lookup parameter, which may be either a stream or (PDF 1.2) a byte string.
It shall provide the mapping between index values and the corresponding colours in the base colour space.'>
	^self objectAt: 4
%
category: 'initialize-release'
method: Indexed
initializeColorsFrom: aMappedPalette
	self at: 3 put: aMappedPalette size - 1.
	"need to create the PDF string directly. Otherwise, CR(13) will be replaced by LF (10)!"
	self at: 4 put: ((PDF classAt: #EncodedString) string: (self bytesFromMappedPalette: aMappedPalette) asString)
%
method: Indexed
initializeForColorspace: aColorspace
	self at: 2 put: aColorspace.
	self at: 3 put: -1.
	self at: 4 put: ((PDF classAt: #EncodedString) string: String new)
%
method: Indexed
initializeWithColors: someColors
	| wst |
	self at: 2 put: someColors first colorspace.
	self at: 3 put: someColors size - 1.
	wst := (ByteArray new: someColors size * self base numberOfComponents) writeStream.
	someColors do: [:colorValue | wst nextPutAll: colorValue asByteArray].
	self at: 4 put: wst contents asString
%
category: 'printing'
method: Indexed
printvalueWith: printer
	"Value protocol to print the object literally"
	
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'base' value: self base asSmalltalkValue).
	args add: (printer constant: 'number' value: self hival asSmalltalkValue).
	args add: (printer constant: 'bytes' value: self lookup asByteArray).
	^printer printvalue: self arguments: args
%
category: 'accessing'
classmethod: Lab
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Lab
		supertype: #CIEColourSpace
		version: #(1 1)
		section: '8.6.5.4'
		documentation: 'A Lab colour space is a CIE-based ABC colour space with two transformation stages. 
In this type of space, A, B, and C represent the L*, a*, and b* components of a CIE 1976 L*a*b* space. 
The range of the first (L*) component shall be 0 to 100; 
the ranges of the second and third (a* and b*) components shall be defined by the Range entry in the colour space dictionary.'
%
category: 'accessing'
method: Lab
defaultDecodeArray
	^#(0 100) asPDF , self dictionary Range
%
method: Lab
initialColourValues
	"the initial colour shall have all components equal to 0.0 unless that falls outside the intervals specified by the spaceâs Range entry, in which case the nearest valid value shall be substituted."

	^#(0.0 0.0 0.0)
%
method: Lab
numberOfComponents
	^3
%
category: 'accessing entries'
method: Lab
dictionary
	<type: #LabColourSpaceDictionary>
	<required>
	<attribute: 2 documentation: 'A dictionary containing parameters that further characterize the space. The entries in this dictionary have specific interpretations that depend on the colour space; some entries are required and some are optional.'>
	^self objectAt: 2
%
category: 'accessing'
classmethod: LabColourSpaceDictionary
pdfTypeDefinition

	^PDFTypeDefinition
		name: #LabColourSpaceDictionary
		supertype: #Dictionary
		section: '8.6.5.4'
		documentation: '
A Lab colour space is a CIE-based ABC colour space with two transformation stages. 
In this type of space, A, B, and C represent the L*, a*, and b* components of a CIE 1976 L*a*b* space. 
The range of the first (L*) component shall be 0 to 100; 
the ranges of the second and third (a* and b*) components shall be defined by the Range entry in the colour space dictionary.'
%
category: 'accessing entries'
method: LabColourSpaceDictionary
BlackPoint
	<typeArrayOf: #Number>
	<attribute: 2 documentation: 'An array of three numbers [XB YB ZB] that shall specify the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point.
All three of these numbers shall be non-negative'>
	^self objectAt: #BlackPoint ifAbsent: [#(0.0 0.0 0.0) asPDF]
%
method: LabColourSpaceDictionary
Range
	<typeArrayOf: #Number>
	<attribute: 3 documentation: 'An array of four numbers [amin amax bmin bmax] that shall specify the range of valid values for the a* and b* (B and C) components of the colour spaceâthat is,
	amin <= a* <= amax
and
	bmin <= b* <= bmax
Component values falling outside the specified range shall be adjusted to the nearest valid value without error indication.'>
	^self objectAt: #Range ifAbsent: [#(-100 100 -100 100) asPDF]
%
method: LabColourSpaceDictionary
WhitePoint
	<typeArrayOf: #Number>
	<required>
	<attribute: 1 documentation: 'An array of three numbers [XW YW ZW] that shall specify the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point.
The numbers XW and ZW shall be positive, and YW shall be 1.0.'>
	^self objectAt: #WhitePoint
%
category: 'accessing'
classmethod: Pattern
numberOfAttributes
	^1
%
classmethod: Pattern
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Pattern
		supertype: #ColourSpace
		version: #(1 2)
		section: '8.6.6.2'
		documentation: 'A Pattern colour space specifies that an area is to be painted with a pattern rather than a single colour. 
The pattern shall be either a tiling pattern (type 1) or a shading pattern (type 2).'
%
category: 'accessing'
method: Pattern
decodeArrayMax: aNumber
	TypeError raiseSignal: 'Not permitted with images'.
	^nil
%
method: Pattern
defaultDecodeArray
	TypeError raiseSignal: 'Not permitted with images'.
	^#() asPDF
%
method: Pattern
numberOfComponents
	^0
%
category: 'accessing'
classmethod: Separation
numberOfAttributes
	^4
%
classmethod: Separation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Separation
		supertype: #ColourSpace
		version: #(1 2)
		section: '8.6.6.4'
		documentation: 'A Separation colour space provides a means for specifying the use of additional colorants or 
for isolating the control of individual colour components of a device colour space for a subtractive device. 
When such a space is the current colour space, the current colour shall be a single-component value, 
called a tint, that controls the application of the given colorant or colour components only.'
%
category: 'accessing'
method: Separation
defaultDecodeArray
	^#(0.0 1.0) asPDF
%
method: Separation
initialColourValues
	^#(0.0)
%
method: Separation
numberOfComponents
	^1
%
category: 'accessing entries'
method: Separation
alternateSpace
	<type: #DeviceColourSpace>
	<type: #CIEColourSpace>
	<required>
	<attribute: 3 documentation: 'The alternateSpace parameter shall be an array or name object that identifies the alternate colour space, which may be any device or CIE-based colour space but may not be another special colour space (Pattern, Indexed, Separation, or DeviceN)'>
	^self objectAt: 3
%
method: Separation
tintName
	<type: #Name>
	<required>
	<attribute: 2 documentation: 'The name parameter is a name object that shall specify the name of the colorant that this Separation colour space is intended to represent (or one of the special names All or None).
Such colorant names are arbitrary, and there may be any number of them, subject to implementation limits.'>
	^self objectAt: 2
%
method: Separation
tintTransform
	<type: #Function>
	<required>
	<attribute: 4 documentation: 'The tintTransform parameter shall be a function.
During subsequent painting operations, a conforming reader calls this function to transform a tint value into colour component values in the alternate colour space.
The function shall be called with the tint value and shall return the corresponding colour component values.
That is, the number of components and the interpretation of their values shall depend on the alternate colour space'>
	^self objectAt: 4
%
category: 'accessing'
classmethod: SimplePattern
pdfTypeDefinition
	^PDFTypeDefinition
		name: #SimplePattern
		supertype: #ColourSpace
		version: #(1 2)
		section: '8.7.3.3'
		documentation: 'An uncoloured tiling pattern is a pattern that has no inherent colour: the colour shall be specified separately whenever the pattern is used.
It provides a way to tile different regions of the page with pattern cells having the same shape but different colours.
This type of pattern shall be identified by a pattern type of 1 and a paint type of 2 in the pattern dictionary.
The patternâs content stream shall not explicitly specify any colours; it may paint an image mask but no other kind of image.

A Pattern colour space representing an uncoloured tiling pattern shall have a parameter: an object identifying the underlying colour space in which the actual colour of the pattern shall be specified.
The underlying colour space shall be given as the second element of the array that defines the Pattern colour space.'
%
classmethod: SimplePattern
type
	^#Pattern
%
category: 'testing'
classmethod: SimplePattern
isClassForName: aName
	^self type = aName asSmalltalkValue
%
category: 'accessing'
method: SimplePattern
content
	^#Pattern
%
category: 'accessing'
classmethod: SpecialColourSpace
resourcePrefix
	^'CS'
%
classmethod: SpecialColourSpace
resourceType
	"<Symbol>
	the name of a /Resources key"

	^#ColorSpace
%
classmethod: SpecialColourSpace
type
	^self name
%
category: 'instance creation'
classmethod: SpecialColourSpace
empty
	| empty |
	empty := super empty.
	empty at: 1 put: self type.
	^empty
%
category: 'testing'
classmethod: SpecialColourSpace
isClassForArray: anArray

	^(super isClassForArray: anArray) and: [
	anArray first asPDF = self type asPDF]
%
category: 'accessing'
method: SpecialColourSpace
defaultBlack
	"<Color>"

	^self initialColourValues asPDF
%
method: SpecialColourSpace
defaultDecodeArray
	"<PDFArray of: Number>"

	^self subclassResponsibility
%
method: SpecialColourSpace
initialColourValues
	"<Array of Number>
	the initial colour when the current colour space is set"

	^#()
%
method: SpecialColourSpace
numberOfComponents
	"<Integer>"

	^self subclassResponsibility
%
method: SpecialColourSpace
procSet
	^#ImageC
%
category: 'accessing entries'
method: SpecialColourSpace
name
	<type: #Name>
	<required>
	<attribute: 1 documentation: 'The name of the colour space type.'>
	^self objectAt: 1
%
category: 'accessing'
classmethod: UncolouredPattern
numberOfAttributes
	^2
%
classmethod: UncolouredPattern
pdfTypeDefinition
	^PDFTypeDefinition
		name: #UncolouredPattern
		supertype: #ColourSpace
		version: #(1 2)
		section: '8.7.3.3'
		documentation: 'An uncoloured tiling pattern is a pattern that has no inherent colour: the colour shall be specified separately whenever the pattern is used.
It provides a way to tile different regions of the page with pattern cells having the same shape but different colours.
This type of pattern shall be identified by a pattern type of 1 and a paint type of 2 in the pattern dictionary.
The patternâs content stream shall not explicitly specify any colours; it may paint an image mask but no other kind of image.

A Pattern colour space representing an uncoloured tiling pattern shall have a parameter: an object identifying the underlying colour space in which the actual colour of the pattern shall be specified.
The underlying colour space shall be given as the second element of the array that defines the Pattern colour space.'
%
classmethod: UncolouredPattern
type
	^#Pattern
%
category: 'accessing'
method: UncolouredPattern
decodeArrayMax: aNumber
	TypeError raiseSignal: 'Not permitted with images'.
	^nil
%
method: UncolouredPattern
defaultDecodeArray
	TypeError raiseSignal: 'Not permitted with images'.
	^#() asPDF
%
method: UncolouredPattern
numberOfComponents
	^0
%
category: 'accessing entries'
method: UncolouredPattern
underlyingColourSpace
	<type: #ColourSpace>
	<required>
	<attribute: 2 documentation: 'A Pattern colour space representing an uncoloured tiling pattern shall have a parameter: an object identifying the underlying colour space in which the actual colour of the pattern shall be specified. The underlying colour space shall be given as the second element of the array that defines the Pattern colour space.'>
	^self objectAt: 2
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Fonts'.
	dict at: #comment put: 'Font support for PDF'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #storeVersion put: '2.5.3.0'.
	dict at: #codeComponents put: SymbolDictionary new.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PostScript CIDInit'.
	dict at: #comment put: 'Adobe CMap implementation

CMaps are PostScript programs which create a CMap structure use to decode bytes.

This implementation does just that: it uses the PostScript interpreter to read the CMap source and creates a CMap object from the result.

CMaps are used in PDF Type0 fonts.

See https://wiki.pdftalk.de/doku.php?id=cmap for more information'.
	dict at: #isFunctional put: false.
	dict at: #notice put: 'The MIT License

Copyright Â© 2020 Christian Haider

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.'.
	dict at: #storeVersion put: '2.5.0.1'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components := (components at:  #'PDFtalk Fonts') at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PostScript at: 1.
%
# Define class Mappings
DoIt
Value
	subclass: 'Mappings'
	instVarNames: #(codespaces unmapped)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Mappings category: 'PostScript CIDInit'.
	Mappings comment: 'Mapping from some source codes to some destination codes

The chars and ranges are sorted bytewise

When created via #fromChars:andRanges: a canonical form is created
- neighbouring mappings are joined to range mappings and
- single character range mappings are converted to char mappings'.
	Mappings namespacePath: #(#PostScript).
%
# Define class MappingSource
DoIt
Value
	subclass: 'MappingSource'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	MappingSource category: 'PostScript CIDInit'.
	MappingSource comment: 'Abstract class for the source of a mapping

used for matching source codes.

The mapping sources can be ordered.'.
	MappingSource namespacePath: #(#PostScript).
%
# Define class Code
DoIt
MappingSource
	subclass: 'Code'
	instVarNames: #(bytes)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Code category: 'PostScript CIDInit'.
	Code comment: 'One or more bytes representing a code point in a CMap

Knows how many bytes are used, even if they are all 0'.
	Code namespacePath: #(#PostScript).
%
# Define class Codespace
DoIt
Value
	subclass: 'Codespace'
	instVarNames: #(range)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Codespace category: 'PostScript CIDInit'.
	Codespace comment: 'A codespace with a range of potential mappings and the actual mappings

Multi byte codespace ranges create a tree of codespaces , each responsible for one byte.
The last byte is taken care of by ByteCodespaces, forming the leafs of the tree.
The byte ranges before are represented by IndexedCodespace, forming the intermediate nodes of the tree.
Example:
	A range <3020>..<407F> results in an IndexedCodespace for range <30>..<40> with an array with 17 slots.
	Each slot may hold a ByteCodespace with range <20>..<7F> with an ordered list of mappings.
	The codespaces are created on demand when mappings in that range are added.

The mappings are indexed by code'.
	Codespace namespacePath: #(#PostScript).
%
# Define class ByteCodespace
DoIt
Codespace
	subclass: 'ByteCodespace'
	instVarNames: #(mappings)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	ByteCodespace category: 'PostScript CIDInit'.
	ByteCodespace comment: 'A codespace with an ordered collection of mappings

On creation, mappings are added one by one, possibly overwriting existing ones.
The mappings are at any moment in a canonical form and totally ordered (no overlap).
	- no duplicated source code (later wins)
	- no single code range mapping (converted to a char mapping)
	- no neighboring mappings (joined to range mappings)

Instances are the leaf nodes in the codespace tree'.
	ByteCodespace namespacePath: #(#PostScript).
%
# Define class CMap
DoIt
Value
	subclass: 'CMap'
	instVarNames: #(name characterCollection properties coderanges bfMappings cidMappings notdefMappings)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	CMap category: 'PostScript CIDInit'.
	CMap comment: 'Value representing a CMap for code lookup

Created from the PostScript dictionary produced by the CIDInit procedures

'.
	CMap namespacePath: #(#PostScript).
%
# Define class BfMappings
DoIt
Mappings
	subclass: 'BfMappings'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	BfMappings category: 'PostScript CIDInit'.
	BfMappings comment: 'Mapping from character codes to unicode

Used in type 2 CMaps in the /ToUnicode attribute

What does "bf" stand for?'.
	BfMappings namespacePath: #(#PostScript).
%
# Define class Mapping
DoIt
Value
	subclass: 'Mapping'
	instVarNames: #(source destination)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Mapping category: 'PostScript CIDInit'.
	Mapping comment: 'Maps a source (Code or Range) to a destination code

The source must be in the defined codespace'.
	Mapping namespacePath: #(#PostScript).
%
# Define class RangeMapping
DoIt
Mapping
	subclass: 'RangeMapping'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	RangeMapping category: 'PostScript CIDInit'.
	RangeMapping comment: 'Maps a range to a destination range'.
	RangeMapping namespacePath: #(#PostScript).
%
# Define class Range
DoIt
MappingSource
	subclass: 'Range'
	instVarNames: #(first last)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	Range category: 'PostScript CIDInit'.
	Range comment: 'Range of codes

like interval based on Codes

The bounds must have the same number of bytes'.
	Range namespacePath: #(#PostScript).
%
# Define class RegisteredCharacterCollection
DoIt
Value
	subclass: 'RegisteredCharacterCollection'
	instVarNames: #(registry ordering supplement)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	RegisteredCharacterCollection category: 'PostScript CIDInit'.
	RegisteredCharacterCollection comment: 'The character collection for a CMap specifying character selectors that are CIDs'.
	RegisteredCharacterCollection namespacePath: #(#PostScript).
%
# Define class CIDMappings
DoIt
Mappings
	subclass: 'CIDMappings'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	CIDMappings category: 'PostScript CIDInit'.
	CIDMappings comment: 'Mapping from some codes to character IDs

Used in Adobe''s default CMaps (type 1)'.
	CIDMappings namespacePath: #(#PostScript).
%
# Define class CIDInit
DoIt
ProcSet
	subclass: 'CIDInit'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	CIDInit category: 'PostScript CIDInit'.
	CIDInit comment: 'Building a Type 0 CIDFont or a CMap dictionary

References
5014.CIDFont_Spec.pdf	Adobe Technical Note #5014: "Adobe CMap and CIDFont Files Specification" 11 June 1993
5411.ToUnicode.pdf		Adobe Technical Note #5411: "ToUnicode Mapping File Tutorial" May 29, 2003'.
	CIDInit namespacePath: #(#PostScript).
%
# Define class IndexedCodespace
DoIt
Codespace
	subclass: 'IndexedCodespace'
	instVarNames: #(codespaces)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	IndexedCodespace category: 'PostScript CIDInit'.
	IndexedCodespace comment: 'A codespace with an array of codespaces

It has a fixed array of codespaces for the range of the first byte.

The first byte is an index to another codespace (indexed by the remaining bytes).

Instances are the intermediate nodes in the codespace tree'.
	IndexedCodespace namespacePath: #(#PostScript).
%
# Define class CharMapping
DoIt
Mapping
	subclass: 'CharMapping'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	CharMapping category: 'PostScript CIDInit'.
	CharMapping comment: 'Maps one code to one destination code'.
	CharMapping namespacePath: #(#PostScript).
%
# Define class NotdefMappings
DoIt
Mappings
	subclass: 'NotdefMappings'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PostScript
%
DoIt
	NotdefMappings category: 'PostScript CIDInit'.
	NotdefMappings comment: 'Mapping from some codes to notdef character IDs

Used in Adobe''s default CMaps (type 1)'.
	NotdefMappings namespacePath: #(#PostScript).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| package policy |
	package := GsPackageLibrary createPackageNamed: #SessionMethods.
	GsPackageLibrary installPackage: package.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: FileInSymbolDictionary.
	policy externalSymbolList: (GsSession currentSession symbolList asArray copyWithout: FileInSymbolDictionary).
	policy enable.
%
category: '*PostScript CIDInit-converting'
method: Array
mappingsFrom: aRange
	| mappings |
	mappings := OrderedCollection new.
	self with: aRange codes do: [:item :code | mappings add: (item mappingFrom: code)].
	^mappings
%
category: '*PostScript CIDInit-accessing'
method: Integer
psMappedCharacter
	"<Character>"

	^self asCharacter
%
category: '*PostScript CIDInit-converting'
method: Integer
mappingFrom: aMappingSource
	^aMappingSource mappingToInteger: self
%
method: Integer
mappingsFrom: aMappingSource
	^Array with: (self mappingFrom: aMappingSource)
%
category: '*PostScript CIDInit-accessing'
method: LargeInteger
psMappedCharacter
	"LargeIntegers cannot be mapped to Characters"

	^Character illegalCode asCharacter
%
DoIt
	| dict policy |
	dict := SymbolDictionary new.
	dict at: #UNWRITABLE put: dict.
	dict immediateInvariant.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: dict.
	policy externalSymbolList: Array new.
	policy enable.
%
DoIt
System myUserProfile insertDictionary: PostScript at: 1.
%
category: 'accessing'
method: BfMappings
addMapping: aMapping
	| codespace |
	codespace := (self codespaceFor: aMapping source) ifNil: [
		^(OffsetError receiver: self selector: #addMapping: index: aMapping value: nil) raiseRequest].
	codespace at: aMapping source first put: aMapping
%
method: BfMappings
characterAt: aCode
	"<Character | nil>"

	^(self mappingAt: aCode) ifNotNil: [:mapping | mapping characterAt: aCode]
%
method: BfMappings
codespaceFor: aCodeOrRange
	"<Codespace | nil>
	the matching codespace"

	^self codespaces detect: [:codespace | aCodeOrRange isInRange: codespace range] ifNone: [
		nil]
%
category: 'instance creation'
classmethod: ByteCodespace
range: rangeRange mappings: mappingsArray
	| inst |
	inst := self new.
	inst initializeRange: rangeRange mappings: mappingsArray.
	^inst
%
category: 'instance creation optional'
classmethod: ByteCodespace
range: rangeRange
	^self range: rangeRange mappings: nil
%
category: 'specification'
classmethod: ByteCodespace
localSpecification
	<sequence: #mappings comment: '<Array of: Mapping>
	During construction, instances are not immutable, but are modified - cheating Values'>
%
category: 'accessing'
method: ByteCodespace
allMappings
	^self mappings
%
method: ByteCodespace
at: aCode ifAbsent: absentBlock
	(self range includesCode: aCode) ifFalse: [
		^absentBlock value].
	^self mappings detect: [:mapping | mapping maps: aCode] ifNone: absentBlock
%
method: ByteCodespace
mappings
	"<Array of: Mapping>
	During construction, instances are not immutable, but are modified - cheating Values"

	^mappings ifNil: [#()]
%
method: ByteCodespace
numberOfChars
	^self mappings inject: 0 into: [:sum :mapping | sum + mapping numberOfChars]
%
method: ByteCodespace
numberOfMappedCodes
	^self mappings inject: 0 into: [:sum :mapping | sum + mapping numberOfCodes]
%
method: ByteCodespace
numberOfMappings
	^self mappings size
%
method: ByteCodespace
numberOfRanges
	^self mappings inject: 0 into: [:sum :mapping | sum + mapping numberOfRanges]
%
category: 'adding'
method: ByteCodespace
addMapping: aMapping
	"canonical form of char and range mappings:
		- orderedMappings contain only mappings with the same source length
		- no duplicated source code (later wins)
		- no single code range mapping (converted to a char mapping)
		- no neighboring mappings (joined to range mappings)"

	self mappings isEmpty ifTrue: [
		mappings := OrderedCollection new: self range numberOfCodes.
		self mappings add: aMapping.
		^self].
	(self mappings last source isBefore: aMapping source) ifTrue: [
		(self mappings last joined: aMapping) ifNotNil: [:joined |
			self mappings at: self mappings size put: joined.
			^self].
		self mappings add: aMapping.
		^self].
	self overwriteMapping: aMapping
%
method: ByteCodespace
indexIntervalOfMappingsTouching: aMapping
	"<Interval>
	indexes of all mappings touching aMapping
	called when aMapping could not be added as last mapping"

	| start end |
	1 to: self mappings size do: [:index |
		((self mappings at: index) isBeforeAndNotAttaching: aMapping) ifFalse: [
			start := index.
			end := start - 1.
			start to: self mappings size do: [:i |
				((self mappings at: i) isAfterAndNotAttaching: aMapping)
					ifFalse: [end := i]
					ifTrue: [
					^start to: end]].
			^start to: end]].
	"all elements are before aMapping. This should never happen"
	^self halt
%
method: ByteCodespace
overwriteMapping: aMapping
	"destructively modifies mappings"

	| touchingIndexInterval firsttouching firstMappings lasttouching |
	touchingIndexInterval := self indexIntervalOfMappingsTouching: aMapping.
	touchingIndexInterval isEmpty ifTrue: [
		self mappings add: aMapping beforeIndex: touchingIndexInterval begin.
		"the first entry not before is after aMapping => just insert aMapping before"
		^self].
	"only the first and last one have to be considered, all others are dropped"
	firsttouching := self mappings at: touchingIndexInterval first.
	touchingIndexInterval size = 1 ifTrue: [
		self
			replaceAt: touchingIndexInterval first
			withAll: (firsttouching mappingsOverwrittenBy: aMapping).
		^self].
	firstMappings := firsttouching mappingsOverwrittenBy: aMapping.
	lasttouching := self mappings at: touchingIndexInterval last.
	self
		replaceAtAll: touchingIndexInterval
		withAll: (firstMappings allButLast: 1) , (lasttouching mappingsOverwrittenBy: firstMappings last).
	^self
%
category: 'copying'
method: ByteCodespace
copyWithArrays
	^self class range: self range mappings: self mappings asArray
%
category: 'initialize-release'
method: ByteCodespace
initializeRange: rangeRange mappings: mappingsArray
	range := rangeRange.
	(mappingsArray notNil and: [
	mappingsArray notEmpty]) ifTrue: [
			mappings := (Array withAll: mappingsArray) beImmutable].
	self beImmutable
%
category: 'modifying'
method: ByteCodespace
replaceAt: anIndex withAll: someMappings
	someMappings isEmpty ifTrue: [
		self mappings removeIndex: anIndex.
		^self].
	self mappings at: anIndex put: someMappings first.
	someMappings size = 1 ifTrue: [
		^self].
	(someMappings allButFirst: 1) doWithIndex: [:mapping :index |
		self mappings add: mapping beforeIndex: anIndex + index]
%
method: ByteCodespace
replaceAtAll: anInterval withAll: someElements
	someElements isEmpty ifTrue: [
		self mappings removeFrom: anInterval first to: anInterval last.
		^self].
	anInterval size <= someElements size ifTrue: [
		self mappings
			replaceFrom: anInterval first
			to: anInterval last
			with: (someElements first: anInterval size).
		(someElements allButFirst: anInterval size) doWithIndex: [:mapping :index |
			self mappings add: mapping beforeIndex: anInterval last + index].
		^self].
	self mappings
		replaceFrom: anInterval first
		to: anInterval first + someElements size - 1
		with: someElements.
	self mappings removeFrom: anInterval first + someElements size to: anInterval last
%
category: 'printing'
method: ByteCodespace
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'range' value: self range).
	args add: (printer array: 'mappings' value: self mappings).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: ByteCodespace
hasMappings
	^self mappings notEmpty
%
category: 'accessing'
method: CharMapping
characterAt: aCode
	"assumes that aCode is equal to the receivers source; no checks are done!"

	^self destination psMappedCharacter
%
method: CharMapping
characters
	^String with: self destination psMappedCharacter
%
method: CharMapping
codes
	^Array
		with: self source
		with: self destination
%
method: CharMapping
destinationAt: aCode
	"assumes that aCode is equal to the receivers source; no checks are done!"

	^self destination
%
method: CharMapping
mappingsOverwrittenBy: aMapping
	"the receiver can be directly before aMapping"

	(self joined: aMapping) ifNotNil: [:joined |
		^Array with: joined].
	"or directly after aMapping"
	(aMapping joined: self) ifNotNil: [:joined |
		^Array with: joined].
	"or inside aMappings source. Then forget about it, because it is shadowed by aMapping"
	^Array with: aMapping
%
method: CharMapping
numberOfChars
	^1
%
method: CharMapping
numberOfCodes
	^1
%
method: CharMapping
numberOfRanges
	^0
%
category: 'converting'
method: CharMapping
appendedToCode: aCodeMapping
	^RangeMapping
		source: (aCodeMapping source to: self source)
		destination: aCodeMapping destination
%
method: CharMapping
appendedToRange: aRangeMapping
	^RangeMapping
		source: (aRangeMapping source first to: self source)
		destination: aRangeMapping destination
%
method: CharMapping
asSimplestMapping
	^self
%
method: CharMapping
rangeWith: aMapping
	^aMapping appendedToCode: self
%
category: 'testing'
method: CharMapping
isNext: aMapping
	^(self source isNext: aMapping source) and: [
	self destination + 1 = aMapping destination]
%
method: CharMapping
maps: aCode 
	^self source = aCode
%
category: 'Character IDs as selectors'
classmethod: CIDInit
begincidchar
	"int begincidchar -
	begin specifies one CIDFont character"

	<operator>
	^self action: [:ps |
		ps propertyAt: #cidcharCount put: ps pop.
		ps mark.
		ps scanner takeHexAsCode]
%
classmethod: CIDInit
begincidrange
	"int begincidrange -
	begin specifies range of CIDFont characters"

	<operator>
	^self action: [:ps |
		ps propertyAt: #cidrangeCount put: ps pop.
		ps mark.
		ps scanner takeHexAsCode]
%
classmethod: CIDInit
endcidchar
	"srcCode dstCID endcidchar -
	end specifies one CIDFont character"

	<operator>
	^self action: [:ps | ps addPairsAt: #cidchar]
%
classmethod: CIDInit
endcidrange
	"srcCodeLo srcCodeHi dstCIDLo endcidrange -
	end specifies range of CIDFont characters"

	<operator>
	^self action: [:ps | ps addTriplesAt: #cidrange]
%
category: 'Characters as selectors'
classmethod: CIDInit
beginbfchar
	"int beginbfchar -
	begin specifies one base font glyph"

	<operator>
	^self action: [:ps |
		ps propertyAt: #bfcharCount put: ps pop.
		ps mark.
		ps scanner takeHexAsCode]
%
classmethod: CIDInit
beginbfrange
	"int beginbfrange -
	begin specifies range of base font glyphs"

	<operator>
	^self action: [:ps |
		ps propertyAt: #bfrangeCount put: ps pop.
		ps mark.
		ps scanner takeHexAsCode]
%
classmethod: CIDInit
endbfchar
	"srcCode dstCode endbfchar -
	or
	srcCode dstCharname endbfchar -
	end specifies one base font glyph"

	<operator>
	^self action: [:ps | ps addPairsAt: #bfchar]
%
classmethod: CIDInit
endbfrange
	"srcCodeLo srcCodeHi dstCodeLo endbfrange -
	or
	srcCodeLo srcCodeHi [dstCharname1 ... dstCharnameN] endbfrange -
	end specifies range of base font glyphs"

	<operator>
	^self action: [:ps | ps addTriplesAt: #bfrange]
%
category: 'General'
classmethod: CIDInit
begincmap
	"- begincmap -
	begin a CMap definition"

	<operator>
	^self action: [:ps |
		ps propertyAt: #cmap ifPresent: [
			self error: '/begincmap must not occur after another /begincmap'].
		ps propertyAt: #cmap put: true]
%
classmethod: CIDInit
begincodespacerange
	"int begincodespacerange -
	begin set valid input codes"

	<operator>
	^self action: [:ps |
		ps propertyAt: #codespacerangeCount put: ps pop.
		ps mark.
		ps scanner takeHexAsCode]
%
classmethod: CIDInit
endcmap
	"- endcmap -
	end a CMap definition"

	<operator>
	^self action: [:ps |
		ps propertyRemove: #cmap ifAbsent: [
			self error: '/endcmap must occur after /begincmap']]
%
classmethod: CIDInit
endcodespacerange
	"srcCode1 srcCode2 endcodespacerange -
	end set valid input codes"
	"The codespace ranges in the CMap specify how many bytes are extracted from the string for each successive character code. A codespace range shall be specified by a pair of codes of some particular length giving the lower and upper bounds of that range. A code shall be considered to match the range if it is the same length as the bounding codes and the value of each of its bytes lies between the corresponding bytes of the lower and upper bounds. The code length shall not be greater than 4"

	<operator>
	^self action: [:ps |
		| ranges dict |
		ranges := (ps tuples: #codespacerange size: 2) collect: [:tuple | tuple first to: tuple last].
		dict := ps dictionaryStack top.
		dict at: #codespacerange put: (dict at: #codespacerange ifAbsent: [#()]) , ranges asArray.
		ps scanner takeHexAsString]
%
classmethod: CIDInit
usecmap
	"/CMapName usecmap -
	use another CMap's VM resource"

	<operator>
	^self action: [:ps |
		| cmap |
		ps run: '/CMap findresource'.
		cmap := ps pop.
		#(#codespacerange #bfchar #bfrange #cidchar #cidrange #notdefchar #notdefrange) do: [:key |
			cmap at: key ifPresent: [:value | ps dictionaryStack top at: key put: value copy]]]
%
category: 'notdef'
classmethod: CIDInit
beginnotdefchar
	"int beginnotdefchar -
	begin specifies one notdef character"

	<operator>
	^self action: [:ps |
		ps propertyAt: #notdefcharCount put: ps pop.
		ps mark.
		ps scanner takeHexAsCode]
%
classmethod: CIDInit
beginnotdefrange
	"int beginnotdefrange -
	begin specifies range of notdef characters"

	<operator>
	^self action: [:ps |
		ps propertyAt: #notdefrangeCount put: ps pop.
		ps mark.
		ps scanner takeHexAsCode]
%
classmethod: CIDInit
endnotdefchar
	"srcCode dstCID endnotdefchar -
	end specifies one notdef character"

	<operator>
	^self action: [:ps | ps addPairsAt: #notdefchar]
%
classmethod: CIDInit
endnotdefrange
	"srcCodeLo srcCodeHi dstCIDLo endnotdefrange -
	end specifies range of notdef characters"

	<operator>
	^self action: [:ps | ps addTriplesAt: #notdefrange]
%
category: 'Rearranged font'
classmethod: CIDInit
beginrearrangedfont
	"/newFontName [component fonts array] beginrearrangedfont -
	identifies fonts used in rearrangement"

	<operator>
	^self action: [:ps |
		| fonts |
		ps propertyAt: #rearrangedfont ifPresent: [
			self error: '/beginrearrangedfont must not occur after another /beginrearrangedfont'].
		ps propertyAt: #rearrangedfont put: true.
		ps dictionaryStack push: PSDictionary new.
		fonts := ps pop.
		ps dictionaryStack top at: #name put: ps pop object.
		ps dictionaryStack top at: #fonts put: fonts]
%
classmethod: CIDInit
beginusematrix
	"fontID beginusematrix -
	begin transformation matrix to use with font"

	<operator>
	^self action: [:ps |
		| fonts fontname fontDict |
		fonts := ps dictionaryStack top at: #fonts ifAbsent: [
			"clean old font dict off the dict stack"
			ps dictionaryStack pop.
			ps dictionaryStack top at: #fonts].
		fontname := (fonts at: ps pop) object.
		fontDict := ps dictionaryStack top at: fontname ifAbsentPut: [
			PSDictionary with: #name -> fontname].
		ps dictionaryStack push: fontDict]
%
classmethod: CIDInit
endrearrangedfont
	"- endrearrangedfont -
	font built on an existing template"

	<operator>
	^self action: [:ps |
		| fontDict |
		ps propertyRemove: #rearrangedfont ifAbsent: [
			self error: '/endrearrangedfont must occur after /beginrearrangedfont'].
		ps dictionaryStack top at: #fonts ifAbsent: [ps dictionaryStack pop].
		fontDict := ps dictionaryStack pop.
		ps inCategory: #Font at: (fontDict at: #name) put: fontDict]
%
classmethod: CIDInit
endusematrix
	"[a b c d tx ty] endusematrix -
	end transformation matrix to use with font"

	<operator>
	^self action: [:ps |
		ps dictionaryStack top at: #usematrix put: ps pop.
		ps dictionaryStack pop]
%
classmethod: CIDInit
usefont
	"fontID usecmap -
	specifies font used subsequently"

	<operator>
	^self action: [:ps |
		| fonts fontname fontDict |
		fonts := ps dictionaryStack top at: #fonts ifAbsent: [
			"clean old font dict off the dict stack"
			ps dictionaryStack pop.
			ps dictionaryStack top at: #fonts].
		fontname := (fonts at: ps pop) object.
		fontDict := ps dictionaryStack top at: fontname ifAbsentPut: [
			PSDictionary with: #name -> fontname].
		ps dictionaryStack push: fontDict]
%
category: 'accessing'
method: CIDMappings
cidAt: aCode
	"<Integer | nil>"

	^(self mappingAt: aCode) ifNotNil: [:mapping | mapping destinationAt: aCode]
%
category: 'instance creation'
classmethod: CMap
fromPostScriptString: aString
	^self newWith: ((Interpreter run: aString) categoryAt: #CMap) instances first value
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary coderanges: coderangesArray bfMappings: bfMappingsBfMappings cidMappings: cidMappingsCIDMappings notdefMappings: notdefMappingsNotdefMappings
	| inst |
	inst := self new.
	inst
		initializeName: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: coderangesArray
		bfMappings: bfMappingsBfMappings
		cidMappings: cidMappingsCIDMappings
		notdefMappings: notdefMappingsNotdefMappings.
	^inst
%
classmethod: CMap
newWith: aDictionary
	| dict cmapname chars coderanges bfchars bfranges cidchars cidranges notdefchars notdefranges |
	dict := aDictionary copy.
	cmapname := (dict removeKey: #CMapName) object.
	chars := RegisteredCharacterCollection newWith: (dict removeKey: #CIDSystemInfo ifAbsent: [
		PSDictionary new]).
	coderanges := self sortedCodespaceranges: (dict removeKey: #codespacerange).
	bfchars := dict removeKey: #bfchar ifAbsent: [#()].
	bfranges := dict removeKey: #bfrange ifAbsent: [#()].
	cidchars := dict removeKey: #cidchar ifAbsent: [#()].
	cidranges := dict removeKey: #cidrange ifAbsent: [#()].
	notdefchars := dict removeKey: #notdefchar ifAbsent: [#()].
	notdefranges := dict removeKey: #notdefrange ifAbsent: [#()].
	(dict includesKey: #CMapVersion) ifTrue: [
		dict at: #CMapVersion put: (dict at: #CMapVersion) asFloat].
	^self
		name: cmapname
		characterCollection: chars
		properties: dict
		coderanges: coderanges
		bfMappings: (BfMappings fromChars: bfchars andRanges: bfranges in: coderanges)
		cidMappings: (CIDMappings fromChars: cidchars andRanges: cidranges in: coderanges)
		notdefMappings: (NotdefMappings fromChars: notdefchars andRanges: notdefranges in: coderanges)
%
classmethod: CMap
sortedCodespaceranges: someRanges
	"<Array of: Range>
	sorted, non-overlapping ranges.
	neighboring ranges are joined"

	| sorted ranges current |
	sorted := someRanges asSortedCollection.
	ranges := OrderedCollection new: someRanges size.
	current := nil.
	sorted inject: nil into: [:previous :follower |
		previous ifNil: [current := follower] ifNotNil: [
			(previous overlaps: follower) ifTrue: [
				^self error: 'code space is invalid: ranges overlap'].
			current := (previous joinedRange: follower) ifNil: [
				ranges add: current.
				follower]].
		follower].
	ranges add: current.
	^ranges asArray
%
category: 'instance creation optional'
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: nil
		bfMappings: nil
		cidMappings: nil
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection bfMappings: bfMappingsBfMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: nil
		bfMappings: bfMappingsBfMappings
		cidMappings: nil
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection bfMappings: bfMappingsBfMappings cidMappings: cidMappingsCIDMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: nil
		bfMappings: bfMappingsBfMappings
		cidMappings: cidMappingsCIDMappings
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection bfMappings: bfMappingsBfMappings cidMappings: cidMappingsCIDMappings notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: nil
		bfMappings: bfMappingsBfMappings
		cidMappings: cidMappingsCIDMappings
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection bfMappings: bfMappingsBfMappings notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: nil
		bfMappings: bfMappingsBfMappings
		cidMappings: nil
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection cidMappings: cidMappingsCIDMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: nil
		bfMappings: nil
		cidMappings: cidMappingsCIDMappings
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection cidMappings: cidMappingsCIDMappings notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: nil
		bfMappings: nil
		cidMappings: cidMappingsCIDMappings
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection coderanges: coderangesArray
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: coderangesArray
		bfMappings: nil
		cidMappings: nil
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection coderanges: coderangesArray bfMappings: bfMappingsBfMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: coderangesArray
		bfMappings: bfMappingsBfMappings
		cidMappings: nil
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection coderanges: coderangesArray bfMappings: bfMappingsBfMappings cidMappings: cidMappingsCIDMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: coderangesArray
		bfMappings: bfMappingsBfMappings
		cidMappings: cidMappingsCIDMappings
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection coderanges: coderangesArray bfMappings: bfMappingsBfMappings cidMappings: cidMappingsCIDMappings notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: coderangesArray
		bfMappings: bfMappingsBfMappings
		cidMappings: cidMappingsCIDMappings
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection coderanges: coderangesArray bfMappings: bfMappingsBfMappings notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: coderangesArray
		bfMappings: bfMappingsBfMappings
		cidMappings: nil
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection coderanges: coderangesArray cidMappings: cidMappingsCIDMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: coderangesArray
		bfMappings: nil
		cidMappings: cidMappingsCIDMappings
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection coderanges: coderangesArray cidMappings: cidMappingsCIDMappings notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: coderangesArray
		bfMappings: nil
		cidMappings: cidMappingsCIDMappings
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection coderanges: coderangesArray notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: coderangesArray
		bfMappings: nil
		cidMappings: nil
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: nil
		coderanges: nil
		bfMappings: nil
		cidMappings: nil
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: nil
		bfMappings: nil
		cidMappings: nil
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary bfMappings: bfMappingsBfMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: nil
		bfMappings: bfMappingsBfMappings
		cidMappings: nil
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary bfMappings: bfMappingsBfMappings cidMappings: cidMappingsCIDMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: nil
		bfMappings: bfMappingsBfMappings
		cidMappings: cidMappingsCIDMappings
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary bfMappings: bfMappingsBfMappings cidMappings: cidMappingsCIDMappings notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: nil
		bfMappings: bfMappingsBfMappings
		cidMappings: cidMappingsCIDMappings
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary bfMappings: bfMappingsBfMappings notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: nil
		bfMappings: bfMappingsBfMappings
		cidMappings: nil
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary cidMappings: cidMappingsCIDMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: nil
		bfMappings: nil
		cidMappings: cidMappingsCIDMappings
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary cidMappings: cidMappingsCIDMappings notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: nil
		bfMappings: nil
		cidMappings: cidMappingsCIDMappings
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary coderanges: coderangesArray
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: coderangesArray
		bfMappings: nil
		cidMappings: nil
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary coderanges: coderangesArray bfMappings: bfMappingsBfMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: coderangesArray
		bfMappings: bfMappingsBfMappings
		cidMappings: nil
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary coderanges: coderangesArray bfMappings: bfMappingsBfMappings cidMappings: cidMappingsCIDMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: coderangesArray
		bfMappings: bfMappingsBfMappings
		cidMappings: cidMappingsCIDMappings
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary coderanges: coderangesArray bfMappings: bfMappingsBfMappings notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: coderangesArray
		bfMappings: bfMappingsBfMappings
		cidMappings: nil
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary coderanges: coderangesArray cidMappings: cidMappingsCIDMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: coderangesArray
		bfMappings: nil
		cidMappings: cidMappingsCIDMappings
		notdefMappings: nil
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary coderanges: coderangesArray cidMappings: cidMappingsCIDMappings notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: coderangesArray
		bfMappings: nil
		cidMappings: cidMappingsCIDMappings
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary coderanges: coderangesArray notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: coderangesArray
		bfMappings: nil
		cidMappings: nil
		notdefMappings: notdefMappingsNotdefMappings
%
classmethod: CMap
name: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary notdefMappings: notdefMappingsNotdefMappings
	^self
		name: nameSymbol
		characterCollection: characterCollectionCharacterCollection
		properties: propertiesDictionary
		coderanges: nil
		bfMappings: nil
		cidMappings: nil
		notdefMappings: notdefMappingsNotdefMappings
%
category: 'specification'
classmethod: CMap
localSpecification
	<constant: #name class: #(#Symbol) comment: 'name of the CMap'>
	<constant: #characterCollection class: #(#RegisteredCharacterCollection) comment: 'the character collection defining the order of character IDs'>
	<map: #properties comment: 'the regular entries from the CMap dictionary except of the attributes used for encoding'>
	<sequence: #coderanges comment: 'sorted, non overlapping and not neighboring ranges of allowed source codes'>
	<optional: #bfMappings class: #(#BfMappings) default: 'BfMappings new' comment: 'Maps from character codes to Unicodes'>
	<optional: #cidMappings class: #(#CIDMappings) default: 'CIDMappings new' comment: 'Maps from source codes to CIDs'>
	<optional: #notdefMappings class: #(#NotdefMappings) default: 'NotdefMappings new' comment: 'Maps notdefs from source codes to CIDs'>
%
category: 'accessing'
method: CMap
bfMappings
	"<BfMappings>
	Maps from character codes to Unicodes"

	^bfMappings ifNil: [BfMappings new]
%
method: CMap
characterCollection
	"<CharacterCollection>
	the character collection defining the order of character IDs"

	^characterCollection
%
method: CMap
characterFrom: aByteStream
	"<Character | nil>"

	| position code found |
	position := aByteStream position.
	code := Code withByte: aByteStream next.
	found := false.
	[found] whileFalse: [
		(self coderanges detect: [:range | code isInRange: range] ifNone: [nil])
			ifNil: [
			code length = (self coderanges inject: 0 into: [:max :range | max max: range length]) ifTrue: [
				aByteStream position: position.
				^nil].
			code := code withByte: aByteStream next]
			ifNotNil: [:foundCodespace |
			foundCodespace length > code length ifTrue: [
				code := code withBytes: (aByteStream next: foundCodespace length - code length)].
			found := true]].
	(self bfMappings characterAt: code) ifNotNil: [:character |
		^character].
	aByteStream position: position.
	"here we need to find out how many bytes we have to read and discard as invalid"
	^nil
%
method: CMap
cidAt: aCode
	"<Integer | nil>"

	(self cidMappings cidAt: aCode) ifNotNil: [:cid |
		^cid].
	(self notdefMappings cidAt: aCode) ifNotNil: [:cid |
		^cid].
	^nil
%
method: CMap
cidFrom: aByteStream
	"<Code | nil>"

	| position code found |
	position := aByteStream position.
	code := Code withByte: aByteStream next.
	found := false.
	[found] whileFalse: [
		(self coderanges codespaceFor: code)
			ifNil: [
			code size = self coderanges maxLength ifTrue: [
				aByteStream position: position.
				^nil].
			code := code withByte: aByteStream next]
			ifNotNil: [:foundCodespace |
			foundCodespace codeLength > code length ifTrue: [
				code := code withBytes: (aByteStream next: foundCodespace codeLength - code length)].
			found := true]].
	(self cidAt: code) ifNotNil: [:cid |
		^cid].
	aByteStream position: position.
	"here we need to find out how many bytes we have to read and discard as invalid"
	^nil
%
method: CMap
cidMappings
	"<CIDMappings>
	Maps from source codes to CIDs"

	^cidMappings ifNil: [CIDMappings new]
%
method: CMap
coderanges
	"<Array>
	sorted, non overlapping and not neighboring ranges of allowed source codes"

	^coderanges ifNil: [#()]
%
method: CMap
name
	"<Symbol>
	name of the CMap"

	^name
%
method: CMap
notdefMappings
	"<NotdefMappings>
	Maps notdefs from source codes to CIDs"

	^notdefMappings ifNil: [NotdefMappings new]
%
method: CMap
numberOfMappedCodes
	"<Integer>"

	^self bfMappings numberOfMappedCodes + self cidMappings numberOfMappedCodes + self notdefMappings numberOfMappedCodes
%
method: CMap
properties
	"<Dictionary>
	the regular entries from the CMap dictionary except of the attributes used for encoding"

	^properties ifNil: [Dictionary new beImmutable]
%
category: 'accessing attributes'
method: CMap
attributeDocumentation: aMethod
	| object |
	object := self performMethod: aMethod.
	^object class comment
%
category: 'initialize-release'
method: CMap
initializeName: nameSymbol characterCollection: characterCollectionCharacterCollection properties: propertiesDictionary coderanges: coderangesArray bfMappings: bfMappingsBfMappings cidMappings: cidMappingsCIDMappings notdefMappings: notdefMappingsNotdefMappings
	name := nameSymbol.
	characterCollection := characterCollectionCharacterCollection.
	(propertiesDictionary notNil and: [
	propertiesDictionary notEmpty]) ifTrue: [
			properties := (Valuemap withAll: propertiesDictionary) beImmutable].
	(coderangesArray notNil and: [
	coderangesArray notEmpty]) ifTrue: [
			coderanges := (Array withAll: coderangesArray) beImmutable].
	(bfMappingsBfMappings notNil and: [
	self bfMappings ~= bfMappingsBfMappings]) ifTrue: [
			bfMappings := bfMappingsBfMappings].
	(cidMappingsCIDMappings notNil and: [
	self cidMappings ~= cidMappingsCIDMappings]) ifTrue: [
			cidMappings := cidMappingsCIDMappings].
	(notdefMappingsNotdefMappings notNil and: [
	self notdefMappings ~= notdefMappingsNotdefMappings]) ifTrue: [
			notdefMappings := notdefMappingsNotdefMappings].
	self beImmutable
%
category: 'printing'
method: CMap
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'name' value: self name).
	args add: (printer constant: 'characterCollection' value: self characterCollection).
	args add: (printer dictionary: 'properties' value: self properties).
	args add: (printer array: 'coderanges' value: self coderanges).
	args add: (printer optional: 'bfMappings' value: bfMappings).
	args add: (printer optional: 'cidMappings' value: cidMappings).
	args add: (printer optional: 'notdefMappings' value: notdefMappings).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: CMap
hasTreeChildren
	^false
%
method: CMap
isBfType
	"maps to characters"

	^(self properties at: #CMapType ifAbsent: [nil]) ifNotNil: [:type | type = 2] ifNil: [
		self bfMappings notEmpty]
%
method: CMap
isValid
	^self bfMappings isValid and: [
	self cidMappings isValid and: [
	self notdefMappings isValid]]
%
category: 'instance creation'
classmethod: Code
bytes: bytesByteArray
	| inst |
	inst := self new.
	inst initializeBytes: bytesByteArray.
	^inst
%
classmethod: Code
fromInteger: anIntegerOrCode
	| bytes rest |
	anIntegerOrCode class == self ifTrue: [
		^anIntegerOrCode].
	anIntegerOrCode negative ifTrue: [
		^self error: 'a code can only be created from a positive integer'].
	anIntegerOrCode isZero ifTrue: [
		^self bytes: #[0]].
	bytes := OrderedCollection new.
	rest := anIntegerOrCode.
	[rest > 0] whileTrue: [
		bytes add: (rest bitAnd: 255).
		rest := rest bitShift: -8].
	^self bytes: (ByteArray withAll: bytes reverse)
%
classmethod: Code
withByte: anInteger
	^self bytes: (ByteArray with: anInteger)
%
classmethod: Code
withBytes: someBytes
	^self bytes: (ByteArray withAll: someBytes)
%
category: 'specification'
classmethod: Code
localSpecification
	<constant: #bytes class: #(#ByteArray) comment: 'the bytes of the receiver - usually not more than 4'>
%
category: 'accessing'
method: Code
bytes
	"<ByteArray>
	the bytes of the receiver - usually not more than 4"

	^bytes
%
method: Code
first
	^self
%
method: Code
firstByte
	"<Integer[0..255]>"

	^self bytes first
%
method: Code
last
	^self
%
method: Code
length
	^self bytes size
%
method: Code
mappingClass
	^CharMapping
%
method: Code
next
	"<Code>
	the next code after the receiver"

	| pad next |
	pad := ByteArray new: self bytes size withAll: 0.
	next := self class fromInteger: self asInteger + 1.
	next bytes size = pad size ifTrue: [
		^next].
	^self class bytes: (pad , next bytes last: pad size)
%
method: Code
numberOfCodes
	^1
%
method: Code
previous
	"<Code>
	the code directly before the receiver"

	| pad next |
	pad := ByteArray new: self bytes size withAll: 0.
	next := self class fromInteger: self asInteger - 1.
	next bytes size = pad size ifTrue: [
		^next].
	^self class bytes: (pad , next bytes last: pad size)
%
method: Code
psMappedCharacter
	"<Character>"

	^self asCharacter
%
category: 'comparing'
method: Code
< aMappingSource
	^aMappingSource greaterThanCode: self
%
method: Code
<= aMappingSource
	^aMappingSource greaterThanOrEqualToCode: self
%
method: Code
greaterThanCode: aCode
	1 to: (self length min: aCode length) do: [:index |
		(self bytes at: index) ~= (aCode bytes at: index) ifTrue: [
			^(self bytes at: index) > (aCode bytes at: index)]].
	^self length > aCode length
%
method: Code
greaterThanOrEqualToCode: aCode
	1 to: (self length min: aCode length) do: [:index |
		(self bytes at: index) ~= (aCode bytes at: index) ifTrue: [
			^(aCode bytes at: index) <= (self bytes at: index)]].
	^self length >= aCode length
%
category: 'converting'
method: Code
asCharacter
	^self asInteger asCharacter
%
method: Code
asInteger
	^self bytes inject: 0 into: [:integer :byte | (integer bitShift: 8) bitOr: byte]
%
method: Code
mappingFrom: aMappingSource
	^aMappingSource mappingToCode: self
%
method: Code
mappingsFrom: aMappingSource
	^Array with: (self mappingFrom: aMappingSource)
%
method: Code
to: aCode
	^Range withFirst: self andLast: aCode
%
method: Code
withByte: anInteger
	^self class bytes: self bytes , (ByteArray with: anInteger)
%
method: Code
withBytes: someBytes
	^self class bytes: self bytes , (ByteArray withAll: someBytes)
%
method: Code
withoutFirstByte
	^self class bytes: (self bytes allButFirst: 1)
%
category: 'initialize-release'
method: Code
initializeBytes: bytesByteArray
	bytes := bytesByteArray.
	self beImmutable
%
category: 'printing'
method: Code
printOn: aStream
	aStream nextPut: $<.
	self bytes do: [:byte | aStream nextPutAll: byte printPostScriptHexByte].
	aStream nextPut: $>
%
method: Code
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'bytes' value: self bytes).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: Code
includesCode: aCode
	^self = aCode
%
method: Code
isAfterCode: aCode
	"the length of the receiver must be the same as the length of aCode.
	Should not be called with different lengths"

	^((1 to: self length - 1) allSatisfy: [:index |
		(self bytes at: index) = (aCode bytes at: index)]) and: [
		self bytes last = (aCode bytes last + 1)]
%
method: Code
isAfterRange: aRange
	^aRange last isNext: self
%
method: Code
isBefore: aMappingSource	
	^self < aMappingSource first
%
method: Code
isInRange: aRange
	^aRange includesCode: self
%
method: Code
isNext: aMappingSource
	^aMappingSource isAfterCode: self
%
category: 'instance creation'
classmethod: Codespace
newForRange: aRange
	"creates a mutable version for incremental buildup"

	| inst |
	inst := aRange length = 1
		ifTrue: [ByteCodespace new]
		ifFalse: [IndexedCodespace new].
	inst initializeMutableWithRange: aRange.
	^inst
%
classmethod: Codespace
range: rangeRange
	| inst |
	inst := self new.
	inst initializeRange: rangeRange.
	^inst
%
category: 'specification'
classmethod: Codespace
localSpecification
	<constant: #range class: #(#Range) comment: 'byte range of potential mappings'>
%
category: 'accessing'
method: Codespace
allMappings
	"<SequenceableCollection of: Mapping>"

	^self subclassResponsibility
%
method: Codespace
at: aCode
	"<Object | nil>"

	^self at: aCode ifAbsent: [nil]
%
method: Codespace
at: aCode ifAbsent: absentBlock
	"<Mapping>"

	^self subclassResponsibility
%
method: Codespace
codeLength
	^self range length
%
method: Codespace
from
	"<ByteArray>
	the lower bound"

	^self range from
%
method: Codespace
mappings
	"<SequenceableCollection of: Mapping>"

	^self subclassResponsibility
%
method: Codespace
numberOfChars
	^self subclassResponsibility
%
method: Codespace
numberOfCodes
	"<Integer>
	number of potential codes in this codespace range"

	^self range numberOfCodes
%
method: Codespace
numberOfMappedCodes
	^self subclassResponsibility
%
method: Codespace
numberOfMappings
	^self subclassResponsibility
%
method: Codespace
numberOfRanges
	^self subclassResponsibility
%
method: Codespace
range
	"<Range>
	the range of potential mappings"

	^range
%
method: Codespace
to
	"<ByteArray>
	the upper bound"

	^self range to
%
category: 'adding'
method: Codespace
addMapping: aMapping
	"add aMapping to the receiver
	create substructures on demand"
	
	self subclassResponsibility
%
category: 'copying'
method: Codespace
copyWithArrays
	"copy as immutable value"

	^self subclassResponsibility
%
category: 'initialize-release'
method: Codespace
initializeMutableWithRange: rangeRange
	range := rangeRange
%
method: Codespace
initializeRange: rangeRange
	range := rangeRange.
	self beImmutable
%
category: 'printing'
method: Codespace
printOn: aStream
	aStream
		nextPutAll: self class name asString;
		nextPut: $(.
	self range printOn: aStream.
	aStream
		nextPut: $);
		nextPutAll: self range firstByteRange numberOfCodesString
%
method: Codespace
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'range' value: self range).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: Codespace
canMap: aMapping
	^aMapping source isInRange: self range
%
method: Codespace
hasMappings
	^self subclassResponsibility
%
category: 'instance creation'
classmethod: IndexedCodespace
range: rangeRange codespaces: codespacesArray
	| inst |
	inst := self new.
	inst initializeRange: rangeRange codespaces: codespacesArray.
	^inst
%
category: 'instance creation optional'
classmethod: IndexedCodespace
range: rangeRange
	^self range: rangeRange codespaces: nil
%
category: 'specification'
classmethod: IndexedCodespace
localSpecification
	<sequence: #codespaces comment: '<Array of: Codespace>
	During construction, instances are not immutable, but are modified - cheating Values'>
%
category: 'accessing'
method: IndexedCodespace
allMappings
	"<SequenceableCollection of: Mapping>"

	^(self codespaces reject: #isNil) inject: OrderedCollection new into: [:list :codespace |
		list addAll: codespace allMappings.
		list]
%
method: IndexedCodespace
at: aCode ifAbsent: absentBlock
	"<Mapping>"

	(self range includesCode: aCode) ifFalse: [
		^absentBlock value].
	(self codespaces at: (self codespaceIndexFor: aCode firstByte)) ifNotNil: [:codespace |
		^codespace at: aCode withoutFirstByte ifAbsent: absentBlock].
	^absentBlock value
%
method: IndexedCodespace
codespaceAt: aByte
	| index codespace |
	index := self codespaceIndexFor: aByte.
	codespace := self codespaces at: index.
	codespace ifNil: [
		codespace := Codespace newForRange: self range withoutFirstByte.
		self codespaces at: index put: codespace].
	^codespace
%
method: IndexedCodespace
codespaceIndexFor: aByte
	"<Integer>
	the internal index into the array of codespaces"

	^aByte - self firstIndex + 1
%
method: IndexedCodespace
codespaces
	"<Array of: Codespace>
	During construction, instances are not immutable, but are modified - cheating Values"

	^codespaces ifNil: [codespaces := Array new: self range firstByteRange numberOfCodes]
%
method: IndexedCodespace
firstIndex
	^self range first firstByte
%
method: IndexedCodespace
mappings
	^(self codespaces reject: #isNil) inject: OrderedCollection new into: [:list :codespace |
		list addAll: codespace mappings.
		list]
%
method: IndexedCodespace
numberOfChars
	^(self codespaces reject: #isNil) inject: 0 into: [:sum :codespace | sum + codespace numberOfChars]
%
method: IndexedCodespace
numberOfMappedCodes
	^(self codespaces reject: #isNil) inject: 0 into: [:sum :codespace | sum + codespace numberOfMappedCodes]
%
method: IndexedCodespace
numberOfMappings
	^(self codespaces reject: #isNil) inject: 0 into: [:sum :codespace | sum + codespace numberOfMappings]
%
method: IndexedCodespace
numberOfRanges
	^(self codespaces reject: #isNil) inject: 0 into: [:sum :codespace | sum + codespace numberOfRanges]
%
category: 'adding'
method: IndexedCodespace
addMapping: aMapping
	(self codespaceAt: aMapping source first firstByte) addMapping: aMapping withoutFirstByte
%
category: 'copying'
method: IndexedCodespace
copyWithArrays
	^self class
		range: self range
		codespaces: (self codespaces collect: [:item |
			item ifNotNil: [item copyWithArrays]])
%
category: 'initialize-release'
method: IndexedCodespace
initializeRange: rangeRange codespaces: codespacesArray
	range := rangeRange.
	(codespacesArray notNil and: [
	codespacesArray notEmpty]) ifTrue: [
			codespaces := (Array withAll: codespacesArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: IndexedCodespace
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'range' value: self range).
	args add: (printer array: 'codespaces' value: self codespaces).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: IndexedCodespace
hasMappings
	^(self codespaces reject: #isNil) anySatisfy: #hasMappings
%
category: 'instance creation'
classmethod: Mapping
source: sourceMappingSource destination: destinationInteger
	| inst |
	inst := self new.
	inst initializeSource: sourceMappingSource destination: destinationInteger.
	^inst
%
category: 'specification'
classmethod: Mapping
localSpecification
	<constant: #source class: #(#MappingSource) comment: 'The source of the mapping. A Code or Range'>
	<constant: #destination class: #(#Integer) comment: 'The destination of the mapping. A Unicode or CID'>
%
category: 'accessing'
method: Mapping
characterAt: aCode
	"<Character>
	interpreting the destination as character code(s) (unicode or PS name)"
	
	^self subclassResponsibility
%
method: Mapping
characters
	"<String>
	interpreting the destination as character codes (unicode or PS name)"
	
	^self subclassResponsibility
%
method: Mapping
codeLength
	^self source length
%
method: Mapping
codes
	"<Array of: Code>"

	^self subclassResponsibility
%
method: Mapping
destination
	"<Integer>
	The destination of the mapping. A Unicode or CID"

	^destination
%
method: Mapping
destinationAt: aCode
	"<Integer>
	the receiver is a CID or notdef mapping"

	^self subclassResponsibility
%
method: Mapping
mappingsOverwrittenBy: aMapping
	"<Array of: Mapping>
	the mappings resulting from overwriting the receiver:
		one mapping when the receiver is fully contained by aMapping or when it can attach
		two mappings when the receiver is split"

	^self subclassResponsibility
%
method: Mapping
numberOfChars
	"<Integer>
	the number of char mappings"
	
	^self subclassResponsibility
%
method: Mapping
numberOfCodes
	"<Integer>
	the number of source codes"
	
	^self subclassResponsibility
%
method: Mapping
numberOfRanges
	"<Integer>
	the number of range mappings"
	
	^self subclassResponsibility
%
method: Mapping
source
	"<Value>
	The source of the mapping. A Code or Range"

	^source
%
category: 'comparing'
method: Mapping
<= aRange
	^self source <= aRange source
%
category: 'converting'
method: Mapping
appendedToCode: aCodeMapping
	^self subclassResponsibility
%
method: Mapping
appendedToRange: aRange
	^self subclassResponsibility
%
method: Mapping
asSimplestMapping
	"<Mapping>
	convert a range mapping with one code to char mapping"

	^self subclassResponsibility
%
method: Mapping
joined: aMapping
	"<RangeMapping | nil>"

	(self isNext: aMapping) ifTrue: [
		^self rangeWith: aMapping].
	^nil
%
method: Mapping
rangeWith: aCharMapping
	"<RangeMapping>"

	^self subclassResponsibility
%
method: Mapping
withoutFirstByte
	^self class source: self source withoutFirstByte destination: self destination
%
category: 'initialize-release'
method: Mapping
initializeSource: sourceMappingSource destination: destinationInteger
	source := sourceMappingSource.
	destination := destinationInteger.
	self beImmutable
%
category: 'printing'
method: Mapping
printDestinationOn: aStream
	self destination printOn: aStream
%
method: Mapping
printOn: aStream
	self printSourceOn: aStream.
	aStream nextPutAll: ' --> '.
	self printDestinationOn: aStream
%
method: Mapping
printSourceOn: aStream
	self source printOn: aStream
%
method: Mapping
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'source' value: self source).
	args add: (printer constant: 'destination' value: self destination).
	^printer printvalue: self arguments: args
%
method: Mapping
sourceString
	| wst |
	wst := String new writeStream.
	self printSourceOn: wst.
	^wst contents
%
category: 'testing'
method: Mapping
isAfterAndNotAttaching: aMapping
	^(aMapping source isBefore: self source) and: [
	(aMapping isNext: self) not]
%
method: Mapping
isBeforeAndNotAttaching: aMapping
	^(self source isBefore: aMapping source) and: [
	(self isNext: aMapping) not]
%
method: Mapping
isNext: aMapping 
	"assumption: the receiver is before aMapping"

	^self subclassResponsibility
%
method: Mapping
maps: aCode
	"true, if the receiver can map aCode"

	^self subclassResponsibility
%
category: 'instance creation'
classmethod: Mappings
charmappingFor: codeArray
	"<CharMapping>
	convert the last argument to a unicode and use it as destination"

	^codeArray last mappingFrom: codeArray first
%
classmethod: Mappings
codespaces: codespacesArray unmapped: unmappedArray
	| inst |
	inst := self new.
	inst initializeCodespaces: codespacesArray unmapped: unmappedArray.
	^inst
%
classmethod: Mappings
fromChars: charsArray andRanges: rangesArray in: orderedCoderanges
	"from the entries of the PostScript dictionary
	charsArray are arrays of 2, rangesArray of 3 codes"

	| charmaps rangemaps |
	charmaps := charsArray collect: [:array2 | self charmappingFor: array2].
	rangemaps := OrderedCollection new: rangesArray size.
	rangesArray do: [:array3 | rangemaps addAll: (self rangemappingsFor: array3)].
	^self fromMappings: charmaps , rangemaps in: orderedCoderanges
%
classmethod: Mappings
fromMappings: someMappings in: orderedCoderanges
	"<Dictionary key: Integer value: (Array of: Mapping)>
	The mappings are added one by one to the mappings of their codespace.
	It is assumed that the mappings are sorted in ascending order, as they usually are"

	| codespaces unmappedCodespaces |
	someMappings isEmpty ifTrue: [
		^nil].
	codespaces := orderedCoderanges collect: #asCodespace.
	unmappedCodespaces := Dictionary new.
	someMappings do: [:mapping |
		(codespaces detect: [:codespace | codespace canMap: mapping] ifNone: [nil])
			ifNotNil: [:codespace |
			codespace addMapping: mapping]
			ifNil: [
			| codespace |
			codespace := unmappedCodespaces at: mapping codeLength ifAbsentPut: [
				(Range
					from: (ByteArray new: mapping codeLength withAll: 0)
					to: (ByteArray new: mapping codeLength withAll: 255)) asCodespace].
			codespace addMapping: mapping]].
	^self
		codespaces: (codespaces collect: #copyWithArrays)
		unmapped: (unmappedCodespaces keys sorted inject: OrderedCollection new into: [:list :length |
			list addAll: (unmappedCodespaces at: length) mappings.
			list])
%
classmethod: Mappings
rangemappingsFor: rangeArray
	"<Array of: Mapping>
	convert the last argument to a unicode and use it as destination"

	| source |
	source := rangeArray first = (rangeArray at: 2)
		ifTrue: [rangeArray first]
		ifFalse: [
		rangeArray first to: (rangeArray at: 2)].
	^rangeArray last mappingsFrom: source
%
category: 'instance creation optional'
classmethod: Mappings
codespaces: codespacesArray
	^self codespaces: codespacesArray unmapped: nil
%
classmethod: Mappings
unmapped: unmappedArray
	^self codespaces: nil unmapped: unmappedArray
%
category: 'specification'
classmethod: Mappings
localSpecification
	<sequence: #codespaces comment: 'sorted codespaces'>
	<sequence: #unmapped comment: 'invalid mappings not lying inside any codespace'>
%
category: 'accessing'
method: Mappings
codespaces
	"<Array>
	sorted codespaces"

	^codespaces ifNil: [#()]
%
method: Mappings
mappingAt: aCode
	"<Mapping | nil>"

	^(self codespaces detect: [:codespace | codespace range includesCode: aCode] ifNone: [
		nil]) ifNotNil: [:codespace |
			codespace at: aCode ifAbsent: [nil]]
%
method: Mappings
mappings
	"<SequenceableCollection of: Mapping>
	sorted char and range mappings ordered by codespaces"

	| wst |
	wst := OrderedCollection new writeStream.
	self codespaces do: [:codespace | wst nextPutAll: codespace allMappings].
	^wst contents
%
method: Mappings
numberOfChars
	^self codespaces inject: 0 into: [:sum :codespace | sum + codespace numberOfChars]
%
method: Mappings
numberOfCodes
	^self codespaces inject: 0 into: [:sum :codespace | sum + codespace numberOfCodes]
%
method: Mappings
numberOfMappedCodes
	^self codespaces inject: 0 into: [:sum :codespace | sum + codespace numberOfMappedCodes]
%
method: Mappings
numberOfRanges
	^self codespaces inject: 0 into: [:sum :codespace | sum + codespace numberOfRanges]
%
method: Mappings
unmapped
	"<Array>
	invalid mappings not lying inside any codespace"

	^unmapped ifNil: [#()]
%
category: 'initialize-release'
method: Mappings
initializeCodespaces: codespacesArray unmapped: unmappedArray
	(codespacesArray notNil and: [
	codespacesArray notEmpty]) ifTrue: [
			codespaces := (Array withAll: codespacesArray) beImmutable].
	(unmappedArray notNil and: [
	unmappedArray notEmpty]) ifTrue: [
			unmapped := (Array withAll: unmappedArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: Mappings
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer array: 'codespaces' value: self codespaces).
	args add: (printer array: 'unmapped' value: self unmapped).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: Mappings
isValid
	^self unmapped isEmpty
%
category: 'accessing'
method: MappingSource
first
	"<Code>
	the first, lowest code"

	^self subclassResponsibility
%
method: MappingSource
last
	"<Code>
	the last, highest code"

	^self subclassResponsibility
%
method: MappingSource
length
	"<Integer>"

	^self subclassResponsibility
%
method: MappingSource
mappingClass
	^self subclassResponsibility
%
method: MappingSource
numberOfCodes
	"<Integer>
	the number of potential source codes"
	
	^self subclassResponsibility
%
category: 'comparing'
method: MappingSource
< aMappingSource
	"true, iff the receivers bytes are smaller than aMappingSource bytes"

	^self subclassResponsibility
%
method: MappingSource
<= aMappingSource
	"true, iff the receivers bytes are smaller or equal to aMappingSource"

	^self subclassResponsibility
%
method: MappingSource
greaterThanCode: aCode
	^self subclassResponsibility
%
method: MappingSource
greaterThanOrEqualToCode: aCode
	^self subclassResponsibility
%
method: MappingSource
greaterThanOrEqualToRange: aRange
	^aRange first <= self first
%
method: MappingSource
greaterThanRange: aRange
	^aRange first < self first
%
category: 'converting'
method: MappingSource
--> anInteger
	"<Mapping from: MappingSource to: Integer>"

	^self mappingClass source: self destination: anInteger
%
method: MappingSource
mappingToCode: aCode
	^self mappingClass source: self destination: aCode asInteger
%
method: MappingSource
mappingToInteger: anInteger
	^self mappingClass source: self destination: anInteger
%
method: MappingSource
mappingToName: aName
	^self mappingClass source: self destination: aName psUnicode
%
method: MappingSource
withoutFirstByte
	^self subclassResponsibility
%
category: 'testing'
method: MappingSource
includesCode: aCode
	"A code shall be considered to match the range if it is the same length as the bounding codes 
	and the value of each of its bytes lies between the corresponding bytes of the lower and upper bounds
	(from 9.7.6.2 'CMap Mapping' of the PDF spec)"

	^self subclassResponsibility
%
method: MappingSource
isAfterCode: aCode
	^self subclassResponsibility
%
method: MappingSource
isAfterRange: aRange
	^self subclassResponsibility
%
method: MappingSource
isBefore: aMappingSource
	"true, iff the receiver is fully in front of aMappingSource"
	
	^self subclassResponsibility
%
method: MappingSource
isInRange: aRange
	"true, if aRange includes the receiver"

	^self subclassResponsibility
%
method: MappingSource
isNext: aMappingSource
	"does not cross byte boundaries of the bytes before last
	i.e. <00FF> isNext: <0100> is false"

	^self subclassResponsibility
%
method: MappingSource
overlaps: aMappingSource
	"Answer whether aRange has common elements with the receiver"

	self <= aMappingSource ifTrue: [
		^aMappingSource first <= self last].
	^aMappingSource overlaps: self
%
category: 'accessing'
method: NotdefMappings
cidAt: aCode
	"<Integer | nil>"

	^(self mappingAt: aCode) ifNotNil: [:mapping | mapping destination]
%
category: 'instance creation'
classmethod: Range
first: firstCode last: lastCode
	| inst |
	inst := self new.
	inst initializeFirst: firstCode last: lastCode.
	^inst
%
classmethod: Range
from: firstByteArray to: lastByteArray
	^self withFirst: (Code bytes: firstByteArray) andLast: (Code bytes: lastByteArray)
%
classmethod: Range
fromByte: firstByte to: lastByte
	^self withFirst: (Code withByte: firstByte) andLast: (Code withByte: lastByte)
%
classmethod: Range
withFirst: firstCode andLast: lastCode
	| inst |
	inst := self first: firstCode last: lastCode.
	inst isValid ifFalse: [
		self error: 'The range is not valid'].
	^inst
%
category: 'specification'
classmethod: Range
localSpecification
	<constant: #first class: #(#Code) comment: 'the first, lowest code'>
	<constant: #last class: #(#Code) comment: 'the last, highest code'>
%
category: 'accessing'
method: Range
codes
	"<Array of: Code>
	only applicable to mapping sources where only the last byte can vary"

	| prefixBytes codes |
	prefixBytes := self first bytes first: self length - 1.
	(prefixBytes = (self last bytes first: self length - 1)) ifFalse: [
		^self error: 'this is not a byte range'].
	codes := OrderedCollection new: self numberOfCodes.
	self first bytes last to: self last bytes last do: [:byte |
		codes add: (Code bytes: prefixBytes , (ByteArray with: byte))].
	^codes asArray
%
method: Range
first
	^first
%
method: Range
interval
	"<Interval>"

	^self first asInteger to: self last asInteger
%
method: Range
last
	^last
%
method: Range
length
	^self first length
%
method: Range
mappingClass
	^RangeMapping
%
method: Range
numberOfCodes
	| bytes |
	bytes := 1.
	self first bytes with: self last bytes do: [:byte1 :byte2 | bytes := (byte2 - byte1 + 1) * bytes].
	^bytes
%
method: Range
numberOfCodesString
	^'[' , self numberOfCodes printString , ']'
%
category: 'comparing'
method: Range
< aMappingSource
	^aMappingSource greaterThanRange: self
%
method: Range
<= aMappingSource
	^aMappingSource greaterThanOrEqualToRange: self
%
method: Range
greaterThanCode: aCode
	^aCode < self first
%
method: Range
greaterThanOrEqualToCode: aCode
	^aCode <= self first
%
category: 'converting'
method: Range
asByteRanges
	"<Array of: Range>
	one byte range per byte"

	self length = 1 ifTrue: [
		^Array with: self].
	^(1 to: self length) collect: [:index |
		self class fromByte: (self first bytes at: index) to: (self last bytes at: index)]
%
method: Range
asCodespace
	^Codespace newForRange: self
%
method: Range
firstByteRange
	"<Range>
	one byte range for the first byte"

	self length = 1 ifTrue: [
		^self].
	^self class fromByte: self first bytes first to: self last bytes first
%
method: Range
withoutFirstByte
	^self first withoutFirstByte to: self last withoutFirstByte
%
category: 'copying'
method: Range
asRangeWithLength: anInteger
	^self class
		from: (self first bytes first: anInteger)
		to: (self last bytes first: anInteger)
%
category: 'initialize-release'
method: Range
initializeFirst: firstCode last: lastCode
	first := firstCode.
	last := lastCode.
	self beImmutable
%
category: 'printing'
method: Range
printOn: aStream
	self first printOn: aStream.
	aStream nextPutAll: '..'.
	self last printOn: aStream
%
method: Range
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'first' value: self first).
	args add: (printer constant: 'last' value: self last).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: Range
includesCode: aCode
	aCode length = self length ifFalse: [
		^false].
	1 to: self length do: [:index |
		((aCode bytes at: index)
			between: (self first bytes at: index)
			and: (self last bytes at: index)) ifFalse: [
				^false]].
	^true
%
method: Range
includesRange: aRange
	"A code shall be considered to match the range if it is the same length as the bounding codes 
	and the value of each of its bytes lies between the corresponding bytes of the lower and upper bounds
	(from 9.7.6.2 'CMap Mapping' of the PDF spec)"

	^(self includesCode: aRange first) and: [
	self includesCode: aRange last]
%
method: Range
isAfterCode: aCode
	^aCode isNext: self first
%
method: Range
isAfterRange: aRange
	| found |
	found := false.
	aRange asByteRanges with: self asByteRanges do: [:start :next |
		start = next ifFalse: [
			(found not and: [
			start last isNext: next first])
					ifTrue: [found := true]
					ifFalse: [
					^false]]].
	^found
%
method: Range
isBefore: aMappingSource	
	^self last < aMappingSource first
%
method: Range
isInRange: aRange
	^aRange includesRange: self
%
method: Range
isNext: aMappingSource
	^aMappingSource isAfterRange: self
%
method: Range
isValid
	^self first length = self last length and: [
	self first <= self last]
%
method: Range
joinedRange: aFollowingRange
	"<Range | nil>
	joined when all byte dimension ranges are the same except for one which can join"

	| found newByteRanges newFirst newLast |
	self length = aFollowingRange length ifFalse: [
		^nil].
	found := false.
	newByteRanges := OrderedCollection new.
	self asByteRanges with: aFollowingRange asByteRanges do: [:start :next |
		start = next
			ifTrue: [newByteRanges add: start]
			ifFalse: [
			(found not and: [
			start last isNext: next first])
					ifTrue: [
					found := true.
					newByteRanges add: (start first to: next last)]
					ifFalse: [
					^nil]]].
	found ifFalse: [
		^nil].
	newFirst := Code bytes: (ByteArray withAll: ((newByteRanges collect: #first) collect: #firstByte)).
	newLast := Code bytes: (ByteArray withAll: ((newByteRanges collect: #last) collect: #firstByte)).
	^newFirst to: newLast
%
method: Range
overlaps: aRange
	"Answer whether aRange has common elements with the receiver"

	aRange length = self length ifTrue: [
		^(self includesCode: aRange first) or: [
		(self includesCode: aRange last) or: [
		(aRange includesCode: self first) or: [
		aRange includesCode: self last]]]].
	aRange length > self length ifTrue: [
		^aRange overlaps: self].
	"aRange is shorter"
	^(self asRangeWithLength: aRange length) overlaps: aRange
%
category: 'accessing'
method: RangeMapping
characterAt: aCode
	"assumes that aCode is included in the receiver; no checks are done!"

	| offset |
	offset := aCode asInteger - self source first asInteger.
	^(self destination + offset) psMappedCharacter
%
method: RangeMapping
characters
	^String withAll: (self destinationInterval collect: #psMappedCharacter)
%
method: RangeMapping
codes
	^Array
		with: self source first
		with: self source last
		with: self destination
%
method: RangeMapping
destinationAt: aCode
	"assumes that aCode is included in the receiver; no checks are done!
	The result may even be negative"

	^self destination + (aCode asInteger - self source first asInteger)
%
method: RangeMapping
destinationInterval
	"<Interval>"

	^self destination to: self destination + self numberOfCodes - 1
%
method: RangeMapping
lastDestination
	"<Integer>"

	^self destination + self source numberOfCodes - 1
%
method: RangeMapping
mappingPartAfter: aCode
	| start |
	start := aCode next.
	^((start to: self source last) --> (self destinationAt: start)) asSimplestMapping
%
method: RangeMapping
mappingPartBefore: aCode
	^((self source first to: aCode previous) --> self destination) asSimplestMapping
%
method: RangeMapping
mappingsOverwrittenBy: aMapping
	"the receiver can be directly before aMapping"

	| partAfter |
	(self joined: aMapping) ifNotNil: [:joined |
		^Array with: joined].
	"or directly after aMapping"
	(aMapping joined: self) ifNotNil: [:joined |
		^Array with: joined].
	"or overlapping at the beginning (and possibly the end)"
	(aMapping source includesCode: self source first) ifFalse: [
		| mappingBefore mappingsBefore |
		mappingBefore := self mappingPartBefore: aMapping source first.
		mappingsBefore := (mappingBefore joined: aMapping)
			ifNotNil: [:joined |
			Array with: joined]
			ifNil: [
			Array
				with: mappingBefore
				with: aMapping].
		(aMapping source includesCode: self source last)
			ifTrue: [
			^mappingsBefore]
			ifFalse: [
			| mappingAfter |
			mappingAfter := self mappingPartAfter: mappingsBefore last source last.
			(mappingsBefore last joined: mappingAfter)
				ifNotNil: [:joined |
				^(mappingsBefore allButLast: 1) , (Array with: joined)]
				ifNil: [
				^mappingsBefore , (Array with: mappingAfter)]]].
	"or inside aMappings source. Then forget about it, because it is shadowed by aMapping"
	(aMapping source includesCode: self source last) ifTrue: [
		^Array with: aMapping].
	"or overlapping at the end"
	partAfter := self mappingPartAfter: aMapping source last.
	(aMapping joined: partAfter)
		ifNotNil: [:joined |
		^Array with: joined]
		ifNil: [
		^Array
			with: aMapping
			with: partAfter]
%
method: RangeMapping
numberOfChars
	^0
%
method: RangeMapping
numberOfCodes
	^self source numberOfCodes
%
method: RangeMapping
numberOfCodesString
	^self source numberOfCodesString
%
method: RangeMapping
numberOfRanges
	^1
%
category: 'converting'
method: RangeMapping
appendedToCode: aCodeMapping
	^self class
		source: (aCodeMapping source to: self source last)
		destination: aCodeMapping destination
%
method: RangeMapping
appendedToRange: aRangeMapping
	^self class
		source: (aRangeMapping source first to: self source last)
		destination: aRangeMapping destination
%
method: RangeMapping
asSimplestMapping
	self source numberOfCodes = 1 ifTrue: [
		^self source first --> self destination].
	^self
%
method: RangeMapping
rangeWith: aMapping
	^aMapping appendedToRange: self
%
category: 'printing'
method: RangeMapping
printDestinationOn: aStream
	super printDestinationOn: aStream.
	aStream nextPutAll: '..'.
	self lastDestination printOn: aStream
%
method: RangeMapping
printSourceOn: aStream
	super printSourceOn: aStream.
	aStream nextPutAll: self numberOfCodesString
%
category: 'testing'
method: RangeMapping
isNext: aMapping
	^(self source isNext: aMapping source) and: [
	self lastDestination + 1 = aMapping destination]
%
method: RangeMapping
maps: aCode 
	^self source includesCode: aCode
%
category: 'instance creation'
classmethod: RegisteredCharacterCollection
newWith: aDictionary
	aDictionary isEmpty ifTrue: [
		^self new].
	^self
		registry: (aDictionary at: #Registry)
		ordering: (aDictionary at: #Ordering)
		supplement: (aDictionary at: #Supplement)
%
classmethod: RegisteredCharacterCollection
registry: registryString ordering: orderingString supplement: supplementInteger
	| inst |
	inst := self new.
	inst
		initializeRegistry: registryString
		ordering: orderingString
		supplement: supplementInteger.
	^inst
%
category: 'specification'
classmethod: RegisteredCharacterCollection
localSpecification
	<constant: #registry class: #(#String) comment: 'issuer of the character collection'>
	<constant: #ordering class: #(#String) comment: 'the unique name for a character collection in the registry'>
	<constant: #supplement class: #(#Integer) comment: 'The supplement number of the character collection. An original character collection has a supplement number of 0. Whenever additional CIDs are assigned in a character collection, the supplement number is increased. Supplements do not alter the ordering of existing CIDs in the character collection.'>
%
category: 'accessing'
method: RegisteredCharacterCollection
knownOrderings
	"orderings from Adobe"
	
	^#('CNS1' 'GB1' 'Japan1' 'Japan2' 'Korea1' 'KR' 'Identity' 'UCS')
%
method: RegisteredCharacterCollection
ordering
	"<String>
	the unique name for a character collection in the registry"

	^ordering
%
method: RegisteredCharacterCollection
registry
	"<String>
	issuer of the character collection"

	^registry
%
method: RegisteredCharacterCollection
supplement
	"<Integer>
	The supplement number of the character collection. An original character collection has a supplement number of 0. Whenever additional CIDs are assigned in a character collection, the supplement number is increased. Supplements do not alter the ordering of existing CIDs in the character collection."

	^supplement
%
category: 'initialize-release'
method: RegisteredCharacterCollection
initializeRegistry: registryString ordering: orderingString supplement: supplementInteger
	registry := registryString.
	ordering := orderingString.
	supplement := supplementInteger.
	self beImmutable
%
category: 'printing'
method: RegisteredCharacterCollection
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'registry' value: self registry).
	args add: (printer constant: 'ordering' value: self ordering).
	args add: (printer constant: 'supplement' value: self supplement).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: RegisteredCharacterCollection
isKnownOrdering
	^self knownOrderings includes: self ordering
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PostScript at: 1.
%
category: '*PostScript CIDInit-accessing instances  '
classmethod: Category
cmapResourcesUrl
	^'https://github.com/adobe-type-tools/cmap-resources/'
%
classmethod: Category
instanceAt: aCMapName
	"<PSDictionary>
	PostScript CMap"

	| ps |
	ps := Interpreter run: (self sourceStringAt: aCMapName).
	^ps category: #CMap at: aCMapName
%
classmethod: Category
predefinedCMapNames
	"<Dictionary key: String value: String>
	holds a list of cmap names as keys with a character collection name as value (use as directory on GitHub)"
	"self predefinedCMapNames"

	| dict collectionName rst |
	dict := PSDictionary new: 200.
	collectionName := nil.
	rst := self versionsTxt readStream.
	[rst atEnd] whileFalse: [
		| line |
		line := rst upTo: Character lf.
		line notEmpty ifTrue: [
			line last = $:
				ifTrue: [collectionName := line allButLast: 1]
				ifFalse: [
				dict at: (line tokensBasedOn: Character space) first put: collectionName]]].
	^dict
%
classmethod: Category
selectorForCMap: aCMapName
	"<Symbol>"

	^('cmap' , (aCMapName asString copyReplaceAll: '-' with: '_')) asSymbol
%
classmethod: Category
sourceStringAt: aCMapName
	"<String>
	PostScript CMap source
	Use the generated method if it is in the image or get it online from GitHub"

	| selector |
	selector := self selectorForCMap: aCMapName.
	(self respondsTo: selector) ifTrue: [
		^self perform: selector].
	LookupError raiseSignal: aCMapName, ' was not found'.
	"resume the error to fetch the source from the internet (Does not work in Gemstone: #get: needs to be implemented)"
	^self get: (self urlForCmap: aCMapName)
%
classmethod: Category
supportedCMapNames
	"<Dictionary key: String value: String>
	holds a list of cmap names as keys with a character collection name as value (use as directory on GitHub)"
	"self supportedCMapNames"

	| dict |
	dict := PSDictionary new: 200.
	self predefinedCMapNames keysAndValuesDo: [:key :value |
		('*deprecated*' match: value) ifFalse: [
			dict at: key put: value]].
	^dict
%
category: '*PostScript CIDInit-CMap sources'
classmethod: Category
cmapIdentity_H
	"Category class>>#recodeCMapMethods generated this method at 14. Mai 2021 um 13:21:07"

	^String fromASCII85: ',p?)`/O<oc@V%,I/heDGATMd4EarZ46VV!.%4*;gDe!p,ASuTbAS#C`A5Zu[Dfp)1ATKmT:i^Ja;e:%n-ppQo8T&6a.1IRL8T&$SF_#&]ATMd4EarZA+Ad)s@oHr\+=KTK6qM91F=@YF,sl0UBl6g[F)Q2A@q@\D6VV!.+=KflASuU(FEoH/.1IRL<,$GjANCq^8RuCMFD5iB/P%!MA8bpg+A$*TDKKT7Gp"di%4*<$ATDj+Df.TY0eb460K''@d,suTiH#dV3BQQ9X/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/O`,pbosE-ZJ<B4uBJ+@C''dH#dV3BQP@O3B8cF1,(FC+@0OV@V%/76#:?[EbT0"FE8RFATMF''G%G2:%4*;fDfBuBBkM+$3XmA]6Z6phEbT0"F?1OBARoLrFE2))F`_>9DBNA*A0?#9AKY])+EMIDEarZ''@;]Tu@VK^gEd8d>DfT]9/0K.NFD)e8EXa<@6Z6phEbT0"F?1OgBln$,F`\aCDe*QoBk(RnBl@l?+CT;%+E1n4D/"*6ARlp&Ec6,8A7]9oFD,*)+EV:.%4*;fDfBuBBkM+$3Zr$QCi"$6Bl7Q+@rH6qBln''-DK?q/Eb-A1ATTsB,pbosE-ZJ<B4uBJ%4*;fDfBuBBkM+$3Zq=3A8-+,EbT!*FD5Z2F!,C5+EMIDEarZ''@rGmh+Dl7BF<GU8FCAm$+EV:.+CS_tG%D+/,suTiH#dV3BQQ9X@rH=3EbT0"F<GI>FD55r/0K%JBlbD5BleA=De:,%Df0*"FD5Z2F!+n/A0>u-AKYT''Ci"$6Bl7Pm,pbosE-ZJ<B4uBJ+Co2-@r,RfD.R`?%4*;fDfBuBBkM+$3XmA]6Z6phEbT0"F?1OBARoLrFE2))F`_>9DK?q7DBND&DIIR2+D,P4D''3\<F*&OFAT2[.A9DBn+EV:.+CS_tG%D+/,suTiH#dV3BQQ9X@rH=3EbT0"F<GI>FD55r/0K%JBlbD5BleA=De:,%Df0*"FD5Z2F!+n/A0>u-AKYT''Ci"$6Bl7Pm,pbosE-ZJ<B4uBJ+Co2-@r,RfD.R`1Bl5&8BOr;sDe!p,ASuTuFD5Z2+CT.u05kkRDffZ(EZf4-FCfK,@;Kuo,pbosE-ZJ<B4uBJ+E2@>G%kJuA0?)1FD)e=BOr;sBleB:Bju4,Bl@lA+:TVC6Z6phEbT0"F?0jW,suTiH#dV3BQQ9X:1\-]BOu3,FD,5.DIIBn+E(j76"FnCAKYl/EZfI;AKYl!D.Rc2De:,+FE8R7Df0Z;Bju4,DfTn.,pbosE-ZJ<B4uBJ+DkP4+C\n)F`V,)+EVNEASu$sEcYe7DfQt>Ec5f5FCcS6Ec5K2@ruc7A7]dqG%G2,Ao_g,%4*;fDfBuBBkM+$3ZrNXBlbD<De=*8@<,p%GA2/4Dfp.EF)Y]#BkD''h+E2@8DfQtEEbTW;ASrW0ATDX%F)u&6DCuAE,suTiH#dV3BQQ9E,pbosE-ZJ<B4uBJ+B1m'';]o"77T<GT;FM^";]nn7:KC%T7787b=Wg[773Frn:g$[f7n?T%85DoI78d&,5u''fW,pbosE-ZJ<B4uBJ+@Aq"<)Q:S<E)al;]m8M;]nY1+s90H6m+cj=Wg.8:f9_\;]nk6+A#:(9M%Z@+BLj,;F+&W8OZQ/%4*;fDfBuBBkM+$3Zq!h6VLKJ8PVc,+@9(-+AP^3+A>@$8Q8,H+B2,f+B1m#+A#:(9M%Z@+BLj,;F+&W8OZQ#:IYd>,suTiH#dV3BQQ9X9gqrI83p!M5se.:8Q8h85u''fj7S-QS78m,-7Sco)5p/ui;H-4T<D5\V+Ac''9:et"Y+@/mo%4*;fDfBuBBkM+$3Zpg^;aX5E8PMWA/g*_\+AP]T792iP<$5+15tjrp<(KG#6VgN];FsAL<$4_-9LM<I+AYlE,pbosE-ZJ<B4uBJ+@Aq"<)Q:S<E)al;]nCq+A>?m6;0fj7Sco)5u(Q*6qL9F6W>TZ8PVZF;FNrP/0IMZ6V0[7:/jMQ/.EmO6Z6phEbT0"F?1OC:dm`C5tigP79DuQ:eX/Q=Y([k;BS>&:/aSY<CKY^8O6#m6pXO57n$?!-qR0$9N=JP:.HiX6<-to,pbosE-ZJ<B4uBJ+AP^3+A>@$8Q8,H+B2,f+Abs36WI#Q9gqfV+AYHL;cQ._<(U%h<(.p":JXAW+AYlX;ajSb8OGpF3t3J^6Z6phEbT0"F?1O<:K(17:IZI,;ai5[6pXd</0I_d+Abs37S-QX4!7<s+@9(,8PV]Q;]nY,<(0\_<DZXd:JN>J,pbosE-ZJ<B4uBJ+@o:0792iT+@AFp;aj(s5u''fj:JN#u:0A]=84?<P=WgL0+A>?m6:jjB<*:ap=%GbZ84?E!8PT^@,suTiH#dV3BQQ9X6VgHV;F*ZL/0Ikj;Fs5T+A>?m6:jjB<*:ap:Jr<7:Jt.7-qR0$9N=JP:.HF%77U$C7n$0?73GB(%4*;fDfBuBBkM+$3Zq3t84?EX8Q/&,+@/ms;b9_S+A#<N5u(Q*=$]t3:K:@::IZI+84=Y$;ahg)7NbZ$8Q-''E,suTiH#dV3BQQ9X;bok^=$]_Q/0IA^78=ss7Naub<_64Y6m,8p+B1m#+Abj4;b9;I9M&2d+AYHL;cQ1U+@JLi5t=?r%4*;fDfBuBBkM+$3Zp"+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/Ia!P7;cX''Df''?&DKKq/%51(?6qM91F<E55Ec5GdATT&,Bl7I%ATMd4EarZ''@V''1dD@I%01*C+A@rri&AS5^p%1QcXB5)6nD..Am%51(?6rSAPFCf;\DJ!f01E^4B@rri(F`8I4AS5^p%3QcH;IsKTF*)GJ+=KNdDdm9,+Co%q%3QcH:NBuWEbTE(+=KflASuU(FEo;XA7]?^+<W=9F`;;9ASl!rF<E7[A7]?^ASu$$A7]?^%51(C@;ntMD.OhC8RuCMFD5iB/P%!pAS)B)6VV!.<b6;mBl@l30eb460K(%aAS)B)6VV!.<-`Fo+>G!LAS)A\03D4G6m,\g+>GPm1,UmB1a"e=3B:@fA7]?^%51dWDe*E%0Han;Ado2(+C\npBl7F!A7]h$@:Nkh@;]^h%3QcU0JG174s2sW7Rfj2%:sEf@rGmhF)YPtATD3sB4VM]0eb:(@V''1dDI[BkEa`iuAIUaU0JG1E+?V>3AnF4L0F^,u0eb:F+?V>4AnF4L1,Us!4>8NE0KpUA0J[6P4s2^;1(??"1GCLH+?V>6AnF4L2`<W)4>8TG0KpUA0JmBR4s2R61,KG&0JtO<4s2sA2.gGa+>GW20F^,u2D?gK+?V>9AnF4L0f:aF%6Q=''0JG[54>8^+Aj.=l2`WW&4>8`K0KpUA0K<ZV4s2U71cPq,0KCg@4s2sA3G)ke+>P`,1^uQ$@5''B!+?V>dAnF4L1,UsD%6Q=R0JG[54>:5VAj.=m3&*<#4>:8!0KpUA0On^,4s2X82_kh)0Oujk4s2sAA7fF;+>Yf/3"7u(AM>f%+?V>hAnF4L1Gq-K%6Q=V0JG[54>:AZAj.=n3&E;u4>AND0KpUA0ed3O4s2[93Aq=/0ek@94s2sB0kP#]+>bl31(??#1,(CG+?VA6AnF4L1c@$I%6Q@$0JG[54>AX(Aj.=o3&WT&4>AZH0KpUA0f3KS4s2^;1,''/"0f:X=4s2sB2.gGa+>kr62@Vc''2D?gK+?VA:AnF4L2)[6G%6Q@(0JG[54>Ad,Aj.=p3&il,4>AfL0KpUA0fWcW4s2a<1c,Y(0f^pA4s2sB3G)ke+>u&10F^-!@5''B!+?VAeAnF4L2E!EN%6Q@S0JG[54>C;WAj.=q3AE8u4>C>"0KpUA0k4g-4s2d=2E2..0k;sl4s2sBA7fF;+?),41^uQ%AM>f%+?VAiAnF4L2`<WL%6Q@W0JG[54>CG[Aj.=r3AWQ&4>JTE0KpUA1,*<P4s2g>3AM%+1,1I:4s2sC0kP#]+?2273"7u*1,(CG+?VD7AnF4L3&`NJ%6QC%0JG[54>J^)Aj.=s3ArQ#4>J`I0KpUA1,NTT4s2j@0fBJ''1,Ua>4s2sC2.gGa+?;8;1(??$2D?gK+?VD;AnF4L3B&]Q%6QC)0JG[54>Jj-Aj.=t3B/i)4>JlM0KpUA1,rlX4s2R61,LZo4>JoN0KpUA1-&rY4s2R61c[H''4>L>!0KpUA11=d,4s2R62`3?"4>LA"0KpUA11Fj-4s2R70JGHq4>LD#0KpUA11Op.4s2R71,^ru4>LG$0KpUA11Y!/4s2R72)6ip4>LJ%0KpUA11b''04s2R72`EW(4>LM&0KpUA11k-14s2R80JbHn4>SZF0KpUA1GEEQ4s2R81,q6&4>S]G0KpUA1GNKR4s2R82)I-!4>S`H0KpUA1GWQS4s2R83&!#q4>ScI0KpUA1G`WT4s2R90Jt`t4>SfJ0KpUA1Gi]U4s2R91GLWo4>SiK0KpUA1GrcV4s2R92)[E''4>SlL0KpUA1H&iW4s2R93&3<"4>SoM0KpUA1H/oX4s2R:0K:`q4>SrN0KpUA1H8uY4s2R:1G^ou4>SuO0KpUA1HB&Z4s2R:2*!E$4>UD"0KpUA1LXm-4s2R:3&ET(4>UG#0KpUA1Las.4s2R;0ebEn4>UJ$0KpUA1Lk$/4s2R;1H$or4>UM%0KpUA1Lt*04s2R;2DI*!4>UP&0KpUA1M(014s2R;3&`T%4>US''0KpUA1M1624s2R<0et]t4>\`G0KpUA1b`NR4s2R<1H73#4>\cH0KpUA1biTS4s2R<2Dd)s4>\fI0KpUA1brZT4s2R<3&rl+4>\iJ0KpUA1c&`U4s2R=0f:]q4>\lK0KpUA1c/fV4s2R=1b^lu4>\oL0KpUA1c8lW4s2R=2E!B$4>\rM0KpUA1cArX4s2R=3AN8t4>\uN0KpUA1cK#Y4s2R>0fM!"4>]#O0KpUA1cT)Z4s2R>1c$lr4>]&P0KpUA1c]/[4s2R>2E3Z*4>^J#0KpUA1gt!.4s2R>3A`Q%4>^M$0KpUA1h(''/4s2R?1,(Bk4>^P%0KpUA1h1-04s2R?1c70#4>^S&0KpUA1h:314s2R?2_d&s4>^V''0KpUA1hC924s2R?3Ari+4>^Y(0KpUA1hL?34s2U71,:Zq4>efH0KpUA2)&WS4s2U71cR/u4>eiI0KpUA2)/]T4s2U72`!?$4>elJ0KpUA2)8cU4s2U73B8i(4>eoK0KpUA2)AiV4s2U81,Ls"4>erL0KpUA2)JoW4s2U82)$ir4>euM0KpUA2)SuX4s2U82`<?!4>f#N0KpUA2)]&Y4s2U90JPHp4>f&O0KpUA2)f,Z4s2U91,grt4>f)P0KpUA2)o2[4s2U92)7-#4>f,Q0KpUA2*#8\4s2U92`NW''4>gP$0KpUA2.:*/4s2U:0JkHm4>gS%0KpUA2.C004s2U:1-%6%4>gV&0KpUA2.L614s2U:2)R,u4>gY''0KpUA2.U<24s2U:3&!<$4>g\(0KpUA2.^B34s2U;0K(`s4>g_)0KpUA2.gH44s2U;1GUWn4>nlI0KpUA2DA`T4s2U;2)dE&4>noJ0KpUA2DJfU4s2U;3&<<!4>nrK0KpUA2DSlV4s2U<0K;$$4>nuL0KpUA2D\rW4s2U<1GgotASu$gBk26mDJ*Mi%5BOj+C\npBl7EpA9)*rB4VN72Dd*A4s2sG1hL>`+>Pf40JEqu2Dm0B4s2sG2.gGa+>Pf62)Yn+2E!6C4s2sG2J-Pb+>Pi00es2#2E*<D4s2sG2eHYc+>Pi22E2..2E3BE4s2sG3+cbd+>Pi51,KG&2E<HF4s2sG3G)ke+>Pi73%te(2IS9n4s2sG@:j+8+>Pl11H#\)2I\?o4s2sG@V049+>Pl33AM%+2IeEp4s2sG@qK=:+>Pl61cPq,2InKq4s2sGA7fF;+>Pl90Jj5$2J"Qr4s2sGAS,O<+>Po22D>S&2J+Ws4s2sGAnGX=+>Po50fBJ''2_Zp>4s2sH0P4o\+>Po72_kh)2_d!?4s2sH0kP#]+>Po:1,o_*2_m''@4s2sH11k,^+>Pr33&D(,2`!-A4s2sH1M15_+>Pr61b]A$2`*3B4s2sH1hL>`+>Pr83Aq=/2`39C4s2sH2.gGa+>Pr;2)5V''2`<?D4s2sH2J-Pb+>Y],0K9M(2`EEE4s2sH2eHYc+>Y].2Dbk*2`NKF4s2sH3+cbd+>Y]11,''/"2`WQG4s2sH3G)ke+>Y]32`;+-2dnBo4s2sH@:j+8+>Y`-1GTD%2e"Hp4s2sH@V049+>Y`/3&h@02e+Nq4s2sH@qK=:+>Y`21c,Y(2e4Tr4s2sHA7fF;+>Yc,0JEqu2e=Zs4s2sHAS,O<+>Yc.2)Yn+2eF`t4s2sHAnGX=+>Yc10es2#3&!$?4s2sI0P4o\+>Yc32E2..3&**@4s2sI0kP#]+>Yf-1,KG&3&30A4s2sI11k,^+>Yf/3%te(3&<6B4s2sI1M15_+>Yf21H#\)3&E<C4s2sI1hL>`+>Yf43AM%+3&NBD4s2sI2.gGa+>Yi.1cPq,3&WHE4s2sI2J-Pb+>Yi10Jj5$3&`NF4s2sI2eHYc+>Yi32D>S&3&iTG4s2sI3+cbd+>Yi60fBJ''3&rZH4s2sI3G)ke+>Yl/2_kh)3+4Kp4s2sI@:j+8+>Yl21,o_*3+=Qq4s2sI@V049+>Yl43&D(,3+FWr4s2sI@qK=:+>Yl71b]A$3+O]s4s2sIA7fF;+>Yo03Aq=/3+Xct4s2sIAS,O<+>Yo32)5V''3+aiu4s2sIAnGX=+>Yo60K9M(3A<-@4s2sJ0P4o\+>Yo82Dbk*3AE3A4s2sJ0kP#]+>Yr21,''/"3AN9B4s2sJ11k,^+>Yr42`;+-3AW?C4s2sJ1M15_+>Yr71GTD%3A`ED4s2sJ1hL>`+>Yr93&h@03AiKE4s2sJ2.gGa+>Yu31c,Y(3ArQF4s2sJ2J-Pb+>Yu60JEqu3B&WG4s2sJ2eHYc+>Yu82)Yn+3B/]H4s2sJ3+cbd+>Yu;0es2#3B8cI4s2sJ3G)ke+>Z#42E2..3FOTq4s2sJ@:j+8+>Z#71,KG&3FXZr4s2sJ@V049+>Z#93%te(3Fa`s4s2sJ@qK=:+>Z#<1H#\)3Fjft4s2sJA7fF;+>bc,3AM%+3Fslu4s2sJAS,O<+>bc/1cPq,3G''s!4s2sJAnGX=+>bc20Jj5$@5''Ah4s2sr0P4o\+>bc42D>S&@50Gi4s2sr0kP#]+>bf.0fBJ''@59Mj4s2sr11k,^+>bf02_kh)@5BSk4s2sr1M15_+>bf31,o_*@5KYl4s2sr1hL>`+>bf53&D(,@5T_m4s2sr2.gGa+>bi/1b]A$@5]en4s2sr2J-Pb+>bi13Aq=/@5fko4s2sr2eHYc+>bi42)5V''@5oqp4s2sr3+cbd+>bl.0K9M(@6$"q4s2sr3G)ke+>bl02Dbk*@::iD4s2sr@:j+8+>bl31,''/"@:CoE4s2sr@V049+>bl52`;+-@:LuF4s2sr@qK=:+>bo/1GTD%@:V&G4s2srA7fF;+>bo13&h@0@:_,H4s2srAS,O<+>bo41c,Y(@:h2I4s2srAnGX=+>bo70JEqu@PBJi4s2ss0P4o\+>br02)Yn+@PKPj4s2ss0kP#]+>br30es2#@PTVk4s2ss11k,^+>br52E2..@P]\l4s2ss1M15_+>br81,KG&@Pfbm4s2ss1hL>`+>bu13%te(@Pohn4s2ss2.gGa+>bu41H#\)@Q#no4s2ss2J-Pb+>bu63AM%+@Q,tp4s2ss2eHYc+>bu91cPq,@Q6%q4s2ss3+cbd+>c#30Jj5$@Q?+r4s2ss3G)ke+>c#52D>S&@UUrE4s2ss@:j+8+>c#80fBJ''@U_#F4s2ss@V049+>c#:2_kh)@Uh)G4s2ss@qK=:+>c&41,o_*@Uq/H4s2ssA7fF;+>c&63&D(,@V%5I4s2ssAS,O<+>c&91b]A$@V.;J4s2ssAnGX=+>c&;3Aq=/@k]Sj4s2st0P4o\+>c)52)5V''@kfYk4s2st0kP#]+>c)80K9M(@ko_l4s2st11k,^+>c):2Dbk*@l#em4s2st1M15_+>c)=1,''/"@l,kn4s2st1hL>`+>ki-2`;+-@l5qo4s2st2.gGa+>ki01GTD%@l?"p4s2st2J-Pb+>ki23&h@0@lH(q4s2st2eHYc+>ki51c,YQDId6kA9)*rB4VM]2)ZRdAS5^p@qfIo@;]^h%6S,[0JG[54C^?_Aj.=p0etF:%6S,\0JG[54C^B`Aj.=p0f1aG%6S-/0JG[54C_f3Aj.=p0fLgB%6S-00JG[54C_i4Aj.=p0f_-O%6S-10JG[54C_l5Aj.=p1,:UA%6S-20JG[54C_o6Aj.=p1,LsE%6S-30JG[54C_r7Aj.=p1,h!I%6S-40JG[54C_u8Aj.=p1-%?M%6S/T0JG[54Cg-XAj.=p1GUdH%6S/U0JG[54Cg0YAj.=p1GpjC%6S/V0JG[54Cg3ZAj.=p1H.3G%6S/W0JG[54Cg6[Aj.=p1b^XB%6S/X0JG[54Cg9\Aj.=p1bq!F%6S/Y0JG[54Cg<]Aj.=p1c7$J%6S/Z0JG[54Cg?^Aj.=p1cIBN%6S/[0JG[54CgB_Aj.=p2)$j@%6S/\0JG[54CgE`Aj.=p2)70M%6S/]0JG[54CgHaAj.=p2)R6H%6S000JG[54Chl4Aj.=p2)m9L%6S010JG[54Cho5Aj.=p2D@$G%6S020JG[54Chr6Aj.=p2D[*B%6S030JG[54Chu7Aj.=p2DmEO%6S040JG[54Ci#8Aj.=p2E3KJ%6S050JG[54Ci&9Aj.=p2_[3N%6S2U0JG[54Cp3YAj.=p2`!9I%6S2V0JG[54Cp6ZAj.=p2`<?D%6S2W0JG[54Cp9[Aj.=p2`NZQ%6S2X0JG[54Cp<\Aj.=p3&*-C%6S2Y0JG[54Cp?]Aj.=p3&<HP%6S2Z0JG[54CpB^Aj.=p3&WNK%6S2[0JG[54CpE_Aj.=p3&ilO%6S2\0JG[54CpH`Aj.=p3AE<J%6S2]0JG[54CpKaAj.=p3AWZN%6S2^0JG[54CpNbAj.=p3Ar]R%6S310JG[54Cqr5Aj.=p3B8cM%6S320JG[54Cqu6Aj.=q0JPI>%6S330JG[54Cr#7Aj.=q0JkLB%6S340JG[54Cr&8Aj.=q0K(jF%6S350JG[54Cr)9Aj.=q0KCmJ%6S360JG[54Cr,:Aj.=q0ekXE%6S5V0JG[54D$9ZAj.=q0f1^@%6S5W0JG[54D$<[Aj.=q0fD$M%6S5X0JG[54D$?\Aj.=q0f_*H%6S5Y0JG[54D$B]Aj.=q1,:OC%6S5Z0JG[54D$E^Aj.=q1,LmG%6S5[0JG[54D$H_Aj.=q1,gsB%6S5\0JG[54D$K`Aj.=q1-%9O%6S5]0JG[54D$NaAj.=q1GUaA%6S5^0JG[54D$QbAj.=q1Gh''N%6S5_0JG[54D$TcAj.=q1H.-I%6S620JG[54D&#6Aj.=q1b^U;%6S630JG[54D&&7Aj.=q1bppH%6S640JG[54D&)8Aj.=q1c7!C%6S650JG[54D&,9Aj.=q1cI<P%6S660JG[54D&/:Aj.=q2)$dB%6S670JG[54D&2;Aj.=q2)7-F%:sEf@qfIo@;]^h%:sEf@r5Xn%7<iuE)''hYAKYK*EcP`/FC])qF<E5(9jqu`A7]@eDImj"F)Q2A@q?d%Df?.sDIa2fDIa1c,pbutA5Zu[Dfp)1AITq378HA^~>'
%
classmethod: Category
cmapIdentity_V
	"Category class>>#recodeCMapMethods generated this method at 14. Mai 2021 um 13:23:42"

	^String fromASCII85: ',p?)`/O<oc@V%,I/heDGATMd4EarZ46VV!.%4*;gDe!p,ASuTbAS#C`A5Zu[Dfp)1ATKmT:i^Ja;e:%n-ppQo8T&6a.1IRL8T&$SF_#&]ATMd4EarZA+Ad)s@oHr\+=KTK6qM91F=@YF,sl0UBl6g[F)Q2A@q@\D6VV!.+=KflASuU(FEoH=.1IRL<,$GjANCq^8RuCMFD5iB/QNu[A8bpg+A$*TDKKT7Gp"di%4*<$ATDj+Df.TY0eb460K''@d,suTiH#dV3BQQ9X/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/O`,pbosE-ZJ<B4uBJ+@C''dH#dV3BQP@O3B8cF1,(FC+@0OV@V%/76#:?[EbT0"FE8RFATMF''G%G2:%4*;fDfBuBBkM+$3XmA]6Z6phEbT0"F?1OBARoLrFE2))F`_>9DBNA*A0?#9AKY])+EMIDEarZ''@;]Tu@VK^gEd8d>DfT]9/0K.NFD)e8EXa<@6Z6phEbT0"F?1OgBln$,F`\aCDe*QoBk(RnBl@l?+CT;%+E1n4D/"*6ARlp&Ec6,8A7]9oFD,*)+EV:.%4*;fDfBuBBkM+$3Zr$QCi"$6Bl7Q+@rH6qBln''-DK?q/Eb-A1ATTsB,pbosE-ZJ<B4uBJ%4*;fDfBuBBkM+$3Zq=3A8-+,EbT!*FD5Z2F!,C5+EMIDEarZ''@rGmh+Dl7BF<GU8FCAm$+EV:.+CS_tG%D+/,suTiH#dV3BQQ9X@rH=3EbT0"F<GI>FD55r/0K%JBlbD5BleA=De:,%Df0*"FD5Z2F!+n/A0>u-AKYT''Ci"$6Bl7Pm,pbosE-ZJ<B4uBJ+Co2-@r,RfD.R`?%4*;fDfBuBBkM+$3XmA]6Z6phEbT0"F?1OBARoLrFE2))F`_>9DK?q7DBND&DIIR2+D,P4D''3\<F*&OFAT2[.A9DBn+EV:.+CS_tG%D+/,suTiH#dV3BQQ9X@rH=3EbT0"F<GI>FD55r/0K%JBlbD5BleA=De:,%Df0*"FD5Z2F!+n/A0>u-AKYT''Ci"$6Bl7Pm,pbosE-ZJ<B4uBJ+Co2-@r,RfD.R`1Bl5&8BOr;sDe!p,ASuTuFD5Z2+CT.u05kkRDffZ(EZf4-FCfK,@;Kuo,pbosE-ZJ<B4uBJ+E2@>G%kJuA0?)1FD)e=BOr;sBleB:Bju4,Bl@lA+:TVC6Z6phEbT0"F?0jW,suTiH#dV3BQQ9X:1\-]BOu3,FD,5.DIIBn+E(j76"FnCAKYl/EZfI;AKYl!D.Rc2De:,+FE8R7Df0Z;Bju4,DfTn.,pbosE-ZJ<B4uBJ+DkP4+C\n)F`V,)+EVNEASu$sEcYe7DfQt>Ec5f5FCcS6Ec5K2@ruc7A7]dqG%G2,Ao_g,%4*;fDfBuBBkM+$3ZrNXBlbD<De=*8@<,p%GA2/4Dfp.EF)Y]#BkD''h+E2@8DfQtEEbTW;ASrW0ATDX%F)u&6DCuAE,suTiH#dV3BQQ9E,pbosE-ZJ<B4uBJ+B1m'';]o"77T<GT;FM^";]nn7:KC%T7787b=Wg[773Frn:g$[f7n?T%85DoI78d&,5u''fW,pbosE-ZJ<B4uBJ+@Aq"<)Q:S<E)al;]m8M;]nY1+s90H6m+cj=Wg.8:f9_\;]nk6+A#:(9M%Z@+BLj,;F+&W8OZQ/%4*;fDfBuBBkM+$3Zq!h6VLKJ8PVc,+@9(-+AP^3+A>@$8Q8,H+B2,f+B1m#+A#:(9M%Z@+BLj,;F+&W8OZQ#:IYd>,suTiH#dV3BQQ9X9gqrI83p!M5se.:8Q8h85u''fj7S-QS78m,-7Sco)5p/ui;H-4T<D5\V+Ac''9:et"Y+@/mo%4*;fDfBuBBkM+$3Zpg^;aX5E8PMWA/g*_\+AP]T792iP<$5+15tjrp<(KG#6VgN];FsAL<$4_-9LM<I+AYlE,pbosE-ZJ<B4uBJ+@Aq"<)Q:S<E)al;]nCq+A>?m6;0fj7Sco)5u(Q*6qL9F6W>TZ8PVZF;FNrP/0IMZ6V0[7:/jMQ/.EmO6Z6phEbT0"F?1OC:dm`C5tigP79DuQ:eX/Q=Y([k;BS>&:/aSY<CKY^8O6#m6pXO57n$?!-qR0$9N=JP:.HiX6<-to,pbosE-ZJ<B4uBJ+AP^3+A>@$8Q8,H+B2,f+Abs36WI#Q9gqfV+AYHL;cQ._<(U%h<(.p":JXAW+AYlX;ajSb8OGpF3t3J^6Z6phEbT0"F?1O<:K(17:IZI,;ai5[6pXd</0I_d+Abs37S-QX4!7<s+@9(,8PV]Q;]nY,<(0\_<DZXd:JN>J,pbosE-ZJ<B4uBJ+@o:0792iT+@AFp;aj(s5u''fj:JN#u:0A]=84?<P=WgL0+A>?m6:jjB<*:ap=%GbZ84?E!8PT^@,suTiH#dV3BQQ9X6VgHV;F*ZL/0Ikj;Fs5T+A>?m6:jjB<*:ap:Jr<7:Jt.7-qR0$9N=JP:.HF%77U$C7n$0?73GB(%4*;fDfBuBBkM+$3Zq3t84?EX8Q/&,+@/ms;b9_S+A#<N5u(Q*=$]t3:K:@::IZI+84=Y$;ahg)7NbZ$8Q-''E,suTiH#dV3BQQ9X;bok^=$]_Q/0IA^78=ss7Naub<_64Y6m,8p+B1m#+Abj4;b9;I9M&2d+AYHL;cQ1U+@JLi5t=?r%4*;fDfBuBBkM+$3Zp"+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/Ia!P7;cX''Df''?&DKKq/%51(?6qM91F<E55Ec5GdATT&,Bl7I%ATMd4EarZ''@V''1dD@I%01*C+A@rri&AS5^p%1QcXB5)6nD..Am%51(?6rSAPFCf;\DJ!f01E^4B@rri(F`8I4AS5^p%3QcH;IsKTF*)GJ+=KNdDdm9,+Co%q%3QcH:NBuWEbTE(+=KflASuU(FEo;XA7]?^+<W=9F`;;9ASl!rF<E7[A7]?^ASu$$A7]?^%51(C@;ntMD.OhC8RuCMFD5iB/QO!)AS)B)6VV!.<b6;mBl@l30eb460K(%aAS)B)6VV!.<-`Fo+>G!LAS)A\03D4G6m,\g+>GPm1,UmB1a"e=3AFe^A7]?^%51dWDe*E%0d("<Ado2&8RuCMFD5iB/P%",F(Jiu@;lYbASu$gD..Am6VV!.:18!N+CfP7Eb0-1A8,Oq+>6)V@;m?"AS,XoATD@''Dfp)1AKYr1E"-ArA.<*fA.8to,t2]^;IsofF`Lu''%4*;h:IYc~>'
%
classmethod: Category
versionsTxt
	"Category class>>#addVersionsTxtMethod generated this method at 13. Januar 2020 um 09:42:41"

	^'Adobe-Identity-0:
Identity-H (CMapVersion=10.006)
Identity-V (CMapVersion=10.006)

Adobe-CNS1-7:
Adobe-CNS1-0 (CMapVersion=10.006)
Adobe-CNS1-1 (CMapVersion=1.005)
Adobe-CNS1-2 (CMapVersion=1.005)
Adobe-CNS1-3 (CMapVersion=1.005)
Adobe-CNS1-4 (CMapVersion=1.006)
Adobe-CNS1-5 (CMapVersion=1.005)
Adobe-CNS1-6 (CMapVersion=1.003)
Adobe-CNS1-7 (CMapVersion=1.001)
B5-H (CMapVersion=10.006)
B5-V (CMapVersion=10.006)
B5pc-H (CMapVersion=10.006)
B5pc-V (CMapVersion=10.006)
CNS-EUC-H (CMapVersion=10.006)
CNS-EUC-V (CMapVersion=10.006)
CNS1-H (CMapVersion=10.006)
CNS1-V (CMapVersion=10.006)
CNS2-H (CMapVersion=10.006)
CNS2-V (CMapVersion=10.006)
ETHK-B5-H (CMapVersion=2.009)
ETHK-B5-V (CMapVersion=13.007)
ETen-B5-H (CMapVersion=10.006)
ETen-B5-V (CMapVersion=10.006)
ETenms-B5-H (CMapVersion=10.005)
ETenms-B5-V (CMapVersion=10.005)
HKdla-B5-H (CMapVersion=1.006)
HKdla-B5-V (CMapVersion=12.005)
HKdlb-B5-H (CMapVersion=1.006)
HKdlb-B5-V (CMapVersion=12.005)
HKgccs-B5-H (CMapVersion=1.006)
HKgccs-B5-V (CMapVersion=12.005)
HKm314-B5-H (CMapVersion=1.006)
HKm314-B5-V (CMapVersion=12.005)
HKm471-B5-H (CMapVersion=1.006)
HKm471-B5-V (CMapVersion=12.005)
HKscs-B5-H (CMapVersion=2.009)
HKscs-B5-V (CMapVersion=13.008)
UniCNS-UCS2-H (CMapVersion=12.006)
UniCNS-UCS2-V (CMapVersion=12.006)
UniCNS-UTF16-H (CMapVersion=1.019)
UniCNS-UTF16-V (CMapVersion=1.009)
UniCNS-UTF32-H (CMapVersion=1.019)
UniCNS-UTF32-V (CMapVersion=1.009)
UniCNS-UTF8-H (CMapVersion=13.019)
UniCNS-UTF8-V (CMapVersion=13.009)

Adobe-GB1-5:
Adobe-GB1-0 (CMapVersion=9.006)
Adobe-GB1-1 (CMapVersion=10.006)
Adobe-GB1-2 (CMapVersion=11.006)
Adobe-GB1-3 (CMapVersion=1.005)
Adobe-GB1-4 (CMapVersion=1.006)
Adobe-GB1-5 (CMapVersion=1.005)
GB-EUC-H (CMapVersion=9.006)
GB-EUC-V (CMapVersion=9.006)
GB-H (CMapVersion=9.006)
GB-V (CMapVersion=9.006)
GBK-EUC-H (CMapVersion=11.006)
GBK-EUC-V (CMapVersion=12.005)
GBK2K-H (CMapVersion=1.008)
GBK2K-V (CMapVersion=1.006)
GBKp-EUC-H (CMapVersion=1.005)
GBKp-EUC-V (CMapVersion=12.005)
GBT-EUC-H (CMapVersion=10.006)
GBT-EUC-V (CMapVersion=10.006)
GBT-H (CMapVersion=10.006)
GBT-V (CMapVersion=10.006)
GBTpc-EUC-H (CMapVersion=10.006)
GBTpc-EUC-V (CMapVersion=10.006)
GBpc-EUC-H (CMapVersion=9.006)
GBpc-EUC-V (CMapVersion=9.006)
UniGB-UCS2-H (CMapVersion=12.006)
UniGB-UCS2-V (CMapVersion=12.005)
UniGB-UTF16-H (CMapVersion=1.016)
UniGB-UTF16-V (CMapVersion=1.007)
UniGB-UTF32-H (CMapVersion=1.016)
UniGB-UTF32-V (CMapVersion=1.007)
UniGB-UTF8-H (CMapVersion=13.016)
UniGB-UTF8-V (CMapVersion=13.007)

Adobe-Japan1-7:
78-EUC-H (CMapVersion=10.006)
78-EUC-V (CMapVersion=10.006)
78-H (CMapVersion=10.006)
78-RKSJ-H (CMapVersion=10.006)
78-RKSJ-V (CMapVersion=10.006)
78-V (CMapVersion=10.006)
78ms-RKSJ-H (CMapVersion=11.006)
78ms-RKSJ-V (CMapVersion=11.006)
83pv-RKSJ-H (CMapVersion=10.006)
90ms-RKSJ-H (CMapVersion=11.006)
90ms-RKSJ-V (CMapVersion=11.006)
90msp-RKSJ-H (CMapVersion=11.006)
90msp-RKSJ-V (CMapVersion=11.006)
90pv-RKSJ-H (CMapVersion=10.006)
90pv-RKSJ-V (CMapVersion=10.006)
Add-H (CMapVersion=10.006)
Add-RKSJ-H (CMapVersion=10.006)
Add-RKSJ-V (CMapVersion=10.006)
Add-V (CMapVersion=10.006)
Adobe-Japan1-0 (CMapVersion=10.006)
Adobe-Japan1-1 (CMapVersion=10.006)
Adobe-Japan1-2 (CMapVersion=11.006)
Adobe-Japan1-3 (CMapVersion=1.005)
Adobe-Japan1-4 (CMapVersion=1.005)
Adobe-Japan1-5 (CMapVersion=1.005)
Adobe-Japan1-6 (CMapVersion=1.006)
Adobe-Japan1-7 (CMapVersion=1.001)
EUC-H (CMapVersion=10.006)
EUC-V (CMapVersion=12.005)
Ext-H (CMapVersion=11.006)
Ext-RKSJ-H (CMapVersion=11.006)
Ext-RKSJ-V (CMapVersion=12.005)
Ext-V (CMapVersion=12.005)
H (CMapVersion=10.006)
Hankaku (CMapVersion=10.006)
Hiragana (CMapVersion=10.006)
Katakana (CMapVersion=10.006)
NWP-H (CMapVersion=10.006)
NWP-V (CMapVersion=10.006)
RKSJ-H (CMapVersion=10.006)
RKSJ-V (CMapVersion=12.005)
Roman (CMapVersion=10.006)
UniJIS-UCS2-H (CMapVersion=12.006)
UniJIS-UCS2-HW-H (CMapVersion=12.005)
UniJIS-UCS2-HW-V (CMapVersion=12.006)
UniJIS-UCS2-V (CMapVersion=12.006)
UniJIS-UTF16-H (CMapVersion=1.026)
UniJIS-UTF16-V (CMapVersion=1.008)
UniJIS-UTF32-H (CMapVersion=1.026)
UniJIS-UTF32-V (CMapVersion=1.008)
UniJIS-UTF8-H (CMapVersion=13.026)
UniJIS-UTF8-V (CMapVersion=13.008)
UniJIS2004-UTF16-H (CMapVersion=1.021)
UniJIS2004-UTF16-V (CMapVersion=1.006)
UniJIS2004-UTF32-H (CMapVersion=1.021)
UniJIS2004-UTF32-V (CMapVersion=1.006)
UniJIS2004-UTF8-H (CMapVersion=1.021)
UniJIS2004-UTF8-V (CMapVersion=1.006)
UniJISPro-UCS2-HW-V (CMapVersion=1.005)
UniJISPro-UCS2-V (CMapVersion=1.005)
UniJISPro-UTF8-V (CMapVersion=1.005)
UniJISX0213-UTF32-H (CMapVersion=1.025)
UniJISX0213-UTF32-V (CMapVersion=1.008)
UniJISX02132004-UTF32-H (CMapVersion=1.020)
UniJISX02132004-UTF32-V (CMapVersion=1.006)
V (CMapVersion=12.005)
WP-Symbol (CMapVersion=10.006)

Adobe-Japan2-0 (deprecated):
Adobe-Japan2-0 (CMapVersion=9.006)
Hojo-EUC-H (CMapVersion=9.006)
Hojo-EUC-V (CMapVersion=9.006)
Hojo-H (CMapVersion=9.006)
Hojo-V (CMapVersion=9.006)
UniHojo-UCS2-H (CMapVersion=9.006)
UniHojo-UCS2-V (CMapVersion=9.006)
UniHojo-UTF16-H (CMapVersion=1.005)
UniHojo-UTF16-V (CMapVersion=1.005)
UniHojo-UTF32-H (CMapVersion=1.005)
UniHojo-UTF32-V (CMapVersion=1.005)
UniHojo-UTF8-H (CMapVersion=10.005)
UniHojo-UTF8-V (CMapVersion=10.005)

Adobe-Korea1-2:
Adobe-Korea1-0 (CMapVersion=9.006)
Adobe-Korea1-1 (CMapVersion=10.006)
Adobe-Korea1-2 (CMapVersion=1.005)
KSC-EUC-H (CMapVersion=9.006)
KSC-EUC-V (CMapVersion=9.006)
KSC-H (CMapVersion=9.006)
KSC-Johab-H (CMapVersion=10.006)
KSC-Johab-V (CMapVersion=10.006)
KSC-V (CMapVersion=9.006)
KSCms-UHC-H (CMapVersion=10.006)
KSCms-UHC-HW-H (CMapVersion=10.006)
KSCms-UHC-HW-V (CMapVersion=10.006)
KSCms-UHC-V (CMapVersion=10.006)
KSCpc-EUC-H (CMapVersion=9.006)
KSCpc-EUC-V (CMapVersion=9.006)
UniKS-UCS2-H (CMapVersion=10.006)
UniKS-UCS2-V (CMapVersion=10.006)
UniKS-UTF16-H (CMapVersion=1.008)
UniKS-UTF16-V (CMapVersion=1.005)
UniKS-UTF32-H (CMapVersion=1.008)
UniKS-UTF32-V (CMapVersion=1.005)
UniKS-UTF8-H (CMapVersion=11.008)
UniKS-UTF8-V (CMapVersion=11.005)

Adobe-KR-9:
Adobe-KR-0 (CMapVersion=1.002)
Adobe-KR-1 (CMapVersion=1.002)
Adobe-KR-2 (CMapVersion=1.002)
Adobe-KR-3 (CMapVersion=1.002)
Adobe-KR-4 (CMapVersion=1.002)
Adobe-KR-5 (CMapVersion=1.002)
Adobe-KR-6 (CMapVersion=1.002)
Adobe-KR-7 (CMapVersion=1.002)
Adobe-KR-8 (CMapVersion=1.002)
Adobe-KR-9 (CMapVersion=1.002)
UniAKR-UTF16-H (CMapVersion=1.002)
UniAKR-UTF32-H (CMapVersion=1.002)
UniAKR-UTF8-H (CMapVersion=1.002)
'
%
category: '*PostScript CIDInit-CMap sources Unicode'
classmethod: Category
cmapAdobe_CNS1_UCS2
	"Category class>>#recodeCMapUnicodeMethods generated this method at 17. Mai 2021 um 12:46:53"

	^String fromASCII85: ',p?)`/O<oc@V%,I/heDGATMd4EarZ46VV!.%4*;gDe!p,ASuTbAS#C`A5Zu[Dfp)1ATKmT:i^Ja;e:%n-ppQo8T&6a.1IRL8T&$SF_#&]ATMd4EarZA+Ad)s@oHr\+=KTK6qM91F=@YF,sl0UBl6g[F)Q2A@q@\D6VV!.+=KNdDdm906V^Q7/QG/:1+<YY,ueT#Ch5XM-p_B^@V%,Y:/`l!<C9\?+@0OV@V$ZL:/`ki2^o1^-!"StF(oQ13Zp.6/het6%4*;fDfBuBBkM+$3Zp"+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/Ia!P6Z6phEbT0"F?1O3DfBuBBkM+$+>Gl:0J,%60f^@BA8bpg/g*GrC`mb4B4uC.+ED%7ATDs*A1e<;,suTiH#dV3BQQ9E,pbosE-ZJ<B4uBJ+Auc]BleB:Bju4,Bl@l3@;]TuF`V+:Bl5&7Dfp)1AKYE!A0>>qDIIR2+D,P4D0%6NGA2/4+E)90,pbosE-ZJ<B4uBJ+EqOABQ&$8+Dl%-BkD''h@<?4%DCco=Eb-A4ATDX%FED))+E2@>G%kJuA0>u-@<<W6BOqW!,suTiH#dV3BQQ9XAoDL%Dg,o5B-:]&DIdI''Bl@m1+CT;%+Dk\33XmA]6Z6phEbT0"F?0jW,suTiH#dV3BQQ9X;IsBQF*)G:@Wcd,Df0V=De:,5Dfp)1AKYK$A7Zm#F`VXIEb0?$Bl5&8BOr;p@W-F$%4*;fDfBuBBkM+$3ZqpNE-ZJ<B4uB0DJsW2@q@26FD,B0+Dbb5F<GL6+Cf>-A8-."Df0V=@;]TuFD,5.AoDL%Dg,o5B+6.56Z6phEbT0"F?1OTBldd#@;0RiE\7eI,suTiH#dV3BQQ9E,pbosE-ZJ<B4uBJ+Auc]BleB:Bju4,Bl@m1+DG^9@VK^gEd8d>DfT\;D09oA+ED%4Ec5K2@q?d)BOr;p@W-F$%4*;fDfBuBBkM+$3ZqpNE-ZJ<B4uB0DJsW2@q@26FD,B0+Dbb5F<GL6+Cf>-A8-."Df0V=@;]TuFD,5.AoDL%Dg,o5B+6.56Z6phEbT0"F?1OTBldd#@;0RiEZf(6+EV:.+CoD#F_t]-FCB9*Df-\+DIbD=EZf:BBOu3,D..NtEbSruEt''EA6Z6phEbT0"F?1O`Ec6,8A7]9oGA2/4+EV:.+Co2-FE2))F`_>9DD!%@,pbosE-ZJ<B4uBJ%4*;fDfBuBBkM+$3Zq1/Bln$"EZfI;AKYl!D.Oi.AfsBMDdm9#DJsP<FD,5.DIIBnF!,C5+DGq=+Cf>-FE2))F`_PBEt''EA6Z6phEbT0"F?1O]@<iu)AKZ,:ARlp*D]iV/A8cL0AKYo3+E2@>D/XN-+E2@>A9DC(F!,")EbT].A0>K)Df#q0,suTiH#dV3BQQ9XFD,B0+EMI5FE_/6AKZ22FD,T8F<GXDARfFdBk&9)EbTH4+Eqj?FED)3+E1n4D/"''4Bl@lA%4*;fDfBuBBkM+$3XmA]6Z6phEbT0"F?1OD84c`&;bok^=$]_Q+A#KS:f:(i8OQ!8+@93R<(KG#6VgN];FsAL<$4_-9LM<I;]nA$6k(Fg6Z6phEbT0"F?1O3:JOke8O?EV:Jt+6,!f-M8Q-fU5u''fj5u(Q*79EAa78m,-:Jr<,9i+MT7788"5uLTH:/jeR;_/A(,suTiH#dV3BQQ9X8PVWH<CBDR7k>cL<E()9:K/H18PMcU7787t:FmVf84=Xm9i+MT7788"5uLTH:/jeR;]nk*%4*;fDfBuBBkM+$3Zq-c;F<u@:/jMG8PD]T=Wg"*6m+rj<),k\;]nP*;BS7J:dIuY8OHKO5uJh%<DlXh;ahfp;FM$@,suTiH#dV3BQQ9X6qL<E9L26E778aN8PUC'':EW),78?f);b02J9H[;*73Frn:g$[f7n?T%85DoI78b7(;@Oou6Z6phEbT0"F?1O3:JOke8O?EV:Jt+66:E"j8O5[:73G&q;BS8#=Wg+(;FNrP/0IMZ6qL9F6W>TZ8PVWE6q''jM5tig=,pbosE-ZJ<B4uBJ+B)**6V0R;/0IA`786TP5uLi:+AYlX6VgHU78[&R:/jeN9HZ_h9gM9<;]mJ[:.%]T6qL-D/0I8Z<"1-"6Z6phEbT0"F?1O>:K/H18PMcU7787t:FmVb;GTY[;FO;K:/i?37NbW06;piT<)lmd+@f4''6rP4(;BSn,;H?@V78l8W,pbosE-ZJ<B4uBJ+A>R0;]nk*+B;?//0I>H<''`&X:Jr<3;GTbR<)Yk$:Jr<%<DuIa78m,-8PW5R;GpLk<(Tk\.1IRL6Z6phEbT0"F?1O8:KKtc78b6q5ugiP6m+cj6m,9#+@/b*+B1m#:Jt=<:IZI#8O5[79M&2d/0J"b78ufH;BSP+%4*;fDfBuBBkM+$3Zpdc:/k+W6W>TZ;cHXd6W>1%8O5[79M&2d/0I_d+B2-7<$3S\:.%]T6qL-D+AP?q9M%`C:.%Gm:JqWJ,suTiH#dV3BQQ9X:K0kR;HHFg74B?F;FseY:.HEu:*;ht=Wgd3=WgL?<$4t++B1m#+B;?/+AYHL<(KSZ%4*;fDfBuBBkM+$3Zq?s7T<GT;FN,Z792iP+A#$F5t"aF;aj(s:IZI+84=Xt:K(1`6:jjB<*:>>7NbW06V&=f5tsX874o#q,suTiH#dV3BQQ9X/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/O`,pbutA4(9PD.RU,Et&R36V0[;DJ=2802Q\-@oHr\+D,>*A9)7&Dfp)1AKYGnB5)5m%5BU\A8,Oq+C\npBl4@h@V''1dDI[NlE"*706V0[EH#n(=D+SVWD]ghYA8,Oq+CoV6+C\npBl4A5;IsKTF*)GJ+=KNdDdm9,+Co%q%51LtA7]dqDJ((?6"FnCAR@f";__WZ6W5`h+Co%q%51Y&E,]W)D.RU,+?(ERAS)B_DIal#AS)A\01/HBE)''hYAKWWlA8bpg/ON930eHBm;_fJ+AS)A\01/HBE)pOjF(oQ1+>G]*0JG4(A7]?^01/HBE)_+%AKW`NA7]?^%51g`8OO\*0d&2)+>Pf11Gp:01,1Oi+Co%q%1Osl9lFQR+>=pKAS)A\0d''q:B5)6nDe*F#E+*6fEa`iuAITb)4>8HC0KpUA7Rfj:4q2(@A7KOgATMg!@qB[hDJ*Mi%5BOj+C\npBl7Bl@q]:k%6Q<u0JG[54D&2;A3LGb0JGC=4s2sA0OZt*%6Q<u2DIB<4>JWH1-Q.00JGC?4s2sC0JYOM%6Q<u2D[N>4>SZF0Koq.0JGCA4s2t"Ah[^Y%6Q<u2E*fB4D&1ZANgPc0JGCE4s2sC0JYRN%6Q<u2E<rD4D&1[@Qk5`0JGCn4s2t"Ahd^X%6Q<u2I\im4D&1[Aj-Yd0JGCp4s2t"AhYr''%6Q<u2Inuo4D&.\0Koq.0JGCr4s2sC11b&]%6Q<u2J,,q4>JTG2*MI30JGFA4s2sA0Oct)%6Q<u2`NuD4D&1_@m1>a0JGFG4s2sC0JP@I%6Q<u2dnlm4D&.\0g6%/0JGFp4s2sC0JPCJ%6Q<u2e,#o4D&2;A3LGb0JGFr4s2t"AnGR;%6Q<u2e>/q4D&2;A3LGb0JGFt4s2t"AnGR;%6Q<u3&EfA4D&1_@Qk5`0JGID4s2t"Ai4*_%6Q<u@:MJD4>JTH2*MI30JHpG4s2sC0JbIJ%6Q<u@:_VF4D&1Z1Hl710JHpI4s2t"AhZ,,%6Q<u@PBtg4D&1Z@6P,_0JHrj4s2sC0Jd0%%6Q<u@PU+i4>8Ht2a.[50JHrl4s2sD0JG:H%6Q<u@Pg7k4>Jd(@Qk5`0JHrn4s2sC2.L5^%6Q<u@Q$Cm4>Jd''1Hl710JHrp4s2sC2.A=)%6Q<u@Q6Oo4>Jd(ANgPc0JHrr4s2sC2D@$Q%6Q<u@UVGC4>JfK2*MI30JHsF4s2sC2.JR/%6Q<u@UhSE4>Jd(2EhR40JHsH4s2sC2.84''%6Q<u@V%_G4>Jd&0Koq.0JHsJ4s2sC2.C)[%6Q<u@k^(h4>Jd''@m1>a0JHuk4s2sD11;t&%6Q<u@kp4j4>JWF2*MI30JHum4s2sC0Jd9(%6Q<u@l-@l4D&2:1Hl710JHuo4s2t"Ai"$_%6Q<u@l?Ln4>8O#A3LGb0JI#k4s2t"Ah[[X%6Q<uA2-7j4D&1ZA3LGb0JI#m4s2sA0P!++%6Q<uA2?Cl4>8I$2a.[50JI#o4s2sA0Ocb#%6Q<uA2QOn4>JZH@6P,_0JI#q4s2t"AhddZ%6Q<uA2c[p4D&1[ANgPc0JI#s4s2t"Ahdg[%6Q<uA7@_F4>JZM0Koq.0JI$I4s2sC1,3?(%6Q<uA7RkH4>JZL1-Q.00JI$K4s2sC1,^jN%6Q<uAMcRn4>JZJ@m1>a0JI&s4s2sC11<%(%6Q<uAN2jr4>JZI0Koq.0JI&u4s2sC1,3B)%6Q<uARRbF4>J[$Aj-Yd0JI''I4s2sD1Lr7)%6Q<uARdnH4>Sd(0g6%/0JI''K4s2sC1,<<&%6Q<uAS"%J4>JZIANgPc0JI''M4s2sC1,CdO%6Q<uAhZCk4>JZJ1d2@20JI)n4s2sC2Dd*O%6Q<uAhlOm4>JfO1-Q.00JI)p4s2sC1-%3U%6Q<uAi)[o4>JfK3Bdm70JI)r4s2sC0f^sP%6Q<uAi;gq4>JWO1Hl710JI)t4s2sC0f_!Q%6Q<uAiMss4>JWO0Koq.0JI*J4s2sC0f_6X%6Q<uAn+"I4>JWO3''Id60JI*L4s2sC1,:^N%6Q<uAn=.K4>JZI1Hl710JI*N4s2t"Ah[g\%6Q=!0JG[54D&1]@m1>a0JP794s2t"Ah[g\%6Q=!0JYg74D&1]@m1>a0JP7;4s2t"AhZ&*%6Q=!0Jks94>8Ht2*MI30JP7=4s2sD0JP=H%6Q=!0K;6=4D&1Z2*MI30JP7A4s2t"Ahl&(%6Q=!0O[-f4>JWF1Hl710JP7j4s2sC0ebUO%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8KDAj.>"1G`Q!4q0V.0ekIJ+?VG9@q@h54>8KE1d3$E1G`Go4q0V.0ekUN+?VG9@l-@Y4>8KE3''JHI0JHri4q0V.0ek[P+?VM92*!i04>8KE@6Per2)-st4q0V.0em-$+?VM92.\r\4>8KE@m2"t2)-t!4q0V.0em3&+?VM92DIB)4>8KEANh5!2).!F4q0V.0em9(+?VM=AN)d^4>8KF0KpUA2`,)+4q0V.0etII+?VSm@q@h54>8KF@6Per1,V%''4q0V.0f!3%+?VD:3+Y8_4>8KF@m2"t1,V%%4q0V.0f!9''+?VD:3+G,]4>8KFANh5!1,V%#4q0V.0f!?)+?VD:3+4u[4>8KG0KpUA1,V$O4q0V.0f(OJ+?VD:1LiTX4>8KG1-QgC1,UjE4q0V.0f(UL+?VD:11NKW4>8KG1d3$E1,UgD4q0V.0f([N+?VD:0k3BV4>8KG2Ei6G1,V''K4q0V.0f(aP+?VD:0JG["4>8KG3''JHI1,Ua@4q0V.0f(gR+?VD:3Aiu04>8KG@6Per1,Uaq4q0V.0f*9&+?VD:0ebd#4>8KG@m2"t1,UdC4q0V.0f*?(+?VD:0fV?+4>8KH0KpUA1,V!E4q0V.0f1UK+?VD:2J,,^4>8KH1-QgC1,UpC4q0V.0f1[M+?VD:2.\r\4>8KH1d3$E1,Usu4q0V.0f1aO+?VD:2DIB)4>8KH3''JHI1,WW#4q0V.0f1mS+?VD:AMcR[4>8KJ@6Per1GCUE4q0V.0fEK)+?VM;1c.B*4>8KJ@m2"t1GCUn4q0V.0kN=-+?V>5A2ug_4>8L%2a/?H0J[-H4q0V.0kNC/+?V>5@lHR\4>8L%3BeQJ0J[-I4q0V.1,1aP+?VJl1,qH,4>8NF3BeQJ1hAI$4q0V.1,33$+?VJl1M/f[4>8NF@Qkns1hAX(4q0V.1,39&+?VJl@5''kS4>8NFA3M+u2).''G4q0V.1,3?(+?VM93As&14>8NFAj.>"2)/NK4q0V.1,:OI+?VM:AiW$a4>8NG0g6^B2)@$J4q0V.1,:UK+?VM;2E<r14>8NG1HlpD2)A]"4q0V.1,:[M+?VMA0O[-S4>8NG2*N-F2.AO!4q0V.1,:aO+?VMlA7@_34>8NG2a/?H2.\^T4q0V.1,:gQ+?VMm2eG5_4>8NG3BeQJ2.^AV4q0V.1,<9%+?VMn2)%3''4>8NG@Qkns2.ea$4q0V.1,<?''+?VP>1Gh9)4>8NGA3M+u2Do&"4q0V.1,<E)+?VS?3ANc-4>8NGAj.>"2`<TQ4q0V.1,CUJ+?VVq@Pp=Y4>8NH0g6^B3At>)4q0V.1,UgN+?VD91,1s%4>8NJ1HlpD1hA?p4q0V.1,UmP+?VJl2*!i04>8NJ2*N-F1hA?q4q0V.1,UsR+?VJl0Jbm%4>8NJ2a/?H1hAL"4q0V.1,V$T+?VJl2.Sl[4>8NJ3BeQJ1hAX)4q0V.1,WK(+?VJl3+G,]4>8NJ@Qkns1hC-)4q0V.1,WQ*+?VM91M/f[4>8NJA3M+u2).!H4q0V.1,WW,+?VM92I\iZ4>8NJAj.>"2)/Yr4q0V.1,^mO+?VM:3FY/]4>8NK1HlpD2)?sE4q0V.1,^sQ+?VM;1bh0''4>8NK2*N-F2)@+"4q0V.1,_$S+?VM;@lQX]4>8NK2a/?H1hA@$4q0V.1,_*U+?VJl0Od3T4>8NK3BeQJ1hA@#4q0V.1,`Q)+?VJl0O[-S4>8NK@Qkns1hAFO4q0V.1,`W++?VJl1H7Q-ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0JYOs4s2sF0kE(''%6Q="2J#&p4>^V+2*MI30JYOu4s2sEAMcA1%6Q="2_[E<4>^V,Aj-Yd0JYRA4s2sEAMn$_%6Q="2_mQ>4>^V/ANgPc0JYRC4s2sEARR;W%6Q="2`*]@4>eiM0Koq.0JYRE4s2sF1,(LJ%6Q="2`<iB4>em+@6P,_0JYRG4s2sF1GgmO%6Q="2`NuD4>ep)3Bdm70JYRI4s2sF1M&@+%6Q="2dnlm4>f&PAj-Yd0JYRr4s2sF3+ZP_%6Q="2e,#o4>f,R2*MI30JYRt4s2sF3ANNW%6Q="2e>/q4>f,X1Hl710JYUB4s2sF@Por*%6Q="3&3Z?4>gS[3''Id60JYUD4s2sF@k_LY%6Q="3&EfA4>gV(1-Q.00JYUF4s2sF@l$).%6Q="3&WrC4>gV-0g6%/0JYUH4s2sFA7T47%6Q="3&j)E4>gY\2*MI30JYUt4s2sFA7fC:%6Q="3+P2q4>g\/1-Q.00JYV!4s2sFAS,L;%6Q="3+b>s4>g_)@Qk5`0JYXB4s2sFAhc)*%6Q="3AE]?4>nrOA3LGb0JYXD4s2sEAMGo''%6Q="3AWiA4>^V(0Koq.0JYXF4s2sEAM@XY%6Q="3AiuC4>^V)A3LGb0JYXH4s2sEAMZ#(%6Q="3B'',E4>^V*3Bdm70JYXJ4s2sEAMdj[%6Q="3B98G4>gV)3Bdm70JYXs4s2sEAN2Y5%6Q="3FY/p4>^V00g6%/0JYXu4s2sEAN;V3%6Q="3Fk;r4>^V01-Q.00JYY"4s2sEAN;S2%6Q="3G(Gt4>^VX1-Q.00J[&j4s2sEARdGY%6Q="@50qg4>^VZ0Koq.0J[&l4s2sEARdM[%6Q="@5U4k4>^VZA3LGb0J[&r4s2sEARdP\%6Q="@6$Lo4>eiM1Hl710J[''F4s2sF0f1UK%6Q="@:DDC4>eiO2a.[50J[''J4s2sF0fEN*%6Q="@:h\G4>eiR2a.[50J[)k4s2sF0kN=-%6Q="@Pg7k4>em+@Qk5`0J[)r4s2sF1GLdO%6Q="@Q6Oo4>eoN3Bdm70J[)t4s2sF1Gh''T%6Q="@UVGC4>eoO2a.[50J[*H4s2sF1GgsQ%6Q="@UhSE4>eoPANgPc0J[*J4s2sF1H73T%6Q="@V%_G4>ep)@Qk5`0J[*L4s2sF1LjiW%6Q="@k^(h4>ep)A3LGb0J[,m4s2sF3+ZS`%6Q="@kp4j4>f,S3Bdm70J[,o4s2sF3AP&-%6Q="@l-@l4>f,S@6P,_0J[,q4s2sF3AP,/%6Q="@l?Ln4>gS*1d2@20J[,s4s2sF@kf]%%6Q="@lQXp4>gV(1d2@20J[,u4s2sF@l%OW%6Q="@pqPD4>gV,Aj-Yd0J[-I4s2sFA7dY^%6Q="@q.\F4>g\/@Qk5`0J[-K4s2sFAS,O<%6Q="A2$1i4>g_\1Hl710J[/n4s2sG1,([O%6Q="A26=k4>nrN2EhR40J[/p4s2sG1,NH(%6Q="A2HIm4>nrOANgPc0J[/r4s2sG2)8c-%6Q="A2ZUo4>o&V2a.[50J[/t4s2sG2*!TZ%6Q="A2laq4>o''*1d2@20J[0!4s2sG2.AR0%6Q="A77YE4>o''.2*MI30J[0J4s2sG2J+X,%6Q="A7IeG4>o,P3''Id60J[0L4s2sG2_m?V%6Q="A7[qI4>pY(0Koq.0J[0N4s2sG@Q#u*%6Q="AM?:j4>pY-3Bdm70J[2o4s2sG@Uik2%6Q="AMQFl4>pYZ1d2@[DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b11`7*+?VPkA7@_34>8O%1d3$E2IeFQ4q0V.11`=,+?VPl1Gh9)4>8O%2Ei6G2_[.!4q0V.11`C.+?VS<11<?U4>8O%3''JHI2_m0I4q0V.11`I0+?VS<1L`NW4>8O%@6Per2_m3K4q0V.11aoY+?VS<2*!i04>8O%@m2"t2_m7"4q0V.11au[+?VS<@:MJ14>8O%ANh5!2`!F&4q0V.11b&]+?VJl0f_E,4>8O&0KpUA1hAC"4q0V.11i7)+?VJl0f;-(4>8O&1-QgC1hABu4q0V.11i=++?VJl0fV?+4>8O&1d3$E1hAIP4q0V.11iC-+?VJl1h8cZ4>8O&2Ei6G1hALU4q0V.11iI/+?VJl1hAi[4>8O&3''JHI1hC5U4q0V.11iO1+?VJlA2la^4>8QF0KpUA1hC2X4q0V.1GCOI+?VJlA7[q64>8QF1-QgC2)-pF4q0V.1GCUK+?VM91c.B*4>8QF2Ei6G2)/NL4q0V.1GCgQ+?VM9AiMs`4>8QF@6Per2)6jo4q0V.1GE9%+?VM:@5''kS4>8QF@m2"t2)71(4q0V.1GEE)+?VM;0fM9*4>8QG0KpUA2)?st4q0V.1GLUJ+?VJlA7e"74>8QG1-QgC2)@''t4q0V.1GL[L+?VM;1c[`/4>8QG1d3$E2)@-F4q0V.1GLaN+?VM;2D@<(4>8QG2Ei6G2)@.&4q0V.1GLgP+?VM;2J#&]4>8QG3''JHI2)A]N4q0V.1GLmR+?VM;AS++84>8QG@6Per2)Af#4q0V.1GN?&+?VM;AhuU[4>8QG@m2"t2)AfR4q0V.1GNE(+?VM;AS"%74>8QGANh5!2)Af(4q0V.1GNK*+?VM;AN2j_4>8QH0KpUA2)AiS4q0V.1GU[K+?VM;AiMs`4>8QH1-QgC2)Ai%4q0V.1GUaM+?VM;AR[h44>8QH1d3$E2)Af%4q0V.1GUgO+?VM;ARRb34>8QH2Ei6G2)Ai"4q0V.1GUmQ+?VM;AhcIY4>8QH3''JHI2)Ahu4q0V.1GUsS+?VM;AMlX\4>8QH@6Per2)AfS4q0V.1GWE''+?VM;An!q54>8QH@m2"t2)\uS4q0V.1GWK)+?VM>A77Y24>8QHANh5!2*!BL4q0V.1GWQ++?VMA11`WY4>8QI0KpUA2*!HI4q0V.1G^aL+?VMA2`*]-4>8QI1-QgC2*!TR4q0V.1G^gN+?VMj2)RQ,4>8QI1d3$E2.AO$4q0V.1G^mP+?VMk1LiTX4>8QI2Ei6G2.U8X4q0V.1G^sR+?VMlAN)d^4>8QI3''JHI2.U8V4q0V.1G`K(+?VMm2`!W,4>8QI@m2"t2.\^V4q0V.1G`Q*+?VMn0JPa#4>8QIANh5!2.eR&4q0V.1G`W,+?VMn0fM9*4>8QJ0KpUA2.g>U4q0V.1GggM+?VP;0O[-S4>8QJ1d3$E2DR-F4q0V.1GgsQ+?VP;2).9(4>8QJ2Ei6G2Dno#4q0V.1Gh$S+?VP>AMu^]4>8QJ3''JHI2E*C&4q0V.1Gh*U+?VP@11NKW4>8QJ@m2"t2E*C%4q0V.1GiW++?VPk2D[N+4>8QJANh5!2I^0,4q0V.1Gi]-+?VPl0ekj$4>8QK0KpUA2IeHq4q0V.1GpmN+?VPl1H7Q-4>8QK1-QgC2IeQu4q0V.1GpsP+?VPl1b_*&4>8QK1d3$E2IeOS4q0V.1Gq$R+?VS<@:h\44>8QK2Ei6G2`!EM4q0V.1Gq*T+?VS=3&s/34>8QK3''JHI2`,&T4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=#2*!iC4?#*.2EhR40JbRp4s2sH2).''S%6Q=#2.A`l4?#,PAj-Yd0JbUB4s2sH2)o&/%6Q=#2D[N>4?#/WA3LGb0JbUD4s2sH2IU/\%6Q=#2DmZ@4?#0-Aj-Yd0JbUF4s2sH2J$G`%6Q=#2E*fB4?#30@Qk5`0JbUH4s2sH2e=a.%6Q=#2E<rD4?#321Hl710JbUq4s2sH3AY)-%6Q=#2I\im4?#90ANgPc0JbUs4s2sH@5g#,%6Q=#2Inuo4?$\Y@Qk5`0JbXC4s2sEAMuP4%6Q=#2`!W?4>^V03Bdm70JbXE4s2sEARRDZ%6Q=#2`3cA4>^VX2EhR40JbXG4s2sEARRG[%6Q=#2`EoC4>^V]Aj-Yd0JbXI4s2sEAhZ5/%6Q=#2`X&E4>^Y)3Bdm70JbXr4s2sEAh[XW%6Q=#2e"rn4>^Y)2*MI30JbXt4s2sEAh[aZ%6Q=#2eG5r4>^Y(Aj-Yd0Jb[B4s2sEAS*\]%6Q=#3&*T>4>^V]2EhR40Jb[D4s2sEAS,C8%6Q=#3&<`@4>^V]0Koq.0Jb[F4s2sEAS*_^%6Q=#3&NlB4>^V]A3LGb0Jb[H4s2sEAhYr''%6Q=#3&a#D4>^Y(@Qk5`0Jb[J4s2sF0f1mS%6Q=#3&s/F4>eiM2a.[50Jb[s4s2sF0f1dP%6Q=#3+>&o4>eiM3''Id60Jb[u4s2sF0fD!T%6Q=#3+P2q4>eiP0g6%/0Jb\"4s2sF0fW]-%6Q=#3+b>s4>ej&0Koq.0Jb^C4s2sF1,1^O%6Q=#3AWiA4>elJANgPc0Jb^G4s2sF1,1[N%6Q=#3AiuC4>em&1Hl710Jb^I4s2sF1GCdP%6Q=#3B'',E4>eoM0g6%/0Jb^K4s2sF1GUXJ%6Q=#3FY/p4>erL3Bdm70Jb_!4s2sF1b`N*%6Q=#3Fk;r4>erL@m1>a0Jb_#4s2sF1b`?%%6Q=#3G(Gt4>erM0Koq.0Jd,k4s2sF1b^XJ%6Q=#@50qg4>erL@Qk5`0Jd,m4s2sF1b^aM%6Q=#@5C(i4>erM0g6%/0Jd,o4s2sF1b`H(%6Q=#@5U4k4>erL3''Id60Jd,q4s2sF1b^^L%6Q=#@5g@m4>erLANgPc0Jd,s4s2sF1b^gO%6Q=#@6$Lo4>erM1-Q.00Jd-G4s2sF2J"R+%6Q=#@:DDC4>f$-ANgPc0Jd-I4s2sF2Ip>^%6Q=#@:VPE4>f&R1Hl710Jd-K4s2sF2`!-O%6Q=#@:h\G4>f&Q3''Id60Jd/l4s2sF2_no-%6Q=#@PL%h4>f&Q@m1>a0Jd/n4s2sF2_nu/%6Q=#@P^1j4>f&Q3Bdm70Jd/t4s2sF3B/iZ%6Q=#@Q?Up4>f,X3''Id60Jd0H4s2sF3B/fY%6Q=#@U_MD4>f,XA3LGb0Jd0J4s2sF3B&r^%6Q=#@UqYF4>f,Y1-Q.00Jd0L4s2sF3B/`W%6Q=#@l$:k4>gS-2*MI30Jd2q4s2sF@Q6A3%6Q=#@l6Fm4>gS[@6P,_0Jd2s4s2sF@kfl*%6Q=#@lHRo4>gV-3Bdm70Jd2u4s2sFA7T78%6Q=#@lZ^q4>g\(2EhR40Jd3I4s2sFAN)M2%6Q=#@q%VE4>g\/1d2@20Jd3K4s2sFAh[g\%6Q=#@q7bG4>g_*@Qk5`0Jd3M4s2sFAn3nc%6Q=#@qInI4>g_]2EhR40Jd5n4s2sG1,*9''%6Q=#A2?Cl4>nrL0Koq.0Jd5r4s2sG1,^pP%6Q=#A2QOn4>nrP@Qk5`0Jd5t4s2sG1,V$T%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8R%2a/?H2Dm9K4q0V.1LrI/+?VP>AN;p`4>8R%3BeQJ2Do&*4q0V.1Lt&\+?VP@0KD<+4>8R%Aj.>"2E*F&4q0V.1M&7(+?VP@1Gh9)4>8R&0g6^B2E*EH4q0V.1M&=*+?VP@1Gq?*4>8R&1HlpD2I\Er4q0V.1M&C,+?VPk2DdT,4>8R&2*N-F2I\US4q0V.1M&I.+?VPl0fD3)4>8R&2a/?H2IeUT4q0V.1M&O0+?VPl2)d].4>8R&3BeQJ2IeU)4q0V.1M(&[+?VPl2)%3''4>8R&A3M+u2IeU%4q0V.1M(,]+?VPl2DIB)4>8R&Aj.>"2IeUR4q0V.1M/C++?VS:2_[E)4>8R''1HlpD2_m7&4q0V.1M/I-+?VS<2.Sl[4>8R''2*N-F2`<U+4q0V.1M/O/+?VSkAiW$a4>8R''2a/?H2e+d&4q0V.1M/U1+?VSmAiMs`4>8R''3BeQJ2eFj(4q0V.1M1&Z+?VSp3+4u[4>8R''@Qkns2eHN04q0V.1M1,\+?VV;0JPa#4>8R''A3M+u3&!$B4q0V.1M12^+?VV;0Om9U4>8R''Aj.>"3&!''B4q0V.1b^UI+?VV;1G_3(4>8TG0g6^B3&!:''4q0V.1b^[K+?VV;3&s/34>8TG2*N-F3&+u#4q0V.1b^gO+?VV<ARRb34>8TG2a/?H3&,#$4q0V.1b^mQ+?VV<An+"64>8TG3BeQJ3&30t4q0V.1b`?%+?VV=0k*<U4>8TG@Qkns3&34#4q0V.1b`E''+?VV=2J#&]4>8TGA3M+u3&3EJ4q0V.1b`K)+?VV=2e>/^4>8TGAj.>"3&W[(4q0V.1bg[J+?VVC1b_*&4>8TH0g6^B3&ia)4q0V.1bgaL+?VVC2D[N+4>8TH1HlpD3&rp04q0V.1bggN+?VYB1,1s%4>8TH2*N-F1hAHu4q0V.1bgmP+?VJl@5pF[4>8TH2a/?H1hJRT4q0V.1bgsR+?VJm1hJo\4>8TH3BeQJ1hJR''4q0V.1biE&+?VJm2)d].4>8TH@Qkns1hJUV4q0V.1biK(+?VJm1Gh9)4>8THA3M+u1hJUS4q0V.1biQ*+?VJm2)RQ,4>8THAj.>"1hJNt4q0V.1bpgM+?VJm1LrZY4>8TI1HlpD1hJOP4q0V.1bpmO+?VJm1H7Q-4>8TI2*N-F1hJR#4q0V.1bpsQ+?VJm2)IK+4>8TI2a/?H1hJOR4q0V.1bq$S+?VJm1c@N,4>8TI3BeQJ1hJX%4q0V.1brK''+?VJm2.JfZ4>8TI@Qkns1hJX"4q0V.1brQ)+?VJm11i]Z4>8TIA3M+u1hJRU4q0V.1brW++?VJm1H%E+4>8TIAj.>"1hJU*4q0V.1c$gL+?VJm2.Sl[4>8TJ0g6^B1hJR(4q0V.1c$mN+?VJm2.8ZX4>8TJ1HlpD2)-pt4q0V.1c$sP+?VM91h&WX4>8TJ2*N-F2)-pu4q0V.1c%$R+?VM92`3c.4>8TJ3BeQJ2)6pE4q0V.1c&Q(+?VM:1,M0(4>8TJA3M+u2)6pH4q0V.1c&],+?VM:@:DD04>8TK0g6^B2)8TM4q0V.1c-sO+?VM;1,D*''4>8TK1HlpD2)@0I4q0V.1c.$Q+?VM;2`3c.4>8TK2*N-F2)I$u4q0V.1c.*S+?VM<11WQX4>8TK2a/?H2)I%!4q0V.1c.0U+?VM<1M&`Z4>8TK3BeQJ2)I''H4q0V.1c/W)+?VM<1hAi[4>8TK@Qkns2)I''I4q0V.1c/]++?VM<1c@N,ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0JkUs4s2sF1c.!P%6Q=$1hAin4>erO1Hl710JkUu4s2sF1c.0U%6Q=$2)%3:4>erP1-Q.00JkXA4s2sF1biH''%6Q=$2)7?<4>erN3Bdm70JkXC4s2sF1c/W)%6Q=$2)IK>4>erO3Bdm70JkXE4s2sF1c&T)%6Q=$2)[W@4>erO3''Id60JkXG4s2sF1brW+%6Q=$2.8Zk4>erN0Koq.0JkXr4s2sF1c&W*%6Q=$2.Jfm4>erP0Koq.0JkXt4s2sF1c$jM%6Q=$2.\ro4>erN@Qk5`0JkY!4s2sF1biT+%6Q=$2D@<;4>erN@m1>a0Jk[B4s2sF2J$;\%6Q=$2DRH=4>f$/0Koq.0Jk[D4s2sF2J"^/%6Q=$2DdT?4>f$.@Qk5`0Jk[F4s2sF2`+r,%6Q=$2E!`A4>f&T0g6%/0Jk[H4s2sF2`*3P%6Q=$2E3lC4>f&SA3LGb0Jk[J4s2sF2`*HW%6Q=$2IScl4>f&SANgPc0Jk[s4s2sF2`##/%6Q=$2Ieon4>f&T0Koq.0Jk[u4s2sF2`,,1%6Q=$2J#&p4>f&R@Qk5`0Jk\"4s2sF3+Z\c%6Q=$2_[E<4>f,TANgPc0Jk^C4s2sF3B:V6%6Q=$2_mQ>4>f,Z1-Q.00Jk^E4s2sF3FOm2%6Q=$2`*]@4>f,ZANgPc0Jk^G4s2sF3FO^-%6Q=$2`<iB4>f,Z3Bdm70Jk^I4s2sF3B8u]%6Q=$2`NuD4>f,YA3LGb0Jk^K4s2sF3FOa.%6Q=$2dnlm4>f,Z1Hl710Jk^t4s2sF3B1G2%6Q=$2e,#o4>f--2*MI30Jk_!4s2sF@Pq[[%6Q=$2e>/q4>gS*@m1>a0JkaD4s2sF@Q7j]%6Q=$3&3Z?4>gS-@Qk5`0JkaF4s2sF@Q7s`%6Q=$3&EfA4>gV(@m1>a0JkaJ4s2sF@l%^\%6Q=$3&j)E4>gV)ANgPc0Jkau4s2sF@lZA0%6Q=$3+G,p4>gV.@m1>a0Jkb"4s2sFA7]46%6Q=$3+Y8r4>g\(@m1>a0Jkb$4s2sFAN49c%6Q=$3A<W>4>g\02a.[50JkdE4s2sFAN4*^%6Q=$3ANc@4>g\^2a.[50JkdG4s2sFAhZ&*%6Q=$3A`oB4>g_*Aj-Yd0JkdI4s2sFAi;J0%6Q=$3As&D4>g_/1-Q.00JkdK4s2sFAiDY4%6Q=$3B02F4>g_03Bdm70JkdM4s2sFAn3kb%6Q=$3FP)o4>g_\@m1>a0Jke!4s2sFAn3ha%6Q=$3Fb5q4>g_\A3LGb0Jke#4s2sFAnEb]%6Q=$3FtAs4>g_^@Qk5`0Jke%4s2sFAnF"d%6Q=$@5''kf4>g_^@6P,_0Jm2m4s2sG1,1OJ%6Q=$@5:"h4>nrL0g6%/0Jm2o4s2sG1,q*S%6Q=$@5L.j4>nrT2a.[50Jm2q4s2sG1-%6V%6Q=$@5^:l4>nrS0Koq.0Jm2s4s2sG1,h*T%6Q=$@5pFn4>nrS3Bdm70Jm2u4s2sG1,`Z,%6Q=$@:;>B4>nrS@6P,_0Jm3I4s2sG1,i],%6Q=$@:MJD4>nrRANgPc0Jm3K4s2sG1,h3W%6Q=$@:_VF4>nrR1Hl710Jm3M4s2sG1-%*R%6Q=$@PBtg4>nrQAj-Yd0Jm5n4s2sG1-%<X%6Q=$@PU+i4>nrQANgPc0Jm5p4s2sG1-%3U%6Q=$@Pg7k4>nrT1Hl710Jm5r4s2sG1-%''Q%6Q=$@Q$Cm4>nrS2EhR40Jm5t4s2sG2)@6V%6Q=$@Q6Oo4>o&Q@Qk64DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b1h&I/+?VP>1H7Q-4>8U$@6Per2Do)$4q0V.1h''oX+?VP?Ai)[\4>8U$@m2"t2E*L*4q0V.1h/7(+?VP@2.JfZ4>8U%1-QgC2E*KO4q0V.1h/=*+?VP@2.\r\4>8U%1d3$E2E*HQ4q0V.1h/C,+?VP@1c@N,4>8U%2Ei6G2E*NJ4q0V.1h/I.+?VP@2)@E*4>8U%3''JHI2E*KP4q0V.1h/O0+?VPk2DmZ-4>8U%@6Per2I^0.4q0V.1h0uY+?VPl1bq6(4>8U%@m2"t2IeUU4q0V.1h1&[+?VPl3B9844>8U%ANh5!2Ie^$4q0V.1h8=)+?VPl3&Nl/4>8U&1-QgC2IeaV4q0V.1h8C++?VPl2IScY4>8U&1d3$E2Ie[S4q0V.1h8I-+?VPl3A<W+4>8U&2Ei6G2Ie["4q0V.1h8O/+?VPl3+G,]4>8U&3''JHI2IeX)4q0V.1h8U1+?VPl3As&14>8U&@6Per2Iea&4q0V.1h:&Z+?VPl2e5)]4>8U&@m2"t2Ie^&4q0V.1h:,\+?VPl2_mQ+4>8U&ANh5!2Ie[W4q0V.1h:2^+?VPl2`*]-4>8U''0KpUA2Ie^)4q0V.1hAC*+?VPl2`<i/4>8U''1-QgC2Ie^W4q0V.1hAI,+?VPl3A`o/4>8U''1d3$E2Iea,4q0V.1hAO.+?VPl3&3Z,4>8U''2Ei6G2_[0K4q0V.1hA[2+?VS:2`Nu14>8U''@6Per2_m9H4q0V.1hC,[+?VS<2DIB)4>8U''@m2"t2_m9F4q0V.1hC2]+?VS<@l-@Y4>8U''ANh5!2_nku4q0V.1hC8_+?VS=3As&14>8U(0KpUA2`3@#4q0V.1hJI++?VS?11EEV4>8U(1d3$E2`<WN4q0V.1hJU/+?VS@AS++84>8U(2Ei6G2`G;(4q0V.1hJ[1+?VSC@kg.V4>8U(3''JHI2`YA%4q0V.1hJa3+?VSC@V.e54>8U(@6Per2dnX''4q0V.1hL2\+?VSmAn!q54>8U(@m2"t2eFp)4q0V.1hL8^+?VV;3As&14>8U(ANh5!3&!?K4q0V.1hL>`+?VV;3Fk;_4>8WH0KpUA3&!?P4q0V.2)$aK+?VV;3FY/]4>8WH1-QgC3&!@$4q0V.2)$gM+?VV;@PU+V4>8WH1d3$E3&3C(4q0V.2)$mO+?VV=3ANc-4>8WH2Ei6G3&3I&4q0V.2)$sQ+?VV=3+P2^4>8WH3''JHI3&rs-4q0V.2)%$S+?VVDA26=X4>8WH@6Per3+4Kp4q0V.2)&K''+?VVn1H.K,4>8WH@m2"t3+Fd''4q0V.2)&Q)+?VVn2)RQ,4>8WHANh5!3+FsZ4q0V.2)&W++?VVo2DdT,4>8WI0KpUA3+Os%4q0V.2)-gL+?VVo@P^1W4>8WI1-QgC3+ZN-4q0V.2)-mN+?VVp@pqP14>8WI1d3$E3+b0[4q0V.2)-sP+?VVq@PBtT4>8WI2Ei6G3+cYU4q0V.2).$R+?VVq@l?L[4>8WI3''JHI3+cYX4q0V.2).*T+?VVq@l-@Y4>8WI@6Per2.U8Q4q0V.2)/Q(+?VY<3AE],4>8WI@m2"t3A=ks4q0V.2)/W*+?VY<@:;>/4>8WIANh5!3A=l"4q0V.2)/],+?VY<@5C(V4>8WJ0KpUA3AE?N4q0V.2)6mM+?VY=@l?L[4>8WJ1-QgC3AG#R4q0V.2)6sO+?VYB1GV-''4>8WJ1d3$E3ArX(4q0V.2)7$Q+?VYB1GM''&4>8WJ2Ei6G3ArX$4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=%1,hB>4?5;T@m1>a0JtUF4s2sEAMQ/-%6Q=%1-%N@4>^V,2EhR40JtUo4s2sEAN)D/%6Q=%11EEi4>^V/@Qk5`0JtUq4s2sEAN=3`%6Q=%11WQk4>^V0ANgPc0JtX?4s2sEAi=6b%6Q=%1GM''94>^Y1A3LGb0JtXA4s2sEAiO<b%6Q=%1G_3;4>^Y/1Hl710JtXC4s2sEAiF<c%6Q=%1Gq?=4>^Y.@m1>a0JtXE4s2sEAiX<a%6Q=%1H.K?4>^Y0@Qk5`0JtXG4s2sEAiM\4%6Q=%1H@WA4>^Y01Hl710JtXp4s2sEAiDD-%6Q=%1L`Nj4>^Y/2*MI30JtXr4s2sEAiMb6%6Q=%1LrZl4>^Y.3Bdm70JtXt4s2sEAiF0_%6Q=%1M/fn4>^Y12EhR40Jt[@4s2sEAiF9b%6Q=%1bh0:4>^Y0Aj-Yd0Jt[B4s2sEAiVS0%6Q=%1c%<<4>^Y/@6P,_0Jt[D4s2sF0f:dO%6Q=%1c7H>4>eiN1-Q.00Jt[F4s2sF0f:gP%6Q=%1cIT@4>eiO3Bdm70Jt[H4s2sF0fM$T%6Q=%1c[`B4>eiP2EhR40Jt[q4s2sF0fM''U%6Q=%1h&Wk4>ej&A3LGb0Jt[s4s2sF0kOr[%6Q=%1h8cm4>elM@Qk5`0Jt[u4s2sF1,CmR%6Q=%1hJoo4>elM2a.[50Jt^A4s2sF1,E?&%6Q=%2).9;4>elM0Koq.0Jt^C4s2sF1,<E)%6Q=%2)@E=4>elM2EhR40Jt^E4s2sF1,L^L%6Q=%2)RQ?4>em''ANgPc0Jt^G4s2sF11F]V%6Q=%2)d]A4>eoP1-Q.00Jt^I4s2sF1Gq!Q%6Q=%2*!iC4>eoP1Hl710Jt^r4s2sF1GpmN%6Q=%2.A`l4>eoQ2EhR40Jt_"4s2sF1LrC-%6Q=%2D@<;4>ep*1d2@20JtaC4s2sF1LrF.%6Q=%2DRH=4>erS1Hl710JtaE4s2sF1cI9U%6Q=%2DdT?4>erU2EhR40JtaG4s2sF1cIBX%6Q=%2E!`A4>erU2*MI30JtaI4s2sF1cR0Q%6Q=%2E3lC4>erS@Qk5`0JtaK4s2sF1cI?W%6Q=%2IScl4>erT1d2@20Jtat4s2sF1c[<T%6Q=%2Ieon4>erT2EhR40Jtb!4s2sF1cJo.%6Q=%2J#&p4>erU0Koq.0Jtb#4s2sF1cI-Q%6Q=%2_[E<4>erS2EhR40JtdD4s2sF1cSu/%6Q=%2_mQ>4>erU@6P,_0JtdF4s2sF1c@*Q%6Q=%2`*]@4>erR3''Id60JtdH4s2sF1cSr.%6Q=%2`<iB4>erSA3LGb0JtdJ4s2sF1cT&1%6Q=%2`NuD4>f$/@6P,_0JtdL4s2sF2`NTW%6Q=%2dnlm4>f&V2a.[50Jtdu4s2sF2`>).%6Q=%2e,#o4>f&U3Bdm70Jte"4s2sF2`<BS%6Q=%2e>/q4>f&U2EhR40Jte$4s2sF2`<KV%6Q=%3&!N=4>f&V@m1>a0JtgE4s2sF3AG#-%6Q=%3&3Z?4>f,U3Bdm70JtgI4s2sF3A`QV%6Q=%3&WrC4>f,V1d2@20JtgK4s2sF3FZP`%6Q=%3&j)E4>f-.@Qk5`0JtgM4s2sF3Fjs1%6Q=%3+4un4>f-.3Bdm70Jth!4s2sF3FQJ_%6Q=%3+G,p4>f-00g6%/0Jth#4s2sF3Fas2%6Q=%3+Y8r4>f-00Koq.0Jth%4s2sF3FcS`%6Q=%3A<W>4>f-/@Qk5`0JtjF4s2sF3Fjp0%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8WQ1-QgC2*#/T4q0V.2*!HV+?VMA@:h\44>8WQ1d3$E2*#,%4q0V.2*!NX+?VMAA26=X4>8WQ2Ei6G2*#/(4q0V.2*!TZ+?VMj2.f#]4>8WQ3''JHI2.AI#4q0V.2*!Z\+?VMj2D[N+4>8WQ@6Per2.AR)4q0V.2*#,0+?VMj3FP)\4>8WQ@m2"t2.AR*4q0V.2*#22+?VMj3Fb5^4>8WQANh5!2.AR+4q0V.2*#84+?VMj3FY/]4>8X$0KpUA2.J@L4q0V.2.84''+?VMk1cRZ.4>8X$1d3$E2.L)S4q0V.2.8@++?VMk@50qT4>8X$2Ei6G2.L)T4q0V.2.8F-+?VMk@6$L\4>8X$3''JHI2.L''(4q0V.2.8L/+?VMk@PL%U4>8X$@6Per2.L)O4q0V.2.9rX+?VMm0fV?+4>8X$@m2"t2.\LN4q0V.2.:#Z+?VMm0fD3)4>8X$ANh5!2.\L"4q0V.2.:)\+?VMm0k*<U4>8X%0KpUA2.\Ks4q0V.2.A:(+?VMm2`Nu14>8X%1-QgC2.\dV4q0V.2.A@*+?VMm3B'',24>8X%1d3$E2.\dX4q0V.2.AL.+?VMmAi;g^4>8X%@6Per2.eU(4q0V.2.C)[+?VMn2eG5_4>8X%ANh5!2.edW4q0V.2.C/]+?VMnA7Rk54>8X&0KpUA2.gDR4q0V.2.J@)+?VMnAn4(74>8X&1-QgC2.gGX4q0V.2.JF++?VMnAnF494>8X&1d3$E2D?gs4q0V.2.JL-+?VP90f2''''4>8X&2Ei6G2D?mu4q0V.2.JR/+?VP91Gq?*4>8X&3''JHI2D?jD4q0V.2.JX1+?VP911<?U4>8X&@6Per2D?jC4q0V.2.L)Z+?VP91,1s%4>8X&@m2"t2D?mF4q0V.2.L/\+?VP91-%N-4>8X&ANh5!2D?mq4q0V.2.L5^+?VP90k*<U4>8X''0KpUA2DR!F4q0V.2.SF*+?VP;0f;-(4>8X''1-QgC2DR(#4q0V.2.SL,+?VP;1M&`Z4>8X''1d3$E2DR*C4q0V.2.SR.+?VP;2eG5_4>8X''2Ei6G2DSc&4q0V.2.SX0+?VP;@q.\34>8X''3''JHI2DSc!4q0V.2.S^2+?VP;@V.e54>8X''@6Per2DSbt4q0V.2.U/[+?VP;@Q?U]4>8X''@m2"t2DSeu4q0V.2.U5]+?VP;A7@_34>8X''ANh5!2DS]M4q0V.2.\L++?VP;@q%V24>8X(1-QgC2DSc%4q0V.2.\R-+?VP;@5pF[4>8X(1d3$E2DS`P4q0V.2.\X/+?VP;@UhS24>8X(2Ei6G2DSes4q0V.2.\^1+?VP;A2ug_4>8X(3''JHI2DSc$4q0V.2.\d3+?VP;@q7b44>8X(@6Per2DS`!4q0V.2.^5\+?VP;A77Y24>8X(@m2"t2DS_r4q0V.2.^;^+?VP;A2la^4>8X)0KpUA2DSc#4q0V.2.eR,+?VP;@:MJ14>8X)1-QgC2DScR4q0V.2.eX.+?VP>1M&`Z4>8X)1d3$E2Dno%4q0V.2.e^0+?VP>@UhS24>8X)2Ei6G2Do)T4q0V.2.ed2+?VP?0f2''''4>8X)3''JHI2E!9G4q0V.2.ej4+?VP?0Om9U4>8X)@6Per2E!6I4q0V.2.g;]+?VP?0JYg$4>8X)@m2"t2E!7#4q0V.2.gA_+?VP?0JG["4>8X)ANh5!2E!7$4q0V.2.gGa+?VP?0f;-(4>8ZI0KpUA2E!6t4q0V.2D?jL+?VP?0K20)ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0K(U?4s2sG2_\c+%6Q=&0Jbm84>o,P@Qk5`0K(UA4s2sG2`>21%6Q=&0Ju$:4>o,X@Qk5`0K(UC4s2sG2`W`Z%6Q=&0K20<4>o,W0g6%/0K(UE4s2sG2`YA3%6Q=&0KD<>4>o,W1Hl710K(Un4s2sG2`EZZ%6Q=&0Od3g4>o,X2a.[50K(Up4s2sG2`YD4%6Q=&0P!?i4>o,Y2a.[50K(X>4s2sG2`G>4%6Q=&0ekj74>o,X3Bdm70K(X@4s2sG2`G;3%6Q=&0f)!94>o,Y0Koq.0K(XB4s2sG2`ETX%6Q=&0f;-;4>o,Y@6P,_0K(XD4s2sG2`WZX%6Q=&0fM9=4>o,W@m1>a0K(XF4s2sG2`>).%6Q=&0f_E?4>o,W1-Q.00K(Xo4s2sG@PT`''%6Q=&0k<Hj4>pY-Aj-Yd0K(Xs4s2sG@kfc''%6Q=&0kNTl4>p\(@Qk5`0K([?4s2sG@q@G[%6Q=&1,1s84>p\\3''Id60K([A4s2sG@qIM\%6Q=&1,D*:4>p\Y0g6%/0K([C4s2sG@q0"4%6Q=&1,V6<4>p\\2*MI30K([E4s2sG@q%5X%6Q=&1-%N@4>p\Y@m1>a0K([p4s2sG@q@DZ%6Q=&11EEi4>p\X@Qk5`0K([r4s2sG@q7G\%6Q=&11WQk4>p\[1Hl710K([t4s2sG@q%D]%6Q=&11i]m4>p\Z1d2@20K(^@4s2sG@q%G^%6Q=&1GM''94>p\Z0g6%/0K(^B4s2sG@prq4%6Q=&1G_3;4>p\[2a.[50K(^D4s2sG@q.A[%6Q=&1Gq?=4>p\]0g6%/0K(^F4s2sG@q''%6%6Q=&1H.K?4>p\Y@Qk5`0K(^H4s2sG@q@AY%6Q=&1H@WA4>p\[@Qk5`0K(^q4s2sG@q/q2%6Q=&1L`Nj4>p\X@m1>a0K(^s4s2sG@qB79%6Q=&1LrZl4>p\[@m1>a0K(^u4s2sG@q7J]%6Q=&1M/fn4>p\\0Koq.0K(aA4s2sH0KD!S%6Q=&1bh0:4?"rRANgPc0K(aC4s2sH0KCmP%6Q=&1c%<<4?"rR@6P,_0K(aE4s2sH0KD-W%6Q=&1cIT@4?##O3''Id60K(aI4s2sH1,LsS%6Q=&1c[`B4?##R2a.[50K(ar4s2sH1,_-V%6Q=&1h&Wk4?#$*0Koq.0K(at4s2sH11OlZ%6Q=&1h8cm4?#$+3Bdm70K(b!4s2sH11W=-%6Q=&1hJoo4?#$+0Koq.0K(dB4s2sH1LW:-%6Q=&2).9;4?#'')3''Id60K(dD4s2sH1HB&2%6Q=&2)@E=4?#'')@Qk5`0K(dF4s2sH1LW.)%6Q=&2)RQ?4?#,RA3LGb0K(dH4s2sH2*#22%6Q=&2*!iC4?#/X1d2@20K(ds4s2sH2IeL+%6Q=&2.A`l4?#011-Q.00K(du4s2sH2J+d0%6Q=&2.Sln4?#312*MI30K(e"4s2sH2eHSa%6Q=&2.f#p4?#8VANgPc0K(gE4s2sH3Fb''5%6Q=&2D[N>4?#913''Id60K(gG4s2sH@5hUY%6Q=&2DmZ@4?$\-3Bdm70K(gI4s2sH@:iq3%6Q=&2E*fB4?$b^ANgPc0K(gK4s2sHAi2D/%6Q=&2E<rD4?$k3@m1>a0K(gt4s2sHAiO6`%6Q=&2I\im4?,#K2*MI30K(h!4s2sI0OeHS%6Q=&2Inuo4?,$''2*MI30K(h#4s2sI0OZ_#%6Q=&2J,,q4?,$(0g6%/0K(jD4s2sI0OZ\"%6Q=&2_dK=4?,$''@Qk64DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b2E*BT+?VV;@6$L\4>8ZP1HlpD3&"eu4q0V.2E*HV+?VV;@:;>/4>8ZP2*N-F3&"cQ4q0V.2E*NX+?VV<AMlX\4>8ZP2a/?H3&,#V4q0V.2E*TZ+?VV=0P!?V4>8ZP3BeQJ3&4r!4q0V.2E,&.+?VV=3Fk;_4>8ZP@Qkns3&3KS4q0V.2E,,0+?VV=@:VP24>8ZPA3M+u3&4rR4q0V.2E,22+?VV=3G(Ga4>8ZPAj.>"3&4r''4q0V.2E3BS+?VV=@PL%U4>8ZQ0g6^B3&4oP4q0V.2E3HU+?VV=@5U4X4>8ZQ1HlpD3&4oS4q0V.2E3NW+?VV=@Q6O\4>8ZQ2*N-F3&4nu4q0V.2E3TY+?VV=@PBtT4>8ZQ2a/?H3&4rS4q0V.2E3Z[+?VV=@Q-I[4>8ZQ3BeQJ3&WU)4q0V.2E5,/+?VVA2_dK*4>8ZQ@Qkns2)6ms4q0V.2E521+?VVC2E3l04>8ZQA3M+u3+ZT/4q0V.2E583+?VVq@q@h54>8ZQAj.>"3+c\X4q0V.2E<HT+?VVqA2-7W4>8ZR0g6^B3A=o"4q0V.2E<NV+?VY<@Q6O\4>8ZR1HlpD3A=ns4q0V.2E<TX+?VY<@Q$CZ4>8ZR2*N-F3AG#&4q0V.2E<ZZ+?VY=A2-7W4>8ZR2a/?H3Ai`S4q0V.2E<`\+?VYA3&!N*4>8ZR3BeQJ3ArU%4q0V.2E>20+?VYB1b_*&4>8ZR@Qkns3Ar[*4q0V.2E>82+?VYB1L`NW4>8ZRA3M+u3Ar]N4q0V.2E>>4+?VYB1bq6(4>8ZRAj.>"3At>,4q0V.2IS:''+?VYBAN2j_4>8[%0g6^B3B&fN4q0V.2IS@)+?VYC2.\r\4>8[%1HlpD1hA[Z4q0V.2ISL-+?VJmAMH@X4>8[%2a/?H1hL2S4q0V.2ISR/+?VJm@:h\44>8[%3BeQJ1hL3/4q0V.2IU#X+?VJmAM?:W4>8[%@Qkns1hL8Q4q0V.2IU)Z+?VJm@qIn64>8[%A3M+u1hL9/4q0V.2IU/\+?VJm@l$:X4>8[%Aj.>"1hL2T4q0V.2I\@(+?VJmA2la^4>8[&0g6^B1hL914q0V.2I\F*+?VJm@pqP14>8[&1HlpD1hL8W4q0V.2I\L,+?VJm@:_V34>8[&2*N-F1hL8P4q0V.2I\R.+?VJm@l-@Y4>8[&2a/?H1hL5Q4q0V.2I\X0+?VJmA77Y24>8[&3BeQJ1hL6/4q0V.2I^)Y+?VJmA7[q64>8[&@Qkns1hL2U4q0V.2I^/[+?VM92)d].4>8[&A3M+u2).*H4q0V.2I^5]+?VM93AE],4>8[&Aj.>"2)/Mn4q0V.2IeF)+?VM:1hAi[4>8[''0g6^B2)7!E4q0V.2IeL++?VM:1grQW4>8[''1HlpD2)7"!4q0V.2IeR-+?VM:1h/]Y4>8[''2*N-F2)7!t4q0V.2IeX/+?VM:1cIT-4>8[''2a/?H2)8Z#4q0V.2Ie^1+?VM:@lZ^^4>8[''3BeQJ2)8Yt4q0V.2Ig/Z+?VM:@kg.V4>8[''@Qkns2)?ps4q0V.2Ig5\+?VM;2)d].4>8[''A3M+u2)@1#4q0V.2Ig;^+?VM;3FP)\4>8[''Aj.>"2)AcP4q0V.2InL*+?VM<@:MJ14>8[(0g6^B2)Jes4q0V.2InR,+?VM<@5pF[4>8[(1HlpD2)JfS4q0V.2InX.+?VM<@lZ^^4>8[(2*N-F2)Jc%4q0V.2In^0+?VM<@5^:Y4>8[(2a/?H2)Jbu4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=&A2laq4>es*2a.[50K*H%4s2sF1h/:)%6Q=&A77YE4>es)A3LGb0K*HN4s2sF1gsfV%6Q=&A7IeG4>es*0g6%/0K*HP4s2sF1h/@+%6Q=&A7[qI4>es*3''Id60K*HR4s2sF1gsu[%6Q=&AM?:j4>es(@Qk5`0K*Js4s2sF1h&1''%6Q=&AMQFl4>es)@Qk5`0K*Ju4s2sF1grC.%6Q=&AMcRn4>es(2a.[50K*K"4s2sF1h(&\%6Q=&AMu^p4>f$/Aj-Yd0K*K$4s2sF2`NQV%6Q=&AN2jr4>f&W@Qk5`0K*K&4s2sF2dnC(%6Q=&ARRbF4>f''+1Hl710K*KO4s2sF2dnI*%6Q=&ARdnH4>f''-ANgPc0K*KQ4s2sF2dp8]%6Q=&AS"%J4>f&X1Hl710K*KS4s2sF3AiZX%6Q=&AhZCk4>f,V0g6%/0K*Mt4s2sF3Ab>3%6Q=&AhlOm4>f,UANgPc0K*N!4s2sF3AiKS%6Q=&Ai)[o4>f-0@m1>a0K*N#4s2sF3Fk*5%6Q=&Ai;gq4>f-2Aj-Yd0K*N%4s2sF3Ft!1%6Q=&AiMss4>f-13''Id60K*N''4s2sF@5''K$%6Q=&AmmkG4>f-12*MI30K*NP4s2sF3FuV_%6Q=&An+"I4>f-0@6P,_0K*NR4s2sF3Ft*4%6Q=&An=.K4>gP$0g6%/0K*NT4s2sF3G)_a%6Q=''0JG[54>gS+3Bdm70K1[?4s2sF@UV&V%6Q=''0JYg74>gSV2EhR40K1[A4s2sF@UV)W%6Q=''0Jks94>gSV1-Q.00K1[C4s2sF@UV,X%6Q=''0K)*;4>gV&0g6%/0K1[G4s2sF@l.^[%6Q=''0O[-f4>gV*@Qk5`0K1[p4s2sF@q7S`%6Q=''0Om9h4>gVZ1-Q.00K1[r4s2sFA7dba%6Q=''0P*Ej4>g\)A3LGb0K1[t4s2sFAMQ,,%6Q=''0ebd64>g\)Aj-Yd0K1^@4s2sFAN+-`%6Q=''0etp84>g\Y0Koq.0K1^B4s2sFARRJ\%6Q=''0f2'':4>g\^@6P,_0K1^D4s2sFAhZ2.%6Q=''0fD3<4>g_+A3LGb0K1^F4s2sFAi;M1%6Q=''0fV?>4>g_13''Id60K1^H4s2sFAiMY3%6Q=''0k3Bi4>g_12a.[50K1^s4s2sFAiO9a%6Q=''0kENk4>g_13Bdm70K1^u4s2sG0JP=H%6Q=''1,(m74>nlJA3LGb0K1aA4s2sG0JY=G%6Q=''1,;$94>nlK2*MI30K1aC4s2sG0JI''%%6Q=''1,M0;4>nlK3''Id60K1aE4s2sG0Jm<(%6Q=''1,_<=4>nlP0Koq.0K1aG4s2sG0K(mS%6Q=''1,qH?4>nlO1-Q.00K1aI4s2sG0Jk[O%6Q=''11<?h4>nlM1Hl710K1ar4s2sG0K*E)%6Q=''11NKj4>nlO@Qk5`0K1at4s2sG0K*?''%6Q=''11`Wl4>nlO1d2@20K1b!4s2sG1,L^L%6Q=''1GD!84>ns*@m1>a0K1dB4s2sG1GLdO%6Q=''1GV-:4>nuL3Bdm70K1dD4s2sG11k#[%6Q=''1Gh9<4>ns+A3LGb0K1dF4s2sG1GCOI%6Q=''1H%E>4>ns+ANgPc0K1dH4s2sG11k&\%6Q=''1H7Q@4>nuL2a.[50K1dJ4s2sG11i7)%6Q=''1LWHi4>ns,2a.[50K1ds4s2sG11b&]%6Q=''1LiTk4>ns+@m1>a0K1du4s2sG11k)]%6Q=''1M&`m4>ns,1d2@20K1e"4s2sG1GLUJ%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8]N0KpUA2D[$B4q0V.2`*6Q+?VP>1M/f[4>8]N1-QgC2Dm<K4q0V.2`*<S+?VP>@:DD04>8]N1d3$E2DnrS4q0V.2`*BU+?VP>AMQFY4>8]N2Ei6G2E!<J4q0V.2`*HW+?VP?11WQX4>8]N3''JHI2E!<E4q0V.2`*NY+?VP?1,hB+4>8]N@6Per2E!=&4q0V.2`+u-+?VP?0kNTY4>8]N@m2"t2E!<M4q0V.2`,&/+?VP?1GM''&4>8]NANh5!2E!<I4q0V.2`,,1+?VP?AiDm_4>8]O0KpUA2E,5[4q0V.2`3<R+?VP@A2?CY4>8]O1-QgC2E,5&4q0V.2`3BT+?VP@A2HIZ4>8]O1d3$E2E,/#4q0V.2`3HV+?VP@ARdn54>8]O2Ei6G2E,)''4q0V.2`3NX+?VP@@:h\44>8]O3''JHI2E,5*4q0V.2`3TZ+?VP@AN;p`4>8]O@6Per2E,2Z4q0V.2`5&.+?VP@@l-@Y4>8]O@m2"t2E,/$4q0V.2`5,0+?VP@@Pg7X4>8]OANh5!2E,/T4q0V.2`522+?VP@AMlX\4>8]P0KpUA2E,))4q0V.2`<BS+?VP@@qIn64>8]P1-QgC2E,/X4q0V.2`<HU+?VP@AhuU[4>8]P1d3$E2E,)!4q0V.2`<NW+?VP@A2ug_4>8]P2Ei6G2E,2&4q0V.2`<TY+?VP@A7Rk54>8]P3''JHI2E,/%4q0V.2`<Z[+?VPk2IScY4>8]P@6Per2I\X%4q0V.2`>,/+?VPk3&Wr04>8]P@m2"t2I^,Q4q0V.2`>21+?VPkA26=X4>8]PANh5!2I^2U4q0V.2`>83+?VPl0kNTY4>8]Q0KpUA2Ig5W4q0V.2`EHT+?VPm0Od3T4>8]Q1-QgC2InU!4q0V.2`ENV+?VPm11<?U4>8]Q1d3$E2InX!4q0V.2`ETX+?VPm1,V6)4>8]Q2Ei6G2InLO4q0V.2`EZZ+?VPm1GM''&4>8]Q3''JHI2InOR4q0V.2`E`\+?VPm0fM9*4>8]Q@6Per2InUQ4q0V.2`G82+?VPm1H%E+4>8]QANh5!2InOO4q0V.2`G>4+?VPlAi2a]4>8]R0KpUA2InU(4q0V.2`NNU+?VPm1,hB+4>8]R1-QgC2InU''4q0V.2`NTW+?VPm1-%N-4>8]R1d3$E2InRS4q0V.2`NZY+?VPm1Gq?*4>8]R2Ei6G2InLQ4q0V.2`N`[+?VPm11EEV4>8]R3''JHI2_\ZL4q0V.2`Nf]+?VS:@UVG04>8]R@6Per2_\\s4q0V.2`P81+?VS:@:MJ14>8]R@m2"t2_\ZP4q0V.2`P>3+?VS:@:VP24>8]RANh5!2_\]#4q0V.2`PD5+?VS:@:_V34>8]S0KpUA2_\Ys4q0V.2`WTV+?VS<1GD!%4>8]S1-QgC2_m<I4q0V.2`WZX+?VS<2J,,^4>8]S1d3$E2_m<K4q0V.2`W`Z+?VS<AN;p`4>8]S3''JHI2`"o%4q0V.2`Wl^+?VS=@pqP14>8]S@6Per2`"oP4q0V.2`Y>2+?VS=@PU+V4>8]S@m2"t2`"rS4q0V.2`YD4+?VS=@k^(U4>8]SANh5!2`"o!4q0V.2`YJ6+?VS?0k!6T4>8^&0KpUA2`3@$4q0V.2dnF)+?VS?1hJo\4>8^&1-QgC2`3F%4q0V.2dnL++?VS?1hAi[4>8^&1d3$E2`3F$4q0V.2dnR-+?VS?@:DD04>8^&@6Per2`<TS4q0V.2dp8]+?VS@@lQX]ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0K3EP4s2sH2IeX/%6Q=''@PBtg4?#0.1Hl710K3Gq4s2sH2IeU.%6Q=''@PU+i4?#2Q0g6%/0K3Gs4s2sH2J+s5%6Q=''@Pg7k4?#013''Id60K3Gu4s2sH2_[6U%6Q=''@Q$Cm4?#2Q@Qk5`0K3H"4s2sH2J-Ma%6Q=''@Q6Oo4?#01@m1>a0K3H$4s2sH2_[0S%6Q=''@UVGC4?#30@m1>a0K3HM4s2sH3&!*O%6Q=''@UhSE4?#5S1d2@20K3HQ4s2sH3A`WX%6Q=''@k^(h4?#8W3Bdm70K3Jr4s2sH3A`]Z%6Q=''@kp4j4?#8W2a.[50K3K#4s2sH3FcM^%6Q=''@lQXp4?$\-Aj-Yd0K3K%4s2sH@5ou*%6Q=''@pqPD4?$\\Aj-Yd0K3KN4s2sH@:j%6%6Q=''@q.\F4?$b/A3LGb0K3KP4s2sHA2#c&%6Q=''@q@hH4?$e)2*MI30K3KR4s2sHA2#]$%6Q=''A2$1i4?$e)3Bdm70K3Ms4s2sHA2#r+%6Q=''A26=k4?$e)1d2@20K3Mu4s2sHA2#o*%6Q=''A2HIm4?$k.3''Id60K3N"4s2sHAiO?c%6Q=''A2ZUo4?$k]Aj-Yd0K3N$4s2sI0JP7F%6Q=''A2laq4?,#KA3LGb0K3N&4s2sI0JP:G%6Q=''A77YE4?,#N2EhR40K3NO4s2sI0P!(*%6Q=''A7IeG4?,$+2*MI30K3NQ4s2sI0P"TU%6Q=''AM?:j4?,$)@m1>a0K3Pt4s2sI0P)t&%6Q=''AMQFl4?,$*@Qk5`0K3Q!4s2sI0OnZX%6Q=''AMcRn4?,$*ANgPc0K3Q#4s2sI0P*()%6Q=''AMu^p4?,$*A3LGb0K3Q%4s2sI0kN7+%6Q=''AN2jr4?,)O1-Q.00K3Q''4s2sI11`C.%6Q=''ARRbF4?,,N1Hl710K3QP4s2sI1GC[M%6Q=''ARdnH4?,*-1Hl710K3QR4s2sI11XiX%6Q=''AS"%J4?,*-2EhR40K3QT4s2sI1GCXL%6Q=''AhZCk4?,*-2*MI30K3Su4s2sI1GCRJ%6Q=''AhlOm4?,,N3Bdm70K3T"4s2sI11W.(%6Q=''Ai)[o4?,*,2a.[50K3T$4s2sI11i7)%6Q=''Ai;gq4?,,N0g6%/0K3T&4s2sI11XlY%6Q=''AiMss4?,*,1d2@20K3T(4s2sI11W+''%6Q=''AmmkG4?,*,ANgPc0K3TQ4s2sI11W1)%6Q=''An+"I4?,*,Aj-Yd0K3TS4s2sI11b&]%6Q=''An=.K4?,,N2EhR40K3TU4s2sI2Dm0P%6Q=(0JG[54?,5X3Bdm70K:a@4s2sI2E,)/%6Q=(0JYg74?,5X@6P,_0K:aB4s2sI3&G/0%6Q=(0Jks94?,;Y@Qk5`0K:aD4s2sI3B/`W%6Q=(0K)*;4?,?31d2@20K:aF4s2sI@5''Z)%6Q=(0O[-f4?-h2ANgPc0K:aq4s2sI@pq&T%6Q=(0Om9h4?-k11d2@20K:as4s2sIA2c;.%6Q=(0P*Ej4?-k\1d2@20K:au4s2sIARf77%6Q=(0ebd64?-n^@m1>a0K:dA4s2sIAnE_\%6Q=(0etp84?-qa2EhR40K:dC4s2sIAn<_]%6Q=(0f2'':4?-qa@6P,_0K:dE4s2sIAn<h`%6Q=(0fD3<4?-qaA3LGb0K:dG4s2sIAn>F8%6Q=(0fV?>4?-qa1d2@20K:dI4s2sIAn<qc%6Q=(0k!6g4?5**@6P,_0K:dr4s2sJ0OnZX%6Q=(0k3Bi4?5**0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b3&+r-+?VY<@l$:X4>8`LANh5!3AE@"4q0V.3&,#/+?VY=1grQW4>8`M0KpUA3AG#S4q0V.3&33P+?VYA3&3Z,4>8`M1-QgC3Ar`K4q0V.3&3BU+?VYC2DRH*4>8`M2a/?H3B&iV4q0V.3&3HW+?VYC@q%V24>8`M3BeQJ3B(M[4q0V.3&4o++?VYCAhuU[4>8`M@Qkns3B/]I4q0V.3&4u-+?VYD@5pF[4>8`MA3M+u3B1PY4q0V.3&5&/+?VYDA7e"74>8`MAj.>"3B9)X4q0V.3&<6P+?VYE3B9844>8`N0g6^B1hAO(4q0V.3&<<R+?VJl@P^1W4>8`N2*N-F2)$dA4q0V.3&<HV+?VJmAS++84>8`N2a/?H2)$dD4q0V.3&<NX+?VM81,V6)4>8`N3BeQJ1hL>Z4q0V.3&=u,+?VM81-%N-4>8`N@Qkns2)$aC4q0V.3&>&.+?VM80K)*(4>8`NA3M+u2)$gr4q0V.3&>,0+?VM80kNTY4>8`NAj.>"2)$an4q0V.3&E<Q+?VM80etp%4>8`O0g6^B2)$a>4q0V.3&EBS+?VJmAmmk44>8`O1HlpD2)$^<4q0V.3&EHU+?VM80f2''''4>8`O2*N-F2)$dF4q0V.3&ENW+?VJmAhcIY4>8`O2a/?H2)$d?4q0V.3&ETY+?VM80Od3T4>8`O3BeQJ2)$aF4q0V.3&G&-+?VM80fV?+4>8`O@Qkns1hL>U4q0V.3&G,/+?VJmAS"%74>8`OA3M+u2)$dr4q0V.3&G21+?VM811<?U4>8`OAj.>"1hL?24q0V.3&NBR+?VM811EEV4>8`P0g6^B2)$^E4q0V.3&NHT+?VM92e,#\4>8`P2*N-F2)/Mp4q0V.3&NTX+?VM9@q7b44>8`P2a/?H2)/TN4q0V.3&NZZ+?VM9@l?L[4>8`P3BeQJ2)/TM4q0V.3&P,.+?VM:2)[W-4>8`P@Qkns2)7%!4q0V.3&P20+?VM:2)IK+4>8`PA3M+u2)7$u4q0V.3&P82+?VM:2.Sl[4>8`PAj.>"2)@!r4q0V.3&WHS+?VM;2eG5_4>8`Q0g6^B2)@7)4q0V.3&WNU+?VM;3Fk;_4>8`Q1HlpD2)AcT4q0V.3&WTW+?VM<AN2j_4>8`Q2*N-F2)R*B4q0V.3&WZY+?VM=0JPa#4>8`Q2a/?H2)R0K4q0V.3&W`[+?VM<An+"64>8`Q3BeQJ2)Jl%4q0V.3&Y2/+?VM<AhlOZ4>8`Q@Qkns2)R''G4q0V.3&Y81+?VM<Ammk44>8`QA3M+u2)R*F4q0V.3&Y>3+?VM<AN;p`4>8`QAj.>"2)JlT4q0V.3&`NT+?VM<AMH@X4>8`R0g6^B2)R''J4q0V.3&`TV+?VM<AS"%74>8`R1HlpD2)JlQ4q0V.3&`ZX+?VM<AMu^]4>8`R2*N-F2)R-J4q0V.3&``Z+?VM=0K20)4>8`R2a/?H2)JoU4q0V.3&`f\+?VM=0P3KX4>8`R@Qkns2)f##4q0V.3&b>2+?VM?A2HIZ4>8`RA3M+u2)f#S4q0V.3&bD4+?VM?@l$:X4>8`RAj.>"2)m9M4q0V.3&iTU+?VMA0P3KX4>8`S1HlpD2*!O&4q0V.3&i`Y+?VMi0ekj$4>8`S2*N-F2.84!4q0V.3&if[+?VMi0k3BV4>8`S2a/?H2.84O4q0V.3&il]+?VMi0k*<U4>8`S3BeQJ2.83q4q0V.3&k>1+?VMAARdn54>8`S@Qkns2.86o4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=(3+G,p4>gP&1Hl710K;%&4s2sF@59i,%6Q=(3+Y8r4>gP&2*MI30K;%(4s2sF@5)1T%6Q=(3A<W>4>gP$3Bdm70K;''I4s2sF@Q%[Z%6Q=(3ANc@4>gV+3''Id60K;''K4s2sF@U_#T%6Q=(3A`oB4>gSW1Hl710K;''M4s2sF@U_5Z%6Q=(3As&D4>gSW1d2@20K;''O4s2sF@UWh3%6Q=(3B02F4>gSW2*MI30K;''Q4s2sF@U_>]%6Q=(3FP)o4>gSW3''Id60K;(%4s2sF@k]`''%6Q=(3Fb5q4>gV+0g6%/0K;(''4s2sF@l6,-%6Q=(3FtAs4>gV+0Koq.0K;()4s2sF@qB17%6Q=(@5''kf4>gV\A3LGb0K<Jq4s2sF@qK16%6Q=(@5:"h4>gV[@6P,_0K<Js4s2sF@q@V`%6Q=(@5L.j4>gV\0Koq.0K<Ju4s2sF@qIV_%6Q=(@5^:l4>gY''0g6%/0K<K"4s2sF@qIP]%6Q=(@5pFn4>gY\ANgPc0K<K$4s2sFAMRd[%6Q=(@:;>B4>g\*@Qk5`0K<KM4s2sFART%3%6Q=(@:MJD4>g\YA3LGb0K<KO4s2sFARRM]%6Q=(@:_VF4>g_,0g6%/0K<KQ4s2sFAiVV1%6Q=(@PBtg4>g_20g6%/0K<Mr4s2sFAiVP/%6Q=(@PU+i4>nlN3Bdm70K<Mt4s2sG0K(^N%6Q=(@Pg7k4>nlO2*MI30K<N!4s2sG0JtOJ%6Q=(@Q$Cm4>nlN2*MI30K<N#4s2sG0K*H*%6Q=(@Q6Oo4>nlO3Bdm70K<N%4s2sG0K*N,%6Q=(@UVGC4>nlQ1d2@20K<NN4s2sG0KE`/%6Q=(@UhSE4>nlR@6P,_0K<NP4s2sG0K<T,%6Q=(@V%_G4>nlR1d2@20K<NR4s2sG0K<Q+%6Q=(@k^(h4>nlQ2*MI30K<Ps4s2sG0KD$T%6Q=(@kp4j4>nrO2a.[50K<Pu4s2sG11i=+%6Q=(@l-@l4>nuL3''Id60K<Q"4s2sG11k,^%6Q=(@l?Ln4>nuPANgPc0K<Q$4s2sG1G`T+%6Q=(@lQXp4>nuNAj-Yd0K<Q&4s2sG1Gq$R%6Q=(@pqPD4>nuP1-Q.00K<QO4s2sG1Gh!R%6Q=(@q.\F4>nuPAj-Yd0K<QQ4s2sG1Gh*U%6Q=(@q@hH4>nuO@6P,_0K<QS4s2sG1GpjM%6Q=(A2$1i4>nuOA3LGb0K<T!4s2sG1GUpR%6Q=(A2HIm4>nuPA3LGb0K<T#4s2sG1GiT*%6Q=(A2laq4>o&W3Bdm70K<T''4s2sG2.J@)%6Q=(A77YE4>o'',2*MI30K<TP4s2sG2Dd0Q%6Q=(A7IeG4>o)S3Bdm70K<TR4s2sG2Df#0%6Q=(A7[qI4>o)S1Hl710K<TT4s2sG2Dm6R%6Q=(AM?:j4>o)S@m1>a0K<Vu4s2sG2Dd9T%6Q=(AMQFl4>o)S0g6%/0K<W"4s2sG2J+p4%6Q=(AMu^p4>o,Q2a.[50K<W&4s2sG3&33P%6Q=(AN2jr4>o/T3''Id60K<W(4s2sG3&ETY%6Q=(ARRbF4>o/U2EhR40K<WQ4s2sG3&NKU%6Q=(ARdnH4>o/T3Bdm70K<WS4s2sG3&EBS%6Q=(AS"%J4>o/V1d2@20K<WU4s2sG3&3KX%6Q=(AhZCk4>o0.1Hl710K<Z!4s2sG3&*?U%6Q=(AhlOm4>o/U@m1>a0K<Z#4s2sG3&NES%6Q=(Ai)[o4>o/TA3LGb0K<Z%4s2sG2eFm1%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8a,2Ei6G2E3QJ4q0V.3+b*5+?VPA1b_*&4>8a,3''JHI2E3L&4q0V.3+b07+?VPA1c%<)4>8a,@6Per2E3I#4q0V.3+cV`+?VPA1c7H+4>8a,@m2"t2E3EI4q0V.3+c\b+?VPA0fV?+4>8a,ANh5!2E3NJ4q0V.3+cbd+?VPk3+4u[4>8cL0KpUA2I\X+4q0V.3A<0O+?VPk@Q-I[4>8cL1-QgC2IeKu4q0V.3A<<S+?VPl1,_<*4>8cL2Ei6G2IeL!4q0V.3A<BU+?VPlAhZCX4>8cL3''JHI2In^S4q0V.3A<HW+?VPm3Aiu04>8cL@6Per2Ind,4q0V.3A=o++?VPm3&a#14>8cL@m2"t2In^(4q0V.3A=u-+?VPm2`Nu14>8cLANh5!2Ina*4q0V.3A>&/+?VPm2*!i04>8cM0KpUA2Ing(4q0V.3AE6P+?VPm2Ieo[4>8cM1-QgC2Ind-4q0V.3AE<R+?VPm2J#&]4>8cM1d3$E2In[R4q0V.3AEBT+?VPm2`*]-4>8cM2Ei6G2In^+4q0V.3AEHV+?VPm3+G,]4>8cM3''JHI2IndU4q0V.3AENX+?VPm2`X&24>8cM@6Per2Ind)4q0V.3AFu,+?VPm2DmZ-4>8cM@m2"t2Ing)4q0V.3AG&.+?VS:@pqP14>8cMANh5!2_\c%4q0V.3AG,0+?VS:AMcR[4>8cN0KpUA2_\c&4q0V.3AN<Q+?VS:@lQX]4>8cN1-QgC2_\`R4q0V.3ANBS+?VS<1H@W.4>8cN1d3$E2_m<P4q0V.3ANHU+?VS<An+"64>8cN2Ei6G2_nu*4q0V.3ANNW+?VS<An4(74>8cN3''JHI2_nu)4q0V.3ANTY+?VS<AiDm_4>8cN@6Per2`!EO4q0V.3AP&-+?VS=ARmt64>8cN@m2"t2`*3K4q0V.3AP,/+?VS=AS"%74>8cNANh5!2`##!4q0V.3AP21+?VS=ARRb34>8cO0KpUA2`"uU4q0V.3AWBR+?VS?2)IK+4>8cO1-QgC2`3I''4q0V.3AWHT+?VS?2.JfZ4>8cO1d3$E2`3I$4q0V.3AWNV+?VS?2*!i04>8cO2Ei6G2`5&U4q0V.3AWTX+?VS?@l6FZ4>8cO3''JHI2`5)(4q0V.3AY,.+?VS?@UqY34>8cO@m2"t2`5&S4q0V.3AY20+?VS?@Q?U]4>8cOANh5!2`5)#4q0V.3AY82+?VS?@Q6O\4>8cP0KpUA2`<X)4q0V.3A`HS+?VS@@PBtT4>8cP1-QgC2`>/S4q0V.3A`TW+?VSA1-%N-4>8cP3''JHI2`EKO4q0V.3A``[+?VSAAN;p`4>8cP@6Per2`NTI4q0V.3Ab2/+?VSB1,hB+4>8cP@m2"t2`NTQ4q0V.3Ab81+?VSB0k<HW4>8cPANh5!2`NTM4q0V.3Ab>3+?VSB1H.K,4>8cQ0KpUA2`NQM4q0V.3AiNT+?VSB11WQX4>8cQ1-QgC2`NQH4q0V.3AiTV+?VSB0kNTY4>8cQ1d3$E2`NTK4q0V.3AiZX+?VSC2)RQ,4>8cQ2Ei6G2`W`L4q0V.3Ai`Z+?VSC2D@<(4>8cQ3''JHI2`Wa-4q0V.3Aif\+?VSC2)[W-4>8cQ@6Per2`Wa,4q0V.3Ak80+?VSC2.Sl[4>8cQ@m2"t2`W`S4q0V.3Ak>2+?VSC2.8ZX4>8cQANh5!2`YG+4q0V.3AkD4+?VSCAMZLZ4>8cR0KpUA2`YG.4q0V.3ArTU+?VSCA7e"7ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0KD$H4s2sH3Ft*4%6Q=)2D[N>4?#933Bdm70KD$J4s2sH3Fk*5%6Q=)2DmZ@4?$\.1d2@20KD$L4s2sH@5p51%6Q=)2E*fB4?$\Z3Bdm70KD$N4s2sH@PB](%6Q=)2E<rD4?$_(0g6%/0KD%"4s2sH@lQJ4%6Q=)2I\im4?$e+0g6%/0KD%$4s2sHA2-#,%6Q=)2Inuo4?$e)@Qk5`0KD%&4s2sHA2%FU%6Q=)2J,,q4?$e+0Koq.0KD''G4s2sHA25o(%6Q=)2_dK=4?$e*1d2@20KD''I4s2sHA2,c%%6Q=)2`!W?4?$e*2*MI30KD''K4s2sHA2.LV%6Q=)2`3cA4?$e*@m1>a0KD''M4s2sHA2%OX%6Q=)2`EoC4?$e*3Bdm70KD''O4s2sHA2.OW%6Q=)2`X&E4?$k.@6P,_0KD(#4s2sHAi40a%6Q=)2e"rn4?$k41d2@20KD(%4s2sHAn*\^%6Q=)2e5)p4?$k^0g6%/0KD(''4s2sI0JGCK%6Q=)2eG5r4?,#K1d2@20KD*H4s2sI0JPON%6Q=)3&*T>4?,#L2*MI30KD*J4s2sI0JPRO%6Q=)3&<`@4?,#L2a.[50KD*L4s2sI0Jd6''%6Q=)3&NlB4?,#NAj-Yd0KD*N4s2sI0P3%''%6Q=)3&a#D4?,&L1-Q.00KD*P4s2sI0P3"&%6Q=)3&s/F4?,&L2*MI30KD+$4s2sI0P+cY%6Q=)3+>&o4?,$,1d2@20KD+&4s2sI0ebLL%6Q=)3+P2q4?,$,3''Id60KD+(4s2sI0P3+)%6Q=)3+b>s4?,&L3''Id60KD-I4s2sI0P4iZ%6Q=)3AE]?4?,&L@6P,_0KD-K4s2sI0P4fY%6Q=)3AWiA4?,$+Aj-Yd0KD-M4s2sI0kFlZ%6Q=)3AiuC4?,'',@m1>a0KD-O4s2sI1,(CG%6Q=)3B'',E4?,)N0Koq.0KD.%4s2sI1,:gQ%6Q=)3FY/p4?,)O@m1>a0KD.''4s2sI11F]V%6Q=)3Fk;r4?,,P@Qk5`0KD.)4s2sI1GppO%6Q=)3G(Gt4?,,S1d2@20KEPq4s2sI1GiN(%6Q=)@50qg4?,,Q3''Id60KEPs4s2sI1GpjM%6Q=)@5C(i4?,,R3Bdm70KEPu4s2sI1G^mP%6Q=)@5U4k4?,,Q1d2@20KEQ"4s2sI1Gi]-%6Q=)@5g@m4?,,Q1-Q.00KEQ$4s2sI1G_$T%6Q=)@6$Lo4?,,Q2EhR40KEQM4s2sI1GLgP%6Q=)@:DDC4?,,R0Koq.0KEQO4s2sI1G^aL%6Q=)@:VPE4?,,P3''Id60KEQQ4s2sI1GgmO%6Q=)@:h\G4?,5V1d2@20KESr4s2sI2E5,/%6Q=)@PL%h4?,6-@6P,_0KESt4s2sI2E<QW%6Q=)@P^1j4?,6-1d2@20KET!4s2sI2ISU0%6Q=)@Pp=l4?,5Y@m1>a0KET#4s2sI2ISC*%6Q=)@Q-In4?,5Z@m1>a0KET%4s2sI3&`NT%6Q=)@Q?Up4?,;Z2a.[50KETP4s2sI3&bA3%6Q=)@UqYF4?,;Z3Bdm70KETR4s2sI@50`*%6Q=)@V.eH4?-b(0Koq.0KEVs4s2sI@5)7V%6Q=)@kg.i4?-b''@m1>a0KEVu4s2sI@50W''%6Q=)@l$:k4?-b''@6P,_0KEW"4s2sI@50])%6Q=)@l6Fm4?-b(1Hl710KEW$4s2sI@50Z(%6Q=)@lHRo4?-b''Aj-Yd0KEW&4s2sI@50K#%6Q=)@lZ^q4?-h-3''Id_DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b3FcJ]+?VVn2dnlZ4>8d*@Qkns3+Fm-4q0V.3FcVa+?VVo2`Eo04>8d*Aj.>"3+ZN.4q0V.3Fjg-+?VVpA26=X4>8d+0g6^B3+ZVW4q0V.3Fjm/+?VVp@qIn64>8d+1HlpD3+cVS4q0V.3Fjs1+?VY<0JPa#4>8d+2*N-F3A<-F4q0V.3Fk$3+?VVqAiDm_4>8d+2a/?H3A<-@4q0V.3Fk*5+?VVqAmmk44>8d+3BeQJ3+cbZ4q0V.3FlP^+?VY<0Jbm%4>8d+@Qkns3+cc54q0V.3FlV`+?VY<0Ju$''4>8d+A3M+u3+cb^4q0V.3Fl\b+?VY<3Aiu04>8d+Aj.>"3A>#!4q0V.3Fsm.+?VY<A7Rk54>8d,0g6^B3A>#"4q0V.3Fss0+?VY=2)7?)4>8d,1HlpD3AE@$4q0V.3Ft$2+?VY=1h/]Y4>8d,2*N-F3AG&(4q0V.3Ft*4+?VY=A7Rk54>8d,2a/?H3AG&''4q0V.3Ft06+?VY=A7Ie44>8d,3BeQJ3AG&)4q0V.3FuV_+?VYA3&<`-4>8d,A3M+u3ArcM4q0V.3Fubc+?VYB2.A`Y4>8d,Aj.>"3Ara*4q0V.3G''s/+?VYB2DdT,4>8d-0g6^B3Ar`S4q0V.3G($1+?VYB2.\r\4>8d-1HlpD3At>U4q0V.3G(*3+?VYDAMQFY4>8d-2*N-F3B:MX4q0V.3G(05+?VYm@5pF[4>8d-2a/?H3FQGX4q0V.3G(67+?VYn1,V6)4>8d-3BeQJ3FXd"4q0V.3G)\`+?VYn1LiTX4>8d-@Qkns1hAUW4q0V.3G)bb+?VM82dnlZ4>8d-A3M+u2)$t"4q0V.3G)hd+?VM82.JfZ4>8d-Aj.>"2)$jG4q0V.@5''B!+?VM81c%<)4>:1t0g6^B2)$js4q0V.@5''H#+?VM82.8ZX4>:1t1HlpD2)$jI4q0V.@5''N%+?VM82DmZ-4>:1t2*N-F2)$sI4q0V.@5''T''+?VM81hAi[4>:1t2a/?H2)$mF4q0V.@5''Z)+?VM82`3c.4>:1t3BeQJ2)$sG4q0V.@5)+R+?VM82`Eo04>:1t@Qkns2)$k!4q0V.@5)1T+?VM80P3KX4>:1tA3M+u2)$q#4q0V.@5)7V+?VM82Inu\4>:1tAj.>"2)-su4q0V.@50H"+?VM93Aiu04>:1u0g6^B2)/\s4q0V.@50N$+?VM:2IScY4>:1u1HlpD2)7(%4q0V.@50T&+?VM:A26=X4>:1u2*N-F2)8]&4q0V.@50Z(+?VM:A2la^4>:1u2a/?H2)8]"4q0V.@50`*+?VM;0ebd#4>:1u3BeQJ2)?pu4q0V.@521S+?VM;0f_E,4>:1uA3M+u2)@%"4q0V.@52=W+?VM;@l$:X4>:1uAj.>"2E#/W4q0V.@59N#+?VM=1c@N,4>:2!0g6^B2)R:#4q0V.@59T%+?VM=2E!`.4>:2!1HlpD2)R3I4q0V.@59Z''+?VM=2.\r\4>:2!2*N-F2)R9H4q0V.@59`)+?VM=1c%<)4>:2!2a/?H2)R4!4q0V.@59f++?VM=1GM''&4>:2!3BeQJ2)R6L4q0V.@5;7T+?VM=1hJo\4>:2!@Qkns2)R6K4q0V.@5;=V+?VM=11i]Z4>:2!A3M+u2)R9K4q0V.@5;CX+?VM=1H7Q-4>:2!Aj.>"2)R.#4q0V.@5BT$+?VM=2.JfZ4>:2"0g6^B2)R.!4q0V.@5BZ&+?VM=2D[N+4>:2"1HlpD2)R0G4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=Q1Gh9<4>euQ0g6%/0OZap4s2sF2)R<V%6Q=Q1H%E>4>f&O3''Id60OZar4s2sF2_\])%6Q=Q1H7Q@4>f&O3Bdm70OZat4s2sF2e6Ma%6Q=Q1LWHi4>f)P2*MI30OZbH4s2sF3&"c)%6Q=Q1LiTk4>f)P2EhR40OZbJ4s2sF2e=[,%6Q=Q1M&`m4>f''/1d2@20OZbL4s2sF2eHJ^%6Q=Q1b_*94>f)P1-Q.00OZdm4s2sF3&<EU%6Q=Q1bq6;4>f''02a.[50OZdo4s2sF2eG''6%6Q=Q1c.B=4>f,S0Koq.0OZdq4s2sF3ArWV%6Q=Q1c@N?4>gP''2EhR40OZds4s2sF@5K]&%6Q=Q1cRZA4>gP(3Bdm70OZdu4s2sF@5^#-%6Q=Q1grQj4>gP*@6P,_0OZeI4s2sF@5KZ%%6Q=Q1h/]l4>gP''@m1>a0OZeK4s2sF@5]l)%6Q=Q1hAin4>gP)@6P,_0OZeM4s2sF@5Kl+%6Q=Q2)%3:4>gP(@6P,_0OZgn4s2sF@Q,u)%6Q=Q2)7?<4>gSX2a.[50OZgp4s2sF@Uh8Z%6Q=Q2)IK>4>gSX1d2@20OZgr4s2sF@Uh/W%6Q=Q2)[W@4>gSWAj-Yd0OZgt4s2sF@Uh;[%6Q=Q2)mcB4>gV&3Bdm70OZh!4s2sF@k]l+%6Q=Q2.8Zk4>gV&2a.[50OZhJ4s2sF@l?#)%6Q=Q2.\ro4>gY''2a.[50OZhN4s2sFA2#o*%6Q=Q2D@<;4>gY''ANgPc0OZjo4s2sFA2.OW%6Q=Q2DRH=4>gY(2EhR40OZjq4s2sFA25o(%6Q=Q2DdT?4>gY(0g6%/0OZjs4s2sFA26//%6Q=Q2E!`A4>gY(1d2@20OZju4s2sFA2-).%6Q=Q2E3lC4>gY)1d2@20OZk"4s2sFA26)-%6Q=Q2IScl4>gY(2a.[50OZkK4s2sFA7[M[%6Q=Q2Ieon4>g\+3''Id60OZkM4s2sFAMZ5.%6Q=Q2J#&p4>g\+1Hl710OZkO4s2sFAMZ8/%6Q=Q2_mQ>4>g\Z2EhR40OZmr4s2sFAR[M\%6Q=Q2`*]@4>g\ZANgPc0OZmt4s2sFAhu;.%6Q=Q2`<iB4>g_,2a.[50OZn!4s2sFAi2M2%6Q=Q2`NuD4>g_/@m1>a0OZn#4s2sFAi;Y5%6Q=Q2dnlm4>g_/@Qk5`0OZnL4s2sFAiVe6%6Q=Q2e,#o4>g_23Bdm70OZnN4s2sFAiXEd%6Q=Q2e>/q4>g_23''Id60OZnP4s2sFAmmDX%6Q=Q3&!N=4>g_Z0Koq.0OZpq4s2sFAiX?b%6Q=Q3&3Z?4>nlPAj-Yd0OZps4s2sG0OZb$%6Q=Q3&EfA4>nlQ3Bdm70OZpu4s2sG0OZY!%6Q=Q3&WrC4>nm%3''Id60OZq"4s2sG0OnQU%6Q=Q3&j)E4>nm&1d2@20OZq$4s2sG0P*.+%6Q=Q3+4un4>nm&A3LGb0OZqM4s2sG0Olt(%6Q=Q3+G,p4>nm&@Qk5`0OZqO4s2sG0Ocn''%6Q=Q3+Y8r4>nm(@m1>a0OZqQ4s2sG0OeNU%6Q=Q3A<W>4>nm(3''Id60OZsr4s2sG0P!%)%6Q=Q3ANc@4>nm''2EhR40OZst4s2sG0P"cZ%6Q=Q3A`oB4>nm&3''Id60OZt!4s2sG0P"TU%6Q=Q3As&D4>nm''2a.[50OZt%4s2sG1,LsS%6Q=Q3FP)o4>o!(0Koq.0OZtN4s2sG1LW4+%6Q=Q3Fb5q4>nuS1-Q.00OZtP4s2sG1H@?W%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:2(ANh5!2D\bs4q0V.@6%p`+?VP<@5U4X4>:2P0KpUA2D[9N4q0V.@::lS+?VP<2E*f/4>:2P1-QgC2D[?Q4q0V.@::rU+?VP<@:;>/4>:2P1d3$E2D[9H4q0V.@:;#W+?VP<@6$L\4>:2P2Ei6G2D[<Q4q0V.@:;)Y+?VP<3&<`-4>:2P3''JHI2D[@&4q0V.@:;/[+?VP<2I\iZ4>:2P@6Per2D\c$4q0V.@:<V/+?VP<3&Ef.4>:2P@m2"t2D[<P4q0V.@:<\1+?VP<3B9844>:2PANh5!2D\br4q0V.@:<b3+?VP<@:MJ14>:2Q0KpUA2D[?K4q0V.@:CrT+?VP<3+b>`4>:2Q1-QgC2D[<H4q0V.@:D#V+?VP<2e"r[4>:2Q1d3$E2D[6O4q0V.@:D)X+?VP<2E3l04>:2Q2Ei6G2D[:#4q0V.@:D/Z+?VP>2.Sl[4>:2Q3''JHI2Dm?M4q0V.@:D5\+?VP>2).9(4>:2Q@6Per2Dm?P4q0V.@:E\0+?VP>2)d].4>:2Q@m2"t2)R7''4q0V.@:Eb2+?VP>1hJo\4>:2QANh5!2Dm?O4q0V.@:Eh4+?VP>2)RQ,4>:2R0KpUA2Dm?K4q0V.@:M#U+?VP>3Fb5^4>:2R1-QgC2DmL(4q0V.@:M)W+?VP>@:MJ14>:2R1d3$E2DnuV4q0V.@:M5[+?VP>@q@h54>:2R3''JHI2E!F''4q0V.@:M;]+?VP?2.8ZX4>:2R@6Per2E!HM4q0V.@:Nb1+?VP?2E3l04>:2R@m2"t2E!HO4q0V.@:Nh3+?VP?2.\r\4>:2RANh5!2E#/-4q0V.@:Nn5+?VM:A2c[]4>:2S0KpUA2E*@"4q0V.@:V)V+?VPA3&*T+4>:2S1-QgC2E5,W4q0V.@:V/X+?VPA@5:"U4>:2S1d3$E2E3]Q4q0V.@:V5Z+?VPA@Pp=Y4>:2S2Ei6G2E3X-4q0V.@:V;\+?VPA2`<i/4>:2S3''JHI2E5/#4q0V.@:VA^+?VPA@5g@Z4>:2S@6Per2E3]U4q0V.@:Wh2+?VPA@PBtT4>:2S@m2"t2E3ZP4q0V.@:Wn4+?VPA@l-@Y4>:2SANh5!2E5,U4q0V.@:Wt6+?VPA3&Wr04>:2T0KpUA2E3ZR4q0V.@:_/W+?VPA3A`o/4>:2T1-QgC2E3^-4q0V.@:_5Y+?VPA@5pF[4>:2T1d3$E2E3^/4q0V.@:_;[+?VPA@50qT4>:2T2Ei6G2E3ZO4q0V.@:_A]+?VPk1GV-''4>:2T3''JHI2I^-(4q0V.@:`n3+?VPl11EEV4>:2T@m2"t2IndY4q0V.@:`t5+?VPm@UhS24>:2TANh5!2IpDU4q0V.@:a%7+?VPmA2ug_4>:2U0KpUA2Ip8P4q0V.@:h5X+?VPmAMH@X4>:2U1-QgC2Ip<-4q0V.@:h;Z+?VPmAMcR[4>:2U1d3$E2IpE/4q0V.@:hA\+?VPmAmmk44>:2U2Ei6G2J"R"4q0V.@:hG^+?VPm@lHR\4>:2U3''JHI2Ip<,4q0V.@:hM`+?VPm@:h\44>:2U@6Per2Ip>Q4q0V.@:it4+?VPm@:_V34>:2U@m2"t2Ip?04q0V.@:j%6+?VPmAiW$a4>:2UANh5!2Ip8V4q0V.@:j+8+?VPmAiDm_4>:4u0KpUA2IpDW4q0V.@PBN#+?VPm@l6FZ4>:4u1-QgC2Ip>R4q0V.@PBT%+?VPn0k!6T4>:4u1d3$E2Ip8S4q0V.@PBZ''+?VPmA77Y2ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0Oc^o4s2sGA7]46%6Q=R0K20<4>p_\3''Id60Oc^q4s2sGA7]15%6Q=R0KD<>4>p_^0g6%/0Oc_E4s2sGA7]=9%6Q=R0Od3g4>p_]3''Id60Oc_G4s2sGA7IM]%6Q=R0P!?i4>p_[1d2@20Oc_I4s2sGA78n1%6Q=R0P3Kk4>p_]@m1>a0Ocaj4s2sGA7B.7%6Q=R0ekj74>p_]2EhR40Ocal4s2sH0P3=/%6Q=R0f;-;4?"s+A3LGb0Ocap4s2sH0P+i[%6Q=R0fM9=4?##OA3LGb0Ocar4s2sH1,i`-%6Q=R0f_E?4?##T0g6%/0OcbF4s2sH1GNB''%6Q=R0k*<h4?#&N@Qk5`0OcbH4s2sH1GLdO%6Q=R0k<Hj4?#&N1Hl710OcbJ4s2sH1GLmR%6Q=R0kNTl4?#&U2a.[50Ocdk4s2sH1b^dN%6Q=R1,1s84?#)N@6P,_0Ocdm4s2sH1b^^L%6Q=R1,D*:4?#)N2EhR40Ocdo4s2sH1M12^%6Q=R1,V6<4?#)NA3LGb0Ocdq4s2sH1hA@)%6Q=R1-%N@4?#,P@m1>a0OceG4s2sH2)6pN%6Q=R11WQk4?#,U1-Q.00OceK4s2sH2)d3Q%6Q=R11i]m4?#,WAj-Yd0Ocgn4s2sH2.AF,%6Q=R1G_3;4?#--@6P,_0Ocgp4s2sH2.L/\%6Q=R1Gq?=4?#/XANgPc0Ocgr4s2sH2InX.%6Q=R1H.K?4?#0/1-Q.00Ocgt4s2sH2Ip8\%6Q=R1H@WA4?#2T2a.[50OchH4s2sH2`##/%6Q=R1L`Nj4?#2T@m1>a0OchJ4s2sH2`!?U%6Q=R1LrZl4?#2T3''Id60OchL4s2sH2`"l+%6Q=R1M/fn4?#5X@Qk5`0Ocjm4s2sH3&EET%6Q=R1bh0:4?#5VANgPc0Ocjo4s2sH3Ar`Y%6Q=R1c%<<4?#8Y3''Id60Ocjq4s2sH3AtD3%6Q=R1c7H>4?#94@Qk5`0Ocjs4s2sH@6$),%6Q=R1cIT@4?$\/2*MI30Ocju4s2sH@PTW$%6Q=R1c[`B4?$_)3''Id60OckI4s2sH@PM=U%6Q=R1h&Wk4?$_)@m1>a0OckK4s2sH@PTi*%6Q=R1h8cm4?$_(3Bdm70OckM4s2sH@PMFX%6Q=R1hJoo4?$_)ANgPc0Ocmn4s2sH@lZ;.%6Q=R2).9;4?$b12a.[50Ocmp4s2sH@lZD1%6Q=R2)@E=4?$e-2EhR40Ocmr4s2sHA2H)+%6Q=R2)RQ?4?$e00g6%/0Ocmt4s2sHA27^[%6Q=R2)d]A4?$e,3Bdm70Ocn!4s2sHA2@^Z%6Q=R2*!iC4?$e-0Koq.0OcnJ4s2sHA2>o''%6Q=R2.A`l4?$e,1Hl710OcnL4s2sHA2H,,%6Q=R2.Sln4?$e+Aj-Yd0OcnN4s2sHA2H&*%6Q=R2.f#p4?$e,1-Q.00Ocpo4s2sHA2>r(%6Q=R2DIB<4?$k.A3LGb0Ocpq4s2sHAiXEd%6Q=R2D[N>4?$k4@6P,_0Ocps4s2sHAn,=7%6Q=R2DmZ@4?$k^ANgPc0Ocpu4s2sHAn3Y\%6Q=R2E*fB4?,#L@m1>a0Ocq"4s2sI0Jm3%%6Q=R2E<rD4?,#O2EhR40OcqK4s2sI0f!?)%6Q=R2I\im4?,&M2EhR40OcqM4s2sI0etOK%6Q=R2Inuo4?,&N@Qk5`0OcqO4s2sI0etaQ%6Q=R2J,,q4?,&O0Koq.0Ocsp4s2sI0etRL%6Q=R2_dK=4?,)M1-Q.YDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b@Q-&++?VV=1Gq?*4>:5''1HlpD3&39K4q0V.@Q-,-+?VV=1H%E+4>:5''2*N-F3&39M4q0V.@Q-2/+?VV>3+Y8_4>:5''2a/?H3&<R+4q0V.@Q-81+?VV>3B0234>:5''3BeQJ3&<KQ4q0V.@Q.^Z+?VV>@5:"U4>:5''@Qkns3&<QQ4q0V.@Q.d\+?VV>@UqY34>:5''A3M+u3&=uP4q0V.@Q.j^+?VV>3ANc-4>:5''Aj.>"3&<O&4q0V.@Q6&*+?VV>3AWi.4>:5(0g6^B3&<NS4q0V.@Q6,,+?VV>@5''kS4>:5(1HlpD3&<KP4q0V.@Q680+?VV>3&Wr04>:5(2a/?H3&=u%4q0V.@Q6>2+?VVA2)RQ,4>:5(3BeQJ2.eaT4q0V.@Q7d[+?VVA@lHR\4>:5(@Qkns3&Y8#4q0V.@Q7j]+?VVA@Q$CZ4>:5(A3M+u3&Y8''4q0V.@Q7p_+?VVA@Pp=Y4>:5(Aj.>"3&Y8)4q0V.@Q?,++?VVA@q%V24>:5)0g6^B3&Y5#4q0V.@Q?2-+?VVA@:h\44>:5)1HlpD3&Y8,4q0V.@Q?8/+?VVC2)@E*4>:5)2*N-F3&ip04q0V.@Q?>1+?VVC3&j)24>:5)2a/?H3&k>U4q0V.@Q?D3+?VVC3ANc-4>:5)3BeQJ3&ioV4q0V.@Q@j\+?VVC3+P2^4>:5)@Qkns3&im,4q0V.@Q@p^+?VVD3AWi.4>:5)A3M+u3&rs14q0V.@QA!`+?VVl11<?U4>:5)Aj.>"3+4OP4q0V.@UUrS+?VVl1,D*''4>:5Q0g6^B3+4R"4q0V.@UV#U+?VVl1GM''&4>:5Q1HlpD3+4RQ4q0V.@UV)W+?VVl0kNTY4>:5Q2*N-F3+4ON4q0V.@UV/Y+?VVl1,;$&4>:5Q2a/?H3+Fd*4q0V.@UV5[+?VVn2.8ZX4>:5Q3BeQJ3+HAW4q0V.@UW\/+?VVn@:MJ14>:5Q@Qkns3+HB+4q0V.@UWb1+?VVn@5pF[4>:5QA3M+u3+HB*4q0V.@UWh3+?VVn@5g@Z4>:5QAj.>"3+Op+4q0V.@U_#T+?VVo2E!`.4>:5R0g6^B3+QK04q0V.@U_)V+?VVo@UVG04>:5R1HlpD3+ZW04q0V.@U_/X+?VVpA7e"74>:5R2*N-F3A<0J4q0V.@U_5Z+?VY<0P!?V4>:5R2a/?H3A<0r4q0V.@U_;\+?VY<0fM9*4>:5R3BeQJ3A<3E4q0V.@U`b0+?VY<0kNTY4>:5R@Qkns3A<0u4q0V.@U`h2+?VY<0ebd#4>:5RA3M+u3A<0F4q0V.@U`n4+?VY<0kENX4>:5RAj.>"3A<3B4q0V.@Uh)U+?VY<0P3KX4>:5S0g6^B3A<3D4q0V.@Uh/W+?VY<0fD3)4>:5S1HlpD3A<0s4q0V.@Uh5Y+?VY<0f2''''4>:5S2*N-F3A>#(4q0V.@Uh;[+?VY<ARmt64>:5S2a/?H3A>&U4q0V.@UhA]+?VY=2)d].4>:5S3BeQJ3AG#T4q0V.@Uih1+?VY=Ai2a]4>:5S@Qkns3AG)''4q0V.@Uin3+?VY=AMZLZ4>:5SA3M+u3AG)(4q0V.@Uit5+?VY=ARmt64>:5SAj.>"3AG)*4q0V.@Uq/V+?VYA3&s/34>:5T0g6^B3Ard(4q0V.@Uq5X+?VYB2`3c.4>:5T1HlpD3ArfP4q0V.@Uq;Z+?VYB2`Nu14>:5T2*N-F3ArfM4q0V.@UqA\+?VYB2`*]-4>:5T3BeQJ3Ard*4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=RA77YE4?5<00Koq.0OeR%4s2sJ2J$;\%6Q=RA7IeG4?5<23Bdm70OeR''4s2sH@:_,V%6Q=RA7[qI4?$\ZAj-Yd0OeTJ4s2sJ@PqRX%6Q=RAMQFl4?6n_2*MI30OeTL4s2sJAN)J1%6Q=RAMcRn4?6t3Aj-Yd0OeTN4s2sJARRG[%6Q=RAMu^p4?6t^@Qk5`0OeTP4s2sF0OZ_#%6Q=RAN2jr4>efPA3LGb0OeTR4s2sF0K:pR%6Q=RARRbF4>efQ3Bdm70OeU&4s2sF0KCjO%6Q=RARdnH4>efP0Koq.0OeU(4s2sF0KD$T%6Q=RAS"%J4>efQ3''Id60OeU*4s2sF0KEQ*%6Q=RAhZCk4>o,P0Koq.0OeWK4s2sF0kN.(%6Q=RAhlOm4>elQ1-Q.00OeWO4s2sF1,_-V%6Q=RAi;gq4>em)ANgPc0OeWQ4s2sF11XoZ%6Q=RAiMss4>em)@Qk5`0OeWS4s2sF1GrT)%6Q=RAmmkG4>ep''2*MI30OeX''4s2sF2)eu.%6Q=RAn+"I4>euU0Koq.0OeX)4s2sF2.8F-%6Q=RAn=.K4>euT@m1>a0OeX+4s2sF2)o#.%6Q=S0JG[54>euVA3LGb0Oldk4s2sF2*!W[%6Q=S0JYg74>euU1-Q.00Oldm4s2sF2*#/1%6Q=S0Jks94>f!)@6P,_0Oldo4s2sF2*!KW%6Q=S0K)*;4>euU2a.[50Oldq4s2sF2)o&/%6Q=S0K;6=4>euU1Hl710Olds4s2sF2.A@*%6Q=S0O[-f4>f!)ANgPc0OleG4s2sF2*#84%6Q=S0Om9h4>euPANgPc0OleI4s2sF2.A=)%6Q=S0P*Ej4>euV@6P,_0OleK4s2sF2.C#Y%6Q=S0ebd64>f!)@m1>a0Olgl4s2sF2.A:(%6Q=S0etp84>euTANgPc0Olgn4s2sF2)mT[%6Q=S0f2'':4>f!)@Qk5`0Olgp4s2sF2*!Z\%6Q=S0fD3<4>f&OA3LGb0Olgr4s2sF3&5)0%6Q=S0fV?>4>f)R@6P,_0Olgt4s2sF3&<BT%6Q=S0k!6g4>f)R1d2@20OlhJ4s2sF3&33P%6Q=S0kENk4>f)QA3LGb0OlhL4s2sF3&30O%6Q=S1,;$94>f,W0Koq.0Oljo4s2sF@5g,/%6Q=S1,M0;4>gP-@6P,_0Oljq4s2sF@5hd^%6Q=S1,_<=4>gP-1-Q.00Oljs4s2sF@6%d\%6Q=S1,qH?4>gPU2a.[50Olju4s2sF@Q-),%6Q=S11<?h4>gS,0g6%/0OlkI4s2sF@Uq5X%6Q=S11NKj4>gSX@m1>a0OlkK4s2sF@Uq8Y%6Q=S11`Wl4>gSY0Koq.0Olmn4s2sF@l#i''%6Q=S1GV-:4>gY+@m1>a0Olmp4s2sFA2Q&)%6Q=S1Gh9<4>gY*1d2@20Olmr4s2sFA2H5/%6Q=S1H%E>4>gY]A3LGb0Olmt4s2sFAMc8.%6Q=S1H7Q@4>g\+A3LGb0Oln!4s2sFAMc))%6Q=S1LWHi4>g\,1Hl710OlnJ4s2sFAN+0a%6Q=S1LiTk4>g\[@6P,_0OlnN4s2sFARdP\%6Q=S1b_*94>g_,@m1>a0Olpo4s2sFAi=0`%6Q=S1c.B=4>g_Z3''Id60Olps4s2sG0Oun%%6Q=S1c@N?4>nm)0g6%/0Olpu4s2sG0Oce$%6Q=S1cRZA4>nm&2EhR40Olq"4s2sG0P)q%%6Q=S1grQj4>noK@m1>a0OlqK4s2sG0etOK%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:8%@m2"t2DA`O4q0V.@l.^[+?VP:0f;-(4>:8%ANh5!2DA_s4q0V.@l.d]+?VP9An!q54>:8&0KpUA2DA`"4q0V.@l5u)+?VP:2E3l04>:8&1-QgC2DA_t4q0V.@l6&++?VP:0P*EW4>:8&1d3$E2DA`$4q0V.@l6,-+?VP:0KD<+4>:8&2Ei6G2DHm>4q0V.@l62/+?VP:0etp%4>:8&3''JHI2DR"!4q0V.@l681+?VP;1c[`/4>:8&@6Per2D\bt4q0V.@l7^Z+?VP<3+G,]4>:8&@m2"t2D\iT4q0V.@l7d\+?VP<@k^(U4>:8&ANh5!2D\o)4q0V.@l7j^+?VP<@lZ^^4>:8''0KpUA2D\i$4q0V.@l?&*+?VP<@q7b44>:8''1-QgC2D\l!4q0V.@l?,,+?VP<AMZLZ4>:8''1d3$E2D\kt4q0V.@l?2.+?VP<AMH@X4>:8''2Ei6G2D\l%4q0V.@l?>2+?VP<2`<i/4>:8''@6Per2D\r%4q0V.@l@d[+?VP<ARRb34>:8''@m2"t2D\lQ4q0V.@l@j]+?VP=2)7?)4>:8''ANh5!2D\lP4q0V.@l@p_+?VP<AiW$a4>:8(0KpUA2Dm@''4q0V.@lH,++?VP>2E!`.4>:8(1d3$E2DmKL4q0V.@lH8/+?VP>3A<W+4>:8(2Ei6G2DnoT4q0V.@lH>1+?VP?2J#&]4>:8(3''JHI2E!KJ4q0V.@lHD3+?VP?2`*]-4>:8(@6Per2E!KP4q0V.@lIj\+?VP?2J,,^4>:8(@m2"t2E!QM4q0V.@lIp^+?VP?2dnlZ4>:8(ANh5!2E!L*4q0V.@lJ!`+?VP?2`Eo04>:8)1-QgC2E*@&4q0V.@lQ8.+?VP@0k<HW4>:8)1d3$E2E5;W4q0V.@lQ>0+?VPAA2QO[4>:8)2Ei6G2E58%4q0V.@lQD2+?VPAA2la^4>:8)3''JHI2E55+4q0V.@lQJ4+?VPB0Ju$''4>:8)@6Per2E55Z4q0V.@lRp]+?VPAAi2a]4>:8)@m2"t2E58Z4q0V.@lS!_+?VPAAN)d^4>:8)ANh5!2E5;/4q0V.@lS''a+?VPAA26=X4>:8*0KpUA2E5;(4q0V.@lZ8-+?VPAAMZLZ4>:8*1-QgC2E52U4q0V.@lZ>/+?VPA@q7b44>:8*1d3$E2E<I%4q0V.@lZD1+?VPB0etp%4>:8*2Ei6G2E<I&4q0V.@lZJ3+?VPA@lZ^^4>:8*3''JHI2E55U4q0V.@lZP5+?VPB2J#&]4>:8*@6Per2E5;X4q0V.@l\!^+?VPk1M&`Z4>:8*@m2"t2I\IN4q0V.@l\''`+?VPk1LrZY4>:8*ANh5!2I\[+4q0V.@l\-b+?VPk3As&14>:8R0KpUA2I^-*4q0V.@pq)U+?VPkAS++84>:8R1d3$E2IeLP4q0V.@pq5Y+?VPn11i]Z4>:8R2Ei6G2J"[(4q0V.@pq;[+?VPn2)IK+4>:8R3''JHI2J"Wu4q0V.@pqA]+?VPn1GV-''4>:8R@6Per2J"d*4q0V.@prh1+?VPn1grQW4>:8R@m2"t2J"Wt4q0V.@prn3+?VPn1,V6)4>:8RANh5!2J"X"4q0V.@prt5+?VPn0k*<U4>:8S0KpUA2J"aT4q0V.@q%/V+?VPn2)mc/4>:8S1-QgC2J"X#4q0V.@q%5X+?VPn2)[W-4>:8S1d3$E2J"dX4q0V.@q%;Z+?VPn11WQX4>:8S2Ei6G2J"X%4q0V.@q%A\+?VPn2J,,^ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0OnQO4s2sGAMZ/,%6Q=S@Q?Up4>pb-A3LGb0OnR#4s2sGAM[aY%6Q=S@U_MD4>pb+@m1>a0OnR%4s2sGAMc2,%6Q=S@UqYF4>pb*A3LGb0OnR''4s2sGAM[m]%6Q=S@V.eH4>pb\@Qk5`0OnTH4s2sGAN2\6%6Q=S@kg.i4>pb*3Bdm70OnTJ4s2sGAMds^%6Q=S@l$:k4>pb/1Hl710OnTL4s2sGAMc5-%6Q=S@l6Fm4>pb01-Q.00OnTN4s2sGAMuP4%6Q=S@lHRo4>pb.Aj-Yd0OnU$4s2sH0etXN%6Q=S@q%VE4?"uN0Koq.0OnU&4s2sH0etII%6Q=S@q7bG4?"uN2EhR40OnU(4s2sH0fET,%6Q=S@qInI4?"uL@m1>a0OnWI4s2sH1,NK)%6Q=SA2-7j4?##T1d2@20OnWK4s2sH1,psO%6Q=SA2?Cl4?#&P2EhR40OnWM4s2sH1GUgO%6Q=SA2QOn4?#&P1d2@20OnWO4s2sH1GUsS%6Q=SA2c[p4?#)Q@6P,_0OnWQ4s2sH1brK''%6Q=SA2ugr4?#)Q1Hl710OnX%4s2sH1bpgM%6Q=SA7@_F4?#)P2*MI30OnX)4s2sH1c$sP%6Q=SA7e"J4?#)PAj-Yd0OnZJ4s2sH1biH''%6Q=SAMH@k4?#)P2EhR40OnZL4s2sH1bq$S%6Q=SAMlXo4?#,U@Qk5`0OnZP4s2sH2)\l,%6Q=SAN)dq4?#-/1-Q.00OnZR4s2sH2.U/[%6Q=SAN;ps4?#-/1Hl710On[&4s2sH2.S^2%6Q=SAR[hG4?#-.3''Id60On[(4s2sH2.U8^%6Q=SARmtI4?#-/0Koq.0On]K4s2sH2E<ZZ%6Q=SAhcIl4?#/Y1Hl710On]M4s2sH2I\L,%6Q=SAhuUn4?#0/@m1>a0On]O4s2sH2`,,1%6Q=SAi2ap4?#31A3LGb0On]Q4s2sH3&P51%6Q=SAiDmr4?#5X@m1>a0On]S4s2sH3&YA4%6Q=SAiW$t4?$\&A3LGb0On^''4s2sH@5''Z)%6Q=SAn!qH4?$\&@Qk5`0On^)4s2sH@5''Q&%6Q=SAn4(J4?$\&0Koq.0On^+4s2sH@6$;2%6Q=SAnF4L4?$\/2a.[50Oujk4s2sH@6$50%6Q=T0JPa64?$\[2*MI30Oujm4s2sH@:_5Y%6Q=T0Jbm84?$_+3Bdm70Oujo4s2sH@Pp&-%6Q=T0Ju$:4?$_+2EhR40Oujq4s2sH@Poi''%6Q=T0K20<4?$_,1-Q.00Oujs4s2sH@Pou+%6Q=T0KD<>4?$_+A3LGb0OukG4s2sH@PhOX%6Q=T0Od3g4?$_+Aj-Yd0OukI4s2sH@Pol(%6Q=T0P!?i4?$b1Aj-Yd0OukK4s2sH@pq5Y%6Q=T0P3Kk4?$e.ANgPc0Ouml4s2sHA2Q&)%6Q=T0ekj74?$e/3''Id60Oumn4s2sHA2Q5.%6Q=T0f)!94?$e+@Qk5`0Oump4s2sHA2\!_%6Q=T0f;-;4?$e01-Q.00Oumr4s2sHA2Z/+%6Q=T0fM9=4?$e/2EhR40Oumt4s2sHA2Z2,%6Q=T0f_E?4?$e00Koq.0OunH4s2sHA2c;.%6Q=T0k*<h4>euU1d2@20OunL4s2sI0JHs"%6Q=T0kNTl4?,#P1-Q.00Oupm4s2sI0K:pR%6Q=T1,1s84?,&Q2*MI30Oupo4s2sI0f:dO%6Q=T1,D*:4?,&P@Qk5`0Oupq4s2sI0f:[L%6Q=T1,V6<4?,&PANgQ7DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,bA26&,+?VV<1H@W.4>:;$2a/?H3&*6J4q0V.A26,.+?VV<1M&`Z4>:;$3BeQJ3&*7"4q0V.A27RW+?VV<2)@E*4>:;$@Qkns3&*?K4q0V.A27XY+?VV=0etp%4>:;$A3M+u3&33u4q0V.A27^[+?VV>AN;p`4>:;$Aj.>"3&E<F4q0V.A2>o''+?VV>AiMs`4>:;%0g6^B3&E="4q0V.A2>u)+?VV>AM?:W4>:;%1HlpD3&>&%4q0V.A2?&++?VV?0Od3T4>:;%2*N-F3&>&!4q0V.A2?,-+?VV>AS++84>:;%2a/?H3&>/$4q0V.A2?2/+?VV>Ai)[\4>:;%3BeQJ3&EKO4q0V.A2@XX+?VV?0O[-S4>:;%@Qkns3&>/#4q0V.A2@^Z+?VV?0Om9U4>:;%A3M+u3&>&S4q0V.A2@d\+?VV>An4(74>:;%Aj.>"3&>/%4q0V.A2Gu(+?VV>@pqP14>:;&0g6^B3&EEN4q0V.A2H&*+?VV?0P*EW4>:;&1HlpD3&E<G4q0V.A2H,,+?VV>A7Ie44>:;&2*N-F3&E<J4q0V.A2H2.+?VV>A2HIZ4>:;&2a/?H3&>)W4q0V.A2H80+?VVA2.A`Y4>:;&3BeQJ3&Y;Z4q0V.A2I^Y+?VVAA2ug_4>:;&@Qkns3&Y>Y4q0V.A2Id[+?VVAA2HIZ4>:;&A3M+u3&Y;V4q0V.A2Ij]+?VVAAMcR[4>:;&Aj.>"3&Y;$4q0V.A2Q&)+?VVAA7[q64>:;''0g6^B3&icS4q0V.A2Q2-+?VVC@PL%U4>:;''2*N-F3&rrS4q0V.A2Q8/+?VVD3As&14>:;''2a/?H3+4UP4q0V.A2Q>1+?VVl2D@<(4>:;''3BeQJ3+4[%4q0V.A2RdZ+?VVl2.\r\4>:;''@Qkns3+4UQ4q0V.A2Rj\+?VVl1bh0''4>:;''A3M+u3+4[$4q0V.A2Rp^+?VVl2.A`Y4>:;''Aj.>"3+4Zu4q0V.A2Z,*+?VVl1c@N,4>:;(0g6^B3+4U"4q0V.A2Z2,+?VVl1LWHV4>:;(1HlpD3+4U$4q0V.A2Z8.+?VVl2)[W-4>:;(2*N-F3+Fj$4q0V.A2Z>0+?VVn3&3Z,4>:;(2a/?H3+HB/4q0V.A2ZD2+?VVn@UhS24>:;(3BeQJ3+HDR4q0V.A2[j[+?VVn@UqY34>:;(@Qkns3+HGQ4q0V.A2[p]+?VVn@U_M14>:;(A3M+u3+HGP4q0V.A2\!_+?VVn@Pg7X4>:;(Aj.>"3+HDV4q0V.A2c2++?VVn@Q$CZ4>:;)0g6^B3+HE04q0V.A2c8-+?VVn@Q6O\4>:;)1HlpD3+P!W4q0V.A2c>/+?VVo3&Nl/4>:;)2*N-F3+P!''4q0V.A2cD1+?VVo@q@h54>:;)2a/?H3+QQ14q0V.A2cJ3+?VVo@q%V24>:;)3BeQJ3+QQ.4q0V.A2dp\+?VVoA2-7W4>:;)@Qkns3+QN/4q0V.A2e!^+?VVoA7@_34>:;)A3M+u3+QMW4q0V.A2e''`+?VVpAn!q54>:;)Aj.>"3+Z\]4q0V.A2l8,+?VVpAn+"64>:;*0g6^B3+b0\4q0V.A2l>.+?VY<11`WY4>:;*1HlpD3A<6H4q0V.A2lD0+?VY<1GM''&4>:;*2*N-F3A<6K4q0V.A2lJ2+?VY<1GV-''4>:;*2a/?H3A<6I4q0V.A2lP4+?VY=0JYg$4>:;*3BeQJ3A>&&4q0V.A2n!]+?VY=0KD<+4>:;*@Qkns3A>&V4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=T3+G,p4?5,S1Hl710P!.R4s2sJ0fCmQ%6Q=T3+Y8r4?5-+Aj-Yd0P!0u4s2sJ1,:XL%6Q=T3ANc@4?5/N3Bdm70P!1"4s2sJ1,3?(%6Q=T3A`oB4?5/NA3LGb0P!1$4s2sJ1,1IH%6Q=T3As&D4?5/N2a.[50P!1&4s2sJ1,1LI%6Q=T3B02F4?58Z1d2@20P!1(4s2sJ2)o23%6Q=T3FP)o4?58Y@Qk5`0P!1Q4s2sJ2*!BT%6Q=T3Fb5q4?58Z1Hl710P!1S4s2sJ2*!EU%6Q=T3FtAs4?58YANgPc0P!1U4s2sJ2E5,/%6Q=T@5''kf4?5;ZANgPc0P"TH4s2sJ2E5/0%6Q=T@5:"h4?5;YA3LGb0P"TL4s2sJ2E552%6Q=T@5^:l4?5;Y1-Q.00P"TN4s2sJ2E3NW%6Q=T@5pFn4?5<00g6%/0P"TP4s2sJ2IeU.%6Q=T@:;>B4?5<01d2@20P"U&4s2sJ2J$Ja%6Q=T@:_VF4?5<31-Q.00P"U(4s2sJ2e->]%6Q=T@PU+i4?5AT3''Id60P"WK4s2sJ3+Y$4%6Q=T@Pg7k4?5B4@6P,_0P"WM4s2sJ3+Z\c%6Q=T@Q$Cm4?5B43Bdm70P"WO4s2sJ3+ap0%6Q=T@Q6Oo4?5B4A3LGb0P"WQ4s2sJ3FQJ_%6Q=T@UVGC4?5E1A3LGb0P"X%4s2sJARdM[%6Q=T@UhSE4?6t_A3LGb0P"X''4s2sJARmMZ%6Q=T@V%_G4>^V/1-Q.00P"X)4s2sF0O\KU%6Q=T@k^(h4>eg%2*MI30P"ZL4s2sF0Olt(%6Q=T@l-@l4>eg%ANgPc0P"ZN4s2sF0O\HT%6Q=T@l?Ln4>eg%2a.[50P"ZP4s2sF0OeKT%6Q=T@lQXp4>eg$Aj-Yd0P"ZR4s2sF0Om%*%6Q=T@pqPD4>elQAj-Yd0P"[&4s2sF1,h-U%6Q=T@q.\F4>elQA3LGb0P"[(4s2sF11Xu\%6Q=T@q@hH4>em*2EhR40P"[*4s2sF11`:+%6Q=TA26=k4>eoMAj-Yd0P"]M4s2sF2.U;_%6Q=TA2HIm4>f!-3''Id60P"]O4s2sF2.SL,%6Q=TA2ZUo4>f!-2EhR40P"]Q4s2sF2.L2]%6Q=TA2laq4>f!,@m1>a0P"]S4s2sF2.JR/%6Q=TA77YE4>f!,0g6%/0P"^)4s2sF2.^A`%6Q=TA7[qI4>f!,@6P,_0P"^+4s2sF2.\L+%6Q=TAMQFl4>f!-2*MI30P"`N4s2sF2.JX1%6Q=TAMu^p4>f)UANgPc0P"`R4s2sF3&NES%6Q=TAN2jr4>f)U3''Id60P"`T4s2sF3&NWY%6Q=TARRbF4>f)U@6P,_0P"a(4s2sF3&NNV%6Q=TARdnH4>f)V@Qk5`0P"a*4s2sF3&G,/%6Q=TAS"%J4>f)VA3LGb0P"a,4s2sF3&G&-%6Q=TAhZCk4>f)V1-Q.00P"cM4s2sF3&NHT%6Q=TAhlOm4>f)T@Qk5`0P"cO4s2sF3Arf[%6Q=TAi)[o4>gPW0g6%/0P"cQ4s2sF@:M;]%6Q=TAi;gq4>gPW@m1>a0P"cS4s2sF@:Ee3%6Q=TAiMss4>gPVA3LGb0P"cU4s2sF@:E_1%6Q=TAmmkG4>gPV1Hl710P"d)4s2sF@:M&V%6Q=TAn+"I4>gPV1-Q.00P"d+4s2sFA2ZG3%6Q=TAn=.K4>gY-Aj-Yd0P"d-4s2sFAMdm\%6Q=U0JG[54>g\/3Bdm70P)pm4s2sFARd_a%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:>#1-QgC2.^8W4q0V.AM>o(+?VMn0etp%4>:>#1d3$E2.e^+4q0V.AM>u*+?VMn@:MJ14>:>#2Ei6G2.g9.4q0V.AM?&,+?VP:0k!6T4>:>#3''JHI2DHmt4q0V.AM?,.+?VP:1cRZ.4>:>#@6Per2DHpu4q0V.AM@RW+?VP9AhuU[4>:>#@m2"t2DHpq4q0V.AM@XY+?VP9AiW$a4>:>#ANh5!2DHm?4q0V.AM@^[+?VP:0K;6*4>:>$0KpUA2DI%"4q0V.AMGo''+?VP:1h/]Y4>:>$1-QgC2DI$F4q0V.AMGu)+?VP:1h8cZ4>:>$1d3$E2DI"!4q0V.AMH&++?VP:1Gh9)4>:>$2Ei6G2DHsG4q0V.AMH,-+?VP:0P!?V4>:>$3''JHI2DHmD4q0V.AMH2/+?VP:1H.K,4>:>$@m2"t2Dd-E4q0V.AMI^Z+?VP=1M&`Z4>:>$ANh5!2Dd."4q0V.AMId\+?VP=11<?U4>:>%0KpUA2Dd1"4q0V.AMPu(+?VP=1LrZY4>:>%1-QgC2Dd1!4q0V.AMQ&*+?VP=0P3KX4>:>%1d3$E2Dd-u4q0V.AMQ,,+?VP=0f2''''4>:>%2Ei6G2Dd*u4q0V.AMQ2.+?VP=1H%E+4>:>%@6Per2Dd*G4q0V.AMR^Y+?VP>2Ieo[4>:>%@m2"t2DmL,4q0V.AMRd[+?VP>@PBtT4>:>%ANh5!2E!QS4q0V.AMRj]+?VP?3&s/34>:>&1-QgC2E!QR4q0V.AMZ,++?VP?3&Ef.4>:>&1d3$E2E!QT4q0V.AMZ2-+?VP?3+P2^4>:>&2Ei6G2E*<G4q0V.AMZ8/+?VPB3A`o/4>:>&3''JHI2E<[+4q0V.AMZ>1+?VPB2.8ZX4>:>&@6Per2E<]T4q0V.AM[dZ+?VPB2D@<(4>:>&@m2"t2E<WO4q0V.AM[j\+?VPB2`3c.4>:>&ANh5!2E<QI4q0V.AM[p^+?VPB3&3Z,4>:>''0KpUA2E<U&4q0V.AMc,*+?VPB2E3l04>:>''1-QgC2E<[)4q0V.AMc2,+?VPB2.\r\4>:>''1d3$E2E<WN4q0V.AMc8.+?VPB2`X&24>:>''2Ei6G2E<`T4q0V.AMc>0+?VPB2.Sl[4>:>''3''JHI2E<ZO4q0V.AMcD2+?VPB2.A`Y4>:>''@6Per2I\L%4q0V.AMdj[+?VPk2_mQ+4>:>''@m2"t2I^/M4q0V.AMdp]+?VPk@V.e54>:>''ANh5!2I^2Q4q0V.AMe!_+?VPkAn4(74>:>(0KpUA2J$;P4q0V.AMl2++?VPn@:h\44>:>(1-QgC2J$DT4q0V.AMl8-+?VPn@Q$CZ4>:>(1d3$E2J$AR4q0V.AMl>/+?VPn3A<W+4>:>(2Ei6G2J"mZ4q0V.AMlD1+?VPn@lHR\4>:>(3''JHI2J$AU4q0V.AMlJ3+?VPn@5U4X4>:>(@6Per2J"m.4q0V.AMmp\+?VPn@UhS24>:>(@m2"t2J$?+4q0V.AMn!^+?VPn@:DD04>:>(ANh5!2J$DR4q0V.AMn''`+?VPn3As&14>:>)0KpUA2J"mY4q0V.AMu8,+?VPn@l-@Y4>:>)1-QgC2J$DU4q0V.AMu>.+?VPn@:;>/4>:>)1d3$E2J$;U4q0V.AMuD0+?VPn@Pg7X4>:>)2Ei6G2_d.#4q0V.AMuJ2+?VS;2*!i04>:>)3''JHI2_d3N4q0V.AMuP4+?VS;2DdT,4>:>)@6Per2_d-L4q0V.AN"!]+?VS;2E*f/ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0P*.P4s2sH0f<H)%6Q=U2Inuo4?"uQ@m1>a0P*.R4s2sH0fCpR%6Q=U2J,,q4?"uO@m1>a0P*0s4s2sH0fCmQ%6Q=U2_dK=4?"uPANgPc0P*0u4s2sH0f1dP%6Q=U2`!W?4?"uQ3''Id60P*1"4s2sH0f:jQ%6Q=U2`3cA4?##O@6P,_0P*1$4s2sH1,UgN%6Q=U2`EoC4?#&P2a.[50P*1&4s2sH1GgsQ%6Q=U2`X&E4?#&PAj-Yd0P*1O4s2sH1G`T+%6Q=U2e"rn4?#)TAj-Yd0P*1Q4s2sH1c8]*%6Q=U2e5)p4?#)S2*MI30P*1S4s2sH1c8l/%6Q=U2eG5r4?#)SANgPc0P*3t4s2sH1c-pN%6Q=U3&*T>4?#)QAj-Yd0P*4!4s2sH1c79W%6Q=U3&NlB4?#,V2EhR40P*4%4s2sH2)dKY%6Q=U3&a#D4?#/P0Koq.0P*4''4s2sH2.eO+%6Q=U3&s/F4?#/P0g6%/0P*4P4s2sH2.eU-%6Q=U3+>&o4?#-00g6%/0P*4R4s2sH2.g8\%6Q=U3+P2q4?#-0Aj-Yd0P*4T4s2sH2.e[/%6Q=U3+b>s4?#-01Hl710P*7"4s2sH2`5&.%6Q=U3AWiA4?#2W@Qk5`0P*7$4s2sH2`<QX%6Q=U3AiuC4?#2VANgPc0P*7&4s2sH2`<HU%6Q=U3B'',E4?#2X3Bdm70P*7(4s2sH2`>).%6Q=U3B98G4?#2W@m1>a0P*7Q4s2sH2`5)/%6Q=U3FY/p4?#2W2*MI30P*7S4s2sH2`<WZ%6Q=U3Fk;r4?#2W1-Q.00P*7U4s2sH2e?Pa%6Q=U3G(Gt4?#5ZANgPc0P+ZH4s2sH3+=R*%6Q=U@5C(i4?#5Z@m1>a0P+ZL4s2sH3&io^%6Q=U@5U4k4?#5Y@m1>a0P+ZN4s2sH3&r]W%6Q=U@5g@m4?#5[1Hl710P+ZP4s2sH3&bG5%6Q=U@6$Lo4?#8Z@6P,_0P+[$4s2sH3B(P6%6Q=U@:DDC4?#8[0g6%/0P+[&4s2sI1brQ)%6Q=U@:VPE4?#90A3LGb0P+[(4s2sH@527U%6Q=U@:h\G4?$\''@6P,_0P+]I4s2sH@59N#%6Q=U@PL%h4?$\''1d2@20P+]K4s2sH@52@X%6Q=U@P^1j4?$\''ANgPc0P+]O4s2sH@Q-50%6Q=U@Q-In4?$_Z0Koq.0P+]Q4s2sH@Q#o(%6Q=U@Q?Up4?$_-ANgPc0P+^%4s2sH@Q$//%6Q=U@U_MD4?$bZ0g6%/0P+^''4s2sH@q%5X%6Q=U@UqYF4?$bZ2*MI30P+^)4s2sHA2uG0%6Q=U@V.eH4?$e03Bdm70P+`J4s2sHA2uA.%6Q=U@kg.i4?$e10g6%/0P+`L4s2sHA2n0b%6Q=U@l$:k4?$e.@Qk5`0P+`N4s2sHAi=3a%6Q=U@lHRo4?$k21-Q.00P+`R4s2sHAmm\`%6Q=U@lZ^q4?$k\3''Id60P+a&4s2sHAmmM[%6Q=U@q%VE4?,#P2EhR40P+a(4s2sI0JtgR%6Q=U@q7bG4?,#S2EhR40P+a*4s2sI0K:mQ%6Q=U@qInI4?,&S0g6%/0P+cK4s2sI0fLdM%6Q=UA2-7j4?,&S3''Id60P+cM4s2sI0fCmQ%6Q=UA2?Cl4?,&RANgPc0P+cO4s2sI0fLmP%6Q=UA2QOn4?,&R@Qk5`0P+cS4s2sI0fCpR%6Q=UA2ugr4?,)M2*MI30P+d''4s2sI1,LpR%6Q=UA7@_F4?,/W1-Q.YDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,bARo:7+?VV?2`Eo04>:>WA3M+u3&EF%4q0V.ARo@9+?VV?1GM''&4>:>WAj.>"3&EQO4q0V.AS!PZ+?VV?2E!`.4>:>X0g6^B3&EO&4q0V.AS!V\+?VV?1c[`/4>:>X1HlpD3&EO''4q0V.AS!\^+?VV?2.A`Y4>:>X2*N-F3&EF$4q0V.AS!b`+?VV?1Gq?*4>:>X2a/?H3&ENJ4q0V.AS!hb+?VV?2D[N+4>:>X3BeQJ3&ENR4q0V.AS#:6+?VV?2Inu\4>:>X@Qkns3&EHM4q0V.AS#@8+?VVA2.\r\4>:>XA3M+u3&WX(4q0V.AS#F:+?VVA2.f#]4>:>XAj.>"3&YA/4q0V.AS*V[+?VVB0f)!&4>:>Y0g6^B3&`NN4q0V.AS*\]+?VVB0K20)4>:>Y1HlpD3&`NF4q0V.AS*b_+?VVAAn=.84>:>Y2*N-F3&YAX4q0V.AS*nc+?VVB0K)*(4>:>Y3BeQJ3&`O"4q0V.AS,@7+?VVC2*!i04>:>Y@Qkns3&kG\4q0V.AS,F9+?VVCA2HIZ4>:>YA3M+u3&kG/4q0V.AS,L;+?VVCA7Ie44>:>YAj.>"3&kG.4q0V.AhYo&+?VVCA7Rk54>:A$0g6^B3&kJ(4q0V.AhYu(+?VVC@pqP14>:A$1HlpD3&kG+4q0V.AhZ&*+?VVCA26=X4>:A$2*N-F3&s!/4q0V.AhZ,,+?VVDAMZLZ4>:A$2a/?H3+4^S4q0V.Ah[XW+?VVl2E!`.4>:A$@Qkns3+4^*4q0V.Ah[^Y+?VVl2_[E)4>:A$A3M+u3+4d*4q0V.Ah[d[+?VVl2e,#\4>:A$Aj.>"3+4^$4q0V.Ahbu''+?VVl@5''kS4>:A%0g6^B3+4a#4q0V.Ahc&)+?VVl3&Nl/4>:A%1HlpD3+4^U4q0V.Ahc,++?VVl2DRH*4>:A%2*N-F3+4^V4q0V.Ahc2-+?VVl2Ieo[4>:A%2a/?H3+4a+4q0V.Ahc8/+?VVl2e"r[4>:A%3BeQJ3+4US4q0V.Ahd^X+?VVl2E3l04>:A%@Qkns3+Fj%4q0V.AhddZ+?VVn3+4u[4>:A%A3M+u3+Fp.4q0V.Ahdj\+?VVn@pqP14>:A&0g6^B3+HGT4q0V.Ahl,*+?VVn@PU+V4>:A&1HlpD3+HGS4q0V.Ahl2,+?VVn@kp4W4>:A&2*N-F3+HGU4q0V.Ahl8.+?VVoAMH@X4>:A&2a/?H3+QQ34q0V.Ahl>0+?VVoAN2j_4>:A&3BeQJ3+QT44q0V.AhmdY+?VVoAhuU[4>:A&@Qkns3+QW04q0V.Ahmj[+?VVoARRb34>:A&A3M+u3+QSW4q0V.Ahmp]+?VVoAMu^]4>:A&Aj.>"3+ZPS4q0V.Ahu,)+?VVq0Jbm%4>:A''0g6^B3+aj)4q0V.Ahu2++?VVpAn=.84>:A''1HlpD3+ajQ4q0V.Ahu8-+?VVq3G(Ga4>:A''2*N-F3+cVT4q0V.Ahu>/+?VY<1h&WX4>:A''2a/?H3A<9u4q0V.AhuD1+?VY<2)@E*4>:A''3BeQJ3A<9F4q0V.Ai!jZ+?VY<2)IK+4>:A''@Qkns3A<7!4q0V.Ai!p\+?VY<2)RQ,4>:A''A3M+u3A<<E4q0V.Ai"!^+?VY<1cIT-4>:A''Aj.>"3A<:%4q0V.Ai)2*+?VY<1hAi[4>:A(0g6^B3A<:#4q0V.Ai)8,+?VY<2).9(4>:A(1HlpD3A<7#4q0V.Ai)>.+?VY<1bh0''4>:A(2*N-F3AE6D4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=V1c@N?4?5,N2a.[50P3.#4s2sJ0fEN*%6Q=V1cRZA4?5,S@6P,_0P3.%4s2sJ0fD$U%6Q=V1grQj4?5-+3Bdm70P3.N4s2sJ1,CjQ%6Q=V1h/]l4?5/S2a.[50P3.P4s2sJ1,CmR%6Q=V1hAin4?5/QA3LGb0P3.R4s2sJ1,L[K%6Q=V2)%3:4?5/QANgPc0P30s4s2sJ1,WN)%6Q=V2)7?<4?5/R@Qk5`0P30u4s2sJ1,^sQ%6Q=V2)IK>4?5/S0g6%/0P31"4s2sJ1,CaN%6Q=V2)[W@4?5/R3Bdm70P31$4s2sJ1,NN*%6Q=V2)mcB4?5/R2*MI30P31&4s2sJ1,CpS%6Q=V2.8Zk4?5/QAj-Yd0P31O4s2sJ1,WK(%6Q=V2.Jfm4?58Z3''Id60P31Q4s2sJ2E<`\%6Q=V2D@<;4?5<0A3LGb0P33t4s2sJ2Ig2[%6Q=V2DdT?4?5<32a.[50P34#4s2sJ2J-D^%6Q=V2E!`A4?5<33Bdm70P34%4s2sJ2J+j2%6Q=V2E3lC4?5>X2EhR40P34''4s2sJ2`EQW%6Q=V2IScl4?5>Z2EhR40P34R4s2sJ3&*3Q%6Q=V2J#&p4?5AT@6P,_0P34T4s2sJ3&*0P%6Q=V2_[E<4?5AT@m1>a0P36u4s2sJ3+cYa%6Q=V2_mQ>4?5B51d2@20P37$4s2sJ3FXd.%6Q=V2`<iB4?5E20g6%/0P37&4s2sJ3FXg/%6Q=V2`NuD4?6h]0g6%/0P37(4s2sJ@q@Ya%6Q=V2dnlm4?6t41-Q.00P37Q4s2sJAh[d[%6Q=V2e,#o4?7".1Hl710P37S4s2sJAhl&(%6Q=V2e>/q4>eg(2a.[50P37U4s2sF0P+fZ%6Q=V3&!N=4>eg(2*MI30P3:!4s2sF0P!(*%6Q=V3&3Z?4>eg(A3LGb0P3:#4s2sF0P"TU%6Q=V3&EfA4>eg''2*MI30P3:%4s2sF0On]Y%6Q=V3&WrC4>eg''0g6%/0P3:''4s2sF0P3%''%6Q=V3&j)E4>eg&ANgPc0P3:)4s2sF0P*7.%6Q=V3+4un4>eiO1-Q.00P3:R4s2sF0kN4*%6Q=V3+G,p4>elR1Hl710P3:T4s2sF1,q$Q%6Q=V3+Y8r4>eoN0g6%/0P3:V4s2sF1LXfX%6Q=V3A<W>4>f!.ANgPc0P3="4s2sF2D?gK%6Q=V3ANc@4>f#O@Qk5`0P3=$4s2sF2DI-S%6Q=V3A`oB4>f!.A3LGb0P3=&4s2sF2DI$P%6Q=V3As&D4>f#N2EhR40P3=(4s2sF2D@-T%6Q=V3FP)o4>f!.2a.[50P3=S4s2sF2DI*R%6Q=V3Fb5q4>f#OAj-Yd0P3=U4s2sF2D@*S%6Q=V3FtAs4>f#O0Koq.0P3=W4s2sF2.ea1%6Q=V@5''kf4>f&P3''Id60P4`J4s2sF2_d3S%6Q=V@5:"h4>f)W2*MI30P4`L4s2sF3&bD4%6Q=V@5L.j4>f)X1Hl710P4`N4s2sF3&rcY%6Q=V@5^:l4>f)X@6P,_0P4`P4s2sF3&`i]%6Q=V@5pFn4>f)X2*MI30P4`R4s2sF3&bA3%6Q=V@:;>B4>f*1A3LGb0P4a&4s2sF3ANHU%6Q=V@:MJD4>f,S1-Q.00P4a(4s2sF3ANET%6Q=V@:_VF4>f,W@6P,_0P4a*4s2sF3Arl]%6Q=V@PBtg4>gPY0g6%/0P4cK4s2sF@:_>\%6Q=V@PU+i4>gPY3Bdm70P4cM4s2sF@:V;\%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:AV1d3$E2.:#R4q0V.An!V]+?VMiA2la^4>:AV2Ei6G2.:&P4q0V.An!\_+?VMj2`3c.4>:AV3''JHI2.C*-4q0V.An!ba+?VMjAN)d^4>:AV@6Per2.C,O4q0V.An#:7+?VMjAN2j_4>:AVANh5!2.C,P4q0V.An#@9+?VMjAMcR[4>:AW0KpUA2.C*.4q0V.An*PZ+?VMk0P!?V4>:AW1-QgC2.JO"4q0V.An*V\+?VMl3&Ef.4>:AW1d3$E2.S[*4q0V.An*\^+?VMm2.A`Y4>:AW2Ei6G2.\[%4q0V.An*b`+?VMm2)RQ,4>:AW3''JHI2.\X(4q0V.An*hb+?VMm2)IK+4>:AW@6Per2.^;S4q0V.An,:6+?VMmA2ZU\4>:AW@m2"t2.eON4q0V.An,@8+?VMn1c@N,4>:AWANh5!2.ed$4q0V.An,F:+?VMn@Q?U]4>:AX0KpUA2DI$I4q0V.An3V[+?VP:1M/f[4>:AX1-QgC2DI$t4q0V.An3\]+?VP:2`Eo04>:AX2Ei6G2DI($4q0V.An3ha+?VP:2.8ZX4>:AX3''JHI2DI''K4q0V.An3nc+?VP:2`3c.4>:AX@6Per2DR$r4q0V.An5@7+?VP=3&a#14>:AX@m2"t2Dd9N4q0V.An5F9+?VP=2)IK+4>:AXANh5!2Dei!4q0V.An5L;+?VP=2`Nu14>:AY0KpUA2Dd:''4q0V.An<\\+?VP=2dnlZ4>:AY1-QgC2Dd9G4q0V.An<b^+?VP=2E*f/4>:AY1d3$E2Dd3H4q0V.An<h`+?VP=2Inu\4>:AY2Ei6G2Dd@%4q0V.An<nb+?VP>2_mQ+4>:AY3''JHI2Dnnt4q0V.An<td+?VP>A2c[]4>:AY@6Per2Do#''4q0V.An>F8+?VP?@5:"U4>:AY@m2"t2E"u''4q0V.An>L:+?VP?3Fk;_4>:AYANh5!2E<d-4q0V.An>R<+?VPB@5pF[4>:AZ0KpUA2E<cT4q0V.AnEb]+?VPB@kg.V4>:AZ1-QgC2E>2W4q0V.AnEh_+?VPBA2?CY4>:AZ1d3$E2E>8V4q0V.AnEna+?VPB3FY/]4>:AZ2Ei6G2E>5*4q0V.AnEtc+?VPB@U_M14>:AZ3''JHI2E>2T4q0V.AnF%e+?VPB@Pg7X4>:AZ@6Per2E>;%4q0V.AnGL9+?VPB@q7b44>:AZ@m2"t2E>2V4q0V.AnGR;+?VPB@q.\34>:AZANh5!2E>2(4q0V.AnGX=+?VPB@l$:X4>AND0KpUA2E>2%4q0V/0JG4F+?VPk1c[`/4>AND1-QgC2I\LQ4q0V/0JG:H+?VPl1G_3(4>AND1d3$E2J+a$4q0V/0JG@J+?VPo0f2''''4>AND2Ei6G2J$K34q0V/0JGFL+?VPo0f)!&4>AND3''JHI2J$JW4q0V/0JGLN+?VPo1-%N-4>AND@6Per2J+aV4q0V/0JHs"+?VPo1,(m$4>AND@m2"t2J+^S4q0V/0JI$$+?VPo0P3KX4>ANDANh5!2J+Wu4q0V/0JI*&+?VPo1,;$&4>ANE0KpUA2J$K44q0V/0JP:G+?VPnAS++84>ANE1-QgC2J+X$4q0V/0JP@I+?VPo1GM''&4>ANE1d3$E2J+a)4q0V/0JPFK+?VPo1GV-''4>ANE2Ei6G2J+^#4q0V/0JPLM+?VPo0f;-(4>ANE3''JHI2J+^R4q0V/0JPRO+?VPo11i]Z4>ANE@6Per2J+p.4q0V/0JR$#+?VPo11<?UASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0eb=l4s2sGAS#@8%6Q@!0k<Hj4>pe*0g6%/0eb=n4s2sGAS*\]%6Q@!0kNTl4>pb\@m1>a0eb@:4s2sGAS*kb%6Q@!1,1s84?"uT1d2@20eb@<4s2sH0f_6X%6Q@!1,D*:4?"uRA3LGb0eb@>4s2sH0fWT*%6Q@!1,V6<4?"uS1d2@20eb@@4s2sH0f_!Q%6Q@!1,hB>4?##OANgPc0eb@B4s2sH1-%*R%6Q@!1-%N@4?##U2EhR40eb@k4s2sH1GgpP%6Q@!11EEi4?#&R0Koq.0eb@m4s2sH1c@0S%6Q@!11WQk4?#)T1Hl710eb@o4s2sH1cAc+%6Q@!11i]m4?#)U0Koq.0ebC;4s2sH1cAl.%6Q@!1GM''94?#,O1d2@20ebC=4s2sH2*!BT%6Q@!1G_3;4?#/R2a.[50ebC?4s2sH2DAZ*%6Q@!1Gq?=4?#/P@Qk5`0ebCA4s2sH2D@-T%6Q@!1H.K?4?#/Q1Hl710ebCC4s2sH2J"U,%6Q@!1H@WA4?#001Hl710ebCl4s2sH2`NWX%6Q@!1L`Nj4?#2XA3LGb0ebCn4s2sH2`G>4%6Q@!1LrZl4?#2W0g6%/0ebCp4s2sH3+F[,%6Q@!1M/fn4?#5[Aj-Yd0ebF<4s2sH3+4a0%6Q@!1bh0:4?#6/1Hl710ebF>4s2sH3+4g2%6Q@!1c%<<4?#6.1Hl710ebFB4s2sH3B1P5%6Q@!1cIT@4?$\(ANgPc0ebFD4s2sH@5BW%%6Q@!1c[`B4?$\W@6P,_0ebFm4s2sH@:;/[%6Q@!1h&Wk4?$\[A3LGb0ebFo4s2sH@:a%7%6Q@!1h8cm4?$_X0g6%/0ebFq4s2sH@Q?;0%6Q@!1hJoo4?$_/@Qk5`0ebI=4s2sH@Q-/.%6Q@!2).9;4?$_02a.[50ebI?4s2sH@Q@s_%6Q@!2)@E=4?$_01d2@20ebIA4s2sH@Q7s`%6Q@!2)RQ?4?$_Y3''Id60ebIC4s2sH@Q6;1%6Q@!2)d]A4?$_/1d2@20ebIE4s2sH@q%G^%6Q@!2.A`l4?$e[@Qk5`0ebIp4s2sHA7@5V%6Q@!2.Sln4?$e2@m1>a0ebL>4s2sHA77/U%6Q@!2DIB<4?$e\@6P,_0ebL@4s2sHA7@AZ%6Q@!2D[N>4?$e[1-Q.00ebLB4s2sHA7@8W%6Q@!2DmZ@4?$e[@6P,_0ebLD4s2sHA775W%6Q@!2E*fB4?$e[Aj-Yd0ebLF4s2sHA7@D[%6Q@!2E<rD4?$e[3''Id60ebLo4s2sHA79"4%6Q@!2I\im4?$e]1-Q.00ebLq4s2sHA7IP^%6Q@!2Inuo4?$eZ@m1>a0ebLs4s2sHAiDD-%6Q@!2_dK=4?$k_Aj-Yd0ebOA4s2sI0K!E*%6Q@!2`!W?4?,#P@6P,_0ebOC4s2sI0K;!T%6Q@!2`3cA4?,&Q0Koq.0ebOE4s2sI0fUjN%6Q@!2`EoC4?,&TAj-Yd0ebOG4s2sI0fV-V%6Q@!2`X&E4?,&T@6P,_0ebOp4s2sI0fN].%6Q@!2e"rn4?,&T1-Q.00ebOr4s2sI0kE:-%6Q@!2e5)p4?,''-@6P,_0ebOt4s2sI1,(XN%6Q@!2eG5r4?,)N1d2@20ebR@4s2sI1,3?(%6Q@!3&*T>4?,)Q@Qk5`0ebRB4s2sI1h/O0%6Q@!3&<`@4?,0,Aj-Yd0ebRD4s2sI1h/F-%6Q@!3&NlB4?,0-1d2@20ebRF4s2sI1c[Q[%6Q@!3&a#D4?,/XANgQ7DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c0K;$U+?VV?@PU+V4>ANL3BeQJ3&EX*4q0V/0K<K)+?VV?@q%V24>ANL@Qkns3&G)(4q0V/0K<Q++?VV?@k^(U4>ANLA3M+u3&G/%4q0V/0K<W-+?VV?3A<W+4>ANLAj.>"3&G)S4q0V/0KCgN+?VV?A2-7W4>ANM0g6^B3&G,R4q0V/0KCmP+?VVB1M/f[4>ANM1HlpD3&`R%4q0V/0KCsR+?VVB1L`NW4>ANM2*N-F3&`TJ4q0V/0KD$T+?VVB1,V6)4>ANM2a/?H3&`WM4q0V/0KD*V+?VVB0fV?+4>ANM3BeQJ3&`]P4q0V/0KEQ*+?VVB1H.K,4>ANM@Qkns3&`TQ4q0V/0KEW,+?VVCAhuU[4>ANMA3M+u3&rZJ4q0V/0KE].+?VVCAi)[\4>ANMAj.>"3&kM14q0V/0OZY!+?VVCAiMs`4>ANu0g6^B3&kM\4q0V/0OZ_#+?VVCAN2j_4>ANu1HlpD3&r^%4q0V/0OZe%+?VVCAS++84>ANu2*N-F3+65R4q0V/0OZk''+?VVl3+G,]4>ANu2a/?H3+4gY4q0V/0OZq)+?VVl@5C(V4>ANu3BeQJ3+4dW4q0V/0O\BR+?VVl@50qT4>ANu@Qkns3+4g''4q0V/0O\HT+?VVl@5L.W4>ANuA3M+u3+66(4q0V/0O\NV+?VVl@5U4X4>ANuAj.>"3+65T4q0V/0Oc_"+?VVl3B0234>AO!0g6^B3+4g%4q0V/0Oce$+?VVl3FP)\4>AO!1HlpD3+65S4q0V/0Ock&+?VVn2IScY4>AO!2*N-F3+FpY4q0V/0Ocq(+?VVn3+G,]4>AO!2a/?H3+HJT4q0V/0OeHS+?VVo2I\iZ4>AO!@Qkns3+P$04q0V/0OeNU+?VVo3Aiu04>AO!A3M+u3+QW24q0V/0OeTW+?VVq0f2''''4>AO!Aj.>"3+am#4q0V/0Ole#+?VVq0f;-(4>AO"0g6^B3+am$4q0V/0Olk%+?VVq@5C(V4>AO"1HlpD3A<?F4q0V/0Olq''+?VY<2)mc/4>AO"2*N-F3A<=#4q0V/0Om")+?VY<2D[N+4>AO"2a/?H3A<<N4q0V/0Om(++?VY<2.\r\4>AO"3BeQJ3A<?H4q0V/0OnNT+?VY<2.Sl[4>AO"@Qkns3A<="4q0V/0OnTV+?VY=0f_E,4>AO"A3M+u3AE6J4q0V/0OnZX+?VY=0kENX4>AO"Aj.>"3AEHM4q0V/0Ouk$+?VY=2`Nu14>AO#0g6^B3AEHO4q0V/0Ouq&+?VY=2`*]-4>AO#1HlpD3ANNQ4q0V/0P!"(+?VY>@:MJ14>AO#2*N-F3ANQJ4q0V/0P!(*+?VY>3&Nl/4>AO#2a/?H3ANTS4q0V/0P!.,+?VY>3As&14>AO#3BeQJ3ANO&4q0V/0P"TU+?VY>3AWi.4>AO#@Qkns3ANU)4q0V/0P"ZW+?VY>@5pF[4>AO#A3M+u3ANO''4q0V/0P"`Y+?VY>3AE],4>AO#Aj.>"3Ak5"4q0V/0P*"''+?VYA@5C(V4>AO$1HlpD3Ak5&4q0V/0P*()+?VYA@5L.W4>AO$2*N-F3ArlX4q0V/0P*.++?VYB3Fb5^4>AO$2a/?H3Arm,4q0V/0P*4-+?VYB@q.\34>AO$3BeQJ3AtD''4q0V/0P+ZV+?VYC0JG["4>AO$@Qkns3B&m,4q0V/0P+`X+?VYC3&Nl/4>AO$A3M+u3B(P.4q0V/0P3"&+?VYD@:h\44>AO%0g6^B3B1J&4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@!AhlOm4?5DU1Hl710ed2q4s2sJ3A<<S%6Q@!Ai)[o4?5DU@m1>a0ed2s4s2sJ3A<HW%6Q@!Ai;gq4?5E30g6%/0ed3"4s2sJ@:_>\%6Q@!An+"I4?6n`1d2@20ed3M4s2sJ@qIV_%6Q@!An=.K4?6n`1Hl710ed3O4s2sJAR].5%6Q@"0JG[54?7"0@Qk5`0ek@:4s2sJAi*p[%6Q@"0JYg74>eiI1d2@20ek@<4s2sF0eb:F%6Q@"0Jks94>eg)@Qk5`0ek@>4s2sF0P31+%6Q@"0K)*;4>eg)3Bdm70ek@@4s2sF0eb@H%6Q@"0O[-f4>eiI2*MI30ek@k4s2sF0k=cX%6Q@"0P3Kk4>elRA3LGb0ekC:4s2sF1,r]+%6Q@"0ekj74>em+0Koq.0ekC<4s2sF1L`+''%6Q@"0f)!94>f#PANgPc0ekC>4s2sF2D\f+%6Q@"0f;-;4>f#Q3Bdm70ekC@4s2sF2D[*P%6Q@"0fM9=4>f#QAj-Yd0ekCB4s2sF2D[0R%6Q@"0f_E?4>f#P3Bdm70ekCk4s2sF2Dm9S%6Q@"0k*<h4>f#RANgPc0ekCm4s2sF2DmEW%6Q@"0k<Hj4>f#U1d2@20ekCo4s2sF2D[6T%6Q@"1,1s84>f)X0Koq.0ekF=4s2sF3&tS7%6Q@"1,D*:4>f)YANgPc0ekF?4s2sF3+=[-%6Q@"1,V6<4>f)Y@m1>a0ekFA4s2sF3+6A^%6Q@"1,hB>4>f*,3Bdm70ekFC4s2sF3+4^/%6Q@"1-%N@4>f,WA3LGb0ekFl4s2sF@PBf+%6Q@"11EEi4>gPZ@Qk5`0ekFn4s2sF@PD7T%6Q@"11WQk4>gPZ2*MI30ekFp4s2sF@PD:U%6Q@"11i]m4>gS%3''Id60ekI<4s2sF@V''+7%6Q@"1GM''94>gSZ@m1>a0ekI>4s2sF@V%P`%6Q@"1G_3;4>gSZ@Qk5`0ekIB4s2sFA3"0a%6Q@"1H.K?4>gY01d2@20ekID4s2sFAMu;-%6Q@"1H@WA4>g\-Aj-Yd0ekIm4s2sFAMu8,%6Q@"1L`Nj4>g\]1-Q.00ekIo4s2sFARo45%6Q@"1LrZl4>g\\Aj-Yd0ekIq4s2sFARo=8%6Q@"1M/fn4>g\]1Hl710ekL=4s2sFAS!PZ%6Q@"1bh0:4>g_-3''Id60ekL?4s2sFAiDG.%6Q@"1c%<<4>g_[2a.[50ekLA4s2sFAn!V]%6Q@"1c7H>4>noQ2EhR40ekLC4s2sG0fCsS%6Q@"1cIT@4>noPANgPc0ekLE4s2sG0f<K*%6Q@"1c[`B4>noO2*MI30ekLn4s2sG0fUpP%6Q@"1h&Wk4>noQ@m1>a0ekLp4s2sG0fLdM%6Q@"1h8cm4>noP@Qk5`0ekLr4s2sG0fNZ-%6Q@"1hJoo4>np&2a.[50ekO>4s2sG0f^pO%6Q@"2).9;4>np&@Qk5`0ekO@4s2sG0fW`.%6Q@"2)@E=4>np&@m1>a0ekOB4s2sG0f`Z+%6Q@"2)RQ?4>np&1d2@20ekOD4s2sG0f_''S%6Q@"2)d]A4>np&ANgPc0ekOF4s2sG1,<E)%6Q@"2*!iC4>o#S3Bdm70ekOo4s2sG1cAr0%6Q@"2.A`l4>o#T3Bdm70ekOq4s2sG1c],2%6Q@"2.Sln4>o$*1-Q.00ekOs4s2sG1cRHY%6Q@"2.f#p4>o#V0Koq.0ekR?4s2sG1h&.&%6Q@"2DIB<4>o$)2*MI30ekRA4s2sG1c[?U%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AQK1HlpD2DdEO4q0V/0fCjP+?VP=@6$L\4>AQK2*N-F2DdEL4q0V/0fCpR+?VP=@:_V34>AQK2a/?H2DeiQ4q0V/0fD!T+?VP=@:DD04>AQK3BeQJ2DdF&4q0V/0fEH(+?VP=@:MJ14>AQK@Qkns2DdES4q0V/0fEN*+?VP=@5:"U4>AQKA3M+u2Del!4q0V/0fET,+?VP>2`3c.4>AQL0g6^B2E"uT4q0V/0fLjO+?VP?@:DD04>AQL1HlpD2E##$4q0V/0fLpQ+?VP?@PL%U4>AQL2*N-F2IS?s4q0V/0fM!S+?VPj0kNTY4>AQL2a/?H2E>>.4q0V/0fM''U+?VPj0JPa#4>AQL3BeQJ2IS=O4q0V/0fNN)+?VPj0f_E,4>AQL@Qkns2E>A[4q0V/0fNT++?VPj1,1s%4>AQLA3M+u2IS<r4q0V/0fNZ-+?VPj0O[-S4>AQLAj.>"2E>A*4q0V/0fUjN+?VPj0JYg$4>AQM0g6^B2IS9s4q0V/0fUpP+?VPBARmt64>AQM1HlpD2IS<p4q0V/0fV!R+?VPk2)%3''4>AQM2*N-F2I\LS4q0V/0fV''T+?VPk@5L.W4>AQM3BeQJ2J+aW4q0V/0fWT*+?VPo2e,#\4>AQM@Qkns2J+p*4q0V/0fWZ,+?VPo2).9(4>AQMA3M+u2J+j*4q0V/0fW`.+?VPo2)IK+4>AQMAj.>"2J+p,4q0V/0f^pO+?VPo2Inu\4>AQN0g6^B2J+gU4q0V/0f_!Q+?VPo2`Nu14>AQN1HlpD2J+jY4q0V/0f_''S+?VPo3+Y8_4>AQN2*N-F2J+mV4q0V/0f_-U+?VPo2_[E)4>AQN2a/?H2J+j(4q0V/0f_3W+?VPo3B'',24>AQN3BeQJ2J+g+4q0V/0f`Z++?VPnA2QO[4>AQN@Qkns2J+jZ4q0V/0f``-+?VPo2D@<(4>AQNA3M+u2J+gY4q0V/0f`f/+?VS;3G(Ga4>AQNAj.>"2_e`N4q0V/0jub"+?VS;@PL%U4>AR!0g6^B2_e`#4q0V/0juh$+?VS<2)[W-4>AR!1HlpD2_mC&4q0V/0jun&+?VS=1hAi[4>AR!2*N-F2`!<M4q0V/0jut(+?VS>2E<r14>AR!2a/?H2`*L''4q0V/0k!%*+?VS>3&<`-4>AR!3BeQJ2`*I)4q0V/0k"KS+?VS>3&!N*4>AR!@Qkns2`3O+4q0V/0k"QU+?VS@1,(m$4>AR!A3M+u2`<EO4q0V/0k"WW+?VS@0kNTY4>AR!Aj.>"2`<EJ4q0V/0k)h#+?VS@1,_<*4>AR"1HlpD2`<[)4q0V/0k)t''+?VS@@UVG04>AR"2*N-F2`>5(4q0V/0k*%)+?VSA3+Y8_4>AR"2a/?H2`E]T4q0V/0k*+++?VSA3+G,]4>AR"3BeQJ2`E`O4q0V/0k+QT+?VSA3+>&\4>AR"@Qkns2`P;V4q0V/0k+WV+?VSB@l6FZ4>AR"A3M+u2`P8T4q0V/0k+]X+?VSB@pqP14>AR"Aj.>"2`P8X4q0V/0k2n$+?VSBA2QO[4>AR#0g6^B2`P8V4q0V/0k2t&+?VSBA2$1V4>AR#1HlpD2dnLS4q0V/0k3%(+?VSk1LiTX4>AR#2*N-F2dnNs4q0V/0k3+*+?VSk1LrZY4>AR#2a/?H2dnL$4q0V/0k31,+?VSk1L`NW4>AR#3BeQJ2dp-,4q0V/0k4WU+?VSk@:_V34>AR#@Qkns2e$3+4q0V/0k4]W+?VSl@PL%UASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0em0K4s2sH@Uh5Y%6Q@"@q@hH4?$_Y1d2@20em2n4s2sH@Uh,V%6Q@"A26=k4?$_X0Koq.0em2p4s2sH@Uin3%6Q@"A2HIm4?$b[@6P,_0em2r4s2sHA7[GY%6Q@"A2ZUo4?$e_1d2@20em2t4s2sHA7]@:%6Q@"A2laq4?$e_@Qk5`0em3!4s2sHA7RY`%6Q@"A77YE4?$e^@m1>a0em3J4s2sHA7T47%6Q@"A7IeG4?$e^3''Id60em3L4s2sHA7[P\%6Q@"A7[qI4?$e]@6P,_0em3N4s2sHA7T78%6Q@"AM?:j4?$e^3Bdm70em5o4s2sHA3"3b%6Q@"AMQFl4?$e]3Bdm70em5q4s2sHA7dS\%6Q@"AMcRn4?$e_3Bdm70em5s4s2sHAiDS2%6Q@"AMu^p4?$k22a.[50em5u4s2sHAmo:8%6Q@"AN2jr4?$k`3Bdm70em6"4s2sI0JYOM%6Q@"ARmtI4?,''(0Koq.0em6N4s2sI0f`Z+%6Q@"AS++K4?,&U3''Id60em8o4s2sI2).$R%6Q@"AhcIl4?,2SA3LGb0em8q4s2sI2)/N''%6Q@"AhuUn4?,0/ANgPc0em8u4s2sI2)-mN%6Q@"AiDmr4?,2Q0g6%/0em9"4s2sI2)6sO%6Q@"AiW$t4?,2R0g6%/0em9K4s2sI2)-pO%6Q@"An!qH4?,0/@m1>a0em9M4s2sI2)7$Q%6Q@"An4(J4?,00Aj-Yd0em9O4s2sI2)$pP%6Q@"AnF4L4?,8Z1-Q.00etF:4s2sI2`EQW%6Q@#0JPa64?,8Y2EhR40etF<4s2sI2`<?R%6Q@#0Jbm84?,8X2EhR40etF>4s2sI2`E][%6Q@#0Ju$:4?,8X3''Id60etF@4s2sI2`3TZ%6Q@#0K20<4?,8W2a.[50etFB4s2sI2`,#.%6Q@#0KD<>4?,8W1Hl710etFk4s2sI3&P//%6Q@#0Od3g4?,;XA3LGb0etFm4s2sI3AE3O%6Q@#0P!?i4?,>T2a.[50etI;4s2sI3AEBT%6Q@#0ekj74?,>T@6P,_0etI=4s2sI@:E_1%6Q@#0f)!94?-b[1-Q.00etI?4s2sI@:M5[%6Q@#0f;-;4?-bZ1d2@20etIA4s2sI@6$2/%6Q@#0fM9=4?-bZ@Qk5`0etIC4s2sI@:hJ_%6Q@#0f_E?4?-bY1-Q.00etIl4s2sI@:M;]%6Q@#0k*<h4?-bZ1-Q.00etIn4s2sI@:Eh4%6Q@#0k<Hj4?-bY0Koq.0etIp4s2sI@:V8[%6Q@#0kNTl4?-bZA3LGb0etL<4s2sI@:D,Y%6Q@#1,1s84?-bY3Bdm70etL>4s2sI@:Wh2%6Q@#1,D*:4?-h-@m1>a0etL@4s2sI@l.a\%6Q@#1,V6<4?-h/@m1>a0etLB4s2sI@q@>X%6Q@#1,hB>4?-h]ANgPc0etLD4s2sI@q@P^%6Q@#1-%N@4?-h^1d2@20etLq4s2sI@q9(5%6Q@#11i]m4?-h^@6P,_0etO=4s2sI@q@AY%6Q@#1GM''94?-k0A3LGb0etO?4s2sIA3"6c%6Q@#1G_3;4?-k[1Hl710etOA4s2sIAMR^Y%6Q@#1Gq?=4?-n,0Koq.0etOC4s2sIAMI^Z%6Q@#1H.K?4?-n-1-Q.00etOE4s2sIAM@^[%6Q@#1H@WA4?-n-3Bdm70etOn4s2sIAMId\%6Q@#1L`Nj4?-n-0g6%/0etOp4s2sIAMIa[%6Q@#1LrZl4?-n]@6P-3DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c1,EK*+?VVq0k<HW4>ATIAj.>"3+amS4q0V/1,L[K+?VVq0kNTY4>ATJ0g6^B3+ap+4q0V/1,LaM+?VVq1,_<*4>ATJ1HlpD3+apS4q0V/1,LgO+?VVq0k3BV4>ATJ2*N-F3+amV4q0V/1,LmQ+?VVq1,V6)4>ATJ2a/?H3A<?O4q0V/1,LsS+?VY<2J#&]4>ATJ3BeQJ3A<?N4q0V/1,NE''+?VY<2Inu\4>ATJ@Qkns3A<BN4q0V/1,NK)+?VY=1GD!%4>ATJA3M+u3AE:"4q0V/1,NQ++?VY=1,hB+4>ATJAj.>"3AE<E4q0V/1,UaL+?VY=3&a#14>ATK0g6^B3AEKR4q0V/1,UgN+?VY=3+>&\4>ATK1HlpD3AEKL4q0V/1,UmP+?VY>@l6FZ4>ATK2*N-F3AP&Q4q0V/1,UsR+?VY>@Q-I[4>ATK2a/?H3AP/S4q0V/1,V$T+?VY>AMcR[4>ATK3BeQJ3AP)!4q0V/1,WK(+?VY>@P^1W4>ATK@Qkns3AP&R4q0V/1,WQ*+?VY>A26=X4>ATKA3M+u3AP)''4q0V/1,WW,+?VY>AhZCX4>ATKAj.>"3AP&!4q0V/1,^gM+?VYA@:VP24>ATL0g6^B3Ak8#4q0V/1,^mO+?VYC0Jks&4>ATL2*N-F3B&WP4q0V/1,_$S+?VYC2D@<(4>ATL2a/?H3B&p.4q0V/1,_*U+?VYC3+>&\4>ATL3BeQJ3B&p04q0V/1,`Q)+?VYD1,1s%4>ATL@Qkns3B/d''4q0V/1,`W++?VYD0k3BV4>ATLA3M+u3B1J(4q0V/1,`]-+?VYE0O[-S4>ATLAj.>"3B8fM4q0V/1,gmN+?VYE0etp%4>ATM0g6^B3B8fR4q0V/1,gsP+?VYEA7Rk54>ATM1HlpD3B:V(4q0V/1,h$R+?VYEA7e"74>ATM2*N-F3B:VZ4q0V/1,h*T+?VYEA2-7W4>ATM2a/?H3B:V-4q0V/1,h0V+?VYEA26=X4>ATM3BeQJ3B:V14q0V/1,iW*+?VYm@Q-I[4>ATMA3M+u3FXa&4q0V/1,ic.+?VYn1c7H+4>ATMAj.>"3FXg%4q0V/1,psO+?VYn2`Eo04>ATN0g6^B3FXmY4q0V/1,q$Q+?VYp0K)*(4>ATN1HlpD3Fjg(4q0V/1,q*S+?VYp0Jbm%4>ATN2*N-F3FuVZ4q0V/1,q0U+?VYq@V%_44>ATN2a/?H3Fu]34q0V/1,q6W+?VM@@5pF[4>ATN3BeQJ3G(-(4q0V/1,r]++?VM90etp%4>ATN@Qkns2)-gF4q0V/1,rc-+?VM90f2''''4>ATNA3M+u2)-g>4q0V/1,ri/+?VM90f;-(4>ATNAj.>"2).''E4q0V/1-%$P+?VM9@:;>/4>ATO0g6^B2)/WP4q0V/1-%*R+?VM:3AE],4>ATO1HlpD2)70J4q0V/1-%0T+?VM:AhuU[4>ATO2*N-F2)[<P4q0V/1-%6V+?VM>2I\iZ4>ATO2a/?H2)[BR4q0V/1-%<X+?VM>2E<r14>ATO3BeQJ2)[?L4q0V/1-&c,+?VM>2`Nu14>ATO@Qkns2)[@$4q0V/1-&i.+?VM>2E3l04>ATOA3M+u2)[?M4q0V/1-&o0+?VM>2_dK*4>ATOAj.>"2)[@)4q0V/11;k#+?VM>2Ieo[4>AU"0g6^B2)[?J4q0V/11;q%+?VM>2`<i/4>AU"1HlpD2)o)#4q0V/11<"''+?VM@@V%_44>AU"2*N-F2)o))4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@#@5^:l4>f*.2*MI30f!/r4s2sF3AtG4%6Q@#@5pFn4>gS&A3LGb0f!/t4s2sF@P]i)%6Q@#@:;>B4>gS,3''Id60f!0H4s2sF@V.;X%6Q@#@:MJD4>gV&ANgPc0f!0J4s2sFAi*p[%6Q@#@:_VF4>np''1-Q.00f!0L4s2sG0f^sP%6Q@#@PBtg4>np&3Bdm70f!2m4s2sG0fWT*%6Q@#@PU+i4>np(A3LGb0f!2o4s2sG0k*%)%6Q@#@Pg7k4>np''ANgPc0f!2q4s2sG0k4WU%6Q@#@Q$Cm4>np(3''Id60f!2s4s2sG1,CUJ%6Q@#@Q6Oo4>o$+2*MI30f!2u4s2sG1h/7(%6Q@#@UVGC4>o$+@Qk5`0f!3K4s2sG1h:#Y%6Q@#@V%_G4>o$+1d2@20f!3M4s2sG1h/I.%6Q@#@k^(h4>o$+1-Q.00f!5n4s2sG1h1&[%6Q@#@kp4j4>o$*Aj-Yd0f!5p4s2sG1h8@*%6Q@#@l-@l4>o$,1d2@20f!5r4s2sG1h(#[%6Q@#@l?Ln4>o&U1d2@20f!5t4s2sG2IeX/%6Q@#@lQXp4>o*-3Bdm70f!6!4s2sG2I\[1%6Q@#@pqPD4>o*-1d2@20f!6J4s2sG2Ie[0%6Q@#@q.\F4>o*,3''Id60f!6L4s2sG@5DFX%6Q@#@q@hH4>pV(3''Id60f!6N4s2sG@5D=U%6Q@#A2$1i4>pV*3Bdm70f!8o4s2sG@5_RY%6Q@#A26=k4>pV*3''Id60f!8q4s2sG@5Bo-%6Q@#A2HIm4>pV)1d2@20f!8s4s2sG@5]l)%6Q@#A2ZUo4>pV+0g6%/0f!8u4s2sG@5MFW%6Q@#A2laq4>pV)2a.[50f!9"4s2sG@5Bc)%6Q@#A77YE4>pV*Aj-Yd0f!9K4s2sG@5Kr-%6Q@#A7IeG4>pY+3Bdm70f!9M4s2sG@Q-50%6Q@#A7[qI4>p\''2*MI30f!9O4s2sGAn*S[%6Q@#AM?:j4>pe\0g6%/0f!;p4s2sGAmmDX%6Q@#AMQFl4>pe]1Hl710f!;r4s2sGAmmM[%6Q@#AMcRn4>pe]0g6%/0f!;t4s2sGAmmV^%6Q@#AMu^p4>pe\1Hl710f!<!4s2sGAn*MY%6Q@#AN2jr4>pe\3Bdm70f!<#4s2sGAn!Y^%6Q@#ARRbF4>pe[2EhR40f!<L4s2sGAmmAW%6Q@#ARdnH4>pe\1d2@20f!<N4s2sH0k+]X%6Q@#AS"%J4?#!)3Bdm70f!<P4s2sH0k;t%%6Q@#AhZCk4?#!*1-Q.00f!>q4s2sH0k31,%6Q@#AhlOm4?#!*2*MI30f!>s4s2sH0k*.,%6Q@#Ai)[o4?#!)ANgPc0f!>u4s2sH0k<:.%6Q@#Ai;gq4?#!*@m1>a0f!?$4s2sH1H%3V%6Q@#AmmkG4?#)W@m1>a0f!?M4s2sH1gr1(%6Q@#An+"I4?#)W3''Id60f!?O4s2sH1c]/3%6Q@#An=.K4?#)WANgPc0f!?Q4s2sH1hAF+%6Q@$0JYg74?#/S1d2@20f(L>4s2sH2D[<V%6Q@$0Jks94?#/S@6P,_0f(L@4s2sH2J"g2%6Q@$0K)*;4?#002*MI30f(LB4s2sH2dnC(%6Q@$0O[-f4?#3-2*MI30f(Lm4s2sH3+Y''5%6Q@$0Om9h4?#61@6P,_0f(Lo4s2sH3+ZS`%6Q@$0P*Ej4?#622a.[50f(Lq4s2sH3FOg0%6Q@$0etp84?$\*2EhR40f(O?4s2sH@5MIX%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AWH1d3$E2dnOP4q0V/1GLaN+?VSk@UVG04>AWH2Ei6G2e$;X4q0V/1GLgP+?VSm0ekj$4>AWH3''JHI2e$8W4q0V/1GLmR+?VSlAMcR[4>AWH@6Per2e$<,4q0V/1GN?&+?VSlAMH@X4>AWH@m2"t2e$>Y4q0V/1GNE(+?VSlAMu^]4>AWI0KpUA2e=[O4q0V/1GU[K+?VSo0ekj$4>AWI1-QgC2e=[&4q0V/1GUaM+?VSo0k*<U4>AWI1d3$E2e=a#4q0V/1GUgO+?VSo0kENX4>AWI2Ei6G2e=^S4q0V/1GUmQ+?VSo0KD<+4>AWI3''JHI2e=]t4q0V/1GUsS+?VSp2`X&24>AWI@6Per2eHMS4q0V/1GWK)+?VSpAS"%74>AWIANh5!3&!*I4q0V/1GWQ++?VV<@P^1W4>AWJ0KpUA3&+i%4q0V/1G^aL+?VV<@5pF[4>AWJ1-QgC3&,#S4q0V/1G^gN+?VV=0K;6*4>AWJ2Ei6G3&NO$4q0V/1G^sR+?VV@2*!i04>AWJ3''JHI3&NNP4q0V/1G`K(+?VV@1c%<)4>AWJ@m2"t3&NNQ4q0V/1G`Q*+?VV@2Inu\4>AWJANh5!3&NU&4q0V/1G`W,+?VV@2.\r\4>AWK0KpUA3&`fQ4q0V/1GggM+?VVB3G(Ga4>AWK1-QgC3&`j/4q0V/1GgmO+?VVB@5:"U4>AWK1d3$E3&`g-4q0V/1GgsQ+?VVC2DIB)4>AWK2Ei6G3&ra&4q0V/1Gh$S+?VVD1GV-''4>AWK3''JHI3&r`O4q0V/1Gh*U+?VVD11EEV4>AWK@6Per3&r`K4q0V/1GiQ)+?VVD@:;>/4>AWK@m2"t3&tD*4q0V/1GiW++?VVlAMu^]4>AWKANh5!3+6E-4q0V/1Gi]-+?VVlAR[h44>AWL0KpUA3+6DR4q0V/1GpmN+?VVm0JG["4>AWL1-QgC3+6?-4q0V/1GpsP+?VVlAN)d^4>AWL1d3$E3+6B04q0V/1Gq$R+?VVlAn=.84>AWL3''JHI3+6DX4q0V/1Gq0V+?VVlARmt64>AWL@6Per3+6DT4q0V/1GrW*+?VVlAi;g^4>AWL@m2"t3+6E/4q0V/1Gr],+?VVn2I\iZ4>AWLANh5!3+FjW4q0V/1Grc.+?VVn3AWi.4>AWM0KpUA3+HPW4q0V/1H$sO+?VVp1c.B*4>AWM1-QgC3+Xm#4q0V/1H%$Q+?VVp1Gh9)4>AWM1d3$E3+Xp%4q0V/1H%*S+?VVp1H@W.4>AWM2Ei6G3+Xm''4q0V/1H%0U+?VVq1L`NW4>AWM3''JHI3+apX4q0V/1H%6W+?VVq1H7Q-4>AWM@6Per3+as&4q0V/1H&]++?VVq@5pF[4>AWM@m2"t3+cSW4q0V/1H&c-+?VY<2`3c.4>AWMANh5!3A<BK4q0V/1H&i/+?VY<2`Nu14>AWN0KpUA3A<BI4q0V/1H.$P+?VY<2e,#\4>AWN1-QgC3A<C#4q0V/1H.*R+?VY=1Gh9)4>AWN1d3$E3AENL4q0V/1H.0T+?VY?1,(m$4>AWN2Ei6G3AWHL4q0V/1H.6V+?VY>AiMs`4>AWN3''JHI3AWHI4q0V/1H.<X+?VY?11i]Z4>AWN@6Per3AWEG4q0V/1H/c,+?VY>An+"64>AWN@m2"t3AWF"4q0V/1H/i.+?VY?0Jks&4>AWNANh5!3AWBu4q0V/1H/o0+?VY?0ebd#4>AWO0KpUA3AWEK4q0V/1H7*Q+?VY?1,1s%ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0f(dE4s2sJ1GLaN%6Q@$3&<`@4?52QANgPc0f(dG4s2sJ1GLmR%6Q@$3&NlB4?59.@Qk5`0f(dK4s2sJ2IU#X%6Q@$3&s/F4?5<12*MI30f(dt4s2sJ2_\f,%6Q@$3+>&o4?5>T0g6%/0f(e!4s2sJ2_d3S%6Q@$3+P2q4?5>SA3LGb0f(e#4s2sJ2_d*P%6Q@$3+b>s4?5>SAj-Yd0f(gF4s2sJ2`<QX%6Q@$3AWiA4?5>\3''Id60f(gH4s2sJ3&<6P%6Q@$3AiuC4?5AW3''Id60f(gJ4s2sJ3&>#-%6Q@$3B'',E4?5AW2a.[50f(gL4s2sJ3&5#.%6Q@$3B98G4?5AW3Bdm70f(gu4s2sJ3&3<S%6Q@$3FY/p4?5DV0Koq.0f(h"4s2sJ3ANQX%6Q@$3Fk;r4?5DVANgPc0f(h$4s2sJ3AFu,%6Q@$3G(Gt4?5DW0g6%/0f*5l4s2sJ3AFr+%6Q@$@50qg4?5E5A3LGb0f*5n4s2sJ3Fss0%6Q@$@5C(i4?5E60g6%/0f*5p4s2sJ@:D2[%6Q@$@5U4k4?6hZ@m1>a0f*5r4s2sJ@:it4%6Q@$@5g@m4?6h]A3LGb0f*5t4s2sJ@PTo,%6Q@$@6$Lo4?6k20g6%/0f*6H4s2sJA2,r*%6Q@$@:DDC4?6q-1Hl710f*6J4s2sJA26&,%6Q@$@:VPE4?6q-3''Id60f*6L4s2sJA2,i''%6Q@$@:h\G4?6q,@Qk5`0f*8m4s2sJARmba%6Q@$@PL%h4?6t`1d2@20f*8o4s2sJAiO<b%6Q@$@P^1j4?7"6@m1>a0f*8q4s2sF0f!0$%6Q@$@Pp=l4>eiJAj-Yd0f*8s4s2sF0etII%6Q@$@Q-In4>eiL1-Q.00f*8u4s2sF11iC-%6Q@$@Q?Up4>f#VANgPc0f*9I4s2sF2E3BS%6Q@$@U_MD4>f#W0Koq.0f*9K4s2sF2E3QX%6Q@$@UqYF4>f#V2a.[50f*9M4s2sF2E5;4%6Q@$@V.eH4>f*/2*MI30f*;n4s2sF3+Og/%6Q@$@kg.i4>f*/0g6%/0f*;p4s2sF3+HM`%6Q@$@l$:k4>gS(0Koq.0f*;r4s2sF@PV@U%6Q@$@l6Fm4>gS''1d2@20f*;t4s2sF@Q.^Z%6Q@$@lHRo4>gV)2a.[50f*<!4s2sF@l?;1%6Q@$@lZ^q4>gYY@m1>a0f*<J4s2sFA7At2%6Q@$@q%VE4>gYYA3LGb0f*<L4s2sFA7@M^%6Q@$@q7bG4>g\.@Qk5`0f*<N4s2sFAi+!]%6Q@$@qInI4>g_[A3LGb0f*>o4s2sG0k34-%6Q@$A2-7j4>np(1-Q.00f*>q4s2sG0k3.+%6Q@$A2?Cl4>np*2EhR40f*>s4s2sG0k4ZV%6Q@$A2QOn4>nrN1-Q.00f*>u4s2sG1,CaN%6Q@$A2c[p4>o$+ANgPc0f*?"4s2sG1h0rX%6Q@$A2ugr4>o$,3''Id60f*?K4s2sG1hA@)%6Q@$A7@_F4>o$.0Koq.0f*?M4s2sG1hAR/%6Q@$A7RkH4>o$-@m1>a0f*?O4s2sG1hJI+%6Q@$A7e"J4>o$-1-Q.00f*Ap4s2sG1hC2]%6Q@$AMZLm4>o*.3Bdm70f*At4s2sG2In^0%6Q@$AMlXo4>pV-0Koq.0f*B!4s2sG@6$/.%6Q@$AN)dq4>pV-1d2@20f*B#4s2sG@::oT%6Q@$AN;ps4>pV.@m1>a0f*BL4s2sG@:Wh2%6Q@$AR[hG4>pVV1Hl7ZDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c1M(&[+?VPj2e>/^4>AX''A3M+u2ISU)4q0V/1M(,]+?VPj3A<W+4>AX''Aj.>"2IU#J4q0V/1M/=)+?VPk2.JfZ4>AX(0g6^B2I^*+4q0V/1M/C++?VPkA77Y24>AX(1HlpD2IeF#4q0V/1M/I-+?VPoA2la^4>AX(2*N-F2J-PU4q0V/1M/U1+?VPoA7@_34>AX(3BeQJ2J-MW4q0V/1M1&Z+?VPoAR[h44>AX(@Qkns2J-N44q0V/1M1,\+?VPo3&!N*4>AX(A3M+u2J-N14q0V/1M12^+?VPoAMH@X4>AX(Aj.>"2J-M\4q0V/1b^UI+?VPoA2QO[4>AZH0g6^B2J-N34q0V/1b^[K+?VPoAhZCX4>AZH1HlpD2_el&4q0V/1b^aM+?VS;A7e"74>AZH2*N-F2_elT4q0V/1b^gO+?VS;AMu^]4>AZH2a/?H2_el$4q0V/1b^mQ+?VS;ARmt64>AZH3BeQJ2_elR4q0V/1b`?%+?VS;Ai)[\4>AZH@Qkns2_ekt4q0V/1b`E''+?VS<1Gq?*4>AZHA3M+u2_m3J4q0V/1b`K)+?VS=2_[E)4>AZHAj.>"2`!BJ4q0V/1bg[J+?VS>@6$L\4>AZI0g6^B2`+tt4q0V/1bgaL+?VS>@5^:Y4>AZI1HlpD2`+r&4q0V/1bggN+?VS@1c@N,4>AZI2*N-F2`<KJ4q0V/1bgmP+?VS@1h/]Y4>AZI2a/?H2`>5U4q0V/1bgsR+?VSA@P^1W4>AZI3BeQJ2`G/R4q0V/1biE&+?VSA@PBtT4>AZI@Qkns2`G/T4q0V/1biK(+?VSA@5g@Z4>AZIA3M+u2`G/U4q0V/1biQ*+?VSAAS++84>AZIAj.>"2`PD.4q0V/1bpaK+?VSBAmmk44>AZJ0g6^B2`PD+4q0V/1bpgM+?VSBAS++84>AZJ1HlpD2`WQH4q0V/1bpmO+?VSC@5g@Z4>AZJ2*N-F2`Y;T4q0V/1bpsQ+?VSk2)d].4>AZJ2a/?H2dp0-4q0V/1bq$S+?VSm0K20)4>AZJ3BeQJ2e+OP4q0V/1brK''+?VSlAn=.84>AZJ@Qkns2e$AX4q0V/1brQ)+?VSm0Om9U4>AZJA3M+u2e$>P4q0V/1brW++?VSmAM?:W4>AZJAj.>"2e-B.4q0V/1c$gL+?VSmA7[q64>AZK0g6^B2e-DS4q0V/1c$mN+?VSmA7e"74>AZK1HlpD2e-AY4q0V/1c$sP+?VSmA7Rk54>AZK2*N-F2e=aU4q0V/1c%$R+?VSo1M&`Z4>AZK2a/?H2e=g(4q0V/1c%*T+?VSo1H.K,4>AZK3BeQJ2e=d#4q0V/1c&Q(+?VSo1c%<)4>AZK@Qkns2e=aR4q0V/1c&W*+?VSo1LrZY4>AZKA3M+u2e=d"4q0V/1c&],+?VSo1c7H+4>AZKAj.>"2e=g#4q0V/1c-mM+?VSo1Gh9)4>AZL0g6^B2e=d*4q0V/1c-sO+?VSo1cRZ.4>AZL1HlpD2e=d&4q0V/1c.$Q+?VSo1M/f[4>AZL2*N-F2e=aV4q0V/1c.*S+?VSp1c.B*4>AZL2a/?H2eHYX4q0V/1c.0U+?VSpAn+"64>AZL@Qkns3&!9F4q0V/1c/]++?VV;2J,,^4>AZLA3M+u3&!9I4q0V/1c/c-+?VV<@l?L[4>AZLAj.>"3&+o!4q0V/1c6sN+?VV<@UVG04>AZM0g6^B3&+nu4q0V/1c7$P+?VV<@k^(U4>AZM1HlpD3&+lS4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@%2)IK>4?,'')A3LGb0f1aF4s2sI0k34-%6Q@%2)[W@4?,'')ANgPc0f1aH4s2sI0kE=.%6Q@%2)mcB4?,)M3Bdm70f1aJ4s2sI1,gpO%6Q@%2.8Zk4?,3,@6P,_0f1as4s2sI2)mEV%6Q@%2.Jfm4?,2WANgPc0f1au4s2sI2*#/1%6Q@%2.\ro4?,2Y0g6%/0f1b"4s2sI2*!KW%6Q@%2D@<;4?,3,Aj-Yd0f1dC4s2sI2*#,0%6Q@%2DRH=4?,2X2a.[50f1dE4s2sI2.8I.%6Q@%2DdT?4?,2X@6P,_0f1dG4s2sI2.8C,%6Q@%2E!`A4?,5W2a.[50f1dI4s2sI2e+O*%6Q@%2E3lC4?,910g6%/0f1dK4s2sI2e"R,%6Q@%2IScl4?,911-Q.00f1dt4s2sI2e+a0%6Q@%2Ieon4?,9.@Qk5`0f1e!4s2sI2e$5[%6Q@%2J#&p4?,9/@6P,_0f1e#4s2sI2e+g2%6Q@%2_[E<4?,90@Qk5`0f1gD4s2sI3AY,.%6Q@%2_mQ>4?,>W2EhR40f1gF4s2sI3A`QV%6Q@%2`*]@4?,>W3''Id60f1gH4s2sI3AY20%6Q@%2`<iB4?,?0@m1>a0f1gJ4s2sI@PD@W%6Q@%2`NuD4?-e)2a.[50f1gL4s2sI@PKl,%6Q@%2dnlm4?-e)@Qk5`0f1gu4s2sI@PD4S%6Q@%2e,#o4?-e*0Koq.0f1h"4s2sI@PMCW%6Q@%2e>/q4?-e(1d2@20f1h$4s2sI@PKQ#%6Q@%3&!N=4?-h-0g6%/0f1jE4s2sI@l%^\%6Q@%3&3Z?4?-h01Hl710f1jG4s2sI@qK.5%6Q@%3&EfA4?-h_A3LGb0f1jI4s2sI@qK47%6Q@%3&WrC4?-h_3''Id60f1jK4s2sI@qK16%6Q@%3&j)E4?-k[3''Id60f1jM4s2sIAMcD2%6Q@%3+4un4?-n/@Qk5`0f1k!4s2sIAMcA1%6Q@%3+G,p4?-n/@6P,_0f1k#4s2sIAi)>.%6Q@%3+Y8r4?-q/ANgPc0f1k%4s2sIAi)8,%6Q@%3A<W>4?-q02*MI30f1mF4s2sIAi"$_%6Q@%3ANc@4?5)SAj-Yd0f1mH4s2sJ0K3N+%6Q@%3A`oB4?5)T1d2@20f1mL4s2sJ0K:aM%6Q@%3B02F4?5,P3Bdm70f1mN4s2sJ0juk%%6Q@%3FP)o4?5,VANgPc0f1n"4s2sJ0f``-%6Q@%3Fb5q4?52SA3LGb0f1n$4s2sJ1H7-R%6Q@%3FtAs4?52Q3''Id60f1n&4s2sJ1H.0T%6Q@%@5''kf4?52S@6P,_0f3;n4s2sJ1H%*S%6Q@%@5:"h4?52S@Qk5`0f3;p4s2sJ1GLjQ%6Q@%@5L.j4?52VANgPc0f3;r4s2sJ1H&`,%6Q@%@5^:l4?52T@Qk5`0f3;t4s2sJ1H.!O%6Q@%@5pFn4?52T@6P,_0f3<!4s2sJ1Gq!Q%6Q@%@:VPE4?59/3''Id60f3<M4s2sJ2.JO.%6Q@%@:h\G4?5</0g6%/0f3>n4s2sJ2I\X0%6Q@%@PL%h4?5<12EhR40f3>p4s2sJ2_ef+%6Q@%@P^1j4?5>TANgPc0f3>r4s2sJ2dnC(%6Q@%@Pp=l4?5?21Hl710f3>t4s2sJ3&ENW%6Q@%@Q-In4?5B12EhR40f3?!4s2sJ3AWNV%6Q@%@Q?Up4?6h(0g6%/0f3?J4s2sJ3G)ke%6Q@%@U_MD4?6kZANgPc0f3?L4s2sJ@UW_0%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>A[%A3M+u3FZE*4q0V/1h(#[+?VYn@:VP24>A[%Aj.>"3FjpT4q0V/1h/4''+?VYp1M/f[4>A[&0g6^B3Ft0Z4q0V/1h/:)+?VYq@qIn64>A[&1HlpD3Fu`44q0V/1h/F-+?VYqA7@_34>A[&2a/?H3G(''Y4q0V/1h/L/+?VYr1h&WX4>A[&3BeQJ2)Af!4q0V/1h0rX+?VM>3Aiu04>A[&@Qkns2)\lS4q0V/1h1#Z+?VM@A2ug_4>A[&A3M+u2)o,+4q0V/1h1)\+?VMj1H7Q-4>A[&Aj.>"2.e^V4q0V/1h8:(+?VP:AMZLZ4>A[''0g6^B2DR''E4q0V/1h8@*+?VP=Ai)[\4>A[''1HlpD2Df#$4q0V/1h8F,+?VP=An=.84>A[''2*N-F2Dm0H4q0V/1h8R0+?VP=AiDm_4>A[''3BeQJ2Dnr&4q0V/1h:#Y+?VP?A7Ie44>A[''@Qkns2E*BL4q0V/1h:)[+?VPj@P^1W4>A[''A3M+u2IU$(4q0V/1h:/]+?VPj@l$:X4>A[''Aj.>"2IU''(4q0V/1hA@)+?VPj@Q6O\4>A[(0g6^B2IU)N4q0V/1hAL-+?VPk2.f#]4>A[(2*N-F2I\U)4q0V/1hAR/+?VPk@:h\44>A[(2a/?H2_ZpG4q0V/1hAX1+?VS:0Od3T4>A[(3BeQJ2J-Q44q0V/1hC)Z+?VS:0K)*(4>A[(@Qkns2J-Q04q0V/1hC/\+?VS:0ekj$4>A[(A3M+u2_Zpt4q0V/1hJF*+?VS;An=.84>A[)0g6^B2_eo(4q0V/1hJL,+?VS=2`Eo04>A[)1HlpD2`!BM4q0V/1hJR.+?VS>@5g@Z4>A[)2*N-F2`+uU4q0V/1hJX0+?VS?0f;-(4>A[)2a/?H2`<NO4q0V/1hJ^2+?VS@2)mc/4>A[)3BeQJ2`<NK4q0V/1hL/[+?VSA@UqY34>A[)@Qkns2`G2X4q0V/1hL;_+?VSC0P*EW4>A[)Aj.>"2`Y;X4q0V/2)$dL+?VSk2D@<(4>A]I2*N-F2e+UP4q0V/2)$pP+?VSm1,hB+4>A]I2a/?H2e+UO4q0V/2)%!R+?VSm0kENX4>A]I3BeQJ2e+U!4q0V/2)&H&+?VSm1,1s%4>A]I@Qkns2e-DX4q0V/2)&T*+?VSo2.\r\4>A]IAj.>"2e=jT4q0V/2)-dK+?VSo2DIB)4>A]J0g6^B2e=j%4q0V/2)-jM+?VSo2*!i04>A]J1HlpD2eFm+4q0V/2)-pO+?VSpAiW$a4>A]J2*N-F2eHZ24q0V/2).!Q+?VV;2`Eo04>A]J2a/?H3&!9L4q0V/2).''S+?VV<@q7b44>A]J3BeQJ3&+oT4q0V/2)/N''+?VV=0O[-S4>A]J@Qkns3&P2X4q0V/2)/T)+?VV@@6$L\4>A]JA3M+u3&P2V4q0V/2)/Z++?VV@A2$1V4>A]JAj.>"3&P2+4q0V/2)6jL+?VV@@PBtT4>A]K0g6^B3&P/R4q0V/2)6pN+?VV@@Q?U]4>A]K1HlpD3&bD\4q0V/2)7!P+?VVBARdn54>A]K2*N-F3&bG)4q0V/2)7''R+?VVBAM?:W4>A]K2a/?H3&rrV4q0V/2)7-T+?VVD@PU+V4>A]K3BeQJ3&tS-4q0V/2)8T(+?VVm1,qH,4>A]K@Qkns3+=[(4q0V/2)8Z*+?VVm11NKW4>A]KA3M+u3+=XP4q0V/2)8`,+?VVn2)%3''4>A]KAj.>"3+O^#4q0V/2)?pM+?VVp2*!i0ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0f:aA4s2sIAMu>.%6Q@&1GV-:4?-n12EhR40f:aC4s2sIAMuA/%6Q@&1Gh9<4?-n0Aj-Yd0f:aE4s2sIAMl>/%6Q@&1H%E>4?-n^0Koq.0f:aG4s2sIAi)M3%6Q@&1H7Q@4?-q0A3LGb0f:aI4s2sJ0K;!T%6Q@&1LWHi4?5)T1Hl710f:ar4s2sJ0K;$U%6Q@&1M&`m4?5-,0Koq.0f:b!4s2sJ1H@9U%6Q@&1b_*94?52W@6P,_0f:dB4s2sJ1H@?W%6Q@&1bq6;4?53+1-Q.00f:dD4s2sJ1L`.(%6Q@&1c.B=4?53+ANgPc0f:dF4s2sJ1LXcW%6Q@&1c@N?4?53,0Koq.0f:dH4s2sJ1H@EY%6Q@&1cRZA4?52X@6P,_0f:dJ4s2sJ1H@BX%6Q@&1grQj4?5901d2@20f:ds4s2sJ2.SU/%6Q@&1h/]l4?5900Koq.0f:du4s2sJ2.SR.%6Q@&1hAin4?5<21-Q.00f:e"4s2sJ2Ip;]%6Q@&2)%3:4?5<13Bdm70f:gC4s2sJ2Ip8\%6Q@&2)7?<4?5<1ANgPc0f:gE4s2sJ2_m3R%6Q@&2)IK>4?5?/1Hl710f:gG4s2sJ2dnU.%6Q@&2)[W@4?5?/A3LGb0f:gI4s2sJ2eG''6%6Q@&2)mcB4?5AXA3LGb0f:gK4s2sJ3&G52%6Q@&2.8Zk4?5AX@m1>a0f:gt4s2sJ3&G21%6Q@&2.Jfm4?5AY1Hl710f:h!4s2sJ3+?;[%6Q@&2D@<;4?5DXA3LGb0f:jD4s2sJ3AP/0%6Q@&2DRH=4?5E12*MI30f:jF4s2sJ@5)7V%6Q@&2DdT?4?6h[0g6%/0f:jH4s2sJ@PBT%%6Q@&2E!`A4?6k)2EhR40f:jJ4s2sJ@Ph[\%6Q@&2E3lC4?6k-ANgPc0f:jL4s2sJ@PhUZ%6Q@&2IScl4?6k\@6P,_0f:ju4s2sJ@UhD^%6Q@&2Ieon4?6k_A3LGb0f:k"4s2sJ@UhA]%6Q@&2J#&p4?6k\0Koq.0f:k$4s2sJA2Q)*%6Q@&2_[E<4?6q0A3LGb0f:mE4s2sJA2Z,*%6Q@&2_mQ>4?6ta0Koq.0f:mG4s2sJAhc/,%6Q@&2`*]@4?7"/@m1>a0f:mI4s2sF0f(UL%6Q@&2`<iB4>f$*2*MI30f:mK4s2sF2ISR/%6Q@&2dnlm4>f*01-Q.00f:n!4s2sF@V.J]%6Q@&2e,#o4?7"60Koq.0f:n#4s2sFAS#@8%6Q@&2e>/q4>np+1-Q.00f:n%4s2sG0kN@.%6Q@&3&!N=4>np+2EhR40f:pF4s2sG0kN:,%6Q@&3&3Z?4>o&N0Koq.0f:pH4s2sG2)&W+%6Q@&3&EfA4>o*/0Koq.0f:pJ4s2sG2Ip>^%6Q@&3&WrC4>pVZ2*MI30f:pL4s2sG@:Wn4%6Q@&3&j)E4>pVY@6P,_0f:pN4s2sG@:V/X%6Q@&3+4un4?"rK@Qk5`0f:q"4s2sH0JR0''%6Q@&3+G,p4?"rL3''Id60f:q$4s2sH0JR!"%6Q@&3+Y8r4?"rKA3LGb0f:q&4s2sH0JPFK%6Q@&3A<W>4?"rK3''Id60f:sG4s2sH1,(UM%6Q@&3ANc@4?##LA3LGb0f:sI4s2sH1,V$T%6Q@&3A`oB4?#$(1-Q.00f:sK4s2sH1H.9W%6Q@&3As&D4?#&T@6P,_0f:sM4s2sH1h''uZ%6Q@&3B02F4?#*,@6P,_0f:sO4s2sH1hAI,%6Q@&3FP)o4?#,W2a.[^DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c2*#,0+?VS?3&Wr04>A]R@m2"t2`<O*4q0V/2*#22+?VS@2DIB)4>A]RANh5!2`G5*4q0V/2*#84+?VSC0f_E,4>A^%0KpUA2`Y>%4q0V/2.84''+?VSk2I\iZ4>A^%1-QgC2dnU)4q0V/2.8@++?VSm1H7Q-4>A^%2Ei6G2e+XS4q0V/2.8F-+?VSm1H.K,4>A^%3''JHI2e+Zu4q0V/2.8L/+?VSo2I\iZ4>A^%@6Per2e=mX4q0V/2.9rX+?VSo2`X&24>A^%ANh5!2e=p(4q0V/2.:)\+?VSp3&Nl/4>A^&0KpUA2eHMW4q0V/2.A:(+?VSp@Q?U]4>A^&1-QgC2eHMY4q0V/2.A@*+?VV<A2la^4>A^&1d3$E3&P8-4q0V/2.AF,+?VV@A7Rk54>A^&2Ei6G3&P8U4q0V/2.AL.+?VV@A2QO[4>A^&@6Per3&P;,4q0V/2.C#Y+?VVBAn!q54>A^&@m2"t3&iTL4q0V/2.C)[+?VVC0P!?V4>A^&ANh5!3&bG04q0V/2.C/]+?VVBAn=.84>A^''0KpUA3&rlN4q0V/2.J@)+?VVD2.f#]4>A^''1-QgC3&riS4q0V/2.JF++?VVD2.\r\4>A^''1d3$E3+=^!4q0V/2.JL-+?VVm2.JfZ4>A^''2Ei6G3+=a)4q0V/2.JR/+?VVm1c[`/4>A^''3''JHI3+=aR4q0V/2.L)Z+?VVm1c@N,4>A^''@m2"t3+=a*4q0V/2.L/\+?VVo0K;6*4>A^''ANh5!3+O^O4q0V/2.L5^+?VVp2e,#\4>A^(0KpUA3+Y$(4q0V/2.SF*+?VVp3&a#14>A^(1-QgC3+Y$,4q0V/2.SL,+?VVp2Ieo[4>A^(1d3$E3+Y$W4q0V/2.SR.+?VVp2`*]-4>A^(2Ei6G3+b$)4q0V/2.SX0+?VVq1hAi[4>A^(3''JHI3+cT04q0V/2.U/[+?VY=@PL%U4>A^(@m2"t3AFrR4q0V/2.U5]+?VY?AMH@X4>A^(ANh5!3AY2#4q0V/2.U;_+?VY?A7e"74>A^)0KpUA3AY/$4q0V/2.\L++?VY?@lQX]4>A^)1d3$E3AY2(4q0V/2.\X/+?VY?AMQFY4>A^)2Ei6G3AY/U4q0V/2.\^1+?VY?A2la^4>A^)3''JHI3AY5''4q0V/2.\d3+?VY?A2c[]4>A^)@6Per3AY5+4q0V/2.^5\+?VYAA7Ie44>A^)@m2"t3At>''4q0V/2.^;^+?VYBAMZLZ4>A^)ANh5!3B&^%4q0V/2.^A`+?VYC1,hB+4>A^*0KpUA3B&iN4q0V/2.eR,+?VYCA7Ie44>A^*1-QgC3B(PZ4q0V/2.eX.+?VYD2.\r\4>A^*1d3$E3B/lU4q0V/2.e^0+?VYD2.A`Y4>A^*2Ei6G3B1JX4q0V/2.ed2+?VYE1c7H+4>A^*3''JHI3B8oV4q0V/2.ej4+?VYm0fD3)4>A^*@6Per3FOX&4q0V/2.g;]+?VYn0P!?V4>A^*@m2"t3FZPZ4q0V/2.gA_+?VYnAN)d^4>A^*ANh5!3FZMW4q0V/2.gGa+?VYnA7@_34>A`J0KpUA3Fk*04q0V/2D?jL+?VYp2DIB)4>A`J1-QgC3Fk''(4q0V/2D?pN+?VYp2IScY4>A`J1d3$E3Fk$X4q0V/2D@!P+?VYq3ANc-4>A`J2Ei6G3Ft304q0V/2D@''R+?VYq3AWi.4>A`J3''JHI3FuYV4q0V/2D@-T+?VM:AiMs`4>A`J@6Per2)\o&4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@''0Od3g4>f$+2EhR40fC^q4s2sF2I\L,%6Q@''0P!?i4>f$+@m1>a0fC^s4s2sF3+Xp1%6Q@''0P3Kk4>gS)0Koq.0fCa?4s2sF@Pfl)%6Q@''0ekj74>gS,A3LGb0fCaA4s2sF@V.M^%6Q@''0f)!94>gYZ3Bdm70fCaC4s2sG0kNC/%6Q@''0f;-;4>np+@6P,_0fCaE4s2sG2).''S%6Q@''0fM9=4>o&O1d2@20fCaG4s2sG2).*T%6Q@''0f_E?4>o*/2EhR40fCap4s2sG2_m<U%6Q@''0k*<h4>pVZ@m1>a0fCar4s2sH0Jd9(%6Q@''0k<Hj4?"rM0Koq.0fCat4s2sH0JbIJ%6Q@''0kNTl4?##M0Koq.0fCd@4s2sH1H/c,%6Q@''1,1s84?#*,Aj-Yd0fCdB4s2sH2E!<S%6Q@''1,D*:4?#/V2*MI30fCdD4s2sH3ANKV%6Q@''1,V6<4?#8U@6P,_0fCdF4s2sH3AP).%6Q@''1,hB>4?#8U@Qk5`0fCdH4s2sH@:M5[%6Q@''1-%N@4?$\\2EhR40fCdq4s2sH@l.[Z%6Q@''11EEi4?$b,1Hl710fCds4s2sH@l.^[%6Q@''11i]m4?-q]ANgPc0fCgA4s2sHAN+-`%6Q@''1GM''94?$h1@m1>a0fCgC4s2sHAN2G/%6Q@''1G_3;4?$k/@m1>a0fCgE4s2sI0JG1E%6Q@''1Gq?=4?,''+@6P,_0fCgG4s2sI1,_$S%6Q@''1H.K?4?,31@Qk5`0fCgI4s2sI2.ej4%6Q@''1H@WA4?,5R0g6%/0fCgr4s2sI2.g8\%6Q@''1L`Nj4?,5Q2EhR40fCgt4s2sI2DAT(%6Q@''1LrZl4?,5Q2a.[50fCh!4s2sI2DAQ''%6Q@''1bh0:4?,>Z1d2@20fCjD4s2sI3FZD\%6Q@''1c%<<4?,?53''Id60fCjF4s2sI@Q,u)%6Q@''1c7H>4?-e.@m1>a0fCjH4s2sI@Q$,.%6Q@''1cIT@4?-e.Aj-Yd0fCjJ4s2sI@Pqa]%6Q@''1c[`B4?-e.@Qk5`0fCjs4s2sIA2%UZ%6Q@''1h&Wk4?-k*A3LGb0fCju4s2sIAN2\6%6Q@''1h8cm4?-n30g6%/0fCk"4s2sIAN2P2%6Q@''1hJoo4?-n31-Q.00fCmC4s2sJ0k)t''%6Q@''2).9;4?5-+@Qk5`0fCmE4s2sJ1bgsR%6Q@''2)@E=4?55P1Hl710fCmG4s2sJ1M1/]%6Q@''2)RQ?4?5910g6%/0fCmI4s2sJ2`!-O%6Q@''2)d]A4?5B21d2@20fCmK4s2sJ3AiQU%6Q@''2*!iC4?5DZ0g6%/0fCmt4s2sJ3FOm2%6Q@''2.A`l4?6h*@Qk5`0fCn!4s2sJ@5BT$%6Q@''2.Sln4?6h+2a.[50fCn#4s2sJ@5Bc)%6Q@''2.f#p4?6n+1Hl710fCpD4s2sJ@k_FW%6Q@''2DIB<4?6t33Bdm70fCpF4s2sJAR[M\%6Q@''2D[N>4?6ta3''Id60fCpH4s2sJAhms^%6Q@''2DmZ@4?7"2Aj-Yd0fCpJ4s2sJAi;G/%6Q@''2E*fB4?7"30g6%/0fCpu4s2sF2IeI*%6Q@''2I\im4>f$,0Koq.0fCq"4s2sF2IeL+%6Q@''2Inuo4>f,R1d2@20fCq$4s2sF@l@g\%6Q@''2J,,q4>gYZA3LGb0fCsE4s2sG0kOoZ%6Q@''2_dK=4>np+ANgPc0fCsG4s2sG2)/W*%6Q@''2`!W?4>o&O@m1>a0fCsI4s2sG2*!NX%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>A`Q2*N-F2E#,,4q0V/2E*NX+?VPjAn!q54>A`Q2a/?H2I\?s4q0V/2E*TZ+?VPjAmmk44>A`Q3BeQJ2I^,N4q0V/2E,&.+?VS:1h/]Y4>A`Q@Qkns2_m*s4q0V/2E,,0+?VS<@5g@Z4>A`QA3M+u2`,&''4q0V/2E,22+?VS>A2HIZ4>A`QAj.>"2`<QS4q0V/2E3BS+?VSAA2?CY4>A`R0g6^B2e+^!4q0V/2E3HU+?VSo3+b>`4>A`R1HlpD2e=sY4q0V/2E3NW+?VSp@UhS24>A`R2*N-F3&WKM4q0V/2E3TY+?VVA11WQX4>A`R2a/?H3&WL"4q0V/2E3Z[+?VVC1,D*''4>A`R3BeQJ3&iZK4q0V/2E5,/+?VVC1,1s%4>A`R@Qkns3&iX)4q0V/2E521+?VVD2IScY4>A`RA3M+u3&rm,4q0V/2E583+?VVD@UqY34>A`RAj.>"3+=g''4q0V/2E<HT+?VVm2`Eo04>A`S0g6^B3+=gW4q0V/2E<NV+?VVo0f)!&4>A`S1HlpD3+Y''X4q0V/2E<TX+?VVp3+P2^4>A`S2*N-F3+Y''Y4q0V/2E<ZZ+?VVq2.f#]4>A`S2a/?H3+cT24q0V/2E<`\+?VY=@UVG04>A`S3BeQJ3A`L&4q0V/2E>20+?VY@1G_3(4>A`S@Qkns3A`NL4q0V/2E>82+?VY@1LWHV4>A`SA3M+u3A`NO4q0V/2E>>4+?VY@1GV-''4>A`SAj.>"3A`L#4q0V/2IS:''+?VYAAMQFY4>Aa&1HlpD3B&`L4q0V/2ISF++?VYCAnF494>Aa&2*N-F3B/oU4q0V/2ISL-+?VYD2DmZ-4>Aa&2a/?H3B8rU4q0V/2ISR/+?VYm1c7H+4>Aa&3BeQJ3FOa#4q0V/2IU#X+?VYm1b_*&4>Aa&@Qkns3FO^T4q0V/2IU)Z+?VYm@qIn64>Aa&A3M+u3FXj&4q0V/2IU/\+?VYn2).9(4>Aa&Aj.>"3FagT4q0V/2I\@(+?VYo1,V6)4>Aa''0g6^B3FlQ14q0V/2I\F*+?VYp@Pg7X4>Aa''1HlpD3FlVT4q0V/2I\L,+?VYp@Q6O\4>Aa''2*N-F3Ft3]4q0V/2I\R.+?VYqAS++84>Aa''2a/?H3G(!+4q0V/2I\X0+?VYr2.JfZ4>Aa''@Qkns2)-ms4q0V/2I^/[+?VM91L`NW4>Aa''A3M+u2)\r(4q0V/2I^5]+?VM>@pqP14>Aa''Aj.>"2)\r)4q0V/2IeF)+?VMj2eG5_4>Aa(0g6^B2.U5S4q0V/2IeL++?VMlA26=X4>Aa(1HlpD2.e[V4q0V/2IeR-+?VP:AnF494>Aa(2*N-F2Dm6H4q0V/2IeX/+?VPk0O[-S4>Aa(2a/?H2I\R!4q0V/2Ie^1+?VS:2).9(4>Aa(3BeQJ2_[*K4q0V/2Ig/Z+?VS=3&!N*4>Aa(@Qkns2`,)&4q0V/2Ig5\+?VS?3+4u[4>Aa(A3M+u2`<R*4q0V/2Ig;^+?VS@2Ieo[4>Aa(Aj.>"2`Y>''4q0V/2InL*+?VSm2D@<(4>Aa)0g6^B2e+^W4q0V/2InR,+?VV;2e>/^4>Aa)1HlpD3&!:%4q0V/2InX.+?VV<A7e"74>Aa)2*N-F3&roQ4q0V/2In^0+?VVD2J,,^4>Aa)2a/?H3&tS\4q0V/2Ind2+?VVm3&!N*4>Aa)@Qkns3+Y*)4q0V/2Ip;]+?VVp3AWi.4>Aa)A3M+u3+b''''4q0V/2IpA_+?VY=1cRZ.ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0fEQS4s2sJ1c.$Q%6Q@''AMcRn4?5?11Hl710fET#4s2sJ2e+R+%6Q@''AMu^p4?5AZ@Qk5`0fET%4s2sJ3AiZX%6Q@''AN2jr4?6h-2*MI30fET''4s2sJ@5MLY%6Q@''ARRbF4?6h\1-Q.00fETP4s2sJ@PM:T%6Q@''ARdnH4?6n.3Bdm70fETR4s2sJ@l#i''%6Q@''AS"%J4?6n-ANgPc0fETT4s2sJ@l%RX%6Q@''AhZCk4?6q_1Hl710fEVu4s2sJA7RV_%6Q@''AhlOm4?7"01d2@20fEW"4s2sJAi=-_%6Q@''Ai)[o4?7"3@6P,_0fEW$4s2sJAiV\3%6Q@''Ai;gq4>f$,@m1>a0fEW&4s2sFA7RS^%6Q@''AiMss4>nrK0Koq.0fEW(4s2sG2)6sO%6Q@''AmmkG4>o&P@Qk5`0fEWQ4s2sG2)8T(%6Q@''An+"I4>o*/@m1>a0fEWS4s2sG@PKQ#%6Q@''An=.K4?#*-@6P,_0fEWU4s2sH@:N_0%6Q@(0JG[54?$b.1d2@20fLd@4s2sH@l?,,%6Q@(0JYg74?$b.2*MI30fLdB4s2sHAN;P1%6Q@(0Jks94?$h32EhR40fLdD4s2sHAN;S2%6Q@(0K)*;4?,'',1-Q.00fLdF4s2sI2D[<V%6Q@(0K;6=4?,5TAj-Yd0fLdH4s2sI3&<9Q%6Q@(0O[-f4?-e0@6P,_0fLdq4s2sJ0KCgN%6Q@(0Om9h4?5)TAj-Yd0fLds4s2sJ1c@-R%6Q@(0P*Ej4?55V0Koq.0fLdu4s2sJ1c@0S%6Q@(0ebd64?5>Y3''Id60fLgA4s2sJ3&YA4%6Q@(0etp84?5DZ@m1>a0fLgE4s2sJ@5Tu-%6Q@(0fV?>4?6h\0g6%/0fLgI4s2sJ@l6),%6Q@(0k!6g4?6n/2a.[50fLgr4s2sJ@l6/.%6Q@(0k3Bi4?6q`2*MI30fLgt4s2sJAN=?d%6Q@(0kENk4?6tb1d2@20fLh!4s2sF2InO+%6Q@(1,(m74>f*03Bdm70fLjB4s2sG2)8Z*%6Q@(1,;$94?"rOANgPc0fLjF4s2sH2e4j2%6Q@(1,_<=4?$k00Koq.0fLjH4s2sHAiMb6%6Q@(1,qH?4?,;V2EhR40fLjJ4s2sI3&<QY%6Q@(11<?h4?,;Y1-Q.00fLjs4s2sI@Q?5.%6Q@(11NKj4?-e11-Q.00fLju4s2sI@Q?>1%6Q@(11`Wl4?,)T2a.[50fLk"4s2sIA2.OW%6Q@(1GD!84?5-+0Koq.0fLmC4s2sJ1cAc+%6Q@(1GV-:4?5>W1-Q.00fLmE4s2sJ2`*KX%6Q@(1Gh9<4?5>W1d2@20fLmG4s2sJ2e+a0%6Q@(1H%E>4?5A[0Koq.0fLmI4s2sJ@5VX\%6Q@(1H7Q@4?6k+1-Q.00fLmK4s2sJ@Pp,/%6Q@(1LWHi4?6n/Aj-Yd0fLn#4s2sJAhZ/-%6Q@(1b_*94?7"42a.[50fLpD4s2sJAiDJ/%6Q@(1bq6;4>g\^1Hl710fLpF4s2sG@PKc)%6Q@(1c.B=4?"rP1Hl710fLpH4s2sH@l@g\%6Q@(1c@N?4?$b.ANgPc0fLpJ4s2sI3&>#-%6Q@(1cRZA4?,?20Koq.0fLpL4s2sIARR;W%6Q@(1grQj4?5-+0g6%/0fLpu4s2sJ1cI0R%6Q@(1h/]l4?55W0Koq.0fLq"4s2sJ3&`QU%6Q@(1hAin4?5DZANgPc0fLq$4s2sJ@:V8[%6Q@(2)%3:4?6k+1Hl7ZDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c2`3<R+?VYq@q.\34>AcP1-QgC2_[-H4q0V/2`3BT+?VSAA77Y24>AcP1d3$E3+=mV4q0V/2`3HV+?VY@2`Eo04>AcP2Ei6G3B(G.4q0V/2`3NX+?VYm2DRH*4>AcP3''JHI3FOg''4q0V/2`3TZ+?VSo3Fb5^4>AcP@6Per3+=mX4q0V/2`5&.+?VVp@:;>/4>AcP@m2"t3AG#$4q0V/2`522+?VY@2e,#\4>AcQ1-QgC3Fue]4q0V/2`<HU+?VVn2)IK+4>AcQ1d3$E3A`[,4q0V/2`<NW+?VYq0k!6T4>AcQ2Ei6G2_m-J4q0V/2`<TY+?VYm2IScY4>AcQ3''JHI3FXd!4q0V/2`<Z[+?VYq0k*<U4>AcQ@6Per3FspV4q0V/2`>,/+?VSm2_mQ+4>AcQ@m2"t1hAL!4q0V/2`>21+?VJl2.JfZ4>AcQANh5!2)/]#4q0V/2`>83+?VM;0k!6T4>AcR0KpUA2)@3I4q0V/2`EHT+?VJl0K20)4>AcR1-QgC1hA@N4q0V/2`ENV+?VJl1cIT-4>AcR1d3$E1hAXW4q0V/2`ETX+?VM>A2c[]4>AcR2Ei6G2.JOU4q0V/2`EZZ+?VMn2`!W,4>AcR3''JHI1hA@Q4q0V/2`E`\+?VM93&a#14>AcR@6Per1hA@P4q0V/2`G20+?VJl11`WY4>AcR@m2"t1hA[''4q0V/2`G82+?VJl@kp4W4>AcRANh5!1hC/W4q0V/2`G>4+?VJl@lQX]4>AcS0KpUA2).*N4q0V/2`NNU+?VM:An+"64>AcS1-QgC2)@.#4q0V/2`NTW+?VM;@Q?U]4>AcS1d3$E2)d9E4q0V/2`NZY+?VMA0Jbm%4>AcS2Ei6G2*!F%4q0V/2`N`[+?VMk0ebd#4>AcS3''JHI2.U<24q0V/2`Nf]+?VP>AMH@X4>AcS@6Per2I^,O4q0V/2`P81+?VPk@q.\34>AcS@m2"t2IeHu4q0V/2`P>3+?VS<1M/f[4>AcSANh5!1hAHt4q0V/2`PD5+?VJl1LiTX4>AcT0KpUA1hC5X4q0V/2`WTV+?VJlA7Ie44>AcT1-QgC1hC5Y4q0V/2`WZX+?VJlAMH@X4>AcT1d3$E1hC3.4q0V/2`W`Z+?VJlA77Y24>AcT2Ei6G2)6jq4q0V/2`Wf\+?VM:0KD<+4>AcT3''JHI2)?ss4q0V/2`Wl^+?VM;1h/]Y4>AcT@m2"t2*!BM4q0V/2`YD4+?VMA11i]Z4>AcTANh5!2.AO"4q0V/2`YJ6+?VMj3&Ef.4>Ad''0KpUA2.J?r4q0V/2dnF)+?VMk1L`NW4>Ad''1-QgC2.JR%4q0V/2dnL++?VMk2`!W,4>Ad''1d3$E2.\Hu4q0V/2dnR-+?VMm3&!N*4>Ad''2Ei6G2.\a&4q0V/2dnX/+?VMn@lZ^^4>Ad''3''JHI2DQsH4q0V/2dn^1+?VP;2)%3''4>Ad''@6Per2IeI!4q0V/2dp/Z+?VPl1H%E+4>Ad''@m2"t2IeR"4q0V/2dp5\+?VPl1M/f[4>Ad''ANh5!2IeOP4q0V/2dp;^+?VS<@:_V34>Ad(0KpUA2_nhr4q0V/2e"L*+?VS=3+4u[4>Ad(1-QgC2`Y>,4q0V/2e"R,+?VV;3+4u[4>Ad(1d3$E3ArU''4q0V/2e"X.+?VJm0P*EW4>Ad(2Ei6G1hJI%4q0V/2e"^0+?VJm11NKW4>Ad(3''JHI1hC8V4q0V/2e"d2+?VJm0f2''''4>Ad(@6Per1hC8R4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@(@U_MD4>^Y(0Koq.0fNQO4s2sEAS*kb%6Q@(@UqYF4>^Y(3''Id60fNQQ4s2sEAhdg[%6Q@(@V.eH4>^Y(1-Q.00fNSr4s2sEAhZ)+%6Q@(@kg.i4>^Y*1-Q.00fNSt4s2sEAhc)*%6Q@(@l$:k4>^Y(1d2@20fNT!4s2sEAS*b_%6Q@(@l6Fm4>^Y)1-Q.00fNT#4s2sF0k)k$%6Q@(@lHRo4>elK1Hl710fNT%4s2sF1,1IH%6Q@(@lZ^q4>em&2EhR40fNTN4s2sF1GU^L%6Q@(@q%VE4>eoLAj-Yd0fNTP4s2sF1GiW+%6Q@(@q7bG4>eoS@6P,_0fNTR4s2sF1b^jP%6Q@(@qInI4>f$.0g6%/0fNVs4s2sF2IpD`%6Q@(A2-7j4>f&QANgPc0fNVu4s2sF2_nf*%6Q@(A2?Cl4>f&R1d2@20fNW"4s2sF3AY//%6Q@(A2QOn4>f,Y0Koq.0fNW$4s2sF3B(G3%6Q@(A2c[p4>f,Y2*MI30fNW&4s2sF3B(D2%6Q@(A2ugr4>f,XANgPc0fNWO4s2sF3B&l\%6Q@(A7@_F4>f,XAj-Yd0fNWQ4s2sF@Pp&-%6Q@(A7RkH4>gV''2*MI30fNWS4s2sF@koo*%6Q@(A7e"J4>gV-@m1>a0fNZ!4s2sF@lIs_%6Q@(AMZLm4>gY[Aj-Yd0fNZ#4s2sFAN)J1%6Q@(AMlXo4>g\01d2@20fNZ%4s2sFAhYu(%6Q@(AN)dq4>g_*@6P,_0fNZ''4s2sFAiDP1%6Q@(AN;ps4>g_]2*MI30fNZP4s2sFAn3_^%6Q@(AR[hG4>g_\Aj-Yd0fNZR4s2sG1,WQ*%6Q@(ARmtI4>nrPANgPc0fNZT4s2sG1,^sQ%6Q@(AS++K4>nrQ0g6%/0fN\u4s2sG1,_$S%6Q@(AhcIl4>nrQ1-Q.00fN]"4s2sG1,V''U%6Q@(AhuUn4>nrQ0Koq.0fN]$4s2sG1,WK(%6Q@(Ai2ap4>nrQ2*MI30fN]&4s2sG2)@0T%6Q@(AiDmr4>o''.Aj-Yd0fN](4s2sG2.^>_%6Q@(AiW$t4>o,SANgPc0fN]Q4s2sG2`!HX%6Q@(An!qH4>o,S3''Id60fN]S4s2sG2`"o,%6Q@(An4(J4>o,S@6P,_0fN]U4s2sG2`#&0%6Q@(AnF4L4>o,S@m1>a0fUj@4s2sG2`!6R%6Q@)0JPa64>p\(3''Id60fUjB4s2sG@l-)-%6Q@)0Jbm84>p\,1-Q.00fUjD4s2sG@l7a[%6Q@)0Ju$:4>p\+Aj-Yd0fUjF4s2sG@l.UX%6Q@)0K20<4>p\,1d2@20fUjq4s2sH0K1^M%6Q@)0Od3g4?##QANgPc0fUju4s2sH1H8r0%6Q@)0P3Kk4?#,Q@6P,_0fUmA4s2sH2E,53%6Q@)0ekj74?$\-2*MI30fUmC4s2sHAi2;,%6Q@)0f)!94?,)T3''Id60fUmE4s2sI1,i],%6Q@)0f;-;4?,)U0Koq.0fUmG4s2sI1,i`-%6Q@)0fM9=4?,)TAj-Yd0fUmI4s2sI2Der.%6Q@)0f_E?4?,>[ANgPc0fUmr4s2sJ0KD-W%6Q@)0k<Hj4?5)U@Qk5`0fUn!4s2sJ0KCsR%6Q@)0kNTl4?5;T1-Q.00fUpB4s2sJ2DR*Q%6Q@)1,1s84?5;T0Koq.0fUpD4s2sJ2DR''P%6Q@)1,D*:4>^Y-2EhR40fUpF4s2sEAi!m[%6Q@)1,V6<4>^Y.1-Q.00fUpH4s2sEAi)M3%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AfN2a/?H1hJU$4q0V/3&3HW+?VJm2DdT,4>AfN3BeQJ1hJOT4q0V/3&4o++?VJm2E*f/4>AfN@Qkns1hJU#4q0V/3&4u-+?VJm2.f#]4>AfNA3M+u1hJR!4q0V/3&5&/+?VJm2)mc/4>AfNAj.>"1hJLR4q0V/3&<6P+?VJm1G_3(4>AfO0g6^B1hJOU4q0V/3&<<R+?VJm2DIB)4>AfO1HlpD2).(&4q0V/3&<BT+?VM9@Q?U]4>AfO2*N-F2)6mr4q0V/3&<HV+?VM:0kENX4>AfO2a/?H2)6pA4q0V/3&=u,+?VM;0KD<+4>AfO@Qkns2)@-H4q0V/3&>&.+?VM;2_mQ+4>AfOAj.>"2)I*C4q0V/3&E<Q+?VM<1H.K,4>AfP0g6^B2)I''s4q0V/3&EBS+?VM<2)IK+4>AfP1HlpD2)I-I4q0V/3&EHU+?VM<0f_E,4>AfP2*N-F2)I$t4q0V/3&ENW+?VM<1,V6)4>AfP2a/?H2)I$I4q0V/3&ETY+?VM<1LrZY4>AfP3BeQJ2)I.%4q0V/3&G&-+?VM<1bh0''4>AfP@Qkns2)I''J4q0V/3&G,/+?VM<1,M0(4>AfPA3M+u2)I-K4q0V/3&G21+?VM>AS"%74>AfPAj.>"2)]#)4q0V/3&NBR+?VM>AMlX\4>AfQ0g6^B2)d?H4q0V/3&NHT+?VM?1c7H+4>AfQ1HlpD2)d@%4q0V/3&NNV+?VM?1c[`/4>AfQ2*N-F2)d@$4q0V/3&NTX+?VM?2)7?)4>AfQ2a/?H2*!?K4q0V/3&NZZ+?VMA1b_*&4>AfQ3BeQJ2*#)''4q0V/3&P,.+?VMA3B0234>AfQ@Qkns2*#)!4q0V/3&P20+?VMA3B'',24>AfQA3M+u2*!X-4q0V/3&P82+?VMA@5:"U4>AfQAj.>"2*!ZN4q0V/3&WHS+?VMA3+b>`4>AfR0g6^B2*#)(4q0V/3&WNU+?VMA@50qT4>AfR1HlpD2.AOV4q0V/3&WTW+?VMj3ANc-4>AfR2*N-F2.JC$4q0V/3&WZY+?VMk11<?U4>AfR2a/?H2.JUV4q0V/3&W`[+?VMk3+b>`4>AfR3BeQJ2.JU*4q0V/3&Y2/+?VMk3+>&\4>AfR@Qkns2.JU+4q0V/3&Y81+?VMk3ANc-4>AfRA3M+u2.JUS4q0V/3&Y>3+?VMk3&Wr04>AfRAj.>"2.JX&4q0V/3&`NT+?VMk3Aiu04>AfS0g6^B2.U8P4q0V/3&`TV+?VMm0O[-S4>AfS1HlpD2.\IQ4q0V/3&`ZX+?VMm3+>&\4>AfS2*N-F2.\a-4q0V/3&``Z+?VMm3+G,]4>AfS2a/?H2.\a,4q0V/3&`f\+?VMm3+P2^4>AfS3BeQJ2.eO"4q0V/3&b80+?VMn0k<HW4>AfS@Qkns2.ed,4q0V/3&b>2+?VMn2`<i/4>AfSA3M+u2.gAS4q0V/3&bD4+?VMnA2-7W4>AfSAj.>"2.gAQ4q0V/3&iTU+?VMnARmt64>AfT0g6^B2.gDZ4q0V/3&iZW+?VMnAS"%74>AfT1HlpD2.gGV4q0V/3&i`Y+?VMnAMH@X4>AfT2*N-F2.gDV4q0V/3&if[+?VMnAMZLZ4>AfT2a/?H2.gH/4q0V/3&il]+?VMnAS++84>AfT3BeQJ2.gGZ4q0V/3&k>1+?VMnAn!q54>AfT@Qkns2D?g=4q0V/3&kD3+?VMnAi)[\4>AfTA3M+u2DR''s4q0V/3&kJ5+?VP;3&<`-ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0fV.)4s2sG1,rc-%6Q@)3ANc@4>nrT1d2@20fV0L4s2sG1,q3V%6Q@)3A`oB4>nrR0g6%/0fV0N4s2sG1,iZ+%6Q@)3As&D4>nrR@6P,_0fV0P4s2sG1,gmN%6Q@)3B02F4>nrS0g6%/0fV0R4s2sG1,q6W%6Q@)3FP)o4>nrR2a.[50fV1&4s2sG1,i`-%6Q@)3Fb5q4>nrR1-Q.00fV1(4s2sG1,h$R%6Q@)3FtAs4>o''/0Koq.0fV1*4s2sG2.e[/%6Q@)@5''kf4>o''/1Hl710fWSr4s2sG2.eU-%6Q@)@5:"h4>o''/2*MI30fWSt4s2sG2`*BU%6Q@)@5L.j4>o,T2a.[50fWT!4s2sG2`3TZ%6Q@)@5^:l4>o,U2*MI30fWT#4s2sG2`,#.%6Q@)@5pFn4>o,T3''Id60fWT%4s2sG2`5,0%6Q@)@:;>B4>o,TA3LGb0fWTN4s2sG2`5#-%6Q@)@:MJD4>o,T@Qk5`0fWTP4s2sG@Uq/V%6Q@)@PBtg4>p\.3''Id60fWVs4s2sG@l?80%6Q@)@PU+i4>p\-@Qk5`0fWVu4s2sG@lQ;/%6Q@)@Pg7k4>p\/@Qk5`0fWW"4s2sG@lS''a%6Q@)@Q$Cm4>p\.0g6%/0fWW$4s2sG@l@p_%6Q@)@Q6Oo4>p\-3Bdm70fWW&4s2sG@l[s]%6Q@)@UVGC4>p\-A3LGb0fWWO4s2sG@lQD2%6Q@)@UhSE4>p\02*MI30fWWQ4s2sG@l\$_%6Q@)@V%_G4>p\-2EhR40fWWS4s2sG@lH2-%6Q@)@k^(h4>p\-2*MI30fWYt4s2sG@lIj\%6Q@)@kp4j4>p\/ANgPc0fWZ!4s2sH0K1gP%6Q@)@l-@l4?"rQ@6P,_0fWZ#4s2sH1,^pP%6Q@)@l?Ln4?#$)Aj-Yd0fWZ%4s2sH11FcX%6Q@)@lQXp4?#$*1Hl710fWZ''4s2sH11N4+%6Q@)@pqPD4?#$*0g6%/0fWZP4s2sH11FZU%6Q@)@q.\F4?#$*2*MI30fWZR4s2sH1H@<V%6Q@)@q@hH4?#&V2a.[50fW\u4s2sH1H@3S%6Q@)A26=k4?#,R@6P,_0fW]"4s2sH2)@6V%6Q@)A2ZUo4?#/X0g6%/0fW]&4s2sH3AY20%6Q@)A2laq4?,#N1d2@20fW](4s2sI0KD!S%6Q@)A77YE4?,#T3Bdm70fW]Q4s2sI0KCgN%6Q@)A7IeG4?,#T1-Q.00fW]S4s2sI0KEW,%6Q@)A7[qI4?,)V0Koq.0fW]U4s2sI1,rl0%6Q@)AM?:j4?,)U2*MI30fW`!4s2sI1,ri/%6Q@)AMQFl4?,)V0g6%/0fW`#4s2sI1-%-S%6Q@)AMcRn4?,)U@6P,_0fW`''4s2sI@lHA2%6Q@)AN2jr4?-q_3Bdm70fW`)4s2sIAn#@9%6Q@)ARRbF4?5)UAj-Yd0fW`R4s2sJ0OZ\"%6Q@)ARdnH4?5*(2*MI30fW`T4s2sJ0KE].%6Q@)AS"%J4?5*(2a.[50fW`V4s2sJ0OZY!%6Q@)AhZCk4?5;U0Koq.0fWc"4s2sJ2DR6U%6Q@)AhlOm4?5;TAj-Yd0fWc$4s2sJ2DSf,%6Q@)Ai)[o4>^V*1Hl710fWc&4s2sEAiVh7%6Q@)Ai;gq4>^Y/@m1>a0fWc(4s2sEAiMY3%6Q@)AiMss4>^Y/A3LGb0fWc*4s2sEAiMJ.%6Q@)AmmkG4>^Y02a.[50fWcS4s2sEAiDV3%6Q@)An+"I4>^Y/1d2@[DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c3+c\b+?VJm3&s/34>Ag-ANh5!1hJ^(4q0V/3+cbd+?VJm2`Eo04>AiM0KpUA1hJRS4q0V/3A<0O+?VJm3B'',24>AiM1-QgC1hJXS4q0V/3A<6Q+?VJm3FP)\4>AiM1d3$E1hJ[,4q0V/3A<<S+?VJm3&*T+4>AiM2Ei6G1hJ[+4q0V/3A<BU+?VJm3A<W+4>AiM3''JHI1hJaX4q0V/3A<HW+?VJm3A`o/4>AiM@6Per1hJaZ4q0V/3A=o++?VJm3ANc-4>AiM@m2"t1hJ^&4q0V/3A=u-+?VJm3Aiu04>AiMANh5!1hJXT4q0V/3A>&/+?VJm2J#&]4>AiN0KpUA2).+&4q0V/3AE6P+?VM9@UhS24>AiN1-QgC2)/QO4q0V/3AE<R+?VM:1Gq?*4>AiN2Ei6G2)7!H4q0V/3AEHV+?VM:1GM''&4>AiN3''JHI2)8WN4q0V/3AFu,+?VM;1LiTX4>AiN@m2"t2)@6J4q0V/3AG&.+?VM;3A`o/4>AiNANh5!2)I9O4q0V/3AG,0+?VM<2eG5_4>AiO0KpUA2)I9I4q0V/3AN<Q+?VM<3AE],4>AiO1-QgC2)I9J4q0V/3ANBS+?VM<3&j)24>AiO1d3$E2)I4#4q0V/3ANHU+?VM<2dnlZ4>AiO2Ei6G2)I7''4q0V/3ANNW+?VM<2DmZ-4>AiO3''JHI2)I4$4q0V/3ANTY+?VM<2`*]-4>AiO@6Per2)I3L4q0V/3AP&-+?VM<3+P2^4>AiO@m2"t2)I4''4q0V/3AP,/+?VM<2DIB)4>AiOANh5!2)I3F4q0V/3AP21+?VM<3B0234>AiP0KpUA2)I3I4q0V/3AWBR+?VM<2E*f/4>AiP1-QgC2)I3J4q0V/3AWHT+?VM>AiDm_4>AiP1d3$E2)]&,4q0V/3AWNV+?VM?2J,,^4>AiP2Ei6G2)dHL4q0V/3AWTX+?VM?2Inu\4>AiP3''JHI2)dF&4q0V/3AWZZ+?VM?2_dK*4>AiP@6Per2)dHJ4q0V/3AY,.+?VM?2`<i/4>AiP@m2"t2)dKK4q0V/3AY20+?VM?2`3c.4>AiPANh5!2)dI''4q0V/3A`HS+?VM?2DRH*4>AiQ1-QgC2)dEQ4q0V/3A`NU+?VM?2e5)]4>AiQ1d3$E2*!@#4q0V/3A`TW+?VMA1c7H+4>AiQ2Ei6G2*#,''4q0V/3A`ZY+?VMA@UVG04>AiQ3''JHI2*#/Y4q0V/3A``[+?VMA@q@h54>AiQ@6Per2*#,$4q0V/3Ab2/+?VMA@q.\34>AiQ@m2"t2*#/$4q0V/3Ab81+?VMA@Q$CZ4>AiQANh5!2*#,U4q0V/3Ab>3+?VMA@l$:X4>AiR0KpUA2*#2*4q0V/3AiNT+?VMA@PL%U4>AiR1-QgC2*#,V4q0V/3AiTV+?VMA@k^(U4>AiR1d3$E2*#/+4q0V/3AiZX+?VMA@Pg7X4>AiR2Ei6G2*#/*4q0V/3Ai`Z+?VMj2DRH*4>AiR3''JHI2.AI$4q0V/3Aif\+?VMj3AWi.4>AiR@6Per2.AR''4q0V/3Ak80+?VMk1c.B*4>AiR@m2"t2.JI%4q0V/3Ak>2+?VMk@:_V34>AiRANh5!2.L&O4q0V/3AkD4+?VMk@5''kS4>AiS0KpUA2.L)Q4q0V/3ArTU+?VMk@:h\44>AiS1-QgC2.L&S4q0V/3ArZW+?VMk@:MJ14>AiS1d3$E2.JXY4q0V/3Ar`Y+?VMk@5C(V4>AiS2Ei6G2.L''*4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@*2E*fB4>gVW1-Q.00f_-O4s2sF@pre0%6Q@*2E<rD4>gVW2a.[50f_.#4s2sF@l\''`%6Q@*2I\im4>gVW2*MI30f_.%4s2sF@q%>[%6Q@*2Inuo4>gVX0Koq.0f_.''4s2sF@pq8Z%6Q@*2J,,q4>g\)2a.[50f_0H4s2sFAMH#*%6Q@*2_dK=4>g\)3Bdm70f_0J4s2sFAhl>0%6Q@*2`<iB4>g_.1d2@20f_0O4s2sFAiMP0%6Q@*2`NuD4>g_0ANgPc0f_0Q4s2sFAiF6a%6Q@*2dnlm4>g_]ANgPc0f_1%4s2sFAn<h`%6Q@*2e,#o4>nlKA3LGb0f_1''4s2sG0JYOM%6Q@*2e>/q4>nlJ3Bdm70f_1)4s2sG0JbIJ%6Q@*3&!N=4>nlI@Qk5`0f_3J4s2sG0JbOL%6Q@*3&3Z?4>nlI@6P,_0f_3L4s2sG0JPLM%6Q@*3&EfA4>nlL1Hl710f_3N4s2sG0JR!"%6Q@*3&WrC4>nlJANgPc0f_3P4s2sG0J[-%%6Q@*3&j)E4>nlK1-Q.00f_3R4s2sG0JI$$%6Q@*3+4un4>nlJ0Koq.0f_4&4s2sG0J[3''%6Q@*3+G,p4>nlJ1Hl710f_4(4s2sG0JP:G%6Q@*3+Y8r4>nlI@m1>a0f_4*4s2sG0JGLN%6Q@*3A<W>4>nlJ@m1>a0f_6K4s2sG1,1UL%6Q@*3ANc@4>nrNA3LGb0f_6M4s2sG11=]W%6Q@*3A`oB4>ns(1d2@20f_6O4s2sG11W+''%6Q@*3As&D4>ns(ANgPc0f_6Q4s2sG11=TT%6Q@*3B02F4>ns(2EhR40f_6S4s2sG11O`V%6Q@*3FP)o4>ns''ANgPc0f_7''4s2sG11E%''%6Q@*3Fb5q4>ns''Aj-Yd0f_7)4s2sG11F]V%6Q@*3FtAs4>ns''3Bdm70f_7+4s2sG11Dq$%6Q@*@5''kf4>ns(3''Id60f`Ys4s2sG2)Ac,%6Q@*@5:"h4>o''*3''Id60f`Yu4s2sG2.C#Y%6Q@*@5L.j4>o)O3Bdm70f`Z"4s2sG2.g>^%6Q@*@5^:l4>o)O1d2@20f`Z$4s2sG2DHsN%6Q@*@5pFn4>o)O3''Id60f`Z&4s2sG2.g;]%6Q@*@:;>B4>o)O1Hl710f`ZO4s2sG2DAT(%6Q@*@:MJD4>o)OA3LGb0f`ZQ4s2sG2D@!P%6Q@*@:_VF4>o''/A3LGb0f`ZS4s2sG2DHpM%6Q@*@PBtg4>o)P0Koq.0f`\t4s2sG2J+j2%6Q@*@PU+i4>o,P@6P,_0f`]!4s2sG2`NZY%6Q@*@Pg7k4>o,V@m1>a0f`]#4s2sG2`PA4%6Q@*@Q$Cm4>o,Y1-Q.00f`]%4s2sG2`EWY%6Q@*@Q6Oo4>o,W@Qk5`0f`]''4s2sG2`Wi]%6Q@*@UVGC4>o,X2EhR40f`]P4s2sG2`NWX%6Q@*@UhSE4>o,W1d2@20f`]R4s2sG2`P>3%6Q@*@V%_G4>o,X@m1>a0f`]T4s2sG2`G//%6Q@*@k^(h4>o,YAj-Yd0f`_u4s2sG2`WTV%6Q@*@kp4j4>o,Y3Bdm70f``"4s2sG2`NTW%6Q@*@l-@l4>o,WA3LGb0f``$4s2sG2`NNU%6Q@*@lQXp4>o,Y1d2@20f``(4s2sG@PTf)%6Q@*@pqPD4>pY.0Koq.0f``Q4s2sG@Q.j^%6Q@*@q.\F4>pYZANgPc0f``S4s2sG@khLX%6Q@*@q@hH4>p\01Hl710f``U4s2sG@qB.6%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>Aj,0KpUA2Ig<-4q0V/3Fjj.+?VPlAS"%74>Aj,1-QgC2Ig8X4q0V/3Fjp0+?VPl@Q$CZ4>Aj,1d3$E2Ig8S4q0V/3Fk!2+?VPl@:VP24>Aj,2Ei6G2Ig;W4q0V/3Fk''4+?VPl@Q-I[4>Aj,3''JHI2Ig8O4q0V/3Fk-6+?VPl@kp4W4>Aj,@6Per2Ig3)4q0V/3FlS_+?VPl@l$:X4>Aj,@m2"t2Ig5T4q0V/3FlYa+?VPlARmt64>Aj,ANh5!2Ig>S4q0V/3Fl_c+?VPlA26=X4>Aj-0KpUA2Ig9.4q0V/3Fsp/+?VPl@Pg7X4>Aj-1-QgC2Ie^T4q0V/3Ft!1+?VPl3Fk;_4>Aj-1d3$E2Ie^#4q0V/3Ft''3+?VPlA7[q64>Aj-2Ei6G2Ig5N4q0V/3Ft-5+?VPm1GD!%4>Aj-3''JHI2Ig6-4q0V/3Ft37+?VPl@lHR\4>Aj-@6Per2Ig2M4q0V/3FuY`+?VPlAiW$a4>Aj-@m2"t2Ig6/4q0V/3Fu_b+?VPlAN;p`4>Aj-ANh5!2Ig8P4q0V/3Fued+?VS:3A`o/4>Aj.0KpUA2_[6O4q0V/3G(!0+?VS:3&Nl/4>Aj.1-QgC2_[6J4q0V/3G(''2+?VS:3&Wr04>Aj.1d3$E2_[3J4q0V/3G(-4+?VS:3AE],4>Aj.2Ei6G2_[6M4q0V/3G(36+?VS:3&3Z,4>Aj.3''JHI2_[7#4q0V/3G(98+?VS:3&<`-4>Aj.@6Per2_m:"4q0V/3G)_a+?VS<A2ZU\4>Aj.@m2"t2_nlP4q0V/3G)ec+?VS<A2la^4>Aj.ANh5!2_nl''4q0V/3G)ke+?VS<A7Ie44>C7u0KpUA2_no!4q0V/@5''E"+?VS<A2HIZ4>C7u1-QgC2_noP4q0V/@5''K$+?VS<@q.\34>C7u1d3$E2_nnu4q0V/@5''Q&+?VS=@5L.W4>C7u2Ei6G2`"ks4q0V/@5''W(+?VS=@:VP24>C7u3''JHI2`"l#4q0V/@5'']*+?VS=@5:"U4>C7u@6Per2`"kr4q0V/@5).S+?VS=@:MJ14>C7u@m2"t2`!I)4q0V/@5)4U+?VS>A7Rk54>C7uANh5!2`,)*4q0V/@50K#+?VS?1M&`Z4>C8!1-QgC2`3R)4q0V/@50Q%+?VS?3B0234>C8!1d3$E2`>)V4q0V/@50W''+?VS@AhuU[4>C8!2Ei6G2`>8&4q0V/@50])+?VS@AhZCX4>C8!3''JHI2`>8*4q0V/@50c++?VSAAiMs`4>C8!@6Per2`G>Y4q0V/@524T+?VSAAiW$a4>C8!@m2"t2`G>X4q0V/@52:V+?VSAAmmk44>C8!ANh5!2`G>-4q0V/@52@X+?VSC1bq6(4>C8"0KpUA2`W[+4q0V/@59Q$+?VSC@l6FZ4>C8"1-QgC2dnX)4q0V/@59W&+?VSk2e"r[4>C8"1d3$E2dp<-4q0V/@59](+?VSm2`3c.4>C8"2Ei6G2e-H14q0V/@59c*+?VV;1Gq?*4>C8"3''JHI3&!=(4q0V/@59i,+?VV;@:_V34>C8"@6Per3&"bs4q0V/@5;:U+?VV;@Q6O\4>C8"@m2"t3&"f!4q0V/@5;@W+?VV;@:VP24>C8"ANh5!3&36C4q0V/@5;FY+?VV=@5''kS4>C8#0KpUA3&4tt4q0V/@5BW%+?VV=@:DD04>C8#1-QgC3&3L&4q0V/@5B]''+?VV=3B0234>C8#1d3$E3&3L''4q0V/@5Bc)+?VV=@Pp=YASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0jujr4s2sI11<+*%6Q@R1H.K?4?,*)ANgPc0jujt4s2sI11F`W%6Q@R1H@WA4?,)VANgPc0jukH4s2sI11FZU%6Q@R1L`Nj4?,**1d2@20jukJ4s2sI11<.+%6Q@R1LrZl4?,*)0g6%/0jukL4s2sI11<1,%6Q@R1M/fn4?,*+1-Q.00jumm4s2sI11<"''%6Q@R1bh0:4?,*+1Hl710jumo4s2sI11E.*%6Q@R1c%<<4?,*)1-Q.00jumq4s2sI2E*<R%6Q@R1c7H>4?,5WAj-Yd0jumu4s2sI@l6/.%6Q@R1c[`B4?-q`1-Q.00junI4s2sIAn,:6%6Q@R1h&Wk4?-q`1Hl710junK4s2sIAn,@8%6Q@R1h8cm4?-q`2EhR40junM4s2sIAn3b_%6Q@R1hJoo4?-q`2a.[50jupn4s2sJ0Oce$%6Q@R2).9;4?5*)1d2@20jupp4s2sJ0O\QW%6Q@R2)@E=4?5*)1Hl710jupr4s2sJ0Oc_"%6Q@R2)RQ?4?5;U3Bdm70jupt4s2sJ2D\l-%6Q@R2)d]A4?5;U@m1>a0juq!4s2sJ2D\c*%6Q@R2*!iC4?5;V1Hl710juqJ4s2sEAn,@8%6Q@R2.A`l4>^Y[2*MI30juqL4s2sEAn3\]%6Q@R2.Sln4>^YZ1-Q.00juqN4s2sEAn*hb%6Q@R2.f#p4>^Y[@Qk5`0juso4s2sEAn*PZ%6Q@R2DIB<4>^Y\1d2@20jusq4s2sEAn5C8%6Q@R2D[N>4>^Y\3Bdm70juss4s2sEAn#45%6Q@R2DmZ@4>^YZ1Hl710jusu4s2sEAn5@7%6Q@R2E*fB4>^Y[2a.[50jut"4s2sEAn3e`%6Q@R2E<rD4>^YZ@6P,_0jutK4s2sEAn*MY%6Q@R2I\im4>^YZ3Bdm70jutM4s2sEAn>I9%6Q@R2Inuo4>elN1d2@20jutO4s2sF1,M!T%6Q@R2J,,q4>em(0Koq.0k!!p4s2sF11N(''%6Q@R2_dK=4>eoNA3LGb0k!!r4s2sF1H/f-%6Q@R2`!W?4>eoT2a.[50k!!t4s2sF1H@?W%6Q@R2`3cA4>eoT3Bdm70k!"!4s2sF1H@EY%6Q@R2`EoC4>es)@6P,_0k!"#4s2sF1gr+&%6Q@R2`X&E4>es(A3LGb0k!"L4s2sF1gr7*%6Q@R2e"rn4>es*Aj-Yd0k!"N4s2sF1h/=*%6Q@R2e5)p4?,,NA3LGb0k!"P4s2sF1h&C-%6Q@R2eG5r4>es(ANgPc0k!$q4s2sF1h8L.%6Q@R3&*T>4>es)2EhR40k!$u4s2sF1gr(%%6Q@R3&NlB4>erS0Koq.0k!%"4s2sF1h''rY%6Q@R3&a#D4>es(1-Q.00k!%$4s2sF1h(#[%6Q@R3&s/F4>erS1-Q.00k!%M4s2sF1h:/]%6Q@R3+>&o4>es)0Koq.0k!%O4s2sF2e"X.%6Q@R3+b>s4>f''+1d2@20k!''r4s2sF2`P;2%6Q@R3AE]?4>f&X2a.[50k!''t4s2sF2`YD4%6Q@R3AWiA4>f&X@Qk5`0k!(!4s2sF2`W]Y%6Q@R3AiuC4>f&X3''Id60k!(#4s2sF2`PD5%6Q@R3B'',E4>f&X3Bdm70k!(%4s2sF2dnR-%6Q@R3B98G4>f&X@6P,_0k!(N4s2sF2`W`Z%6Q@R3FY/p4>f*11d2@20k!(P4s2sF3A=u-%6Q@R3Fk;r4>f,V1Hl710k!(R4s2sF3Fsp/%6Q@R3G(Gt4>f-0ANgQ7DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c@::iR+?VMAAS"%74>C8Q0g6^B2.80m4q0V/@::oT+?VMAAhcIY4>C8Q1HlpD2*#2X4q0V/@::uV+?VMAAmmk44>C8Q2*N-F2*#8Z4q0V/@:;&X+?VMAAn+"64>C8Q2a/?H2*#8,4q0V/@:;,Z+?VMAAMcR[4>C8Q3BeQJ2*#8(4q0V/@:<S.+?VMAAiDm_4>C8Q@Qkns2*#2V4q0V/@:<Y0+?VMAAN;p`4>C8QA3M+u2*#8)4q0V/@:<_2+?VMAAi2a]4>C8QAj.>"2*#5%4q0V/@:CoS+?VMAAn=.84>C8R0g6^B2*#8*4q0V/@:CuU+?VMAARmt64>C8R1HlpD2.BuR4q0V/@:D&W+?VMk1h/]Y4>C8R2*N-F2.L/N4q0V/@:D,Y+?VMkA2la^4>C8R2a/?H2.L-+4q0V/@:D2[+?VMkA2c[]4>C8R3BeQJ2.L-*4q0V/@:EY/+?VMkA7@_34>C8R@Qkns2.L0.4q0V/@:E_1+?VMkA77Y24>C8RA3M+u2.L,V4q0V/@:Ee3+?VMk@lHR\4>C8RAj.>"2.L-)4q0V/@:LuT+?VMkA2ZU\4>C8S1HlpD2.L-.4q0V/@:M,X+?VMk@lQX]4>C8S2*N-F2.L,S4q0V/@:M2Z+?VMk@q@h54>C8S2a/?H2.L0/4q0V/@:M8\+?VMkAiMs`4>C8S3BeQJ2.U;Z4q0V/@:Nh3+?VMm1,(m$4>C8SANh5!2.\O"4q0V/@:Nn5+?VMm@PBtT4>C8T0KpUA2.^2Q4q0V/@:V)V+?VMm@5:"U4>C8T1-QgC2.\dW4q0V/@:V/X+?VMm@5C(V4>C8T1d3$E2.^2R4q0V/@:V5Z+?VMn0K20)4>C8T2Ei6G2.eUT4q0V/@:V;\+?VMn2)[W-4>C8T3''JHI2.eg+4q0V/@:VA^+?VP91H.K,4>C8T@6Per2D?pI4q0V/@:Wh2+?VP92)IK+4>C8T@m2"t2D@''F4q0V/@:Wn4+?VP92.\r\4>C8TANh5!2D?sF4q0V/@:Wt6+?VP92)@E*4>C8U0KpUA2D?sH4q0V/@:_/W+?VP91c[`/4>C8U1-QgC2D@!t4q0V/@:_5Y+?VP91h/]Y4>C8U1d3$E2D?sA4q0V/@:_;[+?VP91bq6(4>C8U2Ei6G2D@"#4q0V/@:_A]+?VP91,M0(4>C8U3''JHI2D?sE4q0V/@:_G_+?VP92)mc/4>C8U@6Per2D@$I4q0V/@:`n3+?VP92J#&]4>C8UANh5!2DScS4q0V/@:a%7+?VP<0P!?V4>C8V0KpUA2D[$r4q0V/@:h5X+?VP;Ai2a]4>C8V1-QgC2D[$u4q0V/@:h;Z+?VP<0Jbm%4>C8V1d3$E2DSiQ4q0V/@:hA\+?VP;AiW$a4>C8V2Ei6G2D[%!4q0V/@:hG^+?VP<0Om9U4>C8V3''JHI2DSl(4q0V/@:hM`+?VP;Ai;g^4>C8V@6Per2D[$@4q0V/@:j%6+?VP;Ammk44>C8VANh5!2D[''F4q0V/@:j+8+?VP;An!q54>C;!0KpUA2DSku4q0V/@PBN#+?VP>1bh0''4>C;!1-QgC2Dm<I4q0V/@PBT%+?VP>@:;>/4>C;!1d3$E2DnrU4q0V/@PBZ''+?VP?1H%E+4>C;!2Ei6G2E!<F4q0V/@PB`)+?VP?1GV-''4>C;!3''JHI2E!?K4q0V/@PBf++?VP?0k3BV4>C;!@6Per2E!<K4q0V/@PD7T+?VP?1,;$&4>C;!@m2"t2E!?I4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@S0P!?i4>o)Q@Qk5`0k)hJ4s2sG2D\c*%6Q@S0P3Kk4>o)PA3LGb0k)jk4s2sG2D[0R%6Q@S0ekj74>o)R3Bdm70k)jm4s2sG2DSi-%6Q@S0f;-;4>o-.0g6%/0k)jq4s2sG2eFg/%6Q@S0fM9=4>o-.3''Id60k)js4s2sG2e$2Z%6Q@S0f_E?4>o-/@m1>a0k)kG4s2sG2e$5[%6Q@S0k*<h4>o-13''Id60k)kI4s2sG2e4m3%6Q@S0k<Hj4>o-.0Koq.0k)kK4s2sG2e"^0%6Q@S0kNTl4>o-.2*MI30k)ml4s2sG2e?G^%6Q@S1,1s84>o-01d2@20k)mn4s2sG2e6Ma%6Q@S1,D*:4>o--2*MI30k)mp4s2sG2e-A^%6Q@S1,V6<4>o--1Hl710k)mr4s2sG2eG!4%6Q@S1,hB>4>o-12EhR40k)mt4s2sG2e?Pa%6Q@S1-%N@4>o-01Hl710k)nH4s2sG2e+U,%6Q@S11EEi4>o--3Bdm70k)nJ4s2sG2e-D_%6Q@S11WQk4>o-02a.[50k)nL4s2sG2eFa-%6Q@S11i]m4>o--1-Q.00k)pm4s2sG2eHP`%6Q@S1GM''94>o-.2EhR40k)po4s2sG2e?M`%6Q@S1G_3;4>o-.@m1>a0k)pq4s2sG2dp8]%6Q@S1Gq?=4>o-02EhR40k)ps4s2sG2e6A]%6Q@S1H.K?4>o-1@6P,_0k)qI4s2sG2e+X-%6Q@S1L`Nj4>o-0@6P,_0k)qK4s2sG2e-;\%6Q@S1LrZl4>pY(3''Id60k)qM4s2sG@Q6,,%6Q@S1M/fn4>pY.1d2@20k)sn4s2sG@U_5Z%6Q@S1bh0:4>pYZ2EhR40k)sp4s2sG@UqG^%6Q@S1c%<<4>pY[0Koq.0k)st4s2sGA26,.%6Q@S1cIT@4>p_+1d2@20k)t!4s2sGA27[Z%6Q@S1c[`B4>p_)Aj-Yd0k)tJ4s2sGA2@^Z%6Q@S1h&Wk4>p_+Aj-Yd0k)tL4s2sGA2,i''%6Q@S1h8cm4>p_(@6P,_0k)tN4s2sG@q9"3%6Q@S1hJoo4>p_+1Hl710k*!o4s2sGA2#i(%6Q@S2).9;4>p_)3Bdm70k*!q4s2sGA2@XX%6Q@S2)@E=4>p_)@6P,_0k*!s4s2sGA2,f&%6Q@S2)RQ?4>p_(0Koq.0k*!u4s2sGA2.UY%6Q@S2)d]A4>p_,1-Q.00k*""4s2sGA2#`%%6Q@S2*!iC4>p_)3''Id60k*"K4s2sGA2?/.%6Q@S2.A`l4>p_(1Hl710k*"M4s2sGA2%UZ%6Q@S2.Sln4>p_,0Koq.0k*"O4s2sGA2#r+%6Q@S2.f#p4>p_*0Koq.0k*$p4s2sGA27XY%6Q@S2DIB<4>p_(3''Id60k*$r4s2sGA25o(%6Q@S2D[N>4>p_(3Bdm70k*$t4s2sGA2,c%%6Q@S2DmZ@4?"s''2a.[50k*%!4s2sH0KE`/%6Q@S2E*fB4?"s''ANgPc0k*%#4s2sH0Ocb#%6Q@S2E<rD4?"s''0Koq.0k*%L4s2sH0OZ\"%6Q@S2Inuo4?"s&3Bdm70k*%P4s2sH1,L^L%6Q@S2_dK=4?##R@m1>a0k*''s4s2sH1,gmN%6Q@S2`!W?4?##S1Hl710k*''u4s2sH1,`]-%6Q@S2`3cA4?#$*@6P,_0k*("4s2sH11`:+%6Q@S2`EoC4?#$,3''Id60k*($4s2sH11aoY%6Q@S2`X&E4?#$+Aj-Yd0k*(M4s2sH11alX%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>C;(@Qkns2_nr&4q0V/@Q.d\+?VS<AMZLZ4>C;(A3M+u2`!EN4q0V/@Q.j^+?VS=@q.\34>C;(Aj.>"2`"r!4q0V/@Q6&*+?VS=@lQX]4>C;)0g6^B2`"r$4q0V/@Q6,,+?VS=@Q?U]4>C;)1HlpD2`"o$4q0V/@Q62.+?VS=@Pp=Y4>C;)2*N-F2`"o"4q0V/@Q680+?VS=AR[h44>C;)2a/?H2`"oT4q0V/@Q6>2+?VS=@lHR\4>C;)3BeQJ2`"oS4q0V/@Q7d[+?VS=@l$:X4>C;)@Qkns2`"r%4q0V/@Q7j]+?VS=@Q6O\4>C;)A3M+u2`"rQ4q0V/@Q7p_+?VS>ARdn54>C;)Aj.>"2`,)W4q0V/@Q?,++?VS?11`WY4>C;*1HlpD2`5#&4q0V/@Q?8/+?VS?@:;>/4>C;*2*N-F2`<TT4q0V/@Q?>1+?VS@@l-@Y4>C;*2a/?H2`EEM4q0V/@Q@m]+?VSA0O[-S4>C;*@m2"t2`>8,4q0V/@Q@s_+?VS@An!q54>C;*ANh5!2`>8V4q0V/@UUuT+?VSB0K)*(4>C;R1d3$E2`NKK4q0V/@UV,X+?VSB0ebd#4>C;R2Ei6G2`NL''4q0V/@UV2Z+?VSB0P*EW4>C;R3''JHI2`NKO4q0V/@UV8\+?VSB0Jbm%4>C;R@6Per2`NNJ4q0V/@UW_0+?VSC1grQW4>C;R@m2"t2`W^)4q0V/@UWe2+?VSC1h&WX4>C;RANh5!2`W]P4q0V/@UWk4+?VSC1c.B*4>C;S0KpUA2`YD+4q0V/@U_&U+?VSC@q7b44>C;S1-QgC2`YA[4q0V/@U_,W+?VSCA2ZU\4>C;S1d3$E2`YAZ4q0V/@U_2Y+?VSk3&!N*4>C;S2Ei6G2dnXV4q0V/@U_8[+?VSkA2-7W4>C;S@6Per2e+dT4q0V/@Uh)U+?VSn0Jbm%4>C;T0g6^B2e4U%4q0V/@Uh/W+?VSn0JPa#4>C;T1HlpD2eFp,4q0V/@Uh5Y+?VSp3AE],4>C;T2*N-F2eG$[4q0V/@Uh;[+?VSp@V%_44>C;T2a/?H3&!$F4q0V/@Uih1+?VV;0f2''''4>C;T@Qkns3&!-I4q0V/@Uin3+?VV;A2la^4>C;TA3M+u3&"i$4q0V/@Uit5+?VV;AM?:W4>C;TAj.>"3&"kt4q0V/@Uq/V+?VV;@lQX]4>C;U0g6^B3&"ht4q0V/@Uq5X+?VV;A2$1V4>C;U1HlpD3&"i"4q0V/@Uq;Z+?VV;AMZLZ4>C;U2*N-F3&"l''4q0V/@UqA\+?VV;A7Ie44>C;U2a/?H3&"iN4q0V/@UqG^+?VV;A2QO[4>C;U3BeQJ3&"i&4q0V/@Urn2+?VV;@qIn64>C;U@Qkns3&"l%4q0V/@Urt4+?VV;AMu^]4>C;UA3M+u3&"iQ4q0V/@Us%6+?VV<AnF494>C;UAj.>"3&36D4q0V/@V%5W+?VV=3A`o/4>C;V0g6^B3&5#)4q0V/@V%;Y+?VV=An=.84>C;V1HlpD3&5)+4q0V/@V%A[+?VV>0K20)4>C;V2*N-F3&5&)4q0V/@V%G]+?VV>0JG["4>C;V2a/?H3&5#%4q0V/@V%M_+?VV>1LWHV4>C;V3BeQJ3&5&S4q0V/@V&t3+?VV=A2ZU\4>C;V@Qkns3&5)&4q0V/@V''%5+?VV=ARdn54>C;VA3M+u3&5&"4q0V/@V''+7+?VV=AhlOZ4>C;VAj.>"3&5)''4q0V/@V.;X+?VV>0Om9UASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0k+`L4s2sI11juZ%6Q@SAhlOm4?,*.2EhR40k+`N4s2sI11i4(%6Q@SAi)[o4?,*-@6P,_0k+`P4s2sI11`:+%6Q@SAi;gq4?,*-0Koq.0k+`R4s2sI11jrY%6Q@SAiMss4?,*.1Hl710k+`T4s2sI11au[%6Q@SAmmkG4?,5X2a.[50k+a(4s2sI2E*HV%6Q@SAn+"I4?,5X@m1>a0k+a*4s2sI2E*EU%6Q@SAn=.K4?,;W0g6%/0k+a,4s2sI3&G21%6Q@T0JG[54?,;Y2a.[50k2ml4s2sI3&Y2/%6Q@T0JYg74?,;Y3Bdm70k2mn4s2sI3Fjp0%6Q@T0Jks94?-b''1d2@20k2mp4s2sI@5''W(%6Q@T0K)*;4?-k11-Q.00k2mr4s2sIAn<b^%6Q@T0K;6=4?-qa0g6%/0k2mt4s2sIAn>O;%6Q@T0O[-f4?-qa0Koq.0k2nH4s2sJ0P3%''%6Q@T0Om9h4?5*)A3LGb0k2nJ4s2sJ0OeWX%6Q@T0P*Ej4?5*+2*MI30k2nL4s2sJ0Olt(%6Q@T0ebd64?5*)ANgPc0k2pm4s2sJ0Om%*%6Q@T0etp84?5**@Qk5`0k2po4s2sJ0Om(+%6Q@T0f2'':4?5-,1d2@20k2pq4s2sJ0k<((%6Q@T0fD3<4?5;W1d2@20k2ps4s2sJ2Df#0%6Q@T0fV?>4?5;W0g6%/0k2pu4s2sJ2Dm9S%6Q@T0k!6g4?5;V@6P,_0k2qI4s2sJ2Deu/%6Q@T0k3Bi4>efIANgPc0k2qK4s2sF0JG@J%6Q@T0kENk4>efH2a.[50k2qM4s2sF0JP@I%6Q@T1,(m74>efJ1-Q.00k2sn4s2sF0JbCH%6Q@T1,;$94>efI@Qk5`0k2sp4s2sEAnEna%6Q@T1,M0;4>^Y^1d2@20k2sr4s2sF0JbLK%6Q@T1,_<=4>efK2a.[50k2st4s2sF0J[-%%6Q@T11<?h4>efI2a.[50k2tJ4s2sF0JR''$%6Q@T11NKj4>efJ0Koq.0k2tL4s2sF0JYRN%6Q@T11`Wl4>efK2*MI30k2tN4s2sF0J[6(%6Q@T1GD!84>efK0g6%/0k3!o4s2sF0JI''%%6Q@T1GV-:4>eiN@6P,_0k3!q4s2sF0f_''S%6Q@T1Gh9<4>eiR1Hl710k3!s4s2sF0k4WU%6Q@T1H7Q@4>ej''3''Id60k3""4s2sF0k4cY%6Q@T1LWHi4>elP0g6%/0k3"K4s2sF1,WK(%6Q@T1LiTk4>elO1-Q.00k3"O4s2sF1,UpQ%6Q@T1b_*94>elP1-Q.00k3$p4s2sF11OiY%6Q@T1bq6;4>eoKANgPc0k3$r4s2sF1HB#1%6Q@T1c.B=4>euO2EhR40k3$t4s2sF1hAF+%6Q@T1c@N?4>euN2a.[50k3%!4s2sF2)-jM%6Q@T1cRZA4>es,2a.[50k3%#4s2sF1hJO-%6Q@T1grQj4>es,1d2@20k3%L4s2sF2)/N''%6Q@T1h/]l4>es-Aj-Yd0k3%N4s2sF2)$jN%6Q@T1hAin4>euM3''Id60k3%P4s2sF1hC,[%6Q@T2)%3:4>euN0g6%/0k3''q4s2sF2)$mO%6Q@T2)7?<4>es-0g6%/0k3''s4s2sF2)&H&%6Q@T2)IK>4>es-@Qk5`0k3("4s2sF1hA@)%6Q@T2)mcB4>euMANgPc0k3($4s2sF2)$gM%6Q@T2.8Zk4>euM@Qk5`0k3(O4s2sF2e->]%6Q@T2.\ro4>f)S1-Q.YDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c@l7j^+?VM?A2QO[4>C>(0KpUA2)f&$4q0V/@l?&*+?VM?@UVG04>C>(1-QgC2)f#''4q0V/@l?,,+?VM?@UqY34>C>(1d3$E2)euS4q0V/@l?2.+?VM?@Q6O\4>C>(2Ei6G2)eu&4q0V/@l?80+?VM?@V.e54>C>(3''JHI2)f#(4q0V/@l?>2+?VM?A2$1V4>C>(@6Per2)eu)4q0V/@l@d[+?VM?@kg.V4>C>(@m2"t2*!@%4q0V/@l@j]+?VMA1grQW4>C>(ANh5!2.84"4q0V/@l@p_+?VMi0fD3)4>C>)1-QgC2.83s4q0V/@lH2-+?VMi0P3KX4>C>)1d3$E2.83u4q0V/@lH8/+?VMi0O[-S4>C>)2Ei6G2.84N4q0V/@lH>1+?VMi1G_3(4>C>)3''JHI2.AIR4q0V/@lHD3+?VMj@5g@Z4>C>)@6Per2.C!)4q0V/@lIj\+?VMj@:MJ14>C>)@m2"t2.J<r4q0V/@lIp^+?VMk2)[W-4>C>)ANh5!2.JL#4q0V/@lJ!`+?VMkARdn54>C>*0KpUA2.L614q0V/@lQ2,+?VMkAS"%74>C>*1-QgC2.L5Q4q0V/@lQ8.+?VMkAiDm_4>C>*1d3$E2.SBp4q0V/@lQ>0+?VMkAiW$a4>C>*2Ei6G2.\O''4q0V/@lQD2+?VMm1,qH,4>C>*3''JHI2.^2U4q0V/@lQJ4+?VMm@:_V34>C>*@6Per2.^3)4q0V/@lRp]+?VMm@:MJ14>C>*@m2"t2.eX#4q0V/@lS!_+?VMn1GD!%4>C>*ANh5!2.ea*4q0V/@lS''a+?VP92.Sl[4>C>+0KpUA2D@!s4q0V/@lZ8-+?VP92E*f/4>C>+1-QgC2D?sB4q0V/@lZ>/+?VP9@5:"U4>C>+1d3$E2D@*M4q0V/@lZD1+?VP93&!N*4>C>+2Ei6G2D@-H4q0V/@lZJ3+?VP93&*T+4>C>+3''JHI2D@.%4q0V/@lZP5+?VP93&<`-4>C>+@6Per2D@-K4q0V/@l\!^+?VP93FY/]4>C>+@m2"t2D@-M4q0V/@l\''`+?VP93&a#14>C>+ANh5!2D@.$4q0V/@l\-b+?VP93+Y8_4>C>S0KpUA2DR!I4q0V/@pq)U+?VP;1c@N,4>C>S1-QgC2DSl"4q0V/@pq/W+?VP<0ebd#4>C>S1d3$E2D[3K4q0V/@pq5Y+?VP<11NKW4>C>S3''JHI2D[-I4q0V/@pqA]+?VP<1c%<)4>C>S@6Per2D\o$4q0V/@prh1+?VP<1H@W.4>C>S@m2"t2D[1!4q0V/@prn3+?VP<1grQW4>C>SANh5!2D[.!4q0V/@prt5+?VP<1-%N-4>C>T0KpUA2D[0E4q0V/@q%/V+?VP<1Gh9)4>C>T1-QgC2D[3M4q0V/@q%5X+?VP<2)IK+4>C>T1d3$E2D[3N4q0V/@q%;Z+?VP<11WQX4>C>T2Ei6G2D[0K4q0V/@q%A\+?VP<1G_3(4>C>T3''JHI2D[4!4q0V/@q%G^+?VP<2).9(4>C>T@6Per2D[-K4q0V/@q&n2+?VP<2)d].4>C>T@m2"t2D[0D4q0V/@q&t4+?VP<1cRZ.4>C>TANh5!2Dm="4q0V/@q''%6+?VP>1c@N,4>C>U0KpUA2Dnu&4q0V/@q.;Y+?VP>@kp4W4>C>U1d3$E2E!C#4q0V/@q.A[+?VP?2.f#]4>C>U2Ei6G2E!BN4q0V/@q.G]+?VP?2).9(4>C>U@6Per2E3F''4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@T@q%VE4>o/R@6P,_0k4^''4s2sG3&EWZ%6Q@T@qInI4>o/T@Qk5`0k4`J4s2sG3&G).%6Q@TA2-7j4>o/UAj-Yd0k4`L4s2sG3&*<T%6Q@TA2?Cl4>o/T0g6%/0k4`N4s2sG3&+o,%6Q@TA2QOn4>o/T2*MI30k4`P4s2sG3&4r,%6Q@TA2c[p4>o/SA3LGb0k4`R4s2sG3&5)0%6Q@TA2ugr4>o/UANgPc0k4a&4s2sG3&EHU%6Q@TA7@_F4>o/T1d2@20k4a(4s2sG3&+r-%6Q@TA7RkH4>o/R1-Q.00k4a*4s2sG3&*6R%6Q@TA7e"J4>o/S2EhR40k4cK4s2sG3&3HW%6Q@TAMH@k4>o/SANgPc0k4cM4s2sG3&G/0%6Q@TAMZLm4>o/T@6P,_0k4cO4s2sG3&3?T%6Q@TAMlXo4>o/S0Koq.0k4cQ4s2sG@PVFW%6Q@TAN)dq4>pY(Aj-Yd0k4cS4s2sG@PVIX%6Q@TAN;ps4>pY)0g6%/0k4d''4s2sG@P]i)%6Q@TAR[hG4>pY,A3LGb0k4d)4s2sI0K:gO%6Q@TARmtI4>pY.3''Id60k4d+4s2sG@V%G]%6Q@TAS++K4>pY[1d2@20k4fL4s2sG@V%M_%6Q@TAhcIl4>pY[1Hl710k4fN4s2sG@V%;Y%6Q@TAhuUn4>pY[2a.[50k4fP4s2sG@koo*%6Q@TAi2ap4>p_/@6P,_0k4fT4s2sGA2cD1%6Q@TAiW$t4>p_(A3LGb0k4g(4s2sGA2Z/+%6Q@TAn!qH4>p_11-Q.00k4g*4s2sGA2Q>1%6Q@TAn4(J4>p_.1-Q.00k4g,4s2sGA2[s^%6Q@TAnF4L4>p_.Aj-Yd0k;sl4s2sGA2uA.%6Q@U0JPa64>p_0A3LGb0k;sn4s2sGA7]@:%6Q@U0Jbm84>p_/Aj-Yd0k;sp4s2sGA2lJ2%6Q@U0Ju$:4>p_-ANgPc0k;sr4s2sGA2ZA1%6Q@U0K20<4>p_.0Koq.0k;st4s2sGA2uS4%6Q@U0KD<>4>p_/0Koq.0k;tH4s2sGA2e!^%6Q@U0Od3g4>p_-Aj-Yd0k;tJ4s2sGA2l>.%6Q@U0P!?i4>p_13''Id60k;tL4s2sGA27a\%6Q@U0P3Kk4>p_.3''Id60k<!m4s2sGA2n$^%6Q@U0ekj74>p_/ANgPc0k<!o4s2sGA2l8,%6Q@U0f)!94>p_01d2@20k<!q4s2sGA2,u+%6Q@U0f;-;4>p_01Hl710k<!s4s2sGA2ds]%6Q@U0fM9=4>p_/A3LGb0k<!u4s2sGA2cA0%6Q@U0f_E?4>p_10Koq.0k<"I4s2sH0P"ZW%6Q@U0k*<h4?"s)1Hl710k<"K4s2sH0Oun%%6Q@U0k<Hj4?"s)A3LGb0k<"M4s2sH0OnQU%6Q@U0kNTl4?$k.3Bdm70k<$n4s2sH0P*"''%6Q@U1,1s84?"s)2a.[50k<$p4s2sH0Ouq&%6Q@U1,D*:4?"s)ANgPc0k<$r4s2sH0P)q%%6Q@U1,V6<4?"s)1d2@20k<$t4s2sH0OnWW%6Q@U11<?h4?"s)@6P,_0k<%K4s2sH0OnZX%6Q@U11NKj4?"s*0g6%/0k<%M4s2sH1,LaM%6Q@U11`Wl4?##S3''Id60k<%O4s2sH1,h-U%6Q@U1GD!84?##S2EhR40k<''p4s2sH1GCLH%6Q@U1GV-:4?#$-@6P,_0k<''r4s2sH11i@,%6Q@U1Gh9<4?#$-ANgPc0k<''t4s2sH11iF.%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>CA&2Ei6G2_nu$4q0V/A2?/.+?VS<An!q54>CA&3''JHI2`!-B4q0V/A2?50+?VS=A2?CY4>CA&@6Per2`"u)4q0V/A2@[Y+?VS=AMlX\4>CA&@m2"t2`"u&4q0V/A2@a[+?VS=@UhS24>CA&ANh5!2`##(4q0V/A2@g]+?VS=AMZLZ4>CA''0KpUA2`##*4q0V/A2H#)+?VS=A7Ie44>CA''1-QgC2`"u"4q0V/A2H)++?VS=A7@_34>CA''1d3$E2`"u$4q0V/A2H/-+?VS=A7Rk54>CA''2Ei6G2`"uQ4q0V/A2H;1+?VS=AN2j_4>CA''ANh5!2`3?F4q0V/A2Im^+?VS?2.A`Y4>CA(0KpUA2`3I)4q0V/A2Q)*+?VS?@PBtT4>CA(1-QgC2`5)"4q0V/A2Q/,+?VS?@U_M14>CA(1d3$E2`5)%4q0V/A2Q5.+?VS?@k^(U4>CA(2Ei6G2`5&V4q0V/A2Q;0+?VS?@Q$CZ4>CA(3''JHI2`5&Q4q0V/A2QA2+?VS@3+4u[4>CA(@6Per2`>/+4q0V/A2Rg[+?VSA0k<HW4>CA(@m2"t2`EI#4q0V/A2Rm]+?VSA0ebd#4>CA(ANh5!2`EHI4q0V/A2Rs_+?VSA0etp%4>CA)0KpUA2`EKJ4q0V/A2Z/++?VSA0ekj$4>CA)1-QgC2`EHK4q0V/A2Z;/+?VSA1,;$&4>CA)2Ei6G2`EKN4q0V/A2ZA1+?VSB1,D*''4>CA)3''JHI2`NR&4q0V/A2ZG3+?VSB1,;$&4>CA)@6Per2`NTN4q0V/A2[m\+?VSB11i]Z4>CA)@m2"t2`NQP4q0V/A2[s^+?VSB11`WY4>CA)ANh5!2`NR%4q0V/A2\$`+?VSB1,1s%4>CA*0KpUA2`NQQ4q0V/A2c5,+?VSB1G_3(4>CA*1-QgC2`NR$4q0V/A2c;.+?VSB1GM''&4>CA*1d3$E2`W`P4q0V/A2cA0+?VSC2.A`Y4>CA*2Ei6G2`W^,4q0V/A2cG2+?VSC2.JfZ4>CA*3''JHI2`W`O4q0V/A2cM4+?VSC2)7?)4>CA*@6Per2`W`M4q0V/A2e$_+?VSCAM?:W4>CA*ANh5!2`YG\4q0V/A2e*a+?VSCARmt64>CA+0KpUA2`YGX4q0V/A2l;-+?VSCA7Ie44>CA+1-QgC2`YD[4q0V/A2lA/+?VSCA7Rk54>CA+1d3$E2dn[(4q0V/A2lG1+?VSk3&s/34>CA+2Ei6G2dn[''4q0V/A2lS5+?VSk3+4u[4>CA+@6Per2dn[)4q0V/A2n$^+?VSkA2la^4>CA+@m2"t2e"Kq4q0V/A2n*`+?VSl0Jks&4>CA+ANh5!2e"Kt4q0V/A2n0b+?VSl0Ju$''4>CA,0KpUA2e"IQ4q0V/A2uA.+?VSl0K;6*4>CA,1-QgC2e"IL4q0V/A2uG0+?VSl0P*EW4>CA,1d3$E2e"I$4q0V/A2uM2+?VSl0etp%4>CA,2Ei6G2e+g(4q0V/A2uS4+?VSm3AE],4>CA,3''JHI2e+gU4q0V/A2uY6+?VSm3+G,]4>CA,@6Per2e+g,4q0V/A3"*_+?VSm3+P2^4>CA,@m2"t2e+g)4q0V/A3"0a+?VSn0kENX4>CA,ANh5!2e4XR4q0V/A3"6c+?VSn0ekj$4>CAT0KpUA2e4UR4q0V/A772V+?VSn0fV?+4>CAT1-QgC2e4X$4q0V/A778X+?VSn0f)!&4>CAT1d3$E2e4XT4q0V/A77>Z+?VSn0etp%ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0k=]N4s2sHA2%UZ%6Q@U@5g@m4?$e)@m1>a0k=]P4s2sHAi4''^%6Q@U@6$Lo4?$k10g6%/0k=^$4s2sHAi4-`%6Q@U@:DDC4?$k10Koq.0k=^&4s2sHAi4*_%6Q@U@:VPE4?$k0@Qk5`0k=^(4s2sHAiVb5%6Q@U@:h\G4?$k41-Q.00k=`I4s2sHAn*V\%6Q@U@PL%h4?$k^1-Q.00k=`K4s2sHAn*MY%6Q@U@P^1j4?,#L2EhR40k=`M4s2sI0Jd9(%6Q@U@Pp=l4?,#N3Bdm70k=`O4s2sI0P4`W%6Q@U@Q-In4?,$,1-Q.00k=`Q4s2sI0P3=/%6Q@U@Q?Up4?,$,2*MI30k=a%4s2sI0eb=G%6Q@U@U_MD4?,$,@Qk5`0k=a''4s2sI0eb:F%6Q@U@UqYF4?,)M0g6%/0k=a)4s2sI1,<H*%6Q@U@V.eH4?,)O2*MI30k=cJ4s2sI1G^gN%6Q@U@kg.i4?,,PA3LGb0k=cL4s2sI1GgpP%6Q@U@l$:k4?,,O3Bdm70k=cN4s2sI1GpmN%6Q@U@l6Fm4?,,P2*MI30k=cP4s2sI1Gq''S%6Q@U@lHRo4?,,QAj-Yd0k=cR4s2sI1GggM%6Q@U@lZ^q4?,,P2EhR40k=d&4s2sI1GNB''%6Q@U@q%VE4?,,P1-Q.00k=d(4s2sI1GgjN%6Q@U@q7bG4?,,RANgPc0k=d*4s2sI1GN?&%6Q@U@qInI4?,,P@6P,_0k=fK4s2sI1GCdP%6Q@UA2-7j4?,,Q@m1>a0k=fM4s2sI1GiW+%6Q@UA2?Cl4?,,O2EhR40k=fO4s2sI1GUdN%6Q@UA2QOn4?,,P0Koq.0k=fQ4s2sI1G^sR%6Q@UA2c[p4?,,PAj-Yd0k=fS4s2sI1GUsS%6Q@UA2ugr4?,,R2a.[50k=g''4s2sI1GgsQ%6Q@UA7@_F4?,,R@m1>a0k=g)4s2sI1GpsP%6Q@UA7RkH4?,,OANgPc0k=g+4s2sI1GWH(%6Q@UA7e"J4?,,R@Qk5`0k=iL4s2sI1GUmQ%6Q@UAMH@k4?,,R3''Id60k=iN4s2sI2Dm9S%6Q@UAMZLm4?,5V1-Q.00k=iP4s2sI2IS@)%6Q@UAMlXo4?,6-3''Id60k=iR4s2sI2E<ZZ%6Q@UAN)dq4?,5YA3LGb0k=iT4s2sI2E<KU%6Q@UAN;ps4?,5ZANgPc0k=j(4s2sI2E3WZ%6Q@UAR[hG4?,5Z2a.[50k=j*4s2sI2E3TY%6Q@UARmtI4?,5Y@Qk5`0k=j,4s2sI2E>20%6Q@UAS++K4?,5Y2*MI30k=lM4s2sI2ISI,%6Q@UAhcIl4?,5Z3Bdm70k=lO4s2sI2IS=(%6Q@UAhuUn4?,6-2a.[50k=lQ4s2sI2E<WY%6Q@UAi2ap4?,5Z3''Id60k=lS4s2sI2E583%6Q@UAiDmr4?,5ZA3LGb0k=lU4s2sI2E<HT%6Q@UAiW$t4?,5Z1d2@20k=m+4s2sI3&Y;2%6Q@UAnF4L4?,;Z1-Q.00kE$m4s2sI3&iTU%6Q@V0JPa64?,;Z0g6%/0kE$o4s2sI3&bG5%6Q@V0Jbm84?,;YAj-Yd0kE$q4s2sI3&i]X%6Q@V0Ju$:4?,;ZANgPc0kE$s4s2sI3&`ZX%6Q@V0K20<4?,;Z@m1>a0kE$u4s2sI@50N$%6Q@V0KD<>4?-h-2a.[50kE%I4s2sI@l62/%6Q@V0Od3g4?-h0@Qk5`0kE%K4s2sI@pq2X%6Q@V0P!?i4?-hZ1Hl7ZDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,cAM@[Z+?VVo2`<i/4>CD$Aj.>"3+Os-4q0V/AMGl&+?VVo@Pp=Y4>CD%0g6^B3+QJW4q0V/AMGr(+?VVo@Q$CZ4>CD%1HlpD3+ZVT4q0V/AMH#*+?VVpA2?CY4>CD%2*N-F3+cc64q0V/AMH),+?VVqAi2a]4>CD%2a/?H3A<-B4q0V/AMH/.+?VVqAnF494>CD%3BeQJ3+cc34q0V/AMIUW+?VY<0Jks&4>CD%@Qkns3+cc44q0V/AMI[Y+?VVqAi;g^4>CD%A3M+u3A=u%4q0V/AMIa[+?VY<AM?:W4>CD&0g6^B3A>##4q0V/AMQ#)+?VY<A7e"74>CD&1HlpD3A>#%4q0V/AMQ)++?VY<A2la^4>CD&2*N-F3A=uQ4q0V/AMQ/-+?VY<A2c[]4>CD&2a/?H3A=uR4q0V/AMQ5/+?VY<AMcR[4>CD&3BeQJ3AEBF4q0V/AMRaZ+?VY=A2QO[4>CD&A3M+u3AG)#4q0V/AMRg\+?VY=A77Y24>CD&Aj.>"3Ara)4q0V/AMZ#(+?VYB2.f#]4>CD''0g6^B3At>V4q0V/AMZ)*+?VYDAMZLZ4>CD''1HlpD3FQH14q0V/AMZ/,+?VYn11i]Z4>CD''2*N-F1hAUX4q0V/AMZ5.+?VM82_[E)4>CD''2a/?H2)$ps4q0V/AMZ;0+?VM82DIB)4>CD''3BeQJ2)$n!4q0V/AM[aY+?VM82D@<(4>CD''@Qkns2)$mD4q0V/AM[g[+?VM81h&WX4>CD''A3M+u2)$mu4q0V/AM[m]+?VM82_mQ+4>CD''Aj.>"2)$jH4q0V/AMc))+?VM81h8cZ4>CD(0g6^B2)$jA4q0V/AMc/++?VM82.A`Y4>CD(1HlpD2)$jq4q0V/AMc5-+?VM82DRH*4>CD(2*N-F2)$aB4q0V/AMc;/+?VM81c7H+4>CD(2a/?H2)$n"4q0V/AMcA1+?VM82E<r14>CD(3BeQJ2)$pt4q0V/AMdm\+?VM81c@N,4>CD(A3M+u2)$j@4q0V/AMds^+?VM82J#&]4>CD(Aj.>"2)$sF4q0V/AMl/*+?VM82)d].4>CD)0g6^B2)$mB4q0V/AMl5,+?VM9A2$1V4>CD)1HlpD2)7(!4q0V/AMl;.+?VM:2Inu\4>CD)2*N-F2)7("4q0V/AMlA0+?VM:2J#&]4>CD)2a/?H2)8]#4q0V/AMlG2+?VM:A2?CY4>CD)3BeQJ2)@!u4q0V/AMmm[+?VM;3Fb5^4>CD)A3M+u2)R1"4q0V/AMn$_+?VM=1h8cZ4>CD)Aj.>"2)R6F4q0V/AMu5++?VM=1Gh9)4>CD*0g6^B2)R-t4q0V/AMu;-+?VM=2).9(4>CD*1HlpD2)R9I4q0V/AMuA/+?VM=1H%E+4>CD*2*N-F2)R0I4q0V/AMuG1+?VM=1GD!%4>CD*2a/?H2)R6H4q0V/AMuM3+?VM=1c7H+4>CD*3BeQJ2)R''t4q0V/AN!s\+?VM=1GV-''4>CD*@Qkns2)R9L4q0V/AN"$^+?VM=1hAi[4>CD*A3M+u2)R0M4q0V/AN"*`+?VM=1cRZ.4>CD*Aj.>"2)R."4q0V/AN);,+?VM=1L`NW4>CD+0g6^B2)R3E4q0V/AN)A.+?VM=1h&WX4>CD+1HlpD2)d3t4q0V/AN)G0+?VM?0K20)4>CD+2*N-F2)f,V4q0V/AN)M2+?VM@0f2''''4>CD+2a/?H2)f)%4q0V/AN)S4+?VM?Ai;g^4>CD+3BeQJ2)f&U4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@V2dnlm4>f''01d2@20kE:Q4s2sF3&!$M%6Q@V2e,#o4>f''/A3LGb0kE:S4s2sF2eHSa%6Q@V2e>/q4>f)P3''Id60kE:U4s2sF2eG$5%6Q@V3&!N=4>f)P@Qk5`0kE=!4s2sF2eFj0%6Q@V3&3Z?4>f''-Aj-Yd0kE=#4s2sF3&!9T%6Q@V3&EfA4>f''/ANgPc0kE=%4s2sF2e=d/%6Q@V3&WrC4>f''01-Q.00kE=''4s2sF2e=j1%6Q@V3&j)E4>f''/@m1>a0kE=)4s2sF2e=^-%6Q@V3+4un4>f)PANgPc0kE=R4s2sF2eHP`%6Q@V3+G,p4>f)Q0Koq.0kE=T4s2sF2e=p3%6Q@V3+Y8r4>f)P0g6%/0kE=V4s2sF3&"i+%6Q@V3A<W>4>f''00g6%/0kE@"4s2sF2e>!5%6Q@V3ANc@4>f''00Koq.0kE@$4s2sF3&"l,%6Q@V3A`oB4>f)P1d2@20kE@&4s2sF3Ak;1%6Q@V3As&D4>gP*0Koq.0kE@(4s2sF@5U#.%6Q@V3B02F4>gP)2*MI30kE@*4s2sF@5^&.%6Q@V3FP)o4>gP)ANgPc0kE@S4s2sF@5Bl,%6Q@V3Fb5q4>gP''2*MI30kE@U4s2sF@5_X[%6Q@V3FtAs4>gP)0Koq.0kE@W4s2sF@5VX\%6Q@V@5''kf4>gP*2*MI30kFcJ4s2sF@5_UZ%6Q@V@5:"h4>gP)1Hl710kFcL4s2sF@5]r+%6Q@V@5L.j4>gP)2a.[50kFcN4s2sF@5Kc(%6Q@V@5^:l4>gP)A3LGb0kFcP4s2sF@5Tf(%6Q@V@5pFn4>gP(1d2@20kFcR4s2sF@5VLX%6Q@V@:;>B4>gP(3''Id60kFd&4s2sF@5qg^%6Q@V@:MJD4>gP''ANgPc0kFd(4s2sF@5MLY%6Q@V@:_VF4>gP''3Bdm70kFd*4s2sF@5MIX%6Q@V@PBtg4>gP+0Koq.0kFfK4s2sF@5^,0%6Q@V@PU+i4>gP(2a.[50kFfM4s2sF@5Tc''%6Q@V@Pg7k4>gP)2EhR40kFfO4s2sF@5K`''%6Q@V@Q$Cm4>gP)@m1>a0kFfQ4s2sF@Q-&+%6Q@V@Q6Oo4>gS+ANgPc0kFfS4s2sF@Uh,V%6Q@V@UVGC4>gSX0Koq.0kFg''4s2sF@l681%6Q@V@UhSE4>gY(ANgPc0kFg)4s2sFA2%IV%6Q@V@V%_G4>gY(A3LGb0kFg+4s2sFA2.LV%6Q@V@k^(h4>gY)0Koq.0kFiL4s2sFA2%LW%6Q@V@kp4j4>gY)3''Id60kFiN4s2sFA2%OX%6Q@V@l-@l4>gY)2EhR40kFiP4s2sFA26#+%6Q@V@l?Ln4>gY''Aj-Yd0kFiR4s2sFA2>o''%6Q@V@lQXp4>gY(1-Q.00kFiT4s2sFA25r)%6Q@V@pqPD4>gY(Aj-Yd0kFj(4s2sFA27^[%6Q@V@q.\F4>g\+ANgPc0kFj*4s2sFAMZ/,%6Q@V@q@hH4>g\Z0g6%/0kFj,4s2sFAR[J[%6Q@VA2$1i4>g\Z3Bdm70kFlO4s2sFAhu>/%6Q@VA2HIm4>g_,3''Id60kFlQ4s2sFAiX<a%6Q@VA2ZUo4>g_22EhR40kFlS4s2sFAiXHe%6Q@VA2laq4>nlQ@6P,_0kFlU4s2sG0KCgN%6Q@VA77YE4>nlQ2EhR40kFm)4s2sG0OeTW%6Q@VA7IeG4>nm&0Koq.0kFm+4s2sG0OeHS%6Q@VAM?:j4>nm''Aj-Yd0kFoN4s2sG0P*()%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>CDY1-QgC2DAZ%4q0V/AS!Y]+?VP9A7Rk54>CDY1d3$E2DAW#4q0V/AS!__+?VP9@PL%U4>CDY2Ei6G2DAZN4q0V/AS!ea+?VP9@Q-I[4>CDY3''JHI2DAWL4q0V/AS!kc+?VP9@V.e54>CDY@6Per2DAVs4q0V/AS#=7+?VP9@q7b44>CDY@m2"t2DAVp4q0V/AS#C9+?VP<1GV-''4>CDYANh5!2D[6K4q0V/AS#I;+?VP<3+4u[4>CDZ0KpUA2D[<J4q0V/AS*Y\+?VP<2e5)]4>CDZ1-QgC2D\fQ4q0V/AS*_^+?VP<3FtA`4>CDZ1d3$E2D\cP4q0V/AS*e`+?VP<3Fk;_4>CDZ2Ei6G2D[?P4q0V/AS*kb+?VP<@:DD04>CDZ3''JHI2D[=(4q0V/AS*qd+?VP<2J,,^4>CDZ@6Per2D[<O4q0V/AS,C8+?VP<3A<W+4>CDZ@m2"t2D[7&4q0V/AS,I:+?VP<@:h\44>CDZANh5!2D[9L4q0V/AS,O<+?VP<3Fb5^4>CG%0KpUA2D[7%4q0V/AhYr''+?VP<@:_V34>CG%1-QgC2D[:%4q0V/AhZ#)+?VP<@5L.W4>CG%1d3$E2D[-u4q0V/AhZ)++?VP<3G(Ga4>CG%2Ei6G2D[9O4q0V/AhZ/-+?VP<3&Nl/4>CG%3''JHI2D[<I4q0V/AhZ5/+?VP<3AE],4>CG%@6Per2D[=''4q0V/Ah[[X+?VP<2_[E)4>CG%@m2"t2Dm?J4q0V/Ah[aZ+?VP>@q7b44>CG%ANh5!2E!HN4q0V/Ah[g\+?VP?2DIB)4>CG&0KpUA2E!F%4q0V/Ahc#(+?VP?2*!i04>CG&1-QgC2E!F&4q0V/Ahc)*+?VP?2DRH*4>CG&1d3$E2E*?M4q0V/Ahc/,+?VPA2`X&24>CG&2Ei6G2E3ZT4q0V/Ahc5.+?VPA3A<W+4>CG&3''JHI2E3^,4q0V/AhdaY+?VPA@:_V34>CG&@m2"t2E5,S4q0V/Ahdg[+?VPB2)[W-4>CG&ANh5!2E3U,4q0V/Ahdm]+?VPA@5C(V4>CG''0KpUA2E5,T4q0V/Ahl))+?VPA@6$L\4>CG''1-QgC2E3WQ4q0V/Ahl/++?VPA2`*]-4>CG''1d3$E2E5/$4q0V/Ahl5-+?VPA3+b>`4>CG''2Ei6G2E3WS4q0V/Ahl;/+?VPA3ANc-4>CG''3''JHI2E3X*4q0V/AhlA1+?VPA2I\iZ4>CG''@6Per2E3WN4q0V/AhmgZ+?VPA@:;>/4>CG''@m2"t2E3ZM4q0V/Ahmm\+?VPA2_dK*4>CG''ANh5!2E3X,4q0V/Ahms^+?VPA3FY/]4>CG(0KpUA2E3]T4q0V/Ahu/*+?VPA3+>&\4>CG(1-QgC2E5,!4q0V/Ahu5,+?VPA3&s/34>CG(1d3$E2E5,%4q0V/Ahu;.+?VPA2`Nu14>CG(2Ei6G2E3X)4q0V/AhuA0+?VPA3AE],4>CG(3''JHI2E3[+4q0V/AhuG2+?VPA3+4u[4>CG(@6Per2E3X+4q0V/Ai!m[+?VPk1H%E+4>CG(@m2"t2I\Hu4q0V/Ai"$_+?VPk3AE],4>CG)0KpUA2I\XX4q0V/Ai);-+?VPk3+G,]4>CG)1d3$E2IeLN4q0V/Ai)A/+?VPm@k^(U4>CG)2Ei6G2Ip6*4q0V/Ai)G1+?VPm@Pg7X4>CG)3''JHI2Ip8Q4q0V/Ai)M3+?VPn2`*]-4>CG)@6Per2Ip6+4q0V/Ai*s\+?VPmAN;p`ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0kN7P4s2sGA7[M[%6Q@W1h8cm4>p_Z2a.[50kN7R4s2sGA7d_`%6Q@W1hJoo4>p_\1d2@20kN9s4s2sGAM>f%%6Q@W2).9;4>p_[3''Id60kN9u4s2sGA7[GY%6Q@W2)@E=4>p_\Aj-Yd0kN:"4s2sGA7RS^%6Q@W2)RQ?4>p_ZANgPc0kN:$4s2sGA7[V^%6Q@W2*!iC4>p_\@Qk5`0kN:O4s2sGA7dY^%6Q@W2.A`l4>p_[@6P,_0kN:Q4s2sGA7B(5%6Q@W2.Sln4>p_]A3LGb0kN:S4s2sGA7dMZ%6Q@W2.f#p4>p_Z@6P,_0kN<t4s2sGA7RP]%6Q@W2DIB<4>p_[1-Q.00kN=!4s2sGA7K48%6Q@W2D[N>4>p_[3Bdm70kN=#4s2sGA7RAX%6Q@W2DmZ@4>p_^1-Q.00kN=%4s2sGA7RJ[%6Q@W2E*fB4>p_^A3LGb0kN=''4s2sGA7RV_%6Q@W2E<rD4>p_[A3LGb0kN=P4s2sGA7[P\%6Q@W2I\im4>p_Z@Qk5`0kN=R4s2sH0P4`W%6Q@W2Inuo4?"uKA3LGb0kN=T4s2sH0P37-%6Q@W2J,,q4?"uL2a.[50kN?u4s2sH0P3.*%6Q@W2_dK=4?"uK@m1>a0kN@"4s2sH0P3"&%6Q@W2`!W?4?"uK1d2@20kN@$4s2sH0P3+)%6Q@W2`3cA4?"uL0Koq.0kN@&4s2sH0P4fY%6Q@W2`EoC4?"s+Aj-Yd0kN@(4s2sH0ebLL%6Q@W2`X&E4?"uL1Hl710kN@Q4s2sH0eb:F%6Q@W2e"rn4?"s+3''Id60kN@S4s2sH0P34,%6Q@W2e5)p4?"uK@Qk5`0kN@U4s2sH0eb@H%6Q@W2eG5r4?"uKANgPc0kNC!4s2sH1,ic.%6Q@W3&<`@4?##SAj-Yd0kNC%4s2sH1GNE(%6Q@W3&NlB4?#&N2a.[50kNC''4s2sH1GCaO%6Q@W3&a#D4?#&N0g6%/0kNC)4s2sH1GLjQ%6Q@W3&s/F4?#&M@6P,_0kNCR4s2sH1GCdP%6Q@W3+>&o4?#$-Aj-Yd0kNCT4s2sH1GEE)%6Q@W3+P2q4?#&NANgPc0kNCV4s2sH1H7?X%6Q@W3+b>s4?#''.2EhR40kNF"4s2sH1M/U1%6Q@W3AE]?4?#''.2*MI30kNF$4s2sH1b^aM%6Q@W3AWiA4?#)N0g6%/0kNF&4s2sH1M1/]%6Q@W3AiuC4?#)N2a.[50kNF(4s2sH1b^UI%6Q@W3B'',E4?#''.@6P,_0kNF*4s2sH1M1,\%6Q@W3B98G4?#''.Aj-Yd0kNFS4s2sH1b`E''%6Q@W3FY/p4?#)N@Qk5`0kNFU4s2sH1M/I-%6Q@W3Fk;r4?#)N3''Id60kNFW4s2sH2)[9T%6Q@W3G(Gt4?#,U1Hl710kOiJ4s2sH2.L2]%6Q@W@50qg4?#-.1-Q.00kOiL4s2sH2.L5^%6Q@W@5U4k4?#-.0g6%/0kOiP4s2sH2.SC)%6Q@W@5g@m4?#/XAj-Yd0kOiR4s2sH2E3]\%6Q@W@6$Lo4?#0/1Hl710kOj&4s2sH2`!HX%6Q@W@:DDC4?#2SAj-Yd0kOj(4s2sH2_no-%6Q@W@:h\G4?#2T1d2@20kOlK4s2sH2`!6R%6Q@W@PL%h4?#2TA3LGb0kOlM4s2sH2_m6S%6Q@W@P^1j4?#2T@Qk5`0kOlO4s2sH2`!<T%6Q@W@Pp=l4?#5V3''Id60kOlQ4s2sH3&NHT%6Q@W@Q-In4?#5V3Bdm`DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,cAn!_`+?VSB1h8cZ4>CGW3BeQJ2`NX&4q0V/An#14+?VSB1h/]Y4>CGW@Qkns2`NQN4q0V/An#76+?VSB1c7H+4>CGWA3M+u2`NZK4q0V/An#=8+?VSC2DdT,4>CGWAj.>"2`WcT4q0V/An*S[+?VSC2D[N+4>CGX1HlpD2`Wd*4q0V/An*Y]+?VSC2DIB)4>CGX2*N-F2`Y>V4q0V/An*__+?VSCAmmk44>CGX2a/?H2`YJ04q0V/An,75+?VSk3+b>`4>CGX@Qkns2dn^''4q0V/An,=7+?VSk3A<W+4>CGXA3M+u2e"R#4q0V/An,C9+?VSl1L`NW4>CGXAj.>"2e"R"4q0V/An3SZ+?VSl1,V6)4>CGY0g6^B2e"Qs4q0V/An3Y\+?VSl1,;$&4>CGY1HlpD2e"O!4q0V/An3_^+?VSl1G_3(4>CGY2*N-F2e"L$4q0V/An3e`+?VSl11<?U4>CGY2a/?H2e"LP4q0V/An3kb+?VSl1GM''&4>CGY3BeQJ2e"OO4q0V/An5=6+?VSl11WQX4>CGY@Qkns2e"OS4q0V/An5C8+?VSl1GV-''4>CGYA3M+u2e"R&4q0V/An5I:+?VSl0k!6T4>CGYAj.>"2e"Nu4q0V/An<Y[+?VSm3A`o/4>CGZ0g6^B2e+j-4q0V/An<_]+?VSm3As&14>CGZ1HlpD2e-8P4q0V/An<e_+?VSn1Gq?*4>CGZ2*N-F2e4^T4q0V/An<ka+?VSn1H7Q-4>CGZ2a/?H2e4^&4q0V/An<qc+?VSn1LWHV4>CGZ3BeQJ2e4a&4q0V/An>C7+?VSn11NKW4>CGZ@Qkns2e4[(4q0V/An>I9+?VSn1bh0''4>CGZA3M+u2e4a(4q0V/AnE_\+?VSn1grQW4>CG[0g6^B2e4^R4q0V/AnEe^+?VSn1,qH,4>CG[1HlpD2eFs(4q0V/AnEk`+?VSp3Aiu04>CG[2a/?H2eG''Z4q0V/AnGI8+?VSp@q7b44>CG[A3M+u2eHPY4q0V/AnGU<+?VSp@qIn64>CG[Aj.>"2eHP[4q0V00JG1E+?VV;0kNTY4>JTE0g6^B3&!''u4q0V00JG7G+?VV;0k*<U4>JTE1HlpD3&!0J4q0V00JG=I+?VV;1c%<)4>JTE2*N-F3&!0K4q0V00JGCK+?VV<0fV?+4>JTE2a/?H3&*0G4q0V00JGIM+?VV<0f_E,4>JTE3BeQJ3&*-s4q0V00JHp!+?VV<11WQX4>JTE@Qkns3&*."4q0V00JI!#+?VV<11NKW4>JTEA3M+u3&*.!4q0V00JI''%+?VV<1,1s%4>JTEAj.>"3&*-F4q0V00JP7F+?VV<1,hB+4>JTF0g6^B3&*-u4q0V00JP=H+?VV<1,;$&4>JTF1HlpD3&33C4q0V00JPCJ+?VV=1H7Q-4>JTF2*N-F3&39G4q0V00JPIL+?VV=1LWHV4>JTF2a/?H3&39H4q0V00JPON+?VV=1GV-''4>JTF3BeQJ3&3EL4q0V00JR!"+?VV>3A<W+4>JTF@Qkns3&=u!4q0V00JR''$+?VV>@5pF[4>JTFA3M+u3&<O)4q0V00JR-&+?VV>2dnlZ4>JTFAj.>"3&<KL4q0V00JY=G+?VV>@5L.W4>JTG0g6^B3&<KM4q0V00JYCI+?VV>3+b>`4>JTG1HlpD3&<NK4q0V00JYIK+?VV>3Aiu04>JTG2*N-F3&<QT4q0V00JYOM+?VV>2`3c.4>JTG2a/?H3&<QO4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC"1,qH?4?,-*3Bdm71,(ID4s2sI1H/i.%6QC"11<?h4?,,V1Hl711,(Im4s2sI1H8l.%6QC"11NKj4?,,WA3LGb1,(Io4s2sI1HAo.%6QC"11`Wl4?,-*@6P,_1,(Iq4s2sI1H8i-%6QC"1GD!84?,,UANgPc1,(L=4s2sI1LW.)%6QC"1GV-:4?,-*Aj-Yd1,(L?4s2sI1H7?X%6QC"1Gh9<4?,,W2a.[51,(LA4s2sI1L`%%%6QC"1H%E>4?,,UAj-Yd1,(LC4s2sI1LW1*%6QC"1H7Q@4?,,V2a.[51,(LE4s2sI1LXiY%6QC"1LWHi4?,,U2EhR41,(Ln4s2sI2DmKY%6QC"1LiTk4?,5V2EhR41,(Lp4s2sI2I^8^%6QC"1M&`m4?,6.2a.[51,(Lr4s2sI2IeL+%6QC"1b_*94?,6/0g6%/1,(O>4s2sI2IeU.%6QC"1bq6;4?,6.@6P,_1,(O@4s2sI2I\@(%6QC"1c.B=4?,6/3''Id61,(OB4s2sI2I\[1%6QC"1c@N?4?,6.1Hl711,(OD4s2sI2I\X0%6QC"1cRZA4?,6/@m1>a1,(OF4s2sI2I\L,%6QC"1h/]l4?,6/1Hl711,(Os4s2sI3&NHT%6QC"2)%3:4?,;[3Bdm71,(R?4s2sI3&ri[%6QC"2)7?<4?,</3''Id61,(RA4s2sI3+4R+%6QC"2)IK>4?,</@6P,_1,(RC4s2sI3&tD2%6QC"2)[W@4?,;\0g6%/1,(RE4s2sI3+4O*%6QC"2)mcB4?,;\Aj-Yd1,(RG4s2sI3&rr^%6QC"2.8Zk4?,</2a.[51,(Rp4s2sI3&ru_%6QC"2.Jfm4?,;\@Qk5`1,(Rr4s2sI3&ro]%6QC"2.\ro4?,</1d2@21,(Rt4s2sI3+6;\%6QC"2D@<;4?,;[@m1>a1,(U@4s2sI3&rcY%6QC"2DRH=4?,;[ANgPc1,(UB4s2sI3B/cX%6QC"2DdT?4?,?32EhR41,(UD4s2sI3Fk-6%6QC"2E!`A4?,?32*MI31,(UF4s2sI@5BT$%6QC"2E3lC4?-b)2a.[51,(UH4s2sI@5;=V%6QC"2IScl4?-b(ANgPc1,(Uq4s2sI@l$,/%6QC"2Ieon4?-h,@Qk5`1,(Uu4s2sI@lIp^%6QC"2_[E<4?-hZ2*MI31,(XA4s2sIA2e$_%6QC"2_mQ>4?-k1@Qk5`1,(XC4s2sIA2cM4%6QC"2`*]@4?-k\@m1>a1,(XE4s2sIA7IAY%6QC"2`<iB4?-k\3Bdm71,(XG4s2sIA7B.7%6QC"2`NuD4?-k]0g6%/1,(XI4s2sIARmba%6QC"2dnlm4?-n_ANgPc1,(Xr4s2sIARo=8%6QC"2e,#o4?-n_@m1>a1,(Xt4s2sIARm_`%6QC"3&!N=4?5)N1d2@21,([B4s2sJ0JHs"%6QC"3&3Z?4?5)M0g6%/1,([D4s2sJ0JR''$%6QC"3&EfA4?5)L@m1>a1,([F4s2sJ0JY@H%6QC"3&WrC4?5*,Aj-Yd1,([H4s2sJ0P+ZV%6QC"3&j)E4?5*-0Koq.1,([J4s2sJ0P3.*%6QC"3+G,p4?5*+1d2@21,(\"4s2sJ0P*7.%6QC"3A<W>4?5,R2EhR41,(^C4s2sJ0f:pS%6QC"3ANc@4?5,R@6P,_1,(^E4s2sJ0f:aN%6QC"3A`oB4?5,R2*MI31,(^G4s2sJ0kFiY%6QC"3As&D4?5-.1d2@21,(^I4s2sJ0kN.(%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>JTN3''JHI3AG,%4q0V00KD-W+?VY=AiMs`4>JTN@6Per3AG)%4q0V00KET++?VY=AiW$a4>JTNANh5!3AG,)4q0V00KE`/+?VY=AN2j_4>JU!0KpUA3AG)V4q0V00OZ\"+?VYA2dnlZ4>JU!1-QgC3AicS4q0V00OZb$+?VYA3&j)24>JU!1d3$E3Arg+4q0V00OZh&+?VYB2Inu\4>JU!2Ei6G3Ard)4q0V00OZn(+?VYB2_dK*4>JU!3''JHI3Ard-4q0V00OZt*+?VYB@V.e54>JU!@6Per3B&j)4q0V00O\ES+?VYD0Jks&4>JU!@m2"t3B1S-4q0V00O\KU+?VYE3B'',24>JU!ANh5!2)%%"4q0V00O\QW+?VM83Aiu04>JU"0KpUA2)%$I4q0V00Ocb#+?VM83FtA`4>JU"1-QgC2)%"!4q0V00Och%+?VM8@5C(V4>JU"1d3$E2)%!G4q0V00Ocn''+?VM83+G,]4>JU"2Ei6G2)%"$4q0V00Oct)+?VM83Fk;_4>JU"3''JHI2)$pJ4q0V00Od%++?VM83Fb5^4>JU"@6Per2)%$G4q0V00OeKT+?VM83&3Z,4>JU"@m2"t2)%!K4q0V00OeQV+?VM92.f#]4>JU"ANh5!2)/Vu4q0V00OeWX+?VM;0etp%4>JU#0KpUA2)?sA4q0V00Olh$+?VM;@5L.W4>JU#1-QgC2)AZ"4q0V00Oln&+?VM=3AE],4>JU#1d3$E2)Sf%4q0V00Olt(+?VM=@5U4X4>JU#2Ei6G2)SfQ4q0V00Om%*+?VM=2`Eo04>JU#3''JHI2)[9K4q0V00Om+,+?VM=@5:"U4>JU#@6Per2)RBM4q0V00OnQU+?VM=3&j)24>JU#@m2"t2)R@*4q0V00OnWW+?VM=@Pp=Y4>JU#ANh5!2)R?J4q0V00On]Y+?VM=@5C(V4>JU$0KpUA2)RBL4q0V00Oun%+?VM=@5L.W4>JU$1-QgC2)R=''4q0V00Out''+?VM=3+G,]4>JU$1d3$E2)Sf#4q0V00P!%)+?VM=2eG5_4>JU$2Ei6G2)RBO4q0V00P!+++?VM=@50qT4>JU$3''JHI2)R@)4q0V00P!1-+?VM?0Om9U4>JU$@6Per2)m?O4q0V00P"WV+?VM@1H.K,4>JU$@m2"t2)m<N4q0V00P"]X+?VM@0kENX4>JU$ANh5!2)m?M4q0V00P"cZ+?VM@1,D*''4>JU%0KpUA2)m?N4q0V00P)t&+?VM?Ai2a]4>JU%1-QgC2)mEP4q0V00P*%(+?VM@1,V6)4>JU%1d3$E2)m=#4q0V00P*+*+?VM@0k*<U4>JU%2Ei6G2)mBJ4q0V00P*1,+?VM@1M/f[4>JU%3''JHI2)mBM4q0V00P*7.+?VM@11`WY4>JU%@6Per2)mBP4q0V00P+]W+?VM@1H7Q-4>JU%@m2"t2)m@%4q0V00P+cY+?VM@11NKW4>JU%ANh5!2)mC$4q0V00P+i[+?VMA2DIB)4>JU&0KpUA2.9p*4q0V00P3%''+?VMi3A`o/4>JU&1-QgC2.8LW4q0V00P3+)+?VMi2dnlZ4>JU&1d3$E2.9oK4q0V00P31++?VMi3FtA`4>JU&2Ei6G2.8F''4q0V00P37-+?VMi@5^:Y4>JU&3''JHI2.8FR4q0V00P3=/+?VMi@5U4X4>JU&@6Per2.9p''4q0V00P4cX+?VMi3Aiu04>JU&@m2"t2.9p)4q0V00P4iZ+?VMi1H.K,ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,*<O4s2sF@5p)-%6QC"AnF4L4>gP,@6P,_1,1I:4s2sF@6$81%6QC#0JPa64>gP,1Hl711,1I<4s2sF@5q^[%6QC#0Jbm84>gPU3Bdm71,1I>4s2sF@5hXZ%6QC#0Ju$:4>gP+A3LGb1,1I@4s2sF@5qa\%6QC#0K20<4>gP-@m1>a1,1IB4s2sF@5qj_%6QC#0KD<>4>gP-1Hl711,1Ik4s2sF@6%j^%6QC#0Od3g4>gSZ@6P,_1,1Im4s2sF@Uiq4%6QC#0P!?i4>gSX@Qk5`1,1Io4s2sF@Uq;Z%6QC#0P3Kk4>gSY0g6%/1,1L;4s2sF@Uih1%6QC#0ekj74>gSXANgPc1,1L=4s2sF@k_CV%6QC#0f)!94>gV)0Koq.1,1L?4s2sFA2?/.%6QC#0f;-;4>gY+1Hl711,1LA4s2sFA2[m\%6QC#0fM9=4>gY+0g6%/1,1LC4s2sFA2IaZ%6QC#0f_E?4>gY*Aj-Yd1,1Ll4s2sFA2?),%6QC#0k*<h4>gY,0g6%/1,1Ln4s2sFA2Ij]%6QC#0k<Hj4>gY,2*MI31,1Lp4s2sFA2?#*%6QC#0kNTl4>gY*@6P,_1,1O<4s2sFA2Q,+%6QC#1,1s84>gY*A3LGb1,1O>4s2sFA2>r(%6QC#1,D*:4>gY,3Bdm71,1O@4s2sFA2H&*%6QC#1,V6<4>gY*3Bdm71,1OB4s2sFA2H;1%6QC#1,hB>4>gY*3''Id61,1OD4s2sFA2@^Z%6QC#1-%N@4>gY*1-Q.01,1Om4s2sFA2?,-%6QC#11EEi4>gY+0Koq.1,1Oo4s2sFA2H/-%6QC#11WQk4>g\,1d2@21,1Oq4s2sFAMc,*%6QC#11i]m4>g_.3''Id61,1R=4s2sFAmmS]%6QC#1GM''94>g_Z2*MI31,1R?4s2sFAmo.4%6QC#1G_3;4>nm''3Bdm71,1RA4s2sG0Od%+%6QC#1Gq?=4>nm''@m1>a1,1RC4s2sG0P*"''%6QC#1H.K?4>nm''ANgPc1,1RE4s2sG0Olq''%6QC#1H@WA4>noK1d2@21,1Rn4s2sG0P3((%6QC#1L`Nj4>noJ@6P,_1,1Rp4s2sG0ekRM%6QC#1LrZl4>noJ2*MI31,1Rr4s2sG0P31+%6QC#1M/fn4>noK1Hl711,1U>4s2sG0P3:.%6QC#1bh0:4>nm*@m1>a1,1U@4s2sG0P4l[%6QC#1c%<<4>nm''0g6%/1,1UB4s2sG0ebCI%6QC#1c7H>4>noK3''Id61,1UD4s2sG0em3&%6QC#1cIT@4>noK0Koq.1,1UF4s2sG0P4o\%6QC#1c[`B4>noJ1d2@21,1Uo4s2sG0ed''#%6QC#1h&Wk4>nrO@6P,_1,1Uq4s2sG1H@9U%6QC#1h8cm4>o!)0g6%/1,1Us4s2sG1L`%%%6QC#1hJoo4>o!*ANgPc1,1X?4s2sG1M&F-%6QC#2).9;4>o!,3''Id61,1XA4s2sG1M(/^%6QC#2)@E=4>o!*1Hl711,1XC4s2sG1c])1%6QC#2)RQ?4>o!-1Hl711,1XE4s2sG1LjiW%6QC#2)d]A4>o!,0Koq.1,1XG4s2sG1M/O/%6QC#2*!iC4>o!+2*MI31,1Xp4s2sG1M/C+%6QC#2.A`l4>o!-2*MI31,1Xr4s2sG1c@''P%6QC#2.Sln4>o!+Aj-Yd1,1Xt4s2sG1LaoZ%6QC#2.f#p4>o!+A3LGb1,1[@4s2sG1LsuZ%6QC#2DIB<4>o!*1d2@[DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d0fCdN+?VP<A2la^4>JWL1HlpD2D\l"4q0V00fCjP+?VP<@kp4W4>JWL2*N-F2D\i%4q0V00fCpR+?VP<@q.\34>JWL2a/?H2D\iP4q0V00fD!T+?VP<@lQX]4>JWL3BeQJ2D\r!4q0V00fEH(+?VP<A2c[]4>JWL@Qkns2D\l(4q0V00fEN*+?VP>1GV-''4>JWLA3M+u2DmBO4q0V00fET,+?VP>2IScY4>JWLAj.>"2DmBL4q0V00fLdM+?VP>2.JfZ4>JWM0g6^B2DmBP4q0V00fLjO+?VP>2DmZ-4>JWM1HlpD2DmI(4q0V00fM!S+?VP>@:_V34>JWM2a/?H2Do#!4q0V00fM''U+?VP>A26=X4>JWM3BeQJ2E!L(4q0V00fNN)+?VP?2Ieo[4>JWM@Qkns2E!L''4q0V00fNT++?VP?3&!N*4>JWMA3M+u2E!KK4q0V00fNZ-+?VP?2`X&24>JWMAj.>"2E!I%4q0V00fUjN+?VP?2_mQ+4>JWN0g6^B2E*<E4q0V00fUpP+?VPB0Om9U4>JWN1HlpD2E55''4q0V00fV!R+?VPB0Jks&4>JWN2*N-F2E55W4q0V00fV''T+?VPB11<?U4>JWN2a/?H2E58X4q0V00fV-V+?VPAARRb34>JWN3BeQJ2E5;''4q0V00fWT*+?VPB0P3KX4>JWN@Qkns2E55*4q0V00fWZ,+?VPAAiDm_4>JWNA3M+u2E58W4q0V00fW`.+?VPAAMcR[4>JWNAj.>"2E5;,4q0V00f^pO+?VPB0f)!&4>JWO0g6^B2E<KG4q0V00f_!Q+?VPAAhuU[4>JWO1HlpD2E58&4q0V00f_''S+?VPB0K20)4>JWO2*N-F2E52V4q0V00f_-U+?VPB0K;6*4>JWO2a/?H2E<]M4q0V00f_3W+?VPA@Pg7X4>JWO3BeQJ2E<KH4q0V00f`Z++?VPAAS++84>JWO@Qkns2E52)4q0V00f``-+?VPB0f2''''4>JWOA3M+u2E5;.4q0V00f`f/+?VPAA2$1V4>JWOAj.>"2E5;Z4q0V00jub"+?VPAAn+"64>JX"0g6^B2E58-4q0V00juh$+?VPB0Od3T4>JX"1HlpD2E<I"4q0V00jun&+?VPB0fM9*4>JX"2*N-F2E52X4q0V00jut(+?VPA@lQX]4>JX"3BeQJ2E58+4q0V00k"KS+?VPAAi)[\4>JX"@Qkns2E55%4q0V00k"QU+?VPB0K)*(4>JX"A3M+u2E55(4q0V00k"WW+?VPAAN;p`4>JX"Aj.>"2E<KL4q0V00k)h#+?VPB1,V6)4>JX#0g6^B2E52*4q0V00k)n%+?VPk1H@W.4>JX#1HlpD2I\IO4q0V00k)t''+?VPk1M/f[4>JX#2*N-F2I\IP4q0V00k*%)+?VPk3A`o/4>JX#2a/?H2I\[*4q0V00k*+++?VPk3B9844>JX#3BeQJ2I\[(4q0V00k+QT+?VPk@UqY34>JX#@Qkns2I^8P4q0V00k+]X+?VPl1GD!%4>JX#Aj.>"2IpE04q0V00k2t&+?VPn0kNTY4>JX$1HlpD2J"^*4q0V00k3%(+?VPn3&j)24>JX$2a/?H2J"^&4q0V00k31,+?VPn2DRH*4>JX$3BeQJ2J"XQ4q0V00k4WU+?VPn1M/f[4>JX$@Qkns2J"^"4q0V00k4]W+?VPn2.Sl[4>JX$A3M+u2J"g''4q0V00k4cY+?VPn0k3BV4>JX$Aj.>"2J"[#4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC#A2$1i4>pb-@Qk5`1,3;o4s2sGAMc))%6QC#A26=k4>pb.0g6%/1,3;q4s2sGAM[dZ%6QC#A2HIm4>pb)1Hl711,3;s4s2sGAMRg\%6QC#A2ZUo4>pb.ANgPc1,3;u4s2sGAMuM3%6QC#A2laq4>pb.@m1>a1,3<"4s2sGAMu8,%6QC#A77YE4>pb,0g6%/1,3<K4s2sGAMQ5/%6QC#A7IeG4>pb/0Koq.1,3<M4s2sGAN)>-%6QC#A7[qI4>pb/@Qk5`1,3<O4s2sGAMZ>1%6QC#AM?:j4>pb+1-Q.01,3>p4s2sGAMZ#(%6QC#AMQFl4>pb.1Hl711,3>r4s2sGAMuD0%6QC#AMcRn4>pb+2a.[51,3>t4s2sGAN)S4%6QC#AMu^p4>pb/1d2@21,3?!4s2sGAN)P3%6QC#AN2jr4>pb.2*MI31,3?#4s2sGAN)V5%6QC#ARRbF4>pb.1-Q.01,3?L4s2sGAMuG1%6QC#AS"%J4>pb.@6P,_1,3?P4s2sH0etFH%6QC#AhZCk4?"uLANgPc1,3Aq4s2sH0f!?)%6QC#AhlOm4?"s+@Qk5`1,3As4s2sH0f!<(%6QC#Ai)[o4?"uN0g6%/1,3Au4s2sH0etOK%6QC#Ai;gq4?"uM2*MI31,3B"4s2sH0etLJ%6QC#AiMss4?"uN1-Q.01,3B$4s2sH0em9(%6QC#AmmkG4?"uM3''Id61,3BM4s2sH0f*6%%6QC#An+"I4?"uL@Qk5`1,3BO4s2sH1,NH(%6QC#An=.K4?##Q@6P,_1,3BQ4s2sH1,q6W%6QC$0JG[54?##T3Bdm71,:O<4s2sH1,q0U%6QC$0JYg74?##T2*MI31,:O>4s2sH1,r`,%6QC$0Jks94?#&N1-Q.01,:O@4s2sH1GE9%%6QC$0K)*;4?#&P0Koq.1,:OB4s2sH1GU^L%6QC$0K;6=4?#&P0g6%/1,:OD4s2sH1G^gN%6QC$0O[-f4?#&O2a.[51,:Om4s2sH1G^dM%6QC$0Om9h4?#&OA3LGb1,:Oo4s2sH1GUjP%6QC$0P*Ej4?#&O1Hl711,:Oq4s2sH1G^mP%6QC$0ebd64?#&M@m1>a1,:R=4s2sH1brW+%6QC$0etp84?#)P@m1>a1,:R?4s2sH1c$gL%6QC$0f2'':4?#)P@Qk5`1,:RA4s2sH1bgmP%6QC$0fD3<4?#)O@6P,_1,:RC4s2sH1bpdL%6QC$0fV?>4?#)PA3LGb1,:RE4s2sH1c$jM%6QC$0k!6g4?#)P1d2@21,:Rn4s2sH1bpjN%6QC$0k3Bi4?#)OA3LGb1,:Rp4s2sH1bq''T%6QC$0kENk4?#)P0Koq.1,:Rr4s2sH1c$mN%6QC$1,(m74?#*/@Qk5`1,:U>4s2sH2)8c-%6QC$1,;$94?#,UAj-Yd1,:U@4s2sH2)\r.%6QC$1,M0;4?#-/2a.[51,:UB4s2sH2.U,Z%6QC$1,_<=4?#-/0g6%/1,:UD4s2sH2.\[0%6QC$1,qH?4?#-.A3LGb1,:UF4s2sH2.U;_%6QC$11<?h4?#-/1d2@21,:Uo4s2sH2.SX0%6QC$11NKj4?#/Y2*MI31,:Uq4s2sH2E<NV%6QC$11`Wl4?#0/@6P,_1,:X?4s2sH2`*?T%6QC$1GV-:4?#2UA3LGb1,:XA4s2sH2`*BU%6QC$1Gh9<4?#2U@6P,_1,:XC4s2sH2`,)0%6QC$1H7Q@4?#30ANgPc1,:XG4s2sH2e?J_%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>JZJ@6Per2`N]L4q0V01,EH)+?VSB2.JfZ4>JZJANh5!2`N^+4q0V01,EN++?VSB2_dK*4>JZK0KpUA2`N^(4q0V01,L^L+?VSB2J#&]4>JZK1-QgC2`N`M4q0V01,LdN+?VSB2E<r14>JZK1d3$E2`N]T4q0V01,LjP+?VSB2.\r\4>JZK2Ei6G2`N]N4q0V01,LpR+?VSC2`*]-4>JZK3''JHI2`WfQ4q0V01,M!T+?VSC2_mQ+4>JZK@6Per2`WfN4q0V01,NH(+?VSk0JYg$4>JZK@m2"t2dnCK4q0V01,NN*+?VSk0Jbm%4>JZKANh5!2dnCM4q0V01,NT,+?VSk0Jks&4>JZL0KpUA2dn^,4q0V01,UdM+?VSkAMu^]4>JZL1-QgC2dp8S4q0V01,UjO+?VSl1grQW4>JZL1d3$E2e"U&4q0V01,UpQ+?VSl1c.B*4>JZL2Ei6G2e"U''4q0V01,V!S+?VSl1h/]Y4>JZL3''JHI2e"UT4q0V01,V''U+?VSl1b_*&4>JZL@6Per2e"X(4q0V01,WN)+?VSl1c7H+4>JZL@m2"t2e-8O4q0V01,WT++?VSm3FtA`4>JZLANh5!2e-8U4q0V01,WZ-+?VSm@50qT4>JZM0KpUA2e4d*4q0V01,^jN+?VSn2J,,^4>JZM1-QgC2e4g&4q0V01,^pP+?VSn2)@E*4>JZM1d3$E2e4d(4q0V01,_!R+?VSn2E*f/4>JZM2Ei6G2e4gT4q0V01,_''T+?VSn1hJo\4>JZM3''JHI2e4gW4q0V01,_-V+?VSn2.JfZ4>JZM@6Per2e4gU4q0V01,`T*+?VSn2)7?)4>JZM@m2"t2e4d&4q0V01,`Z,+?VSn2E<r14>JZMANh5!2e4d#4q0V01,``.+?VSn2.f#]4>JZN0KpUA2e4aV4q0V01,h''S+?VSp@5:"U4>JZN3''JHI2eHSZ4q0V01,h3W+?VV;2).9(4>JZN@m2"t3&"rU4q0V01,i`-+?VV;A2HIZ4>JZNANh5!3&*6G4q0V01,if/+?VV<1grQW4>JZO0KpUA3&*9G4q0V01,q!P+?VV<1hJo\4>JZO1-QgC3&*6K4q0V01,q''R+?VV<1LrZY4>JZO1d3$E3&*7#4q0V01,q-T+?VV<1LWHV4>JZO2Ei6G3&+u&4q0V01,q3V+?VV<AS"%74>JZO@Qkns3&30E4q0V01,ri/+?VV=1M/f[4>JZOAj.>"3&3EM4q0V01-%$P+?VV>1L`NW4>JZP0g6^B3&>&V4q0V01-%*R+?VV>AiW$a4>JZP1HlpD3&EBH4q0V01-%0T+?VV>@k^(U4>JZP2*N-F3&>,*4q0V01-%6V+?VV?0etp%4>JZP2a/?H3&>,)4q0V01-%<X+?VV>AMcR[4>JZP3BeQJ3&>/V4q0V01-&c,+?VV>Ai;g^4>JZP@Qkns3&E?D4q0V01-&i.+?VV>@l?L[4>JZPA3M+u3&>&(4q0V01-&o0+?VV>AR[h44>JZPAj.>"3&>,%4q0V011;k#+?VV>@V.e54>J[#0g6^B3&E<D4q0V011;q%+?VV>A7Rk54>J[#1HlpD3&>,''4q0V011<"''+?VV>A2la^4>J[#2*N-F3&>/Y4q0V011<()+?VV>AMH@X4>J[#2a/?H3&>&R4q0V011<.++?VV>@q@h54>J[#3BeQJ3&>)''4q0V011=TT+?VV>Ai2a]4>J[#@Qkns3&>&)4q0V011=ZV+?VV?0KD<+ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,<9K4s2sI1b`N*%6QC$@:_VF4?,--ANgPc1,<9M4s2sI1bg^K%6QC$@PBtg4?,/O2EhR41,<;n4s2sI1Li1(%6QC$@PU+i4?,-/1Hl711,<;p4s2sI1Lr@,%6QC$@Pg7k4?,-/@6P,_1,<;r4s2sI1Li@-%6QC$@Q$Cm4?,--0g6%/1,<;t4s2sI1M''uY%6QC$@Q6Oo4?,/P1Hl711,<<!4s2sI1HAl-%6QC$@UVGC4?,-,1Hl711,<<J4s2sI1M(&[%6QC$@UhSE4?,-.ANgPc1,<<L4s2sI1Li7*%6QC$@V%_G4?,-/@Qk5`1,<<N4s2sI1LrF.%6QC$@k^(h4?,-.1-Q.01,<>o4s2sI1biH''%6QC$@kp4j4?,--@Qk5`1,<>q4s2sI1M12^%6QC$@l-@l4?,603''Id61,<>s4s2sI2J"X-%6QC$@l?Ln4?,612EhR41,<>u4s2sI2InU-%6QC$@lQXp4?,611Hl711,<?"4s2sI2Ip5[%6QC$@pqPD4?,61@6P,_1,<?K4s2sI2Ip>^%6QC$@q.\F4?,61@Qk5`1,<?M4s2sI2Ip;]%6QC$@q@hH4?,61@m1>a1,<?O4s2sI2J"m4%6QC$A2$1i4?,602a.[51,<Ap4s2sI2J"j3%6QC$A26=k4?,600g6%/1,<Ar4s2sI3&ETY%6QC$A2HIm4?,;X2EhR41,<At4s2sI3&NQW%6QC$A2ZUo4?,<0@6P,_1,<B!4s2sI3+Os3%6QC$A2laq4?,<03Bdm71,<B#4s2sI3+=j2%6QC$A77YE4?,<10Koq.1,<BL4s2sI3+?G_%6QC$A7IeG4?,<02EhR41,<BN4s2sI3+?A]%6QC$A7[qI4?,<02a.[51,<BP4s2sI3+?D^%6QC$AM?:j4?,<01-Q.01,<Dq4s2sI3A<0O%6QC$AMQFl4?,<13Bdm71,<Ds4s2sI3B8r\%6QC$AMcRn4?,>]3''Id61,<Du4s2sI3B9#^%6QC$AMu^p4?,?3A3LGb1,<E$4s2sI@5MOZ%6QC$ARRbF4?-b+A3LGb1,<EM4s2sI@5Bo-%6QC$ARdnH4?-b,3Bdm71,<EO4s2sI@5KZ%%6QC$AhlOm4?-b,1-Q.01,<Gt4s2sI@5Kr-%6QC$Ai)[o4?-b,0g6%/1,<H!4s2sI@5MCV%6QC$Ai;gq4?-b+@m1>a1,<H#4s2sI@5MR[%6QC$AiMss4?-h.Aj-Yd1,<H%4s2sI@lQ2,%6QC$AmmkG4?-h10Koq.1,<HN4s2sI@q&k1%6QC$An+"I4?-h[ANgPc1,<HP4s2sI@q%,U%6QC$An=.K4?-h[3Bdm71,<HR4s2sI@q%;Z%6QC%0JG[54?-k21d2@21,CU=4s2sIA2l8,%6QC%0JYg74?-k23Bdm71,CU?4s2sIA7RY`%6QC%0Jks94?-k^1Hl711,CUA4s2sIA7K.6%6QC%0K)*;4?-k]2a.[51,CUC4s2sIA7RS^%6QC%0K;6=4?-k^@m1>a1,CUE4s2sIA7K48%6QC%0O[-f4?-k^2*MI31,CUn4s2sIA7R\a%6QC%0Om9h4?-k]3''Id61,CUp4s2sIA7RV_%6QC%0P*Ej4?-k]2*MI31,CUr4s2sIAS#I;%6QC%0ebd64?-na2a.[51,CX>4s2sIAS,@7%6QC%0etp84?-na3Bdm71,CX@4s2sIAS!b`%6QC%0f2'':4?-n`ANgPc1,CXB4s2sIAS!__%6QC%0fD3<4?-na2*MI\DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d1GLmR+?VVpAi;g^4>J]I@6Per3+ZZ14q0V01GN?&+?VVpAhcIY4>J]I@m2"t3+ZZ24q0V01GNE(+?VVpAi)[\4>J]IANh5!3+ZY]4q0V01GNK*+?VY<11WQX4>J]J0KpUA3A<6G4q0V01GU[K+?VY<11i]Z4>J]J1-QgC3AE3G4q0V01GUaM+?VY=11NKW4>J]J1d3$E3AE3E4q0V01GUgO+?VY<AnF494>J]J2Ei6G3A>&T4q0V01GUmQ+?VY=0K;6*4>J]J3''JHI3A>&*4q0V01GUsS+?VY<An!q54>J]J@6Per3AE3B4q0V01GWE''+?VY=0JG["4>J]J@m2"t3AE3H4q0V01GWK)+?VY=0Ju$''4>J]JANh5!3AE3D4q0V01GWQ++?VY=2DIB)4>J]K0KpUA3AEEK4q0V01G^aL+?VY=2.f#]4>J]K1-QgC3AEEI4q0V01G^gN+?VY=2D@<(4>J]K1d3$E3AN9C4q0V01G^mP+?VY>0O[-S4>J]K2Ei6G3AN?I4q0V01G^sR+?VY>0Jbm%4>J]K3''JHI3AN<t4q0V01G_$T+?VY>1,_<*4>J]K@6Per3AN:#4q0V01G`K(+?VY>0Om9U4>J]K@m2"t3AN9B4q0V01G`Q*+?VY>0etp%4>J]KANh5!3AG,X4q0V01G`W,+?VY=An4(74>J]L0KpUA3AN9H4q0V01GggM+?VY>0Jks&4>J]L1-QgC3AN?K4q0V01GgmO+?VY>0JYg$4>J]L1d3$E3AN=!4q0V01GgsQ+?VY>1,M0(4>J]L2Ei6G3AN<L4q0V01Gh$S+?VY>0fM9*4>J]L3''JHI3AN9G4q0V01Gh*U+?VY>0fD3)4>J]L@6Per3Aia)4q0V01GiQ)+?VYA3+P2^4>J]L@m2"t3Aid+4q0V01GiW++?VYA3A<W+4>J]LANh5!3AriU4q0V01Gi]-+?VYB2e>/^4>J]M1-QgC3AriQ4q0V01GpsP+?VYB3&!N*4>J]M1d3$E3AtA&4q0V01Gq$R+?VYB@lQX]4>J]M2Ei6G3AtA''4q0V01Gq*T+?VYBAhcIY4>J]M3''JHI3AtJ''4q0V01Gq0V+?VYC2Ieo[4>J]M@6Per3B&lN4q0V01GrW*+?VYC2J#&]4>J]M@m2"t3B/]O4q0V01Gr],+?VYD@6$L\4>J]MANh5!3B1SZ4q0V01Grc.+?VYoAMu^]4>J]N0KpUA3Fue_4q0V01H%$Q+?VJl@Q$CZ4>J]N1d3$E2)&KM4q0V01H%*S+?VM8@V.e54>J]N2Ei6G2)&Mu4q0V01H%0U+?VM8@:_V34>J]N3''JHI2)&Ms4q0V01H%6W+?VM8@pqP14>J]N@6Per2)&Jr4q0V01H&]++?VM8@lQX]4>J]N@m2"t2)&Mq4q0V01H&c-+?VM8@PBtT4>J]NANh5!2)&Mp4q0V01H&i/+?VM8@UVG04>J]O0KpUA2)&Jo4q0V01H.$P+?VM8@q%V24>J]O1-QgC2)&N#4q0V01H.*R+?VM8@Q$CZ4>J]O1d3$E2)&K!4q0V01H.0T+?VM9A2c[]4>J]O2Ei6G2)7+!4q0V01H.6V+?VM:2`Nu14>J]O@6Per2)Sl"4q0V01H/c,+?VM=A7@_34>J]O@m2"t2)SlR4q0V01H/i.+?VM=A2$1V4>J]OANh5!2)SlQ4q0V01H/o0+?VM=@pqP14>J]P0KpUA2)SoT4q0V01H7*Q+?VM=@k^(U4>J]P1-QgC2)So$4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC%3&<`@4>f!+1d2@21,CmH4s2sF2.\d3%6QC%3&NlB4>f!*Aj-Yd1,CmJ4s2sF2.SI+%6QC%3&a#D4>euUA3LGb1,CmL4s2sF2.L5^%6QC%3&s/F4>f!,2*MI31,Cmu4s2sF2.\O,%6QC%3+>&o4>f!,2EhR41,Cn"4s2sF2.JU0%6QC%3+P2q4>f!.1-Q.01,Cn$4s2sF2.L/\%6QC%3+b>s4>f!,3Bdm71,CpE4s2sF2.JC*%6QC%3AE]?4>f&P1d2@21,CpG4s2sF3&NKU%6QC%3AWiA4>f)V3''Id61,CpI4s2sF3&WTW%6QC%3AiuC4>f)TAj-Yd1,CpK4s2sF3&G/0%6QC%3B'',E4>f)T3Bdm71,CpM4s2sF3&YA4%6QC%3B98G4>f)U2*MI31,Cq!4s2sF3&G21%6QC%3FY/p4>f)UA3LGb1,Cq#4s2sF3&N][%6QC%3Fk;r4>f)V2*MI31,Cq%4s2sF3&P//%6QC%3G(Gt4>f)SA3LGb1,E>m4s2sF3&WQV%6QC%@50qg4>f)W0g6%/1,E>o4s2sF3+cYa%6QC%@5C(i4>gPW2a.[51,E>q4s2sF@:M,X%6QC%@5U4k4>gPW@Qk5`1,E>s4s2sF@:EY/%6QC%@5g@m4>gPV3''Id61,E>u4s2sF@:CrT%6QC%@6$Lo4>gPV2*MI31,E?I4s2sF@:CoS%6QC%@:DDC4>gPVAj-Yd1,E?K4s2sF@:M8\%6QC%@:VPE4>gPV@Qk5`1,E?M4s2sF@:M2Z%6QC%@:h\G4>gPV2a.[51,EAn4s2sF@:LuT%6QC%@PL%h4>gPW@6P,_1,EAp4s2sF@:D&W%6QC%@P^1j4>gPV2EhR41,EAr4s2sF@:Nh3%6QC%@Pp=l4>gPV3Bdm71,EAt4s2sF@6$#*%6QC%@Q-In4>gSY2EhR41,EBJ4s2sF@khRZ%6QC%@U_MD4>gV)1Hl711,EBL4s2sFA2c5,%6QC%@UqYF4>gY-1Hl711,EBN4s2sFA2I^Y%6QC%@V.eH4>gY-2*MI31,EDo4s2sFA2c8-%6QC%@kg.i4>gY-@m1>a1,EDq4s2sFA2Rp^%6QC%@l$:k4>gY-3''Id61,EDs4s2sFA2ZA1%6QC%@l6Fm4>gY-1-Q.01,EDu4s2sFA7dMZ%6QC%@lHRo4>g\,Aj-Yd1,EE"4s2sFAMds^%6QC%@lZ^q4>g\,@6P,_1,EEK4s2sFAMdp]%6QC%@q%VE4>g\,@Qk5`1,EEM4s2sFARdS]%6QC%@q7bG4>g\[@m1>a1,EEO4s2sFARdV^%6QC%@qInI4>g\[@Qk5`1,EGp4s2sFARdY_%6QC%A2-7j4>g_-0Koq.1,EGr4s2sFAmo:8%6QC%A2?Cl4>g_ZA3LGb1,EGt4s2sG0P37-%6QC%A2c[p4>noL@Qk5`1,EH#4s2sG0f1aO%6QC%A2ugr4>noM2EhR41,EHL4s2sG0f(RK%6QC%A7@_F4>noLANgPc1,EHN4s2sG0f1dP%6QC%A7RkH4>noLAj-Yd1,EHP4s2sG0f3K+%6QC%A7e"J4>noL3Bdm71,EJq4s2sG0f1RJ%6QC%AMH@k4>nrM0Koq.1,EJs4s2sJ0fD!T%6QC%AMZLm4>nrM1Hl711,EJu4s2sG1,:^N%6QC%AMlXo4>nrM1d2@21,EK"4s2sG1Li:+%6QC%AN)dq4>o!-0g6%/1,EK$4s2sG1M(#Z%6QC%AN;ps4>o#N0Koq.1,EKM4s2sG1bgaL%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>J^(@Qkns2Dd*J4q0V01M(&[+?VP=1,(m$4>J^(A3M+u2Dd0G4q0V01M(,]+?VP=1G_3(4>J^(Aj.>"2Dd6H4q0V01M/=)+?VP=0kNTY4>J^)0g6^B2Dd-G4q0V01M/C++?VP=0fV?+4>J^)1HlpD2Dd3M4q0V01M/I-+?VP=1H.K,4>J^)2a/?H2Dd*t4q0V01M/U1+?VP=1,_<*4>J^)3BeQJ2Dd3D4q0V01M1&Z+?VP=1,qH,4>J^)@Qkns2Dd6F4q0V01M1,\+?VP=1Gq?*4>J^)A3M+u2Dd1$4q0V01M12^+?VP=0O[-S4>J^)Aj.>"2Dd-s4q0V01b^UI+?VP=1b_*&4>J`I0g6^B2Dd0H4q0V01b^[K+?VP=1,hB+4>J`I1HlpD2Dd*s4q0V01b^aM+?VP<AN)d^4>J`I2*N-F2Dd-t4q0V01b^gO+?VP=11`WY4>J`I2a/?H2Dd0D4q0V01b^mQ+?VP=0P*EW4>J`I3BeQJ2DmC)4q0V01b`?%+?VP>3ANc-4>J`I@Qkns2Do#$4q0V01b`E''+?VP?3&Wr04>J`IA3M+u2E!O)4q0V01b`K)+?VP?3Aiu04>J`IAj.>"2E!QL4q0V01bg[J+?VP?3+>&\4>J`J0g6^B2E!O''4q0V01bgaL+?VP?3B9844>J`J1HlpD2E!QP4q0V01bggN+?VP?2`Nu14>J`J2*N-F2E*BF4q0V01bgmP+?VPB2E!`.4>J`J2a/?H2E<X,4q0V01bgsR+?VPB1H7Q-4>J`J3BeQJ2E<U*4q0V01biE&+?VPB2DRH*4>J`J@Qkns2E<]N4q0V01biK(+?VPB1M/f[4>J`JA3M+u2E<TO4q0V01biQ*+?VPB2IScY4>J`JAj.>"2E<QR4q0V01bpaK+?VPB1bq6(4>J`K0g6^B2E<WR4q0V01bpgM+?VPB2*!i04>J`K1HlpD2E<^)4q0V01bpsQ+?VPB1Gq?*4>J`K2a/?H2E<[*4q0V01bq$S+?VPB1G_3(4>J`K3BeQJ2E<R(4q0V01brK''+?VPB2DmZ-4>J`K@Qkns2E5;&4q0V01brQ)+?VPB2`Nu14>J`KA3M+u2E<QM4q0V01brW++?VPB2E<r14>J`KAj.>"2E<TJ4q0V01c$gL+?VPB2J,,^4>J`L0g6^B2E<TN4q0V01c$mN+?VPB2`<i/4>J`L1HlpD2E<WS4q0V01c$sP+?VPB1bh0''4>J`L2*N-F2E<]Q4q0V01c%$R+?VPB1h/]Y4>J`L2a/?H2E<R&4q0V01c%*T+?VPB1h&WX4>J`L3BeQJ2E<QP4q0V01c&Q(+?VPB2.JfZ4>J`L@Qkns2E<U+4q0V01c&W*+?VPB2).9(4>J`LA3M+u2E<QK4q0V01c&],+?VPB2)7?)4>J`LAj.>"2E<O)4q0V01c-mM+?VPB2e"r[4>J`M0g6^B2E<R''4q0V01c-sO+?VPk1c@N,4>J`M1HlpD2I\L#4q0V01c.$Q+?VPk1c%<)4>J`M2*N-F2I\Ku4q0V01c.*S+?VPk1cRZ.4>J`M2a/?H2I\Kt4q0V01c.0U+?VPk3FY/]4>J`M@Qkns2I^8Y4q0V01c/c-+?VPn3FY/]4>J`MAj.>"2J$DW4q0V01c6sN+?VPn@lQX]4>J`N0g6^B2J"j[4q0V01c7$P+?VPn@k^(U4>J`N1HlpD2J"m\4q0V01c70T+?VPn@5''kS4>J`N2a/?H2J$>P4q0V01c76V+?VPn@Q?U]ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,LjK4s2sGARdV^%6QC&2.8Zk4>pb]1-Q.01,Ljt4s2sGAR]16%6QC&2.Jfm4>pb\0g6%/1,Lk!4s2sGAN=<c%6QC&2.\ro4>pb\3Bdm71,Lk#4s2sGAR[S^%6QC&2D@<;4>pb[0Koq.1,LmD4s2sGARf77%6QC&2DRH=4>pbZ2EhR41,LmF4s2sGARf=9%6QC&2DdT?4>pb[1-Q.01,LmH4s2sGAR]47%6QC&2E!`A4>pb\1Hl711,LmJ4s2sGARo:7%6QC&2E3lC4>pb]3''Id61,LmL4s2sGAN;b7%6QC&2IScl4>pb21-Q.01,Lmu4s2sGAN46b%6QC&2Ieon4>pb1A3LGb1,Ln"4s2sGARRDZ%6QC&2J#&p4>pbZ0g6%/1,Ln$4s2sGAR]78%6QC&2_[E<4>pb[1Hl711,LpE4s2sGARmJY%6QC&2_mQ>4>pb\@6P,_1,LpG4s2sGAN;\5%6QC&2`*]@4>pbZANgPc1,LpI4s2sGARRAY%6QC&2`<iB4?"uO2a.[51,LpK4s2sH0f:dO%6QC&2`NuD4?"uP1-Q.01,LpM4s2sH0fCgO%6QC&2dnlm4?"uQ0Koq.1,Lq!4s2sH0f1UK%6QC&2e,#o4?"uPA3LGb1,Lq#4s2sH0fCdN%6QC&2e>/q4?"uR1-Q.01,Lq%4s2sH0fM''U%6QC&3&!N=4?"uQ@6P,_1,LsF4s2sH0fCaM%6QC&3&3Z?4?"uO1-Q.01,LsH4s2sH0f:pS%6QC&3&EfA4?"uO1Hl711,LsJ4s2sH0f3?''%6QC&3&WrC4?"uR0Koq.1,LsL4s2sH0f<Q,%6QC&3&j)E4?"uP0Koq.1,LsN4s2sH0f:aN%6QC&3+4un4?"uO1d2@21,Lt"4s2sH0f3E)%6QC&3+G,p4?"uP@6P,_1,Lt$4s2sH1,NT,%6QC&3+Y8r4?##TA3LGb1,Lt&4s2sH1,rc-%6QC&3A<W>4?##U0g6%/1,M!G4s2sH1-%$P%6QC&3ANc@4?##TANgPc1,M!I4s2sH1G`N)%6QC&3A`oB4?#&Q1-Q.01,M!K4s2sH1G`K(%6QC&3As&D4?#&P@6P,_1,M!M4s2sH1GgdL%6QC&3B02F4?#&Q@6P,_1,M!O4s2sH1Gh*U%6QC&3FP)o4?#)R1d2@21,M"%4s2sH1c7$P%6QC&3FtAs4?#)S0g6%/1,M"''4s2sH1c73U%6QC&@5''kf4?#)R0Koq.1,NDq4s2sH1c/c-%6QC&@5L.j4?#)R1-Q.01,NDs4s2sH1c.*S%6QC&@5^:l4?#)RA3LGb1,NDu4s2sH1c7*R%6QC&@5pFn4?#*.0g6%/1,NE"4s2sH1hL>`%6QC&@:;>B4?#*/ANgPc1,NEK4s2sH1hL8^%6QC&@:MJD4?#,PA3LGb1,NEM4s2sH2)dNZ%6QC&@:_VF4?#,V2a.[51,NEO4s2sG3B/fY%6QC&@PBtg4?#-/Aj-Yd1,NGp4s2sH2DA`,%6QC&@PU+i4?#/P1Hl711,NGr4s2sH2.ed2%6QC&@Pg7k4?#-0ANgPc1,NGt4s2sH2.g>^%6QC&@Q$Cm4?#-03Bdm71,NH!4s2sH2.eg3%6QC&@Q6Oo4?#/Q0Koq.1,NH#4s2sH2.g;]%6QC&@UVGC4?#-02EhR41,NHL4s2sH2.^;^%6QC&@UhSE4?#-02*MI31,NHN4s2sH2.gA_%6QC&@V%_G4?#/Y3Bdm71,NHP4s2sH2I\O-%6QC&@k^(h4?#0/A3LH6DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d1h/7(+?VSA2)RQ,4>Ja''1d3$E2`ETL4q0V01h/C,+?VSA2)[W-4>Ja''2Ei6G2`EU&4q0V01h/I.+?VSA2E<r14>Ja''3''JHI2`EWR4q0V01h/O0+?VSA2)IK+4>Ja''@6Per2`ETS4q0V01h0uY+?VSA2Inu\4>Ja''@m2"t2`G;%4q0V01h1&[+?VSB3&a#14>Ja''ANh5!2`Ng+4q0V01h1,]+?VSB3A`o/4>Ja(0KpUA2`Nd/4q0V01h8=)+?VSB3&Ef.4>Ja(1-QgC2`NfT4q0V01h8I-+?VSB@50qT4>Ja(2Ei6G2`NcQ4q0V01h8O/+?VSB2`X&24>Ja(3''JHI2`NfX4q0V01h8U1+?VSB3&!N*4>Ja(@6Per2`NfU4q0V01h:&Z+?VSB2e"r[4>Ja(@m2"t2`Wg,4q0V01h:,\+?VSC3&3Z,4>Ja(ANh5!2`Wg-4q0V01h:2^+?VSC2`X&24>Ja)0KpUA2dnEq4q0V01hAI,+?VSk0etp%4>Ja)1d3$E2dnF"4q0V01hAO.+?VSk0f;-(4>Ja)2Ei6G2dnHs4q0V01hAU0+?VSk0f)!&4>Ja)3''JHI2dnFM4q0V01hA[2+?VSk0ebd#4>Ja)@6Per2dp,N4q0V01hC,[+?VSk@5:"U4>Ja)@m2"t2dn^X4q0V01hC2]+?VSkAR[h44>Ja)ANh5!2e"[''4q0V01hC8_+?VSl2DdT,4>Ja*0KpUA2e"[U4q0V01hJI++?VSl2`*]-4>Ja*1-QgC2e"[*4q0V01hJO-+?VSl2_mQ+4>Ja*1d3$E2e"[&4q0V01hJU/+?VSl2`!W,4>Ja*2Ei6G2e"^#4q0V01hJ[1+?VSl2_[E)4>Ja*3''JHI2e"["4q0V01hJa3+?VSl2`Nu14>Ja*@6Per2e"^(4q0V01hL2\+?VSl2D[N+4>Ja*@m2"t2e-;P4q0V01hL8^+?VSm@Pg7X4>Ja*ANh5!2e-9.4q0V01hL>`+?VSn3&j)24>JcJ0KpUA2e4m+4q0V02)$aK+?VSn3&!N*4>JcJ1-QgC2e4mY4q0V02)$gM+?VSn2eG5_4>JcJ1d3$E2e4m*4q0V02)$mO+?VSn2dnlZ4>JcJ2Ei6G2e4mZ4q0V02)$sQ+?VSn2e"r[4>JcJ3''JHI2e4m(4q0V02)%$S+?VSn2e,#\4>JcJ@6Per2e4mX4q0V02)&K''+?VSn3A`o/4>JcJ@m2"t2e4m)4q0V02)&Q)+?VSn2e5)]4>JcJANh5!2e4p(4q0V02)&W++?VSp2Inu\4>JcK0KpUA2eFsW4q0V02)-mN+?VSp2Ieo[4>JcK1d3$E2eHJV4q0V02)-sP+?VSp@5U4X4>JcK2Ei6G2eHJW4q0V02).*T+?VV;1,1s%4>JcK@6Per3&*<J4q0V02)/Q(+?VV<2D@<(4>JcK@m2"t3&*?N4q0V02)/W*+?VV<2.JfZ4>JcKANh5!3&*<O4q0V02)/],+?VV<2.A`Y4>JcL0KpUA3&*<H4q0V02)6mM+?VV<2_mQ+4>JcL1-QgC2E*BG4q0V02)6sO+?VV<2.\r\4>JcL1d3$E3&*?M4q0V02)7$Q+?VV<2E*f/4>JcL2Ei6G3&*=''4q0V02)7*S+?VV<1c.B*4>JcL3''JHI3&*<G4q0V02)70U+?VV=0k<HW4>JcL@6Per3&3<N4q0V02)8W)+?VV=1c.B*4>JcL@m2"t3&3<E4q0V02)8]++?VV=1bq6(4>JcLANh5!3&3<J4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC''11i]m4?,000g6%/1,UjA4s2sI1c&`-%6QC''1GM''94?,/T2EhR41,UjC4s2sI1cI<V%6QC''1G_3;4?,/V3Bdm71,UjE4s2sI1cT)2%6QC''1Gq?=4?,/WA3LGb1,UjG4s2sI1c@3T%6QC''1H.K?4?,/T0g6%/1,UjI4s2sI1c-mM%6QC''1H@WA4?,/W2EhR41,Ujr4s2sI1c@9V%6QC''1L`Nj4?,/R0Koq.1,Ujt4s2sI1c/`,%6QC''1LrZl4?,/VA3LGb1,Uk!4s2sI1c8]*%6QC''1M/fn4?,/T3Bdm71,UmB4s2sI1cI6T%6QC''1bh0:4?,/V1Hl711,UmD4s2sI1c8f-%6QC''1c%<<4?,2P2a.[51,UmF4s2sI1c8i.%6QC''1c7H>4?,/R2a.[51,UmH4s2sI1c&Q(%6QC''1cIT@4?,/R1d2@21,UmJ4s2sI1cJi,%6QC''1c[`B4?,/S1Hl711,Ums4s2sI1cIBX%6QC''1h&Wk4?,/R1-Q.01,Umu4s2sI1c.''R%6QC''1h8cm4?,/Q3Bdm71,Un"4s2sI1LrL0%6QC''1hJoo4?,/S@Qk5`1,UpC4s2sI1brZ,%6QC''2).9;4?,/S1-Q.01,UpE4s2sI1brT*%6QC''2)@E=4?,/TAj-Yd1,UpG4s2sI1cI*P%6QC''2)RQ?4?,/R3Bdm71,UpI4s2sI1c/c-%6QC''2)d]A4?,/S@m1>a1,UpK4s2sI1c7$P%6QC''2*!iC4?,/UAj-Yd1,Upt4s2sI1h/C,%6QC''2.A`l4?,/WANgPc1,Uq!4s2sI1c&T)%6QC''2.Sln4?,/S2a.[51,Uq#4s2sI1c%$R%6QC''2.f#p4?,/R1Hl711,UsD4s2sI1c@<W%6QC''2DIB<4?,/VANgPc1,UsF4s2sI1c.$Q%6QC''2D[N>4?,/Q@Qk5`1,UsH4s2sI1c@$O%6QC''2DmZ@4?,/T1d2@21,UsJ4s2sI1cAo/%6QC''2E*fB4?,/T0Koq.1,UsL4s2sI2_\])%6QC''2E<rD4?,8R1d2@21,Usu4s2sI2J+m3%6QC''2I\im4?,8R@m1>a1,Ut"4s2sI2J-A]%6QC''2Inuo4?,602EhR41,Ut$4s2sI2J+g1%6QC''2J,,q4?,8VA3LGb1,V!E4s2sI2J+p4%6QC''2_dK=4?,8RANgPc1,V!G4s2sI2_[6U%6QC''2`!W?4?,8R0g6%/1,V!I4s2sI2J+j2%6QC''2`3cA4?,8RA3LGb1,V!K4s2sI2_[*Q%6QC''2`EoC4?,<22EhR41,V!M4s2sI3+HD]%6QC''2e"rn4?,<2ANgPc1,V"#4s2sI3+QJ^%6QC''2e5)p4?,<2@6P,_1,V"%4s2sI3+HG^%6QC''2eG5r4?,<20Koq.1,V$F4s2sI3B/l[%6QC''3&*T>4?,>]@Qk5`1,V$H4s2sI3Fl_c%6QC''3&<`@4?,?42*MI31,V$J4s2sI3Ft$2%6QC''3&NlB4?,?40g6%/1,V$L4s2sI3Fsm.%6QC''3&a#D4?,?41-Q.01,V$N4s2sI3FlV`%6QC''3&s/F4?,?42EhR41,V%"4s2sI@5g).%6QC''3+>&o4?-b/2EhR41,V%$4s2sI@5hd^%6QC''3+P2q4?-b-0g6%/1,V%&4s2sI@5DLZ%6QC''3+b>s4?-b.2a.[51,V''G4s2sI@5p#+%6QC''3AE]?4?-b/1d2@21,V''I4s2sI@5g&-%6QC''3AWiA4?-b/1Hl711,V''K4s2sI@5ou*%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>JcS2*N-F3+4a&4q0V02*!QY+?VVl2dnlZ4>JcS2a/?H3+FaS4q0V02*!W[+?VVn1h&WX4>JcS3BeQJ3+FdR4q0V02*#)/+?VVn2DmZ-4>JcS@Qkns3+Fj''4q0V02*#/1+?VVn2E!`.4>JcSA3M+u3+Fp+4q0V02.81&+?VVn@q.\34>Jd&1HlpD3+P$(4q0V02.8=*+?VVo3+G,]4>Jd&2a/?H3+P!Z4q0V02.9oW+?VVo3A<W+4>Jd&@Qkns3+P$)4q0V02.9uY+?VVoAhZCX4>Jd&A3M+u3+QSS4q0V02.:&[+?VVoARdn54>Jd&Aj.>"3+QVU4q0V02.A7''+?VVoAS"%74>Jd''0g6^B3+QPR4q0V02.A=)+?VVoAN;p`4>Jd''1HlpD3+QSV4q0V02.AC++?VVoAMQFY4>Jd''2*N-F3+QSZ4q0V02.AI-+?VVoAhlOZ4>Jd''2a/?H3+QT04q0V02.AO/+?VVoAi)[\4>Jd''3BeQJ3+aj&4q0V02.BuX+?VVpAnF494>Jd''@Qkns3+aj!4q0V02.C&Z+?VVq0JG["4>Jd''A3M+u3+aj%4q0V02.J=(+?VVq0JYg$4>Jd(0g6^B3+ajR4q0V02.JC*+?VY<2)7?)4>Jd(1HlpD3A<7$4q0V02.JI,+?VY<1c.B*4>Jd(2*N-F3A<9M4q0V02.JO.+?VY<1LrZY4>Jd(2a/?H3AE6B4q0V02.JU0+?VY=0P!?V4>Jd(3BeQJ3AE4"4q0V02.L&Y+?VY=0ekj$4>Jd(@Qkns3AE6H4q0V02.L,[+?VY=0f2''''4>Jd(A3M+u3AE3s4q0V02.L2]+?VY=0P*EW4>Jd)0g6^B3ANEN4q0V02.SI++?VY>2)7?)4>Jd)1HlpD3ANBE4q0V02.SO-+?VY>1LWHV4>Jd)2*N-F3ANKN4q0V02.SU/+?VY>1G_3(4>Jd)2a/?H3ANKM4q0V02.S[1+?VY>2.\r\4>Jd)3BeQJ3ANQM4q0V02.U,Z+?VY>11`WY4>Jd)@Qkns3ANF"4q0V02.U2\+?VY>1c@N,4>Jd)A3M+u3ANL''4q0V02.U8^+?VY>2Ieo[4>Jd)Aj.>"3ANF''4q0V02.\I*+?VY>2D@<(4>Jd*0g6^B3ANKO4q0V02.\O,+?VY>2J,,^4>Jd*1HlpD3ANBK4q0V02.\U.+?VY>2DIB)4>Jd*2*N-F3ANNI4q0V02.\[0+?VY>1GM''&4>Jd*2a/?H3ANHK4q0V02.\a2+?VY>2D[N+4>Jd*3BeQJ3ANHG4q0V02.^2[+?VY>2_mQ+4>Jd*@Qkns3ANF&4q0V02.^8]+?VY>2)@E*4>Jd*A3M+u3ANF$4q0V02.^>_+?VY>2)[W-4>Jd*Aj.>"3ANBG4q0V02.eO++?VYA3G(Ga4>Jd+0g6^B3Aig,4q0V02.eU-+?VYA3FtA`4>Jd+1HlpD3Aig+4q0V02.ea1+?VYB3AE],4>Jd+2a/?H3ArlV4q0V02.eg3+?VYB@q@h54>Jd+3BeQJ3AtJX4q0V02.g8\+?VYBAn4(74>Jd+@Qkns3AtJ/4q0V02.g>^+?VYBAi2a]4>Jd+A3M+u3B&lQ4q0V02D?gK+?VYC2_mQ+4>JfK0g6^B3B/^)4q0V02D?sO+?VYD@:MJ14>JfK2*N-F3B1V/4q0V02D@$Q+?VYDAiW$a4>JfK2a/?H3B:M[4q0V02D@*S+?VYE@PU+V4>JfK3BeQJ3B:P&4q0V02DAQ''+?VYE@Pp=YASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,^gq4s2sJ@:<\1%6QC(0Om9h4?6hY@Qk5`1,^gs4s2sJ@PqUY%6QC(0P*Ej4?6n_@6P,_1,^gu4s2sJ@qB17%6QC(0ebd64?6n_2a.[51,^jA4s2sJAN2A-%6QC(0etp84?6tbA3LGb1,^jC4s2sF0P*.+%6QC(0f2'':4>eg''1d2@21,^jE4s2sF0P!++%6QC(0fD3<4>eg(3''Id61,^jG4s2sF0P3+)%6QC(0fV?>4>eg''@Qk5`1,^jI4s2sF0P+ZV%6QC(0k!6g4>eg''A3LGb1,^jr4s2sF0P*()%6QC(0k3Bi4>eg''1Hl711,^jt4s2sF0P+`X%6QC(0kENk4>eg)0Koq.1,^k!4s2sF0P+i[%6QC(1,(m74>eg(1Hl711,^mB4s2sF0P)q%%6QC(1,;$94>ej(3''Id61,^mF4s2sF11`I0%6QC(1,_<=4>em*@Qk5`1,^mH4s2sF1G^^K%6QC(1,qH?4>ep''@m1>a1,^mJ4s2sF2DR3T%6QC(11<?h4>f#O2*MI31,^ms4s2sF2DAW)%6QC(11NKj4>f#O1-Q.01,^mu4s2sF2.g>^%6QC(11`Wl4>f#NAj-Yd1,^n"4s2sF2DJ]*%6QC(1GD!84>f#N0g6%/1,^pC4s2sF2DI!O%6QC(1GV-:4>f#N1-Q.01,^pE4s2sF2.g8\%6QC(1Gh9<4>f#OA3LGb1,^pG4s2sF2D?sO%6QC(1H%E>4>f!.Aj-Yd1,^pI4s2sF2.ej4%6QC(1H7Q@4>f)X3Bdm71,^pK4s2sF3&b>2%6QC(1LWHi4>f)Y0Koq.1,^pt4s2sF3&rr^%6QC(1LiTk4>f)X2EhR41,^q!4s2sF3&iWV%6QC(1M&`m4>f)WAj-Yd1,^q#4s2sF3&`ZX%6QC(1b_*94>f)X@Qk5`1,^sD4s2sF3&b80%6QC(1bq6;4>f)X2a.[51,^sF4s2sF3&r]W%6QC(1c.B=4>f)XANgPc1,^sH4s2sF3&``Z%6QC(1c@N?4>f)X1-Q.01,^sJ4s2sF3&il]%6QC(1cRZA4>f)W@Qk5`1,^sL4s2sF3&rfZ%6QC(1grQj4>f)XAj-Yd1,^su4s2sF3+c_c%6QC(1h/]l4>f,W@Qk5`1,^t"4s2sF@:Wk3%6QC(1hAin4>gPYANgPc1,^t$4s2sF@:_;[%6QC(2)%3:4>gPX2*MI31,_!E4s2sF@:`k2%6QC(2)7?<4>gPX@6P,_1,_!G4s2sF@:`t5%6QC(2)IK>4>gPY@Qk5`1,_!I4s2sF@:h;Z%6QC(2)[W@4>gPY1-Q.01,_!K4s2sF@:_,V%6QC(2)mcB4>gPX@Qk5`1,_!M4s2sF@:`q4%6QC(2.8Zk4>gPXANgPc1,_"!4s2sF@:Wn4%6QC(2.Jfm4>gPX3Bdm71,_"#4s2sF@:_D^%6QC(2.\ro4>gPXAj-Yd1,_"%4s2sF@Q-50%6QC(2D@<;4>gSZ0Koq.1,_$F4s2sF@V%>Z%6QC(2DRH=4>gV,1Hl711,_$H4s2sFA2l>.%6QC(2DdT?4>gY/0Koq.1,_$J4s2sFA2e$_%6QC(2E!`A4>gY/2EhR41,_$L4s2sFA2dp\%6QC(2E3lC4>gY/0g6%/1,_$N4s2sFA2cG2%6QC(2IScl4>gY/@6P,_1,_%"4s2sFA2lS5%6QC(2Ieon4>gY/3''Id61,_%$4s2sFA2e''`%6QC(2J#&p4>gY.@m1>a1,_%&4s2sFA2n*`%6QC(2_[E<4>gY.3Bdm`DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d2E*?S+?VMl2eG5_4>JfR1d3$E2.\X$4q0V02E*KW+?VMmA2la^4>JfR2Ei6G2.^;Q4q0V02E*QY+?VMmA2c[]4>JfR3''JHI2.^9/4q0V02E*W[+?VMmA7Ie44>JfR@6Per2.^;U4q0V02E,)/+?VMmA2ug_4>JfR@m2"t2.^;R4q0V02E,/1+?VMmA2HIZ4>JfRANh5!2.e[%4q0V02E,53+?VMn1c%<)4>JfS0KpUA2.eaY4q0V02E3ET+?VMn@Q$CZ4>JfS1-QgC2DHss4q0V02E3KV+?VP:1,qH,4>JfS1d3$E2DI$C4q0V02E3QX+?VP:2.\r\4>JfS2Ei6G2DI-F4q0V02E3WZ+?VP:2`!W,4>JfS@6Per2DI-G4q0V02E5/0+?VP:2Ieo[4>JfS@m2"t2DI0F4q0V02E552+?VP:2`*]-4>JfSANh5!2DI''G4q0V02E5;4+?VP:2dnlZ4>JfT0KpUA2DI''u4q0V02E<KU+?VP:2DmZ-4>JfT1-QgC2DI!s4q0V02E<QW+?VP:2IScY4>JfT1d3$E2DI*E4q0V02E<WY+?VP:2)[W-4>JfT2Ei6G2DR$J4q0V02E<][+?VP;1,hB+4>JfT3''JHI2DR$s4q0V02E<c]+?VP=11EEV4>JfT@6Per2Dd7$4q0V02E>51+?VP=2.A`Y4>JfT@m2"t2Dd:%4q0V02E>;3+?VP=2`*]-4>JfTANh5!2Dd?N4q0V02IS=(+?VP=2e5)]4>Jg''1-QgC2Dd?M4q0V02ISC*+?VP=2E!`.4>Jg''1d3$E2Dei#4q0V02ISI,+?VP=1hAi[4>Jg''2Ei6G2DdBK4q0V02ISO.+?VP=2.\r\4>Jg''3''JHI2Dd:$4q0V02ISU0+?VP=1h&WX4>Jg''@6Per2Dd9I4q0V02IU&Y+?VP=2D@<(4>Jg''@m2"t2Dd9F4q0V02IU,[+?VP=2eG5_4>Jg''ANh5!2Dd4%4q0V02IU2]+?VP=2Ieo[4>Jg(0KpUA2Dd=$4q0V02I\C)+?VP=2*!i04>Jg(1-QgC2Dd<L4q0V02I\I++?VP=2`Eo04>Jg(1d3$E2DmEL4q0V02I\O-+?VP>@5''kS4>Jg(2Ei6G2E"tu4q0V02I\U/+?VP?@5''kS4>Jg(3''JHI2E!R-4q0V02I\[1+?VP@0Ju$''4>Jg(@6Per2E*<H4q0V02I^,Z+?VP@1,;$&4>Jg(@m2"t2E>5$4q0V02I^2\+?VPB@Q$CZ4>Jg(ANh5!2E>8-4q0V02I^8^+?VPB@5''kS4>Jg)0KpUA2E>8Y4q0V02IeI*+?VPB3As&14>Jg)1-QgC2E>5#4q0V02IeO,+?VPB@:MJ14>Jg)1d3$E2E>5V4q0V02IeU.+?VPB3AE],4>Jg)2Ei6G2E<cX4q0V02Ie[0+?VPB3+Y8_4>Jg)3''JHI2E>2)4q0V02Iea2+?VPB3+P2^4>Jg)@6Per2E>2+4q0V02Ig2[+?VPB@V%_44>Jg)@m2"t2E>2X4q0V02Ig8]+?VPB@V.e54>Jg)ANh5!2E>8(4q0V02Ig>_+?VPB@UqY34>Jg*0KpUA2E>2&4q0V02InO++?VPBA2HIZ4>Jg*1-QgC2E>5,4q0V02InU-+?VPB@pqP14>Jg*1d3$E2E<d+4q0V02In[/+?VPB@qIn64>Jg*2Ei6G2E>5&4q0V02Ina1+?VPB3AWi.4>Jg*3''JHI2E>2S4q0V02Ing3+?VPB@50qT4>Jg*@6Per2E<d/4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC(A7@_F4>o313Bdm71,`ZQ4s2sG3B9#^%6QC(A7RkH4>o2[0Koq.1,`ZS4s2sG3Fag.%6QC(A7e"J4>o3/2*MI31,`\t4s2sG3FOd/%6QC(AMH@k4>o302EhR41,`]!4s2sG@PhLW%6QC(AMZLm4>pY*A3LGb1,`]#4s2sG@PhOX%6QC(ARRbF4>pY\ANgPc1,`]Q4s2sGARf:8%6QC(ARdnH4>pb_2*MI31,`]S4s2sGAS*Y\%6QC(AS"%J4>pe*1Hl711,`]U4s2sGAhl5-%6QC(AhZCk4>pb_3''Id61,``!4s2sGAhuA0%6QC(AhlOm4>pb_@Qk5`1,``#4s2sGAhmp]%6QC(Ai)[o4>pe*3Bdm71,``%4s2sGAi+''_%6QC(AiMss4>pe,2a.[51,``)4s2sGAhc8/%6QC(AmmkG4>pe-@Qk5`1,``R4s2sGAhc&)%6QC(An+"I4>pb^A3LGb1,``T4s2sGAh[XW%6QC(An=.K4>pe-2EhR41,``V4s2sGAiDM0%6QC)0JG[54>pb_3Bdm71,gmA4s2sGAS#F:%6QC)0JYg74>pe,A3LGb1,gmC4s2sGAi)2*%6QC)0Jks94>pe-0Koq.1,gmE4s2sGAi!p\%6QC)0K)*;4>pe-2*MI31,gmG4s2sGAS#=7%6QC)0K;6=4>pe*2a.[51,gmI4s2sGAh[d[%6QC)0O[-f4>pe.1Hl711,gmr4s2sGAhZ)+%6QC)0Om9h4>pb_A3LGb1,gmt4s2sGAS*ha%6QC)0P*Ej4>pe-3Bdm71,gn!4s2sGAhddZ%6QC)0ebd64>pb_@m1>a1,gpB4s2sGAi!jZ%6QC)0etp84>pe+Aj-Yd1,gpD4s2sGAh[aZ%6QC)0f2'':4>pe+ANgPc1,gpF4s2sGAhZ2.%6QC)0fD3<4>pe,0g6%/1,gpH4s2sH0fV*U%6QC)0fV?>4?"uT0Koq.1,gpJ4s2sH0fV0W%6QC)0k!6g4?"uS0Koq.1,gps4s2sH0fV$S%6QC)0k3Bi4?"uS1-Q.01,gpu4s2sH0fWc/%6QC)0kENk4?"uR@Qk5`1,gq"4s2sH0fV''T%6QC)1,(m74?"uS0g6%/1,gsC4s2sH0f_0V%6QC)1,;$94?##P1d2@21,gsE4s2sH1,UjO%6QC)1,M0;4?##U2a.[51,gsG4s2sH1-%3U%6QC)1,_<=4?##U1Hl711,gsI4s2sH1GgmO%6QC)1,qH?4?#&QA3LGb1,gsK4s2sH1GpmN%6QC)11<?h4?#&Q@m1>a1,gst4s2sH1c@*Q%6QC)11NKj4?#)U1Hl711,gt!4s2sH1cI-Q%6QC)11`Wl4?#)U2*MI31,gt#4s2sH1cI0R%6QC)1GD!84?#)T2a.[51,h!D4s2sH1cAo/%6QC)1GV-:4?#,O0Koq.1,h!H4s2sH2)f&0%6QC)1H%E>4?#,X0Koq.1,h!J4s2sH2DI*R%6QC)1H7Q@4?#/P3''Id61,h!L4s2sH2DAW)%6QC)1LWHi4?#/Q2*MI31,h!u4s2sH2DHpM%6QC)1LiTk4?#/P@6P,_1,h""4s2sH2DI$P%6QC)1M&`m4?#0-3''Id61,h"$4s2sH2`NNU%6QC)1b_*94?#2X@m1>a1,h$E4s2sH2`NZY%6QC)1bq6;4?#2Y1-Q.01,h$G4s2sH2`>52%6QC)1c.B=4?#2Y0Koq.1,h$I4s2sH2`>83%6QC)1c@N?4?#2XANgPc1,h$K4s2sH2`NTW%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>JiP3''JHI2`P8%4q0V02`*NY+?VSB@:;>/4>JiP@6Per2`P8''4q0V02`+u-+?VSB@:VP24>JiP@m2"t2`P5*4q0V02`,&/+?VSB2e>/^4>JiPANh5!2`P5T4q0V02`,,1+?VSB3FtA`4>JiQ0KpUA2`P5''4q0V02`3<R+?VSB@5''kS4>JiQ1-QgC2`P5U4q0V02`3BT+?VSB@5:"U4>JiQ1d3$E2`P5&4q0V02`3HV+?VSC3B0234>JiQ3''JHI2`WlV4q0V02`3TZ+?VSC3Aiu04>JiQ@6Per2`WlT4q0V02`5&.+?VSC3AWi.4>JiQ@m2"t2`WlW4q0V02`5,0+?VSC3&j)24>JiQANh5!2`WlR4q0V02`522+?VSC3A<W+4>JiR0KpUA2dnIN4q0V02`<BS+?VSk1grQW4>JiR1-QgC2dnKr4q0V02`<HU+?VSk11i]Z4>JiR1d3$E2dnI$4q0V02`<NW+?VSk1,_<*4>JiR2Ei6G2dp,S4q0V02`<Z[+?VSkAS"%74>JiR@6Per2e"a+4q0V02`>,/+?VSl3Fb5^4>JiR@m2"t2e"aT4q0V02`>21+?VSl3AE],4>JiRANh5!2e"d$4q0V02`>83+?VSl3As&14>JiS0KpUA2e"aW4q0V02`EHT+?VSl3+G,]4>JiS1-QgC2e"dV4q0V02`ENV+?VSl3+Y8_4>JiS1d3$E2e"a(4q0V02`ETX+?VSl3B0234>JiS2Ei6G2)7-J4q0V02`EZZ+?VSl3B9844>JiS3''JHI2e$2P4q0V02`E`\+?VSl3&3Z,4>JiS@6Per2e-<+4q0V02`G20+?VSm@V.e54>JiS@m2"t2e-<,4q0V02`G82+?VSm@UVG04>JiSANh5!2e6>U4q0V02`G>4+?VSn@Q-I[4>JiT0KpUA2e6DR4q0V02`NNU+?VSn@5C(V4>JiT1-QgC2e6?*4q0V02`NTW+?VSn@kg.V4>JiT1d3$E2e6DP4q0V02`NZY+?VSn@l6FZ4>JiT2Ei6G2e4pZ4q0V02`N`[+?VSn@q@h54>JiT3''JHI2e6DT4q0V02`Nf]+?VSn@l?L[4>JiT@m2"t2e6?/4q0V02`P>3+?VSn@Q?U]4>JiTANh5!2e4p,4q0V02`PD5+?VSn@UhS24>JiU0KpUA2e4p\4q0V02`WTV+?VSn@5^:Y4>JiU1-QgC2e6?.4q0V02`WZX+?VSn@6$L\4>JiU1d3$E2e6>O4q0V02`W`Z+?VSn@lZ^^4>JiU2Ei6G2eG!)4q0V02`Wl^+?VSpAMlX\4>JiU@6Per2eHT34q0V02`Y>2+?VV;1,M0(4>JiU@m2"t3&!4#4q0V02`YD4+?VV;2.JfZ4>JiUANh5!3&*BQ4q0V02`YJ6+?VV<3&Wr04>Jj(0KpUA3&*BK4q0V02dnF)+?VV<3&a#14>Jj(1-QgC3&*C''4q0V02dnL++?VV<3+G,]4>Jj(1d3$E3&*C%4q0V02dnR-+?VV=0f;-(4>Jj(2Ei6G3&EWS4q0V02dnX/+?VV?@5L.W4>Jj(3''JHI3&G%u4q0V02dn^1+?VV?3G(Ga4>Jj(@6Per3&G)Q4q0V02dp/Z+?VV?@q@h54>Jj(@m2"t3&G,#4q0V02dp5\+?VV?@:MJ14>Jj(ANh5!3&G&T4q0V02dp;^+?VV?@:DD04>Jj)0KpUA3&G))4q0V02e"L*+?VV?@Pg7X4>Jj)1-QgC3&G,"4q0V02e"R,+?VV?@q7b4ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,iZ!4s2sI1gsfV%6QC)@Pp=l4?,/X@6P,_1,iZ#4s2sI1h&1''%6QC)@Q-In4?,0.0Koq.1,iZ%4s2sI1c])1%6QC)@Q?Up4?,0+2a.[51,iZN4s2sI1h''oX%6QC)@U_MD4?,0+1-Q.01,iZP4s2sI1c[BV%6QC)@UqYF4?,0-2a.[51,iZR4s2sI1h1#Z%6QC)@V.eH4?,/X@Qk5`1,i\s4s2sI1grC.%6QC)@kg.i4?,0+Aj-Yd1,i\u4s2sI1gr@-%6QC)@l$:k4?,0.2EhR41,i]"4s2sI1c[NZ%6QC)@l6Fm4?,0,2EhR41,i]$4s2sI1h1,]%6QC)@lHRo4?,0+0Koq.1,i]&4s2sI1h8O/%6QC)@lZ^q4?,0.1d2@21,i]O4s2sI1h8@*%6QC)@q%VE4?,0.@Qk5`1,i]Q4s2sI1h&.&%6QC)@q7bG4?,/X0g6%/1,i]S4s2sI2E!9R%6QC)@qInI4?,8U1Hl711,i_t4s2sI2_m0Q%6QC)A2-7j4?,8T3''Id61,i`!4s2sI2`>,/%6QC)A2?Cl4?,8V0Koq.1,i`#4s2sI2_nr.%6QC)A2QOn4?,8SANgPc1,i`%4s2sI2_m*O%6QC)A2c[p4?,8S3Bdm71,i`''4s2sI2_ec*%6QC)A2ugr4?,8V1Hl711,i`P4s2sI2_nl,%6QC)A7@_F4?,8V0g6%/1,i`R4s2sI2`##/%6QC)A7RkH4?,8V2EhR41,i`T4s2sI2_m''N%6QC)A7e"J4?,8U1-Q.01,ibu4s2sI2_nf*%6QC)AMH@k4?,8TA3LGb1,ic"4s2sI2`"r-%6QC)AMZLm4?,8S1-Q.01,ic$4s2sI2`"l+%6QC)AMlXo4?,8U0g6%/1,ic&4s2sI2`!<T%6QC)AN)dq4?,8V1-Q.01,icQ4s2sI2`!EW%6QC)AR[hG4?,8T1d2@21,icS4s2sI2_e`)%6QC)ARmtI4?,8U0Koq.1,icU4s2sI2_d$N%6QC)AS++K4?,<42a.[51,if!4s2sI3+Y$4%6QC)AhuUn4?,<4@6P,_1,if%4s2sI3+c_c%6QC)Ai2ap4?,<3ANgPc1,if''4s2sI3+cYa%6QC)AiDmr4?,<42EhR41,if)4s2sI3+cV`%6QC)AiW$t4?,<40Koq.1,ifR4s2sI3+ZS`%6QC)An!qH4?,<3@Qk5`1,ifT4s2sI3B:V6%6QC)An4(J4?,?00g6%/1,ifV4s2sI3B:\8%6QC)AnF4L4?,>]ANgPc1,psA4s2sI3Ft37%6QC*0JPa64?,?4@Qk5`1,psC4s2sI3Ft06%6QC*0Jbm84?-bX@Qk5`1,psE4s2sI@6$>3%6QC*0Ju$:4?-b/@Qk5`1,psG4s2sI@6$),%6QC*0K20<4?-b/Aj-Yd1,psI4s2sI@6$50%6QC*0KD<>4?-h,A3LGb1,pst4s2sI@q7G\%6QC*0P!?i4?-h\Aj-Yd1,pt!4s2sI@q7M^%6QC*0P3Kk4?-k32EhR41,q!B4s2sIAM?,.%6QC*0ekj74?-n+1-Q.01,q!D4s2sIA7fF;%6QC*0f)!94?-n+A3LGb1,q!F4s2sIA7f@9%6QC*0f;-;4?-n+@6P,_1,q!H4s2sIAM>o(%6QC*0fM9=4?-n+2a.[51,q!J4s2sIAM?#+%6QC*0f_E?4?-n+2*MI31,q!s4s2sIA7fC:%6QC*0k*<h4?-n+0Koq.1,q!u4s2sIAM>r)%6QC*0kNTl4?-q,ANgQ7DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d3&30O+?VVq0P!?V4>JlO0g6^B3AE9F4q0V03&36Q+?VY=0k3BV4>JlO1HlpD3AE9C4q0V03&3<S+?VY=1,;$&4>JlO2*N-F3AE7#4q0V03&3BU+?VY=0k<HW4>JlO2a/?H3AE6s4q0V03&3HW+?VY=1,M0(4>JlO3BeQJ3AE9D4q0V03&4o++?VY=0k*<U4>JlO@Qkns3AEI$4q0V03&4u-+?VY=2_mQ+4>JlOA3M+u3AEHQ4q0V03&5&/+?VY=2`!W,4>JlOAj.>"3AP##4q0V03&<6P+?VY>@5L.W4>JlP0g6^B3ANNO4q0V03&<<R+?VY>3FY/]4>JlP1HlpD3ANO%4q0V03&<BT+?VY>@5''kS4>JlP2*N-F3ANTO4q0V03&<HV+?VY>@:;>/4>JlP2a/?H3ANR)4q0V03&<NX+?VY>@5^:Y4>JlP3BeQJ3ANU''4q0V03&=u,+?VY>@:DD04>JlP@Qkns3ANNR4q0V03&>&.+?VY>3B'',24>JlPA3M+u3ANO*4q0V03&>,0+?VY>@5C(V4>JlPAj.>"3AP/W4q0V03&E<Q+?VY>3+Y8_4>JlQ0g6^B3ANQL4q0V03&EBS+?VY>3Aiu04>JlQ1HlpD3AP"u4q0V03&EHU+?VY>2e5)]4>JlQ2*N-F3ANQR4q0V03&ENW+?VY>@50qT4>JlQ2a/?H3ANR&4q0V03&ETY+?VY>3&Wr04>JlQ3BeQJ3ANR(4q0V03&G&-+?VY>3B9844>JlQ@Qkns3AP#%4q0V03&G,/+?VY>2e>/^4>JlQA3M+u3ANQQ4q0V03&G21+?VY>@6$L\4>JlQAj.>"3ANU*4q0V03&NBR+?VY>3+>&\4>JlR0g6^B3AN@#4q0V03&NHT+?VYB3FtA`4>JlR1HlpD3At;#4q0V03&NNV+?VYBAnF494>JlR2*N-F3B&fT4q0V03&NTX+?VYC2e5)]4>JlR2a/?H3B&m*4q0V03&NZZ+?VYC2e>/^4>JlR3BeQJ3B&oR4q0V03&P,.+?VYC3&!N*4>JlR@Qkns3B&oQ4q0V03&P20+?VYC2e"r[4>JlRA3M+u3B&oS4q0V03&P82+?VYC3&*T+4>JlRAj.>"3B&m/4q0V03&WHS+?VYC@q@h54>JlS0g6^B3B(GY4q0V03&WNU+?VYD0fD3)4>JlS2*N-F3B8cK4q0V03&WZY+?VYE0JG["4>JlS2a/?H3B8cP4q0V03&W`[+?VYE3Fk;_4>JlS3BeQJ3B9*04q0V03&Y2/+?VYE@l$:X4>JlS@Qkns3B:P/4q0V03&Y81+?VYE@U_M14>JlSA3M+u3B:PW4q0V03&Y>3+?VYE@kp4W4>JlSAj.>"3B:PZ4q0V03&`NT+?VYE@lHR\4>JlT0g6^B3FQAO4q0V03&`TV+?VYmAMZLZ4>JlT1HlpD3FQJX4q0V03&`f\+?VYn2.f#]4>JlT@Qkns3FcYY4q0V03&b>2+?VYq@5g@Z4>JlTA3M+u2)&WS4q0V03&bD4+?VM90Jbm%4>JlTAj.>"2)-m@4q0V03&iTU+?VM8AiMs`4>JlU1HlpD2)&W#4q0V03&i`Y+?VM8An=.84>JlU2a/?H2)&WQ4q0V03&il]+?VM90O[-S4>JlU@Qkns2)8bu4q0V03&kD3+?VM:AS++84>JlUA3M+u2)[9N4q0V03&kJ5+?VM>1bq6(4>JlUAj.>"2)[:$4q0V03&rZV+?VM>1Gq?*4>JlV0g6^B2)[9G4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC*3ANc@4>f#R@6P,_1,q9M4s2sF2DdEX%6QC*3A`oB4>f#R2EhR41,q9O4s2sF2DmHX%6QC*3As&D4>f#S@6P,_1,q9Q4s2sF2Dd*O%6QC*3B02F4>f#Q1Hl711,q9S4s2sF2D\l-%6QC*3FP)o4>f#P@m1>a1,q:''4s2sF2D\o.%6QC*3Fb5q4>f#Q3''Id61,q:)4s2sF2DS])%6QC*3FtAs4>f#Q@6P,_1,q:+4s2sF2_e`)%6QC*@5''kf4>f*,@Qk5`1,r\s4s2sF3&tM5%6QC*@5:"h4>f*-0g6%/1,r\u4s2sF3+4L)%6QC*@5L.j4>f*,1Hl711,r]"4s2sF3+6D_%6QC*@5^:l4>f*,@m1>a1,r]$4s2sF3+4[.%6QC*@5pFn4>f*,0g6%/1,r]&4s2sF3+cbd%6QC*@:;>B4>gPZAj-Yd1,r]O4s2sF@:h>[%6QC*@:MJD4>gPZA3LGb1,r]Q4s2sF@:hG^%6QC*@:_VF4>gPZ2EhR41,r]S4s2sF@PBT%%6QC*@PBtg4>gPZ3''Id61,r_t4s2sF@PBQ$%6QC*@PU+i4>gPZ3Bdm71,r`!4s2sF@PBN#%6QC*@Pg7k4>gS%2a.[51,r`#4s2sF@PBZ''%6QC*@Q$Cm4>gS%Aj-Yd1,r`%4s2sF@l?80%6QC*@Q6Oo4>gY03Bdm71,r`''4s2sFA2uS4%6QC*@UVGC4>gY0Aj-Yd1,r`P4s2sFA2uD/%6QC*@UhSE4>gYX1-Q.01,r`R4s2sFA2uG0%6QC*@V%_G4>gY02*MI31,r`T4s2sFA77/U%6QC*@k^(h4>gY0@m1>a1,rbu4s2sFA772V%6QC*@kp4j4>gY0@6P,_1,rc"4s2sFA3"3b%6QC*@l-@l4>g\.3Bdm71,rc$4s2sFAMn!^%6QC*@l?Ln4>g\.0Koq.1,rc&4s2sFAMms]%6QC*@lQXp4?$e_1Hl711,rc(4s2sFARo76%6QC*@pqPD4>g\\ANgPc1,rcQ4s2sFAS!S[%6QC*@q.\F4>g_-3Bdm71,rcS4s2sFAn!MZ%6QC*@q@hH4>noR@Qk5`1,rcU4s2sG0fUsQ%6QC*A2$1i4>noQ3Bdm71,rf!4s2sG0k)k$%6QC*A26=k4>np''0Koq.1,rf#4s2sG0juh$%6QC*A2HIm4>noR3Bdm71,rf%4s2sG0f`],%6QC*A2ZUo4>noS1Hl711,rf''4s2sG0k"ZX%6QC*A2laq4>np&A3LGb1,rf)4s2sG0f`i0%6QC*A77YE4>noS1-Q.01,rfR4s2sG0k"KS%6QC*A7IeG4>np&0g6%/1,rfT4s2sG0fW]-%6QC*A7[qI4>noP2EhR41,rfV4s2sG0k)q&%6QC*AM?:j4>nrMA3LGb1,ri"4s2sG1cAo/%6QC*AMQFl4>o#T0Koq.1,ri$4s2sG1c[HX%6QC*AMcRn4>o$)0Koq.1,ri&4s2sG1cR?V%6QC*AMu^p4>o#V2a.[51,ri(4s2sG1c]&0%6QC*AN2jr4>o#UAj-Yd1,ri*4s2sG1cSr.%6QC*ARRbF4>o#U@6P,_1,riS4s2sG1cSu/%6QC*ARdnH4>o$)1Hl711,riU4s2sG1c]/3%6QC*AS"%J4>o#S3''Id61,riW4s2sG1h&1''%6QC*AhZCk4>o#V3''Id61,rl#4s2sG2)dEW%6QC*AhlOm4>o&U@6P,_1,rl%4s2sG2)dNZ%6QC*Ai)[o4>o&U@Qk5`1,rl)4s2sG2I\O-%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>Jm.3''JHI2E#"u4q0V03+b07+?VP?@6$L\4>Jm.@6Per2E##"4q0V03+cV`+?VP?@Q-I[4>Jm.@m2"t2E"uP4q0V03+c\b+?VP?@:h\44>Jm.ANh5!2IS9n4q0V03+cbd+?VPj0K)*(4>JoN0KpUA2IS=!4q0V03A<0O+?VPBAMlX\4>JoN1-QgC2E>A/4q0V03A<6Q+?VPj0f;-(4>JoN1d3$E2E>A(4q0V03A<<S+?VPBAMcR[4>JoN2Ei6G2IS?p4q0V03A<BU+?VPBAnF494>JoN3''JHI2E>>Y4q0V03A<HW+?VPBAMQFY4>JoN@6Per2IS=L4q0V03A=o++?VPj0k<HW4>JoN@m2"t2E>A\4q0V03A=u-+?VPj1,hB+4>JoNANh5!2E>A)4q0V03A>&/+?VPBAS"%74>JoO0KpUA2IS<s4q0V03AE6P+?VPBAiDm_4>JoO1-QgC2E>>-4q0V03AE<R+?VPj1b_*&4>JoO1d3$E2IS:!4q0V03AEBT+?VPBAMu^]4>JoO2Ei6G2E>AY4q0V03AEHV+?VPj0P!?V4>JoO3''JHI2E>AZ4q0V03AENX+?VPBAR[h44>JoO@6Per2IS:"4q0V03AFu,+?VPj0Jks&4>JoO@m2"t2IS="4q0V03AG&.+?VPj1,V6)4>JoOANh5!2IS:O4q0V03AG,0+?VPBAi;g^4>JoP0KpUA2IS@!4q0V03AN<Q+?VPj0K20)4>JoP1-QgC2E>A+4q0V03ANBS+?VPj0fD3)4>JoP1d3$E2I\Nu4q0V03ANHU+?VPk@5U4X4>JoP2Ei6G2I^)N4q0V03ANNW+?VPk@5:"U4>JoP3''JHI2I^)Q4q0V03ANTY+?VPl0JPa#4>JoP@6Per2IeEp4q0V03AP&-+?VPkAnF494>JoP@m2"t2IeEr4q0V03AP,/+?VPo1bh0''4>JoPANh5!2J+^&4q0V03AP21+?VPo2e>/^4>JoQ0KpUA2J+p-4q0V03AWBR+?VPo@l?L[4>JoQ1-QgC2J+s)4q0V03AWHT+?VPo3+P2^4>JoQ1d3$E2J+p/4q0V03AWNV+?VPo3+G,]4>JoQ2Ei6G2J+j&4q0V03AWTX+?VPo1hJo\4>JoQ3''JHI2J+p+4q0V03AWZZ+?VPo2.8ZX4>JoQ@6Per2J+s-4q0V03AY,.+?VPo2`<i/4>JoQ@m2"t2J+jW4q0V03AY20+?VPo3&3Z,4>JoQANh5!2J+g(4q0V03AY82+?VPo2_mQ+4>JoR0KpUA2J+g%4q0V03A`HS+?VPo2)%3''4>JoR1-QgC2J+g*4q0V03A`NU+?VPo3A`o/4>JoR1d3$E2J+s*4q0V03A`TW+?VPo2.Sl[4>JoR2Ei6G2J+Ws4q0V03A`ZY+?VPo2DIB)4>JoR3''JHI2J+jV4q0V03A``[+?VPo2e5)]4>JoR@6Per2J+j+4q0V03Ab2/+?VPo3A<W+4>JoR@m2"t2J+g&4q0V03Ab81+?VPo3+>&\4>JoRANh5!2J+j-4q0V03Ab>3+?VPo2eG5_4>JoS0KpUA2J+s,4q0V03AiNT+?VPo2D[N+4>JoS1-QgC2J+m,4q0V03AiTV+?VPo2IScY4>JoS1d3$E2J+mW4q0V03AiZX+?VS;@PU+V4>JoS2Ei6G2_e`Q4q0V03Ai`Z+?VS;3FY/]4>JoS3''JHI2_ebq4q0V03Aif\+?VS;@5''kS4>JoS@6Per2_d=$4q0V03Ak80+?VS;@6$L\ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1-%4%4s2sH0k*"(%6QC+2.Sln4?"uTA3LGb1-%4''4s2sH0juq''%6QC+2.f#p4?"uTANgPc1-%6H4s2sH0jun&%6QC+2DIB<4?#!''0g6%/1-%6J4s2sH0k"KS%6QC+2D[N>4?"uT@m1>a1-%6L4s2sH0k!")%6QC+2DmZ@4?#!(1Hl711-%6N4s2sH1-%<X%6QC+2E*fB4?##U@6P,_1-%6P4s2sH1Gq-U%6QC+2E<rD4?#&R1-Q.01-%7''4s2sH1Gr],%6QC+2J#&p4?#&R@Qk5`1-%7)4s2sH1H$sO%6QC+2_[E<4?#&R@6P,_1-%9J4s2sH1Gq0V%6QC+2_mQ>4?#&S1-Q.01-%9L4s2sH1cREX%6QC+2`<iB4?#)V2EhR41-%9P4s2sH1cR3R%6QC+2`NuD4?#)UA3LGb1-%9R4s2sH1cR?V%6QC+2dnlm4?#)V3''Id61-%:&4s2sH1cJo.%6QC+2e,#o4?#)U3Bdm71-%:(4s2sH2)%!R%6QC+2e>/q4?#,O2a.[51-%:*4s2sH2)f)1%6QC+3&!N=4?#/R2*MI31-%<K4s2sH2DJc,%6QC+3&3Z?4?#/Q3Bdm71-%<M4s2sH2DJ`+%6QC+3&EfA4?#/Q@m1>a1-%<O4s2sH2DR''P%6QC+3&WrC4?#/Q@6P,_1-%<Q4s2sH2DR6U%6QC+3&j)E4?#/Q@Qk5`1-%=(4s2sH2E>51%6QC+3+P2q4?#2YA3LGb1-%=*4s2sH2`PD5%6QC+3+b>s4?#2Y3Bdm71-%?K4s2sH2`Nc\%6QC+3AE]?4?#60A3LGb1-%?M4s2sH3+?>\%6QC+3AWiA4?#60Aj-Yd1-%?O4s2sH3+HG^%6QC+3AiuC4?#610g6%/1-%?Q4s2sH3+HM`%6QC+3B'',E4?#611d2@21-%?S4s2sH3+Fp3%6QC+3FY/p4?#603Bdm71-%@)4s2sH3B:M3%6QC+3Fk;r4?#9/0g6%/1-%@+4s2sH3FOU*%6QC+3G(Gt4?#8\@m1>a1-&bs4s2sH3FO[,%6QC+@50qg4?#8\@Qk5`1-&bu4s2sG@Q-2/%6QC+@5C(i4?$\)3Bdm71-&c"4s2sH@:CuU%6QC+@5U4k4?$\X1d2@21-&c$4s2sH@:D#V%6QC+@5g@m4?$_Y2a.[51-&c&4s2sH@Uik2%6QC+@6$Lo4?$_YANgPc1-&cO4s2sH@UWb1%6QC+@:DDC4?$_ZANgPc1-&cQ4s2sH@UWk4%6QC+@:VPE4?$_Y3Bdm71-&cS4s2sH@Uih1%6QC+@:h\G4?$_Y2*MI31-&et4s2sH@q.A[%6QC+@PL%h4?$b[3''Id61-&f!4s2sH@q0"4%6QC+@P^1j4?$b[@Qk5`1-&f#4s2sHA7dba%6QC+@Pp=l4?$e]@Qk5`1-&f%4s2sHA7]15%6QC+@Q-In4?$e^2a.[51-&f''4s2sHA7RV_%6QC+@Q?Up4?$e^0g6%/1-&fP4s2sHAM>o(%6QC+@U_MD4?$e_@6P,_1-&fR4s2sHA7[Y_%6QC+@UqYF4?$e_2EhR41-&fT4s2sHA7dP[%6QC+@V.eH4?$e_0Koq.1-&hu4s2sHA7]=9%6QC+@kg.i4?$e]Aj-Yd1-&i"4s2sHAiDV3%6QC+@l$:k4?$k\@m1>a1-&i$4s2sHAn!GX%6QC+@l6Fm4?$k\A3LGb1-&i&4s2sHAn>L:%6QC+@lHRo4?$k`@Qk5`1-&i(4s2sHAn>C7%6QC+@lZ^q4?$k`@m1?5DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d3FcJ]+?VSpAMu^]4>Jp,@Qkns2eHV\4q0V03FcP_+?VV;2DdT,4>Jp,A3M+u3&!6L4q0V03FcVa+?VV<@5C(V4>Jp,Aj.>"3&*F*4q0V03Fjg-+?VV<3FtA`4>Jp-0g6^B3&*EN4q0V03Fjm/+?VV<@5:"U4>Jp-1HlpD3&*ER4q0V03Fjs1+?VV<3B'',24>Jp-2*N-F3&33H4q0V03Fk$3+?VV=1hJo\4>Jp-2a/?H3&3?I4q0V03Fk*5+?VV=2)7?)4>Jp-3BeQJ3&3?F4q0V03FlP^+?VV=1hAi[4>Jp-@Qkns3&3?G4q0V03FlV`+?VV@1,M0(4>Jp-A3M+u3&NL$4q0V03Fl\b+?VV@0P3KX4>Jp-Aj.>"3&NBD4q0V03Fsm.+?VV@1-%N-4>Jp.0g6^B3&NC$4q0V03Fss0+?VV@0KD<+4>Jp.1HlpD3&NC#4q0V03Ft$2+?VV@0kNTY4>Jp.2*N-F3&NBu4q0V03Ft*4+?VV@1,hB+4>Jp.2a/?H3&NF#4q0V03Ft06+?VV?An!q54>Jp.3BeQJ3&NI#4q0V03FuV_+?VV?Ammk44>Jp.@Qkns3&NBL4q0V03Fu\a+?VV@0Om9U4>Jp.A3M+u3&G5(4q0V03Fubc+?VV@11<?U4>Jp.Aj.>"3&G5&4q0V03G''s/+?VV@0f;-(4>Jp/0g6^B3&G5+4q0V03G($1+?VV?AR[h44>Jp/1HlpD3&G5''4q0V03G(*3+?VV?An+"64>Jp/2*N-F3&NEG4q0V03G(05+?VV?ARRb34>Jp/2a/?H3&G2,4q0V03G(67+?VV@0fD3)4>Jp/3BeQJ3&G5Y4q0V03G)\`+?VV@1,qH,4>Jp/@Qkns3&NF$4q0V03G)bb+?VV@11`WY4>Jp/A3M+u3&NBF4q0V03G)hd+?VV?An4(74>Jp/Aj.>"3&NF%4q0V0@5''B!+?VV?Ai;g^4>L>!0g6^B3&NKH4q0V0@5''H#+?VV@1,_<*4>L>!2*N-F3&G5$4q0V0@5''T''+?VV?AS++84>L>!2a/?H3&G5-4q0V0@5''Z)+?VV@0fV?+4>L>!3BeQJ3&NHF4q0V0@5)+R+?VV@1GD!%4>L>!@Qkns3&NC!4q0V0@5)1T+?VV@0f_E,4>L>!A3M+u3&NI''4q0V0@5)7V+?VVA2DRH*4>L>!Aj.>"3&`]Q4q0V0@50N$+?VVB2`Eo04>L>"1HlpD3&bD''4q0V0@50T&+?VVB2`!W,4>L>"2*N-F3&`]S4q0V0@50Z(+?VVB2)IK+4>L>"2a/?H3&`^(4q0V0@50`*+?VVB2)7?)4>L>"3BeQJ3&``M4q0V0@521S+?VVB2.8ZX4>L>"@Qkns3&`]L4q0V0@527U+?VVB2.\r\4>L>"A3M+u3&`a+4q0V0@52=W+?VVB2IScY4>L>"Aj.>"3&`]K4q0V0@59N#+?VVB1hAi[4>L>#0g6^B3&`^,4q0V0@59T%+?VVB2.Sl[4>L>#1HlpD3&`a-4q0V0@59Z''+?VVB2Ieo[4>L>#2*N-F3&`d)4q0V0@59`)+?VVB2J#&]4>L>#2a/?H3&`^)4q0V0@59f++?VVB2DmZ-4>L>#3BeQJ3&`[+4q0V0@5;7T+?VVB2e"r[4>L>#@Qkns3&`cR4q0V0@5;=V+?VVB2DRH*4>L>#A3M+u3&``S4q0V0@5;CX+?VVB2E<r14>L>#Aj.>"3&id(4q0V0@5BT$+?VVD0Ju$''4>L>$0g6^B3&r[&4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QCS1GV-:4?,>U1d2@211;sp4s2sI3A=o+%6QCS1H.K?4?,>T2EhR411;su4s2sI3AEEU%6QCS1H@WA4?,>U0g6%/11;tI4s2sI3A>#.%6QCS1L`Nj4?,>T3Bdm711;tK4s2sI3FO[,%6QCS1LrZl4?,?01d2@211;tM4s2sI3FO^-%6QCS1M/fn4?,?4A3LGb11<!n4s2sI3G''s/%6QCS1bh0:4?,?4@m1>a11<!p4s2sI@:Nn5%6QCS1c%<<4?-bZ2EhR411<!r4s2sI@:D2[%6QCS1c7H>4?-b[1Hl7111<!t4s2sI@:V)V%6QCS1c[`B4?-bY@Qk5`11<"J4s2sI@:V;\%6QCS1h&Wk4?-bYANgPc11<"L4s2sI@:LuT%6QCS1h8cm4?-bZ2*MI311<"N4s2sI@:V>]%6QCS1hJoo4?-bZ1Hl7111<$o4s2sI@:EY/%6QCS2).9;4?-bYA3LGb11<$q4s2sI@:VA^%6QCS2)@E=4?-h,ANgPc11<$s4s2sI@l.^[%6QCS2)RQ?4?-h1Aj-Yd11<$u4s2sI@q@M]%6QCS2)d]A4?-h]Aj-Yd11<%"4s2sI@q7S`%6QCS2*!iC4?-h^3''Id611<%K4s2sI@q9"3%6QCS2.A`l4?-h]A3LGb11<%M4s2sI@q@S_%6QCS2.Sln4?-k[0Koq.11<%O4s2sIA3"-`%6QCS2.f#p4?-k[0g6%/11<''p4s2sIA3"*_%6QCS2DIB<4?-n-0Koq.11<''r4s2sIAMQ&*%6QCS2D[N>4?-n-2*MI311<''t4s2sIAMQ)+%6QCS2DmZ@4?-n-ANgPc11<(!4s2sIAMH&+%6QCS2E*fB4?-n,@Qk5`11<(#4s2sIAMH),%6QCS2E<rD4?-n,0g6%/11<(L4s2sIAMH2/%6QCS2Inuo4?-n,1d2@211<(P4s2sIAMGr(%6QCS2J,,q4?-n,3''Id611<*q4s2sIAMGu)%6QCS2_dK=4?-n,@m1>a11<*s4s2sIAMH,-%6QCS2`!W?4?-n,@6P,_11<*u4s2sIAhmj[%6QCS2`3cA4?-q.1d2@211<+"4s2sIAhc8/%6QCS2`EoC4?-q-@6P,_11<+$4s2sIAhl&(%6QCS2`X&E4?-q.1Hl7111<+O4s2sJ0K1dO%6QCS2e5)p4?5)S0Koq.11<+Q4s2sJ0K*N,%6QCS2eG5r4?5)R2a.[511<-r4s2sJ0K*B(%6QCS3&*T>4?5,OAj-Yd11<-t4s2sJ0f!3%%6QCS3&NlB4?5,P1-Q.011<.#4s2sJ0etXN%6QCS3&a#D4?5,OANgPc11<.N4s2sJ0fWT*%6QCS3+P2q4?5,U1d2@211<.R4s2sJ0fUjN%6QCS3+b>s4?50-0Koq.11<0u4s2sJ11N"%%6QCS3AWiA4?50-3Bdm711<1"4s2sJ11E.*%6QCS3AiuC4?50,Aj-Yd11<1$4s2sJ11i7)%6QCS3B'',E4?50-Aj-Yd11<1&4s2sJ11W@.%6QCS3B98G4?50.3Bdm711<1O4s2sJ11W=-%6QCS3FY/p4?50-A3LGb11<1Q4s2sJ11OfX%6QCS3Fk;r4?50.Aj-Yd11<1S4s2sJ11N(''%6QCS3G(Gt4?50.3''Id611=TF4s2sJ11O`V%6QCS@50qg4?50,3''Id611=TH4s2sJ11OlZ%6QCS@5C(i4?50.2EhR411=TJ4s2sJ11OiY%6QCS@5U4k4?50-2*MI311=TL4s2sJ11N=.%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>L>R2a/?H3AP/"4q0V0@:;,Z+?VY>A7[q64>L>R3BeQJ3AP/)4q0V0@:<S.+?VY>A2-7W4>L>R@Qkns3AP,$4q0V0@:<Y0+?VY>@Pp=Y4>L>RA3M+u3AP/#4q0V0@:<_2+?VY?1,V6)4>L>RAj.>"3AP)&4q0V0@:CoS+?VY>@Pg7X4>L>S0g6^B3Aia*4q0V0@:CuU+?VYA@:MJ14>L>S1HlpD3Ak5S4q0V0@:D&W+?VYA@:_V34>L>S2*N-F3Ak8"4q0V0@:D,Y+?VYB@5L.W4>L>S2a/?H3At;$4q0V0@:D2[+?VYBA2?CY4>L>S3BeQJ3B&WL4q0V0@:EY/+?VYC0K;6*4>L>S@Qkns3B&WI4q0V0@:E_1+?VYC2.8ZX4>L>SA3M+u3B&p+4q0V0@:Ee3+?VYC3+Y8_4>L>SAj.>"3B&oW4q0V0@:LuT+?VYCA2$1V4>L>T0g6^B3B(G[4q0V0@:M&V+?VYD0kENX4>L>T1HlpD3B/a(4q0V0@:M,X+?VYD1,_<*4>L>T2*N-F3B/cS4q0V0@:M2Z+?VYD1,qH,4>L>T2a/?H3B/cJ4q0V0@:M8\+?VYD0k*<U4>L>T3BeQJ3B/cQ4q0V0@:N_0+?VYD@PU+V4>L>T@Qkns3B8cQ4q0V0@:Ne2+?VYDAmmk44>L>TA3M+u3B8fK4q0V0@:Nk4+?VYE0f2''''4>L>U0g6^B3B8fO4q0V0@:V,W+?VYEA7Ie44>L>U1HlpD3B:S[4q0V0@:V2Y+?VYE@qIn64>L>U2a/?H3B:S\4q0V0@:V>]+?VYE@lZ^^4>L>U3BeQJ3B:V.4q0V0@:We1+?VYEA2la^4>L>U@Qkns3B:SY4q0V0@:Wk3+?VYEA2c[]4>L>UA3M+u3B:SZ4q0V0@:Wq5+?VYm@P^1W4>L>UAj.>"3FQK/4q0V0@:_,V+?VYmAR[h44>L>V0g6^B3FQMU4q0V0@:_2X+?VYmAhlOZ4>L>V1HlpD3FQMS4q0V0@:_8Z+?VYn1c@N,4>L>V2*N-F3FXg$4q0V0@:_>\+?VYn2E*f/4>L>V2a/?H3FXp(4q0V0@:_D^+?VYn2_dK*4>L>V3BeQJ3FXm)4q0V0@:`k2+?VYn2`<i/4>L>V@Qkns3FXp)4q0V0@:`q4+?VYn2_[E)4>L>VA3M+u3FXm+4q0V0@:a"6+?VYn2DdT,4>L>VAj.>"3FXmV4q0V0@:h2W+?VYoAn+"64>L>W0g6^B3FcZ04q0V0@:h8Y+?VYoAn4(74>L>W1HlpD3FcZ54q0V0@:h>[+?VYoAiDm_4>L>W2*N-F3Fjg&4q0V0@:hD]+?VYp0JG["4>L>W2a/?H3FcY]4q0V0@:hJ_+?VYoAn!q54>L>W3BeQJ3Fjg''4q0V0@:iq3+?VYp0Ju$''4>L>W@Qkns3Fjg#4q0V0@:j"5+?VYq3&<`-4>L>WA3M+u3Fu_W4q0V0@PBK"+?VM90k3BV4>LA"0g6^B2)-gA4q0V0@PBQ$+?VM90fM9*4>LA"1HlpD2)-go4q0V0@PBW&+?VM90ekj$4>LA"2*N-F2)/WQ4q0V0@PB](+?VM;1Gh9)4>LA"2a/?H2)Aeu4q0V0@PBc*+?VM>2_[E)4>LA"3BeQJ2)[?H4q0V0@PD4S+?VM>2J#&]4>LA"@Qkns2)[BL4q0V0@PD:U+?VM>2E!`.4>LA"A3M+u2)[?K4q0V0@PD@W+?VM>2Inu\4>LA"Aj.>"2)[BK4q0V0@PKQ#+?VM>2.\r\ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>11Dsm4s2sF2E*QY%6QCT0etp84>f&P@m1>a11Dso4s2sF2_ec*%6QCT0f2'':4>f*.3''Id611Dsq4s2sF3+?D^%6QCT0fD3<4>f*.3Bdm711Dss4s2sF3+?J`%6QCT0fV?>4>f*-@6P,_11Dsu4s2sF3+F^-%6QCT0k!6g4>f*-@m1>a11DtI4s2sF3+Fj1%6QCT0k3Bi4>gS&2a.[511DtK4s2sF@PKl,%6QCT0kENk4>gS&@Qk5`11DtM4s2sF@PTZ%%6QCT1,(m74>gS&1d2@211E!n4s2sF@PKZ&%6QCT1,;$94>gS&0Koq.11E!p4s2sF@PKc)%6QCT1,M0;4>gS''3''Id611E!r4s2sF@PM:T%6QCT1,_<=4>gS''0Koq.11E!t4s2sF@PMFX%6QCT1,qH?4>gSZAj-Yd11E"!4s2sFA78t3%6QCT11<?h4>gYY0g6%/11E"J4s2sFA77J^%6QCT11NKj4>gYX2a.[511E"L4s2sFA7@D[%6QCT11`Wl4>gYY0Koq.11E"N4s2sFA79%5%6QCT1GD!84>gYX@6P,_11E$o4s2sFA77G]%6QCT1GV-:4>gYY1-Q.011E$q4s2sFA79"4%6QCT1Gh9<4>gYXAj-Yd11E$s4s2sFA7@AZ%6QCT1H7Q@4>g\.2EhR411E%"4s2sFAN"-a%6QCT1LWHi4>g\]3Bdm711E%K4s2sFAS!ea%6QCT1LiTk4>g\]2EhR411E%M4s2sFAS!hb%6QCT1M&`m4>g\]2*MI311E%O4s2sFAi*s\%6QCT1b_*94>g_[@m1>a11E''p4s2sFAn#45%6QCT1bq6;4>noSA3LGb11E''r4s2sG0k!%*%6QCT1c.B=4>noS2EhR411E''t4s2sG0k3()%6QCT1c@N?4>np''1d2@211E(!4s2sG0k3+*%6QCT1cRZA4>np(0g6%/11E(#4s2sG0k4]W%6QCT1grQj4>np''@6P,_11E(L4s2sG0k+`Y%6QCT1h/]l4>np''3''Id611E(N4s2sG0fWZ,%6QCT1hAin4>o$,2a.[511E(P4s2sG1h8L.%6QCT2)%3:4>o$,0Koq.11E*q4s2sG1h1,]%6QCT2)7?<4>o$+3Bdm711E*s4s2sG1h''uZ%6QCT2)IK>4>o#U3Bdm711E*u4s2sG1h/=*%6QCT2)[W@4>o$,@Qk5`11E+"4s2sG1hJO-%6QCT2)mcB4>o$,3Bdm711E+$4s2sG2)@$P%6QCT2.8Zk4>o&UAj-Yd11E+M4s2sG2)f#/%6QCT2.Jfm4>o''*1-Q.011E+O4s2sG2Ie^1%6QCT2.\ro4>o*,ANgPc11E+Q4s2sG2IeF)%6QCT2DRH=4>o*-Aj-Yd11E-t4s2sG2I^2\%6QCT2DdT?4>o*,@Qk5`11E.!4s2sG2I^)Y%6QCT2E!`A4>o*-@m1>a11E.#4s2sG2_m0Q%6QCT2E3lC4>pV(1d2@211E.%4s2sG@5^#-%6QCT2IScl4>pV)3Bdm711E.N4s2sG@5^&.%6QCT2Ieon4>pV(1-Q.011E.P4s2sG@5^)/%6QCT2J#&p4>pV(ANgPc11E.R4s2sG@5VRZ%6QCT2_[E<4>pV+A3LGb11E0s4s2sG@5g).%6QCT2_mQ>4>pV*@Qk5`11E0u4s2sG@5Tc''%6QCT2`*]@4>pV''3''Id611E1"4s2sG@5VIW%6QCT2`<iB4>pV(@Qk5`11E1$4s2sG@5DLZ%6QCT2`NuD4>pV)0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d@Q-;2+?VPj2IScY4>LA)@6Per2ISL#4q0V0@Q.a[+?VPj2)%3''4>LA)@m2"t2ISFS4q0V0@Q.g]+?VPj2)IK+4>LA)ANh5!2ISLU4q0V0@Q.m_+?VPj2E<r14>LA*0KpUA2ISKt4q0V0@Q6)++?VPj1LiTX4>LA*1-QgC2ISIS4q0V0@Q6/-+?VPj2)[W-4>LA*1d3$E2ISI#4q0V0@Q6;1+?VPj1c@N,4>LA*3''JHI2I\O$4q0V0@Q6A3+?VPk2)IK+4>LA*@6Per2I\O%4q0V0@Q7g\+?VPk@5g@Z4>LA*ANh5!2I^/U4q0V0@Q7s`+?VPk@lHR\4>LA+0KpUA2IeEt4q0V0@Q?/,+?VPl0Jbm%4>LA+1-QgC2IeF!4q0V0@Q?5.+?VPo@:VP24>LA+1d3$E2J-H.4q0V0@Q?;0+?VPo@5C(V4>LA+2Ei6G2J-GX4q0V0@Q?A2+?VPo@UhS24>LA+3''JHI2J-H14q0V0@Q?G4+?VPo@lQX]4>LA+@6Per2J+gX4q0V0@Q@m]+?VPo@l-@Y4>LA+@m2"t2J-E/4q0V0@Q@s_+?VPo3FtA`4>LA+ANh5!2J-H-4q0V0@QA$a+?VPo@5pF[4>LAS0KpUA2_ZpB4q0V0@UUuT+?VPo@5U4X4>LAS1-QgC2J-B/4q0V0@UV&V+?VPo@UVG04>LAS1d3$E2J-B-4q0V0@UV,X+?VPo@:;>/4>LAS2Ei6G2J-H24q0V0@UV2Z+?VPo@V.e54>LAS3''JHI2J-DX4q0V0@UV8\+?VPo@5:"U4>LAS@6Per2J-GZ4q0V0@UW_0+?VPo@:DD04>LAS@m2"t2J-H04q0V0@UWe2+?VPo@:h\44>LASANh5!2J-DR4q0V0@UWk4+?VPo@PBtT4>LAT0KpUA2_ef"4q0V0@U_&U+?VS;@kp4W4>LAT1-QgC2_ecR4q0V0@U_,W+?VS;@Q6O\4>LAT1d3$E2_ei$4q0V0@U_8[+?VS;@q%V24>LAT3''JHI2_ei"4q0V0@U_>]+?VS;@pqP14>LAT@6Per2_ef$4q0V0@U`e1+?VS;@qIn64>LAT@m2"t2_ecP4q0V0@U`k3+?VS;A2la^4>LATANh5!2_ecO4q0V0@U`q5+?VS;@l?L[4>LAU1d3$E2`!?P4q0V0@Uh>\+?VS=2Ieo[4>LAU3''JHI2`!?L4q0V0@UhD^+?VS=2I\iZ4>LAU@6Per2`!@#4q0V0@Uik2+?VS>2eG5_4>LAU@m2"t2`*O''4q0V0@Uiq4+?VS>@5''kS4>LAUANh5!2`*NO4q0V0@Uj"6+?VS>3ANc-4>LAV0KpUA2`*NP4q0V0@Uq2W+?VS>@50qT4>LAV1-QgC2`39u4q0V0@Uq8Y+?VS?3&!N*4>LAV1d3$E2`<F''4q0V0@Uq>[+?VS@11WQX4>LAV2Ei6G2`<HH4q0V0@UqD]+?VS@1LrZY4>LAV3''JHI2`<HJ4q0V0@UqJ_+?VS@1LiTX4>LAV@6Per2`<HL4q0V0@Urq3+?VS@1GV-''4>LAV@m2"t2`<HG4q0V0@Us"5+?VS@@U_M14>LAVANh5!2`>5*4q0V0@Us(7+?VSA3FP)\4>LAW0KpUA2`Ea-4q0V0@V%8X+?VSA@50qT4>LAW1-QgC2`Ea,4q0V0@V%>Z+?VSA3FY/]4>LAW2Ei6G2`E`S4q0V0@V%J^+?VSA3B9844>LAW3''JHI2`E`U4q0V0@V%P`+?VSBA7Rk54>LAW@6Per2`PA/4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QCTAR[hG4?#622*MI311Fg)4s2sH3+ZM^%6QCTARmtI4?#61ANgPc11Fg+4s2sH3+Xm0%6QCTAS++K4?#61@Qk5`11FiN4s2sH3+ZVa%6QCTAi2ap4?#9/1d2@211FiR4s2sH@5Kf)%6QCTAiDmr4?$\*3''Id611FiT4s2sH@5Ko,%6QCTAiW$t4?$\X2EhR411Fj(4s2sH@:D2[%6QCTAn!qH4?$\X2*MI311Fj*4s2sH@:CrT%6QCTAn4(J4?$\X2a.[511Fj,4s2sH@Us%6%6QCTAnF4L4?$_\1Hl7111N!l4s2sH@V%J^%6QCU0JPa64?$_[A3LGb11N!n4s2sH@Uq>[%6QCU0Jbm84?$_\2*MI311N!p4s2sH@Urn2%6QCU0Ju$:4?$_\3''Id611N!r4s2sH@V.Va%6QCU0K20<4?$_[1d2@211N!t4s2sH@V&t3%6QCU0KD<>4?$_\1-Q.011N"H4s2sH@Urt4%6QCU0Od3g4?$_\@Qk5`11N"J4s2sH@UqG^%6QCU0P!?i4?$_[Aj-Yd11N"L4s2sH@q7>Y%6QCU0P3Kk4?$b\1d2@211N$m4s2sH@q7M^%6QCU0f)!94?$h+1-Q.011N$q4s2sHAMPu(%6QCU0f;-;4?$h+2a.[511N$s4s2sHAM@UX%6QCU0f_E?4?$h+1Hl7111N%I4s2sHAM@[Z%6QCU0k*<h4?$h+@m1>a11N%K4s2sHAMH&+%6QCU0k<Hj4?$h+@6P,_11N%M4s2sHAMQ#)%6QCU0kNTl4?$h*@Qk5`11N''n4s2sHAM@^[%6QCU1,1s84?$h+2EhR411N''p4s2sHAM@XY%6QCU1,D*:4?$h+1d2@211N''r4s2sHAMQ,,%6QCU1,V6<4?$h,1d2@211N''t4s2sHAi);-%6QCU1-%N@4?$k2@6P,_11N(J4s2sHAn!JY%6QCU11EEi4?$k`Aj-Yd11N(L4s2sI0J[''#%6QCU11WQk4?,#M3Bdm711N(N4s2sI0K*E)%6QCU11i]m4?,'')0g6%/11N*o4s2sI0jut(%6QCU1GM''94?,''(ANgPc11N*q4s2sI0k*.,%6QCU1G_3;4?,'')2*MI311N*s4s2sI0k"NT%6QCU1Gq?=4?,'')0Koq.11N*u4s2sI0k"QU%6QCU1H.K?4?,'')1d2@211N+"4s2sI0k)n%%6QCU1H@WA4?,'')2a.[511N+K4s2sI0k!")%6QCU1L`Nj4?,''-1-Q.011N+P4s2sI2)R9U%6QCU1b_*94?,2T2*MI311N-q4s2sI2)\o-%6QCU1bq6;4?,2TA3LGb11N-s4s2sI2)R0R%6QCU1c.B=4?,2V0g6%/11N-u4s2sI2)R?W%6QCU1c@N?4?,2T0Koq.11N."4s2sI2)I3T%6QCU1cRZA4?,2V1d2@211N.$4s2sI2)I$O%6QCU1grQj4?,2V1-Q.011N.M4s2sI2)I-R%6QCU1h/]l4?,2U0g6%/11N.O4s2sI2)I6U%6QCU1hAin4?,2V1Hl7111N.Q4s2sI2)Af-%6QCU2)%3:4?,2U@Qk5`11N0r4s2sI2)d6R%6QCU2)7?<4?,2TANgPc11N0t4s2sI2)]#0%6QCU2)IK>4?,2W2*MI311N1!4s2sI2)R6T%6QCU2)[W@4?,2V2a.[511N1#4s2sI2)[-P%6QCU2)mcB4?,2X@m1>a11N1%4s2sI2)[?V%6QCU2.8Zk4?,2UA3LGb11N1N4s2sI2)R3S%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>LD(@m2"t3&NTO4q0V0@l7d\+?VV@2Ieo[4>LD(ANh5!3&WZN4q0V0@l7j^+?VVA2DmZ-4>LD)0KpUA3&WZO4q0V0@l?&*+?VVB@5L.W4>LD)1-QgC3&`j,4q0V0@l?,,+?VVB3+b>`4>LD)1d3$E3&`iV4q0V0@l?2.+?VVB3AWi.4>LD)2Ei6G3&`iQ4q0V0@l?80+?VVB3&j)24>LD)3''JHI3&`fO4q0V0@l?>2+?VVB3As&14>LD)@6Per3&`iW4q0V0@l@d[+?VVB2`X&24>LD)@m2"t3&`fU4q0V0@l@j]+?VVB@5C(V4>LD)ANh5!3&`fS4q0V0@lH,++?VVB3Fk;_4>LD*1-QgC3&`fR4q0V0@lH2-+?VVB3A`o/4>LD*1d3$E3&`j-4q0V0@lH8/+?VVB3FP)\4>LD*2Ei6G3&`fW4q0V0@lH>1+?VVD0kENX4>LD*3''JHI3&r`P4q0V0@lHD3+?VVD1GD!%4>LD*@m2"t3&r`Q4q0V0@lIp^+?VVD1GM''&4>LD*ANh5!3&r`L4q0V0@lJ!`+?VVD1-%N-4>LD+0KpUA3&r`M4q0V0@lQ2,+?VVD11i]Z4>LD+1-QgC3&ra(4q0V0@lQ8.+?VVD0kNTY4>LD+1d3$E3&tS*4q0V0@lQ>0+?VVlAM?:W4>LD+2Ei6G3+6AR4q0V0@lQD2+?VVlAhlOZ4>LD+@6Per3+6?.4q0V0@lRp]+?VVm0f2''''4>LD+@m2"t3+6AT4q0V0@lS!_+?VVlA7e"74>LD+ANh5!3+6DQ4q0V0@lS''a+?VVl@lQX]4>LD,0KpUA3+6?/4q0V0@lZ8-+?VVlAMH@X4>LD,1-QgC3+6AX4q0V0@lZ>/+?VVlAnF494>LD,1d3$E3+6B14q0V0@lZD1+?VVlAn!q54>LD,3''JHI3+Fs&4q0V0@lZP5+?VVnAi2a]4>LD,@6Per3+HN24q0V0@l\!^+?VVnAhcIY4>LD,@m2"t3+HPS4q0V0@l\''`+?VVnAhuU[4>LD,ANh5!3+OpW4q0V0@l\-b+?VVo2J#&]4>LDT0KpUA3+QGT4q0V0@pq)U+?VVo@5g@Z4>LDT1-QgC3+Xm%4q0V0@pq/W+?VVp1M&`Z4>LDT1d3$E3+Xm*4q0V0@pq5Y+?VVp1b_*&4>LDT2Ei6G3+Xp(4q0V0@pq;[+?VVp1H%E+4>LDT@6Per3+Xp$4q0V0@prh1+?VVp1GD!%4>LDT@m2"t3+XmX4q0V0@prn3+?VVp@UqY34>LDTANh5!3+as)4q0V0@prt5+?VVq11`WY4>LDU0KpUA3+as(4q0V0@q%/V+?VVq1GV-''4>LDU1-QgC3+as,4q0V0@q%5X+?VVq1H.K,4>LDU1d3$E3+as''4q0V0@q%;Z+?VY<2`<i/4>LDU2Ei6G3A<BP4q0V0@q%A\+?VY<2e"r[4>LDU3''JHI3A<EN4q0V0@q%G^+?VY<Ammk44>LDU@6Per3AE<G4q0V0@q&t4+?VY=3AWi.4>LDV0KpUA3AEL(4q0V0@q.5W+?VY=3+b>`4>LDV1-QgC3AWEL4q0V0@q.;Y+?VY?0kENX4>LDV1d3$E3AW?K4q0V0@q.A[+?VY?0kNTY4>LDV2Ei6G3AW?I4q0V0@q.G]+?VY?0P3KX4>LDV3''JHI3AWU&4q0V0@q.M_+?VY?1H7Q-4>LDV@6Per3AWI$4q0V0@q/t3+?VY?0k*<U4>LDV@m2"t3AWEH4q0V0@q0%5+?VY?0etp%ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>11Og*4s2sJ1GCOI%6QCU@qInI4?52S2EhR411OiK4s2sJ1GWK)%6QCUA2-7j4?52OANgPc11OiM4s2sJ1GE?''%6QCUA2?Cl4?50,@Qk5`11OiO4s2sJ1GNE(%6QCUA2QOn4?50/@6P,_11OiQ4s2sJ1GL[L%6QCUA2c[p4?50/3Bdm711OiS4s2sJ11iI/%6QCUA2ugr4?52R1d2@211Oj''4s2sJ1GCRJ%6QCUA7@_F4?52Q1d2@211Oj)4s2sJ11k,^%6QCUA7RkH4?52Q3Bdm711Oj+4s2sJ1G_$T%6QCUA7e"J4?52R2*MI311OlL4s2sJ1GWB&%6QCUAMH@k4?52P1d2@211OlN4s2sJ1GE<&%6QCUAMZLm4?52O@Qk5`11OlP4s2sJ11k)]%6QCUAMlXo4?52O3Bdm711OlR4s2sJ1GCLH%6QCUAN)dq4?50/@Qk5`11OlT4s2sJ1GLdO%6QCUAN;ps4?59.@m1>a11Om(4s2sJ2.L/\%6QCUAR[hG4?59.ANgPc11Om,4s2sJ2.AI-%6QCUAS++K4?59.Aj-Yd11OoM4s2sJ2.AF,%6QCUAhcIl4?59.A3LGb11OoO4s2sJ2ISU0%6QCUAhuUn4?5<11d2@211OoQ4s2sJ2_\])%6QCUAi2ap4?5>T1-Q.011OoS4s2sJ2_d!M%6QCUAiDmr4?5>\3Bdm711OoU4s2sJ2`Wf\%6QCUAiW$t4?5>\1d2@211Op)4s2sJ2eFa-%6QCUAn!qH4?5?43''Id611Op+4s2sJ3&<EU%6QCUAn4(J4?5AVAj-Yd11Op-4s2sJ3&<<R%6QCUAnF4L4?5DW1d2@211W''m4s2sJ3AG,0%6QCV0JPa64?5DW2a.[511W''o4s2sJ3ANTY%6QCV0Jbm84?5D^ANgPc11W''q4s2sJ3Fubc%6QCV0Ju$:4?5E5@m1>a11W''s4s2sJ3Ft''3%6QCV0K20<4?5E51d2@211W''u4s2sJ3G''s/%6QCV0KD<>4?5E51Hl7111W(I4s2sJ3FuV_%6QCV0Od3g4?5E53Bdm711W(K4s2sJ3Ft-5%6QCV0P!?i4?6hZ3Bdm711W(M4s2sJ@:Eh4%6QCV0P3Kk4?6hZ1d2@211W*n4s2sJ@:E\0%6QCV0ekj74?6h^2EhR411W*p4s2sJ@:iq3%6QCV0f)!94?6h^3Bdm711W*r4s2sJ@:hG^%6QCV0f;-;4?6k,1Hl7111W*t4s2sJ@Q6&*%6QCV0fM9=4?6k12*MI311W+!4s2sJ@Q6;1%6QCV0f_E?4?6k0@m1>a11W+J4s2sJ@Q.j^%6QCV0k*<h4?6k0@Qk5`11W+L4s2sJ@Q6,,%6QCV0k<Hj4?6k21Hl7111W+N4s2sJ@Q?2-%6QCV0kNTl4?6k20Koq.11W-o4s2sJ@Q.^Z%6QCV1,1s84?6k22*MI311W-q4s2sJ@Q.g]%6QCV1,D*:4?6k13''Id611W-s4s2sJA26#+%6QCV1,V6<4?6q,2a.[511W-u4s2sJA25i&%6QCV1,hB>4?6q,ANgPc11W."4s2sJA2,o)%6QCV1-%N@4?6q-3Bdm711W.K4s2sJA2.UY%6QCV11EEi4?6q,3''Id611W.M4s2sJA25o(%6QCV11WQk4?6q,0Koq.11W.O4s2sJA2-).%6QCV11i]m4?6q,Aj-Yd11W0p4s2sJAN2Y5%6QCV1G_3;4?6t]ANgPc11W0t4s2sJART+5%6QCV1H.K?4?6tb@6P-3DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,dA2?2/+?VYr0etp%4>LG''3BeQJ3G(''X4q0V0A2@XX+?VM91,_<*4>LG''@Qkns2)-jD4q0V0A2@^Z+?VM91,;$&4>LG''A3M+u2)-jC4q0V0A2@d\+?VM91,(m$4>LG''Aj.>"2)-jH4q0V0A2Gu(+?VM:Ai)[\4>LG(0g6^B2)[HN4q0V0A2H,,+?VM>3&Wr04>LG(2*N-F2)[EN4q0V0A2H2.+?VM>3&<`-4>LG(2a/?H2)[C)4q0V0A2H80+?VM>3&3Z,4>LG(3BeQJ2)[C*4q0V0A2I^Y+?VM>3&*T+4>LG(@Qkns2)o,)4q0V0A2Id[+?VM@A2HIZ4>LG(A3M+u2)o)X4q0V0A2Ij]+?VM@A26=X4>LG(Aj.>"2.A=O4q0V0A2Q&)+?VMj1,V6)4>LG)0g6^B2.A?s4q0V0A2Q,++?VMj1,D*''4>LG)1HlpD2.A=N4q0V0A2Q2-+?VMj1,hB+4>LG)2*N-F2.A=!4q0V0A2Q8/+?VMj11i]Z4>LG)2a/?H2.A=P4q0V0A2Q>1+?VMj2e"r[4>LG)@Qkns2.U/T4q0V0A2Rj\+?VMm2Ieo[4>LG)A3M+u2.\[S4q0V0A2Rp^+?VMn@V%_44>LG)Aj.>"2DJ\t4q0V0A2Z,*+?VP:@Pp=Y4>LG*0g6^B2DJZN4q0V0A2Z2,+?VP:AN)d^4>LG*1HlpD2DJbs4q0V0A2Z8.+?VP:AMlX\4>LG*2*N-F2DJc"4q0V0A2Z>0+?VP:AN2j_4>LG*2a/?H2DJ`R4q0V0A2ZD2+?VP=AS++84>LG*3BeQJ2Deu*4q0V0A2[j[+?VP=AMZLZ4>LG*@Qkns2DeuS4q0V0A2[p]+?VP=AMcR[4>LG*A3M+u2Deu)4q0V0A2\!_+?VP>3&*T+4>LG*Aj.>"2DmHJ4q0V0A2c2++?VP>@Q$CZ4>LG+0g6^B2Do#R4q0V0A2c8-+?VP?A26=X4>LG+1HlpD2ISRU4q0V0A2c>/+?VPj3As&14>LG+2*N-F2ISR"4q0V0A2cD1+?VPj@5U4X4>LG+2a/?H2ISR*4q0V0A2cJ3+?VPj3G(Ga4>LG+3BeQJ2ISUT4q0V0A2dp\+?VPj@50qT4>LG+@Qkns2ISUW4q0V0A2e!^+?VPj3&a#14>LG+A3M+u2ISU%4q0V0A2e''`+?VPj3+Y8_4>LG+Aj.>"2ISU''4q0V0A2l8,+?VPj3&<`-4>LG,0g6^B2IU#R4q0V0A2l>.+?VPj@5L.W4>LG,1HlpD2ISU#4q0V0A2lD0+?VPj2eG5_4>LG,2*N-F2IU#P4q0V0A2lJ2+?VPj3FP)\4>LG,2a/?H2ISR&4q0V0A2lP4+?VPj3+G,]4>LG,3BeQJ2ISU$4q0V0A2n!]+?VPk2.A`Y4>LG,@Qkns2I^**4q0V0A2n''_+?VPl0KD<+4>LG,A3M+u2J-H/4q0V0A2n-a+?VPo@6$L\4>LG,Aj.>"2J-PX4q0V0A2u>-+?VPoA2HIZ4>LG-0g6^B2J-MV4q0V0A2uD/+?VPoA7Ie44>LG-1HlpD2J-N24q0V0A2uJ1+?VPoAN)d^4>LG-2*N-F2J-MY4q0V0A2uP3+?VPoA7[q64>LG-2a/?H2J-PV4q0V0A2uV5+?VPoA7Rk54>LG-3BeQJ2J-MU4q0V0A3"''^+?VPoAN2j_4>LG-@Qkns2_eku4q0V0A3"-`+?VS;AhcIY4>LG-A3M+u2_el''4q0V0A3"3b+?VS;AhlOZ4>LG-Aj.>"2_el#4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QCV@5''kf4?#!,0Koq.11XfJ4s2sH0kE+(%6QCV@5:"h4?#&T1Hl7111XfN4s2sH1c[KY%6QCV@5^:l4?#*+1-Q.011XfP4s2sH1gsiW%6QCV@5pFn4?#)W0Koq.11XfR4s2sH1gsfV%6QCV@:;>B4?#**A3LGb11Xg&4s2sH1h&1''%6QCV@:MJD4?#**2*MI311Xg(4s2sH1gsu[%6QCV@PL%h4?#,OAj-Yd11XiL4s2sH2)mEV%6QCV@P^1j4?#/T1Hl7111XiP4s2sH2Dd?V%6QCV@Q-In4?#0,1d2@211XiR4s2sH2J"m4%6QCV@Q?Up4?#3.2*MI311Xj&4s2sH2dp/Z%6QCV@U_MD4?#3.1-Q.011Xj(4s2sH2e"^0%6QCV@UqYF4?#3.2EhR411Xj*4s2sH2e"U-%6QCV@V.eH4?#3.0g6%/11XlK4s2sH2dn[0%6QCV@kg.i4?#320Koq.11XlM4s2sH3+as1%6QCV@l$:k4?#63A3LGb11XlO4s2sH3A<3P%6QCV@lHRo4?#63Aj-Yd11XlS4s2sH3+ap0%6QCV@lZ^q4?#8S2*MI311Xm''4s2sH3+b07%6QCV@q%VE4?#63ANgPc11Xm)4s2sH3A<9R%6QCV@q7bG4?#9/@Qk5`11Xm+4s2sH3FOm2%6QCV@qInI4?$\+@m1>a11XoL4s2sH@5VLX%6QCVA2-7j4?$\+2EhR411XoN4s2sH@5U#.%6QCVA2?Cl4?$\+1d2@211XoP4s2sH@5VIW%6QCVA2QOn4?$\XANgPc11XoT4s2sH@k]c(%6QCVA2ugr4?$b(Aj-Yd11Xp(4s2sH@V.AZ%6QCVA7@_F4?$b(0Koq.11Xp*4s2sH@V049%6QCVA7RkH4?$_]@Qk5`11Xp,4s2sH@k_IX%6QCVA7e"J4?$_]1d2@211XrM4s2sH@k_@U%6QCVAMH@k4?$_]1Hl7111XrO4s2sH@k]Z%%6QCVAMZLm4?$b(3Bdm711XrQ4s2sH@k]]&%6QCVAMlXo4?$b(0g6%/11XrS4s2sH@V.S`%6QCVAN)dq4?$_]A3LGb11XrU4s2sH@k]f)%6QCVAR[hG4?$b)0Koq.11Xs+4s2sH@k_=T%6QCVARmtI4?$b]3''Id611Xs-4s2sHAMRd[%6QCVAS++K4?$h-@m1>a11XuN4s2sHAMc/+%6QCVAhcIl4?$h-1Hl7111XuP4s2sJ3&ETY%6QCVAhuUn4?$h-3''Id611XuR4s2sHAMR[X%6QCVAi2ap4?$h.3Bdm711XuT4s2sHAMc))%6QCVAiDmr4?$h.2a.[511XuV4s2sHAMQ80%6QCVAiW$t4?$h.@m1>a11Y!*4s2sHAMZ#(%6QCVAn!qH4?$h-@Qk5`11Y!,4s2sHAMZ5.%6QCVAn4(J4?$h.1d2@211Y!.4s2sHAM[aY%6QCVAnF4L4?$k/2*MI311`-n4s2sHAiF<c%6QCW0JPa64?$k2ANgPc11`-p4s2sHAiF6a%6QCW0Jbm84?$ka1d2@211`-r4s2sHAnEe^%6QCW0Ju$:4?,#M@m1>a11`-t4s2sI0k+TU%6QCW0K20<4?,''*1d2@211`.!4s2sI0k4]W%6QCW0KD<>4?,''*@6P,_11`.J4s2sI0k3()%6QCW0Od3g4?,''*2a.[511`.L4s2sI0k+WV%6QCW0P!?i4?,'',3Bdm711`.N4s2sI1,WN)%6QCW0P3Kk4?,)R@6P,_11`0o4s2sI1,WQ*%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>LJ&0g6^B3&NZO4q0V0AMGr(+?VV@3&!N*4>LJ&1HlpD3&N[-4q0V0AMH#*+?VV@@5g@Z4>LJ&2*N-F3&N]R4q0V0AMH),+?VV@@5''kS4>LJ&2a/?H3&N[)4q0V0AMH/.+?VV@@5C(V4>LJ&3BeQJ3&NX(4q0V0AMIUW+?VV@@5L.W4>LJ&@Qkns3&N^)4q0V0AMI[Y+?VV@3FtA`4>LJ&A3M+u3&NWR4q0V0AMIa[+?VV@2e,#\4>LJ&Aj.>"3&NZU4q0V0AMPr''+?VV@@50qT4>LJ''0g6^B3&NX''4q0V0AMQ#)+?VV@2`Nu14>LJ''1HlpD3&NQP4q0V0AMQ)++?VV@3+Y8_4>LJ''2*N-F3&N]S4q0V0AMQ/-+?VV@3&Wr04>LJ''2a/?H3&N[+4q0V0AMQ5/+?VV@3B9844>LJ''3BeQJ3&N^,4q0V0AMR[X+?VV@3&*T+4>LJ''@Qkns3&P,"4q0V0AMRaZ+?VV@3&3Z,4>LJ''A3M+u3&NZT4q0V0AMRg\+?VV@3&Nl/4>LJ''Aj.>"3&NWT4q0V0AMZ#(+?VV@2`<i/4>LJ(0g6^B3&N]U4q0V0AMZ)*+?VV@3A<W+4>LJ(1HlpD3&N^.4q0V0AMZ/,+?VVA2E3l04>LJ(2*N-F3&b;X4q0V0AMZ5.+?VVB@:;>/4>LJ(2a/?H3&b8V4q0V0AMZ;0+?VVB@l6FZ4>LJ(3BeQJ3&b;#4q0V0AM[aY+?VVB@:MJ14>LJ(@Qkns3&b;,4q0V0AM[g[+?VVB@Pp=Y4>LJ(A3M+u3&b;V4q0V0AM[m]+?VVB@:_V34>LJ(Aj.>"3&b>-4q0V0AMc))+?VVB@l$:X4>LJ)0g6^B3&b>&4q0V0AMc/++?VVB@q.\34>LJ)1HlpD3&b;*4q0V0AMc5-+?VVB@:h\44>LJ)2*N-F3&b>(4q0V0AMc;/+?VVB@pqP14>LJ)2a/?H3&b;''4q0V0AMcA1+?VVB@Q$CZ4>LJ)3BeQJ3&b;Y4q0V0AMdgZ+?VVB@Q6O\4>LJ)@Qkns3&b;W4q0V0AMdm\+?VVBA7[q64>LJ)A3M+u3&b;%4q0V0AMds^+?VVD1Gq?*4>LJ)Aj.>"3&rcN4q0V0AMl/*+?VVD1LiTX4>LJ*0g6^B3&rd+4q0V0AMl5,+?VVD1bh0''4>LJ*1HlpD3&riO4q0V0AMl;.+?VVD1H.K,4>LJ*2*N-F3&rfN4q0V0AMlA0+?VVD@:VP24>LJ*2a/?H3&tDZ4q0V0AMlG2+?VVD@:_V34>LJ*@Qkns3+=UR4q0V0AMms]+?VVm0fV?+4>LJ*A3M+u3+=U#4q0V0AMn$_+?VVm0ekj$4>LJ*Aj.>"3+=R!4q0V0AMu5++?VVm0Od3T4>LJ+0g6^B3+=Wu4q0V0AMu;-+?VVm0P3KX4>LJ+1HlpD3+=Tt4q0V0AMuA/+?VVm0f;-(4>LJ+2*N-F3+=R#4q0V0AMuG1+?VVm0P!?V4>LJ+2a/?H3+=R$4q0V0AMuM3+?VVm0K)*(4>LJ+3BeQJ3+=UP4q0V0AN!s\+?VVm0f)!&4>LJ+@Qkns3+=UN4q0V0AN"$^+?VVn1hJo\4>LJ+A3M+u3+Fm$4q0V0AN"*`+?VVn2_mQ+4>LJ+Aj.>"3+Fm%4q0V0AN);,+?VVn2J,,^4>LJ,0g6^B3+Fs+4q0V0AN)A.+?VVn3A`o/4>LJ,1HlpD3+HP\4q0V0AN)G0+?VVo2J,,^4>LJ,2*N-F3+XpX4q0V0AN)M2+?VVp1h8cZASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>11`C''4s2sIAMl8-%6QCW2`NuD4?-n00Koq.11`C)4s2sIAMdm\%6QCW2dnlm4?-n/2a.[511`CR4s2sIAi);-%6QCW2e,#o4?-q00Koq.11`CT4s2sJ0K:pR%6QCW2e>/q4?5)SANgPc11`CV4s2sJ0f(dQ%6QCW3&!N=4?5,V@6P,_11`F"4s2sJ0juh$%6QCW3&3Z?4?5,V@Qk5`11`F$4s2sJ0f_6X%6QCW3&EfA4?5,VAj-Yd11`F&4s2sJ0jue#%6QCW3&WrC4?5,VA3LGb11`F(4s2sJ0jub"%6QCW3&j)E4?53+0g6%/11`F*4s2sJ1H70S%6QCW3+4un4?53+Aj-Yd11`FS4s2sJ1H%''R%6QCW3+G,p4?52T2EhR411`FU4s2sJ1Gh$S%6QCW3+Y8r4?52V@m1>a11`FW4s2sJ1Gq-U%6QCW3A<W>4?52T@m1>a11`I#4s2sJ1H.3U%6QCW3ANc@4?52S3Bdm711`I''4s2sJ1H$pN%6QCW3As&D4?52UA3LGb11`I)4s2sJ1H8u1%6QCW3B02F4?52S@m1>a11`I+4s2sJ1H&Z*%6QCW3FP)o4?52V3Bdm711`IT4s2sJ1Gq*T%6QCW3Fb5q4?52T2*MI311`IV4s2sJ1GppO%6QCW3FtAs4?52SAj-Yd11`IX4s2sJ1H.$P%6QCW@5''kf4?52V2a.[511alK4s2sJ1H/c,%6QCW@5:"h4?52U0g6%/11alM4s2sJ1Gr`-%6QCW@5L.j4?52U1Hl7111alO4s2sJ1H%0U%6QCW@5^:l4?52SANgPc11alQ4s2sJ1Gq0V%6QCW@5pFn4?59/2a.[511alS4s2sJ2.J=(%6QCW@:;>B4?59/3Bdm711am''4s2sJ2.JF+%6QCW@:MJD4?59/2*MI311am)4s2sJ2.AL.%6QCW@:_VF4?5<.ANgPc11am+4s2sJ2I\@(%6QCW@PBtg4?5<.@m1>a11aoL4s2sJ2_m''N%6QCW@PU+i4?5>TAj-Yd11aoN4s2sJ2_d9U%6QCW@Pg7k4?5>TA3LGb11aoP4s2sJ2_d<V%6QCW@Q$Cm4?5>\@6P,_11aoR4s2sJ2dnF)%6QCW@Q6Oo4?5>\@m1>a11aoT4s2sJ2`YG5%6QCW@UVGC4?5>\A3LGb11ap(4s2sJ2e4d0%6QCW@UhSE4?5?21d2@211ap*4s2sJ2eFd.%6QCW@V%_G4?5AX0g6%/11ap,4s2sJ3&EHU%6QCW@k^(h4?5AX@6P,_11arM4s2sJ3&EWZ%6QCW@kp4j4?5AX2*MI311arO4s2sJ3&EET%6QCW@l-@l4?5DW2*MI311arS4s2sJ3AP#,%6QCW@lQXp4?5DX1Hl7111arU4s2sJ3AWES%6QCW@pqPD4?5DWAj-Yd11as)4s2sJ3AP,/%6QCW@q.\F4?5DX0g6%/11as+4s2sJ3AW?Q%6QCW@q@hH4?5D^3''Id611as-4s2sJ3FO^-%6QCWA2$1i4?5E10g6%/11auN4s2sJ@5''H#%6QCWA26=k4?5E6@6P,_11auP4s2sJ3G(*3%6QCWA2HIm4?5E62a.[511auR4s2sJ3G(98%6QCWA2ZUo4?5E63''Id611auT4s2sJ3G(05%6QCWA2laq4?5E6@Qk5`11b!*4s2sJ3G)bb%6QCWA7IeG4?6h(1Hl7111b!,4s2sJ@:Ee3%6QCWA7[qI4?6h^ANgPc11b!.4s2sJ@:j%6%6QCWAM?:j4?6k)0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,dAS!S[+?VYmAn+"64>LJZ1-QgC3FXg)4q0V0AS!Y]+?VYn3FP)\4>LJZ1d3$E3FZDV4q0V0AS!__+?VYn3FtA`4>LJZ2Ei6G3FY!X4q0V0AS!ea+?VYn@5^:Y4>LJZ3''JHI3FZDO4q0V0AS!kc+?VYn@5U4X4>LJZ@6Per3FZDR4q0V0AS#=7+?VYn3&Wr04>LJZ@m2"t3FZDP4q0V0AS#C9+?VYn@5''kS4>LJZANh5!3FZE/4q0V0AS#I;+?VYp1G_3(4>LJ[0KpUA3Fjs$4q0V0AS*Y\+?VYp2E*f/4>LJ[1-QgC3Fjp(4q0V0AS*e`+?VYp1GM''&4>LJ[2Ei6G3Fjp*4q0V0AS*kb+?VYp1GD!%4>LJ[3''JHI3Fjs(4q0V0AS,C8+?VYp1M&`Z4>LJ[@m2"t3Fjp)4q0V0AS,I:+?VYp1b_*&4>LJ[ANh5!3FjpV4q0V0AS,O<+?VSpAi2a]4>LM&0KpUA3FjmU4q0V0AhYr''+?VYq3+4u[4>LM&1-QgC3Ft014q0V0AhZ#)+?VYq3+P2^4>LM&1d3$E3FuYR4q0V0AhZ)++?VYq@lQX]4>LM&2Ei6G3Fu`04q0V0AhZ/-+?VYqAn!q54>LM&3''JHI3Fuf74q0V0AhZ5/+?VYr1,M0(4>LM&@6Per3G($&4q0V0Ah[[X+?VYr1,;$&4>LM&@m2"t3G(-*4q0V0Ah[aZ+?VYr@5''kS4>LM&ANh5!2)-mA4q0V0Ahc#(+?VM>3B0234>LM''1-QgC2)[I)4q0V0Ahc)*+?VM>3B'',24>LM''1d3$E2)[I''4q0V0Ahc/,+?VM>3Fk;_4>LM''2Ei6G2)[HT4q0V0Ahc5.+?VMA2_[E)4>LM''3''JHI2.A@O4q0V0AhdaY+?VMl@k^(U4>LM''ANh5!2DJ`%4q0V0Ahdm]+?VP:A7e"74>LM(1-QgC2DJeu4q0V0Ahl/++?VP:ARRb34>LM(1d3$E2DJet4q0V0Ahl5-+?VP:AR[h44>LM(2Ei6G2DJ`#4q0V0Ahl;/+?VP:AN;p`4>LM(3''JHI2Df#X4q0V0AhlA1+?VP>0Jks&4>LM(@6Per2Df#V4q0V0AhmgZ+?VP=AiMs`4>LM(@m2"t2Dm0C4q0V0Ahmm\+?VP>0Jbm%4>LM(ANh5!2Df#U4q0V0Ahms^+?VP>3A`o/4>LM)0KpUA2Do#S4q0V0Ahu5,+?VP?A2la^4>LM)1d3$E2IU)Q4q0V0Ahu;.+?VPj@Q?U]4>LM)2Ei6G2IU''*4q0V0AhuA0+?VPjAMH@X4>LM)3''JHI2IU)R4q0V0AhuG2+?VPj@UVG04>LM)@m2"t2IU)S4q0V0Ai!s]+?VPj@Pg7X4>LM)ANh5!2IU$)4q0V0Ai"$_+?VPk2.\r\4>LM*0KpUA2I^/V4q0V0Ai)5++?VPl0Od3T4>LM*1-QgC2_ZpE4q0V0Ai)A/+?VS:0JPa#4>LM*2Ei6G2_ZpC4q0V0Ai)G1+?VS:0f2''''4>LM*3''JHI2_Zps4q0V0Ai*s\+?VPoAn!q54>LM*@m2"t2_[!F4q0V0Ai+$^+?VPoAn+"64>LM*ANh5!2J-P[4q0V0Ai+*`+?VS:0O[-S4>LM+0KpUA2_m''A4q0V0Ai2;,+?VS;AnF494>LM+1-QgC2_eo)4q0V0Ai2A.+?VS<0Jbm%4>LM+1d3$E2_eoT4q0V0Ai2G0+?VS=2`<i/4>LM+2Ei6G2`+u''4q0V0Ai2M2+?VS>@k^(U4>LM+3''JHI2`+u$4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QCX2*!iC4?#*,0g6%/11iCP4s2sH1h(#[%6QCX2.A`l4?#*+2EhR411iCR4s2sH1h''oX%6QCX2.Sln4?#*,1-Q.011iCT4s2sH2)-pO%6QCX2.f#p4?#,P1Hl7111iEu4s2sH2Dnu.%6QCX2DIB<4?#/V1d2@211iF"4s2sH2DmKY%6QCX2D[N>4?#/U0Koq.11iF$4s2sH2Dm9S%6QCX2DmZ@4?#/U2a.[511iF&4s2sH2Dno,%6QCX2E*fB4?#0,2EhR411iF(4s2sH2I^2\%6QCX2E<rD4?#00@m1>a11iFQ4s2sH2e+U,%6QCX2I\im4?#3.@6P,_11iFS4s2sH3A=r,%6QCX2J,,q4?#8S3Bdm711iI!4s2sH3AE3O%6QCX2_dK=4?#8T1-Q.011iI#4s2sH3AE6P%6QCX2`!W?4?#9/A3LGb11iI%4s2sH3FQD]%6QCX2`3cA4?$\+Aj-Yd11iI''4s2sH@khIW%6QCX2`EoC4?$b*3Bdm711iI)4s2sH@kfu-%6QCX2`X&E4?$b*0Koq.11iIR4s2sH@khRZ%6QCX2e"rn4?$b*A3LGb11iIT4s2sH@khLX%6QCX2e5)p4?$b*2EhR411iIV4s2sH@kp#-%6QCX2eG5r4?$b*1-Q.011iL"4s2sH@koo*%6QCX3&*T>4?$b+0Koq.11iL$4s2sHAMms]%6QCX3&<`@4?$h/0Koq.11iL&4s2sHAMlA0%6QCX3&NlB4?$h01Hl7111iL(4s2sHAMlG2%6QCX3&a#D4?$h01-Q.011iL*4s2sHAMn''`%6QCX3&s/F4?$h/0g6%/11iLS4s2sHAMu5+%6QCX3+>&o4?$h/2a.[511iLU4s2sHAMl8-%6QCX3+P2q4?$k]2*MI311iLW4s2sHAn!P[%6QCX3AE]?4?,#R2*MI311iO''4s2sI0k;t%%6QCX3AiuC4?,)RAj-Yd11iO)4s2sI1,WW,%6QCX3B'',E4?,3-1d2@211iO+4s2sI2.JO.%6QCX3B98G4?,3.0Koq.11iOT4s2sI2.JF+%6QCX3FY/p4?,3.1-Q.011iOV4s2sI2.A@*%6QCX3Fk;r4?,3-2*MI311iOX4s2sI2.C)[%6QCX3G(Gt4?,3.2a.[511jrK4s2sI2.JI,%6QCX@50qg4?,3-Aj-Yd11jrM4s2sI2.L)Z%6QCX@5C(i4?,3.ANgPc11jrO4s2sI2.JU0%6QCX@5U4k4?,3.2*MI311jrQ4s2sI2.A:(%6QCX@5g@m4?,3-2EhR411jrS4s2sI2.SI+%6QCX@6$Lo4?,5S1d2@211js''4s2sI2.AO/%6QCX@:DDC4?,3-2a.[511js)4s2sI2.C,\%6QCX@:VPE4?,5W3Bdm711js+4s2sI2e=p3%6QCX@:h\G4?,922EhR411juL4s2sI2e=a.%6QCX@PL%h4?,91@Qk5`11juN4s2sI2e?G^%6QCX@P^1j4?,92@6P,_11juP4s2sI2e=j1%6QCX@Pp=l4?,91Aj-Yd11juR4s2sI2eFj0%6QCX@Q-In4?,921d2@211juT4s2sI2e4a/%6QCX@Q?Up4?,91@m1>a11k!(4s2sI2e4^.%6QCX@U_MD4?,92A3LGb11k!*4s2sI2e4m3%6QCX@UqYF4?,921Hl7111k!,4s2sI2e4j2%6QCX@V.eH4?,913Bdm711k#M4s2sI3&!''N%6QCX@kg.i4?,931d2@211k#O4s2sI2e=s4%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>LMY1HlpD3&bAY4q0V0An*Y]+?VVD2)@E*4>LMY2*N-F3&rg)4q0V0An*__+?VVD1hJo\4>LMY2a/?H3&rg*4q0V0An*ea+?VVD1c@N,4>LMY@Qkns3&rfU4q0V0An,=7+?VVm11<?U4>LMYA3M+u3+=X%4q0V0An,C9+?VVm1,D*''4>LMYAj.>"3+=["4q0V0An3SZ+?VVm1GD!%4>LMZ0g6^B3+=[$4q0V0An3Y\+?VVm1cIT-4>LMZ1HlpD3+=XT4q0V0An3_^+?VVm1LiTX4>LMZ2*N-F3+=[T4q0V0An3e`+?VVm1GM''&4>LMZ2a/?H3+=X#4q0V0An3kb+?VVm1H.K,4>LMZ3BeQJ3+=X$4q0V0An5=6+?VVm1H%E+4>LMZ@Qkns3+=XS4q0V0An5C8+?VVm1,M0(4>LMZA3M+u3+=[Q4q0V0An5I:+?VVm1LrZY4>LMZAj.>"3+=[P4q0V0An<Y[+?VVn1bq6(4>LM[0g6^B3+Fm)4q0V0An<_]+?VVn3B9844>LM[1HlpD3+Fs.4q0V0An<e_+?VVn3B'',24>LM[2*N-F3+HQ34q0V0An<ka+?VVo0Jks&4>LM[2a/?H3+O]u4q0V0An<qc+?VVo0JG["4>LM[3BeQJ3+XsW4q0V0An>C7+?VVp2DRH*4>LM[@Qkns3+Y!%4q0V0An>I9+?VVp2)d].4>LM[A3M+u3+Xs*4q0V0An>O;+?VVp2.\r\4>LM[Aj.>"3+Y!*4q0V0AnE_\+?VVp2E*f/4>LM\0g6^B3+XsV4q0V0AnEe^+?VVp2.8ZX4>LM\1HlpD3+Y!&4q0V0AnEk`+?VVp2.Sl[4>LM\2*N-F3+Y!.4q0V0AnEqb+?VVp2)IK+4>LM\@6Per3+b!V4q0V0AnGL9+?VY=1,qH,4>LM\ANh5!3AE=$4q0V0AnGX=+?VY=@5pF[4>SZF0KpUA3AFr"4q0V10JG4F+?VY=@5g@Z4>SZF1-QgC3AFrS4q0V10JG:H+?VY=@:;>/4>SZF1d3$E3AY,%4q0V10JG@J+?VY?3+G,]4>SZF2Ei6G3AWZN4q0V10JGFL+?VY?@Q-I[4>SZF3''JHI3AW[)4q0V10JGLN+?VY?3Fk;_4>SZF@6Per3AWWT4q0V10JHs"+?VY?@5g@Z4>SZF@m2"t3AWX+4q0V10JI$$+?VY?@:;>/4>SZFANh5!3AW[,4q0V10JI*&+?VY?@5^:Y4>SZG0KpUA3AWZQ4q0V10JP:G+?VY?3&j)24>SZG1-QgC3AWZU4q0V10JP@I+?VY?3G(Ga4>SZG1d3$E3AWWK4q0V10JPFK+?VY?3+P2^4>SZG2Ei6G3AY,!4q0V10JPLM+?VY?3AE],4>SZG3''JHI3AY,"4q0V10JPRO+?VY?@5L.W4>SZG@6Per3AY)''4q0V10JR$#+?VY?@Pg7X4>SZG@m2"t3AY)"4q0V10JR0''+?VYAA2-7W4>SZH0KpUA3At>&4q0V10JY@H+?VYBA2c[]4>SZH1-QgC3AtDV4q0V10JYFJ+?VMl@kp4W4>SZH1d3$E3AtD[4q0V10JYLL+?VYBA2la^4>SZH2Ei6G3AtDY4q0V10JYRN+?VYC1,D*''4>SZH3''JHI3B&]K4q0V10JYXP+?VYC1,V6)4>SZH@6Per3B(AV4q0V10J[*$+?VYC@:_V34>SZH@m2"t3B(A+4q0V10J[0&+?VYC@:DD04>SZHANh5!3B(A''4q0V10J[6(+?VYC@:;>/ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1GCU=4s2sJ2dnI*%6QF#1GM''94?5?/2*MI31GCU?4s2sJ2e4j2%6QF#1G_3;4?5?23Bdm71GCUA4s2sJ2e4g1%6QF#1Gq?=4?5?23''Id61GCUC4s2sJ2eHJ^%6QF#1LWHi4?5B13''Id61GCUo4s2sJ3A`HS%6QF#1LiTk4?5DX@m1>a1GCUq4s2sJ3AY)-%6QF#1M&`m4?6h(Aj-Yd1GCUs4s2sJ@5).S%6QF#1b_*94?6h(3Bdm71GCX?4s2sJ@5)4U%6QF#1bq6;4?6h(1d2@21GCXA4s2sJ@50K#%6QF#1c.B=4?6h(@6P,_1GCXC4s2sJ@5''Q&%6QF#1c@N?4?6h(2a.[51GCXE4s2sJ@5''T''%6QF#1cRZA4?6h[0Koq.1GCXG4s2sJ@:Wk3%6QF#1grQj4?6k)3''Id61GCXr4s2sJ@PTr-%6QF#1hAin4?6k,2*MI31GCXt4s2sJ@PhLW%6QF#2)%3:4?6k-@m1>a1GC[@4s2sJ@PhOX%6QF#2)7?<4?6k\2a.[51GC[B4s2sJ@Uh;[%6QF#2)IK>4?6k\1Hl711GC[D4s2sJ@U`q5%6QF#2)[W@4?6k\0g6%/1GC[F4s2sJ@U_2Y%6QF#2)mcB4?6k[3''Id61GC[H4s2sJ@Uq8Y%6QF#2.8Zk4?6k[2EhR41GC[q4s2sJ@Uh5Y%6QF#2.Jfm4?6k[3Bdm71GC[s4s2sJ@U`k3%6QF#2.\ro4?6q0@m1>a1GC[u4s2sJA2Q/,%6QF#2D@<;4?6q/Aj-Yd1GC^A4s2sJA2I^Y%6QF#2DRH=4?6q0@Qk5`1GC^C4s2sJA2IaZ%6QF#2DdT?4?6q03Bdm71GC^E4s2sJA2Q8/%6QF#2E!`A4?6q/@m1>a1GC^G4s2sJA2Q;0%6QF#2E3lC4?6q01-Q.01GC^I4s2sJA2Q2-%6QF#2IScl4?6q0Aj-Yd1GC^r4s2sJA2Q>1%6QF#2Ieon4?6q0@6P,_1GC^t4s2sJAN46b%6QF#2J#&p4?6t4@m1>a1GC_!4s2sJARoC:%6QF#2_[E<4?7"-0g6%/1GCaB4s2sJAhYo&%6QF#2_mQ>4?7".2EhR41GCaD4s2sJAhl5-%6QF#2`*]@4?7"/@Qk5`1GCaF4s2sJAhmdY%6QF#2`<iB4?7"/3Bdm71GCaH4s2sJAhl>0%6QF#2`NuD4?7"1@m1>a1GCaJ4s2sJAi2G0%6QF#2e,#o4>elS2EhR41GCau4s2sF11iI/%6QF#2e>/q4>ep(1d2@21GCb"4s2sF2IU&Y%6QF#3&!N=4>f$*A3LGb1GCdE4s2sF2IU#X%6QF#3&EfA4>f$*@m1>a1GCdG4s2sF3+QG]%6QF#3&WrC4>f*/A3LGb1GCdI4s2sF3+QJ^%6QF#3&j)E4>f,R1-Q.01GCdu4s2sFA7IDZ%6QF#3+P2q4>g\/0Koq.1GCe"4s2sFAn#@9%6QF#3+b>s4>np+@Qk5`1GCgC4s2sG2)$sQ%6QF#3AE]?4>o&O0Koq.1GCgE4s2sG2)&Q)%6QF#3AWiA4>o&N3Bdm71GCgG4s2sG2)&N(%6QF#3AiuC4>o&NANgPc1GCgI4s2sG2)mEV%6QF#3B'',E4>o''-ANgPc1GCgK4s2sG2.U5]%6QF#3B98G4>o*.ANgPc1GCgt4s2sG@:_A]%6QF#3FY/p4>pVZ0Koq.1GCh!4s2sG@:Ne2%6QF#3Fk;r4>pVY0g6%/1GCh#4s2sG@:VA^%6QF#3G(Gt4>pVX@Qk64DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e0OZY!+?VPjA7e"74>S["0g6^B2IU-+4q0V10OZ_#+?VPjA2$1V4>S["1HlpD2IU0+4q0V10OZe%+?VPj@qIn64>S["2*N-F2IU*+4q0V10OZk''+?VPjA7[q64>S["2a/?H2I\Qu4q0V10OZq)+?VPk@PBtT4>S["3BeQJ2IeFN4q0V10O\BR+?VS:0f_E,4>S["@Qkns2_[!G4q0V10O\HT+?VS:1,(m$4>S["A3M+u2_ZsE4q0V10O\NV+?VS:11EEV4>S[#1-QgC2_[!I4q0V10Och%+?VS:0fM9*4>S[#1d3$E2_[!D4q0V10Ocn''+?VS:0k3BV4>S[#2Ei6G2_m''s4q0V10Oct)+?VS<0O[-S4>S[#3''JHI2_m''G4q0V10Od%++?VS<0JYg$4>S[#@6Per2_m''E4q0V10OeQV+?VS<@5L.W4>S[#ANh5!2_net4q0V10OeWX+?VS<@50qT4>S[$0KpUA2`,#R4q0V10Olh$+?VS>@l6FZ4>S[$1-QgC2`+u&4q0V10Oln&+?VS>@l$:X4>S[$1d3$E2`3<J4q0V10Olt(+?VS@2D@<(4>S[$3''JHI2`G5''4q0V10Om+,+?VSAAhcIY4>S[$@6Per2`WU''4q0V10OnQU+?VSC0k*<U4>S[$@m2"t2`WWJ4q0V10OnWW+?VSC0k3BV4>S[$ANh5!2`WTO4q0V10On]Y+?VSC0kENX4>S[%0KpUA2`Y>$4q0V10Out''+?VSm1G_3(4>S[%1d3$E2e+XR4q0V10P!%)+?VSm1H@W.4>S[%2Ei6G2e+UQ4q0V10P!+++?VSm1L`NW4>S[%3''JHI2e-E/4q0V10P!1-+?VSmARRb34>S[%@6Per2e=p+4q0V10P"WV+?VSo2`3c.4>S[%@m2"t2e=p-4q0V10P"]X+?VSo2_[E)4>S[%ANh5!2e=p,4q0V10P"cZ+?VSo2J,,^4>S[&0KpUA2e=pV4q0V10P)t&+?VSo2_mQ+4>S[&1-QgC2e=p)4q0V10P*%(+?VSo2E3l04>S[&1d3$E2eFmU4q0V10P*+*+?VSp1grQW4>S[&2Ei6G2eG$*4q0V10P*1,+?VSp3&Wr04>S[&3''JHI2eHMX4q0V10P+]W+?VV;2`Nu14>S[&@m2"t3&+r&4q0V10P+cY+?VV<A2QO[4>S[&ANh5!3&30s4q0V10P+i[+?VV=2DdT,4>S[''0KpUA3&3BH4q0V10P3%''+?VV=2D[N+4>S[''1-QgC3&P8V4q0V10P3+)+?VV@AhcIY4>S[''1d3$E3&P8X4q0V10P31++?VV@A2ug_4>S[''2Ei6G3&P8%4q0V10P37-+?VV@AN2j_4>S[''3''JHI3&P5T4q0V10P3=/+?VV@A2c[]4>S[''@6Per3&P8W4q0V10P4cX+?VV@AhlOZ4>S[''@m2"t3&P;-4q0V10P4iZ+?VV@A2la^4>S[''ANh5!3&P5Y4q0V10P4o\+?VV@AMZLZ4>S]G0KpUA3&P5V4q0V10eb=G+?VV@A2-7W4>S]G1-QgC3&P;%4q0V10ebCI+?VV@AMu^]4>S]G1d3$E3&P8Z4q0V10ebIK+?VV@A7[q64>S]G2Ei6G3&P8&4q0V10ebOM+?VVC0JG["4>S]G3''JHI3&bGX4q0V10ebUO+?VVC0Jbm%4>S]G@m2"t3&iTP4q0V10ed-%+?VVC0Om9U4>S]GANh5!3&iU$4q0V10ed3''+?VVC0K)*(4>S]H0KpUA3&bGZ4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QF$0ekj74?,;S3''Id61GLU>4s2sI2eHYc%6QF$0f)!94?,;S@6P,_1GLU@4s2sI3&!*O%6QF$0f;-;4?,>Z1-Q.01GLUD4s2sI3Ai`Z%6QF$0f_E?4?,>Z0g6%/1GLUm4s2sI3Ak;1%6QF$0k*<h4?,>Y3''Id61GLUo4s2sI3Ak>2%6QF$0k<Hj4?,>Y3Bdm71GLUq4s2sI3B/u^%6QF$0kNTl4?,?12a.[51GLX=4s2sI3FXm1%6QF$1,1s84?,?52EhR41GLX?4s2sI@Poi''%6QF$1,D*:4?-e,3''Id61GLXA4s2sI@PhLW%6QF$1,V6<4?-e,0Koq.1GLXC4s2sI@Por*%6QF$1,hB>4?-e-2EhR41GLXE4s2sI@Pou+%6QF$1-%N@4?-e,@Qk5`1GLXn4s2sI@Pp#,%6QF$11EEi4?-e-0g6%/1GLXp4s2sI@Pfi(%6QF$11WQk4?-e-1-Q.01GLXr4s2sI@Pp).%6QF$11i]m4?-h-1Hl711GL[>4s2sI@lH>1%6QF$1GM''94?-h02EhR41GL[@4s2sI@l[s]%6QF$1Gq?=4?-k*3Bdm71GL[D4s2sIA78t3%6QF$1H.K?4?-k[@6P,_1GL[F4s2sIA79"4%6QF$1H@WA4?-k[@Qk5`1GL[o4s2sIAN"''_%6QF$1L`Nj4?-n23''Id61GL[q4s2sIAN)D/%6QF$1LrZl4?-n1@6P,_1GL[s4s2sIAN"-a%6QF$1M/fn4?-n2@Qk5`1GL^?4s2sIARdJZ%6QF$1bh0:4?-q11-Q.01GL^A4s2sIAi2;,%6QF$1c7H>4?-q11Hl711GL^E4s2sIAn!S\%6QF$1cIT@4?5,Q0Koq.1GL^G4s2sJ0f*E*%6QF$1c[`B4?5-*0Koq.1GL^p4s2sJ0k"TV%6QF$1h&Wk4?53.ANgPc1GL^r4s2sJ1Li@-%6QF$1h8cm4?53-Aj-Yd1GL^t4s2sJ1Li1(%6QF$1hJoo4?53.@6P,_1GLa@4s2sJ1Lr1''%6QF$2).9;4?5303Bdm71GLaB4s2sJ1M(&[%6QF$2)@E=4?53-@m1>a1GLaD4s2sJ1LrL0%6QF$2)RQ?4?53+3Bdm71GLaF4s2sJ1M&I.%6QF$2)d]A4?53-@6P,_1GLaH4s2sJ1Lr=+%6QF$2*!iC4?53/ANgPc1GLaq4s2sJ1M&@+%6QF$2.A`l4?53.2*MI31GLas4s2sJ1Li7*%6QF$2.Sln4?53-ANgPc1GLau4s2sJ1Li+&%6QF$2.f#p4?53.1-Q.01GLdA4s2sJ1LW.)%6QF$2DIB<4?53/2a.[51GLdC4s2sJ2)f&0%6QF$2DmZ@4?5<20g6%/1GLdG4s2sJ2_mBW%6QF$2E<rD4?5>U3''Id61GLdr4s2sJ2_m9T%6QF$2I\im4?5?01Hl711GLdt4s2sJ2e"^0%6QF$2Inuo4?5?02EhR41GLgC4s2sJ3&P20%6QF$2_mQ>4?5AY3Bdm71GLgE4s2sJ3&P51%6QF$2`*]@4?5AY2a.[51GLgG4s2sJ3+?J`%6QF$2`<iB4?5B1A3LGb1GLgI4s2sJ3+?>\%6QF$2`NuD4?5B1ANgPc1GLgK4s2sJ3A`]Z%6QF$2dnlm4?5DY2a.[51GLgt4s2sJ3A`NU%6QF$2e>/q4?6h)@6P,_1GLh#4s2sJ@50W''%6QF$3&!N=4?6h*2*MI31GLjD4s2sJ@52:V%6QF$3&3Z?4?6h*1d2@21GLjF4s2sJ@524T%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>S]O1d3$E3FOZu4q0V10fV$S+?VYm1,(m$4>S]O2Ei6G3FO[%4q0V10fV*U+?VYm1,D*''4>S]O3''JHI3FOXR4q0V10fV0W+?VYm0k3BV4>S]O@6Per3FOX!4q0V10fWW++?VYm@kp4W4>S]O@m2"t3FX[O4q0V10fW]-+?VYn0O[-S4>S]OANh5!3FX[R4q0V10fWc/+?VYn0Om9U4>S]P0KpUA3FXd''4q0V10f_$R+?VYnAM?:W4>S]P1d3$E3FZN14q0V10f_*T+?VYnAMcR[4>S]P2Ei6G3FZPX4q0V10f_0V+?VYnAMQFY4>S]P3''JHI3FZSS4q0V10f_6X+?VYnA2HIZ4>S]P@6Per3FZMX4q0V10f`],+?VYnARdn54>S]P@m2"t3FZN/4q0V10f`c.+?VYnA2ug_4>S]PANh5!3FZPW4q0V10f`i0+?VYnA2QO[4>S^#0KpUA3FZPS4q0V10jue#+?VYnA77Y24>S^#1-QgC3Fk''-4q0V10juk%+?VYp3&*T+4>S^#1d3$E3Fk*X4q0V10juq''+?VYp3&Ef.4>S^#2Ei6G3Fk*/4q0V10k!")+?VYp2_dK*4>S^#3''JHI3Fk*''4q0V10k!(++?VYp2`Nu14>S^#@6Per3Fk*-4q0V10k"TV+?VYp2e5)]4>S^#ANh5!3Fk$W4q0V10k)k$+?VYp2_[E)4>S^$1-QgC3Fk$.4q0V10k)q&+?VYp3&Nl/4>S^$1d3$E3Fk'')4q0V10k*"(+?VYp2e"r[4>S^$2Ei6G3Fk*)4q0V10k*(*+?VYp2J,,^4>S^$3''JHI3Fk''/4q0V10k*.,+?VYp2eG5_4>S^$@6Per3Fk*.4q0V10k+TU+?VYp2E3l04>S^$@m2"t3Ft3-4q0V10k+ZW+?VYq3AE],4>S^$ANh5!3Fu\S4q0V10k+`Y+?VYqAn+"64>S^%0KpUA3G($W4q0V10k3"''+?VYr1h8cZ4>S^%2a/?H2)@$I4q0V10k31,+?VM>@PU+V4>S^%3BeQJ2)\o$4q0V10k4WU+?VM>@P^1W4>S^%@Qkns2)o/''4q0V10k4]W+?VMj1c7H+4>S^&1HlpD2DJf(4q0V10k<+)+?VP>0fM9*4>S^&2*N-F2Dm3I4q0V10k<1++?VP>0f;-(4>S^&2a/?H2Dm3F4q0V10k<7-+?VP>A7e"74>S^&3BeQJ2E#,+4q0V10k=cX+?VPjAhuU[4>S^&A3M+u2IU2O4q0V10k=iZ+?VPjARRb34>S^&Aj.>"2IU/V4q0V10kE%&+?VPjAiW$a4>S^''0g6^B2IU2P4q0V10kE1*+?VS:1LiTX4>S^''2*N-F2_[$F4q0V10kE7,+?VS:11i]Z4>S^''2a/?H2_[$H4q0V10kE=.+?VS:1Gh9)4>S^''3BeQJ2_[$B4q0V10kFcW+?VS:1bq6(4>S^''@Qkns2_[$I4q0V10kFiY+?VS:1M/f[4>S^''A3M+u2_[$r4q0V10kFo[+?VS:1H@W.4>S^''Aj.>"2_[!q4q0V10kN+''+?VS:1b_*&4>S^(0g6^B2_[$s4q0V10kN1)+?VS:1G_3(4>S^(1HlpD2_[''C4q0V10kN=-+?VS<@5pF[4>S^(2a/?H2`!C''4q0V10kNC/+?VS=2e,#\4>S^(3BeQJ2`+uP4q0V10kOiX+?VS@@:DD04>S^(@Qkns2`>)Q4q0V10kOoZ+?VS@@V%_44>S^(A3M+u2`>5X4q0V10kOu\+?VSA@q.\3ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1GNKR4s2sH2e-D_%6QF%0JG[54?#3/Aj-Yd1GUX=4s2sH2e-A^%6QF%0JYg74?#321-Q.01GUX?4s2sH3ANHU%6QF%0Jks94?#8U1Hl711GUXC4s2sH3ANET%6QF%0K;6=4?#8U3Bdm71GUXE4s2sH3FXa-%6QF%0O[-f4?$\,ANgPc1GUXp4s2sH@:hG^%6QF%0P*Ej4?$b,3Bdm71GUXr4s2sH@l-//%6QF%0ebd64?$b,@6P,_1GU[>4s2sH@l-,.%6QF%0etp84?$b,2*MI31GU[@4s2sH@qB48%6QF%0f2'':4?$h1@Qk5`1GU[B4s2sHAN+0a%6QF%0fD3<4?$h20g6%/1GU[D4s2sHAN2A-%6QF%0fV?>4?$k]@6P,_1GU[F4s2sHAnGX=%6QF%0k!6g4?,#R3Bdm71GU[o4s2sI0k=`W%6QF%0k3Bi4?,''+3Bdm71GU[s4s2sI2DR$O%6QF%1,(m74?,31Aj-Yd1GU^?4s2sI2D?jL%6QF%1,;$94?,31ANgPc1GU^A4s2sI2DJZ)%6QF%1,M0;4?,5Q0Koq.1GU^C4s2sI2.ea1%6QF%1,_<=4?,5Q1d2@21GU^E4s2sI2D@-T%6QF%1,qH?4?,5Q2*MI31GU^G4s2sI2DAW)%6QF%11<?h4?,31A3LGb1GU^p4s2sI3&*EW%6QF%11`Wl4?,;T2a.[51GU^t4s2sI3&*3Q%6QF%1GD!84?,;T2EhR41GUa@4s2sI3ArZW%6QF%1GV-:4?,>Z2EhR41GUaB4s2sI3FY!4%6QF%1Gh9<4?,?52a.[51GUaD4s2sI@Q#o(%6QF%1H%E>4?-e.@6P,_1GUaF4s2sI@Pq[[%6QF%1H7Q@4?-e.3''Id61GUaH4s2sI@Q$#+%6QF%1LWHi4?-e.2*MI31GUaq4s2sI@Q$//%6QF%1LiTk4?-e.A3LGb1GUas4s2sIA79%5%6QF%1M&`m4?-n32EhR41GUau4s2sIAN2Y5%6QF%1b_*94?-n31d2@21GUdA4s2sIAi2S4%6QF%1c.B=4?-q12*MI31GUdE4s2sIAi2P3%6QF%1c@N?4?-q1@6P,_1GUdG4s2sJ0K<T,%6QF%1cRZA4?5,Q1Hl711GUdI4s2sJ0f1UK%6QF%1grQj4?5-*2a.[51GUdr4s2sJ0k*"(%6QF%1hAin4?55P@Qk5`1GUe!4s2sJ1bgdM%6QF%2)%3:4?530@Qk5`1GUgB4s2sJ1bpaK%6QF%2)7?<4?55PAj-Yd1GUgD4s2sJ1bggN%6QF%2)IK>4?530ANgPc1GUgF4s2sJ1bgjO%6QF%2)[W@4?55Q0Koq.1GUgH4s2sJ1bq$S%6QF%2)mcB4?55Q3Bdm71GUgJ4s2sJ1b`H(%6QF%2.8Zk4?5302*MI31GUgs4s2sJ1b^UI%6QF%2.Jfm4?5302a.[51GUgu4s2sJ1b^jP%6QF%2.\ro4?55PANgPc1GUh"4s2sJ1bgmP%6QF%2D@<;4?55Q1-Q.01GUjC4s2sJ1M1&Z%6QF%2DRH=4?55P3Bdm71GUjE4s2sJ1M/U1%6QF%2DdT?4?55S@m1>a1GUjG4s2sJ1b`?%%6QF%2E!`A4?530Aj-Yd1GUjI4s2sJ1M1,\%6QF%2E3lC4?55P@m1>a1GUjK4s2sJ1M/O/%6QF%2IScl4?55Q0g6%/1GUjt4s2sJ1b^gO%6QF%2Ieon4?590ANgPc1GUk!4s2sJ2.\I*%6QF%2J#&p4?590Aj-Z8DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e1,gpO+?VYC@Q?U]4>S`O1-QgC3B(DV4q0V11,h''S+?VYD2D@<(4>S`O3''JHI3B/m.4q0V11,iZ++?VYE2)%3''4>S`O@m2"t3B8p-4q0V11,i`-+?VYE2*!i04>S`OANh5!3B8p+4q0V11,if/+?VYE1h&WX4>S`P0KpUA3B8rQ4q0V11,q!P+?VYm1GV-''4>S`P1-QgC3FO^#4q0V11,q''R+?VYm1GM''&4>S`P1d3$E3FO[Q4q0V11,q-T+?VYm11<?U4>S`P2Ei6G3FO^%4q0V11,q3V+?VYm1-%N-4>S`P3''JHI3FO[S4q0V11,q9X+?VYm1H7Q-4>S`P@6Per3FO[R4q0V11,r`,+?VYm@lHR\4>S`P@m2"t3FQE+4q0V11,rf.+?VYm@l?L[4>S`PANh5!3FX]s4q0V11,rl0+?VYn0etp%4>S`Q0KpUA3FX]t4q0V11-%''Q+?VYo0Od3T4>S`Q1-QgC3Faa&4q0V11-%-S+?VYnAiDm_4>S`Q1d3$E3Faa#4q0V11-%3U+?VYo0etp%4>S`Q2Ei6G3FZS[4q0V11-%9W+?VYo1b_*&4>S`Q3''JHI3Faa%4q0V11-%?Y+?VYo0P*EW4>S`Q@6Per3Faa$4q0V11-&f-+?VYo0fM9*4>S`Q@m2"t3Fad#4q0V11-&l/+?VYo0KD<+4>S`QANh5!3Fk-^4q0V11-&r1+?VYp3B9844>Sa$0KpUA3FlPT4q0V111;n$+?VYp3Fk;_4>Sa$1-QgC3Fk-*4q0V111;t&+?VYp3B0234>Sa$1d3$E3Fk-(4q0V111<%(+?VYp3FY/]4>Sa$2Ei6G3FlPP4q0V111<+*+?VYp3A`o/4>Sa$3''JHI3Fk-[4q0V111<1,+?VYp@:;>/4>Sa$@6Per3Fk-/4q0V111=WU+?VYp@50qT4>Sa$@m2"t3Fk-Y4q0V111=]W+?VYp@5:"U4>Sa$ANh5!3FlPX4q0V111=cY+?VYp3FtA`4>Sa%0KpUA3FlPS4q0V111Dt%+?VYp@V.e54>Sa%1-QgC3FlPY4q0V111E%''+?VYp3As&14>Sa%2Ei6G3Ft324q0V111E1++?VYq3FY/]4>Sa%3''JHI3Ft3Z4q0V111E7-+?VYqAMlX\4>Sa%@6Per3FubY4q0V111F]V+?VYqAN)d^4>Sa%@m2"t3Fub[4q0V111FcX+?VYr1GD!%4>Sa%ANh5!3G($X4q0V111FiZ+?VYr2.A`Y4>Sa&0KpUA3G(0''4q0V111N%&+?VYr2.\r\4>Sa&1-QgC3G(-Z4q0V111N+(+?VYr2*!i04>Sa&1d3$E3G(9+4q0V111N1*+?VM91LWHV4>Sa&2Ei6G2)-mI4q0V111N7,+?VM:3B0234>Sa&3''JHI2)70N4q0V111N=.+?VM>@l$:X4>Sa&@m2"t2.AC%4q0V111OiY+?VMj1cIT-4>Sa&ANh5!2.U3+4q0V111Oo[+?VMl@qIn64>Sa''0KpUA2.^AS4q0V111W+''+?VP:An4(74>Sa''1-QgC2Dm3u4q0V111W1)+?VPk0JYg$4>Sa''1d3$E2IU3-4q0V111W7++?VPk0Jbm%4>Sa''2Ei6G2IU2W4q0V111W=-+?VPk0JG["4>Sa''@6Per2_[''s4q0V111Xu\+?VS<0k<HW4>Sa(0KpUA2_m*r4q0V111`1(+?VS<0f_E,4>Sa(1-QgC2`!C(4q0V111`7*+?VS?0fM9*4>Sa(1d3$E2`<R&4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QF%AMlXo4?#300Koq.1GWN"4s2sH3AP,/%6QF%AN)dq4?#8V0g6%/1GWN$4s2sH3AP21%6QF%AN;ps4?$b-1d2@21GWNM4s2sH@l6&+%6QF%AR[hG4?$b^1-Q.01GWNO4s2sHAN4*^%6QF%AS++K4?$h2@Qk5`1GWPr4s2sHAN2S3%6QF%AhcIl4?$h2A3LGb1GWPt4s2sHAi+$^%6QF%AhuUn4?$k]@Qk5`1GWQ!4s2sI0JbCH%6QF%Ai2ap4?,''+A3LGb1GWQ#4s2sI2DI0T%6QF%AiDmr4?,5S@6P,_1GWQ%4s2sI2DR0S%6QF%AiW$t4?,5RAj-Yd1GWQN4s2sI2DR''P%6QF%An!qH4?,5R@m1>a1GWQP4s2sI2DI3U%6QF%An4(J4?,5S2a.[51GWQR4s2sI2DSi-%6QF%AnF4L4?,5S0g6%/1G^^=4s2sI2DQsM%6QF&0JPa64?,5S3Bdm71G^^?4s2sI2DJc,%6QF&0Jbm84?,5S2*MI31G^^A4s2sI3&3KX%6QF&0Ju$:4?,;TA3LGb1G^^C4s2sI3&+l+%6QF&0K20<4?,;U0Koq.1G^^E4s2sI3&3<S%6QF&0KD<>4?,;T@m1>a1G^^n4s2sI3&4r,%6QF&0Od3g4?,;W@6P,_1G^^p4s2sI3AtD3%6QF&0P!?i4?,>Z3Bdm71G^^r4s2sI3AtG4%6QF&0P3Kk4?,>Z@Qk5`1G^a>4s2sI3G)\`%6QF&0ekj74?-e/3Bdm71G^a@4s2sI@Q-81%6QF&0f)!94?-e,2*MI31G^aD4s2sIA2,c%%6QF&0fM9=4?-k+1d2@21G^aF4s2sIA79(6%6QF&0f_E?4?-n3ANgPc1G^ao4s2sIAN40`%6QF&0k*<h4?-q1ANgPc1G^aq4s2sIAi4$]%6QF&0k<Hj4?-q1A3LGb1G^as4s2sJ0f1dP%6QF&1,1s84?5-*3Bdm71G^dA4s2sJ1c&`-%6QF&1,D*:4?55S@Qk5`1G^dC4s2sJ1c%$R%6QF&1,V6<4?55R3Bdm71G^dE4s2sJ1c&Z+%6QF&1,hB>4?55S0Koq.1G^dG4s2sJ1c%-U%6QF&1-%N@4?55R@6P,_1G^dp4s2sJ1c%''S%6QF&11EEi4?55R@m1>a1G^dr4s2sJ1c-mM%6QF&11WQk4?55S0g6%/1G^dt4s2sJ2.\X/%6QF&11i]m4?5911d2@21G^g@4s2sJ2.\R-%6QF&1GM''94?5>V2*MI31G^gB4s2sJ2`"l+%6QF&1G_3;4?5?0Aj-Yd1G^gD4s2sJ2e=^-%6QF&1Gq?=4?5AZ1d2@21G^gF4s2sJ3+Fs4%6QF&1H.K?4?5B22EhR41G^gH4s2sJ3+FX+%6QF&1H@WA4?5DZ3''Id61G^gq4s2sJ3Ai]Y%6QF&1L`Nj4?6h+3Bdm71G^gs4s2sJ@5DFX%6QF&1LrZl4?6h,2EhR41G^gu4s2sJ@5Kf)%6QF&1M/fn4?6h,1-Q.01G^jA4s2sJ@5K]&%6QF&1bh0:4?6h+@6P,_1G^jC4s2sJ@5DLZ%6QF&1c%<<4?6h[A3LGb1G^jE4s2sJ@PK`(%6QF&1cIT@4?6k*2EhR41G^jI4s2sJ@P_FV%6QF&1c[`B4?6k.1-Q.01G^jr4s2sJ@kqLW%6QF&1h&Wk4?6n+A3LGb1G^jt4s2sJ@khIW%6QF&1h8cm4?6n,@m1>a1G^k!4s2sJ@koi(%6QF&2).9;4?6n,1d2@21G^mD4s2sJ@koc&%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>ScN1HlpD3FlSX4q0V11Gq!Q+?VYp@Q$CZ4>ScN2*N-F3FlT/4q0V11Gq''S+?VYp@kg.V4>ScN2a/?H3FlVY4q0V11Gq-U+?VYp@pqP14>ScN3BeQJ3FlW34q0V11GrT)+?VYp@V%_44>ScN@Qkns3FlVW4q0V11GrZ++?VYp@l$:X4>ScNA3M+u3FlT.4q0V11Gr`-+?VYp@Pp=Y4>ScNAj.>"3FlW24q0V11H%!P+?VYp@:MJ14>ScO1HlpD3FlVZ4q0V11H%''R+?VYp@PL%U4>ScO2*N-F3FlQ/4q0V11H%-T+?VYp@q.\34>ScO2a/?H3FlST4q0V11H%3V+?VYp@q7b44>ScO3BeQJ3FlSS4q0V11H&Z*+?VYq2dnlZ4>ScO@Qkns3Ft3\4q0V11H&`,+?VYqAR[h44>ScOA3M+u3Fuc54q0V11H&f.+?VYqARmt64>ScOAj.>"3G(!T4q0V11H.!O+?VYr0fV?+4>ScP0g6^B3G(!S4q0V11H.''Q+?VYr1GM''&4>ScP1HlpD3G(*Z4q0V11H.-S+?VYr2DmZ-4>ScP2*N-F3G(0+4q0V11H.3U+?VYr3ANc-4>ScP2a/?H1hC,V4q0V11H.9W+?VM>@l?L[4>ScP3BeQJ2)\r%4q0V11H/`++?VM>@q%V24>ScP@Qkns2*!TM4q0V11H/l/+?VMlA2QO[4>ScPAj.>"2.U5P4q0V11H7''P+?VMmAhlOZ4>ScQ0g6^B2Dm6E4q0V11H7-R+?VP>1,(m$4>ScQ1HlpD2Dm6J4q0V11H73T+?VP>1,;$&4>ScQ2*N-F2I\@L4q0V11H7?X+?VPl0P!?V4>ScQ@m2"t2_[*E4q0V11H8u1+?VS<@6$L\4>ScR0KpUA2`!C)4q0V11H@0R+?VS>A2la^4>ScR1-QgC2`,&&4q0V11H@6T+?VS>A2ug_4>ScR1d3$E2`,&(4q0V11H@<V+?VS@2Inu\4>ScR2Ei6G2`>)T4q0V11H@BX+?VSC1Gq?*4>ScR3''JHI2`Y>(4q0V11HAo.+?VSm2)d].4>ScR@m2"t2e+^T4q0V11HAu0+?VSm2*!i04>ScRANh5!2e+^S4q0V11HB&2+?VSm2.8ZX4>Sd%0KpUA2e-GV4q0V11LW"%+?VSmAhcIY4>Sd%1-QgC2e>!(4q0V11LW(''+?VSp1hJo\4>Sd%1d3$E2eG$.4q0V11LW.)+?VV<A7[q64>Sd%2Ei6G3&3C$4q0V11LW:-+?VVA1G_3(4>Sd%@6Per3&WO%4q0V11LX`V+?VVA1GV-''4>Sd%@m2"t3&WQN4q0V11LXfX+?VVC11NKW4>Sd%ANh5!3&iZQ4q0V11LXlZ+?VVC1,_<*4>Sd&0KpUA3&i[%4q0V11L`(&+?VVC1,V6)4>Sd&1-QgC3&roP4q0V11L`.(+?VVD@V.e54>Sd&1d3$E3&tGZ4q0V11L`4*+?VVDAn!q54>Sd&2Ei6G3+=gX4q0V11L`:,+?VVm3&Ef.4>Sd&3''JHI3+=j&4q0V11L`@.+?VVm3&Wr04>Sd&@6Per3+=j)4q0V11LafW+?VVm2eG5_4>Sd&@m2"t3+Oa$4q0V11LalY+?VVp3Aiu04>Sd&ANh5!3+Y*,4q0V11Lar[+?VVp3FP)\4>Sd''0KpUA3+Y**4q0V11Li.''+?VVp3A<W+4>Sd''1d3$E3+b''&4q0V11Li:++?VVq2DRH*4>Sd''2Ei6G3AE?L4q0V11Li@-+?VY@1h/]YASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1G`N#4s2sJ1c6sN%6QF&@q%VE4?55TAj-Yd1G`NN4s2sJ1c.-T%6QF&@q7bG4?55T2*MI31G`Pq4s2sJ1c.*S%6QF&A2-7j4?5>VAj-Yd1G`Ps4s2sJ2e=d/%6QF&A2?Cl4?5AZ@6P,_1G`Pu4s2sJ3&Wc\%6QF&A2QOn4?5B2@Qk5`1G`Q"4s2sJ3AiWW%6QF&A2c[p4?5DZ@Qk5`1G`Q$4s2sJ@5MOZ%6QF&A7@_F4?6h,@m1>a1G`QO4s2sJ@5MR[%6QF&A7RkH4?6h,3''Id61G`QQ4s2sJ@5MCV%6QF&A7e"J4?6h,3Bdm71G`Sr4s2sJ@5Tf(%6QF&AMH@k4?6h-0Koq.1G`St4s2sJ@:V&U%6QF&AMZLm4?6k*3Bdm71G`T!4s2sJ@PVCV%6QF&AMlXo4?6k,@Qk5`1G`T#4s2sJ@Pp&-%6QF&AN)dq4?6k.2*MI31G`T%4s2sJ@l-)-%6QF&AN;ps4?6n.3''Id61G`TN4s2sJ@l%^\%6QF&AR[hG4?6n.1d2@21G`TP4s2sJ@l$,/%6QF&ARmtI4?6n-1Hl711G`TR4s2sJ@l,o(%6QF&AS++K4?6n-@m1>a1G`Vs4s2sJ@l$&-%6QF&AhcIl4?6n-1d2@21G`Vu4s2sJ@l#l(%6QF&AhuUn4?6n-A3LGb1G`W"4s2sJ@l$#,%6QF&Ai2ap4?6q_@Qk5`1G`W$4s2sJA7RGZ%6QF&AiDmr4?6q_ANgPc1G`W&4s2sJA7T+4%6QF&AiW$t4?6q^@Qk5`1G`WO4s2sJA7RAX%6QF&An!qH4?6q_@m1>a1G`WQ4s2sJA7RDY%6QF&An4(J4?6q_Aj-Yd1G`WS4s2sJA7[bb%6QF&AnF4L4?6q_3Bdm71Ggd>4s2sJA7RY`%6QF''0JPa64?6q_2EhR41Ggd@4s2sJA7d\_%6QF''0Jbm84?6q_2*MI31GgdB4s2sJA7T47%6QF''0Ju$:4?6t^2EhR41GgdD4s2sJAS*V[%6QF''0K20<4?7"02*MI31GgdF4s2sJAhu5,%6QF''0KD<>4?7"01-Q.01Ggdo4s2sJAi)8,%6QF''0Od3g4?7"3@Qk5`1Ggdq4s2sJAiV_4%6QF''0P!?i4?7"^1-Q.01Ggds4s2sF0f*?(%6QF''0P3Kk4>elS3Bdm71Ggg?4s2sF3+Y''5%6QF''0ekj74>f*02a.[51GggA4s2sF3B&]W%6QF''0f)!94>gS)A3LGb1GggC4s2sFA7RY`%6QF''0f;-;4?,;UAj-Yd1GggE4s2sFAi+*`%6QF''0fM9=4>nrK0g6%/1Gggp4s2sG2)70U%6QF''0k*<h4>o&P2*MI31Gggr4s2sG2*!QY%6QF''0k<Hj4>o*/@Qk5`1Ggj@4s2sG@PDCX%6QF''1,1s84>pYY@6P,_1GgjB4s2sH0K!<''%6QF''1,D*:4?"rO@6P,_1GgjD4s2sH1,:UK%6QF''1,V6<4?#&U1-Q.01GgjF4s2sH1H7*Q%6QF''1,hB>4?#&U1Hl711GgjH4s2sH2E*<R%6QF''1-%N@4?#301d2@21Ggjq4s2sH@l?80%6QF''11EEi4?$b.2EhR41Ggjs4s2sHAN;V3%6QF''11WQk4?,)S@m1>a1Ggju4s2sI2D\c*%6QF''11i]m4?,5U0Koq.1GgmA4s2sI2D[?W%6QF''1GM''94?,5T@m1>a1GgmC4s2sI2D[''O%6QF''1G_3;4?,5T@Qk5`1GgmE4s2sI2D\o.%6QF''1Gq?=4?,;V0KoqWDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e1c%$R+?VVC1GV-''4>SfM2a/?H3&i[)4q0V11c%*T+?VVC1G_3(4>SfM3BeQJ3&roU4q0V11c&Q(+?VVD2`*]-4>SfM@Qkns3&roR4q0V11c&W*+?VVDAn=.84>SfMA3M+u3+=jW4q0V11c&],+?VVm3+Y8_4>SfMAj.>"3+=jV4q0V11c-mM+?VVm3&j)24>SfN0g6^B3+Fd&4q0V11c-sO+?VVo0f_E,4>SfN1HlpD3+Y*04q0V11c.$Q+?VVq2DdT,4>SfN2*N-F3+b'')4q0V11c.*S+?VY=@UhS24>SfN2a/?H3A`WL4q0V11c.0U+?VY@2)RQ,4>SfN3BeQJ3A`U(4q0V11c/W)+?VY@2)d].4>SfN@Qkns3A`U)4q0V11c/c-+?VYD0JG["4>SfNAj.>"3FOd''4q0V11c6sN+?VYm2*!i04>SfO1d3$E3Fap%4q0V11c7-S+?VYo2)mc/4>SfO2Ei6G3Fap#4q0V11c73U+?VYo1grQW4>SfO3''JHI3FamV4q0V11c79W+?VYo1h&WX4>SfO@6Per3Fap(4q0V11c8`++?VYo2*!i04>SfO@m2"t3FamU4q0V11c8f-+?VYo1hAi[4>SfOANh5!3Fl`24q0V11c8l/+?VYpAiDm_4>SfP0KpUA3Fl]54q0V11c@''P+?VYpAMZLZ4>SfP1-QgC3Fl]14q0V11c@-R+?VYpAiMs`4>SfP1d3$E3Fl\X4q0V11c@3T+?VYpAi;g^4>SfP2Ei6G3Fl\U4q0V11c@9V+?VYpAS"%74>SfP3''JHI3Fl\Z4q0V11c@?X+?VYpAhlOZ4>SfP@6Per3Fl_U4q0V11cAf,+?VYpAMQFY4>SfP@m2"t3Fl]24q0V11cAl.+?VYpAi)[\4>SfPANh5!3Fl_X4q0V11cAr0+?VYpAN2j_4>SfQ0KpUA3Fl]34q0V11cI-Q+?VYq@kp4W4>SfQ1-QgC3Fu_T4q0V11cI9U+?VYr0K)*(4>SfQ2Ei6G3G(!U4q0V11cI?W+?VYr1H7Q-4>SfQ3''JHI3G(''+4q0V11cIEY+?VYr1H%E+4>SfQ@6Per3G(*(4q0V11cJl-+?VYr1hJo\4>SfQ@m2"t3G(3)4q0V11cJr/+?VYr2_[E)4>SfR0KpUA2)\u$4q0V11cR3R+?VM>@q7b44>SfR1-QgC2.ACR4q0V11cR9T+?VMk2Inu\4>SfR1d3$E2Dm7#4q0V11cREX+?VPk0f)!&4>SfR3''JHI2_[+$4q0V11cRKZ+?VS:2DIB)4>SfR@6Per2_[+"4q0V11cSr.+?VS:2D@<(4>SfR@m2"t2_m-E4q0V11cT#0+?VS>A7@_34>SfRANh5!2`,)''4q0V11cT)2+?VSAA2QO[4>SfS0KpUA2`WZR4q0V11c[9S+?VSC@Q-I[4>SfS1-QgC2`Y>*4q0V11c[?U+?VSm2IScY4>SfS1d3$E2e>!.4q0V11c[EW+?VSp3&s/34>SfS2Ei6G3&3C&4q0V11c[KY+?VVA1c%<)4>SfS3''JHI3&i]R4q0V11c[Q[+?VVC1H.K,4>SfS@6Per3&i]O4q0V11c]#/+?VVC1h&WX4>Sg&0g6^B3+Y*\4q0V11gr.''+?VY=@V%_44>Sg&1HlpD3AFuR4q0V11gr4)+?VY=@kp4W4>Sg&2*N-F3A`X''4q0V11gr@-+?VYBAMlX\4>Sg&3BeQJ3B&cQ4q0V11gsfV+?VYC1c%<)4>Sg&@Qkns3B&cR4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QF''@:MJD4?5?12a.[51GiNN4s2sJ2e=j1%6QF''@:_VF4?6h-ANgPc1GiNP4s2sJ@:V5Z%6QF''@PBtg4?6k.3Bdm71GiPq4s2sJ@l?,,%6QF''@PU+i4?6n02a.[51GiPs4s2sJ@l?5/%6QF''@Pg7k4?6n01-Q.01GiPu4s2sJ@l7g]%6QF''@Q$Cm4?6n00Koq.1GiQ"4s2sJAM>l''%6QF''@Q6Oo4?6qaANgPc1GiQ$4s2sJAM?&,%6QF''@UVGC4?6t,1Hl711GiQM4s2sJAM?#+%6QF''@UhSE4?6t,2*MI31GiQQ4s2sJAM?,.%6QF''@k^(h4?6qaAj-Yd1GiSr4s2sJA7f@9%6QF''@kp4j4?6t,1d2@21GiSt4s2sJARR8V%6QF''@l-@l4?7".ANgPc1GiT!4s2sJAi)D0%6QF''@lZ^q4>f$-1d2@21GiTM4s2sG2)8`,%6QF''@q%VE4>o''+3''Id61GiTQ4s2sG@PKf*%6QF''@qInI4>pY''@6P,_1GiVr4s2sH0K([M%6QF''A2-7j4?##N2EhR41GiVt4s2sH11=TT%6QF''A2QOn4?#8V3Bdm71GiW#4s2sH@l?>2%6QF''A2c[p4?$b.@Qk5`1GiW%4s2sH@qIV_%6QF''A2ugr4?$h3@6P,_1GiWN4s2sHAN;_6%6QF''A7@_F4?$h3@Qk5`1GiWP4s2sHAN;b7%6QF''AMcRn4?,>[@m1>a1GiZ#4s2sI3B(D2%6QF''AMu^p4?,?5Aj-Yd1GiZ''4s2sIARRG[%6QF''ARRbF4?-n\1d2@21GiZP4s2sIARRAY%6QF''ARdnH4?55VANgPc1GiZR4s2sJ1cAl.%6QF''AS"%J4?55VAj-Yd1GiZT4s2sJ1cI-Q%6QF''AhZCk4?55W1Hl711Gi\u4s2sJ2`*NY%6QF''AhlOm4?5A[1-Q.01Gi]"4s2sJ3AkD4%6QF''Ai)[o4?6n03''Id61Gi]$4s2sJ@l@m^%6QF''Ai;gq4?6n0A3LGb1Gi]&4s2sJAM@RW%6QF''AiMss4?6t,A3LGb1Gi](4s2sJAMGl&%6QF''AmmkG4?6t,Aj-Yd1Gi]Q4s2sJAMGr(%6QF''An+"I4?6t-0g6%/1Gi]S4s2sJARR;W%6QF''An=.K4?6tb2*MI31Gi]U4s2sJAhZ5/%6QF(0JG[54?7"12a.[51Gpj@4s2sJAiD\5%6QF(0JYg74?7"4@Qk5`1GpjB4s2sJAiF-^%6QF(0Jks94?7"43Bdm71GpjD4s2sF2_el-%6QF(0K)*;4?"rP2EhR41GpjF4s2sH@l@p_%6QF(0K;6=4?,;V@m1>a1GpjH4s2sIA7@;X%6QF(0O[-f4?-n\2EhR41Gpjq4s2sJ0k3"''%6QF(0Om9h4?55W1d2@21Gpjs4s2sJ1cIBX%6QF(0P*Ej4?55W2EhR41Gpju4s2sJ1cI9U%6QF(0ebd64?6h.0Koq.1GpmA4s2sJ@PVLY%6QF(0etp84?6n11d2@21GpmC4s2sJ@lH2-%6QF(0f2'':4?6n10g6%/1GpmE4s2sJ@lH8/%6QF(0fD3<4?6t-1d2@21GpmG4s2sJAMGu)%6QF(0fV?>4?6tb2EhR41GpmI4s2sJAh[XW%6QF(0k!6g4?7"^1d2@21Gpmr4s2sH0K(mS%6QF(0k3Bi4?"rP2*MI31Gpmt4s2sH@qIY`%6QF(0kENk4?,5W@6P,_1Gpn!4s2sI3&>,0%6QF(1,(m74?,;VA3LGb1GppB4s2sI3&>/1%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>SiM1-QgC3+=mZ4q0V12)6sO+?VVn3Fb5^4>SiM1d3$E3+ZMY4q0V12)7$Q+?VVp@lZ^^4>SiM2Ei6G3B&d(4q0V12)70U+?VYD@q.\34>SiM@6Per3B8uP4q0V12)8W)+?VYE@:DD04>SiM@m2"t3FOg&4q0V12)8c-+?VYn1,M0(4>SiN0KpUA3Fsp&4q0V12)?sN+?VYq0fM9*4>SiN1-QgC3G(*-4q0V12)@$P+?VP;0K20)4>SiN1d3$E2I\CP4q0V12)@*R+?VS<1,hB+4>SiN2Ei6G3&WU''4q0V12)@0T+?VVp@5pF[4>SiN3''JHI3A`]N4q0V12)A]*+?VYm2E<r14>SiN@m2"t3FOg*4q0V12)Ac,+?VYq0f_E,4>SiNANh5!3&WU&4q0V12)Ai.+?VVm3G(Ga4>SiO0KpUA3A`]O4q0V12)I$O+?VYo2`X&24>SiO1-QgC3FuYY4q0V12)I*Q+?VS@2`3c.4>SiO1d3$E3FOgT4q0V12)I0S+?VYo2dnlZ4>SiO2Ei6G3FspU4q0V12)I<W+?VS<1-%N-4>SiO@6Per3FuVU4q0V12)Jc++?VYr2e>/^4>SiO@m2"t3G(*.4q0V12)Ji-+?VYr3B0234>SiOANh5!An<\W4q0V12)Jo/+?VD71LiTX4>Sj''Aj.>"An<bS4q0V12.A7''+?VD:2`*]-4>Sj(0g6^BAn<bT4q0V12.A=)+?X7I1hJo\4>Sj(1HlpD0JbCB4q0V12.AC++?X7J1M&`Z4>Sj(3BeQJAnGXc4q0V12.C)[+?VG6An+"64>Sj(ANh5!AnEi.4q0V12.C/]+?X7J1LrZY4>Sj)0KpUA1,h""4q0V12E*<R+?V>70JPa#4>SlU0g6^B0JkXA4q0V12IU)Z+?VD6AN)d^4>Sm(Aj.>"1hAKu4q0V12I\@(+?X0o1b`HM@q.\34>Sm)0g6^B1hAOQ4q0V12I\F*+?X0o1b`HM3+4u[4>Sm)1HlpD2)6j@4q0V12I\L,+?VJ;3AE],4>Sm)2*N-F3G)_S4q0V12I\R.+?VM93&j)24>Sm)2a/?H3G)_T4q0V12I\X0+?X0o2.U6/0K20)4>Sm)3BeQJAnGXc4q0V12I^)Y+?X7JAn4(74>Sm)@QknsAnGXc4q0V12I^/[+?X7JAn4(74>Sm)A3M+uAnGXc4q0V12I^5]+?X7JAn4(74>Sm)Aj.>"AnGXc4q0V12IeF)+?X7JAn4(74>Sm*0g6^BAnGXc4q0V12IeL++?X7JAn4(74>Sm*1HlpDAnGXc4q0V12IeR-+?X7JAn4(74>Sm*2*N-FAnGXc4q0V12IeX/+?X7JAn4(74>Sm*2a/?HAnGXc4q0V12Ie^1+?X7JAn4(74>Sm*3BeQJAnGXc4q0V12Ig/Z+?X7JAn4(74>Sm*@QknsAnGXc4q0V12Ig5\+?X7JAn4(74>Sm*A3M+uAnGXc4q0V12Ig;^+?X7JAn4(74>Sm*Aj.>"AnGXc4q0V12InL*+?X7JAn4(74>Sm+0g6^BAnGXc4q0V12InR,+?X7JAn4(74>Sm+1HlpDAnGXc4q0V12InX.+?X7JAn4(74>Sm+2*N-FAnGXc4q0V12In^0+?X7JAn4(74>Sm+2a/?HAnGXc4q0V12Ind2+?X7JAn4(74>Sm+3BeQJAnGXc4q0V12Ip5[+?X7JAn4(74>Sm+@QknsAnGXc4q0V12Ip;]+?X7JAn4(74>Sm+A3M+uAnGXc4q0V12IpA_+?X7JAn4(7ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1H&cU4s2t"AnGR;%6QF)AM?:j4D&2;A3LGb1H&f!4s2sA0O\HT%6QF)AMQFl4D&2:1d2@21H&f#4s2t"AhZ/-%6QF)AMcRn4D&1Z1-Q.01H&f%4s2sD1,CXK%6QF)AMu^p4>JWG2EhR41H&f''4s2sC0etII%6QF)AN2jr4?#5Z0g6%/1H&f)4s2sJ11E7-%6QF)ARRbF4?,<1Aj-Yd1H&fR4s2sF3+?>\%6QF)ARdnH4>nlN1-Q.01H&fT4s2sH@pq;[%6QF)AS"%J4>gPZ@6P,_1H&fV4s2sC2)R3S%6QF)AhZCk4>JcP2EhR41H&i"4s2sC2)R<V%6QF)AhlOm4>JcP0Koq.1H&i$4s2sC2)\r.%6QF)Ai)[o4>JcP1Hl711H&i&4s2sC2)Sf+%6QF)Ai;gq4>JcP3Bdm71H&i(4s2sC2)So.%6QF)AiMss4>JcO1-Q.01H&i*4s2sC2)[9T%6QF)AmmkG4>JcO2*MI31H&iS4s2sC2)Sr/%6QF)An+"I4>JcP@6P,_1H&iU4s2sC2)[0Q%6QF)An=.K4>JcO3''Id61H&iW4s2sC2)[BW%6QF*0JG[54>JcO@Qk5`1H.!B4s2sC2)R0R%6QF*0JYg74>JcP2*MI31H.!D4s2sC2)R9U%6QF*0Jks94>JcOAj-Yd1H.!F4s2sC2)\o-%6QF*0K)*;4>JcP1-Q.01H.!H4s2sC2)RBX%6QF*0K;6=4>JcP3''Id61H.!J4s2sC2)Sl-%6QF*0O[-f4>JcO0g6%/1H.!s4s2sC2)R''O%6QF*0Om9h4D&2;A3LGb1H.!u4s2t"AnGR;%6QF*0P*Ej4D&2;A3LGb1H.""4s2t"AnGR;%6QF*0ebd64>JcS1Hl711H.$C4s2t"AnGR;%6QF*0etp84D&2;A3LGb1H.$H4s2t"AnGR;%6QF*0fM9=4D&.Z1d2@21H.$J4s2t"AMGu)%6QF*0f_E?4D&.Z2EhR41H.$s4s2t"AMH&+%6QF*0k*<h4D&2;A3LGb1H.$u4s2t"AnGR;%6QF*0k<Hj4D&2;A3LGb1H.%"4s2t"AnGR;%6QF*0kNTl4D&2;A3LGb1H.''C4s2t"AnGR;%6QF*1,1s84D&2;A3LGb1H.''E4s2t"AnGR;%6QF*1,D*:4D&2;A3LGb1H.''G4s2t"AnGR;%6QF*1,V6<4D&2;A3LGb1H.''I4s2t"AnGR;%6QF*1,hB>4D&2;A3LGb1H.''K4s2t"AnGR;%6QF*1-%N@4D&2;A3LGb1H.''t4s2t"AnGR;%6QF*11EEi4CgE.An5I`2a.[51H.(!4s2sF2e$>^%6QF*11WQk4CgE/@Us%\1Hl711H.(#4s2sH0f*B)%6QF*11i]m4CgE/2.U<10Koq.1H.*D4s2sG3FO[,%6QF*1GM''94CgE011Y!.3Bdm71H.*F4s2sF@Q-,-%6QF*1G_3;4?$\*3Bdm71H.*H4s2su3&NU)@q@AY%6QF*1Gq?=4CgE02.U3-3Bdm71H.*J4s2sH@5]u,%6QF*1H.K?4?$\-A3LGb1H.*L4s2su3&NU)A78t3%6QF*1H@WA4?$\X@Qk5`1H.*u4s2sH@:CoS%6QF*1LrZl4?#!*0g6%/1H.+$4s2su3&N^,@lS!_%6QF*1M/fn4>\d&@6P,_1H.-E4s2sH@:We1%6QF*1bh0:4?$\ZA3LGb1H.-G4s2sH@:`k2%6QF*1c%<<4>\d(Aj-Yd1H.-I4s2sF1h&4(%6QF*1c7H>4CgE/2e6DP0g6%/1H.-K4s2sH@PD7T%6QF*1cIT@4?$_,2*MI\DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e2`*KX+?VSl1-%N-4>SoQ3BeQJA2lG''A7dN,4q0V12`+r,+?X0o2)f&UAn=.84>SoQ@Qkns2e$2N4q0V12`,#.+?VSl2J,,^4>SoQA3M+u3&<R)4q0V12`,)0+?X0o2)\uW@Pg7X4>SoQAj.>"A2lGUA7IQ14q0V12`39Q+?VSlA2$1V4>SoR0g6^B3&EBF4q0V12`3?S+?VSl3ANc-4>SoR1HlpDAnGXc4q0V12`3EU+?X0o2)f&V1,(m$4>SoR2*N-FAnGXc4q0V12`3KW+?VV?3ANc-4>SoR2a/?H2e$B-4q0V12`3QY+?X7JAn4(74>SoR3BeQJ2e+X$4q0V12`5#-+?X0o2)f&U@kg.V4>SoR@Qkns2e+[$4q0V12`5)/+?VSm3&<`-4>SoRA3M+uA2lG%A7ISS4q0V12`5/1+?VSm@5^:Y4>SoRAj.>"A2lG$A7RVY4q0V12`<?R+?VSm@lZ^^4>SoS0g6^B2e->V4q0V12`<ET+?VSmAMu^]4>SoS1HlpDAnGXc4q0V12`<KV+?VSmAhuU[4>SoS2*N-F2e-GW4q0V12`<QX+?VSo2E*f/4>SoS2a/?H1c7!u4q0V12`<WZ+?X0o2.C*-1c.B*4>SoS3BeQJ2e4dV4q0V12`>).+?X0o2.C*-A2ZU\4>SoS@Qkns2e4m.4q0V12`>/0+?VSn@:DD04>SoSA3M+u2_d*G4q0V12`>52+?VSn@P^1W4>SoSAj.>"2e6GW4q0V12`EES+?X0o2)&QN2)d].4>SoT0g6^BA2lG+A7IAT4q0V12`EKU+?VSnAMcR[4>SoT1HlpD1Lr3r4q0V12`EQW+?VSnAi2a]4>SoT2*N-FA2lD''A7fF64q0V12`EWY+?VSnAMlX\4>SoT2a/?HA2lJ$A7d`14q0V12`E][+?X7JAn4(74>SoT3BeQJA2lG+A7RGM4q0V12`G//+?X0o2)o,W2.8ZX4>SoT@Qkns2e=mY4q0V12`G51+?X7JAn4(74>SoTA3M+u1c$mr4q0V12`G;3+?VY@2Ieo[4>SoTAj.>"2e=a''4q0V12`NQV+?VSp1cIT-4>SoU1HlpD2`WZP4q0V12`NWX+?X0o2)o,XA2$1V4>SoU2*N-F3B:Y*4q0V12`N]Z+?VSp3B'',24>SoU2a/?HA2lG+A7d\R4q0V12`Nc\+?VSp@5C(V4>SoU3BeQJA2lD''A7[YR4q0V12`P50+?X0o1b`HM2E3l04>SoU@Qkns1c7.#4q0V12`P;2+?X0o1h:-/2E!`.4>SoUA3M+uA2lJ$A7dW+4q0V12`PA4+?VSpAmmk44>SoUAj.>"A2lG,A7ISZ4q0V12`WQU+?X7E2.A`Y4>SoV0g6^B3&!$G4q0V12`WWW+?VV;0k<HW4>SoV1HlpDAnGXc4q0V12`W]Y+?VV;11i]Z4>SoV2*N-FA2lJ,A7ISX4q0V12`Wc[+?X0o2.C*+@l$:X4>SoV3BeQJ3&!6F4q0V12`Y;1+?X0o1c])Y0f2''''4>SoV@Qkns1c[NU4q0V12`YA3+?X0o2*#2Y1,_<*4>SoVA3M+uA2lDXA7T7-4q0V12`YG5+?X0o2*#2YAN2j_4>SoVAj.>"2E*BK4q0V12dnC(+?VV;@5g@Z4>Sp)0g6^BA2lJ&A7[SW4q0V12dnI*+?VV<0K20)4>Sp)1HlpD3&*-r4q0V12dnO,+?VM@@PBtT4>Sp)2*N-FA2lD+A7]@24q0V12dnU.+?VPl2eG5_4>Sp)2a/?HA2lG,A7IVZ4q0V12dn[0+?VP=AN)d^4>Sp)3BeQJA2lD''A7IT-4q0V12dp,Y+?VV=0fV?+4>Sp)@QknsA2lD(A7IK.4q0V12dp2[+?VPj2)@E*4>Sp)A3M+uA2lG%A7[YV4q0V12dp8]+?X0o2)8]R3Aiu04>Sp)Aj.>"1c.."4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QF*@PBtg4?,)O3Bdm71H/bt4s2su3&P,TAMl5,%6QF*@PU+i4CgE.An5F2ANgPc1H/c!4s2sEAnF%e%6QF*@Pg7k4CgE.2.U3/A3LGb1H/c#4s2sI1hAF+%6QF*@Q$Cm4?,,T1-Q.01H/c%4s2su3&bDZA2n0b%6QF*@Q6Oo4CgE/11Xp(2a.[51H/c''4s2su3&G/VA2>o''%6QF*@UVGC4CgE.2.U;X1Hl711H/cP4s2su3&G5XA7deb%6QF*@UhSE4?,*)@6P,_1H/cR4s2sG3AFu,%6QF*@V%_G4CgE1ARo=31d2@21H/cT4s2sE0k=`W%6QF*@k^(h4?,2T@Qk5`1H/eu4s2sI11W(&%6QF*@kp4j4?,,O@6P,_1H/f"4s2su3&EF%AMH),%6QF*@l-@l4CgE.2.U<.1d2@21H/f$4s2sD2IeI*%6QF*@l?Ln4CgE.@q9+/A3LGb1H/f&4s2su3&G/VA2RdZ%6QF*@lQXp4?,)T@Qk5`1H/f(4s2sI11`4)%6QF*@pqPD4?,,O3''Id61H/fQ4s2su3&G5XAN4-_%6QF*@q.\F4CgE/@Us"X1Hl711H/fS4s2su3&P,TAhZ)+%6QF*@q@hH4CgE/@:Wt12a.[51H/fU4s2su3&G/VA7K17%6QF*A2$1i4>UMWAj-Yd1H/i!4s2sI1GNE(%6QF*A26=k4>f!-@m1>a1H/i#4s2sI1H76U%6QF*A2HIm4>\oL@Qk5`1H/i%4s2su3&P/UA77>Z%6QF*A2ZUo4?,-*@m1>a1H/i''4s2t"AnGR;%6QF*A2laq4?,--1Hl711H/i)4s2su3&P/UARmV]%6QF*A77YE4>pV*2a.[51H/iR4s2sI2)Sf+%6QF*A7IeG4>SfS2EhR41H/iT4s2su3&P/UAMc/+%6QF*A7[qI4?,/T3''Id61H/iV4s2su3&NU)An<e_%6QF*AM?:j4?,/V0g6%/1H/l"4s2sDA7RJ[%6QF*AMQFl4>\m+1d2@21H/l$4s2sG@:;)Y%6QF*AMcRn4?,/S@6P,_1H/l&4s2sH3Aic[%6QF*AMu^p4D&2;A3LGb1H/l(4s2su3&P,TAiVb5%6QF*AN2jr4CgE/@Us%/2a.[51H/l*4s2su3&P/UAMc2,%6QF*ARRbF4?,0.ANgPc1H/lS4s2t"AnGR;%6QF*ARdnH4?,,W0g6%/1H/lU4s2sE1gr(%%6QF*AS"%J4?,/X1Hl711H/lW4s2sI1hAL-%6QF*AhZCk4CgE/2e6DY0g6%/1H/o#4s2sE1,L[K%6QF*AhlOm4CgE/2e6E.0Koq.1H/o%4s2sE2)I*Q%6QF*Ai)[o4?,2S1d2@21H/o''4s2sF@:h8Y%6QF*Ai;gq4>\oN1Hl711H/o)4s2sE2)7*S%6QF*AiMss4?,2W1Hl711H/o+4s2sE2).!Q%6QF*AmmkG4>o--Aj-Yd1H/oT4s2sI2DI*R%6QF*An+"I4CgE00k=iN2*MI31H/oV4s2su3&WL%AM[dZ%6QF*An=.K4?,3.0g6%/1H/oX4s2su3&P2V@lQG3%6QF+0JG[54?,5Q1-Q.01H7''C4s2su3&EL''A2l>.%6QF+0JYg74CgE/@q9(ZA3LGb1H7''E4s2su3&P2V@qIDY%6QF+0Jks94>\oR@6P,_1H7''G4s2sI2DR6U%6QF+0K)*;4>SlP3''Id61H7''I4s2su3&EO(@pq,V%6QF+0K;6=4>ep,2a.[51H7''K4s2su3&P2VAiX9`%6QF+0O[-f4?,5XANgPc1H7''t4s2t"AnGR;%6QF+0Om9h4CgE03+QN23''Id61H7(!4s2sI2e?Pa%6QF+0P*Ej4CgE.@Urt(2a.[51H7(#4s2sI2e"L*%6QF+0ebd64?,91@6P,_1H7*D4s2sI3&"r.%6QF+0etp84>f#T0g6%/1H7*F4s2sI2E#&/%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>SrO1d3$E2E3QP4q0V13&*9S+?VJ=0P3KX4>SrO3''JHIA2lGWA7T7*4q0V13&*EW+?X0o1hL9/@Q?U]4>SrO@6PerA2lGWA7T7.4q0V13&+l++?VVC2.\r\4>SrO@m2"t3&ip.4q0V13&+r-+?VJ=2.A`Y4>SrP0KpUA3&kD*4q0V13&33P+?X0o2.U600P3KX4>SrP1-QgC3&rrW4q0V13&39R+?X7JAn4(74>SrP1d3$EAnGXc4q0V13&3?T+?X7JAn4(74>SrP2Ei6G3&tD+4q0V13&3EV+?VVD@UhS24>SrP3''JHIA2lJ&A7[MR4q0V13&3KX+?VVDAN)d^4>SrP@6PerA2lGXA7RGP4q0V13&4r,+?X0o2.^<0@UqY34>SrP@m2"t3+4gW4q0V13&5#.+?VSA3AWi.4>SrPANh5!3AG,W4q0V13&5)0+?VVl3A<W+4>SrQ0KpUAA2lGXA7[VY4q0V13&<9Q+?VSkAN;p`4>SrQ1-QgCA2lGXA7dW+4q0V13&<?S+?VJ>0f)!&4>SrQ1d3$EA2lGXA7dVW4q0V13&<EU+?VS;2e,#\4>SrQ2Ei6G3+=RO4q0V13&<KW+?VVm0kNTY4>SrQ3''JHIA2lG(A7IDL4q0V13&<QY+?X0o2)SoT2DmZ-4>SrQ@6Per3+=[U4q0V13&>#-+?X7JAn4(74>SrQ@m2"t3+=^T4q0V13&>)/+?VVl@6$L\4>SrQANh5!A2lG%A7[].4q0V13&>/1+?VVm3A<W+4>SrR0KpUA3+=mW4q0V13&E?R+?VVl@:h\44>SrR1-QgCA2lD''A7]:`4q0V13&EET+?VJ=0f;-(4>SrR1d3$E3&ia,4q0V13&EKV+?VVn3FY/]4>SrR2Ei6GA2lGYA7RPS4q0V13&EQX+?X0o2.gB03+b>`4>SrR3''JHIA2lMZA7T4-4q0V13&EWZ+?VG=1,V6)4>SrR@6PerA2lGYA7RPR4q0V13&G).+?VVnA2ZU\4>SrR@m2"tA2lGYA7R\[4q0V13&G/0+?X0o2.gB0@UqY34>SrRANh5!3+Oa!4q0V13&G52+?VVo0Jbm%4>SrS0KpUAA2lD(A7RDK4q0V13&NES+?VVnA7@_34>SrS1-QgC2_[+!4q0V13&NKU+?VVo0ekj$4>SrS1d3$E1M()N4q0V13&NQW+?X0o2e?N1A2c[]4>SrS2Ei6G3+QGX4q0V13&NWY+?X0o2DAZO0JYg$4>SrS3''JHIA2lD&A7I>N4q0V13&N][+?X0o2)8]Q3+4u[4>SrS@6Per1L`:Q4q0V13&P//+?X0o2DAZP@UhS24>SrS@m2"tA2lGVA7RB(4q0V13&P51+?VSkAN)d^4>SrSANh5!3+ZN/4q0V13&P;3+?VVp@Q$CZ4>SrT0KpUA3+ZSU4q0V13&WKT+?VY>A2HIZ4>SrT1-QgC3+am*4q0V13&WQV+?VVq11WQX4>SrT1d3$EA2lJ$A7d_W4q0V13&WWX+?X0o2DJ`P0etp%4>SrT2Ei6G3+cSV4q0V13&W]Z+?VY?0Jbm%4>SrT3''JHIA2lJ,A7[c54q0V13&Wc\+?X0o1brTQ2)%3''4>SrT@6Per3+cVU4q0V13&Y50+?X7JAn4(74>SrT@m2"tA2lJ&A7T4^4q0V13&Y;2+?X0o2DJ`Q1LrZY4>SrTANh5!A2lDXA7T.Y4q0V13&YA4+?VMmAiMs`4>SrU0KpUAA2lDUA7[YS4q0V13&`QU+?VVqAiW$a4>SrU1-QgCAnGXc4q0V13&`WW+?X0o1cT#X1,V6)4>SrU1d3$E1H@EK4q0V13&`]Y+?X0o2.C*-A2c[]4>SrU2Ei6G3A<6J4q0V13&`c[+?X0o2DJ`Q1LiTX4>SrU3''JHIA2lGXA7]4]4q0V13&`i]+?VY<2DIB)4>SrU@6PerA2lJ%A7RT.4q0V13&b;1+?X0o2DJ`R0Od3TASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1H7=''4s2sJ0OZq)%6QF+2e5)p4CgE00k=lN1Hl711H7=)4s2sJ0Olq''%6QF+2eG5r4CgE00k=j,2EhR41H7?J4s2sJ0O\NV%6QF+3&*T>4D&"W2EhR41H7?L4s2sJ0fCsS%6QF+3&<`@4?5-)3Bdm71H7?N4s2sJ0k3%(%6QF+3&NlB4?$bY@m1>a1H7?P4s2su3&WO&A2?#*%6QF+3&a#D4CgE.2e6JZ3Bdm71H7?R4s2sJ1,*9''%6QF+3&s/F4>p\0Aj-Yd1H7@&4s2sJ1,L^L%6QF+3+>&o4?5/T1-Q.01H7@(4s2su3&NR(A7@P_%6QF+3+P2q4CgE011Xs+2EhR41H7@*4s2su3&G5X@l\!^%6QF+3+b>s4CgE011XuN@m1>a1H7BK4s2su3&NR(A7T.5%6QF+3AE]?4CgE.1Lt#P0g6%/1H7BM4s2sJ1GWH(%6QF+3AWiA4?52U@Qk5`1H7BO4s2su3&WO&AS!S[%6QF+3AiuC4CgE011Y!.@Qk5`1H7BQ4s2sF@:M)W%6QF+3B'',E4CgE011Xs-1-Q.01H7BS4s2su3&WO&AS!__%6QF+3B98G4>]&V2*MI31H7C''4s2sJ1,LgO%6QF+3FY/p4CgE011Y!.@m1>a1H7C)4s2su3&WR''@l$,/%6QF+3Fk;r4CgE011Y!/Aj-Yd1H7C+4s2sJ1H.*R%6QF+3G(Gt4?55U@Qk5`1H8es4s2sIAR].5%6QF+@50qg4?58Y2*MI31H8eu4s2sJ2.8C,%6QF+@5C(i4?55R2EhR41H8f"4s2sJ2.81&%6QF+@5U4k4>pe`2EhR41H8f$4s2sE11E7-%6QF+@5g@m4CgE00k=j+3''Id61H8f&4s2su3&EI&AN+*_%6QF+@6$Lo4CgE.An5I.ANgPc1H8fO4s2sE3Fl_c%6QF+@:DDC4>p\(@m1>a1H8fQ4s2sJ2E,)/%6QF+@:VPE4?5;[2EhR41H8fS4s2sE0fEN*%6QF+@:h\G4?5<.1Hl711H8ht4s2su3&P/UARmY^%6QF+@PL%h4>np)@6P,_1H8i!4s2t!1gsoY%6QF+@P^1j4?#632*MI31H8i#4s2su3&WO&AS!PZ%6QF+@Pp=l4?5</A3LGb1H8i%4s2sF1LjoY%6QF+@Q-In4>]'',0g6%/1H8i''4s2su3&P/U@q%D]%6QF+@Q?Up4CgE.0P"`R1d2@21H8iP4s2su3&N^,@kfZ$%6QF+@U_MD4CgE01h:*)Aj-Yd1H8iR4s2su3&WU(@q@M]%6QF+@UqYF4CgE/11Xs,0g6%/1H8iT4s2su3&EO(A2,r*%6QF+@V.eH4CgE.@q91*@6P,_1H8ku4s2sJ2`!0P%6QF+@kg.i4?,5U1-Q.01H8l"4s2sJ2`!?U%6QF+@l$:k4>^J#Aj-Yd1H8l$4s2sE2)Ac,%6QF+@l6Fm4>\oT2*MI31H8l&4s2su3&NI%AS!kc%6QF+@lHRo4?"rQ2*MI31H8l(4s2sF@Pff''%6QF+@lZ^q4?5>T@Qk5`1H8lQ4s2t"AnGR;%6QF+@q%VE4CgE01h:--2*MI31H8lS4s2sJ2`3NX%6QF+@q7bG4>gS)@6P,_1H8lU4s2su3&WU(A7]46%6QF+@qInI4?5>XAj-Yd1H8o!4s2sJ1bppP%6QF+A2-7j4>eg''0Koq.1H8o#4s2su3&G,U@q%A\%6QF+A2?Cl4CgE.@q9(Y@m1>a1H8o%4s2sJ2`Nf]%6QF+A2QOn4?5>\Aj-Yd1H8o''4s2sJ2e"L*%6QF+A2c[p4?5?0ANgPc1H8o)4s2sJ2e+O*%6QF+A2ugr4?5?21-Q.01H8oR4s2sJ2e=[,%6QF+A7@_F4CgE/2.U2T@m1>a1H8oT4s2sJ2e?Pa%6QF+A7RkH4?#)O@m1>a1H8oV4s2su3&WX)@l#o)%6QF+A7e"J4D&2;A3LH6DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e3+Xd-+?VYCAi2a]4>Ss.0g6^BA2lJ)A7I?)4q0V13+Xj/+?X0o2.^</2dnlZ4>Ss.1HlpD1gsoL4q0V13+Xp1+?VYD1Gh9)4>Ss.2*N-F3B/fN4q0V13+Y!3+?VYD1h&WX4>Ss.2a/?H3B/oT4q0V13+Y''5+?VGh0P*EW4>Ss.3BeQJA2lGVA7RVV4q0V13+ZM^+?VGj2).9(4>Ss.@QknsA2lD#A7[PN4q0V13+ZS`+?X0o2)&QO2.JfZ4>Ss.A3M+uA2lG(A7dMR4q0V13+ZYb+?VYD@pqP14>Ss.Aj.>"3B1J,4q0V13+aj.+?VYD@lQX]4>Ss/0g6^B3B1M-4q0V13+ap0+?VJhAnF494>Ss/1HlpDA2lGUA7RGS4q0V13+b!2+?X0o1c8fTA2?CY4>Ss/2*N-F2)Shs4q0V13+b''4+?VYDAMH@X4>Ss/2a/?H3B1S.4q0V13+b-6+?VYDARdn54>Ss/3BeQJ3AWTR4q0V13+cS_+?VYE1H@W.4>Ss/@QknsA2lG%A7[MV4q0V13+cYa+?VJi2_mQ+4>Ss/A3M+uA2lJ*A7IJU4q0V13+c_c+?X0o2E#)V0Ju$''4>Ss/Aj.>"3B:\/4q0V13A<-N+?VYm0Om9U4>SuO0g6^B3FO^Q4q0V13A<3P+?VYm0ebd#4>SuO1HlpD3FOd)4q0V13A<9R+?X0o2)SoV1,V6)4>SuO2*N-F1H&`"4q0V13A<?T+?X0o2DerS@PL%U4>SuO2a/?HA2lJ*A7f@04q0V13A<EV+?VYmAM?:W4>SuO3BeQJ3FQJS4q0V13A=l*+?X0o2E#)X0Ju$''4>SuO@Qkns3FQMV4q0V13A=r,+?VJj0P*EW4>SuOA3M+u3FX^"4q0V13A>#.+?VYn11WQX4>SuOAj.>"A2lJ%A7[GK4q0V13AE3O+?VM81Gh9)4>SuP0g6^B3FXd$4q0V13AE9Q+?VG>@l$:X4>SuP1HlpDA2lDUA7IQ/4q0V13AE?S+?VYn2)%3''4>SuP2*N-F3FXg!4q0V13AEEU+?X0o2E,/W1M&`Z4>SuP2a/?H2.8=!4q0V13AEKW+?X0o1cAlS2D[N+4>SuP3BeQJ3FXsZ4q0V13AFr++?VYo0JYg$4>SuP@Qkns3FZT44q0V13AG#-+?VYo0Om9U4>SuPA3M+uA2lJ+A7[YY4q0V13AG)/+?VYpA2HIZ4>SuPAj.>"A2lJ+A7f:04q0V13AN9P+?X0o2E55X3ANc-4>SuQ0g6^BA2lJ,A7T+X4q0V13AN?R+?X0o2E55WAMH@X4>SuQ1HlpDA2lJ,A7RGO4q0V13ANET+?X0o2E55XA7e"74>SuQ2*N-F3Fk''[4q0V13ANKV+?VYp3&<`-4>SuQ2a/?HA2lJ,A7RJQ4q0V13ANQX+?VYq0P*EW4>SuQ3BeQJ3FlVV4q0V13AP#,+?X0o2E55X3AWi.4>SuQ@QknsA2lJ,A7[MM4q0V13AP).+?X0o1cAlT1L`NW4>SuQA3M+uA2lJ,A7[PQ4q0V13AP/0+?VYp1H@W.4>SuQAj.>"A2lJ,A7K(/4q0V13AW?Q+?X0o2E55Y@Pg7X4>SuR0g6^B3Ft3)4q0V13AWES+?VYq3Aiu04>SuR1HlpD3Ft3^4q0V13AWKU+?VYq@5:"U4>SuR2*N-F1h8C!4q0V13AWQW+?VYq@:;>/4>SuR2a/?H3FuW24q0V13AWWY+?X0o2)&QQ2DdT,4>SuR3BeQJ3Fu\T4q0V13AY)-+?VGh2D@<(4>SuR@Qkns1HB#(4q0V13AY//+?X0o2E55ZARmt64>SuRA3M+u1hJO!4q0V13AY51+?VG=@V%_44>SuRAj.>"A2lJ''A7IB(4q0V13A`ER+?VYr0JYg$4>SuS0g6^B3G''s)4q0V13A`KT+?VJi3As&14>SuS1HlpD3A`KJ4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QF,1c.B=4CgE/@Us"X1-Q.01H@9L4s2sJAhc5.%6QF,1c@N?4CgE1ARo@,@Qk5`1H@9N4s2sJAhuG2%6QF,1cRZA4>f#WAj-Yd1H@9P4s2sF2E5,/%6QF,1grQj4?7"12*MI31H@:$4s2sJ3FXs3%6QF,1h/]l4CgE01h:)U@Qk5`1H@:&4s2sJ2eFg/%6QF,1hAin4?,/VAj-Yd1H@:(4s2t"AnGR;%6QF,2)%3:4?7"33Bdm71H@<I4s2sH@:Wk3%6QF,2)7?<4?7"5ANgPc1H@<K4s2sH1,1[N%6QF,2)IK>4>^MVANgPc1H@<M4s2su3&NI%A2cA0%6QF,2)[W@4CgE/11Xp)@Qk5`1H@<O4s2sH0fM$T%6QF,2)mcB4CgE/11Xp-3''Id61H@<Q4s2su3&NC#Ai)J2%6QF,2.8Zk4CgE/11XrR0g6%/1H@=%4s2sH1HB#1%6QF,2.Jfm4CgE011Y!-@6P,_1H@=''4s2su3&EO(@qK.5%6QF,2.\ro4?#8\Aj-Yd1H@=)4s2su3&WO&A2e''`%6QF,2D@<;4CgE01Lt&Q2EhR41H@?J4s2sJ1H%6W%6QF,2DRH=4?5301Hl711H@?L4s2su3&WO&AMc5-%6QF,2DdT?4?50.@m1>a1H@?N4s2sJ1H7*Q%6QF,2E!`A4?53-@Qk5`1H@?P4s2su3&WO&A2[p]%6QF,2E3lC4CgE/0k=d''3Bdm71H@?R4s2sH1,1^O%6QF,2IScl4>UP[@Qk5`1H@@&4s2sH2`EKU%6QF,2Ieon4?$\*1Hl711H@@(4s2sH0Ouk$%6QF,2J#&p4CgE/0k=cQ1Hl711H@@*4s2su3&NC#AnF"d%6QF,2_[E<4?"uRANgPc1H@BK4s2su3&EL''An>R<%6QF,2_mQ>4?"s&1Hl711H@BM4s2su3&EO(@q''"5%6QF,2`*]@4CgE.A7T423Bdm71H@BO4s2sDARdY_%6QF,2`<iB4CgE.2Ip;W2*MI31H@BQ4s2su3&NR(@kqX[%6QF,2`NuD4CgE.2.U<23''Id61H@BS4s2sD2_m-P%6QF,2dnlm4CgE.2.U91@Qk5`1H@C''4s2su3&EO(@l$,/%6QF,2e,#o4>Sm,0g6%/1H@C)4s2su3&EL''AiDP1%6QF,2e>/q4CgE.2Ip<.0g6%/1H@C+4s2su3&NX*Ai*s\%6QF,3&!N=4>SoO1Hl711H@EL4s2su3&EL''ARdDX%6QF,3&3Z?4>f&T@Qk5`1H@EN4s2su3&NI%AMQ,,%6QF,3&EfA4CgE.1h:31ANgPc1H@EP4s2su3&EI&ARRP^%6QF,3&WrC4CgE.1h:3.2EhR41H@ER4s2su3&EL''@q%>[%6QF,3&j)E4?,2P1Hl711H@ET4s2su3&G/VARRJ\%6QF,3+4un4D&2;A3LGb1H@F(4s2sI1c7-S%6QF,3+G,p4CgE/11XoU1d2@21H@F*4s2su3&P2VA2Z;/%6QF,3+Y8r4CgE.An5I/0g6%/1H@F,4s2su3&NR(A2Rj\%6QF,3A<W>4CgE.An5Ib@Qk5`1H@HM4s2su3&P2V@l6#*%6QF,3ANc@4>\m,1d2@21H@HO4s2su3&G/VAS#F:%6QF,3A`oB4CgE02Ip>YA3LGb1H@HQ4s2su3&P/UAhl8.%6QF,3As&D4>o-13Bdm71H@HS4s2sD2`!6R%6QF,3B02F4>UJ%2*MI31H@HU4s2sDA7[\`%6QF,3FP)o4>f)V@m1>a1H@I)4s2su3&EO(A25o(%6QF,3Fb5q4>o/R0Koq.1H@I+4s2sE0JtdQ%6QF,3FtAs4CgE.A7T:.Aj-Yd1H@I-4s2su3&NC#@q@AY%6QF,@5''kf4CgE/0P"ZQ@Qk5`1HAku4s2su3&NC#A2%UZ%6QF,@5:"h4CgE/@Urt(0g6%/1HAl"4s2sF1h0uY%6QF,@5L.j4>f#WANgPc1HAl$4s2su3&N^,AR[AX%6QF,@5^:l4>f#W1-Q.01HAl&4s2su3&EF%An5L;%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>T!+3''JHIA2lD$A7f704q0V13FOp3+?X0o1c&ZR0P!?V4>T!+@6PerAnGXc4q0V13FQA\+?X0o2DSfT0f)!&4>T!+@m2"t3AW[*4q0V13FQG^+?VJlAiMs`4>T!+ANh5!2)-jq4q0V13FQM`+?VG>0f_E,4>T!,0KpUAA2lG$A7IDR4q0V13FX^,+?VJl@UhS24>T!,1-QgCA2lD#A7IMT4q0V13FXd.+?X7JAn4(74>T!,1d3$E1hJRR4q0V13FXj0+?VJm3+4u[4>T!,2Ei6GA2lG(A7[VQ4q0V13FXp2+?VMi2E3l04>T!,3''JHIA2lD"A7T+X4q0V13FY!4+?X0o1b`HP@q%V24>T!,@6Per1H@HU4q0V13FZG]+?X0o1b`HP0O[-S4>T!,@m2"tA2lD#A7I>N4q0V13FZM_+?VG:1Gq?*4>T!,ANh5!1hJL''4q0V13FZSa+?X0o1b`HO@k^(U4>T!-0KpUAA2lJ''A7]4+4q0V13Fad-+?X0o1b`HO2`3c.4>T!-1-QgC3+6?+4q0V13Faj/+?X0o1b`HO0Om9U4>T!-1d3$E1hA[,4q0V13Fap1+?VM8@q7b44>T!-2Ei6G2)-dq4q0V13Fb!3+?VJm@5:"U4>T!-3''JHI1hJEt4q0V13Fb''5+?X0o2)8]R0P*EW4>T!-@6PerA2lDXA7[`/4q0V13FcM^+?VJm1bq6(4>T!-@m2"t2)$ds4q0V13FcS`+?VM82Ieo[4>T!-ANh5!2)%!E4q0V13FcYb+?VJm@q.\34>T!.0KpUA1hL;V4q0V13Fjj.+?VM82)mc/4>T!.1-QgC2)&WP4q0V13Fjp0+?VPn2`<i/4>T!.1d3$EA2lDVA7R\X4q0V13Fk!2+?X0o1hL901H@W.4>T!.2Ei6GA2lDXA7]4^4q0V13Fk''4+?VPm2_mQ+4>T!.3''JHIA2lD(A7ISU4q0V13Fk-6+?X0o1hL903&s/34>T!.@6Per2)/N!4q0V13FlS_+?VM9@l$:X4>T!.@m2"tA2lD#A7T7*4q0V13FlYa+?VJ;A7Rk54>T!.ANh5!A2lD#A7K%(4q0V13Fl_c+?X0o1biNN3ANc-4>T!/0KpUAA2lD#A7IVS4q0V13Fsp/+?VVo2dnlZ4>T!/1-QgCA2lJ&A7[c24q0V13Ft!1+?X0o1biNQ0P*EW4>T!/1d3$E2)7$L4q0V13Ft''3+?VM:@5L.W4>T!/2Ei6GA2lD$A7IPS4q0V13Ft-5+?VM:AMH@X4>T!/3''JHIAnGXc4q0V13Ft37+?VJ=2dnlZ4>T!/@6Per2_d:%4q0V13FuY`+?X0o2)&QQ3+G,]4>T!/@m2"tA2lD%A7IAK4q0V13Fu_b+?X0o2)8]Q@:MJ14>T!/ANh5!A2lD&A7K1-4q0V13Fued+?VPBA2-7W4>T!00KpUAA2lD%A7[K+4q0V13G(!0+?X7JAn4(74>T!01-QgC1M(*.4q0V13G(''2+?VS>3B9844>T!01d3$E2`*6G4q0V13G(-4+?VS>2)[W-4>T!02Ei6G2`!HR4q0V13G(36+?VJi3+Y8_4>T!03''JHIA2lG%A7]4[4q0V13G(98+?X0o2)&QN3+P2^4>T!0@6Per2)Abs4q0V13G)_a+?VG;3&Ef.4>T!0@m2"t2_m(!4q0V13G)ec+?X0o2)&QN@lZ^^4>T!0ANh5!2)Si"4q0V13G)ke+?X0o1b`HP1c7H+4>UD"0KpUA2)JfR4q0V1@5''E"+?X0o1brTR@l?L[4>UD"1-QgC2)d7#4q0V1@5''K$+?VY>2.Sl[4>UD"1d3$E3AtJ+4q0V1@5''Q&+?VM?A7Rk54>UD"2Ei6G2)dL*4q0V1@5''W(+?VM?2eG5_4>UD"3''JHI1H%%#4q0V1@5'']*+?VM@@q%V24>UD"@6Per2.8L*4q0V1@5).S+?X0o2DSfS1c@N,ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1LVtI4s2su3&EL''AS,@7%6QFT0P!?i4CgE.2.U;WAj-Yd1LVtK4s2su3&EL''Ahbu''%6QFT0P3Kk4>gP&@m1>a1LW!l4s2sF3FXs3%6QFT0ekj74>gP+ANgPc1LW!n4s2sF@:Nn5%6QFT0f)!94>gP%1-Q.01LW!p4s2su3&NU)A2H2.%6QFT0f;-;4CgE.2Ip?11Hl711LW!r4s2su3&EO(@l?&*%6QFT0fM9=4CgE/0P"`T2*MI31LW!t4s2sD2J+g1%6QFT0f_E?4>p_(2*MI31LW"H4s2sH1c.!P%6QFT0k*<h4>gP&0g6%/1LW"J4s2su3&NX*AN2J0%6QFT0k<Hj4>gP,0g6%/1LW"L4s2su3&WO&An3ha%6QFT0kNTl4CgE.0k=cK1Hl711LW$m4s2sJ1M&7(%6QFT1,1s84?#)V@m1>a1LW$o4s2su3&EI&AhZ#)%6QFT1,D*:4?"uK2*MI31LW$q4s2sE3B&]W%6QFT1,V6<4?55P3''Id61LW$s4s2su3&WO&A7f:7%6QFT1,hB>4?53,A3LGb1LW$u4s2sD2dnC(%6QFT1-%N@4>gV''ANgPc1LW%I4s2sF@l\*a%6QFT11EEi4>g\-ANgPc1LW%K4s2sFAMcA1%6QFT11WQk4CgE.2Ip>Y2EhR41LW%M4s2su3&EO(A2e!^%6QFT11i]m4CgE.ARo@`ANgPc1LW''n4s2sFARf77%6QFT1GM''94>gS)Aj-Yd1LW''r4s2sD2_ZsM%6QFT1Gq?=4CgE.2Ip<+0Koq.1LW''t4s2sD2Ip>^%6QFT1H.K?4CgE.2.U91ANgPc1LW(!4s2sD2InU-%6QFT1H@WA4?,&N@6P,_1LW(J4s2su3&WO&AMc>0%6QFT1L`Nj4CgE.2e6H.@6P,_1LW(L4s2su3&G/V@lH/,%6QFT1LrZl4CgE011Xp(3''Id61LW(N4s2sFAh[^Y%6QFT1M/fn4>g_)ANgPc1LW*o4s2su3&EO(A26)-%6QFT1bh0:4CgE.2.U<-@Qk5`1LW*q4s2sF@5_RY%6QFT1c%<<4CgE.2.U;T@Qk5`1LW*s4s2sF@Pfo*%6QFT1c7H>4CgE/A7T4_A3LGb1LW*u4s2sI3&WHS%6QFT1cIT@4>nlPANgPc1LW+"4s2su3&G&S@l?#)%6QFT1c[`B4CgE.3Fl\V@Qk5`1LW+K4s2sFAn5@7%6QFT1h&Wk4>UPX3''Id61LW+M4s2su3&EX+A79(6%6QFT1h8cm4CgE.3FlZ0ANgPc1LW+O4s2su3&WU(@lQG3%6QFT1hJoo4CgE/@Us(01Hl711LW-p4s2sG0k2n$%6QFT2).9;4CgE.0P"ZLANgPc1LW-r4s2su3&E="@l-)-%6QFT2)@E=4CgE.3Fl\U@Qk5`1LW-t4s2sG0f_6X%6QFT2)RQ?4>noS3''Id61LW.!4s2sG0K1jQ%6QFT2)d]A4CgE.@Urt/@Qk5`1LW.#4s2su3&G)TA2#r+%6QFT2*!iC4CgE/0k=j+1d2@21LW.L4s2su3&WU(A2Ig\%6QFT2.A`l4>o#T0g6%/1LW.N4s2su3&NF$AMuD0%6QFT2.Sln4CgE.@:Wt.@6P,_1LW.P4s2sD@59i,%6QFT2.f#p4CgE.@:Wt*1-Q.01LW0q4s2su3&G/V@l5r(%6QFT2DIB<4CgE02Ip</@6P,_1LW0s4s2su3&G)TAN)S4%6QFT2D[N>4>nuO2a.[51LW0u4s2sG1h&@,%6QFT2DmZ@4>nuO0g6%/1LW1"4s2sG1Lr4(%6QFT2E*fB4CgE/11Xp,1Hl711LW1$4s2su3&G)TA2ZA1%6QFT2E<rD4>ns''1d2@21LW1M4s2su3&G)T@pq)U%6QFT2I\im4>o#P@Qk5`1LW1O4s2sG2)\o-%6QFT2Inuo4>o2Y1-Q.01LW1Q4s2sD@V.G\%6QFT2J,,q4CgE.@q9(/ANgPc1LW3r4s2su3&G,UART+5%6QFT2_dK=4CgE/11XoT3Bdm`DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e@5fr*+?X0o1h1''-@:DD04>UD)1HlpD2)R''u4q0V1@5g#,+?X0o1h1''-AM?:W4>UD)2*N-FA2lD(A7K.14q0V1@5g).+?X0o2Do#T1M/f[4>UD)2a/?H2E#&V4q0V1@5g/0+?X0o1h1''-3&s/34>UD)3BeQJA2lDUA7T.*4q0V1@5hUY+?VGgAM?:W4>UD)@QknsA2lG(A7RYV4q0V1@5h[[+?X0o2DSfT1,;$&4>UD)A3M+uA2lG(A7RZ34q0V1@5ha]+?X0o1c8fTAn+"64>UD)Aj.>"A2lG(A7RQ,4q0V1@5or)+?X0o2)SoS1,V6)4>UD*0g6^B2`PA[4q0V1@5p#++?X0o1h1'',0Jbm%4>UD*1HlpDA2lD(A7IB''4q0V1@5p)-+?X0o1h1''-1Gh9)4>UD*2*N-F1Gh!H4q0V1@5p//+?X0o1h1''-0P3KX4>UD*2a/?HA2lDUA7RYT4q0V1@5p51+?X0o2)&QP@lZ^^4>UD*3BeQJ2E!O+4q0V1@5q[Z+?X0o2.C*,1,M0(4>UD*@Qkns2E!I&4q0V1@5qa\+?VJi3AWi.4>UD*A3M+u2E!?F4q0V1@5qg^+?X0o2.^<.2_[E)4>UD*Aj.>"A2lD)A7T7\4q0V1@6$#*+?VP?2D[N+4>UD+0g6^BA2lDUA7]:,4q0V1@6$),+?X0o1h1''-AMH@X4>UD+1HlpD2E!:$4q0V1@6$/.+?X0o2)\uT2_mQ+4>UD+2*N-F1H8o"4q0V1@6$50+?X0o1hC3-1LWHV4>UD+2a/?HA2lDVA7f:\4q0V1@6$;2+?VGh3B9844>UD+3BeQJA2lDVA7f7*4q0V1@6%a[+?X0o1h1''.An=.84>UD+@Qkns2`,&!4q0V1@6%g]+?VGh3As&14>UD+A3M+uA2lG$A7[N)4q0V1@6%m_+?VPA@Q$CZ4>UD+Aj.>"AnGXc4q0V1@::iR+?VGh@l-@Y4>UDS0g6^B2IU''+4q0V1@::oT+?X0o1h:-/A2QO[4>UDS1HlpDA2lG$A7ISX4q0V1@::uV+?VPj1G_3(4>UDS2*N-F2ISHu4q0V1@:;&X+?VPj@lZ^^4>UDS2a/?H2I\?t4q0V1@:;,Z+?X0o1cAlT0etp%4>UDS3BeQJ2Dm3D4q0V1@:<S.+?VPA3B0234>UDS@Qkns2ISFP4q0V1@:<Y0+?VGhA2c[]4>UDSA3M+u2ISOQ4q0V1@:<_2+?VPk2)d].4>UDSAj.>"A2lDXA7f=*4q0V1@:CoS+?X0o1hL9.3FP)\4>UDT0g6^B3AY(t4q0V1@:CuU+?VY>AhlOZ4>UDT1HlpDA2lJ&A7fC]4q0V1@:D&W+?X0o2DSfS@q%V24>UDT2*N-F3ANQS4q0V1@:D,Y+?X0o2DAZO0kENX4>UDT2a/?HA2lJ&A7T4\4q0V1@:D2[+?VY@2E*f/4>UDT3BeQJ2Ip5R4q0V1@:EY/+?VPo0Od3T4>UDT@QknsAnGXc4q0V1@:E_1+?X0o1hL912eG5_4>UDTA3M+u1LrIW4q0V1@:Ee3+?VPn0Jks&4>UDTAj.>"A2lG#A7IE*4q0V1@:LuT+?VMi1LrZY4>UDU0g6^B2J"RN4q0V1@:M&V+?VM@1cIT-4>UDU1HlpD2InR"4q0V1@:M,X+?VSB1bq6(4>UDU2*N-F2_d*t4q0V1@:M2Z+?X0o2)&QQ0k!6T4>UDU2a/?HA2lG#A7[\X4q0V1@:M8\+?VS:AhcIY4>UDU3BeQJ2_m6E4q0V1@:N_0+?VS<3&a#14>UDU@Qkns2_mBM4q0V1@:Ne2+?X0o2)/WR3+b>`4>UDUA3M+uA2lG$A7dSS4q0V1@:Nk4+?VM92`X&24>UDUAj.>"A2lG%A7]1+4q0V1@:V&U+?X0o1biNOAR[h44>UDV0g6^B2`*I%4q0V1@:V,W+?X0o1hL90AiMs`4>UDV1HlpDA2lDVA7[W14q0V1@:V2Y+?X0o2)8]R1grQW4>UDV2*N-FA2lG%A7RDR4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QFTA2ZUo4CgE/2e6N30g6%/1LXfQ4s2sDAhZ,,%6QFTA2laq4>UPX0g6%/1LXfS4s2su3&NI%ARoC:%6QFTA77YE4CgE01LsuN1Hl711LXg''4s2su3&G5XAhu;.%6QFTA7IeG4>nm%2a.[51LXg)4s2sDAS*_^%6QFTA7[qI4?#*,@m1>a1LXg+4s2sH1c&W*%6QFTAM?:j4?52W2a.[51LXiL4s2sH1c%''S%6QFTAMQFl4>\lTAj-Yd1LXiN4s2su3&P/UA7]15%6QFTAMcRn4>\oQ0g6%/1LXiP4s2sH2)mBU%6QFTAMu^p4>US-1Hl711LXiR4s2su3&NL&@q7S`%6QFTAN2jr4CgE/1Lt#M2EhR41LXiT4s2sDAi2P3%6QFTARRbF4?#,T2*MI31LXj(4s2sH2E*EU%6QFTARdnH4CgE03FlZ12EhR41LXj*4s2t"AnGR;%6QFTAS"%J4?#)T3''Id61LXj,4s2su3&WO&ARf46%6QFTAhZCk4CgE/11Xp(@Qk5`1LXlM4s2su3&NI%A2n-a%6QFTAhlOm4>UDX@Qk5`1LXlO4s2sDA7K.6%6QFTAi)[o4CgE/11XrQANgPc1LXlQ4s2sDAS,O<%6QFTAi;gq4CgE/11Xp*2*MI31LXlS4s2su3&NI%@qIM\%6QFTAiMss4?5-.@6P,_1LXlU4s2sF2`!3Q%6QFTAmmkG4?52S1-Q.01LXm)4s2su3&WO&AS!Y]%6QFTAn+"I4CgE.2Ip;U1d2@21LXm+4s2sF0P"cZ%6QFTAn=.K4CgE/1h:/Q0g6%/1LXm-4s2su3&NO''A7[\`%6QFU0JG[54?#2X3''Id61L`$m4s2su3&G,UAMZ)*%6QFU0Jks94?#2X@Qk5`1L`$q4s2su3&NF$AN;\5%6QFU0K)*;4CgE.A7T:30g6%/1L`$s4s2sD@5VU[%6QFU0K;6=4CgE/11Xm,0Koq.1L`$u4s2sH1c%*T%6QFU0O[-f4?#)W@Qk5`1L`%I4s2sDAR]78%6QFU0Om9h4CgE/11Xs*@6P,_1L`%K4s2su3&NI%ARdY_%6QFU0P*Ej4>\a%3''Id61L`%M4s2su3&NI%AN;Y4%6QFU0ebd64CgE/3+QQ.ANgPc1L`''n4s2sJ1GCaO%6QFU0etp84CgE/2.U5W0g6%/1L`''p4s2sH3&+u.%6QFU0f2'':4?#5ZA3LGb1L`''r4s2sH3&il]%6QFU0fD3<4?#611-Q.01L`''t4s2sH1Lr1''%6QFU0fV?>4?#8X3Bdm71L`(!4s2su3&P5WAi)5+%6QFU0k!6g4CgE/2.U901Hl711L`(J4s2sE0ed0&%6QFU0k3Bi4D&2;A3LGb1L`(L4s2t"AnGR;%6QFU0kENk4?#9/2*MI31L`(N4s2sG@5;@W%6QFU1,(m74CgE.An5Ib@6P,_1L`*o4s2sH@5D=U%6QFU1,;$94?#941d2@21L`*q4s2sE0fET,%6QFU1,M0;4CgE.2.U902EhR41L`*s4s2sE0f(RK%6QFU1,_<=4?5/Q2*MI31L`*u4s2sH3G(!0%6QFU1,qH?4CgE.1Lt#Q@m1>a1L`+"4s2su3&NI%A2n''_%6QFU11<?h4CgE.0P"`T3Bdm71L`+K4s2su3&G5XA7At2%6QFU11NKj4CgE.2.U;WANgPc1L`+M4s2sD2*!TZ%6QFU11`Wl4>euS@Qk5`1L`+O4s2sD2)d3Q%6QFU1GD!84>Sm(@6P,_1L`-p4s2su3&E="A7RM\%6QFU1GV-:4CgE.1LsuLA3LGb1L`-r4s2sH@:_2X%6QFU1Gh9<4>gP)3Bdm71L`-t4s2su3&EX+AS*e`%6QFU1H%E>4CgE/2IpB-Aj-Yd1L`.!4s2su3&NU)AN=6a%6QFU1H7Q@4>gP$A3LGb1L`.#4s2su3&E="AMmp\%6QFU1LWHi4?#630Koq.1L`.L4s2sF@5;7T%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>UG&@m2"tA2lG)A7f=04q0V1@P_OY+?VSkAn=.84>UG&ANh5!1biT&4q0V1@P_U[+?VSm2.Sl[4>UG''0KpUA2e+aV4q0V1@Pff''+?VJ90ekj$4>UG''1-QgCA2lG)A7f:,4q0V1@Pfl)+?X0o2)f&W@UhS24>UG''1d3$EA2lG*A7]1-4q0V1@Pfr++?VSm@q7b44>UG''2Ei6GA2lG%A7T:44q0V1@Pg#-+?X0o1c8fU@PBtT4>UG''3''JHI2e+gY4q0V1@Pg)/+?VSm2e,#\4>UG''@6Per2e-9-4q0V1@PhOX+?VPj@PU+V4>UG''@m2"t2e6H/4q0V1@PhUZ+?VSo0K20)4>UG''ANh5!2e6GT4q0V1@Ph[\+?VSp1hAi[4>UG(0KpUAA2lG+A7[YR4q0V1@Pol(+?X0o2)o,W2.JfZ4>UG(1-QgCA2lGXA7dYX4q0V1@Por*+?VSn3B'',24>UG(1d3$EA2lG*A7[_U4q0V1@Pp#,+?VJ92IScY4>UG(2Ei6GA2lGTA7dbX4q0V1@Pp).+?X0o1brTP0fD3)4>UG(3''JHI2E,/)4q0V1@Pp/0+?X0o1b`HM1hAi[4>UG(@6PerA2lDVA7T1^4q0V1@PqUY+?VM?@l-@Y4>UG(@m2"tA2lG,A7I>L4q0V1@Pq[[+?X0o2)o,YAiMs`4>UG(ANh5!2eHT24q0V1@Pqa]+?VSl1,hB+4>UG)0KpUAA2lD$A7IB)4q0V1@Q#r)+?X0o2)\uVAN;p`4>UG)1-QgCA2lG*A7RMQ4q0V1@Q$#++?VSl0Om9U4>UG)1d3$EA2lG*A7[H+4q0V1@Q$)-+?VYEAMu^]4>UG)2Ei6G3&WTN4q0V1@Q$//+?VYm2D[N+4>UG)3''JHI2IS=M4q0V1@Q$51+?X0o1h:-,1M/f[4>UG)@6PerA2lG%A7T:24q0V1@Q%[Z+?X0o2*#2X@:VP24>UG)@m2"t3FOXS4q0V1@Q%a\+?X0o2*#2X@5''kS4>UG)ANh5!3&EWQ4q0V1@Q%g^+?X0o2.L0-1,hB+4>UG*0KpUAA2lGUA7K.)4q0V1@Q-#*+?VJ;ARRb34>UG*1-QgC3&*3J4q0V1@Q-),+?VJ;0JYg$4>UG*1d3$E3&"i#4q0V1@Q-/.+?VV<0KD<+4>UG*2Ei6G3&*6F4q0V1@Q-50+?X0o2*#2Z@Pg7X4>UG*3''JHI3B1M)4q0V1@Q-;2+?X0o2.:$,1bq6(4>UG*@6Per3&3BI4q0V1@Q.a[+?VV=2DmZ-4>UG*@m2"tA2lGTA7[VQ4q0V1@Q.g]+?VV?2)@E*4>UG*ANh5!A2lGUA7T+-4q0V1@Q.m_+?VVA0ebd#4>UG+0KpUAA2lGVA7[K)4q0V1@Q6)++?VMi3&Wr04>UG+1-QgC1bgq$4q0V1@Q6/-+?X0o1cAlS1b_*&4>UG+1d3$E2.A=M4q0V1@Q65/+?X0o1cAlS@50qT4>UG+2Ei6G2.:&Q4q0V1@Q6;1+?X0o1cAlSA2la^4>UG+3''JHI3&Y2!4q0V1@Q6A3+?X0o2e?N1@UhS24>UG+@6PerA2lDXA7RZ34q0V1@Q7g\+?VVC11WQX4>UG+@m2"tA2lGWA7IAM4q0V1@Q7m^+?VMi0JYg$4>UG+ANh5!3&ig-4q0V1@Q7s`+?VJm1c7H+4>UG,0KpUA3&ilV4q0V1@Q?/,+?VVC@V.e54>UG,1-QgC3&kJ-4q0V1@Q?5.+?VVD2DmZ-4>UG,1d3$E3&rg+4q0V1@Q?;0+?X0o2)SoU3&<`-4>UG,2Ei6G3&riQ4q0V1@Q?A2+?X0o2.U603&Nl/4>UG,3''JHIA2lGWA7deX4q0V1@Q?G4+?X0o2DSfTAi2a]4>UG,@6PerA2lJ&A7f@44q0V1@Q@m]+?X0o2DSfT3Fb5^4>UG,@m2"tA2lJ&A7T:44q0V1@Q@s_+?VGk@:VP24>UG,ANh5!3&G&"4q0V1@QA$a+?VJ=Ai2a]ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1LacH4s2sE2Ig>_%6QFU@50qg4>Sp.1-Q.01LacJ4s2sI@5DFX%6QFU@5C(i4?-b(@m1>a1LacL4s2su3&WX)@l-//%6QFU@5U4k4>g_-A3LGb1LacN4s2sJ1,<<&%6QFU@5g@m4CgE/0P"`S1d2@21LacP4s2sG2.SO-%6QFU@6$Lo4?"uM3Bdm71Lad$4s2sH0Olq''%6QFU@:DDC4CgE.2Ip;S2*MI31Lad&4s2sJA2[s^%6QFU@:VPE4?-h2Aj-Yd1Lad(4s2sI@q@Ya%6QFU@:h\G4CgE/An5F_@m1>a1LafI4s2sF3B:M3%6QFU@PL%h4?#3/1Hl711LafK4s2sF3G''s/%6QFU@P^1j4>Sm+1d2@21LafM4s2sIAMR[X%6QFU@Pp=l4?-n\2a.[51LafO4s2su3&NL&@k]o,%6QFU@Q-In4?-q/0Koq.1LafQ4s2sIAi*p[%6QFU@Q?Up4>\g*1d2@21Lag%4s2sG@l650%6QFU@U_MD4>pe\@Qk5`1Lag''4s2su3&EU*Ahl))%6QFU@UqYF4>]#X@Qk5`1Lag)4s2sGAiD_6%6QFU@V.eH4>pb1@Qk5`1LaiJ4s2su3&EL''An5=6%6QFU@kg.i4?6k^3Bdm71LaiL4s2sD2I\O-%6QFU@l$:k4CgE/11XoNAj-Yd1LaiN4s2sJ0OeKT%6QFU@l6Fm4>]$,1d2@21LaiP4s2sF2)d6R%6QFU@lHRo4>]&P2EhR41LaiR4s2sJ0k+TU%6QFU@lZ^q4?55P1d2@21Laj&4s2su3&WO&AMdj[%6QFU@q%VE4>\`M1-Q.01Laj(4s2su3&WO&AS,F9%6QFU@q7bG4?55R2a.[51Laj*4s2su3&WR''@khLX%6QFU@qInI4CgE01LsuO@Qk5`1LalK4s2sI1hAO.%6QFUA2-7j4?-b)@Qk5`1LalM4s2sJ2*!Z\%6QFUA2?Cl4?59-2a.[51LalO4s2sJ2*!TZ%6QFUA2QOn4?58Z2EhR41LalQ4s2su3&WR''A2?&+%6QFUA2c[p4?#)R2*MI31LalS4s2sDARdJZ%6QFUA2ugr4CgE/11Xm,Aj-Yd1Lam''4s2su3&NI%AMc/+%6QFUA7@_F4CgE/0P"d,@6P,_1Lam)4s2sDAS!ea%6QFUA7RkH4CgE.@q9.+2*MI31Lam+4s2sJ2E5;4%6QFUA7e"J4CgE01Lt''.2a.[51LaoL4s2su3&WR''AMuG1%6QFUAMH@k4CgE01Lt&T2*MI31LaoN4s2sDARf46%6QFUAMZLm4CgE/11Xp,A3LGb1LaoP4s2su3&NI%AN)S4%6QFUAMlXo4CgE.An5LbANgPc1LaoR4s2sH1bgaL%6QFUAN)dq4?#)T@Qk5`1LaoT4s2sDAS,F9%6QFUAN;ps4?5>W0g6%/1Lap(4s2su3&WU(@q%,U%6QFUAR[hG4>o/U2a.[51Lap*4s2sE@52:V%6QFUARmtI4CgE01h:)V1Hl711Lap,4s2su3&NR(An5L;%6QFUAS++K4D&2;A3LGb1LarM4s2sJ1H%3V%6QFUAhcIl4CgE011XoT3Bdm71LarO4s2su3&WR''@kor+%6QFUAhuUn4CgE011XuPAj-Yd1LarQ4s2su3&N[+An#=8%6QFUAi2ap4?50+@6P,_1LarS4s2sF@PKT$%6QFUAiDmr4?-e.3Bdm71LarU4s2sE3AY//%6QFUAiW$t4?#''.3Bdm71Las)4s2su3&NC#AMIXX%6QFUAn!qH4?5>\@Qk5`1Las+4s2t"AnGR;%6QFUAn4(J4?5DX3''Id61Las-4s2su3&EF%Ahl8.%6QFUAnF4L4>gYZ0g6%/1Li*m4s2su3&WO&An*\^%6QFV0JPa64CgE/11Xs*1-Q.01Li*o4s2sJ3&,#/%6QFV0Jbm84CgE02.U3-@6P-3DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e@k]`''+?VY>Ai;g^4>UJ$2*N-FA2lJ)A7T404q0V1@k]f)+?VY=AMlX\4>UJ$2a/?H1c/\r4q0V1@k]l++?X0o2DSfT2)%3''4>UJ$3BeQJA2lG%A7[YX4q0V1@k_=T+?X0o2DSfT2DdT,4>UJ$@Qkns3B1PZ4q0V1@k_CV+?X0o2DSfS1c7H+4>UJ$A3M+u1M/<p4q0V1@k_IX+?VY>11<?U4>UJ$Aj.>"1c[<K4q0V1@kfZ$+?VV?0f2''''4>UJ%0g6^B3B8m)4q0V1@kf`&+?VYE1h8cZ4>UJ%1HlpDA2lGXA7dMR4q0V1@kff(+?VGjAn4(74>UJ%2*N-FAnGXc4q0V1@kfl*+?VJi2J,,^4>UJ%2a/?H3B:MV4q0V1@kfr,+?VYm2.JfZ4>UJ%3BeQJA2lJ&A7d_W4q0V1@khCU+?X0o2)\uT@lQX]4>UJ%@Qkns2ISRW4q0V1@khIW+?VYm1,1s%4>UJ%A3M+u2.:*.4q0V1@khOY+?VYm11i]Z4>UJ%Aj.>"A2lJ*A7K4+4q0V1@ko`%+?VJi3A<W+4>UJ&0g6^BA2lJ*A7RMV4q0V1@kof''+?VYE@UhS24>UJ&1HlpD1h''p)4q0V1@kol)+?VJi3B'',24>UJ&2*N-F3AWU)4q0V1@kor++?VM@2_mQ+4>UJ&2a/?HA2lD&A7dMN4q0V1@kp#-+?VM@1,;$&4>UJ&3BeQJA2lG%A7T./4q0V1@kqIV+?X0o1c8fRAN2j_4>UJ&@Qkns2`NWN4q0V1@kqOX+?X0o1c])Y0kNTY4>UJ&A3M+uA2lDXA7T./4q0V1@kqUZ+?VPA@l6FZ4>UJ&Aj.>"1LrFT4q0V1@l#f&+?VY@2)mc/4>UJ''0g6^B1H@3L4q0V1@l#l(+?VP:2)%3''4>UJ''1HlpDA2lD+A7deU4q0V1@l#r*+?X0o1gsp*2I\iZ4>UJ''2*N-F2DHmE4q0V1@l$#,+?VYo1hJo\4>UJ''2a/?H3Fap&4q0V1@l$).+?VYo2e"r[4>UJ''3BeQJ3Faj&4q0V1@l%OW+?VYo0ebd#4>UJ''@Qkns3FXpZ4q0V1@l%UY+?VYn@qIn64>UJ''A3M+uA2lJ+A7[N,4q0V1@l%[[+?VYn3G(Ga4>UJ''Aj.>"A2lJ,A7T:04q0V1@l,l''+?X0o2E55WAn=.84>UJ(0g6^B3Fjm"4q0V1@l,r)+?VJj@:_V34>UJ(1HlpDA2lG#A7RAN4q0V1@l-#++?VYq0fV?+4>UJ(2*N-F1h0uK4q0V1@l-)-+?VYp0Om9U4>UJ(2a/?HA2lJ,A7T.+4q0V1@l-//+?X0o2E55WARmt64>UJ(3BeQJA2lJ,A7K4-4q0V1@l.UX+?X0o2E#)V11i]Z4>UJ(@Qkns3FlPU4q0V1@l.[Z+?VV?@UqY34>UJ(A3M+uA2lGUA7[JN4q0V1@l.a\+?X0o2.C*.A7e"74>UJ(Aj.>"A2lGTA7deV4q0V1@l5r(+?VV@An+"64>UJ)0g6^B1c7''F4q0V1@l6#*+?X0o2.C*,@5L.W4>UJ)1HlpDA2lGUA7[_W4q0V1@l6),+?X0o2.C*,AhZCX4>UJ)2*N-F3&EBE4q0V1@l6/.+?VV@AS"%74>UJ)2a/?HA2lGUA7[GK4q0V1@l650+?X0o1h:-/A2c[]4>UJ)3BeQJA2lG+A7IMS4q0V1@l7[Y+?VSCAMQFY4>UJ)@QknsA2lDVA7R]14q0V1@l7a[+?X0o1h:-.1b_*&4>UJ)A3M+uA2lG%A7T4^4q0V1@l7g]+?VGj2DRH*4>UJ)Aj.>"3AY2T4q0V1@l?#)+?VY>@V%_44>UJ*0g6^B3AWKO4q0V1@l?)++?X0o1b`HO@V.e54>UJ*1HlpD2`P8,4q0V1@l?/-+?VY>2`Eo04>UJ*2*N-F3A`R''4q0V1@l?5/+?VJmAMcR[4>UJ*2a/?H1GgpB4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QFV2E3lC4?5)R1d2@21Li=''4s2su3&NR(A2Rm]%6QFV2IScl4?#5UA3LGb1Li=P4s2sH3&NNV%6QFV2Ieon4?#6/2EhR41Li=R4s2sH3&G).%6QFV2J#&p4CgE.2.U;V2a.[51Li=T4s2su3&G,UA7IV`%6QFV2_[E<4CgE/11XoP0g6%/1Li?u4s2sD2E>20%6QFV2_mQ>4>^Y/1-Q.01Li@"4s2sGAn5=6%6QFV2`*]@4>pe^3Bdm71Li@$4s2t"AnGR;%6QFV2`<iB4?"rKANgPc1Li@&4s2sF1bggN%6QFV2`NuD4CgE/0P"^''2*MI31Li@(4s2sF2e$5[%6QFV2dnlm4>f*11Hl711Li@Q4s2sF2`P50%6QFV2e,#o4?6q,2EhR41Li@S4s2sF2e4j2%6QFV2e>/q4?"uN1d2@21Li@U4s2sD1gsu[%6QFV3&!N=4CgE/0P"^&@m1>a1LiC!4s2sH0kFfX%6QFV3&3Z?4CgE/@Urt*0Koq.1LiC#4s2su3&NL&AiVe6%6QFV3&EfA4D&2;A3LGb1LiC%4s2su3&EL''An!V]%6QFV3&WrC4CgE011XrQ3Bdm71LiC''4s2sG0ed*$%6QFV3&j)E4>gPWANgPc1LiC)4s2sF@5).S%6QFV3+4un4>\g&@m1>a1LiCR4s2su3&NF$@lQG3%6QFV3+G,p4>SoO@m1>a1LiCT4s2sE@Q.a[%6QFV3+Y8r4CgE011Xp-@m1>a1LiCV4s2sJ1LafW%6QFV3A<W>4?53,3''Id61LiF"4s2su3&EO(@q7J]%6QFV3ANc@4CgE.1Lt)PA3LGb1LiF$4s2sI1cI0R%6QFV3A`oB4CgE/@UrtY0Koq.1LiF&4s2su3&EL''@kfc''%6QFV3As&D4CgE/0P"a,@6P,_1LiF(4s2su3&G)T@kor+%6QFV3B02F4CgE/0P"d*0g6%/1LiF*4s2sF3B8o[%6QFV3FP)o4CgE.An5F]2a.[51LiFS4s2su3&N^,Ai)5+%6QFV3Fb5q4?$eZ3''Id61LiFU4s2su3&N[+A2Rg[%6QFV3FtAs4CgE/3+QN-1d2@21LiFW4s2su3&NI%A7@P_%6QFV@5''kf4CgE/11XoT@Qk5`1LjiJ4s2su3&WO&A7f76%6QFV@5:"h4?50.2*MI31LjiL4s2sH1M&=*%6QFV@5L.j4>UP[3Bdm71LjiN4s2sH1h&:*%6QFV@5^:l4CgE011XuT1Hl711LjiP4s2su3&EO(@l\-b%6QFV@5pFn4>UP[0g6%/1LjiR4s2su3&NI%AR[GZ%6QFV@:;>B4>pVY3''Id61Ljj&4s2sH1M/F,%6QFV@:MJD4?#''.@Qk5`1Ljj(4s2sDARm\_%6QFV@:_VF4CgE/11XrPANgPc1Ljj*4s2su3&NI%AN;S2%6QFV@PBtg4CgE.2.U<03Bdm71LjlK4s2su3&NI%AMuG1%6QFV@PU+i4CgE.0P"d(2a.[51LjlM4s2su3&EL''@kol)%6QFV@Pg7k4CgE/11Xp,2*MI31LjlO4s2sH1c.0U%6QFV@Q$Cm4CgE/11XoM2EhR41LjlQ4s2sH0OZh&%6QFV@Q6Oo4CgE/11XoS2EhR41LjlS4s2sJ1,q*S%6QFV@UVGC4?#''-2EhR41Ljm''4s2sJ1Grc.%6QFV@UhSE4CgE.0k=d+ANgPc1Ljm)4s2sJ1G^aL%6QFV@V%_G4CgE011Xs+ANgPc1Ljm+4s2su3&WO&AMH),%6QFV@k^(h4?52W2EhR41LjoL4s2su3&WO&An<nb%6QFV@kp4j4CgE/2.U6.2*MI31LjoN4s2sE3AWNV%6QFV@l-@l4CgE011XrU1-Q.01LjoP4s2sH0fEK)%6QFV@l?Ln4CgE/11XoP1Hl711LjoR4s2su3&EF%@qK=:%6QFV@lQXp4>f$*1d2@21LjoT4s2su3&E@#AMIUW%6QFV@pqPD4CgE.11Y!.@Qk5`1Ljp(4s2su3&EF%@q%D]%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>UJW@m2"t2)R''C4q0V1@q0%5+?VSC@l-@Y4>UJWANh5!A2lD''A7fF^4q0V1@q0+7+?VSnAn=.84>UJX0KpUAA2lD''A7]7+4q0V1@q7;X+?X0o2)8]R2)%3''4>UJX1-QgCA2lD(A7IJP4q0V1@q7AZ+?VJ<11`WY4>UJX1d3$E3A`EE4q0V1@q7G\+?VG=0O[-S4>UJX2Ei6GA2lJ&A7]7)4q0V1@q7M^+?X0o2)8]Q@:VP24>UJX3''JHI2*#,"4q0V1@q7S`+?X0o1cAlS@V.e54>UJX@6PerA2lD(A7IST4q0V1@q9%4+?X0o2.U6-3&Ef.4>UJX@m2"t2.9oJ4q0V1@q9+6+?VG<AMQFY4>UJXANh5!A2lDXA7RQ,4q0V1@q918+?VG<@PBtT4>UJY0KpUA3ANI(4q0V1@q@AY+?VMi2`X&24>UJY1-QgCA2lJ&A7[_T4q0V1@q@G[+?X0o1cAlS2DRH*4>UJY1d3$E3AWTN4q0V1@q@M]+?VGi@q7b44>UJY2Ei6GA2lD$A7]4,4q0V1@q@S_+?VJh3As&14>UJY3''JHI1H@F''4q0V1@q@Ya+?VM8Ai)[\4>UJY@6Per1LrC(4q0V1@qB+5+?VGj1h/]Y4>UJY@m2"tA2lD&A7di34q0V1@qB17+?VS;2`3c.4>UJYANh5!1brZP4q0V1@qB79+?X0o2DAZQ0fV?+4>UJZ0KpUA2J"RS4q0V1@qIGZ+?X0o2DerSAMcR[4>UJZ1-QgC1c/cQ4q0V1@qIM\+?VPm2)d].4>UJZ1d3$EA2lGYA7[T04q0V1@qIS^+?VS:2E*f/4>UJZ2Ei6G2Ig0-4q0V1@qIY`+?VGiA2ZU\4>UJZ3''JHIA2lDXA7fC`4q0V1@qI_b+?X0o1hL9011WQX4>UJZ@6Per2J"Qt4q0V1@qK16+?VPo0Om9U4>UJZ@m2"t1LrCU4q0V1@qK78+?X0o1b`HPAi2a]4>UJZANh5!2`3HI4q0V1@qK=:+?VG<@UhS24>UM%0KpUA1GiT$4q0V1A2#`%+?VJ=3&!N*4>UM%1-QgC1M(**4q0V1A2#f''+?VJ?2_dK*4>UM%1d3$E2*#/''4q0V1A2#l)+?VY>2J#&]4>UM%2Ei6G1c[@''4q0V1A2#r++?VVq1bh0''4>UM%3''JHIA2lJ''A7I?(4q0V1A2$#-+?X0o2.:$-@k^(U4>UM%@6Per2)m<G4q0V1A2%IV+?VM?@lQX]4>UM%@m2"t1H&c%4q0V1A2%OX+?X0o1c8fR2)7?)4>UM%ANh5!2_\iT4q0V1A2%UZ+?X0o2)&QQ2DRH*4>UM&0KpUAA2lG%A7[\S4q0V1A2,f&+?X0o1h(!-AMZLZ4>UM&1-QgCA2lD&A7]4(4q0V1A2,l(+?X0o1cT#X@UqY34>UM&1d3$E2E5/+4q0V1A2,r*+?VPB2E*f/4>UM&2Ei6GA2lD&A7dh]4q0V1A2-#,+?X0o1h:-,AMlX\4>UM&3''JHIA2lGXA7fF14q0V1A2-).+?X0o1h:-.A7e"74>UM&@6PerA2lJ&A7[_V4q0V1A2.OW+?X0o1h:-/A2ZU\4>UM&@m2"tA2lDUA7fF^4q0V1A2.UY+?X0o2)AcQ3G(Ga4>UM&ANh5!2IS=K4q0V1A2.[[+?X0o1h:-.@:VP24>UM''0KpUAA2lGUA7K(-4q0V1A25l''+?VV?1M&`Z4>UM''1-QgC1c/`T4q0V1A25r)+?VJ;@q@h54>UM''1d3$EA2lGUA7RGR4q0V1A26#++?X0o2.C*,2).9(4>UM''2Ei6GA2lGUA7ISS4q0V1A26)-+?X0o2.C*.A7[q64>UM''3''JHIAnGXc4q0V1A26//+?X7JAn4(74>UM''@6Per3&<@$4q0V1A27UX+?X0o1c8fU1LWHV4>UM''@m2"t3&>,V4q0V1A27[Z+?X0o2.C*+3&!N*4>UM''ANh5!A2lGVA7IJQ4q0V1A27a\+?X0o1c8fUA7@_3ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1Lr9q4s2sF3B0#_%6QFW1GM''94>gP,1-Q.01Lr9s4s2su3&EL''An!P[%6QFW1G_3;4>gP*0g6%/1Lr9u4s2sF@5fo)%6QFW1Gq?=4CgE.2Ip>P2*MI31Lr:"4s2su3&NC#A7f=8%6QFW1H.K?4>SoOA3LGb1Lr:$4s2sF3Fued%6QFW1H@WA4CgE.2.U;T@m1>a1Lr:M4s2sD2Ie[0%6QFW1L`Nj4?"uSANgPc1Lr:O4s2sJ1H@-Q%6QFW1LrZl4>o)X@6P,_1Lr:Q4s2su3&NC#ARRG[%6QFW1M/fn4>gP*ANgPc1Lr<r4s2sF@5;:U%6QFW1bh0:4CgE/0P"`T1Hl711Lr<t4s2sG@5;:U%6QFW1c%<<4CgE.An5Ib3Bdm71Lr=!4s2su3&P5WAhu>/%6QFW1c7H>4CgE/0k=cO@Qk5`1Lr=#4s2su3&NC#ARf.4%6QFW1cIT@4?"uLA3LGb1Lr=%4s2su3&NC#AMlJ3%6QFW1c[`B4CgE011Xp,0g6%/1Lr=N4s2sEAn!GX%6QFW1h&Wk4CgE/@Us")3''Id61Lr=P4s2sF@q.8X%6QFW1h8cm4CgE/0k=d(ANgPc1Lr=R4s2su3&P;YAMdp]%6QFW1hJoo4CgE/0P"d)A3LGb1Lr?s4s2sG@5)1T%6QFW2).9;4CgE/0P"`P2EhR41Lr?u4s2su3&EI&AhZ&*%6QFW2)@E=4D&2;A3LGb1Lr@"4s2sH0f(UL%6QFW2)RQ?4CgE/0P"d,3Bdm71Lr@$4s2sDA77>Z%6QFW2)d]A4>p\[Aj-Yd1Lr@&4s2su3&bDZ@koo*%6QFW2*!iC4>f-1@Qk5`1Lr@O4s2sFAi4''^%6QFW2.A`l4CgE.@q91*0Koq.1Lr@Q4s2sH@q7AZ%6QFW2.Sln4CgE/ARo@a1d2@21Lr@S4s2su3&NR(AS*ha%6QFW2.f#p4CgE/ARoC-3''Id61LrBt4s2sJ0K*E)%6QFW2DIB<4?,''-2EhR41LrC!4s2sH2_\`*%6QFW2D[N>4>p\X1-Q.01LrC#4s2sF2J-J`%6QFW2DmZ@4>f)V3Bdm71LrC%4s2sG2`<BS%6QFW2E*fB4>gV+ANgPc1LrC''4s2sF3+ap0%6QFW2E<rD4?"s''3Bdm71LrCP4s2sG3&!-P%6QFW2Inuo4>^V)0g6%/1LrCT4s2sH@P^#.%6QFW2J,,q4>UMX@m1>a1LrEu4s2sH1GWB&%6QFW2_dK=4?#,U0Koq.1LrF"4s2sF3&=u,%6QFW2`!W?4?,*)2EhR41LrF$4s2sG3B1G2%6QFW2`3cA4>nm)1Hl711LrF&4s2sEAS#F:%6QFW2`EoC4?5E31d2@21LrF(4s2sJAR]78%6QFW2`X&E4>eoK0g6%/1LrFQ4s2sG2dnC(%6QFW2e"rn4>nm)3''Id61LrFS4s2sF0k)t''%6QFW2e5)p4?$\.1Hl711LrFU4s2sJ@l%OW%6QFW2eG5r4?$\Y3''Id61LrI!4s2sG3AFr+%6QFW3&*T>4>f--@m1>a1LrI#4s2sF3&E<Q%6QFW3&<`@4>erR@6P,_1LrI%4s2sG0P*1,%6QFW3&NlB4>f#U@6P,_1LrI''4s2sG3AiZX%6QFW3&a#D4?6n,Aj-Yd1LrI)4s2sI2dnR-%6QFW3&s/F4>gV(0Koq.1LrIR4s2sFAM@RW%6QFW3+>&o4>o,QANgPc1LrIT4s2sI1gsoY%6QFW3+P2q4?-e00g6%/1LrIV4s2sEAN)S4%6QFW3+b>s4>ns)1Hl711LrL"4s2sG3&NQW%6QFW3AE]?4D&2;A3LGb1LrL$4s2sI11k&\%6QFW3AWiA4?,?02*MI31LrL&4s2sIAmmAW%6QFW3AiuC4?5?03''Id_DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,eA2uP3+?VYD1cIT-4>UM.2a/?H3FQB-4q0V1A2uV5+?VMn@PL%U4>UM.3BeQJ2E!BO4q0V1A3"''^+?VP?@V.e54>UM.@QknsA2lGXA7[\[4q0V1A3"-`+?X7JAn4(74>UM.A3M+uA2lG%A7T.X4q0V1A3"3b+?X7JAn4(74>UM.Aj.>"AnGXc4q0V1A77/U+?X0o1b`HP1c@N,4>UMV0g6^B2E*=$4q0V1A775W+?VPB0fV?+4>UMV1HlpDA2lGWA7[VW4q0V1A77;Y+?X0o2)f&XAMQFY4>UMV2*N-FA2lGWA7T:`4q0V1A77A[+?X0o1cT#U3FP)\4>UMV2a/?H1cT#"4q0V1A77G]+?VJh@Q6O\4>UMV3BeQJA2lJ&A7[c04q0V1A78n1+?X0o2)&QN1L`NW4>UMV@QknsA2lG%A7[ST4q0V1A78t3+?X0o1biNO@pqP14>UMVA3M+u2)/Vs4q0V1A79%5+?X0o1biNP0ekj$4>UMVAj.>"2*![/4q0V1A7@5V+?X0o1cJrV@5pF[4>UMW0g6^B1Lag)4q0V1A7@;X+?X0o1hL9.AnF494>UMW1HlpD1H@I)4q0V1A7@AZ+?X0o2DJ`QAN2j_4>UMW2*N-FA2lJ*A7T114q0V1A7@G\+?VG=2DRH*4>UMW2a/?HA2lD*A7T1+4q0V1A7@M^+?VVm2.\r\4>UMW3BeQJA2lJ&A7dZ04q0V1A7At2+?X7JAn4(74>UMW@Qkns2_m''I4q0V1A7B%4+?X0o1c&ZP2`Nu14>UMWA3M+uA2lD#A7db\4q0V1A7B+6+?VVpA77Y24>UMWAj.>"2)7.''4q0V1A7I;W+?VS;2_dK*4>UMX0g6^BA2lDXA7dZ,4q0V1A7IAY+?X0o2)8]R@5g@Z4>UMX1HlpD2)SiQ4q0V1A7IG[+?X0o2.:$-2)7?)4>UMX2*N-F1Gh$H4q0V1A7IM]+?X0o2.U6/1GV-''4>UMX2a/?H1cI-K4q0V1A7IS_+?X0o2)8]Q1M/f[4>UMX3BeQJ2)$pH4q0V1A7K%3+?VG:An!q54>UMX@QknsA2lDUA7f=]4q0V1A7K+5+?X7JAn4(74>UMXA3M+u1cI@''4q0V1A7K17+?X0o2DSfR1cRZ.4>UMXAj.>"A2lD)A7R\S4q0V1A7RAX+?X7JAn4(74>UMY0g6^BA2lGYA7I>L4q0V1A7RGZ+?VY<2)[W-4>UMY1HlpDA2lG&A7di14q0V1A7RM\+?VVm2DRH*4>UMY2*N-F2.SRR4q0V1A7RS^+?X0o2.:$-AiDm_4>UMY2a/?HAnGXc4q0V1A7RY`+?X0o1cAlT0k3BV4>UMY3BeQJ3+6B,4q0V1A7T+4+?X0o2)8]QAi;g^4>UMY@QknsA2lDXA7fCb4q0V1A7T16+?VJi@k^(U4>UMYA3M+uA2lD+A7dQ*4q0V1A7T78+?VY@2DmZ-4>UMYAj.>"A2lG(A7fC-4q0V1A7[GY+?VP:3Aiu04>UMZ0g6^B2.87!4q0V1A7[M[+?X0o2e?N0@q7b44>UMZ1HlpDA2lMZA7I;O4q0V1A7[S]+?X0o2)/WP1,1s%4>UMZ2*N-F1hARR4q0V1A7[Y_+?X0o2)8]Q1Gh9)4>UMZ2a/?H3Ar`Q4q0V1A7[_a+?VPm3+b>`4>UMZ3BeQJA2lGUA7K(Z4q0V1A7]15+?VVD2`Eo04>UMZ@QknsA2lG,A7I>K4q0V1A7]77+?X7JAn4(74>UMZA3M+u2e"U!4q0V1A7]=9+?X0o2DerS@k^(U4>UMZAj.>"A2lD$A7[JM4q0V1A7dMZ+?X7JAn4(74>UM[0g6^B2dnO#4q0V1A7dS\+?VYm1,_<*4>UM[1HlpD1H%+&4q0V1A7dY^+?X0o2*#2W2E<r14>UM[2*N-FA2lD"A7IAL4q0V1A7d_`+?VSC3&<`-4>UM[2a/?H2.SIP4q0V1A7deb+?X0o1h:--0f_E,4>UM[3BeQJAnGXc4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QFWAmmkG4>\s,0Koq.1Lt*,4s2sH2)A]*%6QFWAn+"I4?,;Y2*MI31Lt*.4s2sF3+=d0%6QFWAn=.K4>SoN@m1>a1Lt*04s2su3&EX+A2n*`%6QFX0JG[54>UJ)1d2@21M&6p4s2sJ1,q!P%6QFX0JYg74CgE.3+QPY@6P,_1M&6r4s2sJ1G^^K%6QFX0Jks94CgE/11Xp+0Koq.1M&6t4s2sG@l$,/%6QFX0K)*;4CgE.1Lt''/3''Id61M&7!4s2sI3&3EV%6QFX0K;6=4?,<42*MI31M&7#4s2su3&G&SA26&,%6QFX0O[-f4CgE00k=cQ1Hl711M&7L4s2su3&EL''An!JY%6QFX0Om9h4>pb[3''Id61M&7N4s2su3&NI%AMR[X%6QFX0P*Ej4CgE.2Ip;Q0Koq.1M&7P4s2sD3FOa.%6QFX0ebd64D&2;A3LGb1M&9q4s2t"AnGR;%6QFX0etp84>\oOAj-Yd1M&9s4s2sG2I\R.%6QFX0f2'':4CgE02e6E,A3LGb1M&9u4s2su3&W[*@pq2X%6QFX0fD3<4?,>X1Hl711M&:"4s2sE0P"cZ%6QFX0fV?>4CgE.2.U8P@6P,_1M&:$4s2sD3FOX+%6QFX0k!6g4CgE.A7T:-Aj-Yd1M&:M4s2su3&WI$@q@V`%6QFX0k3Bi4CgE.1h:3.2*MI31M&:O4s2sH0k"TV%6QFX0kENk4?,,T2EhR41M&:Q4s2su3&WU(A77G]%6QFX1,(m74D&2;A3LGb1M&<r4s2sE@q%A\%6QFX1,;$94CgE/@q9(XAj-Yd1M&<t4s2su3&WO&A78q2%6QFX1,M0;4CgE/0P"]Q@6P,_1M&=!4s2sH@Pfl)%6QFX1,_<=4?#8ZANgPc1M&=#4s2sGAn!V]%6QFX1,qH?4CgE03+QT2Aj-Yd1M&=%4s2sG@5''K$%6QFX11<?h4CgE00P"cM3''Id61M&=N4s2sF1LW%&%6QFX11NKj4CgE/@Us%(2a.[51M&=P4s2sJ1Lar[%6QFX11`Wl4>o/T2EhR41M&=R4s2sJ2`5,0%6QFX1GD!84CgE00P"]PAj-Yd1M&?s4s2su3&P,TA7@D[%6QFX1GV-:4CgE.1h:30A3LGb1M&?u4s2su3&G,UAMRj]%6QFX1Gh9<4>gY/2*MI31M&@"4s2su3&WR''@l#f&%6QFX1H%E>4>f&P2*MI31M&@$4s2sJ3&39R%6QFX1H7Q@4CgE011XoP3Bdm71M&@&4s2sFA78q2%6QFX1LWHi4CgE/11XoT3''Id61M&@O4s2sG2.C,\%6QFX1LiTk4>o312*MI31M&@Q4s2sF1Lr7)%6QFX1M&`m4CgE/11Xs)2*MI31M&@S4s2su3&G5XAiMM/%6QFX1b_*94>UJ%0g6%/1M&Bt4s2sG2`!?U%6QFX1bq6;4CgE.2e6N/0g6%/1M&C!4s2sD2.L&Y%6QFX1c.B=4>]$0@6P,_1M&C#4s2t"AnGR;%6QFX1c@N?4?#5R3''Id61M&C%4s2sJ1,UpQ%6QFX1cRZA4>\j+1-Q.01M&C''4s2sE1Lt)]%6QFX1grQj4>f-23''Id61M&CP4s2t"AnGR;%6QFX1h/]l4>f#V@Qk5`1M&CR4s2su3&WX)A7[bb%6QFX1hAin4?5)M1-Q.01M&CT4s2sF2.J@)%6QFX2)%3:4>\oL3Bdm71M&Eu4s2sHAN+3b%6QFX2)7?<4>pe/2EhR41M&F"4s2sG@:CrT%6QFX2)IK>4>Sg*1d2@21M&F$4s2su3&P8X@l\''`%6QFX2)[W@4>SoP@6P,_1M&F&4s2t"AnGR;%6QFX2)mcB4CgE00P"ZK1d2@21M&F(4s2su3&P8XAM[m]%6QFX2.8Zk4>UMZ@Qk5`1M&FQ4s2su3&G5X@q%A\%6QFX2.Jfm4CgE/3+QSX3''Id61M&FS4s2sF2I^8^%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>UP+ANh5!3+XdT4q0V1AMn''`+?VMj2Inu\4>UP,0KpUA2D\lT4q0V1AMu8,+?X7JAn4(74>UP,1-QgC2Dm9E4q0V1AMu>.+?VM>11WQX4>UP,1d3$E2)I$r4q0V1AMuD0+?X0o2E,/W3B0234>UP,2Ei6G1h/IT4q0V1AMuJ2+?VM>1,;$&4>UP,3''JHI2)[1#4q0V1AMuP4+?VSp1c[`/4>UP,@6Per2*!TQ4q0V1AN"!]+?X0o1hL9/1b_*&4>UP,@m2"t3&`cM4q0V1AN"''_+?VV<0fM9*4>UP,ANh5!3Fk!Y4q0V1AN"-a+?VVo0fV?+4>UP-0KpUA2`<I$4q0V1AN)>-+?VYo1c7H+4>UP-1-QgC2`<L(4q0V1AN)D/+?VSA@Q?U]4>UP-1d3$E3AWKL4q0V1AN)J1+?VM<1GV-''4>UP-2Ei6G3&*6L4q0V1AN)P3+?VV=AiDm_4>UP-3''JHI2)[3I4q0V1AN)V5+?VV<1GV-''4>UP-@6Per3&E?L4q0V1AN+''^+?VV;@UqY34>UP-@m2"t2)SrR4q0V1AN+-`+?VSC2DRH*4>UP-ANh5!2)[9I4q0V1AN+3b+?VM<0fD3)4>UP.0KpUAA2lD%A7[c34q0V1AN2D.+?VG;@q@h54>UP.1-QgC2)[-G4q0V1AN2J0+?VM=AhcIY4>UP.1d3$E2E#/%4q0V1AN2P2+?X0o2DAZQAMQFY4>UP.2Ei6G1H%"!4q0V1AN2V4+?VS?1Gh9)4>UP.3''JHI2)Su"4q0V1AN2\6+?VM=@UVG04>UP.@6Per2)I<P4q0V1AN4-_+?VM=2_mQ+4>UP.@m2"tA2lD%A7IGN4q0V1AN43a+?X0o1c&ZP3As&14>UP.ANh5!2.^;P4q0V1AN49c+?X0o1c&ZR2`<i/4>UP/0KpUAA2lDTA7IMQ4q0V1AN;J/+?X0o1c&ZR@5:"U4>UP/1-QgC3FuW.4q0V1AN;P1+?VSn2.8ZX4>UP/1d3$EAnGXc4q0V1AN;V3+?X0o1c/`Q2`3c.4>UP/2Ei6G2DR:''4q0V1AN;\5+?VYC2Inu\4>UP/3''JHI2)I<M4q0V1AN;b7+?VVn@q7b44>UP/@6Per2_eo&4q0V1AN=3`+?VY=2`<i/4>UP/@m2"t2D\rT4q0V1AN=9b+?VP<@Q?U]4>UP/ANh5!2D\rV4q0V1AN=?d+?VM=2E<r14>UPW0KpUAA2lDSA7dYS4q0V1ARR;W+?VYo2_mQ+4>UPW1-QgCA2lDTA7]4+4q0V1ARRAY+?VM93FP)\4>UPW1d3$E1GiWS4q0V1ARRG[+?X0o1c&ZQ@5g@Z4>UPW2Ei6G2)/Mu4q0V1ARRM]+?VM<1h8cZ4>UPW3''JHI2)R+"4q0V1ARRS_+?VM=0f)!&4>UPW@6Per2`<QP4q0V1ART%3+?VVp11WQX4>UPW@m2"tA2lGTA7IT-4q0V1ART+5+?VS?@PL%U4>UPWANh5!3&"f"4q0V1ART17+?VVC0Jks&4>UPX0KpUAAnGXc4q0V1AR[AX+?VVC@lHR\4>UPX1-QgC3&+l#4q0V1AR[GZ+?VV?0k3BV4>UPX1d3$E1c/cR4q0V1AR[M\+?VS=0Jks&4>UPX2Ei6G3&<6t4q0V1AR[S^+?VM>2e"r[4>UPX3''JHI3AEHH4q0V1AR[Y`+?VY>0K;6*4>UPX@6PerA2lD%A7]@54q0V1AR]+4+?VS<2E!`.4>UPX@m2"t1cI7&4q0V1AR]16+?X0o2.gB2AiW$a4>UPXANh5!1b`NM4q0V1AR]78+?VYo2.Sl[4>UPY0KpUA2Dm4$4q0V1ARdGY+?VJ?AhuU[ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1M(&O4s2su3&NF$An<Y[%6QFX@l$:k4CgE02e6GX@m1>a1M(&Q4s2t"AnGR;%6QFX@l6Fm4CgE/A7T4Z1Hl711M(&S4s2t!A27UX%6QFX@lHRo4CgE/3+QMU3''Id61M(&U4s2sH0juk%%6QFX@lZ^q4?$h2ANgPc1M('')4s2sJA2Q&)%6QFX@q%VE4>SiR2a.[51M(''+4s2sG@q%2W%6QFX@q7bG4>eoQ2a.[51M(''-4s2sD3FlV`%6QFX@qInI4CgE/0k=iM3''Id61M()N4s2sI1,<B(%6QFXA2-7j4>erP@Qk5`1M()P4s2t!A2H)+%6QFXA2?Cl4>UD''1-Q.01M()R4s2sH1H.-S%6QFXA2QOn4CgE02e6K.@m1>a1M()T4s2sEA2$#-%6QFXA2c[p4?6k^A3LGb1M()V4s2t"AnGR;%6QFXA2ugr4>^P*@Qk5`1M(**4s2su3&W^+An5I:%6QFXA7@_F4?,/T@m1>a1M(*,4s2su3&P2VAR[DY%6QFXA7RkH4>nuNANgPc1M(*.4s2sHA26#+%6QFXA7e"J4>UD$@6P,_1M(,O4s2sJ0JGIM%6QFXAMH@k4>em(@m1>a1M(,Q4s2sDAN)G0%6QFXAMZLm4>SlS@6P,_1M(,S4s2sE2.\d3%6QFXAMlXo4CgE.0k=cRANgPc1M(,U4s2sH2Dd*O%6QFXAN)dq4>gPZ0Koq.1M(,W4s2su3&EF%AR[P]%6QFXAN;ps4?#5Y@6P,_1M(-+4s2su3&P;YAhmp]%6QFXAR[hG4>f*,2a.[51M(--4s2sE0OeWX%6QFXARmtI4>f#U@m1>a1M(-/4s2sJ@Q7g\%6QFXAS++K4>gY.1d2@21M(/P4s2sH2Dm<T%6QFXAhcIl4CgE03FlVU1d2@21M(/R4s2sJAN2P2%6QFXAhuUn4>^PZ0g6%/1M(/T4s2t"AnGR;%6QFXAi2ap4>Sp.@Qk5`1M(/V4s2sG0ek[P%6QFXAiDmr4CgE/0P"d-1-Q.01M(/X4s2t!A2c;.%6QFXAiW$t4>f#SA3LGb1M(0,4s2su3&W^+AM?#+%6QFXAn!qH4>elM1d2@21M(0.4s2sD2.:#Z%6QFXAn4(J4D&2;A3LGb1M(004s2sJA2e!^%6QFXAnF4L4?$b-2EhR41M/<p4s2sJ@P^#.%6QFY0JPa64>f''.ANgPc1M/<r4s2sF@l6&+%6QFY0Jbm84>o$,1Hl711M/<t4s2su3&WX)@q78W%6QFY0Ju$:4CgE/3+QVW2*MI31M/=!4s2sI2IU,[%6QFY0K20<4CgE.1Lt#O3''Id61M/=#4s2su3&EF%A2c5,%6QFY0KD<>4Cr%_@m1>a1M/=L4s2sF0kOu\%6QFY0Od3g4CgE.2e6MSAj-Yd1M/=N4s2sFA2n-a%6QFY0P!?i4?5>S1Hl711M/=P4s2su3&ER)A7RDY%6QFY0P3Kk4?6t40g6%/1M/?q4s2sJ0Jm9''%6QFY0ekj74?$_(Aj-Yd1M/?s4s2sJ@PBQ$%6QFY0f)!94>gVZ0g6%/1M/?u4s2sH@UV&V%6QFY0f;-;4>nrQ3''Id61M/@"4s2sG1G^mP%6QFY0fM9=4?6h^Aj-Yd1M/@$4s2sH@Uj"6%6QFY0f_E?4?6k+@6P,_1M/@M4s2sH@lIs_%6QFY0k*<h4D&2;A3LGb1M/@O4s2sH@l,r)%6QFY0k<Hj4?$b02EhR41M/@Q4s2sJ@kfi)%6QFY0kNTl4?$_]@m1>a1M/Br4s2sJ@PBf+%6QFY1,1s84D&2;A3LGb1M/Bt4s2sJ@kqUZ%6QFY1,D*:4?7"2@6P,_1M/C!4s2sF2)d<T%6QFY1,V6<4>gSX1Hl7ZDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,eAhl8.+?VJmAn4(74>US)2a/?H3Ft314q0V1Ahl>0+?VJmAhlOZ4>US)3BeQJ2)7''D4q0V1AhmdY+?VM:A2-7W4>US)@Qkns2)dEP4q0V1Ahmj[+?VM82)[W-4>US)A3M+u2*#,)4q0V1Ahmp]+?VMm0etp%4>US)Aj.>"3B(G-4q0V1Ahu,)+?VYp@:DD04>US*0g6^B3+b$X4q0V1Ahu2++?VM<2E<r14>US*1HlpD3B(D(4q0V1Ahu8-+?VYE1b_*&4>US*2*N-F3B(DU4q0V1Ahu>/+?VM;11NKW4>US*2a/?H2DI!A4q0V1AhuD1+?VPB11NKW4>US*3BeQJ2)AcO4q0V1Ai!jZ+?VYo0O[-S4>US*@Qkns3Fjg!4q0V1Ai!p\+?VJj1L`NW4>US*A3M+u3Ar]K4q0V1Ai"!^+?VPB3&!N*4>US*Aj.>"2)&Gs4q0V1Ai)2*+?VS?1c@N,4>US+0g6^BA2lD''A7d`14q0V1Ai)8,+?VYEA77Y24>US+1HlpD2)7*H4q0V1Ai)>.+?X4G@lZ^^4>US+2*N-F3AEBO4q0V1Ai)D0+?VYB3&*T+4>US+2a/?H3AEC$4q0V1Ai)J2+?X0o2Ip?.2`!W,4>US+3BeQJ3AEBG4q0V1Ai*p[+?X0o2D\lT3B'',24>US+@Qkns2D[:(4q0V1Ai+!]+?VPj@pqP14>US+A3M+u2)[0D4q0V1Ai+''_+?VY=3+Y8_4>US+Aj.>"2`3O&4q0V1Ai28++?VP;3&Nl/4>US,0g6^B2`!:&4q0V1Ai2>-+?VSm2_[E)4>US,1HlpDA2lG*A7IAL4q0V1Ai2D/+?X4GA7Ie44>US,2*N-F2`>2)4q0V1Ai2J1+?VYn3Fk;_4>US,2a/?H1hAFN4q0V1Ai2P3+?X0o1c&ZPA2HIZ4>US,3BeQJ3&>#T4q0V1Ai4!\+?VVC1bq6(4>US,@QknsARo@/4q0V1Ai4''^+?VMk1grQW4>US,A3M+u2E>8$4q0V1Ai4-`+?X7JAn4(74>US,Aj.>"AnGXc4q0V1Ai;>,+?VM:0kNTY4>US-0g6^B2.U;V4q0V1Ai;D.+?VJl@q@h54>US-1HlpD2IeNt4q0V1Ai;J0+?X0o1b`HNAhlOZ4>US-2*N-F1hJO(4q0V1Ai;P2+?VM<3Fb5^4>US-2a/?HAnGXc4q0V1Ai;V4+?VM:3FP)\4>US-3BeQJ3+P!(4q0V1Ai='']+?VG;An=.84>US-@QknsAnGXc4q0V1Ai=-_+?VG;AhuU[4>US-A3M+uARoC24q0V1Ai=3a+?VPk2)7?)4>US-Aj.>"3AEI&4q0V1AiDD-+?VYr@5U4X4>US.0g6^B3FY!-4q0V1AiDJ/+?VYD11`WY4>US.1HlpD3B1J)4q0V1AiDP1+?VYm@UVG04>US.2*N-F3FuVY4q0V1AiDV3+?VYq3&Ef.4>US.2a/?H2e"Ku4q0V1AiD\5+?X4H0JYg$4>US.3BeQJ2I^9,4q0V1AiF-^+?VVC0fV?+4>US.@Qkns2eG!.4q0V1AiF3`+?X4H0K)*(4>US.A3M+u2)[3D4q0V1AiF9b+?X0o2E>;Z1grQW4>US.Aj.>"3+Y$-4q0V1AiMJ.+?VYr2)@E*4>US/0g6^BAS!Q)4q0V1AiMP0+?VVoA2HIZ4>US/1HlpD3+XpY4q0V1AiMV2+?VYq0k3BV4>US/2*N-F3+Xcu4q0V1AiM\4+?VP;3&3Z,4>US/2a/?HA2lJ$A7dc24q0V1AiMb6+?VVp1,qH,4>US/3BeQJ3+Y$+4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QFY3+4un4?$\Z1Hl711M/UU4s2sH@5DIY%6QFY3+G,p4?#613''Id61M/UW4s2sG@qB(4%6QFY3+Y8r4?-b-2a.[51M/UY4s2sH2D@''R%6QFY3A<W>4?7"/2EhR41M/X%4s2sG@q0(6%6QFY3ANc@4?,912EhR41M/X''4s2sH2.JF+%6QFY3A`oB4CgE03+QT01-Q.01M/X)4s2sH3&NKU%6QFY3As&D4?-k*@m1>a1M/X+4s2sH11`4)%6QFY3B02F4?#&T0g6%/1M/X-4s2sI@PVIX%6QFY3FP)o4?#&M1-Q.01M/XV4s2sH1hJI+%6QFY3Fb5q4?-h^@Qk5`1M/XX4s2su3&NI%AR]+4%6QFY3FtAs4?,5SAj-Yd1M/XZ4s2sFAn#14%6QFY@5''kf4?,</0Koq.1M1&M4s2sE1h&C-%6QFY@5:"h4Cr(ZAj-Yd1M1&O4s2su3&P/UAM>u*%6QFY@5L.j4CgE0@Us%.2a.[51M1&Q4s2sI@5ha]%6QFY@5^:l4CgE.3FlYT@Qk5`1M1&S4s2t!AMZ2-%6QFY@5pFn4>nm*A3LGb1M1&U4s2sH2E!KX%6QFY@:;>B4?6h\2a.[51M1'')4s2sJA2H,,%6QFY@:MJD4?52UANgPc1M1''+4s2sJ@Q7s`%6QFY@:_VF4?,932*MI31M1''-4s2su3&`d,Ai!p\%6QFY@PBtg4D&2;A3LGb1M1)N4s2sI@qIY`%6QFY@PU+i4?#&O@m1>a1M1)P4s2sJ2_m*O%6QFY@Pg7k4?6k[0Koq.1M1)R4s2sD2.SU/%6QFY@Q$Cm4?#$)1-Q.01M1)T4s2sE@k]i*%6QFY@Q6Oo4?$b-0g6%/1M1)V4s2sJ3Ab/.%6QFY@UVGC4>noO3Bdm71M1**4s2sE@k]`''%6QFY@UhSE4?6t52EhR41M1*,4s2sG0fNW,%6QFY@V%_G4Cr(\A3LGb1M1*.4s2sF2`522%6QFY@k^(h4>noPAj-Yd1M1,O4s2sG11<()%6QFY@kp4j4>nrN3Bdm71M1,Q4s2t"AnGR;%6QFY@l-@l4>UD''@m1>a1M1,S4s2sG0kE+(%6QFY@l?Ln4>ep''@6P,_1M1,U4s2sG1H%''R%6QFY@lQXp4>o/Q1-Q.01M1,W4s2sD2.SI+%6QFY@pqPD4>gY,2a.[51M1-+4s2sIAn5=6%6QFY@q.\F4CgE01Lt&Q3Bdm71M1--4s2t!AMn$_%6QFY@q@hH4>eg''3Bdm71M1-/4s2sH3A<?T%6QFYA2$1i4>eoN1-Q.01M1/P4s2sJ2D[<V%6QFYA26=k4CgE.1Lt)R@Qk5`1M1/R4s2sE0K(dP%6QFYA2HIm4Cr(^2EhR41M1/T4s2sH2eHVb%6QFYA2ZUo4Cr(^3''Id61M1/V4s2sH@q.8X%6QFYA2laq4CgE/2e6MT@6P,_1M1/X4s2sH@q9"3%6QFYA77YE4?$\(A3LGb1M10,4s2sI0K(gQ%6QFYA7IeG4?,#Q1Hl711M10.4s2sHA2Ig\%6QFYA7[qI4?#,O2*MI31M1004s2sH1hJL,%6QFYAM?:j4?,>]1d2@21M12Q4s2sI1,33$%6QFYAMQFl4>o,P@m1>a1M12S4s2sI0K([M%6QFYAMcRn4CgE/A7T102EhR41M12U4s2sI0K!<''%6QFYAMu^p4?#*/0Koq.1M12W4s2sI0ebCI%6QFYAN2jr4?#2S1d2@21M12Y4s2sI3B0#_%6QFYARRbF4CgE/3Fl`3@m1>a1M13-4s2sH2)R0R%6QFYARdnH4?,9.3Bdm71M13/4s2sI2e-D_%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>US\ANh5!3&+o&4q0V1An>R<+?VVB3+G,]4>US]0KpUA3+4X(4q0V1AnEb]+?VVn@:VP24>US]1-QgC3+=^#4q0V1AnEh_+?VSA11EEV4>US]1d3$E2`,,+4q0V1AnEna+?VV?A77Y24>US]2Ei6G2E>5%4q0V1AnEtc+?VVo@5^:Y4>US]3''JHIAS!i24q0V1AnF%e+?VVD@6$L\4>US]@6PerAnGXc4q0V1AnGL9+?VPm@Q?U]4>US]@m2"t3&b>%4q0V1AnGR;+?X0o2)&QN0ekj$4>US]ANh5!2`,))4q0V1AnGX=+?VGjA7@_34>\`G0KpUA2_d6L4q0V20JG4F+?VP9@5L.W4>\`G1-QgC2DI4%4q0V20JG:H+?VGiA2-7W4>\`G1d3$EAnGXc4q0V20JG@J+?VP92`Eo04>\`G2Ei6GAS!l14q0V20JGFL+?VSp2_dK*4>\`G3''JHIA2lMZA7RGN4q0V20JGLN+?VP9AN;p`4>\`G@6Per1h&CT4q0V20JHs"+?X0o1biNO1cIT-4>\`G@m2"t3AP,S4q0V20JI$$+?X0o1biNOA7e"74>\`GANh5!A2lDXA7f=/4q0V20JI*&+?VV@1h/]Y4>\`H0KpUA1brMt4q0V20JP:G+?VS=AS++84>\`H1-QgC2)/Pt4q0V20JP@I+?VG<1c[`/4>\`H1d3$EA2lG%A7RMP4q0V20JPFK+?X0o2DSfRAMcR[4>\`H2Ei6G3AWKK4q0V20JPLM+?X0o1cAlTA7@_34>\`H3''JHI3&5&V4q0V20JPRO+?X0o1hL9.@lQX]4>\`H@6Per2`NU''4q0V20JR$#+?VP@1c.B*4>\`H@m2"t2DSfT4q0V20JR*%+?X0o2)8]Q1G_3(4>\`HANh5!A2lJ&A7T+W4q0V20JR0''+?X0o1b`HO@5''kS4>\`I0KpUAA2lGTA7f:,4q0V20JY@H+?X0o1c/`T0Ju$''4>\`I1-QgC1hL0*4q0V20JYFJ+?X0o1c])VARmt64>\`I1d3$E2)$^D4q0V20JYLL+?X0o2.C*,1-%N-4>\`I2Ei6GA2lGXA7[_W4q0V20JYRN+?X0o1h:-.0JG["4>\`I3''JHIA2lG%A7]4)4q0V20JYXP+?X0o1c])W0f)!&4>\`I@6PerAnGXc4q0V20J[*$+?X0o1b`HP2e>/^4>\`I@m2"t2.g8R4q0V20J[0&+?X0o1b`HP3&!N*4>\`IANh5!A2lD"A7dYW4q0V20J[6(+?VPnA7@_34>\`J0KpUAA2lD#A7I?+4q0V20JbFI+?VM8A7[q64>\`J1-QgC2)-d>4q0V20JbLK+?VG:2dnlZ4>\`J1d3$E2)-dr4q0V20JbRM+?VYD2Ieo[4>\`J2Ei6G1H.-H4q0V20JbXO+?VV?0fD3)4>\`J3''JHIA2lG%A7T+*4q0V20Jb^Q+?X0o1biNN3&a#14>\`J@6Per2).!C4q0V20Jd0%+?X0o1h1''.@Pg7X4>\`J@m2"t2).!t4q0V20Jd6''+?X0o1brTRAnF494>\`JANh5!A2lD*A7K4]4q0V20Jd<)+?X0o1b`HOAMlX\4>\`K0KpUAA2lD+A7RJM4q0V20JkLJ+?X0o1biNO3+Y8_4>\`K1-QgCA2lDUA7[PQ4q0V20JkRL+?X0o1cAlT3&<`-4>\`K1d3$E2.AO#4q0V20JkXN+?VVB2e5)]4>\`K2Ei6GA2lD#A7T.*4q0V20Jk^P+?X0o1hL9.3B9844>\`K3''JHI2)/Pq4q0V20JkdR+?VM9@Q6O\4>\`K@6Per3Fjp&4q0V20Jm6&+?VM9@lZ^^4>\`K@m2"t2)/TQ4q0V20Jm<(+?VM9A2-7W4>\`KANh5!1Ljs*4q0V20JmB*+?VM9A2?CY4>\`L0KpUAA2lG%A7]1-4q0V20JtRK+?VM9@P^1WASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1b^dB4s2t"AnGR;%6QI$2)@E=4D&2;A3LGb1b^dD4s2sF0kFlZ%6QI$2)RQ?4?,-,A3LGb1b^dF4s2sG3AY51%6QI$2)d]A4CgE.A7T:-A3LGb1b^dH4s2sFAiF0_%6QI$2*!iC4>elJ@Qk5`1b^dq4s2sF1,:aO%6QI$2.A`l4>elM@m1>a1b^ds4s2sF11E+)%6QI$2.Sln4>elO2a.[51b^du4s2sF1-%0T%6QI$2.f#p4>em''3Bdm71b^gA4s2sF11N1*%6QI$2DIB<4?$b)2*MI31b^gC4s2sI2)I''P%6QI$2D[N>4>em*0Koq.1b^gE4s2sI2DAZ*%6QI$2DmZ@4CgE/@:Wt)1Hl711b^gG4s2su3&bDZ@kp&.%6QI$2E*fB4CgE011Xs,ANgPc1b^gI4s2sF2)I<W%6QI$2E<rD4>pb]3Bdm71b^gr4s2su3&G5XAiMJ.%6QI$2I\im4CgE.11XoQ1d2@21b^gt4s2su3&G5XAn>I9%6QI$2Inuo4>eoN1Hl711b^h!4s2t"AnGR;%6QI$2J,,q4CgE.11Y!.1-Q.01b^jB4s2sG@q/t3%6QI$2_dK=4CgE.2.U;S2EhR41b^jD4s2sG3&+l+%6QI$2`!W?4?#'',2*MI31b^jF4s2sG0Jm3%%6QI$2`3cA4>UPW@6P,_1b^jH4s2sD3+HG^%6QI$2`EoC4CgE.2.U903''Id61b^jJ4s2sH0k=fY%6QI$2`X&E4>\m''1-Q.01b^js4s2sF1H&c-%6QI$2e"rn4>eoR1d2@21b^ju4s2su3&WL%ART%3%6QI$2e5)p4>eoRANgPc1b^k"4s2su3&bDZ@l#l(%6QI$2eG5r4CgE.2.U5X2EhR41b^mC4s2su3&EL''AMGu)%6QI$3&*T>4?#312EhR41b^mE4s2sF1H@6T%6QI$3&<`@4CgE011XrV@Qk5`1b^mG4s2sF1LVt$%6QI$3&NlB4>ep''@Qk5`1b^mI4s2sF1LXiY%6QI$3&a#D4?#'')2a.[51b^mK4s2su3&NR(AiDJ/%6QI$3&s/F4>US,3Bdm71b^mt4s2sH1HAr/%6QI$3+>&o4>ep)0g6%/1b^n!4s2sF1Li:+%6QI$3+P2q4>p\+3Bdm71b^n#4s2sEAMcD2%6QI$3+b>s4>f''0ANgPc1b^pD4s2sF1LrL0%6QI$3AE]?4>UDS@Qk5`1b^pF4s2su3&EC$AiOBd%6QI$3AWiA4>ep+0Koq.1b^pH4s2su3&G5XAn>F8%6QI$3AiuC4CgE.@Us"X1Hl711b^pJ4s2sF1M/O/%6QI$3B'',E4CgE.1LsuS2a.[51b^pL4s2sF1bgdM%6QI$3B98G4?"rQ3Bdm71b^pu4s2sF2)8W)%6QI$3FY/p4>o)T2a.[51b^q"4s2sGA2Rg[%6QI$3Fk;r4>erRA3LGb1b^q$4s2su3&P,TAi2A.%6QI$3G(Gt4CgE.1Lt#T1d2@21b`>l4s2sF2)So.%6QI$@50qg4>erTAj-Yd1b`>n4s2sF1gr4)%6QI$@5C(i4>]!*2EhR41b`>p4s2su3&EL''Ah[aZ%6QI$@5U4k4CgE.1Lt''-A3LGb1b`>r4s2sDA7@AZ%6QI$@5g@m4CgE.1Lt#QA3LGb1b`>t4s2su3&WO&A7B%4%6QI$@6$Lo4CgE.3Fl\]3''Id61b`?H4s2sF2)I6U%6QI$@:DDC4>^PZA3LGb1b`?J4s2sF1brZ,%6QI$@:VPE4?#)O2a.[51b`?L4s2sF2)mKX%6QI$@:h\G4>f!)3Bdm71b`Am4s2t"AnGR;%6QI$@PL%h4CgE.2Ip<.2a.[51b`Ao4s2su3&NC#@l%OW%6QI$@P^1j4>\oQ1-Q.01b`Aq4s2su3&NF$@l#u+%6QI$@Pp=l4>o*,1Hl7ZDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f0Ocq(+?X0o1c/`Q@Pg7X4>\a$2a/?H2)[6L4q0V20Od"*+?VP?@q7b44>\a$3BeQJA2lDUA7[`/4q0V20OeHS+?VP?@5L.W4>\a$@QknsAnGXc4q0V20OeNU+?VM>1h8cZ4>\a$A3M+u2)[:''4q0V20OeTW+?VSBAhcIY4>\a$Aj.>"2)]&$4q0V20Ole#+?VYC3&a#14>\a%0g6^B2)AiU4q0V20Olk%+?VM?0JG["4>\a%1HlpD2)]#X4q0V20Olq''+?VM>ARmt64>\a%2*N-FA2lJ&A7d_X4q0V20Om")+?VG<1,D*''4>\a%2a/?HA2lD&A7[T04q0V20Om(++?VM?1c@N,4>\a%3BeQJA2lG#A7T++4q0V20OnNT+?VPl2J#&]4>\a%@Qkns2_[4#4q0V20OnTV+?VM?1bq6(4>\a%A3M+u1H&\s4q0V20OnZX+?X0o2.C*+2e>/^4>\a%Aj.>"2)f))4q0V20Ouk$+?X0o1c8fR0fD3)4>\a&0g6^B2)m9G4q0V20Ouq&+?X0o1c8fR2)IK+4>\a&1HlpDA2lG#A7d_U4q0V20P!"(+?VM@1,_<*4>\a&2*N-FA2lG%A7fF24q0V20P!(*+?VM@0kNTY4>\a&2a/?H2)o#Q4q0V20P!.,+?VG;2DIB)4>\a&3BeQJ2)o/$4q0V20P"TU+?VM@A7Ie44>\a&@QknsA2lD&A7[Q,4q0V20P"ZW+?VM@An!q54>\a&A3M+u2.C004q0V20P"`Y+?VM?1c%<)4>\a&Aj.>"A2lJ,A7RPO4q0V20P)q%+?X0o2)&QP2`Nu14>\a''0g6^B3AY2%4q0V20P*"''+?VG;@50qT4>\a''1HlpD2*!C''4q0V20P*()+?VPA@5^:Y4>\a''2*N-F1H&`!4q0V20P*.++?VPn2*!i04>\a''2a/?HA2lD''A7[Q.4q0V20P*4-+?VMi1,M0(4>\a''3BeQJAnGXc4q0V20P+ZV+?X0o1c8fT3ANc-4>\a''@Qkns3&NBI4q0V20P+`X+?VMA@lZ^^4>\a''A3M+uA2lD%A7RN.4q0V20P+fZ+?X0o2.C*+3&*T+4>\a''Aj.>"A2lGUA7RH(4q0V20P3"&+?X0o1c8fUA7Ie44>\a(0g6^B2*#2-4q0V20P3((+?X0o1c8fUAn!q54>\a(1HlpDA2lD''A7f:+4q0V20P3.*+?X0o2.C*,@5^:Y4>\a(2*N-F2Ina$4q0V20P34,+?X0o1cAlS1,qH,4>\a(2a/?HA2lD''A7]:/4q0V20P3:.+?VMAAiW$a4>\a(3BeQJA2lGUA7[ST4q0V20P4`W+?VMi@:DD04>\a(@Qkns2.8C!4q0V20P4fY+?VG<AMu^]4>\a(A3M+uA2lG%A7T+/4q0V20P4l[+?X7JAn4(74>\a(Aj.>"1H.!I4q0V20eb:F+?VMi3As&14>\cH0g6^B2`*EM4q0V20eb@H+?VMiA2?CY4>\cH1HlpDA2lGUA7f7)4q0V20ebFJ+?X0o1c])W2)IK+4>\cH2*N-FA2lD(A7RDL4q0V20ebLL+?VG=1GV-''4>\cH2a/?HA2lD''A7]404q0V20ebRN+?VMm3&<`-4>\cH3BeQJ2)8\r4q0V20ed$"+?VMj2`<i/4>\cH@Qkns2DmHR4q0V20ed*$+?VMj2e,#\4>\cHA3M+uA2lGXA7[H+4q0V20ed0&+?VJ70Jks&4>\cHAj.>"1cR@''4q0V20ek@G+?X0o1b`HO0Jks&4>\cI0g6^B2.C)R4q0V20ekFI+?X0o1cAlU1Gh9)4>\cI1HlpDA2lG)A7T1[4q0V20ekLK+?X0o1biNO@5U4X4>\cI2*N-F2.C/R4q0V20ekRM+?VMj3Fk;_4>\cI2a/?H1h8<p4q0V20ekXO+?VMk0Ju$''4>\cI3BeQJA2lD(A7dYT4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI%0k!6g4>gV''1Hl711bg^o4s2sH1Lju[%6QI%0k3Bi4>gV''1d2@21bg^q4s2su3&ER)@pq5Y%6QI%0kENk4CgE/@:Wt*3''Id61bg^s4s2sF@l-20%6QI%1,(m74>]$.A3LGb1bga?4s2sF@lQ>0%6QI%1,;$94>gV[3Bdm71bgaA4s2sF@qB79%6QI%1,M0;4>gY/@Qk5`1bgaC4s2su3&ER)A7dhc%6QI%1,_<=4CgE.2e6JU2a.[51bgaE4s2sFA2,c%%6QI%1,qH?4>gY(3''Id61bgaG4s2sFA2H2.%6QI%11<?h4CgE.2e6K.1d2@21bgap4s2sF@q&k1%6QI%11NKj4>gY[2a.[51bgar4s2sI11k#[%6QI%11`Wl4>SrPA3LGb1bgat4s2su3&NI%A2#`%%6QI%1GD!84CgE.3+QMU3Bdm71bgd@4s2su3&EU*A2c;.%6QI%1GV-:4?,)U2a.[51bgdB4s2sD3&<HV%6QI%1Gh9<4>UGV1-Q.01bgdD4s2sFAMRg\%6QI%1H%E>4>pV-@6P,_1bgdF4s2t"AnGR;%6QI%1H7Q@4Cp6&Aj-Yd1bgdH4s2su3&NF$@q&q3%6QI%1LWHi4CgE.1Lt!+1Hl711bgdq4s2sF1LW1*%6QI%1LiTk4>^VY2a.[51bgds4s2t"AnGR;%6QI%1M&`m4>ep''3''Id61bgdu4s2su3&EL''AiDG.%6QI%1b_*94>g\(3Bdm71bggA4s2t!0f(dQ%6QI%1bq6;4CgE00k=cR1-Q.01bggC4s2sFAS*qd%6QI%1c.B=4>g\^@Qk5`1bggE4s2sD3+4L)%6QI%1c@N?4>g\^@m1>a1bggG4s2sG3&>,0%6QI%1cRZA4?55Q@Qk5`1bggI4s2sFAh[aZ%6QI%1grQj4CgE.0P"^(0g6%/1bggr4s2su3&bDZ@lZA0%6QI%1h/]l4>UDVANgPc1bggt4s2su3&EI&Ai!jZ%6QI%1hAin4>g_,@6P,_1bgh!4s2su3&P,T@lQG3%6QI%2)%3:4CgE.3+QW30Koq.1bgjB4s2su3&EX+@lH,+%6QI%2)7?<4>g_/1Hl711bgjD4s2su3&P/UAN"*`%6QI%2)IK>4>g_01-Q.01bgjF4s2sJ1GgdL%6QI%2)[W@4CgE011XrP2EhR41bgjH4s2sFAmmV^%6QI%2)mcB4>gYY2EhR41bgjJ4s2sDA2Rs_%6QI%2.8Zk4CgE/1h:/T0Koq.1bgjs4s2su3&ER)Ai='']%6QI%2.Jfm4CgE/@q9(]3''Id61bgju4s2su3&EX+AMuM3%6QI%2.\ro4?5-,2EhR41bgk"4s2su3&E="AN=<c%6QI%2D@<;4CgE011XrO3Bdm71bgmC4s2sG0JbFI%6QI%2DRH=4>o)W2*MI31bgmE4s2sD3ArZW%6QI%2DdT?4>UMX2a.[51bgmG4s2sD2D[?W%6QI%2E!`A4>f&X0Koq.1bgmI4s2su3&EX+An!S\%6QI%2E3lC4?#8Z0g6%/1bgmK4s2sDAMc))%6QI%2IScl4>nlRANgPc1bgmt4s2t"AnGR;%6QI%2Ieon4>nm)@6P,_1bgn!4s2su3&NI%A2l>.%6QI%2J#&p4CgE/11XoTAj-Yd1bgn#4s2su3&P8XAMl8-%6QI%2_[E<4?#**1d2@21bgpD4s2sF0P)t&%6QI%2_mQ>4>gPU0Koq.1bgpF4s2sG0fCjP%6QI%2`*]@4>noN1-Q.01bgpH4s2su3&bDZ@pq8Z%6QI%2`<iB4CgE/@Us%\1-Q.01bgpJ4s2sG0fUmO%6QI%2`NuD4>ej*1d2@21bgpL4s2su3&E@#AMlA0%6QI%2dnlm4>noR2a.[51bgpu4s2sF@UW\/%6QI%2e,#o4CgE.An5L_2a.[51bgq"4s2su3&G&S@l7j^%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>\cOANh5!2DJ_u4q0V20fN].+?X0o2DSfT3Fk;_4>\cP0KpUAA2lJ*A7RQ.4q0V20fUmO+?VP:A2$1V4>\cP1-QgC1H@6H4q0V20fUsQ+?X0o1gsp*3&!N*4>\cP1d3$EA2lDSA7K+(4q0V20fV$S+?VP91,D*''4>\cP2Ei6G2DI(!4q0V20fV*U+?VP>0kENX4>\cP3''JHI2D[=%4q0V20fV0W+?X0o1b`HN0fV?+4>\cP@6Per2DSc"4q0V20fWW++?X0o1c8fU2_[E)4>\cP@m2"t2DSf#4q0V20fW]-+?X0o1h(!,0P!?V4>\cPANh5!2D[7$4q0V20fWc/+?X0o2)8]QA7e"74>\cQ0KpUA1LW!s4q0V20f^sP+?VP=1H7Q-4>\cQ1-QgC2D\r)4q0V20f_$R+?X0o1c/`T3+Y8_4>\cQ1d3$EA2lD''A7fF`4q0V20f_*T+?VPo3+4u[4>\cQ2Ei6GA2lDTA7[PT4q0V20f_0V+?X7JAn4(74>\cQ3''JHIA2lG(A7dQ,4q0V20f_6X+?VP=AMH@X4>\cQ@6Per2Deu&4q0V20f`],+?VY@2e"r[4>\cQ@m2"t1LW1"4q0V20f`c.+?VP=1LWHV4>\cQANh5!1LW."4q0V20f`i0+?VP>1h8cZ4>\d$0KpUA2J+[%4q0V20jue#+?X0o2)8]R1,qH,4>\d$1-QgCA2lG%A7[MP4q0V20juk%+?VP>3&Nl/4>\d$1d3$E2DmC''4q0V20juq''+?VP>2.f#]4>\d$2Ei6GAnGXc4q0V20k!")+?VP>@Pp=Y4>\d$3''JHIA2lG%A7RMN4q0V20k!(++?VJi1H.K,4>\d$@6Per2Do#"4q0V20k"NT+?VJ7A2la^4>\d$@m2"tA2lD(A7IAT4q0V20k"TV+?X3i@:DD04>\d$ANh5!2Do&%4q0V20k"ZX+?VMnA7e"74>\d%0KpUAA2lDVA7I;I4q0V20k)k$+?VP?0fV?+4>\d%1d3$E2E!BK4q0V20k*(*+?VP?1h&WX4>\d%3''JHIA2lD%A7[\W4q0V20k*.,+?VP?2E*f/4>\d%@6PerA2lG''A7T704q0V20k+TU+?VP?2`!W,4>\d%@m2"tAmmDL4q0V20k+ZW+?X0o1h1''-1GM''&4>\d%ANh5!A2lJ%A7T:/4q0V20k+`Y+?X0o1h1'',@lQX]4>\d&0KpUAA2lG''A7dPP4q0V20k2q%+?VSA@l6FZ4>\d&1-QgCA2lDSA7K414q0V20k3"''+?VYE@5L.W4>\d&1d3$E2E*<F4q0V20k3()+?X0o2)&QQ3Fb5^4>\d&2Ei6GA2lG%A7[MN4q0V20k3.++?VPBAmmk44>\d&3''JHIA2lDVA7f=,4q0V20k34-+?X0o2e?N0A7@_34>\d&@6Per2E*NQ4q0V20k4ZV+?VP@2DRH*4>\d&@m2"tA2lG#A7T1\4q0V20k4`X+?X0o2DerSARmt64>\d&ANh5!2E,/*4q0V20k4fZ+?VJ;AN;p`4>\d''0KpUA2E3HI4q0V20k<"&+?VPn2)%3''4>\d''1-QgC3ANC#4q0V20k<((+?VPA0JPa#4>\d''1d3$EA2lDUA7fC24q0V20k<.*+?X0o2.C*,@5''kS4>\d''2Ei6G2E3R)4q0V20k<4,+?X0o1h:-,2J,,^4>\d''3''JHI2E>>''4q0V20k<:.+?VPj0Od3T4>\d''@6PerA2lJ&A7]:`4q0V20k=`W+?VPB2`!W,4>\d''@m2"t2E52&4q0V20k=fY+?X0o1h:--@q7b44>\d''ANh5!2E<HG4q0V20k=l[+?VPB0JG["4>\d(0KpUA1LVsl4q0V20kE(''+?X0o1h:-.1LiTX4>\d(1-QgC1L`<t4q0V20kE.)+?VP@@:MJ14>\d(1d3$E2E<ZM4q0V20kE4++?X0o2DSfS1grQWASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1biQ"4s2sE11k#[%6QI%AN)dq4>o2U2EhR41biQ$4s2sG3B9&_%6QI%AN;ps4>UGT0g6%/1biQM4s2su3&E="An*hb%6QI%AR[hG4?,,T1Hl711biQO4s2sF0KCgN%6QI%ARmtI4>o333Bdm71biQQ4s2su3&G/VAMlJ3%6QI%AS++K4CgE.3+QPT@6P,_1biSr4s2sG@5Ki*%6QI%AhcIl4CgE.A7T:+1Hl711biSt4s2sG@6%j^%6QI%AhuUn4>UGY1Hl711biT!4s2sG2e"L*%6QI%Ai2ap4>pVX3''Id61biT#4s2su3&WU(A3"-`%6QI%AiDmr4>UJ$A3LGb1biT%4s2sG@PMCW%6QI%AiW$t4CgE.11XoN1Hl711biTN4s2sG0P"`Y%6QI%An!qH4>pY)2*MI31biTP4s2sG@Q-,-%6QI%An4(J4CgE.3Fl`3A3LGb1biTR4s2sGAR[M\%6QI%AnF4L4CgE.ARo@_@Qk5`1bpa=4s2t"AnGR;%6QI&0JPa64CgE.2Ip>U3''Id61bpa?4s2sD2`*3P%6QI&0Jbm84>erN0g6%/1bpaA4s2su3&G2WAi4!\%6QI&0Ju$:4>pY[0g6%/1bpaC4s2su3&G5XAS,F9%6QI&0K20<4>pYZ@m1>a1bpaE4s2sG@l$&-%6QI&0KD<>4CgE.3FlVZ@Qk5`1bpan4s2su3&NI%@qIGZ%6QI&0Od3g4CgE/@:Wt-0g6%/1bpap4s2sG@l7[Y%6QI&0P!?i4?,)O2EhR41bpar4s2sG@lHD3%6QI&0P3Kk4CgE.An5F]@m1>a1bpd>4s2sE1h/C,%6QI&0ekj74CgE.An5F]A3LGb1bpd@4s2su3&NC#A77;Y%6QI&0f)!94CgE/11XoL@m1>a1bpdB4s2su3&NI%A2#]$%6QI&0f;-;4CgE.An5C]3Bdm71bpdD4s2sD2J"a0%6QI&0fM9=4>UJY@Qk5`1bpdF4s2su3&EF%A2>u)%6QI&0f_E?4?6k11Hl711bpdo4s2su3&G,UA7dhc%6QI&0k*<h4CgE.3FlV[0g6%/1bpdq4s2sHAiOBd%6QI&0k<Hj4>o/T2a.[51bpds4s2su3&P/UA26#+%6QI&0kNTl4CgE/@Us"X0g6%/1bpg?4s2su3&P/UA7]46%6QI&1,1s84>p_12EhR41bpgA4s2sGA2Rj\%6QI&1,D*:4>pb0@m1>a1bpgC4s2sGAhZ&*%6QI&1,V6<4CgE/11XoSAj-Yd1bpgE4s2su3&NC#@lQ>0%6QI&1,hB>4CgE/@Us%/1-Q.01bpgG4s2sI2)@$P%6QI&1-%N@4CgE/@Us(01d2@21bpgp4s2sF0k3.+%6QI&11EEi4D&2;A3LGb1bpgr4s2t"AnGR;%6QI&11WQk4?,/QANgPc1bpgt4s2su3&WO&Ahl))%6QI&11i]m4CgE1ARo=*3''Id61bpj@4s2su3&G5XAMRj]%6QI&1GM''94?#)S1Hl711bpjB4s2su3&G5XAiMP0%6QI&1G_3;4?#91@m1>a1bpjD4s2sGAMe!_%6QI&1Gq?=4>gP-0g6%/1bpjF4s2su3&G,U@l.XY%6QI&1H.K?4>pe`3''Id61bpjH4s2sD2_\c+%6QI&1H@WA4>pe3A3LGb1bpjq4s2su3&G5XAMZ#(%6QI&1L`Nj4>pb_@6P,_1bpjs4s2su3&EL''@lZJ3%6QI&1LrZl4CgE/0P"ZLA3LGb1bpju4s2sE2)R6T%6QI&1M/fn4?5300Koq.1bpmA4s2sGAi)>.%6QI&1bh0:4>pe/@m1>a1bpmC4s2sDA2Ij]%6QI&1c%<<4>pe11d2@21bpmE4s2su3&WU(A2c2+%6QI&1c7H>4>UM(@Qk5`1bpmG4s2sGAiXHe%6QI&1cIT@4CgE/0P"]N1d2@21bpmI4s2sGAn3\]%6QI&1c[`B4CgE/0P"ZR0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f1,NE''+?X0o2)&QO2)RQ,4>\fM@QknsA2lG#A7IDU4q0V21,NK)+?X0o1hL91AhZCX4>\fMA3M+uA2lDXA7f:-4q0V21,NQ++?X0o2)&QO1M/f[4>\fMAj.>"2)/WR4q0V21,UgN+?X0o2)&QO1b_*&4>\fN1HlpDA2lG+A7T4]4q0V21,UmP+?VS:1h&WX4>\fN2*N-F2_[1%4q0V21,UsR+?VS:@5g@Z4>\fN2a/?HAnGXc4q0V21,V$T+?VS:@q.\34>\fN@Qkns2_\cS4q0V21,WQ*+?VJ80Jks&4>\fNA3M+u1Lt&V4q0V21,WW,+?VS;@Pg7X4>\fNAj.>"2_d<N4q0V21,^gM+?X0o2)&QP2`Eo04>\fO0g6^B2_d''s4q0V21,^mO+?VS;1c7H+4>\fO1HlpD2.8I(4q0V21,^sQ+?VS;1grQW4>\fO2*N-FAmmMU4q0V21,_$S+?X0o2)&QQ2DmZ-4>\fO2a/?H2_d.$4q0V21,_*U+?VY?2DRH*4>\fO3BeQJA2lG#A7]7*4q0V21,`Q)+?VS;11NKW4>\fO@QknsA2lG$A7IK*4q0V21,`W++?X0o2)8]R1,hB+4>\fOA3M+uA2lG%A7[MO4q0V21,`]-+?VS;@UVG04>\fOAj.>"A2lJ&A7fC44q0V21,gmN+?VS:@UqY34>\fP0g6^B2_m''u4q0V21,gsP+?VY@1bq6(4>\fP1HlpD2_m*F4q0V21,h$R+?VMA0ekj$4>\fP2*N-F3A`QK4q0V21,h*T+?VS<1,M0(4>\fP2a/?H3AWKH4q0V21,h0V+?X0o2)SoU0Ju$''4>\fP3BeQJ2_m."4q0V21,iW*+?VS<1b_*&4>\fP@QknsA2lG%A7RVU4q0V21,i],+?VPA@UqY34>\fPA3M+u2_m6J4q0V21,ic.+?VS<2)d].4>\fPAj.>"1M&F$4q0V21,psO+?X0o1h1''+1c.B*4>\fQ0g6^B2E3C$4q0V21,q$Q+?VPo1LrZY4>\fQ1HlpD2_m?J4q0V21,q*S+?X7JAn4(74>\fQ2*N-F2`!3u4q0V21,q0U+?X0o2)8]P1,D*''4>\fQ2a/?HA2lJ&A7IB(4q0V21,q6W+?VJ?ARmt64>\fQ3BeQJA2lJ&A7I;M4q0V21,r]++?VS=1,qH,4>\fQ@Qkns2`!4#4q0V21,rc-+?VS=@qIn64>\fQA3M+u2`"lN4q0V21,ri/+?X0o1c&ZP1LWHV4>\fQAj.>"A2lGTA7[N-4q0V21-%$P+?VS=@lZ^^4>\fR0g6^B2`*?O4q0V21-%*R+?X0o2)&QOAMQFY4>\fR1HlpDA2lD''A7]=24q0V21-%0T+?X0o2)8]R1,M0(4>\fR2*N-F2E!<H4q0V21-%6V+?VG<@l6FZ4>\fR2a/?HA2lG%A7T..4q0V21-%<X+?X0o2)8]Q3+P2^4>\fR3BeQJA2lG%A7T:]4q0V21-&c,+?VS=AiDm_4>\fR@Qkns2`*6H4q0V21-&i.+?VPB0Jbm%4>\fRA3M+uA2lG%A7[MS4q0V21-&o0+?VS>1H@W.4>\fRAj.>"1M()U4q0V211;k#+?X0o2e?N111i]Z4>\g%0g6^BA2lDSA7K%Y4q0V211;q%+?VS>2D@<(4>\g%1HlpDA2lJ''A7]4*4q0V211<"''+?VS>1cIT-4>\g%2*N-F2`##%4q0V211<()+?VS>2`<i/4>\g%2a/?H3&>#(4q0V211<.++?VS>2Ieo[4>\g%3BeQJ2`*HM4q0V211=TT+?VY?AhcIY4>\g%@Qkns2IS@N4q0V211=ZV+?VS>3&3Z,4>\g%A3M+u1c[EL4q0V211=`X+?X0o2)8]R3+G,]4>\g%Aj.>"A2lG#A7RQ04q0V211Dq$+?X0o2)8]R2`X&24>\g&0g6^BA2lJ&A7df54q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI&@PU+i4>gS)2EhR41brMr4s2su3&WR''@k]]&%6QI&@Pg7k4CgE.2Ip;XANgPc1brMt4s2sH1h/L/%6QI&@Q$Cm4CgE.2Ip>X3''Id61brN!4s2sH2)&T*%6QI&@Q6Oo4?#,PANgPc1brN#4s2su3&WR''ARmeb%6QI&@UVGC4CgE.2IpAU@Qk5`1brNL4s2sF@UqD]%6QI&@UhSE4CgE01Lt''*@m1>a1brNN4s2sJ1H76U%6QI&@V%_G4?#,SA3LGb1brNP4s2sH2)J`*%6QI&@k^(h4?#,U2a.[51brPq4s2sH2)]#0%6QI&@kp4j4CgE/1Lt)W1-Q.01brPs4s2sDAhZ&*%6QI&@l-@l4CgE/1Lt#N1Hl711brPu4s2sH2)o/2%6QI&@l?Ln4?#)SA3LGb1brQ"4s2sH2*#53%6QI&@lQXp4?#-,1d2@21brQ$4s2sH2D?mM%6QI&@pqPD4?#/R@m1>a1brQM4s2sH2Dm3Q%6QI&@q.\F4?#/TAj-Yd1brQO4s2sH2E#/2%6QI&@q@hH4Cp9Y1Hl711brQQ4s2su3&N[+AnEna%6QI&A2$1i4?#/Y0Koq.1brSr4s2sI0kFr\%6QI&A26=k4>Sp.3''Id61brSt4s2su3&P,TA2,f&%6QI&A2HIm4CgE/@:Wn&ANgPc1brT!4s2sH2IS=(%6QI&A2ZUo4?#0,2*MI31brT#4s2sH2I\U/%6QI&A2laq4?#0.@m1>a1brT%4s2su3&P/UAiXHe%6QI&A77YE4?,/U1-Q.01brTN4s2su3&NO''@l\''`%6QI&A7IeG4CgE/1h:,UA3LGb1brTP4s2su3&ER)AMI[Y%6QI&A7[qI4?#2RANgPc1brTR4s2sH2_m9T%6QI&AM?:j4?#2U0Koq.1brVs4s2sG1gsu[%6QI&AMQFl4CgE/1h:/Q0Koq.1brVu4s2sH2`3QY%6QI&AMcRn4CgE.@q9.Z@m1>a1brW"4s2sH2dp;^%6QI&AMu^p4CgE011XoR1d2@21brW$4s2su3&WO&A2ZD2%6QI&AN2jr4CgE.2.U9.0g6%/1brW&4s2sH2eFm1%6QI&ARRbF4D&2;A3LGb1brWO4s2sG3+HA\%6QI&ARdnH4?#6.Aj-Yd1brWQ4s2sH3+Fm2%6QI&AS"%J4?#611Hl711brWS4s2sJ2ISI,%6QI&AhZCk4?#8UANgPc1brYt4s2su3&NR(A7[GY%6QI&AhlOm4?#612a.[51brZ!4s2sH3AWKU%6QI&Ai)[o4?#6/0g6%/1brZ#4s2su3&P5WAM@UX%6QI&Ai;gq4?-q^3''Id61brZ%4s2sI3&i`Y%6QI&AiMss4CgE.3Fl\U@m1>a1brZ''4s2sH3B/o\%6QI&AmmkG4?,>T0Koq.1brZP4s2sG3A<3P%6QI&An+"I4?#8[0Koq.1brZR4s2su3&NU)@l62/%6QI&An=.K4?#8\A3LGb1brZT4s2su3&P8XAhuG2%6QI''0JG[54?#8V@m1>a1c$g?4s2sH3FOp3%6QI''0JYg74>pb+@6P,_1c$gA4s2su3&P2VA26&,%6QI''0Jks94>UPW3''Id61c$gC4s2sH3Fas2%6QI''0K)*;4CgE01h:,NA3LGb1c$gE4s2sH3Fjs1%6QI''0K;6=4D&2;A3LGb1c$gG4s2sF2)7$Q%6QI''0O[-f4D&2;A3LGb1c$gp4s2su3&EF%@l,r)%6QI''0Om9h4CgE.1Lt#N2*MI31c$gr4s2su3&NO''A27UX%6QI''0P*Ej4>euV0Koq.1c$gt4s2su3&G)T@q.D\%6QI''0ebd64>T!/@m1>a1c$j@4s2su3&E="Ai)5+%6QI''0etp84?-n/2EhR41c$jB4s2su3&NL&A7@M^%6QI''0f2'':4CgE02.U3.2*MI31c$jD4s2t"AnGR;%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>\iK2Ei6GA2lJ$A7K([4q0V21GLgP+?VSA2dnlZ4>\iK3''JHIA2lDTA7IDT4q0V21GLmR+?VGg1Gh9)4>\iK@6Per1cJr&4q0V21GN?&+?X0o2DAZP2.Sl[4>\iK@m2"tA2lGTA7T:-4q0V21GNE(+?X0o2)AcRARRb34>\iKANh5!2DerT4q0V21GNK*+?X0o1c&ZQ2e,#\4>\iL0KpUAA2lD%A7f:-4q0V21GU[K+?X0o1c&ZPA2QO[4>\iL1-QgCA2lJYA7]4+4q0V21GUaM+?VP=3+P2^4>\iL1d3$E3+Y$[4q0V21GUgO+?X0o1c&ZR3As&14>\iL2Ei6GAnGXc4q0V21GUmQ+?X0o1c&ZS2DdT,4>\iL3''JHIA2lDTA7K%.4q0V21GUsS+?X0o2DAZQ2)[W-4>\iL@6PerA2lG$A7K.+4q0V21GWE''+?X7JAn4(74>\iL@m2"tA2lD%A7RMT4q0V21GWK)+?X0o2E#)W1h8cZ4>\iLANh5!A2lJ$A7K124q0V21GWQ++?VJ>Ai)[\4>\iM0KpUAA2lG&A7]1.4q0V21G^aL+?X0o1h(!*@kp4W4>\iM1-QgC3FQAP4q0V21G^gN+?VGg2E*f/4>\iM1d3$EA2lJ)A7T:/4q0V21G^mP+?VGlARmt64>\iM2Ei6G1GpjE4q0V21G^sR+?X0o2)JiT@lHR\4>\iM3''JHIA2lJ)A7f@/4q0V21G_$T+?X7JAn4(74>\iM@6PerA2lDTA7RMR4q0V21G`K(+?VYp2J#&]4>\iM@m2"t3B/`N4q0V21G`Q*+?X0o2J-K0A2c[]4>\iMANh5!1c&Z&4q0V21G`W,+?X7JAn4(74>\iN0KpUA2Del"4q0V21GggM+?VM<AMZLZ4>\iN1-QgCAnGXc4q0V21GgmO+?X0o1gsp,@pqP14>\iN1d3$EAnGXc4q0V21GgsQ+?VG?An!q54>\iN2Ei6GA2lJYA7RVX4q0V21Gh$S+?X0o2*#2YA77Y24>\iN3''JHIA2lG,A7dPS4q0V21Gh*U+?X0o2.^</@5''kS4>\iN@6Per2DeuR4q0V21GiQ)+?X0o2)JiR2)7?)4>\iN@m2"tA2lD%A7IGP4q0V21GiW++?VVp2E3l04>\iNANh5!AnGXc4q0V21Gi]-+?X0o2DSfT1h/]Y4>\iO0KpUAA2lD#A7dVP4q0V21GpmN+?X7JAn4(74>\iO1-QgC1cR0u4q0V21GpsP+?X0o1b`HN@6$L\4>\iO1d3$E1M16-4q0V21Gq$R+?VM@2`!W,4>\iO2Ei6GA2lDTA7RZ14q0V21Gq*T+?X7JAn4(74>\iO3''JHIA2lG$A7T104q0V21Gq0V+?X0o1biNNAn+"64>\iO@6PerA2lG+A7IVY4q0V21GrW*+?X0o1c&ZS1h/]Y4>\iO@m2"tAnGXc4q0V21Gr],+?VM=2`X&24>\iOANh5!AnGXc4q0V21Grc.+?VJ:@UVG04>\iP0KpUAAnGXc4q0V21H$sO+?VJh@Pg7X4>\iP1-QgCA2lDSA7[YW4q0V21H%$Q+?X0o1c/`Q3Fk;_4>\iP1d3$E3&+iM4q0V21H%*S+?VYDAi2a]4>\iP2Ei6GA2lD%A7R]14q0V21H%0U+?VP<2`X&24>\iP3''JHI1HB&Y4q0V21H%6W+?X0o1c])Y2`3c.4>\iP@6Per3+QMQ4q0V21H&]++?VM>@50qT4>\iP@m2"t2Dd@&4q0V21H&c-+?VGk1c%<)4>\iPANh5!AnGXc4q0V21H&i/+?X0o2E>;Z0JPa#4>\iQ0KpUAA2lD%A7[GT4q0V21H.$P+?X0o1gsp+@qIn64>\iQ1-QgCA2lM&A7T:34q0V21H.*R+?X7JAn4(74>\iQ1d3$EA2lD&A7K+/4q0V21H.0T+?X0o1hC3.@kp4W4>\iQ2Ei6G1H@HN4q0V21H.6V+?VGg0K)*(4>\iQ3''JHIA2lJ$A7[c14q0V21H.<X+?VG;2`Nu1ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1c%(!4s2su3&NX*AMcD2%6QI''2e"rn4CgE.3+QN/2a.[51c%(#4s2t"AnGR;%6QI''2e5)p4D&2;A3LGb1c%(%4s2su3&G)T@q%2W%6QI''2eG5r4CgE02.U;S0Koq.1c%*F4s2sD1h''rY%6QI''3&*T>4>p\*A3LGb1c%*H4s2su3&NL&AM[dZ%6QI''3&<`@4CgE111Xp(0Koq.1c%*J4s2t"AnGR;%6QI''3&NlB4CgE/A7T401d2@21c%*L4s2su3&G)TAN4-_%6QI''3&a#D4CgE.3+QSS3''Id61c%*N4s2su3&Wd-AMmp\%6QI''3&s/F4CgE01Lt!*A3LGb1c%+"4s2su3&EF%AN+$]%6QI''3+>&o4CgE.1LsuO1d2@21c%+$4s2su3&P5WAMZ>1%6QI''3+P2q4CgE.@:Wt[ANgPc1c%+&4s2su3&G)T@l5u)%6QI''3+b>s4>UD#3''Id61c%-G4s2su3&EI&@q.G]%6QI''3AE]?4CgE03Fl\W1-Q.01c%-I4s2su3&WR''@q7>Y%6QI''3AWiA4CgE01Lt#V3Bdm71c%-K4s2su3&WR''@q/q2%6QI''3AiuC4?59-@6P,_1c%-M4s2t"AnGR;%6QI''3B'',E4CgE/A7T:0ANgPc1c%-O4s2sH0f1RJ%6QI''3B98G4D&2;A3LGb1c%.#4s2sF0f:jQ%6QI''3FY/p4>^V]ANgPc1c%.%4s2sF0K;$U%6QI''3Fk;r4D&2;A3LGb1c%.''4s2sD1c[?U%6QI''3G(Gt4>eiQ2EhR41c&Po4s2sFAMc/+%6QI''@50qg4>elJ2*MI31c&Pq4s2sF1,:dP%6QI''@5C(i4>elQ3Bdm71c&Ps4s2su3&bDZ@kp#-%6QI''@5U4k4>SiP1Hl711c&Pu4s2sF1Li1(%6QI''@5g@m4>eoPAj-Yd1c&Q"4s2t"AnGR;%6QI''@6$Lo4>euPAj-Yd1c&QK4s2t"AnGR;%6QI''@:DDC4>f!,3''Id61c&QM4s2sD2.U5]%6QI''@:VPE4>f#P0g6%/1c&QO4s2t"AnGR;%6QI''@:h\G4>f#S1d2@21c&Sp4s2su3&EI&@lIj\%6QI''@PL%h4D&2;A3LGb1c&Sr4s2su3&EI&@q7AZ%6QI''@P^1j4D&2;A3LGb1c&St4s2su3&EI&AS,L;%6QI''@Pp=l4D&2;A3LGb1c&T!4s2t"AnGR;%6QI''@Q-In4>Sp*3Bdm71c&T#4s2sF@q.5W%6QI''@Q?Up4>gY(2*MI31c&TL4s2sFA2Q8/%6QI''@U_MD4>SrQ3''Id61c&TN4s2sEAN2D.%6QI''@UqYF4>g\ZA3LGb1c&TP4s2sD3AE?S%6QI''@V.eH4>np''3Bdm71c&Vq4s2sG1-%$P%6QI''@kg.i4>nuM3''Id61c&Vs4s2sG1c8]*%6QI''@l$:k4>o#V0g6%/1c&Vu4s2sI0fEQ+%6QI''@l6Fm4?,&T1d2@21c&W"4s2sI0f_$R%6QI''@lHRo4>o/Q0Koq.1c&W$4s2sD@U`h2%6QI''@lZ^q4?##TAj-Yd1c&WM4s2sH11OiY%6QI''@q%VE4CgE/0k=m-Aj-Yd1c&WO4s2sH1G_$T%6QI''@q7bG4?#,S1-Q.01c&WQ4s2sH2.U2\%6QI''@qInI4>USZ0Koq.1c&Yr4s2su3&NL&ARRG[%6QI''A2-7j4>US[2a.[51c&Yt4s2t"AnGR;%6QI''A2?Cl4?#/X0Koq.1c&Z!4s2sH2E521%6QI''A2QOn4>\a#3''Id61c&Z#4s2sH3&<QY%6QI''A2c[p4>\cH1Hl711c&Z%4s2sH@6$&+%6QI''A2ugr4?$b)@Qk5`1c&ZN4s2sH@qB17%6QI''A7@_F4?$k41Hl711c&ZP4s2sHAmo77%6QI''A7RkH4D&2;A3LH6DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f1Lt&\+?VV=AnF494>\j)Aj.>"2)mI*4q0V21M&7(+?VVA@PU+V4>\j*0g6^B1c8]O4q0V21M&=*+?VVB3+>&\4>\j*1HlpD3&rfS4q0V21M&C,+?X7JAn4(74>\j*2*N-F3+4R&4q0V21M&I.+?X7JAn4(74>\j*2a/?H3+Y$''4q0V21M&O0+?X0o2DAZP3&s/34>\j*3BeQJ3+ZPQ4q0V21M''uY+?X0o2Ip?.11NKW4>\j*@Qkns3AEC&4q0V21M(&[+?VY=3+G,]4>\j*A3M+u3B8d)4q0V21M(,]+?VYE0k3BV4>\j*Aj.>"AnGXc4q0V21M/=)+?X7JAn4(74>\j+0g6^B3FXs&4q0V21M/C++?VYp@k^(U4>\j+1HlpD3Fk-+4q0V21M/I-+?VYq@:MJ14>\j+2*N-F1h8U$4q0V21M/O/+?X7JAn4(74>\j+2a/?H3AY,Q4q0V21M/U1+?VYq2e"r[4>\j+3BeQJ2_[3O4q0V21M1&Z+?VS=1cRZ.4>\j+@QknsAnGXc4q0V21M1,\+?VSC3B9844>\j+A3M+u3+cVY4q0V21M12^+?X7JAn4(74>\j+Aj.>"3B8oO4q0V21c8l/+?V>3@6$L\4>\lQ0KpUA1,1O>4q0V21c@''P+?VD51,_<*4>\m)0g6^B1,*-H4q0V21h/:)+?VD5@:MJ14>\m)1HlpD1,1L;4q0V21h/@++?VD5@:MJ14>\m)2*N-F1,*-H4q0V21h/L/+?VDj3&!N*4>\m)ANh5!A2lD"A7RB(4q0V21h1,]+?VG7@l6FZ4>\m*0KpUAA2lD"A7K.)4q0V21h8=)+?X0o1b`HM@q7b44>\m*1d3$EA2lD"A7K+Y4q0V21h8I-+?X0o1cJrWAN2j_4>\m*2Ei6G1GNB!4q0V21h8O/+?X0o1b`HM@pqP14>\m*@m2"tA2lD"A7RB*4q0V21h:2^+?X6n1H7Q-4>\m+0KpUA2*!?G4q0V21hAC*+?X0o1cAlV@kg.V4>\m+1-QgCA2lMZA7IPX4q0V21hAI,+?VYC2).9(4>\m+1d3$EA2lD"A7ISW4q0V21hAO.+?VJl2.A`Y4>\m+2Ei6G1hC-*4q0V21hAU0+?VG;1M&`Z4>\m+3''JHI2.JBt4q0V21hA[2+?VMn2).9(4>\m+@6Per2.g>T4q0V21hC,[+?VG>Ammk44>\m+@m2"t2DR+!4q0V21hC2]+?VP>1Gq?*4>\m+ANh5!2I\UR4q0V21hC8_+?VPl1Gq?*4>\m,0KpUA2IeOO4q0V21hJI++?VS:2Ieo[4>\m,1-QgC2_m-t4q0V21hJO-+?VJl11NKW4>\m,1d3$E2_nfP4q0V21hJU/+?X0o2)8]PAN;p`4>\m,2Ei6G2eFp&4q0V21hJ[1+?VSC1L`NW4>\m,3''JHI2e-G[4q0V21hJa3+?VSp2)@E*4>\m,@6PerA2lG+A7[Z-4q0V21hL2\+?VG:@kg.V4>\m,@m2"tA2lG+A7dZ-4q0V21hL8^+?VV;0JYg$4>\m,ANh5!3&!<G4q0V21hL>`+?X0o2*#2Y0etp%4>\oL0KpUAA2lGTA7RPP4q0V22)$aK+?VM;2.Sl[4>\oL1-QgC3&ifQ4q0V22)$gM+?VVD@kg.V4>\oL1d3$EA2lGXA7K((4q0V22)$mO+?VVm@5''kS4>\oL2Ei6G3+OaS4q0V22)$sQ+?VY@3&Nl/4>\oL3''JHI3Ai`T4q0V22)%$S+?VYA2eG5_4>\oL@6Per3AkA-4q0V22)&K''+?X0o2D\lT0P3KX4>\oL@m2"t3B(M-4q0V22)&Q)+?VYD2`3c.4>\oLANh5!3B1M[4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI)0P3Kk4?5B3ANgPc1c7!A4s2sJ3ArZW%6QI)0ekj74CgE02Ip;P0Koq.1c7!C4s2sJ@lIm]%6QI)0f)!94?6t-Aj-Yd1c7!E4s2sJARdP\%6QI)0f;-;4>pY,Aj-Yd1c7!G4s2t"3A<BU%6QI)0fM9=4>^V*2a.[51c7!I4s2su3&E="@lQD2%6QI)0f_E?4?5;SA3LGb1c7!r4s2sG1,CjQ%6QI)0k*<h4?56,1-Q.01c7!t4s2sCAN2M1%6QI)1,(m74>LJ-@6P,_1c7$E4s2sCAN;V3%6QI)1,M0;4>LJ.@m1>a1c7$G4s2sCARRG[%6QI)1,_<=4>LJV2a.[51c7$I4s2sCART"2%6QI)1,qH?4>LJV@m1>a1c7$K4s2sCART.6%6QI)11<?h4>LJW2EhR41c7$t4s2sCAR].5%6QI)11NKj4>LJWANgPc1c7%!4s2sCARf.4%6QI)1GD!84>LJXAj-Yd1c7''F4s2sCARo@9%6QI)1Gh9<4CgE03+QW03Bdm71c7''H4s2su3&EI&A2H/-%6QI)1H%E>4>o&N@6P,_1c7''J4s2sEAM[j\%6QI)1H7Q@4>pb]A3LGb1c7''L4s2sJA2Ij]%6QI)1LWHi4?5-,Aj-Yd1c7''u4s2su3&P5WAhu;.%6QI)1LiTk4>^Y)@6P,_1c7("4s2sEAhl>0%6QI)1M&`m4>^YY3''Id61c7($4s2sF0fLpQ%6QI)1b_*94>eiR@m1>a1c7*E4s2sF0kE1*%6QI)1bq6;4>em&0g6%/1c7*G4s2sF11<.+%6QI)1c.B=4>eoN@Qk5`1c7*I4s2sF1GiZ,%6QI)1c@N?4>ep*0g6%/1c7*K4s2sF1LrI/%6QI)1cRZA4>f$.1-Q.01c7*M4s2sF3+aj.%6QI)1grQj4>f,Q1d2@21c7+!4s2sF3A<BU%6QI)1h/]l4>f,T1-Q.01c7+#4s2sF3AWKU%6QI)1hAin4>gS+2EhR41c7-F4s2sF@l[s]%6QI)2)7?<4>g\02EhR41c7-H4s2sG0Jd0%%6QI)2)IK>4>o&V3Bdm71c7-J4s2sG2eHVb%6QI)2)[W@4>o/Q1d2@21c7-L4s2sG3&WWX%6QI)2)mcB4>p_,ANgPc1c7-N4s2sH0OeNU%6QI)2.8Zk4?#,R2*MI31c7."4s2sHARRDZ%6QI)2.Jfm4?$h[@m1>a1c7.$4s2sHAR](3%6QI)2.\ro4?$h]2a.[51c7.&4s2sHARf=9%6QI)2D@<;4?$h^Aj-Yd1c70G4s2sHAhZ,,%6QI)2DRH=4?$k.2a.[51c70I4s2sI1,iW*%6QI)2DdT?4?,*+Aj-Yd1c70K4s2sI1H&i/%6QI)2E!`A4?,?22EhR41c70M4s2sI@U`n4%6QI)2E3lC4?-e]1-Q.01c71#4s2sIAi=3a%6QI)2Ieon4?#)O0g6%/1c71%4s2sH@qK47%6QI)2J#&p4?$e\A3LGb1c71''4s2sG3A`WX%6QI)2_[E<4?$\Y3Bdm71c73H4s2sH3+=j2%6QI)2_mQ>4?,$(@m1>a1c73J4s2sIA2%IV%6QI)2`*]@4?,$,2EhR41c73L4s2su3&EC$A7[\`%6QI)2`<iB4?,#TAj-Yd1c73N4s2sJARdY_%6QI)2`NuD4>^PXA3LGb1c73P4s2sJA7IV`%6QI)2dnlm4?6t,@m1>a1c74$4s2sE@l%[[%6QI)2e,#o4CgE02e6H22EhR41c74&4s2su3&P2V@k_IX%6QI)2e>/q4?6t,@6P,_1c74(4s2su3&Wa,A2?#*%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>\oT0KpUA1GrYs4q0V22)m<S+?VPn3FP)\4>\oT1-QgC3&3:$4q0V22)mBU+?VS?0f_E,4>\oT1d3$E1c[9F4q0V22)mHW+?VYm2Ieo[4>\oT2Ei6G3FOmZ4q0V22)mNY+?VYr3B9844>\oT3''JHI2`WiV4q0V22)mT[+?X0o2DJ`P2Ieo[4>\oT@6PerA2lD)A7T1Y4q0V22)o&/+?X0o1biNOA2$1V4>\oT@m2"tA2lDSA7]=14q0V22)o,1+?VJl1,M0(4>\oTANh5!1hAX#4q0V22)o23+?VJl3&a#14>\oU0KpUA1hC-.4q0V22*!BT+?VJlAR[h44>\oU1-QgC1hJO&4q0V22*!HV+?VG:1h/]Y4>\oU1d3$E1hL3-4q0V22*!NX+?VGk1cRZ.4>\oU2Ei6G2)$^?4q0V22*!TZ+?VG:2e5)]4>\oU3''JHI1GiMt4q0V22*!Z\+?VMA0Ju$''4>\oU@6Per2)/WN4q0V22*#,0+?VM9An+"64>\oU@m2"t1hAX,4q0V22*#22+?VM:3A<W+4>\oUANh5!2)@!H4q0V22*#84+?VG;@lHR\4>\p(0KpUA2)AZ$4q0V22.84''+?VG;2).9(4>\p(1-QgC2)A\q4q0V22.8:)+?VM<1,D*''4>\p(1d3$E1Gq($4q0V22.8@++?VG;2_mQ+4>\p(2Ei6G1H%3I4q0V22.8F-+?VM<3AWi.4>\p(3''JHI2)J_t4q0V22.8L/+?VM<@Pg7X4>\p(@6Per2)Jc&4q0V22.9rX+?VM<A2$1V4>\p(@m2"t2)JlV4q0V22.:#Z+?VM=0fV?+4>\p(ANh5!2)R-F4q0V22.:)\+?VM=1,qH,4>\p)0KpUA1Gq0P4q0V22.A:(+?VG;@5U4X4>\p)1-QgC1GrWR4q0V22.A@*+?VM=A2c[]4>\p)1d3$E1GrZ"4q0V22.AF,+?X0o2.gB03&Ef.4>\p)2Ei6G1b^dC4q0V22.AL.+?X0o1c/`QAi)[\4>\p)3''JHIA2lD%A7I<&4q0V22.AR0+?X0o2.^<.@lQX]4>\p)@6PerA2lG+A7K%*4q0V22.C#Y+?X0o1h(!+1h/]Y4>\p)@m2"tA2lD&A7IPW4q0V22.C)[+?X0o1c/`Q2J,,^4>\p)ANh5!A2lD*A7T+''4q0V22.C/]+?X0o1c&ZQ3As&14>\p*0KpUA1b`BJ4q0V22.J@)+?X0o1h(!*@lZ^^4>\p*1-QgC2)[<I4q0V22.JF++?X0o1c&ZS1GM''&4>\p*1d3$EA2lGTA7I?(4q0V22.JL-+?X0o1c/`Q@qIn64>\p*2Ei6GA2lDSA7I;L4q0V22.JR/+?X0o1gsp*1H@W.4>\p*3''JHI1GrcR4q0V22.JX1+?X0o2)JiSAMZLZ4>\p*@6PerA2lD%A7[`14q0V22.L)Z+?X0o1c&ZS3+P2^4>\p*@m2"tA2lD%A7]1X4q0V22.L/\+?VGl3AWi.4>\p*ANh5!A2lD%A7dVO4q0V22.L5^+?X0o1c&ZQ1cIT-4>\p+0KpUAA2lD&A7RN/4q0V22.SF*+?X0o1c&ZR1h/]Y4>\p+1-QgCA2lD%A7]1Y4q0V22.SL,+?X0o1brTR@6$L\4>\p+1d3$EA2lD%A7RMV4q0V22.SR.+?X0o1c/`Q@k^(U4>\p+2Ei6GA2lD&A7RK,4q0V22.SX0+?VGlAiW$a4>\p+3''JHIA2lD+A7[bZ4q0V22.S^2+?VP=1GV-''4>\p+@6PerA2lD%A7f7\4q0V22.U/[+?X0o1h1''.Ai)[\4>\p+ANh5!A2lDTA7IJS4q0V22.U;_+?X0o1c&ZR3B0234>\p,0KpUAA2lD%A7dT.4q0V22.\L++?X0o2.:$-2)%3''4>\p,1-QgC2)JfQ4q0V22.\R-+?VV=@l-@Y4>\p,1d3$E2)Si''4q0V22.\X/+?X0o2E,/X@l$:XASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1c8i&4s2sJ@kor+%6QI)AN)dq4?6hZ2EhR41c8i(4s2su3&G)TA7]=9%6QI)AN;ps4?,$+@m1>a1c8iQ4s2sF@khIW%6QI)AR[hG4CgE/3FlYZ1-Q.01c8iS4s2sI0f(XM%6QI)ARmtI4>SoV2a.[51c8iU4s2su3&WI$@q&t4%6QI)AS++K4?5-*2EhR41c8l!4s2su3&EF%AS,@7%6QI)AhcIl4CgE.1Lt&NAj-Yd1c8l#4s2su3&EF%AN)P3%6QI)AhuUn4CgE.1Lt''/@Qk5`1c8l%4s2su3&NL&A7]46%6QI)Ai2ap4>SlL3Bdm71c8l''4s2su3&EF%@q7J]%6QI)AiDmr4>f$*Aj-Yd1c8l)4s2su3&EX+An!V]%6QI)AiW$t4CgE.1h:*+3Bdm71c8lR4s2su3&EF%AMGl&%6QI)An!qH4CgE.1Lt&U3''Id61c8lT4s2su3&EI&@lHA2%6QI)An4(J4CgE.1h:,R3''Id61c8lV4s2su3&WI$AM?&,%6QI)AnF4L4CgE.2.U2S2*MI31c@$A4s2su3&EF%AN)V5%6QI*0JPa64CgE/1Lt&S0Koq.1c@$C4s2su3&G)TA77;Y%6QI*0Jbm84>gP)1d2@21c@$I4s2sF2`YA3%6QI*0KD<>4CgE.1Lt&O0g6%/1c@$r4s2su3&P5WAN;S2%6QI*0Od3g4CgE00P"a)A3LGb1c@$t4s2su3&EF%An!V]%6QI*0P!?i4CgE.1Lt&U@Qk5`1c@%!4s2su3&NO''A2e''`%6QI*0P3Kk4>SoM1Hl711c@''B4s2su3&EF%An!Y^%6QI*0ekj74CgE.1h:,V0Koq.1c@''D4s2su3&NO''ARmba%6QI*0f)!94CgE03+QT0A3LGb1c@''F4s2su3&NI%A7T+4%6QI*0f;-;4CgE.2Ip;R@6P,_1c@''H4s2su3&NC#A2cG2%6QI*0fM9=4CgE00P"`R@m1>a1c@''J4s2sF3&ru_%6QI*0f_E?4>elP3''Id61c@''s4s2sD2DJW(%6QI*0k*<h4CgE/2.U;TA3LGb1c@''u4s2sH@U_)V%6QI*0k<Hj4>gS+3''Id61c@("4s2sE3&!$M%6QI*0kNTl4>^M&@m1>a1c@*C4s2sJAhl;/%6QI*1,1s84>]''02a.[51c@*E4s2sJ@khRZ%6QI*1,D*:4?6k1A3LGb1c@*G4s2su3&NU)AiDP1%6QI*1,V6<4CgE.@q9++A3LGb1c@*I4s2sF2.g;]%6QI*1,hB>4>Sj,1-Q.01c@*K4s2sF2E3]\%6QI*1-%N@4>gY*ANgPc1c@*t4s2sFA2H80%6QI*11EEi4>UM[@m1>a1c@+!4s2sD3&"r.%6QI*11WQk4>gYX1d2@21c@+#4s2sFA7@P_%6QI*11i]m4>SrP0Koq.1c@-D4s2sFAhl5-%6QI*1GM''94>g_11Hl711c@-F4s2sD3A<EV%6QI*1G_3;4>SuRAj-Yd1c@-H4s2sD3Ab81%6QI*1Gq?=4>nm(2a.[51c@-J4s2sG0f*?(%6QI*1H.K?4>gV[2*MI31c@-L4s2sD3B0#_%6QI*1H@WA4>np''2a.[51c@-u4s2sG0k4fZ%6QI*1L`Nj4>T!,3''Id61c@."4s2sG1,<?''%6QI*1LrZl4>ns+2*MI31c@.$4s2sD3G(67%6QI*1M/fn4>f$+0g6%/1c@0E4s2sD@5''K$%6QI*1bh0:4>o!,1-Q.01c@0G4s2sG1M1)[%6QI*1c%<<4>o#M2a.[51c@0I4s2sD@5MFW%6QI*1c7H>4>o$+0Koq.1c@0K4s2sJAiXHe%6QI*1cIT@4>UD+2a.[51c@0M4s2sG2)mKX%6QI*1c[`B4>UDTA3LGb1c@1!4s2sG2.gGa%6QI*1h&Wk4>o)T1Hl711c@1#4s2sD@:h8Y%6QI*1h8cm4>o)X1-Q.YDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f2Deu/+?VGh1,;$&4>\rQAj.>"2E*?K4q0V22Dm0P+?VGh1bq6(4>\rR0g6^B2E,&$4q0V22Dm6R+?VGh2)mc/4>\rR1HlpD2E3O%4q0V22Dm<T+?VPA3&Ef.4>\rR2*N-F1L`9u4q0V22DmBV+?VGh2_dK*4>\rR2a/?H1L`:P4q0V22DmHX+?VPB0KD<+4>\rR3BeQJ2E<TM4q0V22Dno,+?VS<2.JfZ4>\rR@Qkns2E<ZP4q0V22Dnu.+?VPB3G(Ga4>\rRA3M+u2E<`S4q0V22Do&0+?VPBA2ZU\4>\rRAj.>"1Lam*4q0V22E!6Q+?VPj2DmZ-4>\rS0g6^B2ISO$4q0V22E!<S+?VPj2_dK*4>\rS1HlpD2ISR#4q0V22E!BU+?VGhARdn54>\rS2*N-F2ISU+4q0V22E!HW+?VGhAhlOZ4>\rS2a/?H2IU$''4q0V22E!NY+?VPj@Pp=Y4>\rS3BeQJ2IU,Q4q0V22E"u-+?VPjAi;g^4>\rS@Qkns2I\X#4q0V22E#&/+?VPk@kg.V4>\rSA3M+u2I^6+4q0V22E#,1+?VPl2`3c.4>\rSAj.>"2Ig0(4q0V22E*<R+?VGi@q%V24>\rT0g6^B2InKs4q0V22E*BT+?VPm0K)*(4>\rT1HlpD2InR$4q0V22E*HV+?VPm3&*T+4>\rT2*N-F1Lk!.4q0V22E*NX+?VPm@5L.W4>\rT2a/?H2Ip8O4q0V22E*TZ+?VPn0f;-(4>\rT3BeQJ2J"U&4q0V22E,&.+?VPn1-%N-4>\rT@Qkns2J"j+4q0V22E,,0+?X0o2DSfR@k^(U4>\rTA3M+u2J$?,4q0V22E,22+?VPnAMQFY4>\rTAj.>"2J$E-4q0V22E3BS+?VYr2eG5_4>\rU1HlpD2J+^$4q0V22E3NW+?VPo1Gh9)4>\rU2*N-F1Lr=#4q0V22E3TY+?X0o1hL911bh0''4>\rU2a/?H2J+p''4q0V22E3Z[+?VPo@V%_44>\rU3BeQJ1LrCP4q0V22E5,/+?VGj2`3c.4>\rU@Qkns2_ec#4q0V22E521+?VMk3B9844>\rUA3M+u1LrIR4q0V22E583+?VS:11NKW4>\rUAj.>"1LrL#4q0V22E<HT+?VS:2)%3''4>\rV0g6^B2_[*G4q0V22E<NV+?VS:2J,,^4>\rV1HlpD2_[1&4q0V22E<TX+?X0o1b`HP1,V6)4>\rV2*N-F1c&Vr4q0V22E<ZZ+?VG;AhcIY4>\rV2a/?HA2lD%A7]:24q0V22E<`\+?VG<1hAi[4>\rV3BeQJ1Lsp)4q0V22E>20+?X0o2)f&U2DmZ-4>\rV@Qkns2E!L)4q0V22E>82+?VSm2`*]-4>\rVA3M+u2`*L)4q0V22E>>4+?VSo3ANc-4>\rVAj.>"1c6sC4q0V22IS:''+?X0o2)AcT@Q6O\4>\s)0g6^BA2lD$A7dN+4q0V22IS@)+?X0o2.:$-0O[-S4>\s)1HlpD1Gh%%4q0V22ISF++?X0o1h(!,AS++84>\s)2*N-FA2lDXA7K(+4q0V22ISL-+?X0o2.C*-3B9844>\s)2a/?H3&`cN4q0V22ISR/+?VP<@kg.V4>\s)3BeQJ2`EZS4q0V22IU#X+?VVD3+4u[4>\s)@QknsA2lDXA7df54q0V22IU)Z+?VVm1h/]Y4>\s)A3M+uA2lG&A7K+04q0V22IU/\+?VJ@11<?U4>\s)Aj.>"A2lJ,A7I>N4q0V22I\@(+?X0o2DJ`R@UhS24>\s*0g6^BA2lJ%A7RAK4q0V22I\F*+?VGgAhZCX4>\s*1HlpD2_[4''4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI*@Pg7k4CgE.3Fl\[@6P,_1cAf#4s2su3&P,TA77G]%6QI*@Q$Cm4CgE/0P"`O@Qk5`1cAf%4s2sG3&il]%6QI*@Q6Oo4CgE.3+QPW@Qk5`1cAf''4s2sJAi;D.%6QI*@UVGC4?53-2EhR41cAfP4s2su3&E="AiF<c%6QI*@UhSE4?52U2EhR41cAfR4s2sJ1,rl0%6QI*@V%_G4?,5R1d2@21cAfT4s2su3&Wd-@l7^Z%6QI*@k^(h4>\cQ0Koq.1cAhu4s2sG2`PD5%6QI*@kp4j4>o/RANgPc1cAi"4s2sD3&WQV%6QI*@l-@l4CgE/11Xp,@m1>a1cAi$4s2sD@PKl,%6QI*@l?Ln4?,/X2EhR41cAi&4s2su3&NI%A2Z2,%6QI*@lQXp4>T!/1-Q.01cAi(4s2sI1cR0Q%6QI*@pqPD4>\iPANgPc1cAiQ4s2sJ2`EHT%6QI*@q.\F4?5D^@Qk5`1cAiS4s2sE3AP,/%6QI*@q@hH4>pe+2a.[51cAiU4s2su3&P2VA2$#-%6QI*A2$1i4?"s&2EhR41cAl!4s2su3&NI%AMe!_%6QI*A26=k4?$h02*MI31cAl#4s2sFA27a\%6QI*A2HIm4>UM[1Hl711cAl%4s2su3&NI%AMn!^%6QI*A2ZUo4CgE.2.U<0Aj-Yd1cAl''4s2sHA77;Y%6QI*A2laq4?,/Q2EhR41cAl)4s2sF1cR?V%6QI*A77YE4CgE.ARo@a@6P,_1cAlR4s2su3&E="AMH#*%6QI*A7IeG4>f&VANgPc1cAlT4s2su3&EC$@q7G\%6QI*A7[qI4CgE.0k=iM3Bdm71cAlV4s2sDAn<h`%6QI*AM?:j4CgE.2e6M\ANgPc1cAo"4s2su3&Wa,AR[P]%6QI*AMQFl4?"rJ1Hl711cAo$4s2su3&WU(A2Rg[%6QI*AMcRn4>gY.0Koq.1cAo&4s2sH1H8u1%6QI*AMu^p4CgE011XrR3Bdm71cAo(4s2su3&WX)@ko`%%6QI*AN2jr4>^Y[3''Id61cAo*4s2sHAn<nb%6QI*ARRbF4?#&N0Koq.1cAoS4s2sH1G_!S%6QI*ARdnH4?#&Q0g6%/1cAoU4s2sDARRS_%6QI*AS"%J4?#!,2*MI31cAoW4s2su3&NI%@qIJ[%6QI*AhZCk4?#''-0g6%/1cAr#4s2sDARf.4%6QI*AhlOm4>UPZ0g6%/1cAr%4s2sH1bh!S%6QI*Ai;gq4>UP[1-Q.01cAr)4s2sDAS*V[%6QI*AiMss4>UP\1d2@21cAr+4s2sDAS,@7%6QI*AmmkG4?#*-1Hl711cArT4s2sDAh[d[%6QI*An+"I4>US,1Hl711cArV4s2sH2)\u/%6QI*An=.K4?#,V1-Q.01cArX4s2sH2)o,1%6QI+0JG[54>US.@m1>a1cI*C4s2sH2.JU0%6QI+0JYg74?#/TA3LGb1cI*E4s2sH2E*HV%6QI+0Jks94>US[@m1>a1cI*G4s2sH2E,&.%6QI+0K)*;4?"uS3''Id61cI*I4s2sF2DR''P%6QI+0K;6=4?,>\0Koq.1cI*K4s2sE0JR*%%6QI+0O[-f4?#2U1Hl711cI*t4s2sE0Jb^Q%6QI+0Om9h4>\`K2*MI31cI+!4s2sD2.U/[%6QI+0P*Ej4?#2Z3''Id61cI+#4s2sE0K*?''%6QI+0ebd64>\`MAj-Yd1cI-D4s2sH2e$>^%6QI+0etp84?#3/@Qk5`1cI-F4s2sH3&*BV%6QI+0f2'':4?#5S@m1>a1cI-H4s2sH3&EQX%6QI+0fD3<4?#5W0g6%/1cI-J4s2sH3&WZY%6QI+0fV?>4?,/S3''Id61cI-L4s2su3&NR(A2?),%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>\uO@6Per2`WZM4q0V22_ec*+?VSC1GV-''4>\uO@m2"t1bg[E4q0V22_ei,+?VSC3AE],4>\uOANh5!2dnBu4q0V22_eo.+?VJ82E*f/4>\uP0KpUA1biGp4q0V22_m*O+?VSk@UhS24>\uP1-QgC3&3EQ4q0V22_m0Q+?VJ8@l-@Y4>\uP1d3$E2dp3.4q0V22_m6S+?VSkA7@_34>\uP2Ei6G1biKP4q0V22_m<U+?VSl2DRH*4>\uP3''JHI2e"[T4q0V22_mBW+?VSl2e"r[4>\uP@6Per2e+Qt4q0V22_ni++?VJ92D@<(4>\uP@m2"t1bq!u4q0V22_no-+?VSm2e"r[4>\uPANh5!2e+jX4q0V22_nu/+?VJ93+G,]4>\uQ0KpUA2e-;V4q0V22`!0P+?VJ93A`o/4>\uQ1-QgC3+b0,4q0V22`!6R+?VS:@k^(U4>\uQ1d3$EA2lD%A7K+]4q0V22`!<T+?VSn@qIn64>\uQ2Ei6G2e6GU4q0V22`!BV+?VSnA2$1V4>\uQ3''JHI2e6N24q0V22`!HX+?VSp@Pg7X4>\uQ@6Per2_mC*4q0V22`"o,+?VJ:3B'',24>\uQ@m2"t3&!*A4q0V22`"u.+?VV;1,V6)4>\uQANh5!3&!+!4q0V22`#&0+?VV;1GM''&4>\uR0KpUA3&!3H4q0V22`*6Q+?VM?@Pg7X4>\uR1-QgC2_\Yo4q0V22`*<S+?VV;@Q-I[4>\uR1d3$E3&"o(4q0V22`*BU+?VJ:ARmt64>\uR2Ei6G3&**s4q0V22`*HW+?VV<0P*EW4>\uR3''JHI3&*-C4q0V22`*NY+?VV<0f2''''4>\uR@6Per1c-m@4q0V22`+u-+?VGh1H@W.4>\uR@m2"t3&*9K4q0V22`,,1+?VJ;0f)!&4>\uS0KpUA3&*@%4q0V22`3<R+?VJ;1,V6)4>\uS1-QgC1c-su4q0V22`3BT+?VV<@5U4X4>\uS1d3$E2)f)Y4q0V22`3HV+?VV<@kg.V4>\uS2Ei6G3&+u$4q0V22`3NX+?VV=2)IK+4>\uS3''JHI1c.1(4q0V22`3TZ+?VV=2`<i/4>\uS@6Per3&4uP4q0V22`5&.+?VV=A2la^4>\uS@m2"t1c/Yq4q0V22`5,0+?VV>2)d].4>\uSANh5!3ArcU4q0V22`522+?VV?0Ju$''4>\uT0KpUA2_\i$4q0V22`<BS+?VV?2DdT,4>\uT1-QgC3&ETS4q0V22`<HU+?VJ<0Jks&4>\uT1d3$E3&G)U4q0V22`<NW+?VV?AMH@X4>\uT2Ei6G3&G5,4q0V22`<TY+?VV@0ebd#4>\uT3''JHI3&NKO4q0V22`<Z[+?VV@2)7?)4>\uT@6Per1c7''u4q0V22`>21+?VV@AM?:W4>\uTANh5!1c73N4q0V22`>83+?VVA2_mQ+4>\uU0KpUA3&WcP4q0V22`EHT+?VVAAS++84>\uU1-QgC3Ar]O4q0V22`ENV+?VJ=0K)*(4>\uU1d3$E1c@''I4q0V22`ETX+?VVC@:_V34>\uU2Ei6G3&kM^4q0V22`EZZ+?VVD1,M0(4>\uU3''JHI3&ruR4q0V22`E`\+?X0o2.^</2E*f/4>\uU@6Per3+4U&4q0V22`G20+?VVl3A`o/4>\uU@m2"t3+68Q4q0V22`G82+?VVn2).9(4>\uUANh5!3+HJU4q0V22`G>4+?VVnAhlOZ4>\uV0KpUA3+OaR4q0V22`NNU+?VJ>3B023ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1cIBL4s2sIA7IDZ%6QI+3&<`@4>]!.A3LGb1cIBN4s2sIAM[aY%6QI+3&NlB4>f&T1d2@21cIBP4s2sF2.e^0%6QI+3&a#D4>]#R2a.[51cIBR4s2sIARf:8%6QI+3&s/F4?-n`1-Q.01cIC&4s2sIAS!\^%6QI+3+>&o4?-n`A3LGb1cIC(4s2sIAS*\]%6QI+3+P2q4?-q_0g6%/1cIC*4s2sIAn,75%6QI+3+b>s4?-q_@m1>a1cIEK4s2sJ0JbLK%6QI+3AE]?4>]$+A3LGb1cIEM4s2sJ3+Xd-%6QI+3AWiA4?5/O1Hl711cIEO4s2sE3AG)/%6QI+3AiuC4?5/P3''Id61cIEQ4s2sJ1,V$T%6QI+3B'',E4?5/T@Qk5`1cIES4s2sJ11Dt%%6QI+3B98G4?50*ANgPc1cIF''4s2sJ11FiZ%6QI+3FY/p4?50.1Hl711cIF)4s2sJ11aoY%6QI+3G(Gt4?50/A3LGb1cJhs4s2sJ1GgmO%6QI+@50qg4?52W1d2@21cJhu4s2sJ1LXfX%6QI+@5C(i4>]&T2*MI31cJi"4s2sE3AiNT%6QI+@5U4k4?55Q2a.[51cJi$4s2sJ1biN)%6QI+@5g@m4?55RA3LGb1cJi&4s2sJ1c&],%6QI+@6$Lo4>]&V@6P,_1cJiO4s2sJ1c7*R%6QI+@:DDC4?55W3Bdm71cJiQ4s2sJ2)8]+%6QI+@:VPE4?59-1-Q.01cJiS4s2sE3FOj1%6QI+@:h\G4?5921d2@21cJkt4s2sJ2D[-Q%6QI+@PL%h4>]''02*MI31cJl!4s2sE@59Z''%6QI+@P^1j4?5>W0Koq.1cJl#4s2sE@5Bc)%6QI+@Pp=l4?5?01-Q.01cJl%4s2sJ2e+U,%6QI+@Q-In4>^JX1d2@21cJl''4s2sJ3+=m3%6QI+@Q?Up4>^M%3Bdm71cJlP4s2sJ3+am/%6QI+@U_MD4>f)T1d2@21cJlR4s2sJ3AENX%6QI+@UqYF4?5DX2a.[51cJlT4s2sJ3Ak>2%6QI+@V.eH4?5D[1-Q.01cJnu4s2sE@Q,u)%6QI+@kg.i4?5E32*MI31cJo"4s2sE@Q@s_%6QI+@l$:k4?6h+@m1>a1cJo$4s2sJ@PDCX%6QI+@l6Fm4?6k/3Bdm71cJo&4s2sJ@Us"5%6QI+@lHRo4?6k_0g6%/1cJo(4s2sJ@V.G\%6QI+@lZ^q4>^P+A3LGb1cJoQ4s2sJ@ko`%%6QI+@q%VE4>SoSAj-Yd1cJoS4s2su3&EO(An*S[%6QI+@q7bG4?6q/3Bdm71cJoU4s2sJAS,L;%6QI+@qInI4>f#S0Koq.1cJr!4s2sJA7B(5%6QI+A2-7j4?6qa@m1>a1cJr#4s2sJ1hJX0%6QI+A2?Cl4?-q^2EhR41cJr%4s2sJAR[AX%6QI+A2QOn4?6t^A3LGb1cJr''4s2sJARdV^%6QI+A2c[p4?56/@m1>a1cJr)4s2sJAS!V\%6QI+A2ugr4?6tb0g6%/1cJrR4s2sJAS*nc%6QI+A7@_F4?7"11d2@21cJrT4s2su3&E="@lZA0%6QI+A7RkH4CgE.0P"a(2a.[51cJrV4s2su3&E="AmmAW%6QI+A7e"J4?56.1Hl711cJu"4s2su3&E@#@q7M^%6QI+AMH@k4?56.0g6%/1cJu$4s2su3&E@#A7RP]%6QI+AMZLm4CgE.0k=iM2*MI31cJu&4s2su3&E@#AN)M2%6QI+AMlXo4CgE.2.U9-@6P,_1cJu(4s2sF2`3NX%6QI+AN)dq4?"uR1Hl7ZDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f2e=s4+?X0o1brTQ@kp4W4>]!.3BeQJA2lD$A7]7]4q0V22e?D]+?X0o1brTR@V.e54>]!.@QknsA2lMZA7IE)4q0V22e?J_+?X0o1brTR@q%V24>]!.A3M+u2)I=)4q0V22e?Pa+?X0o1brTRAn!q54>]!.Aj.>"A2lD%A7IE)4q0V22eFa-+?X0o1c&ZP2)@E*4>]!/0g6^BA2lD%A7IMT4q0V22eFg/+?X0o1c&ZP2e,#\4>]!/1HlpDA2lD%A7IT04q0V22eFm1+?X0o1c&ZP@Pp=Y4>]!/2*N-FA2lD%A7K.\4q0V22eFs3+?X0o1c&ZPARmt64>]!/2a/?HA2lD%A7RT14q0V22eG$5+?X0o1c&ZQ@PU+V4>]!/3BeQJA2lD%A7T104q0V22eHJ^+?X0o1c&ZR0Jks&4>]!/@QknsA2lD%A7[H+4q0V22eHP`+?X0o1c&ZRA2c[]4>]!/A3M+uA2lD%A7dhU4q0V22eHVb+?X0o1c&ZS11WQX4>]!/Aj.>"A2lD%A7[\U4q0V23&!$M+?X0o1c&ZS@UhS24>]#O0g6^BA2lD&A7IK,4q0V23&!*O+?X0o1c/`Q1hJo\4>]#O1HlpDA2lD&A7IPV4q0V23&!0Q+?X0o1c/`Q3&j)24>]#O2*N-FA2lD&A7IVX4q0V23&!6S+?VG<1cIT-4>]#O2a/?HA2lD&A7K(\4q0V23&!<U+?X0o1c/`R11i]Z4>]#O3BeQJA2lD&A7RK*4q0V23&"c)+?VM;2DdT,4>]#O@QknsA2lD&A7]=.4q0V23&"i++?X0o1c/`T2`3c.4>]#OA3M+uA2lD&A7dVU4q0V23&"o-+?X0o1c8fS2`Eo04>]#OAj.>"A2lD''A7[JU4q0V23&**N+?X0o1c8fU@l$:X4>]#P0g6^BA2lD''A7f=14q0V23&*0P+?VS:@U_M14>]#P1HlpDA2lD(A7IB*4q0V23&*6R+?X0o1cAlT2IScY4>]#P2*N-FA2lD(A7[N,4q0V23&*<T+?X0o1cAlU1c7H+4>]#P2a/?HA2lD)A7IB''4q0V23&*BV+?X0o1cJrT2_[E)4>]#P3BeQJA2lD)A7K%X4q0V23&+i*+?X0o1cJrV@lQX]4>]#P@QknsA2lD)A7]:/4q0V23&+o,+?X0o1cJrW0f;-(4>]#PA3M+u2_d<P4q0V23&+u.+?X0o1cT#U1c7H+4>]#PAj.>"2E>>/4q0V23&30O+?VG<@lQX]4>]#Q0g6^BA2lD*A7[]04q0V23&36Q+?X0o1cT#XA2c[]4>]#Q1HlpDA2lD*A7fF^4q0V23&3<S+?X0o1c])Y11<?U4>]#Q2*N-FA2lDSA7IPQ4q0V23&3BU+?X0o1gsp*1hJo\4>]#Q2a/?HA2lDSA7RSW4q0V23&3HW+?X0o1gsp*3AWi.4>]#Q3BeQJA2lDSA7]:/4q0V23&4o++?X0o1gsp+AN2j_4>]#Q@QknsA2lDSA7dN,4q0V23&4u-+?X0o1gsp,1M/f[4>]#QA3M+uA2lDTA7IH+4q0V23&5&/+?X0o1h(!*3&j)24>]#QAj.>"A2lDTA7K(-4q0V23&<6P+?X0o2)\uWAN2j_4>]#R0g6^BA2lDTA7RAR4q0V23&<<R+?X0o1h(!+0etp%4>]#R1HlpDA2lDTA7T..4q0V23&<BT+?X0o1h(!+3Aiu04>]#R2*N-FA2lDTA7[SQ4q0V23&<HV+?X0o1h(!-2`*]-4>]#R2a/?HA2lDTA7f=]4q0V23&<NX+?X0o1h1''+1G_3(4>]#R3BeQJA2lDUA7IMU4q0V23&=u,+?X0o1h1''.0kNTY4>]#R@QknsA2lDUA7f@`4q0V23&>&.+?X0o1h:--2E*f/4>]#RA3M+uA2lDVA7T:.4q0V23&>,0+?X0o1h:-.0k!6T4>]#RAj.>"A2lDVA7dPS4q0V23&E<Q+?VM@@Pp=Y4>]#S0g6^BA2lDWA7]1.4q0V23&EBS+?X0o1hL900ekj$4>]#S1HlpDA2lDXA7]414q0V23&EHU+?X0o2)&QO0f_E,4>]#S2*N-FA2lG#A7]=`4q0V23&ENW+?X0o2)&QQ0P!?V4>]#S2a/?HA2lG#A7dVS4q0V23&ETY+?X0o2)&QQ3As&14>]#S3BeQJA2lG$A7I;M4q0V23&G&-+?X0o2)/WOA2ZU\4>]#S@Qkns2)dKS4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI,1h/]l4CgE/0k=iS1d2@21cR=&4s2su3&NF$Ahms^%6QI,1hAin4CgE/11XlL1-Q.01cR=(4s2su3&NI%@qK16%6QI,2)%3:4CgE/11XrN2*MI31cR?I4s2su3&NI%ARdDX%6QI,2)7?<4>f,W2*MI31cR?K4s2su3&NL&AiM\4%6QI,2)IK>4CgE/1h:)O@m1>a1cR?M4s2sF2`#&0%6QI,2)[W@4CgE/1h:/X3Bdm71cR?O4s2su3&NR(@kfu-%6QI,2)mcB4CgE/2.U2R2EhR41cR?Q4s2su3&NR(@l@m^%6QI,2.8Zk4CgE/2.U5RAj-Yd1cR@%4s2su3&NR(A2Rp^%6QI,2.Jfm4CgE/2.U5U1-Q.01cR@''4s2su3&NR(A2Z>0%6QI,2.\ro4CgE/2.U</2a.[51cR@)4s2su3&NU)@l7d\%6QI,2D@<;4CgE/2Ip>P1Hl711cRBJ4s2su3&NU)ART.6%6QI,2DRH=4CgE/2IpDZ3Bdm71cRBL4s2su3&NX*@k]f)%6QI,2DdT?4>f''+0g6%/1cRBN4s2sH0f:[L%6QI,2E!`A4CgE/3+QPR1-Q.01cRBP4s2su3&N[+A7@;X%6QI,2E3lC4CgE/3FlVR1-Q.01cRBR4s2su3&N^,@l.UX%6QI,2IScl4CgE/3FlVZ1d2@21cRC&4s2su3&N^,@lQG3%6QI,2Ieon4CgE/3FlYT1-Q.01cRC(4s2su3&N^,A7B.7%6QI,2J#&p4CgE/3Fl]12*MI31cRC*4s2sF2I\[1%6QI,2_[E<4CgE/3Fl]5@m1>a1cREK4s2sD2DI0T%6QI,2_mQ>4CgE/3Fl_^3Bdm71cREM4s2su3&P,T@l@m^%6QI,2`*]@4CgE/@:Wk*ANgPc1cREO4s2su3&P,T@q.G]%6QI,2`<iB4CgE/@:Wn(2EhR41cREQ4s2su3&P,TA2?50%6QI,2`NuD4CgE/@:Wn\@6P,_1cRES4s2su3&P,TAMRd[%6QI,2dnlm4CgE/@:Wq*1d2@21cRF''4s2su3&P,TAi4$]%6QI,2e,#o4CgE/@:Wt1A3LGb1cRF)4s2su3&P/U@pq2X%6QI,2e>/q4CgE/@Us"XANgPc1cRF+4s2su3&P2V@l.XY%6QI,3&!N=4CgE/@q9+[A3LGb1cRHL4s2su3&P2VAN2A-%6QI,3&3Z?4CgE/@q9.12*MI31cRHN4s2su3&P2VAN4-_%6QI,3&EfA4CgE/@q9.^2EhR41cRHP4s2sJ1c]/3%6QI,3&WrC4CgE/A7T1-0Koq.1cRHR4s2sD2I\[1%6QI,3&j)E4CgE/A7T:^@m1>a1cRHT4s2su3&P8X@l650%6QI,3+4un4>f$-2EhR41cRI(4s2su3&P8XA7T47%6QI,3+G,p4CgE/ARo=`A3LGb1cRI*4s2su3&P8XAM@OV%6QI,3+Y8r4CgE/ARoC,@Qk5`1cRI,4s2su3&P;YA2Z>0%6QI,3A<W>4CgE00P"ZI3Bdm71cRKM4s2su3&WI$@koi(%6QI,3ANc@4CgE00P"ZM3''Id61cRKO4s2su3&WI$@lQ8.%6QI,3A`oB4CgE00P"ZR0Koq.1cRKQ4s2su3&WI$@qIP]%6QI,3As&D4CgE00P"]LANgPc1cRKS4s2su3&WI$A2Im^%6QI,3B02F4CgE00P"^&Aj-Yd1cRKU4s2su3&WI$AMIUW%6QI,3FP)o4CgE00P"cL2EhR41cRL)4s2su3&WI$Ahms^%6QI,3Fb5q4CgE00P"cT@6P,_1cRL+4s2su3&WL%@l?;1%6QI,3FtAs4CgE00k=j(@6P,_1cRL-4s2sG1M&I.%6QI,@5''kf4CgE011XoQ2EhR41cSnu4s2su3&WO&A7@M^%6QI,@5L.j4CgE011XuR2EhR41cSo$4s2su3&WO&An3_^%6QI,@5^:l4CgE01LsuL3Bdm71cSo&4s2su3&WR''An*\^%6QI,@5pFn4CgE01h:*-@m1>a1cSo(4s2su3&WU(A2,c%%6QI,@:;>B4CgE01h:,Q@m1>a1cSoQ4s2sDA7dba%6QI,@:MJD4CgE01h:,SANgPc1cSoS4s2su3&NI%ARf.4%6QI,@:_VF4?-q`0Koq.1cSoU4s2su3&WX)@q@S_%6QI,@PBtg4CgE02.U6,0Koq.1cSr!4s2su3&WX)A7@M^%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>]$,1-QgCA2lJ)A7dVQ4q0V23+=[-+?X0o2E#)UA2-7W4>]$,1d3$EA2lJ*A7RMW4q0V23+=a/+?X0o2E#)V2IScY4>]$,2Ei6GA2lJ*A7T1+4q0V23+=g1+?X0o2E#)W1,qH,4>]$,3''JHIA2lJ*A7dN,4q0V23+=m3+?X0o2E,/W2.8ZX4>]$,@6PerA2lJ+A7R]04q0V23+?>\+?VSo3G(Ga4>]$,@m2"tA2lJ+A7]@44q0V23+?D^+?X0o2E,/Y1,D*''4>]$,ANh5!3G)eU4q0V23+?J`+?VYA1cIT-4>]$-0KpUAA2lJ,A7[bW4q0V23+F[,+?VS;@5:"U4>]$-1-QgCA2lJ,A7]@b4q0V23+Fa.+?X0o2E>;Y@q%V24>]$-1d3$E1h8UV4q0V23+Fg0+?X0o1c&ZP3Fb5^4>]$-2Ei6G3+cW24q0V23+Fm2+?VVq@UVG04>]$-3''JHIA2lD+A7K(&4q0V23+Fs4+?VVq@Q?U]4>]$-@6PerA2lG%A7[bW4q0V23+HD]+?VJlARRb34>]$-@m2"tA2lJ&A7dT,4q0V23+HJ_+?VVp3&!N*4>]$-ANh5!A2lD''A7fF24q0V23+HPa+?X0o2DSfT2Ieo[4>]$.0KpUAA2lJ&A7dh^4q0V23+Oa-+?X0o2*#2Y@:h\44>]$.1-QgCA2lGWA7[VU4q0V23+Og/+?X0o2)SoU1Gq?*4>]$.1d3$EA2lG)A7RPU4q0V23+Om1+?VJl3FP)\4>]$.2Ei6GA2lG*A7[_T4q0V23+Os3+?X0o1c&ZR2Inu\4>]$.3''JHIA2lDXA7[_[4q0V23+P$5+?X0o2)AcQ3FtA`4>]$.@6PerA2lD''A7fF34q0V23+QJ^+?X0o1cAlS2e"r[4>]$.@m2"tA2lG*A7IH)4q0V23+QP`+?X0o2)JiU0ekj$4>]$.ANh5!1LsuR4q0V23+QVb+?X0o2)f&WA2la^4>]$/0KpUA1hACO4q0V23+Xg.+?X0o1c&ZSARRb34>]$/1-QgCA2lD%A7RMW4q0V23+Xm0+?X0o1h:-.@UVG04>]$/1d3$EA2lG''A7RMV4q0V23+Xs2+?VM=A7[q64>]$/2Ei6G3&`fT4q0V23+Y$4+?X0o1c/`Q@kg.V4>]$/3''JHIA2lG$A7dMR4q0V23+Y*6+?VMj3A<W+4>]$/@6PerA2lGTA7IVU4q0V23+ZP_+?X0o1c])XAi)[\4>]$/@m2"tA2lGYA7RH-4q0V23+ZVa+?X0o2)&QO@5C(V4>]$/ANh5!A2lGYA7RVT4q0V23+Z\c+?X0o2.C*-A2$1V4>]$00KpUAA2lGVA7]4.4q0V23+am/+?X0o1c/`RA2ug_4>]$01-QgCA2lDXA7K4]4q0V23+as1+?X0o2E>;Z@6$L\4>]$01d3$EA2lD%A7]1Z4q0V23+b$3+?X0o1cJrT@5:"U4>]$02Ei6GA2lG&A7f=,4q0V23+b*5+?X0o1c&ZSAR[h44>]$03''JHIA2lDTA7T+&4q0V23+b07+?X0o1c&ZSARdn54>]$0@6PerA2lD%A7[H''4q0V23+cV`+?X0o1c&ZSARmt64>]$0@m2"tA2lD&A7RYY4q0V23+c\b+?VJl0k!6T4>]$0ANh5!1hA?t4q0V23+cbd+?VMj0P!?V4>]&P0KpUA1H&ZO4q0V23A<0O+?VM;2e5)]4>]&P1-QgC1H&Z!4q0V23A<6Q+?VM@3FP)\4>]&P1d3$EA2lG%A7d`24q0V23A<<S+?VM?@:;>/4>]&P2Ei6GA2lG)A7[bY4q0V23A<BU+?X0o1brTP2`X&24>]&P3''JHIA2lD+A7IMT4q0V23A<HW+?X0o1hL9.An=.84>]&P@6PerA2lJ+A7dVO4q0V23A=o++?X0o2)AcT@6$L\4>]&P@m2"tA2lJ)A7R]34q0V23A=u-+?X0o1hL9/@Q$CZ4>]&PANh5!A2lG,A7f:,4q0V23A>&/+?X0o1h:-/1,(m$4>]&Q0KpUAA2lDXA7]@34q0V23AE6P+?X0o1hL9011NKW4>]&Q1-QgCA2lDUA7K.Y4q0V23AE<R+?X0o1c/`S@6$L\4>]&Q1d3$E2)er&4q0V23AEBT+?X0o2)8]Q2D[N+ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1c[9K4s2su3&P2V@prq4%6QI-0fM9=4CgE.2.U;W@m1>a1c[9M4s2su3&P2VA2Z8.%6QI-0f_E?4CgE/@Us")1-Q.01c[:!4s2su3&NI%AS!V\%6QI-0k*<h4?6n+@Qk5`1c[:#4s2su3&NI%A2@d\%6QI-0k<Hj4>UP&2EhR41c[:%4s2su3&P/UA25r)%6QI-0kNTl4CgE.0P"d-@m1>a1c[<F4s2su3&G5X@qK78%6QI-1,1s84CgE/11XoM3Bdm71c[<H4s2sF2`G//%6QI-1,D*:4>es+@6P,_1c[<J4s2sH0fNN)%6QI-1,V6<4CgE/11XrT2a.[51c[<L4s2su3&WO&AMmm[%6QI-1,hB>4CgE1ARo:-0Koq.1c[<N4s2su3&EO(@l%RX%6QI-1-%N@4CgE/3+QPW3Bdm71c[="4s2su3&G,UAnEna%6QI-11EEi4CgE011Y!,1-Q.01c[=$4s2su3&ER)A2H2.%6QI-11WQk4CgE/@Us%\0g6%/1c[=&4s2sD2D[3S%6QI-11i]m4CgE011XuPA3LGb1c[?G4s2sF1,:OI%6QI-1GM''94>UJ%3''Id61c[?I4s2su3&G5X@q.G]%6QI-1G_3;4CgE/2e6K12a.[51c[?K4s2su3&P5WAMlA0%6QI-1Gq?=4CgE/2.U5R0g6%/1c[?M4s2su3&EO(A2H,,%6QI-1H.K?4CgE02Ip>P1Hl711c[?O4s2su3&P/UA7T16%6QI-1H@WA4CgE/@q9(XA3LGb1c[@#4s2su3&N[+A79"4%6QI-1L`Nj4CgE011XrMAj-Yd1c[@%4s2su3&G/VAN)P3%6QI-1LrZl4CgE.0P"[)ANgPc1c[@''4s2su3&P,T@l-)-%6QI-1M/fn4CgE/1Lt)OANgPc1c[BH4s2sE2)[3R%6QI-1bh0:4>gS&Aj-Yd1c[BJ4s2su3&N[+Ai+!]%6QI-1c%<<4?7"20Koq.1c[BL4s2sJARRJ\%6QI-1c7H>4CgE/3+QSY@Qk5`1c[BN4s2sF0kE+(%6QI-1cIT@4>eoO1-Q.01c[BP4s2sG2IU,[%6QI-1c[`B4>f)U@m1>a1c[C$4s2sF2)R0R%6QI-1h&Wk4>UM-2*MI31c[C&4s2sG0fC^L%6QI-1h8cm4>]$+ANgPc1c[C(4s2sJ2e$;]%6QI-1hJoo4CgE.2Ip;V2a.[51c[EI4s2sG0Och%%6QI-2).9;4?,/Q1d2@21c[EK4s2sJ3&*6R%6QI-2)@E=4CgE/0P"ZQ@m1>a1c[EM4s2su3&G,U@lIs_%6QI-2)RQ?4CgE.2e6JUA3LGb1c[EO4s2sD@PVCV%6QI-2)d]A4>UM(1-Q.01c[EQ4s2su3&E="An!V]%6QI-2*!iC4?"rR0g6%/1c[F%4s2sF@l\$_%6QI-2.A`l4CgE.0k=g)1Hl711c[F''4s2sD2`!-O%6QI-2.Sln4CgE.1h:2W2EhR41c[F)4s2su3&NI%AMGr(%6QI-2.f#p4CgE011XuP@Qk5`1c[HJ4s2su3&N[+@lQ8.%6QI-2DIB<4>8KD0Koq.1c[HL4s2sA0Olh$%6QI-2D[N>4>8L"A3LGb1c[HN4s2sA0Ole#%6QI-2DmZ@4>8KE1-Q.01c[HP4s2sA0Om+,%6QI-2E*fB4>8KE@6P,_1c[HR4s2sA0Om(+%6QI-2E<rD4>8KH@m1>a1c[I&4s2sA0Out''%6QI-2I\im4>8L#0g6%/1c[I(4s2sA0Ouq&%6QI-2Inuo4D$B)2*MI31c[I*4s2sBAR]47%6QI-2J,,q4D$B)2a.[51c[KK4s2sBARdDX%6QI-2_dK=4>8I!@6P,_1c[KM4s2sA0eb=G%6QI-2`!W?4>8I#0g6%/1c[KO4s2sA0k4cY%6QI-2`3cA4>8I#0Koq.1c[KQ4s2sA1,UdM%6QI-2`EoC4>8KE1Hl711c[KS4s2sA0P*7.%6QI-2`X&E4>8KE@Qk64DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f3B(A1+?V>3AN2j_4>]&W@Qkns0JP=l4q0V23B(G3+?V>3ARmt64>]&WA3M+u0JR)l4q0V23B(M5+?V>3ARdn54>]&WAj.>"0JPCp4q0V23B/]V+?V>3AhuU[4>]&X0g6^B0JR)n4q0V23B/cX+?V>3AhlOZ4>]&X1HlpD0JPIp4q0V23B/iZ+?V>3Ammk44>]&X2*N-F0JR)p4q0V23B/o\+?V>3AiW$a4>]&X2a/?H0JR)r4q0V23B/u^+?V>4A2la^4>]&X3BeQJ0JR*H4q0V23B1G2+?V>4A7Ie44>]&X@Qkns0JI*K4q0V23B1M4+?X6l1c.B*4>]&XA3M+u0kFg+4q0V23B1S6+?X6l1c@N,4>]&XAj.>"0kFiL4q0V23B8cW+?V>3ARRb34>]&Y0g6^B0JYO@4q0V23B8iY+?V>53&<`-4>]&Y1HlpD0JYL>4q0V23B8o[+?V>52.A`Y4>]&Y2*N-F0JYLB4q0V23B8u]+?V>52`3c.4>]&Y2a/?H0JPF@4q0V23B9&_+?V>3AiMs`4>]&Y3BeQJ0JPCn4q0V23B:M3+?V>53+4u[4>]&Y@Qkns0JYOp4q0V23B:Y7+?VDj3Fk;_4>]&YAj.>"11arR4q0V23FOU*+?VDjAMZLZ4>]'',0g6^B2)$gq4q0V23FO[,+?VPmAn=.84>]'',1HlpDA2lJ+A7IPS4q0V23FOa.+?VYr@5^:Y4>]'',2*N-F1LsuU4q0V23FOg0+?VVC3+b>`4>]'',2a/?HA2lG#A7RN.4q0V23FOm2+?VS:2`Eo04>]'',3BeQJ2.L5U4q0V23FQ>[+?VJi1,(m$4>]'',@QknsA2lG''A7T1\4q0V23FQD]+?VG;2*!i04>]'',A3M+uA2lG*A7RJM4q0V23FQJ_+?VP:1,;$&4>]'',Aj.>"A2lJ&A7[PP4q0V23FX[++?VVq@5g@Z4>]''-0g6^B3AG,(4q0V23FXa-+?VS;3AE],4>]''-1HlpD2E*?N4q0V23FXg/+?VS=@UVG04>]''-2*N-FA2lDUA7[_T4q0V23FXm1+?X0o2E55X0K20)4>]''-2a/?H1LiCR4q0V23FXs3+?X0o1cAlT3&!N*4>]''-3BeQJ1h&0n4q0V23FZD\+?VSBAMcR[4>]''-@Qkns2`*3D4q0V23FZJ^+?VM9@:_V34>]''-A3M+uA2lJ%A7dN-4q0V23FZP`+?VJ70KD<+4>]''-Aj.>"2ISL"4q0V23Faa,+?X0o2E55Y@UVG04>]''.0g6^B1bpgB4q0V23Fag.+?VVA0P3KX4>]''.1HlpD2dnIM4q0V23Fam0+?X0o2E#)V1cIT-4>]''.2*N-FA2lJ&A7]=\4q0V23Fas2+?VYC2)RQ,4>]''.2a/?H2_[(!4q0V23Fb$4+?VM;1,M0(4>]''.3BeQJA2lD*A7IQ04q0V23FcJ]+?VY?Ai)[\4>]''.@Qkns2`>2,4q0V23FcP_+?X0o2DSfRAMZLZ4>]''.A3M+u3G)\Y4q0V23FcVa+?VSAA7Rk54>]''.Aj.>"1hC)O4q0V23Fjg-+?VJmAhZCX4>]''/0g6^B2)&KL4q0V23Fjm/+?VJl11i]Z4>]''/1HlpD1hJI$4q0V23Fjs1+?VYr@5pF[4>]''/2*N-F2)I*G4q0V23Fk$3+?VSn3+>&\4>]''/2a/?H2)mTO4q0V23Fk*5+?VM@A2$1V4>]''/3BeQJA2lD)A7T.-4q0V23FlP^+?VMm3ANc-4>]''/@Qkns2.\d.4q0V23FlV`+?VMn@kp4W4>]''/A3M+uA2lD+A7dPO4q0V23Fl\b+?VP>3+>&\4>]''/Aj.>"A2lDUA7fF64q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI-AM?:j4>o2S3Bdm71c],%4s2sG@5Kc(%6QI-AMQFl4CgE.An5C01Hl711c],''4s2sG@qK=:%6QI-AMcRn4?##L0Koq.1c],)4s2su3&NF$A2#l)%6QI-AMu^p4?#&U@m1>a1c],+4s2sDARo76%6QI-AN2jr4CgE/11XrN1Hl711c],-4s2sF@PK`(%6QI-ARRbF4?#*+3Bdm71c],V4s2sI@Q6/-%6QI-ARdnH4CgE/2e6E,1d2@21c],X4s2su3&NR(AN;V3%6QI-AS"%J4?$\/1Hl711c],Z4s2sH@V''%5%6QI-AhZCk4?$b[1Hl711c]/&4s2sHAN"$^%6QI-AhlOm4?,*.3''Id61c]/(4s2sI2*!TZ%6QI-Ai)[o4?7"^3Bdm71c]/*4s2sI3&rZV%6QI-Ai;gq4?7"^@6P,_1c]/,4s2sIAR[Y`%6QI-AiMss4?7"^@Qk5`1c]/.4s2sIAn,F:%6QI-AmmkG4?,2UAj-Yd1c]/W4s2sJ3Fsm.%6QI-An+"I4?5/P0g6%/1c]/Y4s2sJAmo15%6QI-An=.K4CgE01Lt$*3Bdm71c]/[4s2su3&EL''@l%^\%6QIU0JG[54>\`N0g6%/1gr''m4s2sE11;q%%6QIU0JYg74>gP%@6P,_1gr''o4s2sJ3&W`[%6QIU0Jks94>o,V@Qk5`1gr''q4s2sE1,h*T%6QIU0K)*;4>f&RA3LGb1gr''s4s2sI2.SU/%6QIU0K;6=4CgE/11XoS@Qk5`1gr''u4s2sI11FiZ%6QIU0O[-f4CgE/@q9+(A3LGb1gr(I4s2sE@lQ2,%6QIU0Om9h4CgE/@Us".1d2@21gr(K4s2sFA2ds]%6QIU0P*Ej4CgE/@:Wt)2*MI31gr(M4s2su3&P/UAn#=8%6QIU0etp84>gS.2EhR41gr*p4s2sJAmo:8%6QIU0f2'':4?$h/@Qk5`1gr*r4s2sE1M/=)%6QIU0fD3<4>^P(1-Q.01gr*t4s2sE2D?pN%6QIU0fV?>4>\p(2EhR41gr+!4s2sE2)dKY%6QIU0k!6g4CgE/@q9./2a.[51gr+J4s2sEA2cG2%6QIU0k3Bi4>\p)1Hl711gr+L4s2su3&P;Y@q%/V%6QIU0kENk4>^PZ1-Q.01gr+N4s2su3&P;Y@q.A[%6QIU1,(m74>UG,2*MI31gr-o4s2sE2`!?U%6QIU1,;$94>\uR1d2@21gr-q4s2sE@l-,.%6QIU1,M0;4>^P)0Koq.1gr-s4s2su3&NC#AR]78%6QIU1,_<=4CgE.A7T7+2a.[51gr-u4s2su3&P2VAi2>-%6QIU1,qH?4CgE/@Us%0@Qk5`1gr."4s2su3&P2V@q7>Y%6QIU11<?h4>^P*2a.[51gr.K4s2su3&Wa,Ai2;,%6QIU11NKj4>\uRAj-Yd1gr.M4s2sE2.U,Z%6QIU11`Wl4>^P-2*MI31gr.O4s2su3&P;Y@l@g\%6QIU1GD!84>^S&2a.[51gr0p4s2sE@::uV%6QIU1GV-:4>\s)0g6%/1gr0r4s2su3&P,TAhl/+%6QIU1Gh9<4?##N2*MI31gr0t4s2su3&NU)AMl;.%6QIU1H%E>4CgE.2IpAW1Hl711gr1!4s2su3&G5XAM?#+%6QIU1H7Q@4CgE.An5L30g6%/1gr1#4s2sG2Der.%6QIU1LWHi4>f$/@Qk5`1gr1L4s2sHA2uM2%6QIU1LiTk4>f,RA3LGb1gr1N4s2su3&WO&An!ba%6QIU1M&`m4>UM[1d2@21gr1P4s2sJ2`!9S%6QIU1b_*94CgE/ARoCaAj-Yd1gr3q4s2sF@Urq3%6QIU1bq6;4CgE.2e6GVANgPc1gr3s4s2sF@::uV%6QIU1c.B=4>SlN2*MI31gr3u4s2su3&W^+AR[>W%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>^J''2Ei6G2.:#M4q0V2@5Ko,+?VMj@Q-I[4>^J''3''JHI2.L6.4q0V2@5Ku.+?VP@2J#&]4>^J''@6Per3&N]P4q0V2@5MFW+?X0o2E#)V1c7H+4>^J''@m2"t2`*EI4q0V2@5MLY+?VS>3Fk;_4>^J''ANh5!A2lD$A7[Z24q0V2@5MR[+?VP?AN)d^4>^J(0KpUA2J"a)4q0V2@5Tc''+?VSC@pqP14>^J(1-QgC1LrI)4q0V2@5Ti)+?VJ;@l$:X4>^J(1d3$EA2lDUA7[VV4q0V2@5To++?X0o1c])Y3As&14>^J(2Ei6G1c%.#4q0V2@5Tu-+?VJ<1H%E+4>^J(3''JHI2.L/S4q0V2@5U&/+?X0o1hC300k!6T4>^J(@6Per3+6DZ4q0V2@5VLX+?VMk2`Nu14>^J(@m2"t1Lr3q4q0V2@5VRZ+?X0o1h:--2).9(4>^J(ANh5!2.SX*4q0V2@5VX\+?VYr@PU+V4>^J)0KpUA2_d0K4q0V2@5]i(+?VJ<2)mc/4>^J)1-QgCA2lG#A7K1\4q0V2@5]o*+?X0o1cJrV1,D*''4>^J)1d3$E1h/I''4q0V2@5]u,+?VG?2`Nu14>^J)2Ei6G1Ggps4q0V2@5^&.+?X0o1b`HN@5L.W4>^J)3''JHIA2lGUA7IGN4q0V2@5^,0+?VVl@q.\34>^J)@6Per1hL2R4q0V2@5_RY+?X0o1b`HO1H@W.4>^J)@m2"t2*#,X4q0V2@5_X[+?VV<2Ieo[4>^J)ANh5!3B/lS4q0V2@5_^]+?X0o2E#)UAmmk44>^J*0KpUA2.eXR4q0V2@5fo)+?X0o1brTR3G(Ga4>^J*1-QgCA2lD*A7T1)4q0V2@5fu++?X0o2DSfR2Inu\4>^J*1d3$E1bg[>4q0V2@5g&-+?VJ=@U_M14>^J*2Ei6GA2lJ(A7IPY4q0V2@5g,/+?VGl0K20)4>^J*3''JHI3G)_V4q0V2@5g21+?X0o2E55X@Pp=Y4>^J*@6Per1b`N$4q0V2@5hXZ+?VG=A2ZU\4>^J*@m2"t1cAr)4q0V2@5h^\+?X0o2.C*+1c@N,4>^J*ANh5!1bgq!4q0V2@5hd^+?X0o2DJ`R@PU+V4>^J+0KpUAA2lGVA7fFc4q0V2@5ou*+?VJ<2Inu\4>^J+1-QgC1H8o%4q0V2@5p&,+?X0o2)SoS3FP)\4>^J+1d3$E1c70G4q0V2@5p,.+?VJ<0k*<U4>^J+2Ei6G1h8R+4q0V2@5p20+?VJj2e"r[4>^J+3''JHI1h8O''4q0V2@5p82+?VJ<ARRb34>^J+@6Per1M1,V4q0V2@5q^[+?X0o2)8]S0P3KX4>^J+@m2"t1H%-G4q0V2@5qd]+?VJ;A7[q64>^J+ANh5!1c/ZP4q0V2@5qj_+?VJ8ARmt64>^J,0KpUA1H7<N4q0V2@6$&++?X0o1cJrU2)@E*4>^J,1-QgCA2lDVA7[c44q0V2@6$,-+?X0o2)o,V1,1s%4>^J,1d3$E1M(--4q0V2@6$2/+?X0o2)\uTA7[q64>^J,2Ei6G1LXlQ4q0V2@6$81+?VSkAn+"64>^J,3''JHI3G(914q0V2@6$>3+?X0o2)&QO2DIB)4>^J,@6PerA2lJ&A7RB)4q0V2@6%d\+?X0o1h1'',ARRb34>^J,@m2"tA2lD$A7[`/4q0V2@6%j^+?X0o1h1''-2.\r\4>^J,ANh5!1c$go4q0V2@6%p`+?VV?3&Ef.4>^JT0KpUA3G(904q0V2@::lS+?VY@11i]Z4>^JT1-QgC1c[?G4q0V2@::rU+?VVA0f)!&4>^JT1d3$E2)mTS4q0V2@:;#W+?VYC1grQW4>^JT2Ei6G3AN<K4q0V2@:;)Y+?VSCA2$1V4>^JT3''JHI2dnKt4q0V2@:;/[+?VP?2D@<(ASu$fAn,L_EX`I92''?@>B5)6mAn,L_EXb,f@:<S.+?VPj1-%N-4>^JT@Qkns3&ip/4q0V2@:<Y0+?VS>1h/]Y4>^JTA3M+u2e$8S4q0V2@:<_2+?VP@3&3Z,4>^JTAj.>"2dnIO4q0V2@:CoS+?VM:1hJo\4>^JU0g6^B3A<9J4q0V2@:CuU+?VG:AMu^]4>^JU1HlpD2`"r#4q0V2@:D&W+?X0o2)f&V@Q?U]4>^JU2*N-F2`,#&4q0V2@:D,Y+?VYr@lHR\4>^JU2a/?H2)eu#4q0V2@:D2[+?VJ@11i]Z4>^JU3BeQJ2)I."4q0V2@:EY/+?VJ81GM''&4>^JU@QknsA2lDVA7[`34q0V2@:E_1+?VM@0fV?+4>^JUA3M+u2dnX#4q0V2@:Ee3+?X0o2.^<12DmZ-4>^JUAj.>"3+=jZ4q0V2@:LuT+?VJ=@:_V34>^JV0g6^BA2lGUA7[_[4q0V2@:M&V+?VJ83&*T+4>^JV1HlpDA2lG*A7R\\4q0V2@:M,X+?VSl@:_V34>^JV2*N-FA2lD+A7K(Y4q0V2@:M2Z+?VYr@lQX]4>^JV2a/?HA2lD+A7K+(4q0V2@:M8\+?X0o1c])V@lZ^^4>^JV3BeQJA2lD+A7K+Z4q0V2@:N_0+?VYr@lZ^^4>^JV@Qkns3&NBH4q0V2@:Ne2+?X0o1h:--@U_M14>^JVA3M+u1b`Aq4q0V2@:Nk4+?VYr@pqP14>^JVAj.>"1c/bu4q0V2@:V&U+?X0o2I^3-AnF494>^JW0g6^B2DSbs4q0V2@:V,W+?VS:2J#&]4>^JW1HlpD3G)c14q0V2@:V2Y+?VM92).9(4>^JW2*N-F2)I+$4q0V2@:V8[+?VMi@:;>/4>^JW2a/?H2DAPt4q0V2@:V>]+?VP:1,(m$4>^JW3BeQJ2D[4$4q0V2@:We1+?VP>2.8ZX4>^JW@Qkns2E52$4q0V2@:Wk3+?VPl1GV-''4>^JWA3M+u2IngV4q0V2@:Wq5+?VS;2`*]-4>^JWAj.>"2dnCO4q0V2@:_,V+?VSnAn+"64>^JX0g6^B3&*3D4q0V2@:_2X+?VV<2e5)]4>^JX1HlpD3&P;)4q0V2@:_8Z+?VVB0f;-(4>^JX2*N-F3+66*4q0V2@:_>\+?VVq1LiTX4>^JX2a/?H3AENP4q0V2@:_D^+?VY>ARmt64>^JX3BeQJ3Ak8$4q0V2@:`k2+?VYo1cIT-ASu$fAn,L_EX`I40JFVYAS5^p@V0XhDJ*Mi4>8HC0g6^B0JG@r4s2sA0JY=G%6Q<u2DmZ@4>8HI2Ei6G1GCL;4q0V.0K1[L+?V>32_mQ>4D&.^0Koq.0JGFB4s2sA0K1pS+?X7I2)IK+4>8HK0KpUA0JGI@4s2t"AhZ2.%6Q<u3&3Z?4>8HK1HlpDAn<bU4q0V.0K:sS+?V>33&a#D4D&.\2a.[50JGIG4s2sA0K;''V+?VG60f2''''4>8HK@6Per0JGIq4s2t"AMZ>1%6Q<u3+G,p4>8HKA3M+u1GCO;4q0V.0K<W-+?V>33+b>s4D&.\@Qk5`0JGL@4s2sA0KCjO+?VG60O[-S4>8HL1-QgC0JGLC4s2t"AM[j\%6Q<u3A`oB4>8HL2*N-F1GCLB4q0V.0KD$T+?V>33B'',E4D&.\Aj-Yd0JGLH4s2sA0KD-W+?VG60Om9U4>8HL@6Per0JGLr4s2t"AMc,*%6Q<u3Fb5q4>8HLA3M+u1GCLo4q0V.0KE].+?V>33G(Gt4D&.]1Hl710JHoh4s2sA0OZh&+?X7I2*!i04>8Ht2Ei6G0JHoo4s2sC0JPON%6Q<u@5pFn4>8Ht3BeQJ1,(Fm4q0V.0O\BR+?V>3@:DDC4>SZGA3LGb0JHuq4s2sA0Om(++?X7I1c[`/4>8I!3BeQJ0JI!F4s2t"AMdp]%6Q<u@q%VE4>8I!@m2"tAn<f.4q0V.0OnWW+?V>3@qInI4D&.^Aj-Yd0JI#t4s2sA0P"TU+?VD72E!`.4>8I"Aj.>"0JI&o4s2t"AMu;-%6Q<uAMlXo4>8I#2Ei6G1,:UF4q0V.0P3=/+?V>3AmmkG4>JWO2EhR40JP7>4s2sA0ebOM+?V>3@5:"U4>8KD@m2"t0JP7m4s2t"AMuP4%6Q=!0ebd64>8KE1-QgC1G_%$4q0V.0ekOL+?V>40fD3<4>ScQANgPc0JP=<4s2sA0etaQ+?VD:3&*T+4>8KGANh5!0JP@q4s2sC2)\u/%6Q=!1c@N?4>8KH2a/?H1,WVu4q0V.0f3<&+?V>41h/]l4>JcQ0g6%/0JPCp4s2sA0f:jQ+?X7J0ebd#4>8KI2a/?H0JPI>4s2sC0fC^L%6Q=!2DIB<4>8KJ3BeQJ1GCR=4q0V.0fEQ++?V>43&WrC4D&1\0g6%/0JPOG4s2sA0jub"+?X7J1bh0''4>8Ku0g6^B0JR#k4s2sA1H@0R%6Q=!@PU+i4>8L!3''JHI0Jd,n4q0V.0k*.,+?V>4@lZ^q4>8R#0g6%/0JR''G4s2sA0k;t%+?V>6@l$:X4>8L#0g6^B0JR/s4s2sD0ebIK%6Q=!AmmkG4>8L%Aj.>"1,LmC4q0V.1,(CG+?V>50Jbm84>J`O2EhR40JY==4s2sA1,*6&+?VD92`*]-4>8NEANh5!0JY@A4s2sC0fLdM%6Q="1GV-:4>8NJ0g6^B1,L[=4q0V.1,^gM+?V>52DIB<4>elJ0Koq.0JYS!4s2sA1,psO+?VMj2)%3''4>8NM3BeQJ0JYUs4s2sFA7dP[%6Q="@5C(i4>8O!1d3$E1hC/T4q0V.11<()+?V>5@5g@m4>^VZ@6P,_0J[''H4s2sA11=]W+?VM92Inu\4>8O"0g6^B0J[)n4s2sF1,(UM%6Q="@Pp=l4>8O"2Ei6G2)8cT4q0V.11OlZ+?V>5@qInI4>g_*1d2@20J[6K4s2sA11k&\+?VJlA2HIZ4>8O&ANh5!0J[6P4s2sEAS!Y]%6Q=#0Jks94>8QF2*N-F2).''N4q0V.1GCaO+?V>60K;6=4>ej*3Bdm70JbCn4s2sA1GEB(+?VM;0Ju$''4>8QI3BeQJ0JbLn4s2sFAM>l''%6Q=#1bq6;4>8QJ1HlpD2DR-G4q0V.1GiN(+?V>61h&Wk4>o,R@6P,_0JbRr4s2sA1Gr],+?VS?1,qH,4>8QKANh5!0JbUA4s2sH2)?pM%6Q=#2J#&p4>8QLAj.>"1hACQ4q0V.1H.!O+?V>62_dK=4>^V,1-Q.00JbXu4s2sA1H/l/+?VJm0ebd#4>8QO0g6^B0Jb^E4s2sF1,1LI%6Q=#3B98G4>8QO@6Per2)@0F4q0V.1L`1)+?V>6@Pp=l4>f,R3Bdm70Jd/r4s2sA1L`:,+?VMA1H.K,4>8R#Aj.>"0Jd2m4s2sF@Pp).%6Q=#@kg.i4>8R$1-QgC2.AO(4q0V.1Lr4(+?V>6A26=k4>nrK@m1>a0Jd6J4s2sA1LsrY+?VP>ARdn54>8R%@m2"t0Jd6M4s2sG2J+^.%6Q=#ARRbF4>8R&@Qkns2IeUV4q0V.1M/=)+?V>6AhcIl4>p\+A3LGb0JkI>4s2sA1b^aM+?VV;3+>&\4>8TI0KpUA0JkO>4s2sEAi28+%6Q=$1H.K?4>8TJ3''JHI2)/Pu4q0V.1c&T)+?V>71LiTk4>elL3Bdm70JkRt4s2sA1c-mM+?VM:@6$L\4>8TL3''JHI0JkXI4s2sF1c%!Q%6Q=$2eG5r4>8TO0KpUA2.AFO4q0V.1cR?V+?V>73&WrC4>gV*0Koq.0JkaL4s2sA1cSo-+?VMk3A<W+4>8U$A3M+u0Jm8n4s2sG2`,)0%6Q=$@qInI4>8U&0KpUA2Ie^+4q0V.1hAU0+?V>7AN2jr4?"rQ@m1>a0JmAs4s2sA1hJO-+?VS?1H.K,ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6Q=%11`Wl4>8WJAj.>"1hC*)4q0V.2)Sl-+?V>82.\ro4>eoR2a.[50JtgG4s2sA2)mEV+?VMA1cIT-4>8X$1-QgC0K!8p4s2sF@l-&,%6Q=%@Pp=l4>8X%2Ei6G2.\d*4q0V.2.AO/+?V>8@Q?Up4>g_+2EhR40K!<K4s2sA2.C&Z+?VMn3&!N*4>8X''Aj.>"0K!Dq4s2sG11W1)%6Q=%AS"%J4>8X(Aj.>"2DSf$4q0V.2DA]++?V>90P3Kk4>o,VAj-Yd0K(Xp4s2sA2DJ]*+?VPk2E!`.4>8ZK2a/?H0K([G4s2sG@q&t4%6Q=&1c7H>4>8ZM2Ei6G2_m-u4q0V.2DmEW+?V>92)mcB4?#,X3Bdm70K(gC4s2sA2E!9R+?VSC1b_*&4>8[%1d3$E0K*>s4s2sEART+5%6Q=''0K20<4>8]J3''JHI2.JIS4q0V.2_e`)+?V>:0k*<h4>g_1@6P,_0K1q"4s2sA2`G51+?VPm1LrZY4>8]S2Ei6G0K2!N4s2sH11`.''%6Q=''@5^:l4>8^&2a/?H2`5##4q0V.2dn[0+?V>:@6$Lo4?#-+1-Q.00K3EL4s2sA2dp5\+?VS@3&Wr04>8^''A3M+u0K3HP4s2sH3&"i+%6Q=''@l$:k4>8^(1d3$E2`Y>-4q0V.2e+^/+?V>:@l?Ln4?#920g6%/0K3NR4s2sA2e6Ma+?VV;@l$:X4>8`K3''JHI0K:aH4s2sI@5''H#%6Q=(1,D*:4>8`M2*N-F3Ar^''4q0V.3&<?S+?V>;1Gh9<4>efH@m1>a0K:pG4s2sA3&NNV+?VM9@5L.W4>8`R3BeQJ0K;""4s2sF2_[$O%6Q=(3&*T>4>8`S1-QgC2*!NQ4q0V.3+Oa-+?V>;A26=k4>nuN@6P,_0K<T$4s2sA3+Os3+?VP>1cRZ.4>8a+1d3$E0K<W$4s2sG2_d-Q%6Q=)0Jbm84>8cL1d3$E2IeL$4q0V.3AWZZ+?V><1LWHi4?#-,1-Q.00KCsG4s2sA3A`QV+?VS@@q7b44>8cP2Ei6G0KCsK4s2sH2_eo.%6Q=)3B02F4>8cU3BeQJ3&36t4q0V.3FZD\+?V><@U_MD4?,;[0g6%/0KEWQ4s2sA3FcS`+?VVn@50qT4>8d,@Qkns0KE]S4s2sJ2E!<S%6Q=Q0k*<h4>:1u@m2"t2)@%#4q0V.@5VOY+?V>d2.Sln4>gV+@m1>a0OZmo4s2sA@5fo)+?VMm@Q-I[4>:2(2a/?H0OZt$4s2sG1,33$%6Q=Q@l6Fm4>:2R2Ei6G2DnuR4q0V.@:_G_+?V>dARRbF4>pY[@Qk5`0Ocam4s2sA@PK]''+?VS;0KD<+4>:5"2a/?H0Ocds4s2sH1hJX0%6Q=R11EEi4>:5"@m2"t2`3KN4q0V.@P]]%+?V>e1GM''94?#-.1d2@20Od!u4s2sA@Q65/+?VV>2e"r[4>:5T2a/?H0OeQP4s2sJ2E*NX%6Q=RA7e"J4>:5U0KpUA3B/]J4q0V.@V.D[+?V>eAi)[o4>elQ1d2@20OlhH4s2sA@khIW+?VM@1GD!%4>:8#0KpUA0Oljm4s2sF3+b07%6Q=S11i]m4>:8$0KpUA2.J=K4q0V.@l%XZ+?V>f1M&`m4>g\[0g6%/0Olpp4s2sA@l,u*+?VMn@6$L\4>:8''2a/?H0Om"#4s2sG1M()\%6Q=S2_mQ>4>:8(1HlpD2DmBJ4q0V.@lQ/++?V>f3&*T>4>o*0ANgPc0OnNH4s2sA@pq/W+?VPl11`WY4>:8T3''JHI0OnTQ4s2sH0ek[P%6Q=SA7IeG4>:8UA3M+u2`*<J4q0V.@q@G[+?V>fAMcRn4?#,Q2*MI30On[*4s2sA@qB79+?VS@2e"r[4>:;#@m2"t0OunK4s2sHAn3_^%6Q=T2)7?<4>:;''1HlpD3&kD&4q0V.A2n0b+?V>g3A<W>4?5/O1d2@20P"TJ4s2sAA77;Y+?VYB3&Nl/4>:;S@Qkns0P"U%4s2sJ2IeX/%6Q=T@PBtg4>:;T0g6^B3B/]M4q0V.A7I>X+?V>g@kp4j4>eg%1-Q.00P"]J4s2sAA7RDY+?VM:AMQFY4>:;V@Qkns0P"^(4s2sF2.\R-%6Q=TAM?:j4>:;W0g6^B2)Sl$4q0V.A7[S]+?V>gAMlXo4>f&P1-Q.00P)tI4s2sAAMIXX+?VP;1,1s%4>:>%3''JHI0P*""4s2sG1bgmP%6Q=U1GD!84>:>&0g6^B2E!NR4q0V.AN2J0+?V>h3&EfA4?#)S@Qk5`0P*6u4s2sAAN;J/+?VS@A7[q64>:>T0g6^B0P+ZJ4s2sH3&ro]%6Q=U@Pg7k4>:>U2*N-F2dn^Y4q0V.ARdS]+?V>h@l?Ln4?$k13Bdm70P+cQ4s2sAARm_`+?VV<2`X&24>:>Y2Ei6G0P+iT4s2sI2_[!N%6Q=V0K;6=4>:A$3BeQJ3+4a$4q0V.Ahdm]+?V>i1,(m74?-h\2a.[50P31R4s2sAAi40a+?VYB3A`o/4>:A*1-QgC0P34!4s2sJ2Iea2%6Q=V2I\im4>:A*@m2"t3B/`I4q0V.AiDM0+?V>i2`*]@4?5B5A3LGb0P3=)4s2sAAiVk8+?VM>0P!?V4>:AV@Qkns0P4d(4s2sF@V%D\%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaUAn3_^+?V>iA2QOn4>noP1-Q.00ebF@4s2sB0JkXN+?VSC3+Y8_4>ANI3BeQJ0ebIn4s2sH@q&t4%6Q@!2.\ro4>ANIAj.>"2e6B.4q0V/0K*N,+?VA42_[E<4?$k`0Koq.0ed&r4s2sB0Od%++?VVnA2-7W4>AO$0KpUA0ed/n4s2sJ2.8I.%6Q@!AS"%J4>AO$Aj.>"3B/`P4q0V/0P37-+?VA4AiMss4?6hYAj-Yd0ed3J4s2sB0P4cX+?VYn1bh0''4>AQE3''JHI0ek@B4s2sF0ebRN%6Q@"0Om9h4>AQEANh5!2)7-M4q0V/0em9(+?VA51,(m74>f#PAj-Yd0ekI@4s2sB0f([N+?VMk2DdT,4>AQKAj.>"0ekU@4s2sG2)dHX%6Q@"3&a#D4>AQM3''JHI2I^/R4q0V/0k)k$+?VA5@PU+i4?#/R0g6%/0em0M4s2sB0k;t%+?VSl@l?L[4>AR%@6Per0em6L4s2sI0f`],%6Q@"Ai)[o4>AR&2*N-F3&NI$4q0V/1,*9''+?VA60P3Kk4?,>U1-Q.00etLm4s2sB1,<<&+?VVnARdn54>ATH@m2"t0etLp4s2sI@q@DZ%6Q@#2D[N>4>ATL1d3$E3B&WM4q0V/1,iZ++?VA62e,#o4?6h]ANgPc0f!3I4s2sB11F`W+?VP=@U_M14>AU''2a/?H0f!?#4s2sH0k3"''%6Q@$0JG[54>AWG0g6^B2`3:!4q0V/1GCdP+?VA70KD<>4?#2ZANgPc0f(O<4s2sB1GLUJ+?VSk1h8cZ4>AWHANh5!0f(Or4s2sH@q7G\%6Q@$11EEi4>AWI@m2"t2eHYU4q0V/1G^jO+?VA71Gq?=4?,)R3''Id60f(UG4s2sB1G`H''+?VV@2E3l04>AWL2Ei6G0f([G4s2sI@PBN#%6Q@$3&WrC4>AWO2a/?H3At;)4q0V/1H@-Q+?VA73AE]?4?5>X@Qk5`0f*Aq4s2sB1M&=*+?VP>3&3Z,4>AX(2Ei6G0f*E#4s2sGAn5L;%6Q@%1c[`B4>AZL@6Per3&!9G4q0V/1c[EW+?VA83As&D4?5)T0g6%/0f3<I4s2sB1gslX+?VYA@pqP14>A[&1d3$E0f3At4s2sJARo:7%6Q@%A2ZUo4>A[''2a/?H2Df#S4q0V/1hAF++?VA8AMZLm4>pVVANgPc0f3HQ4s2sB1hC8_+?VS;An!q54>A[)@m2"t0f3KQ4s2sH2e$5[%6Q@&0JG[54>A]I0g6^B2dnU!4q0V/2)$gM+?VA90Jks94?$\Y1d2@20f:Xp4s2sB2)&Q)+?VSo2)IK+4>A]L@m2"t0f:at4s2sJ0k"NT%6Q@&2.\ro4>A]NAj.>"3B8m,4q0V/2)dKY+?VA92`X&E4>f*/ANgPc0f<Aq4s2sB2.8=*+?VSm1M&`Z4>A^%@m2"t0f<BM4s2sHAMuP4%6Q@&@Q6Oo4>A^&3BeQJ3&P8(4q0V/2.JX1+?VA9@pqPD4?-e,ANgPc0f<K%4s2sB2.U,Z+?VY<3+4u[4>A^)1-QgC0f<Mu4s2sJ1LsuZ%6Q@''11WQk4>A`LANh5!2e-E24q0V/2D\r/+?VA:1b_*94?,;T1d2@20fCpL4s2sB2E!QZ+?VM91H.K,4>Aa&0g6^B0fEGq4s2sJ2`!EW%6Q@''@Q?Up4>Aa''@6Per3G(0-4q0V/2Ing3+?VA:A77YE4?-k+2EhR40fESs4s2sB2J"U,+?VY@2).9(4>Aa*1-QgC0fET!4s2sJ2`"u.%6Q@(0f)!94>AcL1d3$E3FOdR4q0V/2_d3S+?VA;0fM9=4?6h\1Hl710fLjD4s2sB2_m3R+?VS@2_dK*4>AcN@Qkns0fLmu4s2sJA7dhc%6Q@(1LrZl4>AcNANh5!3Ft-Z4q0V/2`5,0+?VA;2.\ro4?55WA3LGb0fM!E4s2sB2`<BS+?VYo2`Eo04>AcT@6Per0fM+%4s2sF2_m-P%6Q@(AM?:j4>Ad+0g6^B2.JRR4q0V/3&!<U+?VA<0KD<>4>p\+@Qk5`0fUjs4s2sB3&"l,+?VS<@Pg7X4>AfM@Qkns0fUmt4s2sJ0KD''U%6Q@)1H7Q@4>AfO3BeQJ2)8TN4q0V/3&>)/+?VA<1M&`m4>eoSANgPc0fV0I4s2sB3&r]W+?VP;3+Y8_4>Ag(ANh5!0fWTR4s2sG@kfu-%6Q@)@qInI4>Ag+0KpUA2`!HM4q0V/3+Oj0+?VA<A2QOn4?#,X1d2@20fW`%4s2sB3+Y!3+?VV=3&<`-4>AiN1d3$E0f^sG4s2sF1,C[L%6Q@*0f_E?4>AiN@6Per2)?pp4q0V/3AY82+?VA=1b_*94>f&V1Hl710f_0K4s2sB3B&fZ+?VMn1,;$&4>Aj+2Ei6G0f``&4s2sG2`E][%6Q@R0P3Kk4>C8!0KpUA2`3C''4q0V/@5Kl++?VAe1cIT@4?,5WA3LGb0k!$s4s2sB@5p&,+?VM<@l6FZ4>C8(A3M+u0k!%Q4s2sF2`YG5%6Q@R@kg.i4>C8S1-QgC2.L/Q4q0V/@:N_0+?VAe@q.\F4>g\*0g6%/0k"X''4s2sB@:`t5+?VP;1bq6(4>C8V@Qkns0k"[(4s2sG1GL[L%6Q@S0f)!94>C;"1d3$E2E*=%4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN70k)pu4s2sB@P^#.+?VP@@lZ^^4>C;%1d3$E0k)ss4s2sG@ko`%%6Q@S2I\im4>C;''@m2"t2_\\t4q0V/@Q%g^+?VAf2_[E<4?##P3Bdm70k*-t4s2sB@Q?2-+?VS?1cIT-4>C;*3''JHI0k*.O4s2sH2_[$O%6Q@S3G(Gt4>C;R0KpUA2`G;,4q0V/@UV#U+?VAf@5C(i4?#5S0g6%/0k+TO4s2sB@U_>]+?VSl0JG["4>C;S@Qkns0k+U%4s2sH@lHA2%6Q@S@UqYF4>C;SAj.>"2e+dY4q0V/@UhA]+?VAf@lZ^q4?,#KANgPc0k2su4s2sB@kp&.+?VJmAi;g^4>C>%2Ei6G0k3!u4s2sF0k3%(%6Q@T1LrZl4>C>%ANh5!2)7%#4q0V/@l6,-+?VAg2)[W@4>es-2a.[50k3(M4s2sB@l7a[+?VM?0JPa#4>C>)0KpUA0k3-s4s2sF@5;@W%6Q@T@5^:l4>C>S2a/?H2D[0H4q0V/@q.5W+?VAg@kp4j4>o'',1Hl710k4]Q4s2sB@q.M_+?VP@0etp%4>C>UA3M+u0k4^)4s2sG3&<<R%6Q@TAi;gq4>C>X2a/?H2In^%4q0V/A26)-+?VAh1-%N@4?"s(2*MI30k<+"4s2sBA2H80+?VS=A2c[]4>CA''@6Per0k<+M4s2sH1h:/]%6Q@U1h/]l4>CA''A3M+u2`,,''4q0V/A2Z5-+?VAh2DdT?4?#2R3Bdm70k<4P4s2sBA2e!^+?VSCAR[h44>CA+2a/?H0k<7''4s2sH@5q^[%6Q@UAmmkG4>CAY@Qkns3&i`N4q0V/A7f@9+?VAhAn=.K4?,;Z2*MI30kE(O4s2sBAMPr''+?VY<A2ug_4>CD&@6Per0kE+L4s2sJ0f3H*%6Q@V1grQj4>CD(@Qkns2)$pE4q0V/AMmp\+?VAi2.Jfm4>euT2*MI30kFlM4s2sBARmP[+?VMm@PU+V4>CDXANh5!0kFm-4s2sG0Out''%6Q@W0f_E?4>CG&@6Per2E3U*4q0V/Ai!s]+?VAj1M&`m4>pY)2a.[50kN6s4s2sBAi)8,+?VPk3+P2^4>CG*2a/?H0kN:&4s2sGA7T16%6Q@W3&*T>4>CG-1-QgC2_m=$4q0V/AmmJZ+?VAj@5L.j4?#--@Qk5`0kOj)4s2sBAmo77+?VSA1GM''&4>CGX0KpUA0kOoM4s2sH3Arl]%6Q@W@lQXp4>CGX3BeQJ2`YJ.4q0V/An>O;+?VAjAS++K4?$e,ANgPc0kP#T4s2sBAnEqb+?VSp3Fb5^4>CG[3''JHI0kP#X4s2sHAn,75%6Q@WAn!qH4>CG[@m2"t2eHSS4q0V00Jm3%+?VD51h&Wk4?,6.@Qk5`1,(Oq4s2sC0Jm?)+?VVA@UqY34>JTKA3M+u1,(Ut4s2sI@l7a[%6QC"2e>/q4>JTLAj.>"3+ZYT4q0V00K<K)+?VD53+>&o4?5*-1-Q.01,([u4s2sC0K<W-+?VY<AR[h44>JTN@m2"t1,(_!4s2sJ0kFcW%6QC#2`*]@4>JWM2*N-F2DmL*4q0V00k!")+?VD6@5pFn4>o00A3LGb1,36J4s2sC0k+ZW+?VPkAhlOZ4>JX$0KpUA1,38n4s2sGAMc;/%6QC#@l6Fm4>JX$2Ei6G2J"[S4q0V00kFiY+?VD6ARmtI4>pb,2*MI31,:Us4s2sC1,CUJ+?VSA1c@N,4>JZJ2Ei6G1,:XE4s2sH2`+u-%6QC$1L`Nj4>JZJ@m2"t2`N]P4q0V01,gpO+?VD72_mQ>4?$k.ANgPc1,:dE4s2sC1,h$R+?VSp2DmZ-4>JZN2Ei6G1,:dI4s2sHAmmAW%6QC$2dnlm4>JZN@Qkns3&!1$4q0V01,q6W+?VD73+4un4?,''-2a.[51,:h!4s2sC1,rf.+?VV=1LiTX4>J[''2a/?H1,<E#4s2sI3FlP^%6QC$AS"%J4>J[''Aj.>"3+4[''4q0V011i4(+?VD7AhcIl4?-b+1d2@21,CXD4s2sC1GLjQ+?VVpAN)d^4>J]M0KpUA1,CdB4s2sJ2E3Z[%6QC%2DIB<4>J]N1-QgC1hAX&4q0V01H.9W+?VD82`X&E4>elQ@Qk5`1,EB!4s2sC1L`@.+?VMjA2la^4>J^''2*N-F1,EH!4s2sG0f1mS%6QC%Ai2ap4>J^)2Ei6G2Dd0E4q0V01bpmO+?VD91,V6<4>o2V3''Id61,LgJ4s2sC1c/W)+?VPkAn!q54>J`M@m2"t1,Lgu4s2sG@V.P_%6QC&2)IK>4>J`N2*N-F2J"m)4q0V01c]#/+?VD93Fb5q4?#)R@6P,_1,NDo4s2sC1gr.''+?VS>1hJo\4>Ja''1-QgC1,NJs4s2sH2`522%6QC&A2?Cl4>Ja(1d3$E2`NcS4q0V01hAC*+?VD9AMQFl4?$\''3''Id61,Ud@4s2sC2)-jM+?VSp2E*f/4>JcK2a/?H1,UdG4s2sHAn5@7%6QC''2`X&E4>JcQ@6Per3&kDY4q0V02*#53+?VD:3G(Gt4?-h11d2@21,WJp4s2sC2.87(+?VVo2E3l04>Jd&2*N-F1,WJu4s2sIA2n-a%6QC''@5pFn4>Jd&3BeQJ3+P$*4q0V02.C,\+?VD:@V.eH4?-q,2a.[^DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>Jd(Aj.>"1,WSr4s2sJ0fET,%6QC''Ai)[o4>Jd+2*N-F3ArlQ4q0V02.gD`+?VD:AnF4L4?5>Z2a.[51,^gA4s2sC2D?pN+?VYD0P!?V4>JfM1HlpD1,^mE4s2sF1,psO%6QC(2_mQ>4>JfR1HlpD2.\X)4q0V02E3Z[+?VD;3&s/F4>noO1-Q.01,_.)4s2sC2IS:''+?VP=2_mQ+4>Jg+2*N-F1,`]&4s2sG@QA!`%6QC(AN2jr4>Jg+3BeQJ2I^/P4q0V02J+j2+?VD;AiDmr4>pe+3Bdm71,h!F4s2sC2`!9S+?VS?0JYg$4>JiQ2Ei6G1,h''L4s2sH3B1G2%6QC)2E*fB4>JiR3''JHI2dp-(4q0V02`P50+?VD<3+>&o4?$e\@Qk5`1,h3P4s2sC2`Wi]+?VSpAMQFY4>Jj,3''JHI1,ic)4s2sI2_m9T%6QC)AhcIl4>Jj-1-QgC3&kM)4q0V03&"c)+?VD=0Od3g4?-h/3''Id61,q"!4s2sC3&+u.+?VVq0ebd#4>JlS1HlpD1,q0K4s2sJ3+6>]%6QC*2`*]@4>JlT2*N-F3FXdU4q0V03&``Z+?VD=2`EoC4?6k/0Koq.1,q3Q4s2sC3&b80+?VYoAhcIY4>JlU0g6^B1,q6K4s2sF0ebLL%6QC*3&NlB4>JlU2Ei6G2)-do4q0V03&io^+?VD=3+4un4>elR@Qk5`1,rl''4s2sC3+b''4+?VP>@PU+V4>JoT@6Per1-%7&4s2sH1Gr`-%6QC+2`*]@4>JoU2*N-F2`*KS4q0V03B0#_+?VD>3+>&o4?#/Y@m1>a1-%?T4s2sC3B:M3+?VSB@l$:X4>L>!1HlpD11;jn4s2sI1hAU0%6QCS0ebd64>L>"0g6^B3&``O4q0V0@5B`(+?VDf1H%E>4?,>U2a.[511<!u4s2sC@5Kr-+?VVlA2HIZ4>L>''@Qkns11<(N4s2sIAMQ/-%6QCS2dnlm4>L>(@Qkns3+am''4q0V0@5p&,+?VDf3&EfA4?5,O3Bdm711<.%4s2sC@5p82+?VY=3&Nl/4>L>)@Qkns11<.P4s2sJ0fUmO%6QCS3A<W>4>L>*0g6^B3AP)#4q0V0@:Nn5+?VDfA2$1i4?5DV2EhR411=]N4s2sC@:V8[+?VYEA2?CY4>L>WANh5!11=d,4s2sJAh[g\%6QCT1H%E>4>LA%2a/?H2.\[)4q0V0@Q#o(+?VDg2DIB<4>o*-@6P,_11E4#4s2sC@Q680+?VPj1h8cZ4>LA*@m2"t11E4R4s2sG@UW\/%6QCT@Pp=l4>LAT2Ei6G2_eer4q0V0@Uh)U+?VDg@kg.i4?#!*@6P,_11F`K4s2sC@Uh2X+?VS<3Fk;_4>LAU2*N-F11F`O4s2sH1H%-T%6QCTAMcRn4>LAW2*N-F2`G/#4q0V0@V.;X+?VDgAhcIl4?#620g6%/11FiO4s2sC@V.G\+?VSBA7e"74>LD$0g6^B11N$o4s2sH@q78W%6QCU0fM9=4>LD$3''JHI2e=^U4q0V0@kou,+?VDh1,qH?4?$k2@Qk5`11N+M4s2sC@l%[[+?VV=2)RQ,4>LD)Aj.>"11N6s4s2sI2`WQU%6QCU2dnlm4>LD*@Qkns3&ra)4q0V0@lQG3+?VDh3&s/F4?-b]1d2@211N=&4s2sC@lZJ3+?VVn3AE],4>LDT3''JHI11O`Q4s2sIAM[g[%6QCU@U_MD4>LDU@m2"t3AE<I4q0V0@q''"5+?VDh@V.eH4?5,V0Koq.11Om*4s2sC@qB17+?VYA@Q?U]4>LG''0g6^B11W0r4s2sJAN2S3%6QCV1Gq?=4>LG''2Ei6G3Fu_Y4q0V0A2H&*+?VDi1c%<<4>f#V@m1>a11W7&4s2sCA2RdZ+?VMjAhcIY4>LGU1HlpD11XfM4s2sH1H&f.%6QCV@:_VF4>LGV0KpUA2`3<D4q0V0A7@AZ+?VDi@Pp=l4?#/T3''Id611XlP4s2sCA7IM]+?VSBAn!q54>LGX2Ei6G11XoS4s2sH@:LuT%6QCVAN;ps4>LGY@6Per2e$AQ4q0V0AMlJ3+?VDj2.8Zk4?,?51-Q.011`I%4s2sCAN;S2+?VY?2)%3''4>LJX2*N-F11arR4s2sJ3AP&-%6QCWA2ugr4>LJY@6Per3B:\^4q0V0AS*_^+?VDjAi)[o4?6q-ANgPc11b&X4s2sCAS,@7+?VYp1bq6(4>LM&Aj.>"11i6p4s2sF0f!9''%6QCX0f_E?4>LM''@6Per2.JO)4q0V0AhddZ+?VDk0k<Hj4>g\.A3LGb11i9q4s2sCAhl))+?VP:ARmt64>LM)0g6^B11i<t4s2sG2Ip5[%6QCX1LWHi4>LM)@Qkns2IU&Q4q0V0Ai);-+?VDk1c.B=4?"rJ@m1>a11i@''4s2sCAi*p[+?VPoAnF494>LM,A3M+u11iFU4s2sH3AE<R%6QCX3+b>s4>LM/0KpUA2eHY\4q0V0AiVV1+?VDk3AWiA4?,''+0g6%/11k#V4s2sCAn,75+?VVD2)%3''4>LM\2a/?H11k,Y4s2sIAi)D0%6QCXAn+"I4>LM\A3M+u3AE<u4q0V10JR*%+?VG60kENk4?5901-Q.01GCUD4s2sD0Jb^Q+?VYD2)%3''ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QF#1h&Wk4>SZJ@m2"t3FX[!4q0V10K3E(+?VG62e"rn4>eiL1d2@21GCdC4s2sD0K:gO+?VM>@5^:Y4>SZN3BeQJ1GCdt4s2sF@P_OY%6QF#@:h\G4>S[#0g6^B2_[!A4q0V10OeKT+?VG6@UhSE4?#$(2*MI31GE;s4s2sD0Om%*+?VSA@lZ^^4>S[%0g6^B1GE>p4s2sH@5^&.%6QF#AN;ps4>S[&@6Per2eHZ44q0V10ed$"+?VG70Od3g4?,932EhR41GLUB4s2sD0ekUN+?VVD2.8ZX4>S]J1HlpD1GL[B4s2sIA2#o*%6QF$1c%<<4>S]K1d3$E3+b!Z4q0V10fCgO+?VG72DdT?4?590@6P,_1GLdH4s2sD0fD!T+?VYC11EEV4>S]MANh5!1GLgB4s2sJ2e6G_%6QF$2e,#o4>S]NA3M+u3B:M+4q0V10f^sP+?VG73ANc@4?6k^@6P,_1GN<I4s2sD0k"QU+?VYp3+>&\4>S^#Aj.>"1GN>m4s2sJA2c>/%6QF$@kg.i4>S^%1-QgC3G(*%4q0V10k3%(+?VG7@l?Ln4?7"22EhR41GNBM4s2sD0k4cY+?VMl@l?L[4>S^%Aj.>"1GNDo4s2sFAS#F:%6QF$A2-7j4>S^&1-QgC2.g>P4q0V10k=]V+?VG7A7@_F4>o*/1Hl711GNGr4s2sD0kE.)+?VPjAS"%74>S^(1d3$E1GNK!4s2sH1,1RK%6QF%0Ju$:4>S`H2Ei6G2`WWP4q0V11,*0$+?VG80Om9h4?$\,@m1>a1GU[q4s2sD1,3?(+?VV=2E3l04>S`J@m2"t1GU^r4s2sI3&**N%6QF%1bq6;4>S`L1HlpD3+b$+4q0V11,NK)+?VG81h8cm4?5-*1-Q.01GUk#4s2sD1,gmN+?VYC11`WY4>S`O1HlpD1GUmG4s2sJ2eHSa%6QF%2`<iB4>S`O2a/?H3B/oP4q0V11,h3W+?VG82dnlm4?5B20g6%/1GWDr4s2sD11E+)+?VYp@5^:Y4>Sa&@6Per1GWHL4s2sF2I^2\%6QF%A2laq4>Sa''3BeQJ2_[''E4q0V111XiX+?VG8A7IeG4?"rN3''Id61GWKO4s2sD11Xr[+?VS:1c7H+4>Sa(A3M+u1GWNQ4s2sHAN2V4%6QF&0f2'':4>ScJ2*N-F3+=gT4q0V11GNK*+?VG91,(m74?5,Q1d2@21G^jF4s2sD1Gh!R+?VYn0fM9*4>ScMAj.>"1G^mB4s2sJ@kp#-%6QF&2D@<;4>ScO0g6^B3FlSZ4q0V11H/f-+?VG92e5)p4>gS)@Qk5`1G_!K4s2sD1H7<W+?VPk0K;6*4>ScQ3BeQJ1G_""4s2sH0Jt^O%6QF&3+P2q4>ScQANh5!2_m+!4q0V11H@HZ+?VG93FP)o4?$\-0Koq.1G`Gu4s2sD1LW7,+?VVA1Gh9)4>Sd''1-QgC1G`Ms4s2sIAN;Y4%6QF&@lZ^q4>Sd''@6Per3A`R$4q0V11Lju[+?VG9@qInI4?55T3''Id61G`Q%4s2sD1LsoX+?VYm2)@E*4>SfK3''JHI1GggH4s2sG1,(LJ%6QF''0kENk4>SfKAj.>"2I\Bq4q0V11c/]++?VG:1h8cm4?5?11d2@21GgsD4s2sD1c7''Q+?VYn0kENX4>SfQ1HlpD1Gh$I4s2sJAS*\]%6QF''2e>/q4>SfQAj.>"3G(0\4q0V11cR?V+?VG:3&WrC4>o*/A3LGb1Gh+%4s2sD1c])1+?VVm3A`o/4>SfSANh5!1GiMo4s2sIAN=<c%6QF''@5^:l4>Sg&2a/?H3A`WR4q0V11h''uZ+?VG:@V%_G4?6t,0Koq.1GiT"4s2sD1h/L/+?VYr2`*]-4>Sg(@m2"t1GiTP4s2sG@PKi+%6QF''A2?Cl4>Sg)1d3$E2`G8,4q0V11h:,\+?VG:A7[qI4?,'',0Koq.1GiWS4s2sD1hAC*+?VVA1c@N,4>Sg*1-QgC1GiZ!4s2sI3B&r^%6QF''AN)dq4>Sg*3''JHI3+=m-4q0V12)7*S+?VG;1,qH?4?5A[1Hl711Gppu4s2sD2)8`,+?VYm2E!`.4>SiN3BeQJ1Gpss4s2sJ1cR0Q%6QF(1cIT@4>SiO3''JHI2_[-M4q0V12)R''O+?VG;@:_VF4>8HE0Koq.1GrW!4s2sD2.AI-+?VG6An4(74>Sj(2a/?H1GrW$4s2sD0KEZ-%6QF(@UVGC4>Sj(@m2"t1GCL?4q0V12.J@)+?VG;AnF4L4>SZJ0g6%/1H$p@4s2sD2DI!O+?VG63&!N*4>SlM1d3$E1H%-O4s2sD0OZ\"%6QF)2IScl4>SlRAj.>"0JkL<4q0V12E*?S+?VG<3A<W>4>8TH2EhR41H%6K4s2sD2IU&Y+?V>71H%E+4>Sm(A3M+u1H&ZQ4s2sC0k*++%6QF*0f)!94>SoN2*N-FAn<\N4q0V12`"o,+?VG=1LiTk4?$\Y1-Q.01H.9I4s2sD2`NNU+?VSp1b_*&4>SoV2a/?H1H.<R4s2sI0Jd0%%6QF+0fD3<4>SrO2a/?H3&i`P4q0V13&+u.+?VG>0kNTl4?,<01d2@21LW''p4s2sD@5B]''+?X0o1cAlT0Jbm%4>UG#1-QgC1L`$o4s2sH2_\f,%:sEf@V0XhDJ*Mi%5Kpd@V''1dDIR3u@;]^h%6QFW2I\im4>UM+@m2"t3+cW/4q0V20k)n%+?VJ8@P^1j4CgE.@q9+^2a.[51biGs4s2sE0k*%)+?X0o1h1'',@5L.W4>\fN0KpUA1bppC4s2t!1,UdM%6QI&2*!iC4>\fN@6Per2_\c"4q0V21b^UI+?VJ;2.\ro4>8HE0Koq.1c.*G4s2sE1h/4''+?V>31,(m$4>\m)2Ei6G1c/]$4s2sD0KET+%6QI(@lZ^q4>\m)A3M+u1GNAn4q0V21h8@*+?VJ;A2?Cl4>S^%2EhR41c/`&4s2sE1h:&Z+?VG7@lZ^^4>\m*A3M+u1c/`S4s2sD0k4`X%6QI)0k<Hj4>\oMAj.>"11`F''4q0V22)6mM+?VJ<1,;$94>LJ-@m1>a1c7%"4s2sE2)8c-+?VDj@q.\34>\oO0g6^B1c7''E4s2sCARm\_%6QI)1hJoo4>\oQ0KpUA2.ARW4q0V22)[HY+?VJ<2IScl4?-q22EhR41c8fR4s2sE2.U5]+?X0o1c&ZQ2e>/^4>\rM1d3$E1c@$F4s2su3&EI&@khLX%6QI*0K)*;4>\rM2a/?HA2lD&A7K4/4q0V22E3ET+?VJ=3&3Z?4>pb^3''Id61cAr&4s2sE2J+g1+?VS>0kENX4>\uRA3M+u1cI7&4s2sI0f:sT%6QI+2I\im4>\uT@m2"t3&NU+4q0V22`YD4+?VJ>3FtAs4?50/1Hl711cSo!4s2sE3+4U,+?X0o2DSfRAN)d^4>]&Y@m2"t1c[R,4s2sC1LsoX%6QIU0ebd64>^J$0g6^B3G)]14q2(@A7B.k@;]^h%1QldA7KIbE",0/@;ntMD.Oi"F`MM6DKKE''@rrhH6VV!.+Co%qBl7L&ATMd4EarZ''E,T\)ASu#fASu#f%4*;hDIcXVF)Q2A@q?)q,t1U!%0~>'
%
classmethod: Category
cmapAdobe_GB1_UCS2
	"Category class>>#recodeCMapUnicodeMethods generated this method at 17. Mai 2021 um 12:46:53"

	^String fromASCII85: ',p?)`/O<oc@V%,I/heDGATMd4EarZ46VV!.%4*;gDe!p,ASuTbAS#C`A5Zu[Dfp)1ATKmT:i^Ja;e:%n-ppQo8T&6a.1IRL8T&$SF_#&]ATMd4EarZA+Ad)s@oHr\+=KTK6qM91F=@YF,sl0UBl6g[F)Q2A@q@\D6VV!.+=KNdDdm907m\p^<C9\?.1IRL<,$GjANCq^6"FnCAM$D=0eHBm;_fI]A8bpg+@eaQ+>kSW,pcT''EcYr5DE8n"/het9%4*;fDfBuBBkM+$3Zp"+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/Ia!P6Z6phEbT0"F?1O3DfBuBBkM+$+>Gl:0J,%60f^@BA8bpg/g*GrC`mb4B4uC.+ED%7ATDs*A1e<;,suTiH#dV3BQQ9E,pbosE-ZJ<B4uBJ+Auc]BleB:Bju4,Bl@l3@;]TuF`V+:Bl5&7Dfp)1AKYE!A0>>qDIIR2+D,P4D0%6NGA2/4+E)90,pbosE-ZJ<B4uBJ+EqOABQ&$8+Dl%-BkD''h@<?4%DCco=Eb-A4ATDX%FED))+E2@>G%kJuA0>u-@<<W6BOqW!,suTiH#dV3BQQ9XAoDL%Dg,o5B-:]&DIdI''Bl@m1+CT;%+Dk\33XmA]6Z6phEbT0"F?0jW,suTiH#dV3BQQ9X;IsBQF*)G:@Wcd,Df0V=De:,5Dfp)1AKYK$A7Zm#F`VXIEb0?$Bl5&8BOr;p@W-F$%4*;fDfBuBBkM+$3ZqpNE-ZJ<B4uB0DJsW2@q@26FD,B0+Dbb5F<GL6+Cf>-A8-."Df0V=@;]TuFD,5.AoDL%Dg,o5B+6.56Z6phEbT0"F?1OTBldd#@;0RiE\7eI,suTiH#dV3BQQ9E,pbosE-ZJ<B4uBJ+Auc]BleB:Bju4,Bl@m1+DG^9@VK^gEd8d>DfT\;D09oA+ED%4Ec5K2@q?d)BOr;p@W-F$%4*;fDfBuBBkM+$3ZqpNE-ZJ<B4uB0DJsW2@q@26FD,B0+Dbb5F<GL6+Cf>-A8-."Df0V=@;]TuFD,5.AoDL%Dg,o5B+6.56Z6phEbT0"F?1OTBldd#@;0RiEZf(6+EV:.+CoD#F_t]-FCB9*Df-\+DIbD=EZf:BBOu3,D..NtEbSruEt''EA6Z6phEbT0"F?1O`Ec6,8A7]9oGA2/4+EV:.+Co2-FE2))F`_>9DD!%@,pbosE-ZJ<B4uBJ%4*;fDfBuBBkM+$3Zq1/Bln$"EZfI;AKYl!D.Oi.AfsBMDdm9#DJsP<FD,5.DIIBnF!,C5+DGq=+Cf>-FE2))F`_PBEt''EA6Z6phEbT0"F?1O]@<iu)AKZ,:ARlp*D]iV/A8cL0AKYo3+E2@>D/XN-+E2@>A9DC(F!,")EbT].A0>K)Df#q0,suTiH#dV3BQQ9XFD,B0+EMI5FE_/6AKZ22FD,T8F<GXDARfFdBk&9)EbTH4+Eqj?FED)3+E1n4D/"''4Bl@lA%4*;fDfBuBBkM+$3XmA]6Z6phEbT0"F?1OD84c`&;bok^=$]_Q+A#KS:f:(i8OQ!8+@93R<(KG#6VgN];FsAL<$4_-9LM<I;]nA$6k(Fg6Z6phEbT0"F?1O3:JOke8O?EV:Jt+6,!f-M8Q-fU5u''fj5u(Q*79EAa78m,-:Jr<,9i+MT7788"5uLTH:/jeR;_/A(,suTiH#dV3BQQ9X8PVWH<CBDR7k>cL<E()9:K/H18PMcU7787t:FmVf84=Xm9i+MT7788"5uLTH:/jeR;]nk*%4*;fDfBuBBkM+$3Zq-c;F<u@:/jMG8PD]T=Wg"*6m+rj<),k\;]nP*;BS7J:dIuY8OHKO5uJh%<DlXh;ahfp;FM$@,suTiH#dV3BQQ9X6qL<E9L26E778aN8PUC'':EW),78?f);b02J9H[;*73Frn:g$[f7n?T%85DoI78b7(;@Oou6Z6phEbT0"F?1O3:JOke8O?EV:Jt+66:E"j8O5[:73G&q;BS8#=Wg+(;FNrP/0IMZ6qL9F6W>TZ8PVWE6q''jM5tig=,pbosE-ZJ<B4uBJ+B)**6V0R;/0IA`786TP5uLi:+AYlX6VgHU78[&R:/jeN9HZ_h9gM9<;]mJ[:.%]T6qL-D/0I8Z<"1-"6Z6phEbT0"F?1O>:K/H18PMcU7787t:FmVb;GTY[;FO;K:/i?37NbW06;piT<)lmd+@f4''6rP4(;BSn,;H?@V78l8W,pbosE-ZJ<B4uBJ+A>R0;]nk*+B;?//0I>H<''`&X:Jr<3;GTbR<)Yk$:Jr<%<DuIa78m,-8PW5R;GpLk<(Tk\.1IRL6Z6phEbT0"F?1O8:KKtc78b6q5ugiP6m+cj6m,9#+@/b*+B1m#:Jt=<:IZI#8O5[79M&2d/0J"b78ufH;BSP+%4*;fDfBuBBkM+$3Zpdc:/k+W6W>TZ;cHXd6W>1%8O5[79M&2d/0I_d+B2-7<$3S\:.%]T6qL-D+AP?q9M%`C:.%Gm:JqWJ,suTiH#dV3BQQ9X:K0kR;HHFg74B?F;FseY:.HEu:*;ht=Wgd3=WgL?<$4t++B1m#+B;?/+AYHL<(KSZ%4*;fDfBuBBkM+$3Zq?s7T<GT;FN,Z792iP+A#$F5t"aF;aj(s:IZI+84=Xt:K(1`6:jjB<*:>>7NbW06V&=f5tsX874o#q,suTiH#dV3BQQ9X/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/O`,pbutA4(9PD.RU,Et&R36V0[;DJ=2802Q\-@oHr\+D,>*A9)7&Dfp)1AKYGnB5)5m%5BU\A8,Oq+C\npBl4@h@V''1dDI[NlE"*706V0[EH#n(=D+SVWD]ghYA8,Oq+CoV6+C\npBl4A&+>6W(B5)F/Ed8cU6"FnCALSa4AS)Ao+>6N2A7]dqDJ((?6"FnCAR@qo0jdpJ;_fdEA7]?^+<W=9F`;;9ASl!rF<EF`A7]?^ASu$$A7]?^%51(C@;ntMD.OhC6"FnCAM$D=0eHBm;_fJ+AS)B)6VV!.<b6;mBl@l33%cm=1a$=?AdpC\9jr!?H#R=;1*C+=Ado2&=B.p\+BpQC0ea_*2)@$G+>GW+10l#5AS)A\03:kdA7Zl;+Co%q%1P$7@V''1dDI[TqATMg!@qB[hDJ*Mi+<Wd#0JG1E+?W+_7RfQNASu$gDe*F#E+*6fEa`iuAIT)''0JFVYAS5^p@V0+`@<)f>0JG174s1t1AnGXc4q0V.0K(^N+<Wd#0Oct)%6Q<u2DdT?+?V>5@lZ^^4>8HI2*N-*4>8O#2a.[50JGCC4s1t10JHop4q0V.0K(jR+<Wd&0JG:H%6Q<u2E3lC+?VG60Ju$''4>8HI3BeQ.4>JTF1d2@20JGCn4s1t1AnEo34q0V.0K*B(+<Wd%0JPIL%6Q<u2Ieon+?VD7AS++84>8HJAj.=[4>8Hu0g6%/0JGI?4s1t10JI#r4q0V.0K:dN+<Wd#0P37-%6Q<u3&3Z?+?VD71H%E+4>8HK2*N-*4>JZH0g6%/0JGIE4s1t11,:Oq4q0V.0K;!T+<Wd%1,<9%%6Q<u3&j)E+?VD71-%N-4>8HK3BeQ.4>JZG3''Id60JGIp4s1t11,:XE4q0V.0K<N*+<Wd%1,33$%6Q<u3+G,p+?VD7@5U4X4>8HKA3M+Y4>JZI2*MI30JGIt4s1t11,:U=4q0V.0K<Z.+<Wd%1GLXK%6Q<u3A<W>+?VD73B9844>8HL0g6^&4>JZI@Qk5`0JGLB4s1t11,:Ur4q0V.0KCpQ+<Wd%1,^jN%6Q<u3A`oB+?VD71h/]Y4>8HL2*N-*4>JZK3''Id60JGLF4s1t11,:Xr4q0V.0KD''U+<Wd%1,3<''%6Q<u3B02F+?VD72D@<(4>8HLA3M+Y4>JZHANgPc0JGLu4s1t11,:XC4q0V.0KE`/+<Wd%1,CaN%6Q<u@5''kf+?VD;1bq6(4>8Ht0g6^&4>JfO0Koq.0JHoj4s1t10JHri4q0V.0OZh&+<Wd%0ebCI%6Q<u@5^:l+?X7J0Jks&4>8Ht2a/?,4>8Ht1d2@20JHpD4s1t11,(L<4q0V.0O\ES+<Wd#0OZn(%6Q<u@:MJD+?VD60fD3)4>8HtA3M+Y4>JfK2EhR40JHpH4s1t11,^gD4q0V.0O\QW+<Wd%2.L)Z%6Q<u@PBtg+?VD:@qIn64>8Hu0g6^&4>Jd(ANgPc0JHrk4s1t11,WQ#4q0V.0Och%+<Wd%2.JO.%6Q<u@Pg7k+?VD:@50qT4>8Hu2*N-*4>Jd&0Koq.0JHro4s1t11,WMs4q0V.0Oct)+<Wd%2.A=)%6Q<u@Q6Oo+?VD51L`NW4>8Hu3BeQ.4>JWO1-Q.00JHsG4s1t11,1dF4q0V.0OeQV+<Wd&0JP@I%6Q=!0KD<>+?X7JAMlX\4>8KJ1Hlp(4D&2:1Hl710JYFp4s1t1AnE`,4q0V.1,EK*+<Wd&0JG7G%6Q="1M/fn+?VG60JPa#4>8NI1-Qg''4D&1Z0g6%/0JYI@4s1t1AnEc04q0V.1,UsR+<WdYAMZ&)%6Q="2)d]A+?VD51,_<*4>8NK0KpU%4>8TG0g6%/0JYUB4s1t10JkXA4q0V.1-&i.+<Wd#0eb=G%6Q="3Fk;r+?V>3AMH@X4>8NNANh4Z4>8L"ANgPc0JYY#4s1t10JI&l4q0V.11;k#+<Wd#0ekIJ%6Q="@50qg+?V>3AN;p`4>8O!1-Qg''4>8KE@Qk5`0J[&m4s1t10JI&t4q0V.11<"''+<Wd#0f!3%%6Q="@5U4k+?V>3ARmt64>8O!2Ei6+4>8L#0Koq.0J[&q4s1t10JI''J4q0V.11<.++<Wd#0f3E)%6Q="@6$Lo+?V>3AhuU[4>8O!@6PeV4>8L#1-Q.00J[''G4s1t10JI)o4q0V.11=ZV+<Wd#0fEK)%6Q="@:VPE+?V>3Ammk44>8O!ANh4Z4>8L#1d2@20J[''K4s1t10JI*!4q0V.11Dq$+<Wd#0k<1+%6Q="@PL%h+?V>4A2la^4>8O"1-Qg''4>8L#@6P,_0J[)n4s1t10JR*J4q0V.11E((+<Wd#0P4fY%6Q="@Pp=l+?V>3ARRb34>8O"2Ei6+4>8NJ0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b11E1++<Wd$AM[p^%6Q="@Q6Oo+?V>41c.B*4>8O"3BeQ.4>8KH3''Id60J[*G4s1t10JR0"4q0V.11F]V+<Wd#1,^jN%6Q="AMH@k+?X3o@q7b44>8QN@m2"X4>8KD0g6%/0Jb\!4s1t10JI&m4q0V.1H8r0+<Wd#0k4cY%6Q=#3+b>s+?V>3AM?:W4>8QO0KpU%4>8KE1Hl710Jb^D4s1t10JI&u4q0V.1H@3S+<Wd#0em-$%6Q=#3AWiA+?V>3AN2j_4>8QO1d3$)4>8KF@Qk5`0Jb^H4s1t10JI''K4q0V.1H@?W+<Wd#0k;t%%6Q=#3B'',E+?V>3ARdn54>8QO3''JH-4>8KHA3LGb0Jb^L4s1t10JI)p4q0V.1HAl-+<Wd#0k<%''%6Q=#3FY/p+?V>3AhlOZ4>8QO@m2"X4>8KJ@Qk5`0Jb_"4s1t10JI*I4q0V.1HB#1+<Wd#0k<+)%6Q=#3G(Gt+?V>3AiW$a4>8R"0KpU%4>8L#2EhR40Jd,l4s1t10JR)t4q0V.1LW%&+<Wd#0k=]V%6Q=#@5C(i+?V>4A7Ie44>8R"1d3$)4>8I$@m1>a0Jd,p4s1t10JI''H4q0V.1LW1*+<Wd#1,UdM%6Q=#@5g@m+?VAi1M/f[4>8R"3''JH-4>8KH1d2@20Jd,t4s1t10JPCD4q0V.1LX]U+<Wd#0kNF0%6Q=#@:DDC+?V>52DIB)4>8R"@m2"X4>euQ@6P,_0Jd-J4s1t13Ar[*4q0V.1LXiY+<Wd(2e+X-%6Q=#@:h\G+?VP<1,qH,4>8R#0KpU%4>es*ANgPc0Jd/m4s1t12)R''J4q0V.1L`+''+<Wd(1h/4''%6Q=#@P^1j+?VS@3AE],4>8R#1d3$)4?#/T@m1>a0Jd/q4s1t13&NL%4q0V.1L`7++<Wd*2e?Pa%6Q=#@Q-In+?VV=2e>/^4>8R#3''JH-4?#5ZA3LGb0Jd/u4s1t12_m0D4q0V.1LacV+<Wd,2E<`\%6Q=#@U_MD+?VYC3+P2^4>8R#@m2"X4>p\)3''Id60Jd0K4s1t12.AO*4q0V.1LaoZ+<Wd''AnGI8%6Q=#@V.eH+?VP<0KD<+4>8R$0KpU%4>o)X2a.[50Jd2n4s1t12.L)T4q0V.1Li1(+<Wd+0P4`W%6Q=#@l$:k+?VPA1cRZ.4>8R$1d3$)4?,$''ANgPc0Jd2r4s1t12E!6E4q0V.1Li=,+<Wd*2Ig;^%6Q=#@lHRo+?VM9AiW$a4>8R$3''JH-4>o&S2EhR40Jd3!4s1t12_e`N4q0V.1LjiW+<Wd*AnEb]%6Q=#@q%VE+?VVC3&Ef.4>8R$@m2"X4>eg%1-Q.00Jd3L4s1t12*!QP4q0V.1Lju[+<Wd)0k4WU%6Q=#@qInI+?VPo@P^1W4>8R%0KpU%4?,*)A3LGb0Jd5o4s1t12D[1"4q0V.1Lr7)+<Wd)1,UgN%6Q=#A2?Cl+?VM;ARmt64>8R%1d3$)4>erN2a.[50Jd5s4s1t12e"I!4q0V.1LrC-+<Wd(0fEK)%6Q=#A2c[p+?VS?@5L.W4>8R%3''JH-4>gY]1d2@20Jd6"4s1t12DSf"4q0V.1LsoX+<Wd+A7K(4%6Q=#A7@_F+?VYC2`<i/4>8R%@m2"X4>nrS@6P,_0Jd6M4s1t13&!''I4q0V.1Lt&\+<Wd(2`5,0%6Q=#A7e"J+?VYC1H7Q-4>8R&0KpU%4?$k11-Q.00Jd8p4s1t12_m0K4q0V.1M&=*+<Wd*2E,/1%6Q=#AMZLm+?VP@@qIn64>8R&1d3$)4?#/WANgPc0Jd8t4s1t12Dd6K4q0V.1M&I.+<Wd''AiDD-%6Q=#AN)dq+?VVo1,V6)4>8R&3''JH-4>ns*@m1>a0Jd9#4s1t12dnF"4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=#ARRbF+?VP>3AE],4>8R&@QknW4?#''-A3LGb0Jd9M4s1t12Dd1!4q0V.1M()\+<Wd)1,h!Q%6Q=#AS"%J+?VV=11NKW4>8R&Aj.=[4?5A\0g6%/0Jd;p4s1t12E*R,4q0V.1M/@*+<Wd*1,LsS%6Q=#AhlOm+?VP;2J#&]4>8R''1Hlp(4>ns)@m1>a0Jd;t4s1t11hJO#4q0V.1M/L.+<Wd*1hAI,%6Q=#Ai;gq+?VM;1grQW4>8R''2a/?,4>elSANgPc0Jd<#4s1t12e?K-4q0V.1M/X2+<Wd,0OZk''%6Q=#AmmkG+?VMm11`WY4>8R''@QknW4>o/Y2EhR40Jd<N4s1t12E<d-4q0V.1M1/]+<Wd+0fUjN%6Q=#An=.K+?VSoA2-7W4>8R''Aj.=[4>o001-Q.00JkI;4s1t12`P;)4q0V.1b^XJ+<Wd+2E521%6Q=$0JYg7+?VYA2).9(4>8TG1Hlp(4>efPA3LGb0JkI?4s1t13+F^#4q0V.1b^dN+<Wd+11Xr[%6Q=$0K)*;+?VV;A7[q64>8TG2a/?,4>eoK2*MI30JkIC4s1t13&r]K4q0V.1b^pR+<Wd(1,_!R%6Q=$0O[-f+?VV@3&Ef.4>8TG@QknW4?5<33Bdm70JkIn4s1t11hL9/4q0V.1b`H(+<Wd(3&33P%6Q=$0P*Ej+?VYE2_dK*4>8TGAj.=[4>gS.A3LGb0JkL<4s1t12DS_r4q0V.1bg^K+<Wd)11<%(%6Q=$0etp8+?VP?@Pg7X4>8TH1Hlp(4?-h03Bdm70JkL@4s1t13Fb$Z4q0V.1bgjO+<Wd*1,(UM%6Q=$0fD3<+?VP@2J,,^4>8TH2a/?,4?#5[0g6%/0JkLD4s1t12DASq4q0V.1bh!S+<Wd(1GpmN%6Q=$0k!6g+?VM;0fM9*4>8TH@QknW4?-q43''Id60JkLo4s1t13&"iP4q0V.1biN)+<Wd+A2.UY%6Q=$0kENk+?VY@@50qT4>8THAj.=[4>efHA3LGb0JkO=4s1t12_nl&4q0V.1bpdL+<Wd(3A<BU%6Q=$1,;$9+?VP9AR[h44>8TI1Hlp(4?"uL3Bdm70JkOA4s1t13&k>U4q0V.1bppP+<Wd(3AiWW%6Q=$1,_<=+?VV=AS++84>8TI2a/?,4>o,R@m1>a0JkOE4s1t12e"O%4q0V.1bq''T+<Wd(A26//%6Q=$11<?h+?VSoAiDm_4>8TI@QknW4?#,QA3LGb0JkOp4s1t12Ig>V4q0V.1brT*+<Wd+AMuG1%6Q=$11`Wl+?VVqAiMs`4>8TIAj.=[4?5)O@m1>a0JkR>4s1t13G(''V4q0V.1c$jM+<Wd)@Uq;Z%6Q=$1GV-:+?VY=0f_E,4>8TJ1Hlp(4?$_(1d2@20JkRB4s1t12.edW4q0V.1c%!Q+<Wd*3+4a0%6Q=$1H%E>+?VV?A2ZU\4>8TJ2a/?,4?,2SA3LGb0JkRF4s1t12I^2S4q0V.1c%-U+<Wd)@UqJ_%6Q=$1LWHi+?VPkA2ZU\4>8TJ@QknW4>g\(0g6%/0JkRq4s1t12.\a+4q0V.1c&Z++<Wd*2.ej4%6Q=$1M&`m+?VYAARmt64>8TJAj.=[4>o&SA3LGb0JkU?4s1t12.eON4q0V.1c-pN+<Wd(An*\^%6Q=$1bq6;+?VVq3G(Ga4>8TK1Hlp(4>f*.0g6%/0JkUC4s1t13&+nu4q0V.1c.''R+<Wd,0K3T-%6Q=$1c@N?+?VYB2.A`Y4>8TK2a/?,4?5?/A3LGb0JkUG4s1t13+cV[4q0V.1c.3V+<Wd*Ahc2-%6Q=$1grQj+?VVo11NKW4>8TK@QknW4>nrO0g6%/0JkUr4s1t11hL3/4q0V.1c/`,+<Wd(1LrI/%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8TKANh4Z4>eoPANgPc0JkXA4s1t13+cT.4q0V.1c7$P+<Wd,0Jm<(%6Q=$2)@E=+?VPA0K20)4>8TL1d3$)4>g_/@6P,_0JkXE4s1t13&*EQ4q0V.1c70T+<Wd+3&W`[%6Q=$2)d]A+?VYoA2ZU\4>8TL3''JH-4>noR@Qk5`0JkXI4s1t12)6pr4q0V.1c8]*+<Wd*2DS])%6Q=$2.A`l+?VMn2Ieo[4>8TL@m2"X4>o&V@m1>a0JkXt4s1t12J-JT4q0V.1c8i.+<Wd)AS!hb%6Q=$2.f#p+?VMj@V%_44>8TM0KpU%4>o#Q3''Id60Jk[B4s1t12).$I4q0V.1c@*Q+<Wd(0k)h#%6Q=$2D[N>+?VP@@l-@Y4>8TM1d3$)4>^V(3Bdm70Jk[F4s1t12`YA.4q0V.1c@6U+<Wd,3B(G3%6Q=$2E*fB+?VS:@P^1W4>8TM3''JH-4?#--2*MI30Jk[J4s1t12.\^)4q0V.1cAc++<Wd*1LafW%6Q=$2I\im+?VV>AM?:W4>8TM@m2"X4>o$)A3LGb0Jk[u4s1t12DSi''4q0V.1cAo/+<Wd,1h&=+%6Q=$2J,,q+?VPlAMQFY4>8TN0KpU%4>eoP@6P,_0Jk^C4s1t12)8Yt4q0V.1cI0R+<Wd)1b`N*%6Q=$2`!W?+?VY@@kp4W4>8TN1d3$)4?$_01d2@20Jk^G4s1t11hJLT4q0V.1cI<V+<Wd(AMIXX%6Q=$2`EoC+?VV=1H%E+4>8TN3''JH-4?,&M2EhR40Jk^K4s1t13&*C$4q0V.1cJi,+<Wd)AMQ)+%6Q=$2e"rn+?VPl@pqP14>8TN@m2"X4?6h/1Hl710Jk_!4s1t12D[3J4q0V.1cJu0+<Wd(1GrZ+%6Q=$2eG5r+?VM<Ammk44>8TO0KpU%4?,;Y2*MI30JkaD4s1t12)f)#4q0V.1cR6S+<Wd''AM@XY%6Q=$3&<`@+?VMm0Jbm%4>8TO1d3$)4>pY,2*MI30JkaH4s1t12e+XU4q0V.1cRBW+<Wd,0P*4-%6Q=$3&a#D+?VP90fD3)4>8TO3''JH-4>o$-2EhR40JkaL4s1t12`!0u4q0V.1cSo-+<Wd+3+F[,%6Q=$3+>&o+?VP@2)%3''4>8TO@m2"X4>nrOA3LGb0Jkb"4s1t13+Od"4q0V.1cT&1+<Wd*2`>/0%6Q=$3+b>s+?VVp1-%N-4>8TP0KpU%4?5-+2a.[50JkdE4s1t12.ea,4q0V.1c[<T+<Wd+1LsuZ%6Q=$3AWiA+?VV@1,1s%4>8TP1d3$)4?5DV0Koq.0JkdI4s1t12)A_t4q0V.1c[HX+<Wd+2E<WY%6Q=$3B'',E+?VPk3+>&\4>8TP3''JH-4>nm)A3LGb0JkdM4s1t12DA]%4q0V.1c\u.+<Wd*0K3T-%6Q=$3FY/p+?VV=@q7b44>8TP@m2"X4?,)P0g6%/0Jke#4s1t11hC2R4q0V.1c],2+<Wd)@pq;[%6Q=$3G(Gt+?VV@@qIn64>8U#0KpU%4>o$+A3LGb0Jm2m4s1t12e-AY4q0V.1gr.''+<Wd)3G)ec%6Q=$@5C(i+?VP?AiW$a4>8U#1d3$)4?,,R3Bdm70Jm2q4s1t12)@6M4q0V.1gr:++<Wd*@Pp&-%6Q=$@5g@m+?VJm@5g@Z4>8U#3''JH-4>eiQ@m1>a0Jm2u4s1t12InXR4q0V.1gsfV+<Wd(@l,r)%6Q=$@:DDC+?VVp2Inu\4>8U#@m2"X4>o!+1-Q.00Jm3K4s1t12)A`&4q0V.1gsrZ+<Wd+1GWH(%6Q=$@:h\G+?VV>1H%E+4>8U$0KpU%4>o-02*MI30Jm5n4s1t12`P8''4q0V.1h&4(+<Wd)1c&Z+%6Q=$@P^1j+?VMjA7e"7ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0Jm5q4s1t12.JX''4q0V.1h&=++<Wd(A7]=9%6Q=$@Q$Cm+?VVmAN)d^4>8U$2a/?,4>ns)2EhR40Jm5u4s1t12E,5)4q0V.1h&I/+<Wd+@lIg[%6Q=$@UVGC+?VP=0JG["4>8U$@QknW4>o!)@6P,_0Jm6K4s1t13&`ZS4q0V.1h''uZ+<Wd,3B1J3%6Q=$@V%_G+?VVn0fM9*4>8U$Aj.=[4?$k-0Koq.0Jm8n4s1t13Ab>''4q0V.1h/7(+<Wd''ARRM]%6Q=$@kp4j+?VYB0ebd#4>8U%1Hlp(4?5B01d2@20Jm8r4s1t12E!7!4q0V.1h/C,+<Wd*1GLdO%6Q=$@l?Ln+?VM?1LWHV4>8U%2a/?,4>gV''A3LGb0Jm9!4s1t12.\R''4q0V.1h/O0+<Wd,2)f,2%6Q=$@pqPD+?VM82eG5_4>8U%@QknW4?,$''0Koq.0Jm9L4s1t12)@3I4q0V.1h1&[+<Wd)2)Sr/%6Q=$@q@hH+?VS?1c7H+4>8U%Aj.=[4>euP0g6%/0Jm;o4s1t12)$d?4q0V.1h8=)+<Wd+A2lG1%6Q=$A26=k+?VP;3&Ef.4>8U&1Hlp(4?55YANgPc0Jm;s4s1t12E*@$4q0V.1h8I-+<Wd(2D[*P%6Q=$A2ZUo+?VPo2J#&]4>8U&2a/?,4>gY\1-Q.00Jm<"4s1t12)I*H4q0V.1h8U1+<Wd*0KCmP%6Q=$A77YE+?VVq2E!`.4>8U&@QknW4>nrQAj-Yd0Jm<M4s1t12Dei!4q0V.1h:,\+<Wd)1LW(''%6Q=$A7[qI+?VMn2e"r[4>8U&Aj.=[4>pe23''Id60Jm>p4s1t13A>&%4q0V.1hAC*+<Wd+0kE.)%6Q=$AMQFl+?VVq@PBtT4>8U''1Hlp(4>gV''3''Id60Jm>t4s1t12E!HQ4q0V.1hAO.+<Wd(AnEb]%6Q=$AMu^p+?VPl3&s/34>8U''2a/?,4?5;V3''Id60Jm?#4s1t13+P!''4q0V.1hA[2+<Wd+3&Y81%6Q=$ARRbF+?VP=3AE],4>8U''@QknW4?#940Koq.0Jm?N4s1t12)f#V4q0V.1hC2]+<Wd)@5U&/%6Q=$AS"%J+?VP;0ebd#4>8U''Aj.=[4>erP3''Id60JmAq4s1t11hAO(4q0V.1hJI++<Wd*@5).S%6Q=$AhlOm+?VP9AN;p`4>8U(1Hlp(4>pe21d2@20JmAu4s1t13+?E,4q0V.1hJU/+<Wd)1,if/%6Q=$Ai;gq+?VY<0kENX4>8U(2a/?,4?6h0@Qk5`0JmB$4s1t12`YG+4q0V.1hJa3+<Wd(1b^^L%6Q=$AmmkG+?VS?Ai)[\4>8U(@QknW4>nuL0g6%/0JmBO4s1t12)?sI4q0V.1hL8^+<Wd)@l?#)%6Q=$An=.K+?VVqA7e"74>8U(Aj.=[4>g_*@Qk5`0JtO<4s1t13FOj#4q0V.2)$aK+<Wd+0Jd0%%6Q=%0JYg7+?VYr2eG5_4>8WH1Hlp(4>^Y03''Id60JtO@4s1t12.JFN4q0V.2)$mO+<Wd+A2Z8.%6Q=%0K)*;+?VSp@l6FZ4>8WH2a/?,4>o''*2*MI30JtOD4s1t12_\]O4q0V.2)%$S+<Wd(0f1aO%6Q=%0O[-f+?VM9@PU+V4>8WH@QknW4?,5W@Qk5`0JtOo4s1t12.SC"4q0V.2)&Q)+<Wd(@UUrS%6Q=%0P*Ej+?VP;@UqY34>8WHAj.=[4?5,S@m1>a0JtR=4s1t12`3NN4q0V.2)-gL+<Wd+AM@UX%6Q=%0etp8+?VSk1,(m$4>8WI1Hlp(4>noJ0g6%/0JtRA4s1t12e"^+4q0V.2)-sP+<Wd''ARdY_%6Q=%0fD3<+?VSoAiMs`4>8WI2a/?,4?#2Y2*MI\DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b2).''S+<Wd''AMGo''%6Q=%0f_E?+?VV<ARmt64>8WI@6PeV4>elKA3LGb0JtRo4s1t12)/]O4q0V.2)/T)+<Wd)@5fo)%6Q=%0k<Hj+?VM;@5pF[4>8WIANh4Z4?-n32a.[50JtRs4s1t13AiKI4q0V.2)6jL+<Wd,2Ig>_%6Q=%1,1s8+?VPn@kg.V4>8WJ1-Qg''4?5;X1d2@20JtUA4s1t12E<X''4q0V.2)7!P+<Wd*3&E<Q%6Q=%1,V6<+?VM8@5pF[4>8WJ2Ei6+4?#302a.[50JtUE4s1t12Dd-B4q0V.2)7-T+<Wd+3Ft*4%6Q=%1-%N@+?VMA0Jks&4>8WJ@6PeV4>o!,1Hl710JtUp4s1t12.U6.4q0V.2)8Z*+<Wd*@5hd^%6Q=%11WQk+?VPB1LrZY4>8WJANh4Z4>^Y*0Koq.0JtUt4s1t13&39M4q0V.2)?pM+<Wd(2*!W[%6Q=%1GM''9+?VJl1GV-''4>8WK1-Qg''4?#-+ANgPc0JtXB4s1t12dn^*4q0V.2)@''Q+<Wd(AMu;-%6Q=%1Gq?=+?VMm3+4u[4>8WK2Ei6+4?591Aj-Yd0JtXF4s1t12)6mq4q0V.2)@3U+<Wd(1c%-U%6Q=%1H@WA+?VS:3+4u[4>8WK@6PeV4>nuS2EhR40JtXq4s1t13AiQK4q0V.2)A`++<Wd(2`NQV%6Q=%1LrZl+?VP?1,V6)4>8WKANh4Z4>o2UAj-Yd0JtXu4s1t13AEKP4q0V.2)I!N+<Wd(2)$sQ%6Q=%1bh0:+?VPmAhuU[4>8WL1-Qg''4?$h[Aj-Yd0Jt[C4s1t13&iZK4q0V.2)I-R+<Wd)1,C^M%6Q=%1c7H>+?VSoAhZCX4>8WL2Ei6+4?#-,2*MI30Jt[G4s1t13&<<L4q0V.2)I9V+<Wd*3+F[,%6Q=%1c[`B+?VYB@q.\34>8WL@6PeV4?-q5ANgPc0Jt[r4s1t12DI$J4q0V.2)Jf,+<Wd*1hJ[1%6Q=%1h8cm+?VVm@q7b44>8WLANh4Z4>pY,1d2@20Jt\!4s1t12)6sr4q0V.2)R''O+<Wd+A2Q&)%6Q=%2).9;+?VPk1,1s%4>8WM1-Qg''4?,#Q@6P,_0Jt^D4s1t13&EQK4q0V.2)R3S+<Wd(2J+[-%6Q=%2)RQ?+?VM;0K)*(4>8WM2Ei6+4>^VZANgPc0Jt^H4s1t11hACN4q0V.2)R?W+<Wd(0k<"&%6Q=%2*!iC+?VSm3B'',24>8WM@6PeV4?5,U@Qk5`0Jt^s4s1t12e+O#4q0V.2)Sl-+<Wd''An*V\%6Q=%2.Sln+?VVp2eG5_4>8WMANh4Z4?$_\0g6%/0Jt_"4s1t12dn^V4q0V.2)[-P+<Wd)1c@9V%6Q=%2DIB<+?VMl0f2''''4>8WN1-Qg''4>eg$@m1>a0JtaE4s1t13&**F4q0V.2)[9T+<Wd*2D?jL%6Q=%2DmZ@+?VSm@Q?U]4>8WN2Ei6+4>p_]@m1>a0JtaI4s1t12eHVT4q0V.2)[EX+<Wd)2`3<R%6Q=%2E<rD+?VMj2)mc/4>8WN@6PeV4>gS[3''Id60Jtat4s1t12`P;V4q0V.2)\r.+<Wd)1gsrZ%6Q=%2Inuo+?VP=0f)!&4>8WNANh4Z4>o!(@6P,_0Jtb#4s1t12D[*t4q0V.2)d3Q+<Wd,2).*T%6Q=%2_dK=+?VP=11WQX4>8WO1-Qg''4?-q^ANgPc0JtdF4s1t12e"X$4q0V.2)d?U+<Wd*2DR9V%6Q=%2`3cA+?VP;2)@E*4>8WO2Ei6+4>f,S2a.[50JtdJ4s1t12)I-J4q0V.2)dKY+<Wd)@Q-;2%6Q=%2`X&E+?VM8@5C(V4>8WO@6PeV4>nrN1d2@20Jtdu4s1t12.\O$4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=%2e,#o+?VPk3&Wr04>8WOA3M+Y4>^V\1Hl710Jte#4s1t13+Og(4q0V.2)f,2+<Wd+3&kA2%6Q=%3&!N=+?VMn3&Nl/4>8WP0g6^&4?5)NANgPc0JtgF4s1t12D?m?4q0V.2)mBU+<Wd+0Jd6''%6Q=%3&EfA+?VP;@l6FZ4>8WP2*N-*4>^V*3Bdm70JtgJ4s1t12)@*I4q0V.2)mNY+<Wd,0P3:.%6Q=%3&j)E+?VP<@Q6O\4>8WP3BeQ.4?,$)2EhR40Jtgu4s1t12Do&(4q0V.2)o&/+<Wd)@kqUZ%6Q=%3+G,p+?VJm1c@N,4>8WPA3M+Y4>nm)ANgPc0Jth$4s1t12IpAR4q0V.2)o23+<Wd+@Us%6%6Q=%3A<W>+?VMn1H@W.4>8WQ0g6^&4?,6/@Qk5`0JtjG4s1t12.e^%4q0V.2*!HV+<Wd)1GU[K%6Q=%3A`oB+?VM92.8ZX4>8WQ2*N-*4?,,T0g6%/0JtjK4s1t12E3TN4q0V.2*!TZ+<Wd(1,(CG%6Q=%3B02F+?VP<2D[N+4>8WQ3BeQ.4?-n/3''Id60Jtk!4s1t12)$a?4q0V.2*#,0+<Wd(@l\!^%6Q=%3Fb5q+?VSC2`Eo04>8WQA3M+Y4>gS[@m1>a0Jtk%4s1t12)6sA4q0V.2*#84+<Wd*@5D@V%6Q=%@5''kf+?VP9@UhS24>8X$0g6^&4?5)Q1Hl710K!8o4s1t12`>2*4q0V.2.8:)+<Wd(An!\_%6Q=%@5L.j+?VMn3B'',24>8X$2*N-*4?#/X1d2@20K!8s4s1t13+Y!X4q0V.2.8F-+<Wd*0K*N,%6Q=%@5pFn+?VS@2e"r[4>8X$3BeQ.4?$_+3Bdm70K!9I4s1t12`G/R4q0V.2.9rX+<Wd(0kN4*%6Q=%@:MJD+?VY<3AWi.4>8X$A3M+Y4>f)R1d2@20K!9M4s1t11hJRU4q0V.2.:)\+<Wd)AS*b_%6Q=%@PBtg+?VVqARRb34>8X%0g6^&4>o&R@m1>a0K!;p4s1t12e"LN4q0V.2.A@*+<Wd*11N.)%6Q=%@Pg7k+?VPm@5L.W4>8X%2*N-*4?$k_Aj-Yd0K!;t4s1t12.:&N4q0V.2.AL.+<Wd)11E+)%6Q=%@Q6Oo+?VMm3Aiu04>8X%3BeQ.4>f&R0Koq.0K!<J4s1t13&ETM4q0V.2.C#Y+<Wd*@PVFW%6Q=%@UhSE+?VMm0k<HW4>8X%A3M+Y4>g_*Aj-Yd0K!<N4s1t13A<0C4q0V.2.C/]+<Wd*Ahc,+%6Q=%@k^(h+?VYD@5''kS4>8X&0g6^&4>nuT1-Q.00K!>q4s1t12J$AW4q0V.2.JF++<Wd*3&rr^%6Q=%@l-@l+?VS:@Q?U]4>8X&2*N-*4>eiP3''Id60K!>u4s1t13B&g)4q0V.2.JR/+<Wd(2dp/Z%6Q=%@lQXp+?VS?1Gq?*4>8X&3BeQ.4>^Y,1Hl710K!?K4s1t12`3BN4q0V.2.L)Z+<Wd(AN;\5%6Q=%@q.\F+?VP9AMu^]4>8X&A3M+Y4>f,W0Koq.0K!?O4s1t12Ip;O4q0V.2.L5^+<Wd)@U`q5%6Q=%A2$1i+?VSB3&s/34>8X''0g6^&4>ep,@m1>a0K!Ar4s1t13AtD*4q0V.2.SL,+<Wd(0k4ZV%6Q=%A2HIm+?VM:0JPa#4>8X''2*N-*4>nuT3Bdm70K!B!4s1t12)I!q4q0V.2.SX0+<Wd,1c[?U%6Q=%A2laq+?VVn0Jbm%4>8X''3BeQ.4?-k]@m1>a0K!BL4s1t12_m0L4q0V.2.U/[+<Wd*3&tS7%6Q=%A7IeG+?VVB2`<i/4>8X''A3M+Y4?-qaA3LGb0K!BP4s1t13+FXQ4q0V.2.U;_+<Wd(1M&7(%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8X(0KpU%4>^V''0g6%/0K!Dr4s1t12`>5Z4q0V.2.\O,+<Wd(1M(,]%6Q=%AMZLm+?VY@3&s/34>8X(1d3$)4?5A[2EhR40K!E!4s1t13G''sV4q0V.2.\[0+<Wd,2)8]+%6Q=%AN)dq+?VMj3FP)\4>8X(3''JH-4?-eY1-Q.00K!E%4s1t11hAEt4q0V.2.^2[+<Wd''AMI[Y%6Q=%AR[hG+?VM9@:MJ14>8X(@m2"X4?,/U1Hl710K!EP4s1t12DJ\s4q0V.2.^>_+<Wd(11<.+%6Q=%AS++K+?VPA0Od3T4>8X)0KpU%4>^Y12a.[50K!Gs4s1t12D@$u4q0V.2.eU-+<Wd(0k+TU%6Q=%AhuUn+?VPm0kENX4>8X)1d3$)4>eiN@m1>a0K!H"4s1t12DR9N4q0V.2.ea1+<Wd)2*!TZ%6Q=%AiDmr+?VYB2DIB)4>8X)3''JH-4?-h-2EhR40K!H&4s1t13A<0H4q0V.2.g8\+<Wd*2.S[1%6Q=%An!qH+?VY<An4(74>8X)@m2"X4?#2W1Hl710K!HQ4s1t12I^2P4q0V.2.gD`+<Wd*1,r]+%6Q=%AnF4L+?VS<ARdn54>8ZI0KpU%4?-e^@Qk5`0K(U>4s1t12)mBL4q0V.2D?mM+<Wd*2`E`\%6Q=&0Jbm8+?VVo1h/]Y4>8ZI1d3$)4>o,U@m1>a0K(UB4s1t13AiWI4q0V.2D@$Q+<Wd+0KEQ*%6Q=&0K20<+?VMm@5^:Y4>8ZI3''JH-4>pb+0g6%/0K(UF4s1t12*!ZP4q0V.2DAQ''+<Wd*@:a%7%6Q=&0Od3g+?VSAARmt64>8ZI@m2"X4?58T@Qk5`0K(Uq4s1t12I^,Q4q0V.2DA]++<Wd)2.:#Z%6Q=&0P3Kk+?VSp0P*EW4>8ZJ0KpU%4>f)P2EhR40K(X?4s1t12)-sC4q0V.2DHsN+<Wd,2DJf-%6Q=&0f)!9+?VMjAiW$a4>8ZJ1d3$)4>f*,3Bdm70K(XC4s1t12)I''J4q0V.2DI*R+<Wd+AN)A.%6Q=&0fM9=+?VP>2E!`.4>8ZJ3''JH-4?5A[Aj-Yd0K(XG4s1t12)]#&4q0V.2DJW(+<Wd,1c])1%6Q=&0k*<h+?VS@An=.84>8ZJ@m2"X4?5)P0g6%/0K(Xr4s1t12D[<O4q0V.2DJc,+<Wd(1h/F-%6Q=&0kNTl+?VMA0k!6T4>8ZK0KpU%4>f,T@6P,_0K([@4s1t12)dO)4q0V.2DR$O+<Wd+AR[DY%6Q=&1,D*:+?VP@1Gq?*4>8ZK1d3$)4?-k`@6P,_0K([D4s1t13&39I4q0V.2DR0S+<Wd(1,L^L%6Q=&1,hB>+?VP9AhZCX4>8ZK3''JH-4>f)Q2*MI30K([H4s1t13&YA[4q0V.2DS])+<Wd(@q@V`%6Q=&11EEi+?VYq1c7H+4>8ZK@m2"X4>^Y[1d2@20K([s4s1t13B0$04q0V.2DSi-+<Wd+@U_>]%6Q=&11i]m+?VMi1,V6)4>8ZL0KpU%4>nlP2EhR40K(^A4s1t12)@3K4q0V.2D[*P+<Wd)1,i],%6Q=&1G_3;+?VY<1hJo\4>8ZL1d3$)4?5,M1-Q.00K(^E4s1t13B9$14q0V.2D[6T+<Wd)0K(pT%6Q=&1H.K?+?VV;0Om9U4>8ZL3''JH-4>eiLAj-Yd0K(^I4s1t13&!-E4q0V.2D\c*+<Wd(@kff(%6Q=&1L`Nj+?VYE2`3c.4>8ZL@m2"X4>p_+0g6%/0K(^t4s1t11hAXV4q0V.2D\o.+<Wd+A2>o''%6Q=&1M/fn+?VM;A2-7W4>8ZM0KpU%4?$k0@6P,_0K(aB4s1t12e"UU4q0V.2Dd0Q+<Wd''Ahbu''%6Q=&1c%<<+?VJl1hJo\ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0K(aE4s1t13ArQF4q0V.2Dd9T+<Wd)@q7G\%6Q=&1c@N?+?VS=A2$1V4>8ZM2a/?,4?,303Bdm70K(aI4s1t12.\I"4q0V.2DdEX+<Wd*2)\l,%6Q=&1grQj+?VSpAn!q54>8ZM@QknW4>pV%@6P,_0K(at4s1t12`G>[4q0V.2Der.+<Wd,1c[<T%6Q=&1hAin+?VSo1bh0''4>8ZMAj.=[4>ej)0g6%/0K(dB4s1t12_\f$4q0V.2Dm3Q+<Wd(1LjrZ%6Q=&2)7?<+?VVqA2HIZ4>8ZN1Hlp(4?,,N1Hl710K(dF4s1t13+Od)4q0V.2Dm?U+<Wd*11=cY%6Q=&2)[W@+?VYE2Inu\4>8ZN2a/?,4>p\[@Qk5`0K(dJ4s1t12)d@#4q0V.2DmKY+<Wd+11E%''%6Q=&2.8Zk+?VP>@Q?U]4>8ZN@QknW4?,$''@6P,_0K(du4s1t12DR(#4q0V.2Do#/+<Wd,2D[*P%6Q=&2.\ro+?VMA@5pF[4>8ZNAj.=[4>^V]Aj-Yd0K(gC4s1t13+??/4q0V.2E!9R+<Wd*AR](3%6Q=&2DRH=+?VP>1M&`Z4>8ZO1Hlp(4?,-/1-Q.00K(gG4s1t13B&g,4q0V.2E!EV+<Wd(2)[0Q%6Q=&2E!`A+?VYDA7[q64>8ZO2a/?,4?,$''2*MI30K(gK4s1t12)@!r4q0V.2E!QZ+<Wd+@V0.7%6Q=&2IScl+?VM<1,(m$4>8ZO@QknW4?,$(@6P,_0K(h!4s1t12.\d[4q0V.2E#)0+<Wd)@q%D]%6Q=&2J#&p+?VVo1H@W.4>8ZOAj.=[4?,*)@m1>a0K(jD4s1t13AEC"4q0V.2E*?S+<Wd(1bq''T%6Q=&2_mQ>+?VPl0k*<U4>8ZP1Hlp(4>elJ2EhR40K(jH4s1t12e?GW4q0V.2E*KW+<Wd(2`522%6Q=&2`<iB+?VS;0k!6T4>8ZP2a/?,4>p\.ANgPc0K(jL4s1t12e+g-4q0V.2E*W[+<Wd(3Ab2/%6Q=&2dnlm+?VJlAn4(74>8ZP@QknW4>g__Aj-Yd0K(k"4s1t12DHsD4q0V.2E,/1+<Wd*@pre0%6Q=&2e>/q+?VJl1GD!%4>8ZPAj.=[4>gV&0g6%/0K(mE4s1t12E,&R4q0V.2E3ET+<Wd+2_[!N%6Q=&3&3Z?+?VMkAhZCX4>8ZQ1Hlp(4?58Q@Qk5`0K(mI4s1t13B1M[4q0V.2E3QX+<Wd*2.:)\%6Q=&3&WrC+?VS:An4(74>8ZQ2a/?,4?5)N1-Q.00K(mM4s1t12)/NO4q0V.2E3]\+<Wd*Ahdg[%6Q=&3+4un+?VVm@UqY34>8ZQ@QknW4>f,U3Bdm70K(n#4s1t12)/Z!4q0V.2E552+<Wd''Ai4$]%6Q=&3+Y8r+?VM<1,_<*4>8ZQAj.=[4>f,S@Qk5`0K(pF4s1t12DmEP4q0V.2E<KU+<Wd+0OZe%%6Q=&3ANc@+?VMj2`3c.4>8ZR1Hlp(4>nrR2EhR40K(pJ4s1t12DSbt4q0V.2E<WY+<Wd+AiVP/%6Q=&3As&D+?VMm1c7H+4>8ZR2a/?,4>p\(Aj-Yd0K(pN4s1t12e"O#4q0V.2E<c]+<Wd''Ah[g\%6Q=&3FP)o+?VJmA2la^4>8ZR@QknW4>o,PA3LGb0K(q$4s1t12In^W4q0V.2E>;3+<Wd)A78n1%6Q=&3FtAs+?VSC3+b>`4>8ZRAj.=[4?,<00g6%/0K*>n4s1t12.eR%4q0V.2IS=(+<Wd*2)8W)%6Q=&@5:"h+?VP;3FP)\4>8[%1Hlp(4?-q42*MI30K*>r4s1t11hL<24q0V.2ISI,+<Wd,0k=cX%6Q=&@5^:l+?VP>@5g@Z4>8[%2a/?,4?,&NAj-Z8DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b2ISR/+<Wd+0f:[L%6Q=&@6$Lo+?VMm3Fb5^4>8[%@6PeV4?,&Q0Koq.0K*?K4s1t13+Os)4q0V.2IU)Z+<Wd(1,``.%6Q=&@:VPE+?VVD3&Wr04>8[%ANh4Z4?-k.@Qk5`0K*?O4s1t12*!@$4q0V.2I\@(+<Wd(0K:pR%6Q=&@PL%h+?VJlA2la^4>8[&1-Qg''4?5;S@m1>a0K*Ar4s1t12_m0I4q0V.2I\L,+<Wd+0fM*V%6Q=&@Pp=l+?VVo0kNTY4>8[&2Ei6+4>gSX@m1>a0K*B!4s1t13+?;P4q0V.2I\X0+<Wd,2Dd6S%6Q=&@Q?Up+?VMA3&a#14>8[&@6PeV4?$k,@6P,_0K*BL4s1t12)I<I4q0V.2I^/[+<Wd(2E*NX%6Q=&@UqYF+?VM>0P*EW4>8[&ANh4Z4?-e]2*MI30K*BP4s1t12Dm9N4q0V.2IeF)+<Wd)3B/cX%6Q=&@kg.i+?VY@3B9844>8[''1-Qg''4?#0/2EhR40K*Ds4s1t12J"j.4q0V.2IeR-+<Wd(AN)A.%6Q=&@l6Fm+?VS?0fV?+4>8[''2Ei6+4>o,T2EhR40K*E"4s1t12E,/$4q0V.2Ie^1+<Wd*@:j+8%6Q=&@lZ^q+?VV;3Fk;_4>8[''@6PeV4?-k12EhR40K*EM4s1t12DHpu4q0V.2Ig5\+<Wd*3Fas2%6Q=&@q7bG+?VP>2DRH*4>8[''ANh4Z4?-k01Hl710K*EQ4s1t12).''M4q0V.2InL*+<Wd(1,33$%6Q=&A2-7j+?VY@@5:"U4>8[(1-Qg''4?$k.3''Id60K*Gt4s1t13&!@%4q0V.2InX.+<Wd*AR[DY%6Q=&A2QOn+?VMk3B'',24>8[(2Ei6+4>pb+Aj-Yd0K*H#4s1t12E*NJ4q0V.2Ind2+<Wd*@UqJ_%6Q=&A2ugr+?VS@3+>&\4>8[(@6PeV4?6h\3''Id60K*HN4s1t13&*C)4q0V.2Ip;]+<Wd*AiV\3%6Q=&A7RkH+?VSmA2QO[4>8[(ANh4Z4>o#NANgPc0K*HR4s1t13AiZJ4q0V.2J"R++<Wd*@5DLZ%6Q=&AMH@k+?VM<1grQW4>8[)1-Qg''4>es,2*MI30K*Ju4s1t12I\LQ4q0V.2J"^/+<Wd)1b^XJ%6Q=&AMlXo+?VP;0K;6*4>8[)2Ei6+4?6t/A3LGb0K*K$4s1t13&"r#4q0V.2J"j3+<Wd*2*!Z\%6Q=&AN;ps+?VM:2_mQ+4>8[)@6PeV4?5>Y3Bdm70K*KO4s1t13&EL%4q0V.2J$A^+<Wd)3&>&.%6Q=&ARmtI+?VVAAMcR[4>8[)ANh4Z4?5;R0g6%/0K*KS4s1t13ArlS4q0V.2J+X,+<Wd,1hC/\%6Q=&AhcIl+?VJl11<?U4>8[*1-Qg''4>erL1d2@20K*N!4s1t12e?M[4q0V.2J+d0+<Wd)3&<QY%6Q=&Ai2ap+?VVoA7e"74>8[*2Ei6+4?,#L2*MI30K*N%4s1t12E#/(4q0V.2J+p4+<Wd(AN=0_%6Q=&AiW$t+?VSp@Q?U]4>8[*@6PeV4>f''-1-Q.00K*NP4s1t13&!.#4q0V.2J-G_+<Wd)3&ro]%6Q=&An4(J+?VMlAMlX\4>8[*ANh4Z4>o&Q@Qk5`0K*NT4s1t12)71(4q0V.2_ZpL+<Wd)0K*H*%6Q=''0JPa6+?VYr3FP)\4>8]J1-Qg''4>^Y1@Qk5`0K1[A4s1t13+ZN.4q0V.2_[''P+<Wd(0fEN*%6Q=''0Ju$:+?VMj@:DD04>8]J2Ei6+4>g_*1Hl710K1[E4s1t12.U8Y4q0V.2_[3T+<Wd)@l7g]%6Q=''0KD<>+?VP;AhcIY4>8]J@6PeV4?-k,0g6%/0K1[p4s1t12).$E4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=''0Om9h+?VY@@6$L\4>8]JA3M+Y4>em+ANgPc0K1[s4s1t12IeaZ4q0V.2_\i-+<Wd+11Xu\%6Q=''0ebd6+?VS<A2c[]4>8]K0g6^&4>f''+1-Q.00K1^A4s1t12E*TP4q0V.2_d*P+<Wd+A27[Z%6Q=''0f2'':+?VMA0kNTY4>8]K2*N-*4?-q5@m1>a0K1^E4s1t13&>&''4q0V.2_d6T+<Wd(1c[EW%6Q=''0fV?>+?VSl3+P2^4>8]K3BeQ.4>^Y+0Koq.0K1^p4s1t12Ig3,4q0V.2_ec*+<Wd(@Q$&,%6Q=''0k3Bi+?VMAA2-7W4>8]KA3M+Y4?7".1Hl710K1^t4s1t12)Af#4q0V.2_eo.+<Wd+2Ig/Z%6Q=''1,(m7+?VYm@5pF[4>8]L0g6^&4?-h,2a.[50K1aB4s1t13&"bq4q0V.2_m0Q+<Wd)2)I0S%6Q=''1,M0;+?VYD2e>/^4>8]L2*N-*4>f$/@6P,_0K1aF4s1t13AtA+4q0V.2_m<U+<Wd(1,<E)%6Q=''1,qH?+?VS>A7Ie44>8]L3BeQ.4>elO0Koq.0K1aq4s1t12.C,O4q0V.2_ni++<Wd)1GCRJ%6Q=''11NKj+?VVD0JYg$4>8]LA3M+Y4>^V,2EhR40K1au4s1t12DSes4q0V.2_nu/+<Wd)0J[''#%6Q=''1GD!8+?VPAAmmk44>8]M0g6^&4>eiP1Hl710K1dC4s1t12.AR*4q0V.2`!6R+<Wd(0jub"%6Q=''1Gh9<+?VVD@kp4W4>8]M2*N-*4?$_X0g6%/0K1dG4s1t13B9&W4q0V.2`!BV+<Wd*Ai28+%6Q=''1H7Q@+?VP9AS++84>8]M3BeQ.4?"rN@m1>a0K1dr4s1t13+OdV4q0V.2`"o,+<Wd(0f1mS%6Q=''1LiTk+?VMm2eG5_4>8]MA3M+Y4?5)M@Qk5`0K1e!4s1t12`*HI4q0V.2`#&0+<Wd+3Fam0%6Q=''1b_*9+?VM?11WQX4>8]N0g6^&4?#5V2*MI30K1gD4s1t12.e^$4q0V.2`*<S+<Wd,AiXHe%6Q=''1c.B=+?VYAAmmk44>8]N2*N-*4?-q23''Id60K1gH4s1t13FXdS4q0V.2`*HW+<Wd+@V%8X%6Q=''1cRZA+?VS@2`Nu14>8]N3BeQ.4>o/U1-Q.00K1gs4s1t12E,/V4q0V.2`+u-+<Wd+A7]15%6Q=''1h/]l+?VVo1Gq?*4>8]NA3M+Y4>elMA3LGb0K1h"4s1t13+b-Y4q0V.2`,,1+<Wd)ARo45%6Q=''2)%3:+?VPA@q7b44>8]O0g6^&4?58Q2*MI30K1jE4s1t13A>#T4q0V.2`3BT+<Wd(2J-J`%6Q=''2)IK>+?VP@3Fb5^4>8]O2*N-*4?,<43Bdm70K1jI4s1t13+cYZ4q0V.2`3NX+<Wd(1h/L/%6Q=''2)mcB+?VYm@Q6O\4>8]O3BeQ.4>gS+3Bdm70K1jt4s1t12Ina*4q0V.2`5&.+<Wd)@kor+%6Q=''2.Jfm+?VJl@5U4X4>8]OA3M+Y4>gSW1Hl710K1k#4s1t13FOm+4q0V.2`522+<Wd,0fCgO%6Q=''2D@<;+?VP:@5pF[4>8]P0g6^&4?5*(Aj-Yd0K1mF4s1t13B(M04q0V.2`<HU+<Wd(1brN(%6Q=''2DdT?+?VPm@Pp=Y4>8]P2*N-*4>gSY1-Q.00K1mJ4s1t12)/]R4q0V.2`<TY+<Wd(2)o#.%6Q=''2E3lC+?VSp2)RQ,4>8]P3BeQ.4?$ka0Koq.0K1mu4s1t12DelQ4q0V.2`>,/+<Wd)1GiW+%6Q=''2Ieon+?VP>AhcIY4>8]PA3M+Y4>np''ANgPc0K1n$4s1t12D@+$4q0V.2`>83+<Wd*0ed$"%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8]Q0KpU%4>p\,2a.[50K1pF4s1t12IeR(4q0V.2`EKU+<Wd(3AP21%6Q=''2`!W?+?VP@2Inu\4>8]Q1d3$)4?,)O@6P,_0K1pJ4s1t12)o,(4q0V.2`EWY+<Wd(2E583%6Q=''2`EoC+?VVn2IScY4>8]Q3''JH-4>pY[@Qk5`0K1pN4s1t13A=uS4q0V.2`G//+<Wd(3B(J4%6Q=''2e"rn+?VV;0fM9*4>8]Q@m2"X4>ep,2a.[50K1q$4s1t12In^+4q0V.2`G;3+<Wd(1cI9U%6Q=''2eG5r+?VM=3Fk;_4>8]R0KpU%4?,,U2a.[50K1sG4s1t13&>&V4q0V.2`NQV+<Wd)3&<NX%6Q=''3&<`@+?VSC@V%_44>8]R1d3$)4>erT@m1>a0K1sK4s1t11hJU&4q0V.2`N]Z+<Wd(1b^mQ%6Q=''3&a#D+?VS@A26=X4>8]R3''JH-4?-h13Bdm70K1sO4s1t13ArQH4q0V.2`P50+<Wd)@q%5X%6Q=''3+>&o+?VPm@Q6O\4>8]R@m2"X4?-k0@Qk5`0K1t%4s1t13&r]I4q0V.2`PA4+<Wd,AMuA/%6Q=''3+b>s+?VVo1LWHV4>8]S0KpU%4>f#QAj-Yd0K2!H4s1t13Fu_U4q0V.2`WWW+<Wd*2.SR.%6Q=''3AWiA+?VMn3&j)24>8]S1d3$)4?#$,0Koq.0K2!L4s1t12D@$K4q0V.2`Wc[+<Wd(1hL5]%6Q=''3B'',E+?VJl@5pF[4>8]S3''JH-4>pV''@6P,_0K2!P4s1t13&ifN4q0V.2`Y;1+<Wd)0JtUL%6Q=''3FY/p+?VVq2_[E)4>8]S@m2"X4>es*1d2@20K2"&4s1t12_\c%4q0V.2`YG5+<Wd+2E*W[%6Q=''3G(Gt+?VYq1M/f[4>8^&0KpU%4>p_*@6P,_0K3Dp4s1t12.AOW4q0V.2dnI*+<Wd(Ahc8/%6Q=''@5C(i+?VSo@5:"U4>8^&1d3$)4>euU3Bdm70K3Dt4s1t11hL0.4q0V.2dnU.+<Wd*1G^jO%6Q=''@5g@m+?VM<1LiTX4>8^&3''JH-4>eoT@6P,_0K3E#4s1t12)$aF4q0V.2dp,Y+<Wd(1b`K)%6Q=''@:DDC+?VM<2e,#\4>8^&@m2"X4>^V+ANgPc0K3EN4s1t12.gH24q0V.2dp8]+<Wd*1c8]*%6Q=''@:h\G+?VM@Ai;g^4>8^''0KpU%4?,/U@Qk5`0K3Gq4s1t13&"nu4q0V.2e"O++<Wd+2`EQW%6Q=''@P^1j+?VS<A2$1V4>8^''1d3$)4?$b[@6P,_0K3Gu4s1t12J"a(4q0V.2e"[/+<Wd(Ahl;/%6Q=''@Q-In+?VVA1hAi[4>8^''3''JH-4>euO@m1>a0K3H$4s1t12DS\t4q0V.2e$2Z+<Wd''AN;M0%6Q=''@U_MD+?VPl@:;>/4>8^''@m2"X4>nrN2a.[50K3HO4s1t13&4qt4q0V.2e$>^+<Wd(1h8O/%6Q=''@V.eH+?VM;1hAi[4>8^(0KpU%4?#&PANgPc0K3Jr4s1t12J$DR4q0V.2e+U,+<Wd*2)A]*%6Q=''@l$:k+?VM:0etp%4>8^(1d3$)4>eoL2EhR40K3K!4s1t13+?E/4q0V.2e+a0+<Wd)3Fjg-%6Q=''@lHRo+?VMn3+4u[4>8^(3''JH-4>nlI0Koq.0K3K%4s1t12IpB14q0V.2e-8[+<Wd(2`,,1%6Q=''@q%VE+?VPk1,;$&4>8^(@m2"X4?#'')Aj-Yd0K3KP4s1t12E3QM4q0V.2e-D_+<Wd+An3kb%6Q=''@qInI+?VSp0f)!&4>8^)0KpU%4>nuR1-Q.00K3Ms4s1t12DAPq4q0V.2e4[-+<Wd(2)7!P%6Q=''A2?Cl+?VS?ARRb3ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0K3N!4s1t13+Fj%4q0V.2e4d0+<Wd*0ekOL%6Q=''A2ZUo+?VPm@5C(V4>8^)2a/?,4>gSV2EhR40K3N%4s1t12.\^U4q0V.2e4p4+<Wd+1GppO%6Q=''A77YE+?VP:1h/]Y4>8^)@QknW4?6t_1d2@20K3NP4s1t12`PDX4q0V.2e6G_+<Wd+2`3NX%6Q=''A7[qI+?VSm1,hB+4>8^)Aj.=[4?#/X2a.[50K3Ps4s1t12)/\s4q0V.2e=^-+<Wd)0P34,%6Q=''AMQFl+?VS;1h/]Y4>8^*1Hlp(4>o)S1Hl710K3Q"4s1t12.\US4q0V.2e=j1+<Wd)0Jm<(%6Q=''AMu^p+?VVn0P*EW4>8^*2a/?,4?"rQ0Koq.0K3Q&4s1t12D[*G4q0V.2e>!5+<Wd+AiMe7%6Q=''ARRbF+?VMn@UqY34>8^*@QknW4>nlO1-Q.00K3QQ4s1t13&Y;(4q0V.2e?M`+<Wd(2IpA_%6Q=''AS"%J+?VPk@kg.V4>8^*Aj.=[4>nlR1d2@20K3St4s1t12DI*K4q0V.2eFd.+<Wd(1Gh*U%6Q=''AhlOm+?VP9AM?:W4>8^+1Hlp(4>o)U2EhR40K3T#4s1t13+OgW4q0V.2eFp2+<Wd*3G)ec%6Q=''Ai;gq+?VJm0k!6T4>8^+2a/?,4?"s*3Bdm70K3T''4s1t12IeR&4q0V.2eG''6+<Wd+@U_,W%6Q=''AmmkG+?VVmAhlOZ4>8^+@QknW4?$h^3''Id60K3TR4s1t13&<HL4q0V.2eHSa+<Wd)2DA`,%6Q=''An=.K+?VMi2.8ZX4>8^+Aj.=[4?6k-1-Q.00K:a?4s1t12In["4q0V.3&!''N+<Wd)A7dba%6Q=(0JYg7+?VVn1bh0''4>8`K1Hlp(4>p_+@Qk5`0K:aC4s1t11hJI&4q0V.3&!3R+<Wd*0K*B(%6Q=(0K)*;+?VV>@Q-I[4>8`K2a/?,4>nrL2EhR40K:aG4s1t12DAYr4q0V.3&!?V+<Wd,2_\c+%6Q=(0O[-f+?VVo1,hB+4>8`K@QknW4?#8Z3''Id60K:ar4s1t12)/]P4q0V.3&"l,+<Wd(2`##/%6Q=(0P*Ej+?VM?Ammk44>8`KAj.=[4>o,S@6P,_0K:d@4s1t12`3NR4q0V.3&*-O+<Wd*@5DFX%6Q=(0etp8+?VSCAS++84>8`L1Hlp(4?$_02*MI30K:dD4s1t13&!=%4q0V.3&*9S+<Wd,3Ar`Y%6Q=(0fD3<+?VVqAiW$a4>8`L2a/?,4>pe]0Koq.0K:dH4s1t13+?;R4q0V.3&*EW+<Wd,AMPu(%6Q=(0k!6g+?VMAARdn54>8`L@QknW4?$h_3Bdm70K:ds4s1t12eFa(4q0V.3&+r-+<Wd(1b^pR%6Q=(0kENk+?VP@3&*T+4>8`LAj.=[4>o003''Id60K:gA4s1t13+b0*4q0V.3&33P+<Wd*@l.^[%6Q=(1,;$9+?VYB@l?L[4>8`M1Hlp(4>ep)@6P,_0K:gE4s1t12D?mD4q0V.3&3?T+<Wd*2.C,\%6Q=(1,_<=+?VPl2_mQ+4>8`M2a/?,4>eoR1Hl710K:gI4s1t12.9uT4q0V.3&3KX+<Wd*ARRM]%6Q=(11<?h+?VP<1,M0(4>8`M@QknW4>ej)0Koq.0K:gt4s1t13&**q4q0V.3&5#.+<Wd(A7dP[%6Q=(11`Wl+?VV?A7e"74>8`MAj.=[4>nrS0Koq.0K:jB4s1t12).''E4q0V.3&<9Q+<Wd(@Q$#+%6Q=(1GV-:+?VJm0P*EW4>8`N1Hlp(4?#8YA3LGb0K:jF4s1t12)7!D4q0V.3&<EU+<Wd)0Od"*%6Q=(1H%E>+?VPm1hAi[4>8`N2a/?,4>gSX1d2@[DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b3&<NX+<Wd(@Uh/W%6Q=(1H@WA+?VVm@50qT4>8`N@6PeV4?-eZ0Koq.0K:jt4s1t12Do&$4q0V.3&>&.+<Wd(An,=7%6Q=(1LrZl+?VYB1c7H+4>8`NANh4Z4>f,Z1Hl710K:k#4s1t12e?PZ4q0V.3&E<Q+<Wd*ART"2%6Q=(1bh0:+?VM>0KD<+4>8`O1-Qg''4>o--2a.[50K:mF4s1t12*!HQ4q0V.3&EHU+<Wd''AiDM0%6Q=(1c7H>+?VMj@Q$CZ4>8`O2Ei6+4>em&0Koq.0K:mJ4s1t13&<F#4q0V.3&ETY+<Wd,3&k>1%6Q=(1c[`B+?VVo1M&`Z4>8`O@6PeV4?#,R1-Q.00K:mu4s1t13Ab2V4q0V.3&G,/+<Wd(0Jk^P%6Q=(1h8cm+?VSk1LiTX4>8`OANh4Z4>^V]2a.[50K:n$4s1t12E,)''4q0V.3&NBR+<Wd,@5ha]%6Q=(2).9;+?VMi@kg.V4>8`P1-Qg''4>pY-@m1>a0K:pG4s1t12`>2$4q0V.3&NNV+<Wd(2`5#-%6Q=(2)RQ?+?VMk0fD3)4>8`P2Ei6+4?$_*@6P,_0K:pK4s1t13AkD*4q0V.3&NZZ+<Wd*0f3H*%6Q=(2*!iC+?VM92e,#\4>8`P@6PeV4?,$''3Bdm70K:q!4s1t13&3EH4q0V.3&P20+<Wd(3B&o]%6Q=(2.Sln+?VSp0Jks&4>8`PANh4Z4?,,P2a.[50K:q%4s1t12E52#4q0V.3&WHS+<Wd)2e?J_%6Q=(2DIB<+?VSB@PL%U4>8`Q1-Qg''4?#5Y2a.[50K:sH4s1t12DSi"4q0V.3&WTW+<Wd)1H$sO%6Q=(2DmZ@+?VSl3&!N*4>8`Q2Ei6+4>^Y]A3LGb0K:sL4s1t12)7''u4q0V.3&W`[+<Wd(0k4fZ%6Q=(2E<rD+?VV>2)%3''4>8`Q@6PeV4>o31@Qk5`0K:t"4s1t13ANNM4q0V.3&Y81+<Wd+A7d\_%6Q=(2Inuo+?VVo1GM''&4>8`QANh4Z4?,?20g6%/0K:t&4s1t13AiR''4q0V.3&`NT+<Wd*@UWe2%6Q=(2_dK=+?VJlAi;g^4>8`R1-Qg''4>efN2*MI30K;!I4s1t13&39D4q0V.3&`ZX+<Wd(1,UdM%6Q=(2`3cA+?VYE2J,,^4>8`R2Ei6+4>pb*0Koq.0K;!M4s1t12J"j*4q0V.3&`f\+<Wd)A77D\%6Q=(2`X&E+?VMmAmmk44>8`R@6PeV4>eg)2*MI30K;"#4s1t12*#2W4q0V.3&b>2+<Wd(@k]f)%6Q=(2e5)p+?VPm1c@N,4>8`RANh4Z4>p\,Aj-Yd0K;"''4s1t12`3QQ4q0V.3&iTU+<Wd+1cSr.%6Q=(3&*T>+?VPA2E3l04>8`S1-Qg''4>f,V2EhR40K;$J4s1t13+?>P4q0V.3&i`Y+<Wd(1GUXJ%6Q=(3&NlB+?VY=2_dK*4>8`S2Ei6+4?5;VA3LGb0K;$N4s1t13&NNQ4q0V.3&il]+<Wd)3AE9Q%6Q=(3&s/F+?VSC0JPa#4>8`S@6PeV4?"uM2EhR40K;%$4s1t13&"r&4q0V.3&kD3+<Wd''ARRDZ%6Q=(3+P2q+?VY<@pqP14>8`SANh4Z4>p_,2a.[50K;%(4s1t13FOm(4q0V.3&rZV+<Wd(@5''W(%6Q=(3AE]?+?VM>@UhS24>8`T1-Qg''4>o#M2*MI30K;''K4s1t13Ab>%4q0V.3&rfZ+<Wd*2e?G^%6Q=(3AiuC+?VJm@5U4X4>8`T2Ei6+4?,&M@6P,_0K;''O4s1t12_nr!4q0V.3&rr^+<Wd+3Fjm/%6Q=(3B98G+?VYE2dnlZ4>8`T@6PeV4?$k.1d2@20K;(%4s1t12e?N24q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=(3Fb5q+?VM:2eG5_4>8`TA3M+Y4>o&S3Bdm70K;((4s1t13AEHM4q0V.3&tS7+<Wd+AiF<c%6Q=(@5''kf+?VVq3&<`-4>8a''0g6^&4>ep+@Qk5`0K<Jr4s1t12dn^)4q0V.3+4U,+<Wd)1M()\%6Q=(@5L.j+?VP<@5U4X4>8a''2*N-*4?#/X2EhR40K<K!4s1t12`YJ04q0V.3+4a0+<Wd+3&NWY%6Q=(@5pFn+?VYB1H%E+4>8a''3BeQ.4>nrM@6P,_0K<KL4s1t12)8TL4q0V.3+68[+<Wd+1,q$Q%6Q=(@:MJD+?VPA2)IK+4>8a''A3M+Y4>o,W0Koq.0K<KP4s1t12D[9N4q0V.3+6D_+<Wd*2`>,/%6Q=(@PBtg+?VSkARmt64>8a(0g6^&4>p_(0g6%/0K<Ms4s1t12e?MU4q0V.3+=[-+<Wd+3Ft!1%6Q=(@Pg7k+?VMAA2$1V4>8a(2*N-*4>nrL1-Q.00K<N"4s1t13&P2+4q0V.3+=g1+<Wd+11<%(%6Q=(@Q6Oo+?VS?1h/]Y4>8a(3BeQ.4>efIAj-Yd0K<NM4s1t11hC0+4q0V.3+?>\+<Wd*2.8@+%6Q=(@UhSE+?VVmAR[h44>8a(A3M+Y4>gV*@6P,_0K<NQ4s1t12.U<14q0V.3+?J`+<Wd*@PhOX%6Q=(@k^(h+?VP>@5L.W4>8a)0g6^&4?5-,0g6%/0K<Pt4s1t11hC0*4q0V.3+Fa.+<Wd)A26#+%6Q=(@l-@l+?VVD2.f#]4>8a)2*N-*4?$e+2a.[50K<Q#4s1t13AiQM4q0V.3+Fm2+<Wd''ARdS]%6Q=(@lQXp+?VVn1,qH,4>8a)3BeQ.4?-q`@Qk5`0K<QN4s1t13B&lQ4q0V.3+HD]+<Wd)2Del,%6Q=(@q.\F+?VSC3&*T+4>8a)A3M+Y4?-q`0g6%/0K<QR4s1t12_\fQ4q0V.3+HPa+<Wd)A2cJ3%6Q=(A2$1i+?VMk1LrZY4>8a*0g6^&4>em''1-Q.00K<Su4s1t13&<BL4q0V.3+Og/+<Wd(0fCdN%6Q=(A2HIm+?VV>0P*EW4>8a*2*N-*4?#2V@Qk5`0K<T$4s1t12E!KP4q0V.3+Os3+<Wd,@q%D]%6Q=(A2laq+?VJl@:MJ14>8a*3BeQ.4>nm''@6P,_0K<TO4s1t12e-<.4q0V.3+QJ^+<Wd*@q%5X%6Q=(A7IeG+?VSo@qIn64>8a*A3M+Y4>^V02*MI30K<TS4s1t13+=d(4q0V.3+QVb+<Wd)2E#/2%6Q=(AM?:j+?VYD3&j)24>8a+0g6^&4?5>X3Bdm70K<W!4s1t12)mQO4q0V.3+Xm0+<Wd)2)\r.%6Q=(AMcRn+?VYA2.JfZ4>8a+2*N-*4>g_11d2@20K<W%4s1t12`5)*4q0V.3+Y$4+<Wd,2`3KW%6Q=(AN2jr+?VSkA7e"74>8a+3BeQ.4?$\ZANgPc0K<WP4s1t12)/Sp4q0V.3+ZP_+<Wd*0O\QW%6Q=(ARdnH+?VSk3B0234>8a+A3M+Y4>o!,@6P,_0K<WT4s1t12dnX''4q0V.3+Z\c+<Wd*ARR8V%6Q=(AhZCk+?VS=3As&14>8a,0g6^&4?5?3A3LGb0K<Z"4s1t11hAL$4q0V.3+as1+<Wd*0K1sT%6Q=(Ai)[o+?VJl2.Sl[4>8a,2*N-*4?5,R1-Q.00K<Z&4s1t12)AZ$4q0V.3+b*5+<Wd)2)R*P%6Q=(AiMss+?VP>AN)d^4>8a,3BeQ.4?,''-@m1>a0K<ZQ4s1t13&30F4q0V.3+cV`+<Wd(1cT&1%6Q=(An+"I+?VMk1GM''&4>8a,A3M+Y4?#,X@6P,_0K<ZU4s1t13B(A#4q0V.3+cbd+<Wd)11W@.%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8cL0KpU%4?#$+3Bdm70KCgA4s1t12`5&T4q0V.3A<3P+<Wd(@l-&,%6Q=)0Jbm8+?VYm2`X&24>8cL1d3$)4?,-,@6P,_0KCgE4s1t12.JHs4q0V.3A<?T+<Wd(1cR0Q%6Q=)0K20<+?VSAAN;p`4>8cL3''JH-4>^V*ANgPc0KCgI4s1t12Ig0,4q0V.3A=l*+<Wd+0K!9&%6Q=)0Od3g+?VP;A26=X4>8cL@m2"X4>nuRANgPc0KCgt4s1t12.U8X4q0V.3A>#.+<Wd(0fM$T%6Q=)0P3Kk+?VVoA7Rk54>8cM0KpU%4?-n,ANgPc0KCjB4s1t13AiR(4q0V.3AE9Q+<Wd''AnEb]%6Q=)0f)!9+?VM;AMlX\4>8cM1d3$)4>nm)2a.[50KCjF4s1t12_\ZM4q0V.3AEEU+<Wd(1,_''T%6Q=)0fM9=+?VP<2)%3''4>8cM3''JH-4?6t01Hl710KCjJ4s1t12.84O4q0V.3AFr++<Wd(0JYOM%6Q=)0k*<h+?VSA1H.K,4>8cM@m2"X4>eoR2a.[50KCju4s1t12e?PU4q0V.3AG)/+<Wd)1cR?V%6Q=)0kNTl+?VP>11EEV4>8cN0KpU%4>nrS3Bdm70KCmC4s1t12D[?Q4q0V.3AN?R+<Wd(0JPCJ%6Q=)1,D*:+?VS<1Gq?*4>8cN1d3$)4?,?23Bdm70KCmG4s1t12)/Pr4q0V.3ANKV+<Wd+@Uh)U%6Q=)1,hB>+?VSoA7Rk54>8cN3''JH-4>f&S2a.[50KCmK4s1t13&>&S4q0V.3AP#,+<Wd,1gr=,%6Q=)11EEi+?VM93FY/]4>8cN@m2"X4>erM@Qk5`0KCn!4s1t12.L6-4q0V.3AP/0+<Wd''An,75%6Q=)11i]m+?VSkAMZLZ4>8cO0KpU%4>p_-@6P,_0KCpD4s1t13A>#!4q0V.3AWES+<Wd,@5qj_%6Q=)1G_3;+?VM=3&!N*4>8cO1d3$)4>erU2EhR40KCpH4s1t12)@-F4q0V.3AWQW+<Wd(1gsu[%6Q=)1H.K?+?VMn0JG["4>8cO3''JH-4>o!,3Bdm70KCpL4s1t12E<]T4q0V.3AY)-+<Wd(0kFr\%6Q=)1L`Nj+?VP:2E3l04>8cO@m2"X4>elJ@6P,_0KCq"4s1t12)m@"4q0V.3AY51+<Wd(11W@.%6Q=)1M/fn+?VM?1hAi[4>8cP0KpU%4?#5RA3LGb0KCsE4s1t12`EF"4q0V.3A`KT+<Wd(AR[S^%6Q=)1c%<<+?VP:2`Eo04>8cP1d3$)4?$b]0Koq.0KCsI4s1t12DR.!4q0V.3A`WX+<Wd)1-%9W%6Q=)1cIT@+?VJl@5:"U4>8cP3''JH-4?"rS2*MI30KCsM4s1t13&!$B4q0V.3Ab/.+<Wd)11iI/%6Q=)1h&Wk+?VS:AMcR[4>8cP@m2"X4?5>Y0Koq.0KCt#4s1t12)dHQ4q0V.3Ab;2+<Wd+11XiX%6Q=)1hJoo+?VP@AS++84>8cQ0KpU%4>o022*MI30KD!F4s1t12`P>*4q0V.3AiQU+<Wd,3&ro]%6Q=)2)@E=+?VSCA2-7W4>8cQ1d3$)4>f*11Hl710KD!J4s1t12)Jbu4q0V.3Ai]Y+<Wd(1M(/^%6Q=)2)d]A+?VPn1Gh9)4>8cQ3''JH-4>eiM@Qk5`0KD!N4s1t12)6ss4q0V.3Ak5/+<Wd(@UV#U%6Q=)2.A`l+?VVmAn=.84>8cQ@m2"X4?,$''Aj-Yd0KD"$4s1t12)R3H4q0V.3AkA3+<Wd(2dnU.%6Q=)2.f#p+?VP92`!W,4>8cR0KpU%4>f&T0g6%/0KD$G4s1t12)I(!4q0V.3ArWV+<Wd*@5hUY%6Q=)2D[N>+?VP92)%3''ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0KD$J4s1t12.AF"4q0V.3Ar`Y+<Wd)1LW4+%6Q=)2E!`A+?VP;@5''kS4>8cR2a/?,4>ep+1Hl710KD$N4s1t12DR0H4q0V.3Arl]+<Wd(@Uh>\%6Q=)2IScl+?VP@@:h\44>8cR@QknW4>es,A3LGb0KD%$4s1t12dn^Y4q0V.3AtD3+<Wd+11`@-%6Q=)2J#&p+?VY=2`Eo04>8cRAj.=[4>g\11Hl710KD''G4s1t13&kJ+4q0V.3B&ZV+<Wd(3AWWY%6Q=)2_mQ>+?VM?@:_V34>8cS1Hlp(4>nuLANgPc0KD''K4s1t13+QS[4q0V.3B&fZ+<Wd+0P+i[%6Q=)2`<iB+?VM?2)d].4>8cS2a/?,4?$_.2a.[50KD''O4s1t11hL/V4q0V.3B&r^+<Wd(An>F8%6Q=)2dnlm+?VMj@UqY34>8cS@QknW4>pY)ANgPc0KD(%4s1t12)@!B4q0V.3B(J4+<Wd*@Poi''%6Q=)2e>/q+?VS<@kp4W4>8cSAj.=[4>o/U2EhR40KD*H4s1t12`G>\4q0V.3B/`W+<Wd*2`!?U%6Q=)3&3Z?+?VP>AiDm_4>8cT1Hlp(4>ej&2*MI30KD*L4s1t11hAXY4q0V.3B/l[+<Wd*2InX.%6Q=)3&WrC+?VMk@V.e54>8cT2a/?,4?$\W2*MI30KD*P4s1t13&EQO4q0V.3B0#_+<Wd(3Ab;2%6Q=)3+4un+?VYn1bh0''4>8cT@QknW4>efP0Koq.0KD+&4s1t13B9&Y4q0V.3B1P5+<Wd)0et[O%6Q=)3+Y8r+?VPn3&<`-4>8cTAj.=[4>f&U1d2@20KD-I4s1t12E!6I4q0V.3B8fX+<Wd)1Gh!R%6Q=)3ANc@+?VM>AhZCX4>8cU1Hlp(4>ns+@m1>a0KD-M4s1t12DR0N4q0V.3B8r\+<Wd(ARmS\%6Q=)3As&D+?VYB0f2''''4>8cU2a/?,4>f&W1Hl710KD-Q4s1t12DSc&4q0V.3B9)`+<Wd(2)mNY%6Q=)3FP)o+?VVB1,1s%4>8cU@QknW4?,&P@6P,_0KD.''4s1t13+cST4q0V.3B:V6+<Wd(2)[?V%6Q=)3FtAs+?VV>@PL%U4>8cUAj.=[4>o,V2*MI30KEPq4s1t13+Om)4q0V.3FOX++<Wd+1h:,\%6Q=)@5:"h+?VMi2IScY4>8d(1Hlp(4>o/QAj-Yd0KEPu4s1t12DSi%4q0V.3FOd/+<Wd*@V''+7%6Q=)@5^:l+?VYB0ekj$4>8d(2a/?,4>eiP0Koq.0KEQ$4s1t12J+sZ4q0V.3FOp3+<Wd+@l#f&%6Q=)@:;>B+?VP<An4(74>8d(@QknW4?,?23''Id60KEQO4s1t12DJ_t4q0V.3FQG^+<Wd*AhZ,,%6Q=)@:_VF+?VS:@kp4W4>8d(Aj.=[4>pb^2*MI30KESr4s1t12`*3G4q0V.3FX^,+<Wd)3B8o[%6Q=)@PU+i+?VS<An+"64>8d)1Hlp(4>g\[@6P,_0KET!4s1t13A=rS4q0V.3FXj0+<Wd)2_d6T%6Q=)@Q$Cm+?VPm2IScY4>8d)2a/?,4>nuQANgPc0KET%4s1t12)8Vs4q0V.3FY!4+<Wd*1,^mO%6Q=)@UVGC+?VV;0JPa#4>8d)@QknW4>^Y.@m1>a0KETP4s1t12*#5*4q0V.3FZM_+<Wd,0fEH(%6Q=)@V%_G+?VS:A2ug_4>8d)Aj.=[4>p_1A3LGb0KEVs4s1t12)8\t4q0V.3Fad-+<Wd''AMl/*%6Q=)@kp4j+?VYBAiDm_4>8d*1Hlp(4?58WA3LGb0KEW"4s1t13&NX+4q0V.3Fap1+<Wd*3+HA\%6Q=)@l?Ln+?VSn11i]Z4>8d*2a/?,4>eiK0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b3Fb$4+<Wd(2`WWW%6Q=)@lZ^q+?VP=@kp4W4>8d*@6PeV4?,#S@Qk5`0KEWP4s1t12e+dU4q0V.3FcP_+<Wd)@qB(4%6Q=)@q7bG+?VPAAhcIY4>8d*ANh4Z4>o2WANgPc0KEWT4s1t12)/Q!4q0V.3Fjg-+<Wd(1H@EY%6Q=)A2-7j+?VPA@5pF[4>8d+1-Qg''4?##T0g6%/0KEZ"4s1t13Fu]34q0V.3Fjs1+<Wd*@V.>Y%6Q=)A2QOn+?VS<AiMs`4>8d+2Ei6+4?#90@Qk5`0KEZ&4s1t12J+["4q0V.3Fk*5+<Wd*1b^gO%6Q=)A2ugr+?VP@1hAi[4>8d+@6PeV4?5-+@m1>a0KEZQ4s1t13FcJS4q0V.3FlV`+<Wd*3AY//%6Q=)A7RkH+?VV>3&s/34>8d+ANh4Z4?,,S1d2@20KEZU4s1t12)I"!4q0V.3Fsm.+<Wd)3&*?U%6Q=)AMH@k+?VJl1LrZY4>8d,1-Qg''4>eoS3Bdm70KE]#4s1t12)8Vq4q0V.3Ft$2+<Wd*3&>,0%6Q=)AMlXo+?VM;3&Wr04>8d,2Ei6+4>elL3Bdm70KE]''4s1t12)%!L4q0V.3Ft06+<Wd''AiO6`%6Q=)AN;ps+?VJmA2$1V4>8d,@6PeV4?#-/1-Q.00KE]R4s1t12dp3*4q0V.3Fu\a+<Wd*@lZ;.%6Q=)ARmtI+?VPl@5U4X4>8d,ANh4Z4?5</2EhR40KE]V4s1t12)71$4q0V.3G''s/+<Wd*1cR9T%6Q=)AhcIl+?VM<AN;p`4>8d-1-Qg''4>^Y]3Bdm70KE`$4s1t13&!3H4q0V.3G(*3+<Wd+1L`+''%6Q=)Ai2ap+?VVqA7[q64>8d-2Ei6+4?58X0Koq.0KE`(4s1t12.^8X4q0V.3G(67+<Wd)0JR''$%6Q=)AiW$t+?VPm3G(Ga4>8d-@6PeV4>g\)3''Id60KE`S4s1t12Dm@$4q0V.3G)bb+<Wd+0f(dQ%6Q=)An4(J+?VY@An=.84>8d-ANh4Z4>nlM@Qk5`0KE`W4s1t12_\]N4q0V.@5''B!+<Wd*ARdM[%6Q=Q0JPa6+?VSm@:_V34>:1t1-Qg''4>ej''3Bdm70OZXk4s1t12E3ZN4q0V.@5''N%+<Wd*@q%/V%6Q=Q0Ju$:+?VV=2J,,^4>:1t2Ei6+4>^V)1d2@20OZXo4s1t13+b-.4q0V.@5''Z)+<Wd,0k4fZ%6Q=Q0KD<>+?VP?2e>/^4>:1t@6PeV4>^VXANgPc0OZYE4s1t13+FX"4q0V.@5)1T+<Wd)1grC.%6Q=Q0P!?i+?VV;1grQW4>:1tANh4Z4>eg''@6P,_0OZYI4s1t12`3TS4q0V.@50H"+<Wd*0k4cY%6Q=Q0ekj7+?VMjAMlX\4>:1u1-Qg''4?-q^A3LGb0OZ[l4s1t12J+j*4q0V.@50T&+<Wd''AN2S3%6Q=Q0f;-;+?VP=3&3Z,4>:1u2Ei6+4?58W1Hl710OZ[p4s1t12.^;V4q0V.@50`*+<Wd)2*!Z\%6Q=Q0f_E?+?VM:0fM9*4>:1u@6PeV4?,<11-Q.00OZ\F4s1t12_\`$4q0V.@527U+<Wd(11;t&%6Q=Q0k<Hj+?VS=0P*EW4>:1uANh4Z4?#)Q1Hl710OZ\J4s1t12E*WT4q0V.@59N#+<Wd*3+b*5%6Q=Q1,1s8+?VYC0fD3)4>:2!1-Qg''4>^V*1d2@20OZ^m4s1t13A=oO4q0V.@59Z''+<Wd,@q9.7%6Q=Q1,V6<+?VPm@q%V24>:2!2Ei6+4>ej(@Qk5`0OZ^q4s1t13+Oj#4q0V.@59f++<Wd(1biN)%6Q=Q1-%N@+?VP;@q@h54>:2!@6PeV4?#''*1-Q.00OZ_G4s1t13&>/$4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=Q11NKj+?VYBAi;g^4>:2!A3M+Y4?7"51d2@20OZ_J4s1t13Ab5%4q0V.@5;FY+<Wd''Ahu>/%6Q=Q1GD!8+?VSp3FP)\4>:2"0g6^&4>ej''@m1>a0OZam4s1t12_[0J4q0V.@5B]''+<Wd,2E*KW%6Q=Q1Gh9<+?VMk@:VP24>:2"2*N-*4?5A\2EhR40OZaq4s1t12)Af%4q0V.@5Bi++<Wd''AS!\^%6Q=Q1H7Q@+?VPn3Fb5^4>:2"3BeQ.4?#)N3Bdm70OZbG4s1t12E>5''4q0V.@5D@V+<Wd*3&Y50%6Q=Q1LiTk+?VYE3+b>`4>:2"A3M+Y4?#,T3Bdm70OZbK4s1t12)6mG4q0V.@5DLZ+<Wd*2DR*Q%6Q=Q1b_*9+?VPm1bh0''4>:2#0g6^&4>o-11Hl710OZdn4s1t12).""4q0V.@5Kc(+<Wd,AiVk8%6Q=Q1c.B=+?VV;1h&WX4>:2#2*N-*4>erU3Bdm70OZdr4s1t12e"RQ4q0V.@5Ko,+<Wd*@:Eh4%6Q=Q1cRZA+?VYB3&Wr04>:2#3BeQ.4>f&W1d2@20OZeH4s1t12DSi!4q0V.@5MFW+<Wd,2Dd?V%6Q=Q1h/]l+?VPB2e,#\4>:2#A3M+Y4>gP$1d2@20OZeL4s1t12Dd*C4q0V.@5MR[+<Wd*@Uq8Y%6Q=Q2)%3:+?VPo0P3KX4>:2$0g6^&4?5;V@Qk5`0OZgo4s1t13&4o#4q0V.@5Ti)+<Wd(1H%!P%6Q=Q2)IK>+?VYD3&Nl/4>:2$2*N-*4>g\10Koq.0OZgs4s1t12_[3O4q0V.@5Tu-+<Wd)1L`.(%6Q=Q2)mcB+?VM;2DdT,4>:2$3BeQ.4?,5UAj-Yd0OZhI4s1t13Fb$''4q0V.@5VLX+<Wd,AN;P1%6Q=Q2.Jfm+?VSB3+G,]4>:2$A3M+Y4?5>V1-Q.00OZhM4s1t13+QT44q0V.@5VX\+<Wd+A2H&*%6Q=Q2D@<;+?VYq2eG5_4>:2%0g6^&4>pe/ANgPc0OZjp4s1t12`WiS4q0V.@5]o*+<Wd(Ai2G0%6Q=Q2DdT?+?VYB1c@N,4>:2%2*N-*4>nrMANgPc0OZjt4s1t13FOj''4q0V.@5^&.+<Wd(1bgjO%6Q=Q2E3lC+?VY@A7Rk54>:2%3BeQ.4>^YY1Hl710OZkJ4s1t12Dnu%4q0V.@5_RY+<Wd(@l?2.%6Q=Q2Ieon+?VMk2DIB)4>:2%A3M+Y4?$k,2*MI30OZkN4s1t13&WWK4q0V.@5_^]+<Wd)@kqX[%6Q=Q2_[E<+?VMn3+>&\4>:2&0g6^&4?#&U2a.[50OZmq4s1t12J$GV4q0V.@5fu++<Wd*AS,O<%6Q=Q2`*]@+?VMkAMu^]4>:2&2*N-*4>nuM@Qk5`0OZmu4s1t12.AIP4q0V.@5g,/+<Wd)AS!b`%6Q=Q2`NuD+?VM;2`3c.4>:2&3BeQ.4>^V.0g6%/0OZnK4s1t12D\bq4q0V.@5hXZ+<Wd*2)[<U%6Q=Q2e,#o+?VP;@50qT4>:2&A3M+Y4?-q2ANgPc0OZnO4s1t11hJL$4q0V.@5hd^+<Wd''ARmMZ%6Q=Q3&!N=+?VPl@5^:Y4>:2''0g6^&4?$h\2EhR40OZpr4s1t13+??*4q0V.@5p&,+<Wd+1biN)%6Q=Q3&EfA+?VVB@UVG04>:2''2*N-*4?$k02a.[50OZq!4s1t13A<6u4q0V.@5p20+<Wd,2)6sO%6Q=Q3&j)E+?VSl@6$L\4>:2''3BeQ.4?6hY0g6%/0OZqL4s1t13&kM04q0V.@5q^[+<Wd+1c&Z+%6Q=Q3+G,p+?VPm0k*<U4>:2''A3M+Y4?6h02EhR40OZqP4s1t12e?N04q0V.@5qj_+<Wd(3B/u^%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:2(0KpU%4?6t^@Qk5`0OZsr4s1t12`!I''4q0V.@6$),+<Wd*3&!''N%6Q=Q3AWiA+?VVA3&3Z,4>:2(1d3$)4?6h.@m1>a0OZt!4s1t13FOm&4q0V.@6$50+<Wd(2DJZ)%6Q=Q3B'',E+?VM<0fM9*4>:2(3''JH-4>f''-@Qk5`0OZt%4s1t11hAU"4q0V.@6%a[+<Wd,ARRJ\%6Q=Q3FY/p+?VM;2)[W-4>:2(@m2"X4?-q_3''Id60OZtP4s1t13&**I4q0V.@6%m_+<Wd*2`WWW%6Q=Q3G(Gt+?VYE3ANc-4>:2P0KpU%4?,61ANgPc0O\BE4s1t12J$GS4q0V.@::oT+<Wd+2)-mN%6Q=Q@5C(i+?VP?An+"64>:2P1d3$)4>noP1-Q.00O\BI4s1t12J+^R4q0V.@:;&X+<Wd+@kp&.%6Q=Q@5g@m+?VV=3ANc-4>:2P3''JH-4?,,P@Qk5`0O\BM4s1t12`>8''4q0V.@:<S.+<Wd)@kfc''%6Q=Q@:DDC+?VMnA2ug_4>:2P@m2"X4?,-+A3LGb0O\C#4s1t12`!3u4q0V.@:<_2+<Wd+1GC[M%6Q=Q@:h\G+?VYA0k!6T4>:2Q0KpU%4>pYZ@Qk5`0O\EF4s1t12`G8V4q0V.@:CuU+<Wd,1h/F-%6Q=Q@P^1j+?VM;2J,,^4>:2Q1d3$)4?,,N1-Q.00O\EJ4s1t12).*H4q0V.@:D,Y+<Wd(AM[j\%6Q=Q@Q-In+?VVn3+G,]4>:2Q3''JH-4?-k-3''Id60O\EN4s1t11hAL''4q0V.@:EY/+<Wd*1LX`V%6Q=Q@U_MD+?VP@3FP)\4>:2Q@m2"X4>o/Y2*MI30O\F$4s1t13AEHN4q0V.@:Ee3+<Wd,2_[6U%6Q=Q@V.eH+?VS;2DdT,4>:2R0KpU%4>p\X0g6%/0O\HG4s1t12`EEN4q0V.@:M&V+<Wd(@6$),%6Q=Q@l$:k+?VYA1bh0''4>:2R1d3$)4>pYYAj-Yd0O\HK4s1t12eG$\4q0V.@:M2Z+<Wd)2DR3T%6Q=Q@lHRo+?VMjA2$1V4>:2R3''JH-4>f-.3Bdm70O\HO4s1t12.8LR4q0V.@:N_0+<Wd,2.\a2%6Q=Q@q%VE+?VYAAiDm_4>:2R@m2"X4>^V\@m1>a0O\I%4s1t13&E=!4q0V.@:Nk4+<Wd+1c[Q[%6Q=Q@qInI+?VPj@:MJ14>:2S0KpU%4?#0/Aj-Yd0O\KH4s1t13AiTH4q0V.@:V,W+<Wd*1GN?&%6Q=QA2?Cl+?VPA@5^:Y4>:2S1d3$)4>gS*Aj-Yd0O\KL4s1t12`EL(4q0V.@:V8[+<Wd,0f`Z+%6Q=QA2c[p+?VYC2DIB)4>:2S3''JH-4?$b\@m1>a0O\KP4s1t13+cb]4q0V.@:We1+<Wd+@khIW%6Q=QA7@_F+?VMn1,V6)4>:2S@m2"X4?$b/1Hl710O\L&4s1t12`YD.4q0V.@:Wq5+<Wd+3Fap1%6Q=QA7e"J+?VPl@q.\34>:2T0KpU%4?,8S@m1>a0O\NI4s1t12.C&R4q0V.@:_2X+<Wd(AMc/+%6Q=QAMZLm+?VPA@lZ^^4>:2T1d3$)4?#2S0Koq.0O\NM4s1t12e?SY4q0V.@:_>\+<Wd(0f_*T%6Q=QAN)dq+?VM91h8cZ4>:2T3''JH-4>em(3Bdm70O\NQ4s1t12.87#4q0V.@:`k2+<Wd*AhZ)+%6Q=QAR[hG+?VYC2DRH*4>:2T@m2"X4?,*,2a.[50O\O''4s1t12D\iT4q0V.@:a"6+<Wd*2`NWX%6Q=QAS++K+?VV@A2$1V4>:2U0KpU%4?#921-Q.00O\QJ4s1t12J"[Q4q0V.@:h8Y+<Wd(AN;b7%6Q=QAhuUn+?VMA3B984ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0O\QM4s1t13&NEF4q0V.@:hA\+<Wd*0K*H*%6Q=QAi;gq+?VPl0ekj$4>:2U2a/?,4>ns(Aj-Yd0O\QQ4s1t12`>,W4q0V.@:hM`+<Wd)2)Jo/%6Q=QAmmkG+?VP9@:h\44>:2U@QknW4?592A3LGb0O\R''4s1t12E!7#4q0V.@:j%6+<Wd+2`YJ6%6Q=QAn=.K+?VYq1,D*''4>:2UAj.=[4?560A3LGb0Oc^i4s1t12)I!t4q0V.@PBN#+<Wd(1cJr/%6Q=R0JYg7+?VVn11NKW4>:4u2*N-*4?,5R0g6%/0Oc^o4s1t12IS?q4q0V.@PB`)+<Wd+0f``-%6Q=R0K;6=+?VSBAN2j_4>:4u3BeQ.4>o#S3Bdm70Oc_E4s1t13FXj&4q0V.@PD7T+<Wd)11E7-%6Q=R0Om9h+?VP@11EEV4>:4uA3M+Y4?,-*@Qk5`0Oc_I4s1t12)o#(4q0V.@PDCX+<Wd,ARmba%6Q=R0ebd6+?VPl@:DD04>:5!0g6^&4>pe,0Koq.0Ocal4s1t12.C*-4q0V.@PKZ&+<Wd,2Deo-%6Q=R0f2'':+?VVn0Od3T4>:5!2*N-*4?##QAj-Yd0Ocap4s1t12E,/#4q0V.@PKf*+<Wd)11N7,%6Q=R0fV?>+?VS<2DIB)4>:5!3BeQ.4>^VX3Bdm70OcbF4s1t12*#/)4q0V.@PM=U+<Wd)@Uiq4%6Q=R0k3Bi+?VM@3AWi.4>:5!A3M+Y4>o*+ANgPc0OcbJ4s1t12.\X&4q0V.@PMIY+<Wd(11Xu\%6Q=R1,(m7+?VP:2)RQ,4>:5"0g6^&4>o,R3''Id60Ocdm4s1t12`>5Y4q0V.@PT`''+<Wd*2`<QX%6Q=R1,M0;+?VS<2E*f/4>:5"2*N-*4?$\*2EhR40Ocdq4s1t12DSlV4q0V.@PTl++<Wd(1hC)Z%6Q=R1,qH?+?VM<2)%3''4>:5"3BeQ.4?56,0Koq.0OceG4s1t13A=kt4q0V.@PVCV+<Wd(@527U%6Q=R11NKj+?VSo@P^1W4>:5"A3M+Y4>p\(2EhR40OceK4s1t11hAL"4q0V.@PVOZ+<Wd(3B&i[%6Q=R1GD!8+?VV;0ebd#4>:5#0g6^&4>f,U3''Id60Ocgn4s1t12)@*K4q0V.@P]f(+<Wd*2)@0T%6Q=R1Gh9<+?VYB@V%_44>:5#2*N-*4>f$,@6P,_0Ocgr4s1t12D[*B4q0V.@P]r,+<Wd+0ekCH%6Q=R1H7Q@+?VP92e,#\4>:5#3BeQ.4?5923Bdm70OchH4s1t12Ip>V4q0V.@P_IW+<Wd(1c@*Q%6Q=R1LiTk+?VYE3&*T+4>:5#A3M+Y4>eiQ2*MI30OchL4s1t12.:&V4q0V.@P_U[+<Wd+0P4iZ%6Q=R1b_*9+?VMA@:_V34>:5$0g6^&4?5>T1Hl710Ocjo4s1t12)$do4q0V.@Pfl)+<Wd)@q@M]%6Q=R1c.B=+?VMk1LiTX4>:5$2*N-*4>ns*Aj-Yd0Ocjs4s1t11hJX"4q0V.@Pg#-+<Wd(1G`W,%6Q=R1cRZA+?VV<2e"r[4>:5$3BeQ.4?5)L2EhR40OckI4s1t12J$?+4q0V.@PhOX+<Wd+2)8W)%6Q=R1h/]l+?VP;@lQX]4>:5$A3M+Y4>g\/1d2@20OckM4s1t12`P8X4q0V.@Ph[\+<Wd)1h&=+%6Q=R2)%3:+?VP<2e"r[4>:5%0g6^&4>g__2*MI30Ocmp4s1t12.84!4q0V.@Por*+<Wd,0fN].%6Q=R2)IK>+?VYq0kNTY4>:5%2*N-*4>gV)Aj-Yd0Ocmt4s1t12D[1%4q0V.@Pp).+<Wd+0JkOK%6Q=R2)mcB+?VMj2e5)]4>:5%3BeQ.4>euSANgQ7DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b@PqRX+<Wd,2)J`*%6Q=R2.A`l+?VYA1h8cZ4>:5%@m2"X4>p_02*MI30OcnM4s1t12DAQ!4q0V.@Pq^\+<Wd)2e=[,%6Q=R2.f#p+?VS<A7[q64>:5&0KpU%4>ej(A3LGb0Ocpp4s1t12.AO"4q0V.@Q#u*+<Wd)11`C.%6Q=R2D[N>+?VPlA7[q64>:5&1d3$)4?##Q@Qk5`0Ocpt4s1t12DR1$4q0V.@Q$,.+<Wd,1gsrZ%6Q=R2E*fB+?VSo@UqY34>:5&3''JH-4?,&M1Hl710Ocq#4s1t12In[$4q0V.@Q%XY+<Wd(0f``-%6Q=R2I\im+?VMn0Jks&4>:5&@m2"X4>f,X1d2@20OcqN4s1t12)8TK4q0V.@Q%d]+<Wd)0JP=H%6Q=R2J,,q+?VMA2`!W,4>:5''0KpU%4>o)X2EhR40Ocsq4s1t13&WWJ4q0V.@Q-&++<Wd*2*#84%6Q=R2`!W?+?VP<11<?U4>:5''1d3$)4>np*2EhR40Ocsu4s1t12e-E24q0V.@Q-2/+<Wd+@V0%4%6Q=R2`EoC+?VM<AMu^]4>:5''3''JH-4>pY(2a.[50Oct$4s1t13Fss''4q0V.@Q.^Z+<Wd)@U_/X%6Q=R2e"rn+?VV@A2QO[4>:5''@m2"X4>erQ2*MI30OctO4s1t12)$sI4q0V.@Q.j^+<Wd)@pq2X%6Q=R2eG5r+?VM=2IScY4>:5(0KpU%4?-k\1d2@20Od!r4s1t12_m-u4q0V.@Q6,,+<Wd(AMH&+%6Q=R3&<`@+?VP90f;-(4>:5(1d3$)4?#)Q2EhR40Od"!4s1t12DScQ4q0V.@Q680+<Wd)1H@3S%6Q=R3&a#D+?VS<1h/]Y4>:5(3''JH-4>g_23''Id60Od"%4s1t12J"^$4q0V.@Q7d[+<Wd)A2@d\%6Q=R3+>&o+?VP>0JG["4>:5(@m2"X4>pe/3''Id60Od"P4s1t12`>2+4q0V.@Q7p_+<Wd*3+O^,%6Q=R3+b>s+?VS@An+"64>:5)0KpU%4?#,T1d2@20Od$s4s1t12)6pD4q0V.@Q?2-+<Wd(1LsrY%6Q=R3AWiA+?VJl2)@E*4>:5)1d3$)4>g\1ANgPc0Od%"4s1t12Dnu!4q0V.@Q?>1+<Wd+0J[''#%6Q=R3B'',E+?VV;A2ZU\4>:5)3''JH-4>nrT@Qk5`0Od%&4s1t12)I9N4q0V.@Q@j\+<Wd(1,:gQ%6Q=R3FY/p+?VS:@:_V34>:5)@m2"X4?,;[A3LGb0Od%Q4s1t13+QPS4q0V.@QA!`+<Wd)@q@AY%6Q=R3G(Gt+?VM<2`Nu14>:5Q0KpU%4?,$*@6P,_0OeHF4s1t12)f,-4q0V.@UV#U+<Wd+3+b!2%6Q=R@5C(i+?VVo2)IK+4>:5Q1d3$)4?5;X@6P,_0OeHJ4s1t13AE@$4q0V.@UV/Y+<Wd''Ai;Y5%6Q=R@5g@m+?VPl3FY/]4>:5Q3''JH-4>f!*2a.[50OeHN4s1t12`>/(4q0V.@UW\/+<Wd*3&<6P%6Q=R@:DDC+?VP;@5pF[4>:5Q@m2"X4?"s+3Bdm70OeI$4s1t12J+p[4q0V.@UWh3+<Wd(Ai=0`%6Q=R@:h\G+?VV?ARdn54>:5R0KpU%4>o00@6P,_0OeKG4s1t12`Na+4q0V.@U_)V+<Wd*@V.P_%6Q=R@P^1j+?VV<@5pF[4>:5R1d3$)4>o,P@Qk5`0OeKK4s1t13Ft$Z4q0V.@U_5Z+<Wd)1H%0U%6Q=R@Q-In+?VSB@PBtT4>:5R3''JH-4>f&UAj-Yd0OeKO4s1t12`NNI4q0V.@U`b0+<Wd,2`!HX%6Q=R@U_MD+?VP;2`X&24>:5R@m2"X4>ns''@Qk5`0OeL%4s1t12)7-N4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=R@V%_G+?VS>1Gq?*4>:5RAj.=[4>pYZ2a.[50OeNG4s1t12)R9K4q0V.@Uh,V+<Wd+0f*B)%6Q=R@kp4j+?VS?@PU+V4>:5S1Hlp(4?#0,ANgPc0OeNK4s1t12)@$K4q0V.@Uh8Z+<Wd*2.U8^%6Q=R@l?Ln+?VM8An!q54>:5S2a/?,4>gV*0g6%/0OeNO4s1t13+=dU4q0V.@UhD^+<Wd*@Uh>\%6Q=R@pqPD+?VM81hJo\4>:5S@QknW4?##P2a.[50OeO%4s1t13FOp,4q0V.@Uiq4+<Wd,3+P!4%6Q=R@q@hH+?VPo0JYg$4>:5SAj.=[4?#*.1-Q.00OeQH4s1t12`WcU4q0V.@Uq2W+<Wd)1cREX%6Q=RA26=k+?VSA@5U4X4>:5T1Hlp(4>ns,@m1>a0OeQL4s1t13B0#R4q0V.@Uq>[+<Wd+A27UX%6Q=RA2ZUo+?VM<@kg.V4>:5T2a/?,4?,#P3''Id60OeQP4s1t11hAO"4q0V.@UqJ_+<Wd(2`>).%6Q=RA77YE+?VV=AiW$a4>:5T@QknW4?,/OA3LGb0OeR&4s1t12.\^&4q0V.@Us"5+<Wd(0kFlZ%6Q=RA7[qI+?VS>Ai;g^4>:5TAj.=[4?-e[1d2@20OeTI4s1t12.JIT4q0V.@V%8X+<Wd(2`<BS%6Q=RAMQFl+?VPlAn+"64>:5U1Hlp(4?5A\2a.[50OeTM4s1t12.8="4q0V.@V%D\+<Wd*3&<BT%6Q=RAMu^p+?VYn1c.B*4>:5U2a/?,4?-qa@Qk5`0OeTQ4s1t12e+j*4q0V.@V%P`+<Wd(1,UsR%6Q=RARRbF+?VP;2).9(4>:5U@QknW4?561@6P,_0OeU''4s1t11hC/T4q0V.@V''(6+<Wd+1H79V%6Q=RAS"%J+?VV?2DIB)4>:5UAj.=[4?,-.3Bdm70OeWJ4s1t13&G)"4q0V.@V.>Y+<Wd(2e4a/%6Q=RAhlOm+?VP@1Gh9)4>:5V1Hlp(4>f&O1Hl710OeWN4s1t12E!I)4q0V.@V.J]+<Wd)A2Z>0%6Q=RAi;gq+?VVn1GM''&4>:5V2a/?,4>o*.A3LGb0OeWR4s1t12_Zs@4q0V.@V.Va+<Wd)2_eo.%6Q=RAmmkG+?VPk1LWHV4>:5V@QknW4>o/R2EhR40OeX(4s1t12DR!q4q0V.@V0.7+<Wd(3FZG]%6Q=RAn=.K+?VJl0Jbm%4>:5VAj.=[4>ej''1d2@20Oldj4s1t12J+X$4q0V.@k]W$+<Wd)2e4[-%6Q=S0JYg7+?VPl3+b>`4>:8!1Hlp(4>eiP2EhR40Oldn4s1t12E52U4q0V.@k]c(+<Wd(3A`ZY%6Q=S0K)*;+?VPk2E*f/4>:8!2a/?,4?#,U2EhR40Oldr4s1t12.SCP4q0V.@k]o,+<Wd+0ek@G%6Q=S0O[-f+?VYr2)%3''4>:8!@QknW4>o''-2a.[50OleH4s1t12`W]S4q0V.@k_FW+<Wd*3A`HS%6Q=S0P*Ej+?VYm3AE],4>:8!Aj.=[4?-k12a.[50Olgk4s1t12.JU$4q0V.@kf]%+<Wd''AMn$_%6Q=S0etp8+?VJm0JPa#4>:8"1Hlp(4>erNAj-Yd0Olgo4s1t12*!NK4q0V.@kfi)+<Wd*3&"i+%6Q=S0fD3<+?VM>2E3l04>:8"2a/?,4>p\(1d2@20Olgs4s1t13+cYW4q0V.@kfu-+<Wd(AhZ#)%6Q=S0k!6g+?VPl2e5)]4>:8"@QknW4>p\\1Hl710OlhI4s1t13+?<*4q0V.@khLX+<Wd)1H@-Q%6Q=S0kENk+?VP92_[E)4>:8"Aj.=[4>p_+A3LGb0Oljl4s1t12_m<L4q0V.@koc&+<Wd)1,_$S%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:8#1-Qg''4?55XANgPc0Oljo4s1t13Ab5''4q0V.@kol)+<Wd(1GgmO%6Q=S1,V6<+?VVq@kg.V4>:8#2Ei6+4?$_.ANgPc0Oljs4s1t11hC304q0V.@kp#-+<Wd+@kor+%6Q=S1-%N@+?VJl2e>/^4>:8#@6PeV4?6t`1d2@20OlkI4s1t13Ab2"4q0V.@kqOX+<Wd,1h&7)%6Q=S11WQk+?VM:1h8cZ4>:8#ANh4Z4>pe/@m1>a0OlkM4s1t13A<?I4q0V.@l#f&+<Wd)A2H/-%6Q=S1GM''9+?VVn1Gh9)4>:8$1-Qg''4>f)Q0g6%/0Olmp4s1t12.SOR4q0V.@l#r*+<Wd)@PTW$%6Q=S1Gq?=+?VPk1c[`/4>:8$2Ei6+4>o-,@6P,_0Olmt4s1t12)I1"4q0V.@l$).+<Wd+0f:dO%6Q=S1H@WA+?VSp3+G,]4>:8$@6PeV4>f)Y3Bdm70OlnJ4s1t13&NKN4q0V.@l%UY+<Wd(Ai!jZ%6Q=S1LrZl+?VP;@5:"U4>:8$ANh4Z4>pV)2a.[50OlnN4s1t13AiTQ4q0V.@l,l''+<Wd)2)d9S%6Q=S1bh0:+?VP93&Ef.4>:8%1-Qg''4>o/W2*MI30Olpq4s1t12`G/(4q0V.@l-#++<Wd''AMl;.%6Q=S1c7H>+?VJm@5pF[4>:8%2Ei6+4>gY\2a.[50Olpu4s1t13B&rX4q0V.@l-//+<Wd)1gslX%6Q=S1c[`B+?VSpA2la^4>:8%@6PeV4>gV[A3LGb0OlqK4s1t11hL604q0V.@l.[Z+<Wd*@5qd]%6Q=S1h8cm+?VM:0K20)4>:8%ANh4Z4?,,N1d2@20OlqO4s1t11hABu4q0V.@l5r(+<Wd)0J[6(%6Q=S2).9;+?VSk3&<`-4>:8&1-Qg''4?56,2EhR40Olsr4s1t11hL2S4q0V.@l6),+<Wd''AR[DY%6Q=S2)RQ?+?VSCAMu^]4>:8&2Ei6+4?#)Q1d2@20Olt!4s1t12)8`"4q0V.@l650+<Wd+11E7-%6Q=S2*!iC+?VP=A26=X4>:8&@6PeV4?#90A3LGb0OltL4s1t12.C*,4q0V.@l7a[+<Wd)@lQ2,%6Q=S2.Sln+?VYC2)7?)4>:8&ANh4Z4?-q3@Qk5`0OltP4s1t12IeKt4q0V.@l?#)+<Wd(0Jd9(%6Q=S2DIB<+?VM;2eG5_4>:8''1-Qg''4>pb)2*MI30Om!s4s1t12DeoT4q0V.@l?/-+<Wd)2E*HV%6Q=S2DmZ@+?VPl1GD!%4>:8''2Ei6+4>nm''2*MI30Om""4s1t13B/rV4q0V.@l?;1+<Wd+@V.P_%6Q=S2E<rD+?VMm3&Wr04>:8''@6PeV4?#)Q@m1>a0Om"M4s1t12dnX(4q0V.@l@g\+<Wd*3FcM^%6Q=S2Inuo+?VJl0fV?+4>:8''ANh4Z4?5*)0g6%/0Om"Q4s1t12`*3E4q0V.@lH)*+<Wd)@l,r)%6Q=S2_dK=+?VM>A77Y24>:8(1-Qg''4?5,Q@Qk5`0Om$t4s1t12Ig5S4q0V.@lH5.+<Wd+A2n$^%6Q=S2`3cA+?VM;1LWHV4>:8(2Ei6+4?,6/2EhR40Om%#4s1t12E#/&4q0V.@lHA2+<Wd+ART17%6Q=S2`X&E+?VMk1cRZ.4>:8(@6PeV4?6h/0g6%/0Om%N4s1t12J"Wt4q0V.@lIm]+<Wd(1LrC-%6Q=S2e5)p+?VMi1H%E+4>:8(ANh4Z4?7"5@Qk5`0Om%R4s1t13+QGR4q0V.@lQ/++<Wd(1LafW%6Q=S3&*T>+?VM?0K;6*4>:8)1-Qg''4?5B02a.[50Om''u4s1t12E*HK4q0V.@lQ;/+<Wd,0f`],%6Q=S3&NlB+?VPl@lZ^^ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0Om(#4s1t12).!K4q0V.@lQD2+<Wd*2.L&Y%6Q=S3&j)E+?VP;AhuU[4>:8)3BeQ.4?#$(@m1>a0Om(N4s1t12)6sI4q0V.@lRp]+<Wd(1-&l/%6Q=S3+G,p+?VSp1LWHV4>:8)A3M+Y4?"rS1d2@20Om(R4s1t12`<HO4q0V.@lS''a+<Wd(1H.-S%6Q=S3A<W>+?VYq1grQW4>:8*0g6^&4>o3/2a.[50Om*u4s1t12`N^,4q0V.@lZ>/+<Wd,2IeF)%6Q=S3A`oB+?VVCA2ug_4>:8*2*N-*4?$k\1d2@20Om+$4s1t12_d*H4q0V.@lZJ3+<Wd*0k3"''%6Q=S3B02F+?VM93&s/34>:8*3BeQ.4>o-/1Hl710Om+O4s1t12`,)&4q0V.@l\!^+<Wd(3+Xp1%6Q=S3Fb5q+?VP>0fV?+4>:8*A3M+Y4>f$+2a.[50Om+S4s1t13+?;V4q0V.@l\-b+<Wd,3B&i[%6Q=S@5''kf+?VP;2_[E)4>:8R0g6^&4?$h^2*MI30OnNH4s1t12DA`''4q0V.@pq/W+<Wd*0P+cY%6Q=S@5L.j+?VM@ARdn54>:8R2*N-*4>^VZ0g6%/0OnNL4s1t11hC-)4q0V.@pq;[+<Wd(An,@8%6Q=S@5pFn+?VYCAN)d^4>:8R3BeQ.4>^V]@Qk5`0OnO"4s1t13+?;Q4q0V.@prh1+<Wd(1,(LJ%6Q=S@:MJD+?VMA3+4u[4>:8RA3M+Y4?$h[@Qk5`0OnO&4s1t12DR-H4q0V.@prt5+<Wd''ARf77%6Q=S@PBtg+?VP>AMlX\4>:8S0g6^&4>nrKANgPc0OnQI4s1t13&<?M4q0V.@q%5X+<Wd+1h/O0%6Q=S@Pg7k+?VV>2D[N+4>:8S2*N-*4?,8ZA3LGb0OnQM4s1t12_d<L4q0V.@q%A\+<Wd)AR[P]%6Q=S@Q6Oo+?VMj@Q?U]4>:8S3BeQ.4?$h^1-Q.00OnR#4s1t12).*M4q0V.@q&n2+<Wd)1LiF/%6Q=S@UhSE+?VP@A2HIZ4>:8SA3M+Y4?,#S3Bdm70OnR''4s1t13&<?N4q0V.@q''%6+<Wd+3&*9S%6Q=S@k^(h+?VM90etp%4>:8T0g6^&4>gS,@6P,_0OnTJ4s1t12*!WO4q0V.@q.;Y+<Wd+An!JY%6Q=S@l-@l+?VJl2`!W,4>:8T2*N-*4>p\,A3LGb0OnTN4s1t12).!H4q0V.@q.G]+<Wd+3ANHU%6Q=S@lQXp+?VVq2J,,^4>:8T3BeQ.4?5;TANgPc0OnU$4s1t13&NO$4q0V.@q/t3+<Wd*1c8i.%6Q=S@q.\F+?VYA0ebd#4>:8TA3M+Y4?5920Koq.0OnU(4s1t12Ip5S4q0V.@q0+7+<Wd+11`=,%6Q=SA2$1i+?VMn1GM''&4>:8U0g6^&4>o#V1-Q.00OnWK4s1t12InNt4q0V.@q7AZ+<Wd+1bq$S%6Q=SA2HIm+?VV<2J#&]4>:8U2*N-*4?6n]1Hl710OnWO4s1t12)mI)4q0V.@q7M^+<Wd+A2Rg[%6Q=SA2laq+?VJl0KD<+4>:8U3BeQ.4>ep)0g6%/0OnX%4s1t11hJIR4q0V.@q9%4+<Wd)2)[6S%6Q=SA7IeG+?VPA2).9(4>:8UA3M+Y4>f!,1Hl710OnX)4s1t11hAF$4q0V.@q918+<Wd)1bggN%6Q=SAM?:j+?VYm3FP)\4>:8V0g6^&4>nrQ@Qk5`0OnZL4s1t12.9uM4q0V.@q@G[+<Wd*1c8l/%6Q=SAMcRn+?VV=2_mQ+4>:8V2*N-*4>p_Y3Bdm70OnZP4s1t12E58Z4q0V.@q@S_+<Wd(0P*1,%6Q=SAN2jr+?VV>3+Y8_4>:8V3BeQ.4?#5R1-Q.YDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b@qB(4+<Wd)2`*3P%6Q=SAR[hG+?VM:1H@W.4>:8V@m2"X4>p\03Bdm70On[)4s1t12e?GQ4q0V.@qB48+<Wd(0OeKT%6Q=SAS++K+?VM=2DmZ-4>:8W0KpU%4?"uPANgPc0On]L4s1t12e"XR4q0V.@qIJ[+<Wd)2Dm6R%6Q=SAhuUn+?VS=@pqP14>:8W1d3$)4?,*-@Qk5`0On]P4s1t12E*HQ4q0V.@qIV_+<Wd(@lH,+%6Q=SAiDmr+?VM:1,(m$4>:8W3''JH-4?"uRA3LGb0On]T4s1t13&ig*4q0V.@qK.5+<Wd,2.^2[%6Q=SAn!qH+?VYB2)RQ,4>:8W@m2"X4>o$+2*MI30On^*4s1t13+Op%4q0V.@qK:9+<Wd+0k)q&%6Q=SAnF4L+?VM=3&Ef.4>:;"0KpU%4>p\,2*MI30Oujl4s1t12DR*J4q0V.A2#c&+<Wd*Ahmp]%6Q=T0Jbm8+?VM@3ANc-4>:;"1d3$)4>^Y*1d2@20Oujp4s1t12)R3K4q0V.A2#o*+<Wd+A2Im^%6Q=T0K20<+?VP?1h/]Y4>:;"3''JH-4>^V''@6P,_0Oujt4s1t12.J@L4q0V.A2%FU+<Wd+3+as1%6Q=T0Od3g+?VPA@5:"U4>:;"@m2"X4>nuPANgPc0OukJ4s1t12dnCN4q0V.A2%RY+<Wd*0P*1,%6Q=T0P3Kk+?VV=3+P2^4>:;#0KpU%4>em+@6P,_0Oumm4s1t13B(P.4q0V.A2,i''+<Wd(@kf]%%6Q=T0f)!9+?VM<AN2j_4>:;#1d3$)4?5*)2*MI30Oumq4s1t12e?K04q0V.A2,u++<Wd(3ArWV%6Q=T0fM9=+?VVo1grQW4>:;#3''JH-4?,6/2a.[50OunI4s1t13+Op*4q0V.A2.RX+<Wd)1c.$Q%6Q=T0k<Hj+?VMk0Jks&4>:;#ANh4Z4>noO0g6%/0OunM4s1t12Ind-4q0V.A25i&+<Wd*3AY51%6Q=T1,1s8+?VVm@V%_44>:;$1-Qg''4?#5U2a.[50Oupp4s1t12`3BI4q0V.A25u*+<Wd(1cJl-%6Q=T1,V6<+?VJm1H7Q-4>:;$2Ei6+4?-n\@Qk5`0Oupt4s1t12IpDS4q0V.A26,.+<Wd(@59N#%6Q=T1-%N@+?VSo@l6FZ4>:;$@6PeV4?#8XANgPc0OuqJ4s1t12Ie^+4q0V.A27XY+<Wd(@UUuT%6Q=T11WQk+?VMi2`<i/4>:;$ANh4Z4?#,P@6P,_0OuqN4s1t13&"fQ4q0V.A2>o''+<Wd)0f3H*%6Q=T1GM''9+?VPn0fM9*4>:;%1-Qg''4>f*10Koq.0Ousq4s1t12`3=%4q0V.A2?&++<Wd*2)7$Q%6Q=T1Gq?=+?VS<2_mQ+4>:;%2Ei6+4>eoO2a.[50Ousu4s1t12e?SW4q0V.A2?2/+<Wd*2_ZsM%6Q=T1H@WA+?VS@A7@_34>:;%@6PeV4>elP3Bdm70OutK4s1t13&"lQ4q0V.A2@^Z+<Wd(2_m0Q%6Q=T1LrZl+?VMm0K;6*4>:;%ANh4Z4>f,T0g6%/0OutO4s1t12_nrU4q0V.A2Gu(+<Wd)2.C)[%6Q=T1bh0:+?VPn2eG5_4>:;&1-Qg''4?-e\2a.[50P!!r4s1t12.JF%4q0V.A2H,,+<Wd+2E*?S%6Q=T1c7H>+?VM;1bh0''4>:;&2Ei6+4?#321Hl710P!"!4s1t12DSlU4q0V.A2H80+<Wd)2.ea1%6Q=T1c[`B+?VJl@k^(U4>:;&@6PeV4?5B3Aj-Yd0P!"L4s1t13&W`M4q0V.A2Id[+<Wd(@QA!`%6Q=T1h8cm+?VVm@l?L[4>:;&ANh4Z4>ep,1-Q.00P!"P4s1t12`G;''4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=T2)%3:+?VJm2eG5_4>:;''0g6^&4>gV*ANgPc0P!$r4s1t13FOj)4q0V.A2Q/,+<Wd(3FcM^%6Q=T2)IK>+?VMn0P3KX4>:;''2*N-*4?#8V@6P,_0P!%!4s1t12)o/V4q0V.A2Q;0+<Wd''AMH),%6Q=T2)mcB+?VP@AnF494>:;''3BeQ.4>^V/@Qk5`0P!%L4s1t12DSiS4q0V.A2Rg[+<Wd+@6$,-%6Q=T2.Jfm+?VY<0k<HW4>:;''A3M+Y4>em''Aj-Yd0P!%P4s1t12E!=&4q0V.A2Rs_+<Wd(2.U2\%6Q=T2D@<;+?VM>2Ieo[4>:;(0g6^&4?5)L1-Q.00P!''s4s1t11hC2T4q0V.A2Z5-+<Wd''AiO<b%6Q=T2DdT?+?VY=@pqP14>:;(2*N-*4?5D\0Koq.0P!("4s1t12IeFQ4q0V.A2ZA1+<Wd(AM>l''%6Q=T2E3lC+?VP91c%<)4>:;(3BeQ.4>gSV1d2@20P!(M4s1t13&tJ,4q0V.A2[m\+<Wd+@Uq>[%6Q=T2Ieon+?VP>1H%E+4>:;(A3M+Y4>nrO@Qk5`0P!(Q4s1t13B9)X4q0V.A2\$`+<Wd(@Q6>2%6Q=T2_[E<+?VMjAnF494>:;)0g6^&4>nuT3''Id60P!*t4s1t12)R.#4q0V.A2c;.+<Wd(1LrF.%6Q=T2`*]@+?VS@1,_<*4>:;)2*N-*4>eiPA3LGb0P!+#4s1t13&NI$4q0V.A2cG2+<Wd)2dnI*%6Q=T2`NuD+?VPA@P^1W4>:;)3BeQ.4>pY.@6P,_0P!+N4s1t12DR9J4q0V.A2ds]+<Wd+AiVY2%6Q=T2e,#o+?VM;A2HIZ4>:;)A3M+Y4?,)N1-Q.00P!+R4s1t12Ip>Q4q0V.A2e*a+<Wd*2)o23%6Q=T3&!N=+?VJl2E!`.4>:;*0g6^&4?-k.ANgPc0P!-u4s1t12.AKu4q0V.A2lA/+<Wd*0f`i0%6Q=T3&EfA+?VV@@:h\44>:;*2*N-*4>o)X0g6%/0P!.$4s1t12E#)+4q0V.A2lM3+<Wd*AiDJ/%6Q=T3&j)E+?VVB0JG["4>:;*3BeQ.4?6t_A3LGb0P!.O4s1t13G($#4q0V.A2n$^+<Wd(@l7g]%6Q=T3+G,p+?VP@11i]Z4>:;*A3M+Y4?-qb0Koq.0P!.S4s1t12E3EG4q0V.A2n0b+<Wd)2`522%6Q=T3A<W>+?VP;0P!?V4>:;+0g6^&4?$\Z2EhR40P!1!4s1t12)mQQ4q0V.A2uG0+<Wd(AR[P]%6Q=T3A`oB+?VP>2_[E)4>:;+2*N-*4>pe-0g6%/0P!1%4s1t12D@!G4q0V.A2uS4+<Wd(1,CjQ%6Q=T3B02F+?VV;0P!?V4>:;+3BeQ.4>o#R1d2@20P!1P4s1t13&iiN4q0V.A3"*_+<Wd*2)70U%6Q=T3Fb5q+?VMm0Ju$''4>:;+A3M+Y4>o/R1Hl710P!1T4s1t12DSl$4q0V.A3"6c+<Wd,2_ef+%6Q=T@5''kf+?VM;@q.\34>:;S0g6^&4?##OA3LGb0P"TI4s1t13+FWs4q0V.A778X+<Wd)@l#r*%6Q=T@5L.j+?VSA2DIB)4>:;S2*N-*4?$\&ANgPc0P"TM4s1t12)I("4q0V.A77D\+<Wd*2dp2[%6Q=T@5pFn+?VYD2dnlZ4>:;S3BeQ.4?,)N@m1>a0P"U#4s1t13+?JV4q0V.A78q2+<Wd*3&NQW%6Q=T@:MJD+?VP@0f2''''4>:;SA3M+Y4?"s(0g6%/0P"U''4s1t12DnoT4q0V.A79(6+<Wd)1c[EW%6Q=T@PBtg+?VM>1H%E+4>:;T0g6^&4>nlJA3LGb0P"WJ4s1t12`YA&4q0V.A7@>Y+<Wd(1M/U1%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:;T1d3$)4>^V(A3LGb0P"WM4s1t12I\US4q0V.A7@G\+<Wd+0K:sS%6Q=T@Q-In+?VMjAmmk44>:;T3''JH-4>f!-1Hl710P"WQ4s1t12)\uS4q0V.A7At2+<Wd''Ai!jZ%6Q=T@U_MD+?VJm1LiTX4>:;T@m2"X4?5D\1-Q.00P"X''4s1t12.U;T4q0V.A7B+6+<Wd)2`G;3%6Q=T@V.eH+?VV;1H7Q-4>:;U0KpU%4>nlI1-Q.00P"ZJ4s1t13B/uR4q0V.A7IAY+<Wd,0JG4F%6Q=T@l$:k+?VMj3+>&\4>:;U1d3$)4?-eZ@m1>a0P"ZN4s1t13+?JW4q0V.A7IM]+<Wd)1biK(%6Q=T@lHRo+?VV=2)mc/4>:;U3''JH-4>o$,ANgPc0P"ZR4s1t12)SuV4q0V.A7K%3+<Wd+11Oo[%6Q=T@q%VE+?VY=2DmZ-4>:;U@m2"X4>^Y\2a.[50P"[(4s1t12e4Zt4q0V.A7K17+<Wd,0JR0''%6Q=T@qInI+?VSm3G(Ga4>:;V0KpU%4>eg)1Hl710P"]K4s1t12)mHJ4q0V.A7RGZ+<Wd)ART17%6Q=TA2?Cl+?VMj@V.e54>:;V1d3$)4?-e[3Bdm70P"]O4s1t13&!<J4q0V.A7RS^+<Wd,0fM''U%6Q=TA2c[p+?VV?3Fb5^4>:;V3''JH-4?$_02a.[50P"]S4s1t13&W^+4q0V.A7T+4+<Wd,2E5/0%6Q=TA7@_F+?VYB3+b>`4>:;V@m2"X4?$h_2*MI30P"^)4s1t13FQGS4q0V.A7T78+<Wd*3&kJ5%6Q=TA7e"J+?VMk3&*T+4>:;W0KpU%4?$\+2a.[50P"`L4s1t13A<9F4q0V.A7[M[+<Wd,2ISO.%6Q=TAMZLm+?VSC2.f#]4>:;W1d3$)4>gS*3Bdm70P"`P4s1t12D[4&4q0V.A7[Y_+<Wd*@PD7T%6Q=TAN)dq+?VV?A2-7W4>:;W3''JH-4>o0-A3LGb0P"`T4s1t12)R''G4q0V.A7]15+<Wd*AhlA1%6Q=TAR[hG+?VS>0ebd#4>:;W@m2"X4?$e+1-Q.00P"a*4s1t13AiKF4q0V.A7]=9+<Wd)1,L[K%6Q=TAS++K+?VM@1h/]Y4>:;X0KpU%4>^V[2EhR40P"cM4s1t12.AO$4q0V.A7dS\+<Wd(3B&r^%6Q=TAhuUn+?VM@2)IK+4>:;X1d3$)4?#&SA3LGb0P"cQ4s1t12D[(!4q0V.A7d_`+<Wd+AMdj[%6Q=TAiDmr+?VVp0P3KX4>:;X3''JH-4?,$)ANgPc0P"cU4s1t13&5#$4q0V.A7f76+<Wd)11=ZV%6Q=TAn!qH+?VM;AhZCX4>:;X@m2"X4>p\]0Koq.0P"d+4s1t13AEC&4q0V.A7fC:+<Wd(3AP#,%6Q=TAnF4L+?VP90JPa#4>:>#0KpU%4>p\.0Koq.0P)pm4s1t12)d@&4q0V.AM>l''+<Wd)1c/W)%6Q=U0Jbm8+?VVo11<?U4>:>#1d3$)4?#/R@Qk5`0P)pq4s1t12J$G[4q0V.AM?#++<Wd(2`5&.%6Q=U0K20<+?VPj3&!N*4>:>#3''JH-4?#-00Koq.0P)pu4s1t12J+jX4q0V.AM@OV+<Wd+@kqRY%6Q=U0Od3g+?VVn0K;6*4>:>#@m2"X4>f&U2EhR40P)qK4s1t12I^604q0V.AM@[Z+<Wd+3&r`X%6Q=U0P3Kk+?VSB@P^1W4>:>$0KpU%4>o!(1-Q.00P)sn4s1t12)Ai)4q0V.AMGr(+<Wd*0O\KU%6Q=U0f)!9+?VPl2DdT,4>:>$1d3$)4>f)U3''Id60P)sr4s1t12Dd0t4q0V.AMH),+<Wd(3&!*O%6Q=U0fM9=+?VPAAM?:WASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0P)su4s1t13&*F&4q0V.AMH2/+<Wd(2)-dK%6Q=U0k!6g+?VSmA2ZU\4>:>$@QknW4>efI3''Id60P)tK4s1t13+ZQ-4q0V.AMI^Z+<Wd)A7K+5%6Q=U0kENk+?VVo3G(Ga4>:>$Aj.=[4?"s*@Qk5`0P*!n4s1t12D[=)4q0V.AMPu(+<Wd)A3"*_%6Q=U1,;$9+?VPnA2HIZ4>:>%1Hlp(4?$h_2EhR40P*!r4s1t13&E<G4q0V.AMQ,,+<Wd)3&EET%6Q=U1,_<=+?VY<0Jbm%4>:>%2a/?,4>p_\3''Id60P*"!4s1t13ArfS4q0V.AMQ80+<Wd+@UV5[%6Q=U11<?h+?VMA2)d].4>:>%@QknW4?##S3Bdm70P*"L4s1t13&P8(4q0V.AMRd[+<Wd+0fNZ-%6Q=U11`Wl+?VS?@UhS24>:>%Aj.=[4?-b/@6P,_0P*$o4s1t12E5,W4q0V.AMZ&)+<Wd(1,UmP%6Q=U1GV-:+?VVp1,;$&4>:>&1Hlp(4?58R0g6%/0P*$s4s1t12D\kt4q0V.AMZ2-+<Wd,3&rr^%6Q=U1H%E>+?VVp1c.B*4>:>&2a/?,4>euT@m1>a0P*%"4s1t11hJU$4q0V.AMZ>1+<Wd)2J-Pb%6Q=U1LWHi+?VM>3+b>`4>:>&@QknW4>nm(2*MI30P*%M4s1t12Ing*4q0V.AM[j\+<Wd(1,LdN%6Q=U1M&`m+?VMk1c[`/4>:>&Aj.=[4>f,S3Bdm70P*''p4s1t12IpE/4q0V.AMc,*+<Wd(3&Y50%6Q=U1bq6;+?VS?1GD!%4>:>''1Hlp(4?#,P@m1>a0P*''t4s1t12D@%!4q0V.AMc8.+<Wd+1,1UL%6Q=U1c@N?+?VV<1c@N,4>:>''2a/?,4>nuM0g6%/0P*(#4s1t12E*NK4q0V.AMcD2+<Wd+An<_]%6Q=U1grQj+?VSA1LWHV4>:>''@QknW4?-k`1Hl710P*(N4s1t13+Og%4q0V.AMdp]+<Wd,1h/7(%6Q=U1hAin+?VMm0fD3)4>:>''Aj.=[4>eoS2*MI30P**q4s1t12)I''u4q0V.AMl2++<Wd*0Oln&%6Q=U2)7?<+?VPl1b_*&4>:>(1Hlp(4>g\^2a.[50P**u4s1t12)$mt4q0V.AMl>/+<Wd''ART+5%6Q=U2)[W@+?VMm@:VP24>:>(2a/?,4>nuO@6P,_0P*+$4s1t13&3<L4q0V.AMlJ3+<Wd,0JR!"%6Q=U2.8Zk+?VPA2)%3''4>:>(@QknW4?5,SANgPc0P*+O4s1t12`G2%4q0V.AMn!^+<Wd(1b`E''%6Q=U2.\ro+?VY@A7Ie44>:>(Aj.=[4>g_/1d2@20P*-r4s1t12dp8T4q0V.AMu8,+<Wd)3&``Z%6Q=U2DRH=+?VP<1c7H+4>:>)1Hlp(4?$_,1-Q.00P*.!4s1t12e?N34q0V.AMuD0+<Wd*2.U/[%6Q=U2E!`A+?VM82`Eo04>:>)2a/?,4>nrT2*MI30P*.%4s1t12*!HL4q0V.AMuP4+<Wd,0JI*&%6Q=U2IScl+?VM9AiMs`4>:>)@QknW4?#911Hl710P*.P4s1t12dn[#4q0V.AN"''_+<Wd(2J-Ma%6Q=U2J#&p+?VMn3ANc-4>:>)Aj.=[4?5)M1d2@20P*0s4s1t12Ind&4q0V.AN)>-+<Wd(@l?#)%6Q=U2_mQ>+?VM?0kNTY4>:>*1Hlp(4>erM0Koq.0P*1"4s1t12)-sF4q0V.AN)J1+<Wd)AMdp]%6Q=U2`<iB+?VM>AMQFY4>:>*2a/?,4>o!(3''Id60P*1&4s1t13B0#T4q0V.AN)V5+<Wd+0fN].%6Q=U2dnlm+?VVB0f;-(4>:>*@QknW4?,>V@6P-3DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,bAN+*_+<Wd,0JG1E%6Q=U2e5)p+?VM<0kENX4>:>*ANh4Z4>gV,Aj-Yd0P*1T4s1t13&+ns4q0V.AN2A-+<Wd)11W:,%6Q=U3&*T>+?VP;2)mc/4>:>+1-Qg''4?,&O0g6%/0P*4"4s1t13Ft!(4q0V.AN2M1+<Wd,2Dd*O%6Q=U3&NlB+?VYm2J#&]4>:>+2Ei6+4?6h/@m1>a0P*4&4s1t12E<O''4q0V.AN2Y5+<Wd(3FOd/%6Q=U3&s/F+?VP;A2?CY4>:>+@6PeV4>euPANgPc0P*4Q4s1t12D[''G4q0V.AN40`+<Wd(1h/I.%6Q=U3+P2q+?VVAA2ug_4>:>+ANh4Z4>p_+@m1>a0P*4U4s1t12.80p4q0V.AN;G.+<Wd*1hAR/%6Q=U3AE]?+?VVC3Fb5^4>:>,1-Qg''4>pY,@6P,_0P*7#4s1t12*!BL4q0V.AN;S2+<Wd+@l.[Z%6Q=U3AiuC+?VMn11i]Z4>:>,2Ei6+4>pb0ANgPc0P*7''4s1t12`"l&4q0V.AN;_6+<Wd,3&bA3%6Q=U3B98G+?VJl1H7Q-4>:>,@6PeV4?"s+2a.[50P*7R4s1t12.AOT4q0V.AN=6a+<Wd*3&ro]%6Q=U3Fk;r+?VP<1LrZY4>:>,ANh4Z4>o)T@6P,_0P*7V4s1t12`<ZS4q0V.ARR8V+<Wd)0OnQU%6Q=U@50qg+?VMj3FY/]4>:>T1-Qg''4>gP(3Bdm70P+ZK4s1t11hA@"4q0V.ARRDZ+<Wd+0f:gP%6Q=U@5U4k+?VPl2IScY4>:>T2Ei6+4?#&U@Qk5`0P+ZO4s1t11hC)M4q0V.ARRP^+<Wd)2`Nf]%6Q=U@6$Lo+?VSp2).9(4>:>T@6PeV4>g_10Koq.0P+[%4s1t12Do)T4q0V.ART(4+<Wd)2_ec*%6Q=U@:VPE+?VMnA2la^4>:>TANh4Z4>f,Y1d2@20P+[)4s1t12.80n4q0V.AR[>W+<Wd(A7K.6%6Q=U@PL%h+?VMn@:_V34>:>U1-Qg''4>eoR0g6%/0P+]L4s1t13B(M-4q0V.AR[J[+<Wd+An5F9%6Q=U@Pp=l+?VPA1c7H+4>:>U2Ei6+4>f$/1d2@20P+]P4s1t12)R.$4q0V.AR[V_+<Wd)0P"cZ%6Q=U@Q?Up+?VJl1LWHV4>:>U@6PeV4>pe.A3LGb0P+^&4s1t12e?SX4q0V.AR].5+<Wd+11N7,%6Q=U@UqYF+?VV?0P*EW4>:>UANh4Z4>f-01d2@20P+^*4s1t11hJIS4q0V.ARdDX+<Wd''AhmdY%6Q=U@kg.i+?VMk1M&`Z4>:>V1-Qg''4?$h[@m1>a0P+`M4s1t12E*C"4q0V.ARdP\+<Wd+2)/N''%6Q=U@l6Fm+?VM<2`!W,4>:>V2Ei6+4?#,SAj-Yd0P+`Q4s1t13&"hu4q0V.ARd\`+<Wd(2)m?T%6Q=U@lZ^q+?VYn1hJo\4>:>V@6PeV4>^Y,A3LGb0P+a''4s1t12J"XS4q0V.ARf46+<Wd+@kfc''%6Q=U@q7bG+?VMk0KD<+4>:>VANh4Z4>noQ0Koq.0P+a+4s1t12)@."4q0V.ARmJY+<Wd*2DJf-%6Q=UA2-7j+?VPn1-%N-4>:>W1-Qg''4?,5Y@6P,_0P+cN4s1t12DmHQ4q0V.ARmV]+<Wd,2.g;]%6Q=UA2QOn+?VSo@Q?U]4>:>W2Ei6+4>erO@Qk5`0P+cR4s1t12dnKu4q0V.ARmba+<Wd*A2%FU%6Q=UA2ugr+?VYAAS"%74>:>W@6PeV4>f!-0g6%/0P+d(4s1t12eHPS4q0V.ARo:7+<Wd*1hC5^%6Q=UA7RkH+?VP<0k<HW4>:>WANh4Z4?,8S2a.[50P+d,4s1t12Ip5N4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=UAM?:j+?VSk3Fk;_4>:>X0g6^&4>nrL0g6%/0P+fN4s1t12Dnnt4q0V.AS!Y]+<Wd(1H%0U%6Q=UAMcRn+?VP<AMH@X4>:>X2*N-*4>p\/1Hl710P+fR4s1t12.U9-4q0V.AS!ea+<Wd(1c8c,%6Q=UAN2jr+?VY@@5pF[4>:>X3BeQ.4>^V+@m1>a0P+g(4s1t12IeX"4q0V.AS#=7+<Wd+@V''%5%6Q=UARdnH+?VMk1h&WX4>:>XA3M+Y4>o''.0Koq.0P+g,4s1t13&3L(4q0V.AS#I;+<Wd)3+4a0%6Q=UAhZCk+?VM<1M&`Z4>:>Y0g6^&4>erO1d2@20P+iO4s1t12I^0*4q0V.AS*_^+<Wd)@Q$,.%6Q=UAi)[o+?VJl3A`o/4>:>Y2*N-*4>nuP1-Q.00P+iS4s1t12)@''K4q0V.AS*kb+<Wd+1,3?(%6Q=UAiMss+?VJm0P!?V4>:>Y3BeQ.4>^YYANgPc0P+j)4s1t12)dC(4q0V.AS,C8+<Wd)1,*-#%6Q=UAn+"I+?VYBAn=.84>:>YA3M+Y4>o)U1d2@20P+j-4s1t12_m9O4q0V.AS,O<+<Wd(11k,^%6Q=V0JG[5+?VM:@50qT4>:A$0g6^&4>nlRAj-Yd0P3!o4s1t13+?H24q0V.AhZ#)+<Wd)2DI$P%6Q=V0Jks9+?VS;3B9844>:A$2*N-*4>o,Y0Koq.0P3!s4s1t13&rp04q0V.AhZ/-+<Wd*3&NHT%6Q=V0K;6=+?VSAAn4(74>:A$3BeQ.4>o)V0Koq.0P3"I4s1t12)[7"4q0V.Ah[[X+<Wd(1c%*T%6Q=V0Om9h+?VYA1,1s%4>:A$A3M+Y4?##S@6P,_0P3"M4s1t12dnBo4q0V.Ah[g\+<Wd)0K*N,%6Q=V0ebd6+?VMm0Om9U4>:A%0g6^&4>nlQ3Bdm70P3$p4s1t13&*F(4q0V.Ahc)*+<Wd(3AEBT%6Q=V0f2'':+?VP9A7Ie44>:A%2*N-*4?"uS1d2@20P3$t4s1t12_\fT4q0V.Ahc5.+<Wd)ART"2%6Q=V0fV?>+?VPl2)%3''4>:A%3BeQ.4?##T0Koq.0P3%J4s1t12ISR%4q0V.AhdaY+<Wd+3+6>]%6Q=V0k3Bi+?VMm11WQX4>:A%A3M+Y4>^V-0Koq.0P3%N4s1t12.9rM4q0V.Ahdm]+<Wd(2*#/1%6Q=V1,(m7+?VY@AMZLZ4>:A&0g6^&4>p_)2a.[50P3''q4s1t12e-H/4q0V.Ahl/++<Wd,2E<c]%6Q=V1,M0;+?VP;0P3KX4>:A&2*N-*4?$h]2EhR40P3''u4s1t12`E^-4q0V.Ahl;/+<Wd+2E,22%6Q=V1,qH?+?VM;1,D*''4>:A&3BeQ.4?5>TANgPc0P3(K4s1t13+b0/4q0V.AhmgZ+<Wd)2E3WZ%6Q=V11NKj+?VMkAMH@X4>:A&A3M+Y4>^YY0Koq.0P3(O4s1t12_nrT4q0V.Ahms^+<Wd''AM@RW%6Q=V1GD!8+?VM;@5^:Y4>:A''0g6^&4>f,QAj-Yd0P3*r4s1t12)I$D4q0V.Ahu5,+<Wd)1H7''P%6Q=V1Gh9<+?VYA1,qH,4>:A''2*N-*4>eiM3''Id60P3+!4s1t11hC2X4q0V.AhuA0+<Wd,@l\$_%6Q=V1H7Q@+?VSo@5L.W4>:A''3BeQ.4>es)3''Id60P3+L4s1t13+Od$4q0V.Ai!m[+<Wd+3&NNV%6Q=V1LiTk+?VV=1H.K,4>:A''A3M+Y4?5921-Q.00P3+P4s1t12IndY4q0V.Ai"$_+<Wd(Ahl8.%6Q=V1b_*9+?VMi@q.\34>:A(0g6^&4>o)RANgPc0P3-s4s1t13ArcU4q0V.Ai);-+<Wd*1L`%%%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:A(1d3$)4?#&OANgPc0P3.!4s1t12)A]R4q0V.Ai)D0+<Wd+0fNN)%6Q=V1cIT@+?VYE3&Nl/4>:A(3''JH-4?$k\0g6%/0P3.%4s1t12.C!&4q0V.Ai*p[+<Wd,2E*QY%6Q=V1h&Wk+?VYB2)%3''4>:A(@m2"X4?$h\Aj-Yd0P3.P4s1t12`>8-4q0V.Ai+''_+<Wd(1LW%&%6Q=V1hJoo+?VYA2`<i/4>:A)0KpU%4?5D^3Bdm70P30s4s1t12e$5N4q0V.Ai2>-+<Wd+3A`QV%6Q=V2)@E=+?VPn2)mc/4>:A)1d3$)4>^V-0g6%/0P31"4s1t12eHSW4q0V.Ai2J1+<Wd*3Ar`Y%6Q=V2)d]A+?VVmAMu^]4>:A)3''JH-4>nm*1Hl710P31&4s1t12)JfR4q0V.Ai4!\+<Wd''ART%3%6Q=V2.A`l+?VYD2`X&24>:A)@m2"X4>gY]2a.[50P31Q4s1t12ISKu4q0V.Ai4-`+<Wd(0On]Y%6Q=V2.f#p+?VM<0ekj$4>:A*0KpU%4?-h/0g6%/0P33t4s1t13&EBL4q0V.Ai;D.+<Wd*3&P51%6Q=V2D[N>+?VYC0Jks&4>:A*1d3$)4>elN@6P,_0P34#4s1t12)JlU4q0V.Ai;P2+<Wd(2ISC*%6Q=V2E*fB+?VYA0JG["4>:A*3''JH-4>p_03''Id60P34''4s1t12.C#P4q0V.Ai='']+<Wd)A7IM]%6Q=V2I\im+?VP?2)@E*4>:A*@m2"X4>gV&Aj-Yd0P34R4s1t12.AFR4q0V.Ai=3a+<Wd)3&33P%6Q=V2J,,q+?VV;3As&14>:A+0KpU%4>euT3''Id60P36u4s1t12e"Kr4q0V.AiDJ/+<Wd)2)I9V%6Q=V2`!W?+?VPB2)IK+4>:A+1d3$)4>^V0@Qk5`0P37$4s1t12I\L%4q0V.AiDV3+<Wd+2`,)0%6Q=V2`EoC+?VYC3+>&\4>:A+3''JH-4>eoOAj-Yd0P37(4s1t12D[("4q0V.AiF-^+<Wd)1c&Q(%6Q=V2e"rn+?VY<@:;>/4>:A+@m2"X4>o&W@m1>a0P37S4s1t13&"hs4q0V.AiF9b+<Wd+@kfZ$%6Q=V2eG5r+?VM93B9844>:A,0KpU%4>o0.0Koq.0P3:!4s1t12)@0N4q0V.AiMP0+<Wd+2eG''6%6Q=V3&<`@+?VP:@lQX]4>:A,1d3$)4>p\Z1d2@20P3:%4s1t12Ig?.4q0V.AiM\4+<Wd+@kof''%6Q=V3&a#D+?VMk2).9(4>:A,3''JH-4?,3,@6P,_0P3:)4s1t13&4oS4q0V.AiO3_+<Wd,2)&N(%6Q=V3+>&o+?VPk1,D*''4>:A,@m2"X4?-q5@Qk5`0P3:T4s1t12Dnqt4q0V.AiO?c+<Wd(AnGL9%6Q=V3+b>s+?VMn@l$:X4>:A-0KpU%4>^Y]0g6%/0P3="4s1t13&i`P4q0V.AiVV1+<Wd)2DJf-%6Q=V3AWiA+?VV<2DmZ-4>:A-1d3$)4?#&O3Bdm70P3=&4s1t12DA`O4q0V.AiVb5+<Wd(0fLpQ%6Q=V3B'',E+?VM:0ekj$4>:A-3''JH-4>f&W@Qk5`0P3=*4s1t12.ea%4q0V.AiX9`+<Wd,0OZ_#%6Q=V3FY/p+?VVC1h/]Y4>:A-@m2"X4?5,V1-Q.00P3=U4s1t12.\^+4q0V.AiXEd+<Wd)2`,,1%6Q=V3G(Gt+?VP91,hB+4>:AU0KpU%4>f-01Hl710P4`J4s1t12)-pE4q0V.AmmGY+<Wd(0kN=-%6Q=V@5C(i+?VV;AiMs`4>:AU1d3$)4>eoK3''Id60P4`N4s1t12Ie[+4q0V.AmmS]+<Wd,2IeR-%6Q=V@5g@m+?VS;3+4u[ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0P4`Q4s1t11hJHs4q0V.Amm\`+<Wd''An>O;%6Q=V@:;>B+?VSp3FtA`4>:AU@QknW4>o,SA3LGb0P4a''4s1t12)Sl$4q0V.Amo46+<Wd,2)%!R%6Q=V@:_VF+?VSC@k^(U4>:AUAj.=[4?,;\2EhR40P4cJ4s1t12e?PV4q0V.An!JY+<Wd(3&tS7%6Q=V@PU+i+?VP;0Om9U4>:AV1Hlp(4?5>S0Koq.0P4cN4s1t13&WX&4q0V.An!V]+<Wd(2DI0T%6Q=V@Q$Cm+?VYD2e"r[4>:AV2a/?,4>g_20Koq.0P4cR4s1t13+?>V4q0V.An!ba+<Wd+1h/@+%6Q=V@UVGC+?VY=2)d].4>:AV@QknW4>ep*3Bdm70P4d(4s1t12Do&V4q0V.An#:7+<Wd(AN49c%6Q=V@V%_G+?VS?2.JfZ4>:AVAj.=[4>nlO1d2@20P4fK4s1t12e4gX4q0V.An*PZ+<Wd(@5hd^%6Q=V@kp4j+?VSoARRb34>:AW1Hlp(4?$h_A3LGb0P4fO4s1t13+b''/4q0V.An*\^+<Wd(2.8F-%6Q=V@l?Ln+?VMj@5C(V4>:AW2a/?,4>nm%@m1>a0P4fS4s1t12DnuR4q0V.An*hb+<Wd*1H73T%6Q=V@pqPD+?VY<0KD<+4>:AW@QknW4?#/V1Hl710P4g)4s1t12`EKP4q0V.An,@8+<Wd*ARo45%6Q=V@q@hH+?VYC2`*]-4>:AWAj.=[4?,2Y@Qk5`0P4iL4s1t12.AI%4q0V.An3V[+<Wd*@5g#,%6Q=VA26=k+?VYBARRb34>:AX1Hlp(4?,;W0Koq.0P4iP4s1t12)8ZN4q0V.An3b_+<Wd*0fWc/%6Q=VA2ZUo+?VMn@:;>/4>:AX2a/?,4>o''.@m1>a0P4iT4s1t13+?GS4q0V.An3nc+<Wd(@V0(5%6Q=VA77YE+?VYm2J,,^4>:AX@QknW4>gY\0g6%/0P4j*4s1t12I\X+4q0V.An5F9+<Wd)@l7^Z%6Q=VA7[qI+?VVm@:VP24>:AXAj.=[4?-eYAj-Yd0P4lM4s1t13A<-q4q0V.An<\\+<Wd+An*\^%6Q=VAMQFl+?VM;3+>&\4>:AY1Hlp(4>ns(@m1>a0P4lQ4s1t13Fss(4q0V.An<h`+<Wd,AMRd[%6Q=VAMu^p+?VM<1b_*&4>:AY2a/?,4>^V)@Qk5`0P4lU4s1t13&4rR4q0V.An<td+<Wd*1,V''U%6Q=VARRbF+?VVA3Fb5^4>:AY@QknW4>gY(2EhR40P4m+4s1t13&icU4q0V.An>L:+<Wd)A79(6%6Q=VAS"%J+?VYB@l6FZ4>:AYAj.=[4>es+0g6%/0P4oN4s1t11hA[U4q0V.AnEb]+<Wd+@U_5Z%6Q=VAhlOm+?VS;0KD<+4>:AZ1Hlp(4>es)A3LGb0P4oR4s1t13ArQO4q0V.AnEna+<Wd*0P"cZ%6Q=VAi;gq+?VPmAiW$a4>:AZ2a/?,4?#0/0Koq.0P4oV4s1t11hAF"4q0V.AnF%e+<Wd*3&*6R%6Q=VAmmkG+?VVB0etp%4>:AZ@QknW4>gVW3Bdm70P4p,4s1t12.^AX4q0V.AnGR;+<Wd+@5''B!%6Q=VAn=.K+?VYD3Fb5^4>:AZAj.=[4?5;RANgPc0eb:84s1t12_[4&4q0V/0JG4F+<Wd)@q''%6%6Q@!0JYg7+?VMA1c.B*4>AND1Hlp(4>o!(3Bdm70eb:<4s1t12`EO&4q0V/0JG@J+<Wd+3&G/0%6Q@!0K)*;+?VPo0f2''''4>AND2a/?,4?,)T1Hl710eb:@4s1t12)mBG4q0V/0JGLN+<Wd*0k<.*%6Q@!0O[-f+?VM;3+G,]4>AND@QknW4?#5S@6P-3DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c0JI!#+<Wd,2IeI*%6Q@!0P!?i+?VM=0JPa#4>ANDANh4Z4>g_/2EhR40eb:n4s1t12_d*B4q0V/0JP7F+<Wd(@U_/X%6Q@!0ekj7+?VVn0k!6T4>ANE1-Qg''4?6h0@m1>a0eb=<4s1t12I\X%4q0V/0JPCJ+<Wd(3AP/0%6Q@!0f;-;+?VYq11i]Z4>ANE2Ei6+4?#932a.[50eb=@4s1t12E*NR4q0V/0JPON+<Wd)1,`W+%6Q@!0f_E?+?VJm2J,,^4>ANE@6PeV4?#-+0g6%/0eb=k4s1t12eG$X4q0V/0JR''$+<Wd)A2%IV%6Q@!0k<Hj+?VYB1G_3(4>ANEANh4Z4>p\)2a.[50eb=o4s1t11hC8Q4q0V/0JY=G+<Wd*2.SI+%6Q@!1,1s8+?VM92e"r[4>ANF1-Qg''4>o/T2a.[50eb@=4s1t12J+aV4q0V/0JYIK+<Wd,0K:aM%6Q@!1,V6<+?VV<2_[E)4>ANF2Ei6+4>f,Z2EhR40eb@A4s1t12`*HO4q0V/0JYUO+<Wd)1c.-T%6Q@!1-%N@+?VMk1,hB+4>ANF@6PeV4?5)R2*MI30eb@l4s1t12dn^$4q0V/0J[-%+<Wd+@koi(%6Q@!11WQk+?VMAA77Y24>ANFANh4Z4>es(@m1>a0eb@p4s1t13&30A4q0V/0JbCH+<Wd+1H&i/%6Q@!1GM''9+?VVD3&*T+4>ANG1-Qg''4?,#K0Koq.0ebC>4s1t12E<QI4q0V/0JbOL+<Wd(2Deu/%6Q@!1Gq?=+?VV;1H%E+4>ANG2Ei6+4?##O2a.[50ebCB4s1t13AG#T4q0V/0Jb[P+<Wd(0k*%)%6Q@!1H@WA+?VJl2.f#]4>ANG@6PeV4?5A[2*MI30ebCm4s1t12D[?O4q0V/0Jd3&+<Wd''AMIUW%6Q@!1LrZl+?VM;Ai;g^4>ANGANh4Z4>o*01Hl710ebCq4s1t13&*7!4q0V/0JkII+<Wd(3AG#-%6Q@!1bh0:+?VPm@PU+V4>ANH1-Qg''4>^V''0Koq.0ebF?4s1t12)o2.4q0V/0JkUM+<Wd(1G`K(%6Q@!1c7H>+?VP<A2ZU\4>ANH2Ei6+4?5610g6%/0ebFC4s1t11hJaY4q0V/0JkaQ+<Wd''Ah[XW%6Q@!1c[`B+?VVC2D[N+4>ANH@6PeV4?5A]0Koq.0ebFn4s1t12*!HO4q0V/0Jm9''+<Wd,0JtdQ%6Q@!1h8cm+?VSCAn!q54>ANHANh4Z4>^V\@6P,_0ebFr4s1t13&"qu4q0V/0JtOJ+<Wd*2*!BT%6Q@!2).9;+?VPl3&3Z,4>ANI1-Qg''4>gS.@m1>a0ebI@4s1t12*#5-4q0V/0Jt[N+<Wd(Ai4*_%6Q@!2)RQ?+?VPB0Ju$''4>ANI2Ei6+4?,5Y0g6%/0ebID4s1t12)$an4q0V/0JtgR+<Wd(A7dS\%6Q@!2*!iC+?VJl2*!i04>ANI@6PeV4?#311Hl710ebIo4s1t11hC5U4q0V/0K!?(+<Wd+1,iW*%6Q@!2.Sln+?VP;3AE],4>ANIANh4Z4>o)P1Hl710ebIs4s1t13A<HJ4q0V/0K(UK+<Wd(@lHD3%6Q@!2DIB<+?VJl@V.e54>ANJ1-Qg''4>g_03Bdm70ebLA4s1t13&+o$4q0V/0K(aO+<Wd,0Jb[P%6Q@!2DmZ@+?VV;3&Ef.4>ANJ2Ei6+4?#-+@Qk5`0ebLE4s1t11hC)R4q0V/0K(mS+<Wd+3+Oj0%6Q@!2E<rD+?VP:0P3KX4>ANJ@6PeV4>pYY2*MI30ebLp4s1t12.g>V4q0V/0K*E)+<Wd''AMcD2%6Q@!2Inuo+?VS@@pqP14>ANJANh4Z4>pbZ1-Q.00ebLt4s1t13+?GT4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@!2_[E<+?VVm@:_V34>ANK0g6^&4?-h)@6P,_0ebOA4s1t13+?DQ4q0V/0K1dO+<Wd(AhYu(%6Q@!2`*]@+?VSpAn+"64>ANK2*N-*4?$k^@m1>a0ebOE4s1t12e?K14q0V/0K1pS+<Wd+1G^mP%6Q@!2`NuD+?VV>2I\iZ4>ANK3BeQ.4>f$.0Koq.0ebOp4s1t12I^,S4q0V/0K3H)+<Wd,2eFj0%6Q@!2e,#o+?VYB1Gh9)4>ANKA3M+Y4>f-2@Qk5`0ebOt4s1t12)I%"4q0V/0K3T-+<Wd,1hJX0%6Q@!3&!N=+?VPmAR[h44>ANL0g6^&4>gSX2*MI30ebRB4s1t13B9!/4q0V/0K:jP+<Wd(@l$,/%6Q@!3&EfA+?VMn0f;-(4>ANL2*N-*4?5;[0Koq.0ebRF4s1t12)@0F4q0V/0K;!T+<Wd+11i7)%6Q@!3&j)E+?VPj1GM''&4>ANL3BeQ.4>gP+1d2@20ebRq4s1t13Ft-''4q0V/0K<N*+<Wd(AN;S2%6Q@!3+G,p+?VSp1,qH,4>ANLA3M+Y4?,-+3Bdm70ebUA4s1t13&<HO4q0V/0KCjO+<Wd+2`*HW%6Q@!3ANc@+?VVq@q@h54>ANM1Hlp(4?-k01-Q.00ebUE4s1t12`>/*4q0V/0KD!S+<Wd(AiDG.%6Q@!3As&D+?VYD3As&14>ANM2a/?,4?#5X@m1>a0ebUI4s1t12E!<E4q0V/0KD-W+<Wd(1h:2^%6Q@!3FP)o+?VP;AMlX\4>ANM@QknW4>^Y.1Hl710ebUt4s1t13&+o!4q0V/0KEZ-+<Wd*2.JU0%6Q@!3FtAs+?VMm@Q6O\4>ANMAj.=[4?5<0A3LGb0ed#i4s1t13+XdP4q0V/0OZ\"+<Wd+2J+s5%6Q@!@5:"h+?VM<3+b>`4>ANu1Hlp(4>p\]1Hl710ed#m4s1t12IndW4q0V/0OZh&+<Wd)@l$).%6Q@!@5^:l+?VP92eG5_4>ANu2a/?,4>em(2a.[50ed#q4s1t12`3?M4q0V/0OZt*+<Wd(AN+-`%6Q@!@:;>B+?VJm0fV?+4>ANu@QknW4>nm%0Koq.0ed$G4s1t12.gDY4q0V/0O\KU+<Wd(@kol)%6Q@!@:_VF+?VS?1GM''&4>ANuAj.=[4?5*(ANgPc0ed&j4s1t13Ab5"4q0V/0Ocb#+<Wd*11E7-%6Q@!@PU+i+?VPl@Q?U]4>AO!1Hlp(4>pb,3''Id60ed&n4s1t13AE?N4q0V/0Ocn''+<Wd)2_[6U%6Q@!@Q$Cm+?VM;@q%V24>AO!2a/?,4>ep,1Hl710ed&r4s1t11hJU"4q0V/0Od%++<Wd,0k34-%6Q@!@UVGC+?VVmAhcIY4>AO!@QknW4>ep)3''Id60ed''H4s1t12.\^V4q0V/0OeQV+<Wd+An*S[%6Q@!@V%_G+?VPmAMcR[4>AO!Aj.=[4>^V/ANgPc0ed)k4s1t12`>/$4q0V/0Olh$+<Wd)3B/o\%6Q@!@kp4j+?VVA2.\r\4>AO"1Hlp(4>noK@6P,_0ed)o4s1t13&30G4q0V/0Olt(+<Wd''Ai2S4%6Q@!@l?Ln+?VJmA7[q64>AO"2a/?,4?5)OANgPc0ed)s4s1t13Fb!X4q0V/0Om+,+<Wd)0ebUO%6Q@!@pqPD+?VPn0k<HW4>AO"@QknW4>pb*1d2@20ed*I4s1t13AriS4q0V/0OnWW+<Wd''AN2Y5%6Q@!@q@hH+?VMi1GM''&4>AO"Aj.=[4?5<23''Id60ed,l4s1t11hA@P4q0V/0Oun%+<Wd(@lJ!`%6Q@!A26=k+?VSC@Q?U]4>AO#1Hlp(4>gS-2a.[50ed,p4s1t13+?H04q0V/0P!%)+<Wd*An#:7%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AO#2Ei6+4?#&U3Bdm70ed,s4s1t12)f&X4q0V/0P!.,+<Wd+1,r`,%6Q@!A2ugr+?VY<@kg.V4>AO#@6PeV4>erL0g6%/0ed-I4s1t13A<9K4q0V/0P"ZW+<Wd(2.C#Y%6Q@!A7RkH+?VMkARRb34>AO#ANh4Z4>g_Z0g6%/0ed-M4s1t12DHmF4q0V/0P)q%+<Wd)@P]c''%6Q@!AMH@k+?VS<AhcIY4>AO$1-Qg''4?,$(1-Q.00ed/p4s1t13+4d,4q0V/0P*()+<Wd)A2c>/%6Q@!AMlXo+?VMjA2?CY4>AO$2Ei6+4?,<22*MI30ed/t4s1t13B/uT4q0V/0P*4-+<Wd+@l@d[%6Q@!AN;ps+?VYm2Inu\4>AO$@6PeV4?6t/1Hl710ed0J4s1t12J"RN4q0V/0P+`X+<Wd(0jun&%6Q@!ARmtI+?VM91c%<)4>AO$ANh4Z4>f''+1Hl710ed0N4s1t13&ilP4q0V/0P3"&+<Wd(1HB&2%6Q@!AhcIl+?VP<Ai)[\4>AO%1-Qg''4?-q52*MI30ed2q4s1t12)]#V4q0V/0P3.*+<Wd(1c76V%6Q@!Ai2ap+?VM?0K)*(4>AO%2Ei6+4?#&PAj-Yd0ed2u4s1t12J"m&4q0V/0P3:.+<Wd*Ahc8/%6Q@!AiW$t+?VVqA7Ie44>AO%@6PeV4?,*,0g6%/0ed3K4s1t12DI""4q0V/0P4fY+<Wd)0JYUO%6Q@!An4(J+?VYB2DRH*4>AO%ANh4Z4>o*00Koq.0ed3O4s1t12e?DU4q0V/0eb:F+<Wd+A2n!]%6Q@"0JPa6+?VVo@l$:X4>AQE1-Qg''4?56,2*MI30ek@<4s1t12.L)O4q0V/0ebFJ+<Wd*@pq2X%6Q@"0Ju$:+?VP@0K;6*4>AQE2Ei6+4>nm%2EhR40ek@@4s1t13ArQK4q0V/0ebRN+<Wd+0JPON%6Q@"0KD<>+?VJl3AE],4>AQE@6PeV4?5*,2a.[50ek@k4s1t12)?p?4q0V/0ed*$+<Wd,2E!NY%6Q@"0P!?i+?VM91bh0''4>AQEANh4Z4?-q`0Koq.0ek@o4s1t13&NWO4q0V/0ek@G+<Wd,0f<K*%6Q@"0ekj7+?VP?2)RQ,4>AQF1-Qg''4?5?42*MI30ekC=4s1t12.AF#4q0V/0ekLK+<Wd(1GNE(%6Q@"0f;-;+?VSB1H7Q-4>AQF2Ei6+4>o,T1-Q.00ekCA4s1t12E3L''4q0V/0ekXO+<Wd(1h/O0%6Q@"0f_E?+?VS:2e>/^4>AQF@6PeV4>gSW0Koq.0ekCl4s1t13+b*[4q0V/0em0%+<Wd(0fW]-%6Q@"0k<Hj+?VM?1,qH,4>AQFANh4Z4>es)0g6%/0ekCp4s1t12Dm3E4q0V/0etFH+<Wd)2E3HU%6Q@"1,1s8+?VVo2.\r\4>AQG1-Qg''4?-k.1Hl710ekF>4s1t13&*+!4q0V/0etRL+<Wd+1cAi-%6Q@"1,V6<+?VY<2Inu\4>AQG2Ei6+4?$b\Aj-Yd0ekFB4s1t12)/]T4q0V/0et^P+<Wd+2.g;]%6Q@"1-%N@+?VP@@5C(V4>AQG@6PeV4>o''.3Bdm70ekFm4s1t12J-AP4q0V/0f!6&+<Wd+2ISF+%6Q@"11WQk+?VVp3&*T+4>AQGANh4Z4>f#T@6P,_0ekFq4s1t13A<3B4q0V/0f(LI+<Wd*2E3HU%6Q@"1GM''9+?VS:2`<i/4>AQH1-Qg''4?#!+2*MI30ekI?4s1t13+Od#4q0V/0f(XM+<Wd)11`I0%6Q@"1Gq?=+?VM:0f_E,4>AQH2Ei6+4>p\]A3LGb0ekIC4s1t13+OgT4q0V/0f(dQ+<Wd)0JI''%%6Q@"1H@WA+?VM@3FtA`ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0ekIm4s1t12DI1&4q0V/0f*9&+<Wd)2J-Ma%6Q@"1LiTk+?VVo2D@<(4>AQHA3M+Y4>nrOANgPc0ekIq4s1t12)Si!4q0V/0f*E*+<Wd)AMQ&*%6Q@"1b_*9+?VP@11WQX4>AQI0g6^&4?-q22a.[50ekL?4s1t13Ab;%4q0V/0f1[M+<Wd,2.eg3%6Q@"1c.B=+?VSA1,qH,4>AQI2*N-*4>o/Q2*MI30ekLC4s1t12E>2*4q0V/0f1gQ+<Wd(1cSr.%6Q@"1cRZA+?VJl1h8cZ4>AQI3BeQ.4?"s''3''Id60ekLn4s1t13+?AW4q0V/0f3?''+<Wd)1c76V%6Q@"1h/]l+?VP>3+>&\4>AQIA3M+Y4>gS-2*MI30ekLr4s1t12dn[&4q0V/0f3K++<Wd(0Jd-$%6Q@"2)%3:+?VMjAN2j_4>AQJ0g6^&4?#3.@Qk5`0ekO@4s1t12I^5P4q0V/0f:aN+<Wd+@5g21%6Q@"2)IK>+?VSm3B0234>AQJ2*N-*4>p\YANgPc0ekOD4s1t12`>/X4q0V/0f:mR+<Wd)2.8L/%6Q@"2)mcB+?VVq3B'',24>AQJ3BeQ.4>gY)A3LGb0ekOo4s1t12.JL$4q0V/0f<E(+<Wd+2D[<V%6Q@"2.Jfm+?VPA0K;6*4>AQJA3M+Y4>eoQ0Koq.0ekOs4s1t12DR!H4q0V/0f<Q,+<Wd*@:VA^%6Q@"2D@<;+?VPn2.A`Y4>AQK0g6^&4?$h`A3LGb0ekRA4s1t12IS=P4q0V/0fCgO+<Wd*@:_,V%6Q@"2DdT?+?VMn2_[E)4>AQK2*N-*4>pe-1Hl710ekRE4s1t12.eTt4q0V/0fCsS+<Wd)1H8l.%6Q@"2E3lC+?VPm@5pF[4>AQK3BeQ.4>o,U2EhR40ekRp4s1t11hA@#4q0V/0fEK)+<Wd(AMGl&%6Q@"2Ieon+?VVo1,_<*4>AQKA3M+Y4>^V[2a.[50ekRt4s1t13&"hr4q0V/0fEW-+<Wd*2D[0R%6Q@"2_[E<+?VYB3Fb5^4>AQL0g6^&4>ns*@Qk5`0ekUB4s1t12E!=$4q0V/0fLmP+<Wd)1,ic.%6Q@"2`*]@+?VPl@UhS24>AQL2*N-*4?-k12*MI30ekUF4s1t12_d3L4q0V/0fM$T+<Wd*Ai;Y5%6Q@"2`NuD+?VM91c@N,4>AQL3BeQ.4?,#S2a.[50ekUq4s1t12)AfR4q0V/0fNQ*+<Wd,0K*K+%6Q@"2e,#o+?VP;3B0234>AQLA3M+Y4>es-1-Q.00ekUu4s1t13&YA&4q0V/0fN].+<Wd+AiVk8%6Q@"3&!N=+?VV;0Ju$''4>AQM0g6^&4?58R2a.[50ekXC4s1t13&NEL4q0V/0fUsQ+<Wd+An3nc%6Q@"3&EfA+?VPm2*!i04>AQM2*N-*4?#''+A3LGb0ekXG4s1t12DmL,4q0V/0fV*U+<Wd*2_eo.%6Q@"3&j)E+?VS?0Jks&4>AQM3BeQ.4?#5T2a.[50ekXr4s1t13&,#S4q0V/0fWW++<Wd+A2.XZ%6Q@"3+G,p+?VY@3&j)24>AQMA3M+Y4>^YY2EhR40ekY!4s1t12E*WR4q0V/0fWc/+<Wd*2.AR0%6Q@"3A<W>+?VVm@pqP14>AQN0g6^&4?5>S2a.[50ek[D4s1t12D[+#4q0V/0f_$R+<Wd,2)I6U%6Q@"3A`oB+?VYB1Gq?*4>AQN2*N-*4?,0,3''Id60ek[H4s1t12D[*E4q0V/0f_0V+<Wd*2`*6Q%6Q@"3B02F+?VMn3&*T+4>AQN3BeQ.4?#$-0Koq.0ek[s4s1t11hAX,4q0V/0f`],+<Wd)0JPCJ%6Q@"3Fb5q+?VP>2`*]-4>AQNA3M+Y4>ns+Aj-Z8DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c0f`f/+<Wd)@Q$#+%6Q@"3G(Gt+?VP>1M/f[4>AR!0KpU%4>g\*2a.[50em)k4s1t12`5)(4q0V/0juh$+<Wd,0Oun%%6Q@"@5C(i+?VVm@kg.V4>AR!1d3$)4?,)VA3LGb0em)o4s1t12E*X,4q0V/0jut(+<Wd)2)8c-%6Q@"@5g@m+?VM<1GM''&4>AR!3''JH-4?,8S3''Id60em)s4s1t12`G;*4q0V/0k"KS+<Wd+0OZ_#%6Q@"@:DDC+?VV<0JYg$4>AR!@m2"X4>p\+0g6%/0em*I4s1t11hALQ4q0V/0k"WW+<Wd*ARdY_%6Q@"@:h\G+?VV;1h/]Y4>AR"0KpU%4?#011d2@20em,l4s1t12E<I%4q0V/0k)n%+<Wd)@Q?>1%6Q@"@P^1j+?VP;2E*f/4>AR"1d3$)4>efK@m1>a0em,p4s1t11hJ^(4q0V/0k*%)+<Wd(2`*3P%6Q@"@Q-In+?VP<0K20)4>AR"3''JH-4>pY,1-Q.00em,t4s1t13+QK04q0V/0k+QT+<Wd(1M''uY%6Q@"@U_MD+?VP>AN2j_4>AR"@m2"X4?$h\3''Id60em-J4s1t12.gAX4q0V/0k+]X+<Wd)1GN<%%6Q@"@V.eH+?VP<@Q-I[4>AR#1-Qg''4?$k1ANgPc0em/o4s1t12.\LP4q0V/0k3%(+<Wd(@q7S`%6Q@"@l6Fm+?VM:1H%E+4>AR#2Ei6+4>o)V@6P,_0em/s4s1t12`YG04q0V/0k31,+<Wd*@521S%6Q@"@lZ^q+?VVo1,qH,4>AR#@6PeV4?"rS3Bdm70em0I4s1t12`5,&4q0V/0k4]W+<Wd)ARo@9%6Q@"@q7bG+?VPl@U_M14>AR#ANh4Z4?$\/1-Q.00em0M4s1t11hAFQ4q0V/0k;t%+<Wd*2IeU.%6Q@"A2-7j+?VMnAM?:W4>AR$1-Qg''4?55YAj-Yd0em2p4s1t13&iiU4q0V/0k<+)+<Wd*ARd\`%6Q@"A2QOn+?VSC@q7b44>AR$2Ei6+4?,$(Aj-Yd0em2t4s1t13AG#S4q0V/0k<7-+<Wd''AS*\]%6Q@"A2ugr+?VJm0fM9*4>AR$@6PeV4?,)NAj-Yd0em3J4s1t12)I3N4q0V/0k=cX+<Wd(A7T78%6Q@"A7RkH+?VPm1GV-''4>AR$ANh4Z4?-e[@m1>a0em3N4s1t12e-8R4q0V/0kE%&+<Wd+AiDP1%6Q@"AMH@k+?VV;3B0234>AR%1-Qg''4>g\)@6P,_0em5q4s1t12)I<K4q0V/0kE1*+<Wd*2I\C)%6Q@"AMlXo+?VMj3B9844>AR%2Ei6+4>o)R@m1>a0em5u4s1t13FQ>Q4q0V/0kE=.+<Wd*1M&7(%6Q@"AN;ps+?VPA11<?U4>AR%@6PeV4?,60@Qk5`0em6K4s1t12E*EH4q0V/0kFiY+<Wd*1GWB&%6Q@"ARmtI+?VVmAiMs`4>AR%ANh4Z4?-e\@Qk5`0em6O4s1t13A<0A4q0V/0kN+''+<Wd*@:hM`%6Q@"AhcIl+?VS:A7@_34>AR&1-Qg''4?"uQANgPc0em8r4s1t12DSc!4q0V/0kN7++<Wd*2dn^1%6Q@"Ai2ap+?VM>1GM''&4>AR&2Ei6+4>^V*@Qk5`0em9!4s1t13&EKO4q0V/0kNC/+<Wd)2eFd.%6Q@"AiW$t+?VM:@6$L\4>AR&@6PeV4?,6/0Koq.0em9L4s1t13+OdU4q0V/0kOoZ+<Wd,1hJ^2%6Q@"An4(J+?VSl2).9(4>AR&ANh4Z4>^Y,Aj-Yd0em9P4s1t12Ig;X4q0V/1,(CG+<Wd*3Ak>2%6Q@#0JPa6+?VYm2e"r[4>ATF1-Qg''4>nrT1Hl710etF=4s1t12_m-s4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@#0Jks9+?VP;An4(74>ATF2*N-*4>^V(1Hl710etF@4s1t12`NNM4q0V/1,(XN+<Wd+Ai=-_%6Q@#0K;6=+?VP=@PBtT4>ATF3BeQ.4?-k/@6P,_0etFk4s1t12e$8T4q0V/1,*0$+<Wd)3&Wc\%6Q@#0Om9h+?VMm3&Ef.4>ATFA3M+Y4?,<12*MI30etFo4s1t12*!WS4q0V/1,*<(+<Wd)1c],2%6Q@#0ebd6+?VM@AS"%74>ATG0g6^&4?#$)2EhR40etI=4s1t12E<I&4q0V/1,1RK+<Wd,2)7$Q%6Q@#0f2'':+?VVqAn4(74>ATG2*N-*4?-k/3''Id60etIA4s1t12)dEI4q0V/1,1^O+<Wd*AhYo&%6Q@#0fV?>+?VVn0K)*(4>ATG3BeQ.4>ej''2EhR40etIl4s1t12D[0M4q0V/1,36%+<Wd)11WC/%6Q@#0k3Bi+?VM;2)@E*4>ATGA3M+Y4>o/U@m1>a0etIp4s1t12`*9F4q0V/1,3B)+<Wd+1GCOI%6Q@#1,(m7+?VY=1h/]Y4>ATH0g6^&4>euQ1d2@20etL>4s1t12`EQI4q0V/1,:XL+<Wd*0K3K*%6Q@#1,M0;+?VPm1grQW4>ATH2*N-*4>eiP3Bdm70etLB4s1t12)J`$4q0V/1,:dP+<Wd+A2H,,%6Q@#1,qH?+?VMAAnF494>ATH3BeQ.4>pb\@Qk5`0etLm4s1t12Ip;S4q0V/1,<<&+<Wd(@PqXZ%6Q@#11NKj+?VSn11EEV4>ATHA3M+Y4>^V[1d2@20etLq4s1t12e+dW4q0V/1,<H*+<Wd)ARmS\%6Q@#1GD!8+?VMj2)%3''4>ATI0g6^&4?,'',@6P,_0etO?4s1t12J"RQ4q0V/1,C^M+<Wd(@Pp).%6Q@#1Gh9<+?VYn0Jbm%4>ATI2*N-*4>o002*MI30etOC4s1t13+XjR4q0V/1,CjQ+<Wd(@Q?A2%6Q@#1H7Q@+?VSoAn+"64>ATI3BeQ.4>nlL@Qk5`0etOn4s1t12e?GU4q0V/1,EB''+<Wd,0Od%+%6Q@#1LiTk+?VVo2_[E)4>ATIA3M+Y4>f,UAj-Yd0etOr4s1t12D\iR4q0V/1,EN++<Wd*3Fl_c%6Q@#1b_*9+?VVo@P^1W4>ATJ0g6^&4>eoP1-Q.00etR@4s1t12DnuV4q0V/1,LdN+<Wd*3Ai]Y%6Q@#1c.B=+?VVm@l6FZ4>ATJ2*N-*4?5;U@Qk5`0etRD4s1t12e?JU4q0V/1,LpR+<Wd,1h''oX%6Q@#1cRZA+?VSo3&3Z,4>ATJ3BeQ.4>f#Q1d2@20etRo4s1t13AEKR4q0V/1,NH(+<Wd)2_ZpL%6Q@#1h/]l+?VSp2IScY4>ATJA3M+Y4>gV&@6P,_0etRs4s1t13A<BL4q0V/1,NT,+<Wd)2DR6U%6Q@#2)%3:+?VMlAMu^]4>ATK0g6^&4>^Y-0Koq.0etUA4s1t12E,/X4q0V/1,UjO+<Wd(0K!9&%6Q@#2)IK>+?VJm2.JfZ4>ATK2*N-*4>f&T0Koq.0etUE4s1t12.^2T4q0V/1,V!S+<Wd''AN43a%6Q@#2)mcB+?VJl0Om9U4>ATK3BeQ.4>eiM0Koq.0etUp4s1t11hABq4q0V/1,WN)+<Wd(AS,O<%6Q@#2.Jfm+?VM;1c7H+4>ATKA3M+Y4>^V(2*MI30etUt4s1t11hA[,4q0V/1,WZ-+<Wd''AMIa[%6Q@#2D@<;+?VYn1GV-''4>ATL0g6^&4>gS+@m1>a0etXB4s1t12)[?Q4q0V/1,^pP+<Wd''AMQ5/%6Q@#2DdT?+?VSC@UVG04>ATL2*N-*4>^V*Aj-Yd0etXF4s1t12)?sE4q0V/1,_''T+<Wd''AMc>0%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>ATL3''JH-4>f,SA3LGb0etXI4s1t12_m0u4q0V/1,`Q)+<Wd(1H&f.%6Q@#2I\im+?VPl0ebd#4>ATL@m2"X4>f$-Aj-Yd0etXt4s1t13&"o#4q0V/1,`]-+<Wd,3B9#^%6Q@#2J,,q+?VPkA2?CY4>ATM0KpU%4?#2XANgPc0et[B4s1t13G(!)4q0V/1,gsP+<Wd''AMZ5.%6Q@#2`!W?+?VJl3G(Ga4>ATM1d3$)4?7".0Koq.0et[F4s1t11hAOS4q0V/1,h*T+<Wd''AMuP4%6Q@#2`EoC+?VJl3AWi.4>ATM3''JH-4?,)U3''Id60et[J4s1t12.AFP4q0V/1,iW*+<Wd(2)\r.%6Q@#2e"rn+?VM>0P3KX4>ATM@m2"X4>^VZ1d2@20et[u4s1t12)@4&4q0V/1,ic.+<Wd(1HAu0%6Q@#2eG5r+?VM;@5C(V4>ATN0KpU%4>ep''2*MI30et^C4s1t12)AZP4q0V/1,q$Q+<Wd,2`<NW%6Q@#3&<`@+?VVo2.Sl[4>ATN1d3$)4>eoL@6P,_0et^G4s1t12)Ai%4q0V/1,q0U+<Wd(1GUjP%6Q@#3&a#D+?VM;11`WY4>ATN3''JH-4>eoNANgPc0et^K4s1t13+OmV4q0V/1,r]++<Wd(1H%-T%6Q@#3+>&o+?VM;2D[N+4>ATN@m2"X4>elJ1-Q.00et_!4s1t12)6jF4q0V/1,ri/+<Wd(1,*9''%6Q@#3+b>s+?VM:11WQX4>ATO0KpU%4>elM1Hl710etaF4s1t12)7!u4q0V/1-%0T+<Wd(1,WW,%6Q@#3AiuC+?VM:2DIB)4>ATO2Ei6+4>elO@m1>a0etaJ4s1t13&G&U4q0V/1-%<X+<Wd(1,i`-%6Q@#3B98G+?VM:3&3Z,4>ATO@6PeV4>elR0g6%/0etau4s1t12)70G4q0V/1-&i.+<Wd(1-%-S%6Q@#3Fk;r+?VM93&3Z,4>ATOANh4Z4?$k01d2@20etb$4s1t11hC-*4q0V/11;k#+<Wd''ARdM[%6Q@#@50qg+?VJl@lZ^^4>AU"1-Qg''4>^VZ1-Q.00f!/n4s1t11hC5X4q0V/11<"''+<Wd''AS!S[%6Q@#@5U4k+?VJlAR[h44>AU"2Ei6+4>^V[ANgPc0f!/r4s1t11hJIO4q0V/11<.++<Wd''AS*_^%6Q@#@6$Lo+?VJm1,;$&4>AU"@6PeV4>^Y.1d2@20f!0H4s1t11hC8V4q0V/11=ZV+<Wd''Ahl5-%6Q@#@:VPE+?VJm1,hB+4>AU"ANh4Z4>^Y(3Bdm70f!0L4s1t11hJLP4q0V/11Dq$+<Wd''Ai4-`%6Q@#@PL%h+?VJm2E*f/4>AU#1-Qg''4>o&Q3''Id60f!2o4s1t11hJUR4q0V/11E((+<Wd''Ai4*_%6Q@#@Pp=l+?VJm2.f#]4>AU#2Ei6+4>^Y-2a.[50f!2s4s1t11hJO!4q0V/11E4,+<Wd''Ai!s]%6Q@#@Q?Up+?VJm2`<i/4>AU#@6PeV4>^Y/1d2@20f!3I4s1t11hJa&4q0V/11F`W+<Wd''AiMe7%6Q@#@UqYF+?VJm3&<`-4>AU#ANh4Z4>^Y0Aj-Yd0f!3M4s1t11hJ[X4q0V/11N"%+<Wd''AiF0_%6Q@#@kg.i+?VJm@:;>/4>AU$1-Qg''4>^Y/@m1>a0f!5p4s1t11hL0+4q0V/11N.)+<Wd''AiV\3%6Q@#@l6Fm+?VJmAMu^]4>AU$2Ei6+4>^Y]3''Id60f!5t4s1t11hL<-4q0V/11N:-+<Wd''An*\^%6Q@#@lZ^q+?VJmA77Y24>AU$@6PeV4>^Y]1Hl710f!6J4s1t11hL9.4q0V/11OfX+<Wd''An3V[%6Q@#@q7bG+?VJmA7e"7ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0f!6M4s1t11hL>Z4q0V/11Oo[+<Wd(0JYXP%6Q@#A2$1i+?VM81h/]Y4>AU%0g6^&4>^Y^1Hl710f!8p4s1t12)$dq4q0V/11W1)+<Wd(0JI*&%6Q@#A2HIm+?VM811`WY4>AU%2*N-*4>efJA3LGb0f!8t4s1t11hL?24q0V/11W=-+<Wd(0JR''$%6Q@#A2laq+?VM80Om9U4>AU%3BeQ.4>efJ2*MI30f!9J4s1t12)$dF4q0V/11XiX+<Wd(0K3Q,%6Q@#A7IeG+?VM81c%<)4>AU%A3M+Y4>efM2*MI30f!9N4s1t12)$jH4q0V/11Xu\+<Wd(0Jm?)%6Q@#AM?:j+?VM82Ieo[4>AU&0g6^&4>efO@Qk5`0f!;q4s1t12)&Gr4q0V/11`7*+<Wd(0OZn(%6Q@#AMcRn+?VM8@6$L\4>AU&2*N-*4>eg%@6P,_0f!;u4s1t12)&Q!4q0V/11`C.+<Wd(0ebLL%6Q@#AN2jr+?VM8ARmt64>AU&3BeQ.4>eg(@m1>a0f!<K4s1t12)&T"4q0V/11aoY+<Wd(0P+fZ%6Q@#ARdnH+?VM90K20)4>AU&A3M+Y4>eiI@Qk5`0f!<O4s1t11hC3.4q0V/11b&]+<Wd)@l%XZ%6Q@#AhZCk+?VJm2)mc/4>AU''0g6^&4>^Y.2*MI30f!>r4s1t11hL6/4q0V/11i=++<Wd,AmmAW%6Q@#Ai)[o+?VPl1c@N,4>AU''2*N-*4?$b/1d2@20f!?!4s1t12)."#4q0V/11iI/+<Wd(A7f@9%6Q@#AiMss+?VYq@lZ^^4>AU''3BeQ.4?5D^3''Id60f!?L4s1t12).''F4q0V/11juZ+<Wd(3AE?S%6Q@#An+"I+?VM:AiW$a4>AU''A3M+Y4>eoKA3LGb0f!?P4s1t13+4L"4q0V/11k,^+<Wd(1GLRI%6Q@$0JG[5+?VM9AR[h44>AWG0g6^&4>f,R3Bdm70f(L=4s1t12)-sG4q0V/1GCUK+<Wd''ARR8V%6Q@$0Jks9+?VM92)[W-4>AWG2*N-*4>^VY1Hl710f(LA4s1t13&ig-4q0V/1GCaO+<Wd+3+4X-%6Q@$0K;6=+?VJl@Pp=Y4>AWG3BeQ.4?,&M1d2@20f(Ll4s1t13&kG(4q0V/1GE9%+<Wd*3B/]V%6Q@$0Om9h+?VMj1Gh9)4>AWGA3M+Y4?,;S1Hl710f(Lp4s1t12eHMY4q0V/1GEE)+<Wd(0k"NT%6Q@$0ebd6+?VM9@PL%U4>AWH0g6^&4>ej&A3LGb0f(O>4s1t12)/QM4q0V/1GL[L+<Wd(0k3.+%6Q@$0f2'':+?VM93As&14>AWH2*N-*4>ej%1-Q.00f(OB4s1t12)/Ms4q0V/1GLgP+<Wd+@UUrS%6Q@$0k!6g+?VVm@:;>/4>AWHA3M+Y4?-eZ2a.[50f(R=4s1t13+?B,4q0V/1GU[K+<Wd+@Uj"6%6Q@$1,;$9+?VVm@q@h54>AWI2Ei6+4?-e\2EhR40f(RF4s1t13+?E.4q0V/1GWH(+<Wd+@V%A[%6Q@$11i]m+?VVmAS"%74>AWJ0KpU%4?-e^0Koq.0f(U?4s1t13+?JU4q0V/1G^dM+<Wd+@V.M^%6Q@$1G_3;+?VVmAiW$a4>AWJ1d3$)4?-e^@m1>a0f(UE4s1t13+FWt4q0V/1G_!S+<Wd+@k]`''%6Q@$1H@WA+?VVn0K20)4>AWJ@6PeV4?-h)@m1>a0f(Up4s1t13+FXS4q0V/1GggM+<Wd+@kfu-%6Q@$1bq6;+?VVn0k*<U4>AWK1Hlp(4?-h*3''Id60f(XC4s1t13+F[R4q0V/1Gh''T+<Wd+@koo*%6Q@$1c[`B+?VVn1,hB+4>AWL1-Qg''4>eoQ3Bdm`DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c1GpsP+<Wd(1H/`+%6Q@$2)IK>+?VYB0k<HW4>AWL2*N-*4?5;T1-Q.00f([F4s1t13ArWI4q0V/1Gq*T+<Wd,2D[''O%6Q@$2)mcB+?VYB11<?U4>AWL3BeQ.4?5;UA3LGb0f([q4s1t13Ar[''4q0V/1GrW*+<Wd,2Dd0Q%6Q@$2.Jfm+?VYB1c[`/4>AWLA3M+Y4?5;W1d2@20f([u4s1t13Ara,4q0V/1Grc.+<Wd,2E!KX%6Q@$2D@<;+?VYB2Ieo[4>AWM0g6^&4?5;Y1-Q.00f(^C4s1t13ArfQ4q0V/1H%$Q+<Wd,2E3Z[%6Q@$2DdT?+?VYB3+P2^4>AWM2*N-*4?5;[2a.[50f(^G4s1t13At>#4q0V/1H%0U+<Wd,0KD''U%6Q@$2E3lC+?VY<3FY/]4>AWM3BeQ.4?5)UA3LGb0f(^r4s1t13A<HR4q0V/1H&]++<Wd,0O\HT%6Q@$2Ieon+?VY<@50qT4>AWMA3M+Y4?5*)1d2@20f(_!4s1t13A=nu4q0V/1H&i/+<Wd,0Ocq(%6Q@$2_[E<+?VY<@UVG04>AWN0g6^&4?5*)3''Id60f(aD4s1t13A=nr4q0V/1H.*R+<Wd,0On]Y%6Q@$2`*]@+?VY<@l6FZ4>AWN2*N-*4?5*)ANgPc0f(aH4s1t13A=tt4q0V/1H.6V+<Wd,0Olq''%6Q@$2`NuD+?VY<@lHR\4>AWN3BeQ.4?5*+1Hl710f(as4s1t13A>#&4q0V/1H/c,+<Wd,0P*"''%6Q@$2e,#o+?VY<A7Ie44>AWNA3M+Y4?5*+2a.[50f(b"4s1t13A=uQ4q0V/1H/o0+<Wd,0P+]W%6Q@$3&!N=+?VY<AS++84>AWO0g6^&4?5*-ANgPc0f(dE4s1t13AE3E4q0V/1H70S+<Wd,0etLJ%6Q@$3&EfA+?VY=0kENX4>AWO2*N-*4?5,O1Hl710f(dI4s1t13AE<E4q0V/1H7<W+<Wd,0f!?)%6Q@$3&j)E+?VY=1H@W.4>AWO3BeQ.4?5,Q1Hl710f(dt4s1t13AE?K4q0V/1H8i-+<Wd(1,*6&%6Q@$3+G,p+?VMA1bq6(4>AWOA3M+Y4>em&1-Q.00f(gD4s1t12)8WP4q0V/1H@0R+<Wd(1hL>`%6Q@$3ANc@+?VM:A2$1V4>AWP1Hlp(4>em)2EhR40f(gH4s1t12)8bt4q0V/1H@<V+<Wd(1Lt)]%6Q@$3As&D+?VS;AS"%74>AWP2a/?,4?#3/A3LGb0f(gL4s1t12.^AV4q0V/1H@HZ+<Wd(0kN:,%6Q@$3FP)o+?VM9An+"64>AWP@QknW4?6k+Aj-Yd0f(h"4s1t12)A]"4q0V/1HAu0+<Wd(AhYr''%6Q@$3FtAs+?VS?2.8ZX4>AWPAj.=[4>gY\Aj-Yd0f*5l4s1t12)d@%4q0V/1LW"%+<Wd(2dn^1%6Q@$@5:"h+?VM?@50qT4>AX#1Hlp(4>f)WANgPc0f*5p4s1t12)o&T4q0V/1LW.)+<Wd(3+Fg0%6Q@$@5^:l+?VM@A2-7W4>AX#2a/?,4>f&Q3Bdm70f*5t4s1t12)d:#4q0V/1LW:-+<Wd(2_nf*%6Q@$@:;>B+?VM?1G_3(4>AX#@QknW4>f&R3Bdm70f*6L4s1t12)dC&4q0V/1LXlZ+<Wd(2`"o,%6Q@$@PBtg+?VM?1bq6(4>AX$0g6^&4>f&U3Bdm70f*8o4s1t12)dKP4q0V/1L`.(+<Wd(2`>,/%6Q@$@Pg7k+?VM?3&Wr04>AX$2*N-*4>f&V@m1>a0f*8s4s1t12)dI''4q0V/1L`:,+<Wd(2`<WZ%6Q@$@Q6Oo+?VM?2Inu\4>AX$3BeQ.4>f&V2EhR40f*9I4s1t12)dHM4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@$@U_MD+?VM?@:VP24>AX$@m2"X4>f''+1d2@20f*9L4s1t12)dL)4q0V/1LaoZ+<Wd(2e"O+%6Q@$@V.eH+?VM?@qIn64>AX%0KpU%4>f''+2a.[50f*;o4s1t12)eu$4q0V/1Li1(+<Wd(2`WZX%6Q@$@l$:k+?VM?@5''kS4>AX%1d3$)4>f''.2*MI30f*;s4s1t12)f&*4q0V/1Li=,+<Wd(2e6>\%6Q@$@lHRo+?VM?A2ug_4>AX%3''JH-4>f''.1-Q.00f*<"4s1t12)eu(4q0V/1LjiW+<Wd(2eFm1%6Q@$@q%VE+?VM?AS++84>AX%@m2"X4>f''03''Id60f*<M4s1t12)f)''4q0V/1Lju[+<Wd(2e6G_%6Q@$@qInI+?VM@0Od3T4>AX&0KpU%4>f)PA3LGb0f*>p4s1t12)f,X4q0V/1Lr7)+<Wd(2e?M`%6Q@$A2?Cl+?VM@0JG["4>AX&1d3$)4>f)QANgPc0f*>t4s1t12)m<N4q0V/1LrC-+<Wd(3&EHU%6Q@$A2c[p+?VM@1,(m$4>AX&3''JH-4>f)V2*MI30f*?#4s1t12)mL(4q0V/1LsoX+<Wd(3&iWV%6Q@$A7@_F+?VM@3&s/34>AX&@m2"X4>f)Y@6P,_0f*?N4s1t12)mQL4q0V/1Lt&\+<Wd,3FOm2%6Q@$A7e"J+?VYr0f_E,4>AX''0KpU%4>np+Aj-Yd0f*Aq4s1t13&3EQ4q0V/1M&=*+<Wd+1,i`-%6Q@$AMZLm+?VV=2eG5_4>AX''1d3$)4?,)UAj-Yd0f*Au4s1t13&3I%4q0V/1M&I.+<Wd+11<.+%6Q@$AN)dq+?VV=3&Ef.4>AX''3''JH-4?,)UANgPc0f*B$4s1t13&3KK4q0V/1M''uY+<Wd+1-%9W%6Q@$AR[hG+?VV=3B9844>AX''@m2"X4?,*)@Qk5`0f*BO4s1t13&4r&4q0V/1M(,]+<Wd+11FfY%6Q@$AS++K+?VV=@PBtT4>AX(0KpU%4?,*+3''Id60f*Dr4s1t13&4uP4q0V/1M/C++<Wd+11`7*%6Q@$AhuUn+?VV=3B0234>AX(1d3$)4?,**2a.[50f*E!4s1t13&4oR4q0V/1M/U1+<Wd+11N%&%6Q@$AiW$t+?VV=@6$L\4>AX(@6PeV4?,**1d2@20f*EN4s1t13&4ns4q0V/1M1,\+<Wd+11=TT%6Q@$An4(J+?VV=3G(Ga4>AX(ANh4Z4?,*+1d2@20f*ER4s1t13&4uT4q0V/1b^UI+<Wd+11<"''%6Q@%0JPa6+?VV=AMH@X4>AZH1-Qg''4?,,N3Bdm70f1R?4s1t13&5))4q0V/1b^aM+<Wd+11`:+%6Q@%0Ju$:+?VV>0P3KX4>AZH2Ei6+4?,,N2a.[50f1RC4s1t13&5#S4q0V/1b^mQ+<Wd+11i@,%6Q@%0KD<>+?VV=A26=X4>AZH@6PeV4?,*,3''Id60f1Rn4s1t13&<6u4q0V/1b`E''+<Wd+11juZ%6Q@%0P!?i+?VV=A2?CY4>AZHANh4Z4?,,O0g6%/0f1Rr4s1t13&<9t4q0V/1bg[J+<Wd+1GC^N%6Q@%0f)!9+?VV=AM?:W4>AZI1d3$)4?,*,2*MI30f1UB4s1t13&<:!4q0V/1bgmP+<Wd+1GpmN%6Q@%0f_E?+?VV>0K;6*4>AZI@6PeV4?,,W1-Q.00f1Uo4s1t13&<@#4q0V/1biK(+<Wd+1G^jO%6Q@%0k<Hj+?VV>1GM''&4>AZIANh4Z4?,,W@Qk5`0f1Us4s1t13&<F''4q0V/1bpaK+<Wd+1GWQ+%6Q@%1,1s8+?VV>1hJo\4>AZJ1-Qg''4?,,R2a.[50f1XA4s1t13&<BI4q0V/1bpmO+<Wd+1Grc.%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AZJ2*N-*4?,,R0Koq.0f1XD4s1t13&<9J4q0V/1bq!R+<Wd+1H$pN%6Q@%1,qH?+?VV>11WQX4>AZJ3BeQ.4?,,Q@6P,_0f1Xo4s1t13&<?H4q0V/1brN(+<Wd+1H%-T%6Q@%11NKj+?VV>2DmZ-4>AZJA3M+Y4?,,T3''Id60f1Xs4s1t13&<9u4q0V/1brZ,+<Wd+1H%6W%6Q@%1GD!8+?VV>2Ieo[4>AZK0g6^&4?,,T@6P,_0f1[C4s1t13&>"t4q0V/1c%!Q+<Wd+1H.9W%6Q@%1H7Q@+?VV>@5''kS4>AZK3BeQ.4?,-*@6P,_0f1[p4s1t13&<QN4q0V/1c&T)+<Wd+1HAr/%6Q@%1LiTk+?VV>3&Nl/4>AZKA3M+Y4?,,U@m1>a0f1[t4s1t13&>#%4q0V/1c&`-+<Wd+1LW:-%6Q@%1b_*9+?VV>2e5)]4>AZL0g6^&4?,-+3''Id60f1^B4s1t13&<L&4q0V/1c.!P+<Wd+1H@EY%6Q@%1c.B=+?VV>3FtA`4>AZL2*N-*4?,-*3''Id60f1^F4s1t13&>#P4q0V/1c.-T+<Wd+1LaiX%6Q@%1cRZA+?VV>@kg.V4>AZL3BeQ.4?,/O0g6%/0f1^q4s1t13&>,''4q0V/1c/Z*+<Wd+1LrI/%6Q@%1h/]l+?VM@0K20)4>AZLA3M+Y4?,/P3''Id60f1^u4s1t13&E<u4q0V/1c/f.+<Wd+1Lt#[%6Q@%2)%3:+?VV>An4(74>AZM0g6^&4?,--2EhR40f1aC4s1t13&E@"4q0V/1c7''Q+<Wd+1c%*T%6Q@%2)IK>+?VV?0ekj$4>AZM2*N-*4?,/O2EhR40f1aG4s1t13&>)%4q0V/1c73U+<Wd+1Lt)]%6Q@%2)mcB+?VV?0P3KX4>AZM3BeQ.4?,/O1Hl710f1at4s1t13&>,S4q0V/1c8f-+<Wd+1Li:+%6Q@%2.\ro+?VV>@k^(U4>AZMAj.=[4?,/Q2EhR40f1dB4s1t13&>/#4q0V/1c@''P+<Wd+1M&:)%6Q@%2DRH=+?VV?2.JfZ4>AZN1Hlp(4?,/T0g6%/0f1dF4s1t13&EL$4q0V/1c@3T+<Wd+1c79W%6Q@%2E!`A+?VV?2`!W,4>AZN3BeQ.4?,/V@6P,_0f1ds4s1t13&ETT4q0V/1cAf,+<Wd+1cIBX%6Q@%2Ieon+?VV?1LiTX4>AZNA3M+Y4?,/S2EhR40f1e"4s1t13&ENR4q0V/1cAr0+<Wd+1cI<V%6Q@%2_[E<+?VV?3+G,]4>AZO0g6^&4?,/WANgPc0f1gE4s1t13&EEG4q0V/1cI3S+<Wd+1cAl.%6Q@%2`*]@+?VV?@kg.V4>AZO2*N-*4?,0-A3LGb0f1gI4s1t13&G/"4q0V/1cI?W+<Wd+1hAR/%6Q@%2`NuD+?VV?@UqY34>AZO3BeQ.4?,0.1Hl710f1gt4s1t13&G,R4q0V/1cJl-+<Wd+1h(&\%6Q@%2e,#o+?VV?@UVG04>AZOA3M+Y4?,0/0Koq.0f1h#4s1t13&G%u4q0V/1cK#1+<Wd+1h&I/%6Q@%3&!N=+?VV?@Pg7X4>AZP0g6^&4?,/X2a.[50f1jF4s1t13&G2(4q0V/1cR9T+<Wd+1hAI,%6Q@%3&EfA+?VV@0Om9U4>AZP2*N-*4?#,OA3LGb0f1jJ4s1t13&NKO4q0V/1cREX+<Wd+1hJF*%6Q@%3&j)E+?VV@1H@W.4>AZP3BeQ.4?,2QAj-Yd0f1ju4s1t13&NL#4q0V/1cSr.+<Wd+2)R9U%6Q@%3+G,p+?VV@1L`NW4>AZPA3M+Y4?,00Aj-Yd0f1k$4s1t13&G5W4q0V/1cT)2+<Wd+2)RBX%6Q@%3A<W>+?VV@1cRZ.ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0f1mF4s1t13&NTR4q0V/1c[<T+<Wd+2)[9T%6Q@%3AWiA+?VV@2.\r\4>AZQ1d3$)4?,2W@6P,_0f1mJ4s1t12`G/#4q0V/1c[HX+<Wd+2)I*Q%6Q@%3B'',E+?VV@2_mQ+4>AZQ3''JH-4?,2W@Qk5`0f1mN4s1t13&P,$4q0V/1c\u.+<Wd+2.8I.%6Q@%3FY/p+?VV@3&a#14>AZQ@m2"X4?,2XAj-Yd0f1n$4s1t13&NWT4q0V/1c],2+<Wd+2.:&[%6Q@%3G(Gt+?VV@3Fb5^4>A[$0KpU%4?,2X2*MI30f3;n4s1t13&P/*4q0V/1gr.''+<Wd+2.AL.%6Q@%@5C(i+?VV@@PBtT4>A[$1d3$)4?,3/1Hl710f3;r4s1t13&P2#4q0V/1gr:++<Wd+2.U2\%6Q@%@5g@m+?VV@AnF494>A[$3''JH-4?,5S2a.[50f3<!4s1t13&WHJ4q0V/1gsfV+<Wd+2DR9V%6Q@%@:DDC+?VVA0fD3)4>A[$@m2"X4?,5T@m1>a0f3<L4s1t12.^B24q0V/1gsrZ+<Wd(AhZ2.%6Q@%@:h\G+?VMA1LiTX4>A[%0KpU%4>f,U0g6%/0f3>o4s1t13&!-I4q0V/1h&4(+<Wd(3AiZX%6Q@%@P^1j+?VMA2.8ZX4>A[%1d3$)4>f,V3''Id60f3>s4s1t12)?pu4q0V/1h&@,+<Wd(@kof''%6Q@%@Q-In+?VMk1,V6)4>A[%3''JH-4>gV(@m1>a0f3?"4s1t12.JF!4q0V/1h''lW+<Wd)1,NK)%6Q@%@U_MD+?VP;2IScY4>A[%@m2"X4>nrTAj-Yd0f3?M4s1t12DS`N4q0V/1h(#[+<Wd)11O`V%6Q@%@V.eH+?VP;A77Y24>A[&0KpU%4>ns*2a.[50f3Ap4s1t12DSiT4q0V/1h/:)+<Wd)1GU^L%6Q@%@l$:k+?VP;Ai;g^4>A[&1d3$)4>nuO3Bdm70f3At4s1t12D[1!4q0V/1h/F-+<Wd)1GgmO%6Q@%@lHRo+?VP<@:VP24>A[&3''JH-4>o!-2EhR40f3B#4s1t12D[9H4q0V/1h0rX+<Wd)1H/`+%6Q@%@q%VE+?VP<3+Y8_4>A[&@m2"X4>o!)1d2@20f3BN4s1t12D[7%4q0V/1h1)\+<Wd)1LXcW%6Q@%@qInI+?VP<3+4u[4>A[''0KpU%4>nuR3Bdm70f3Dq4s1t12D\cQ4q0V/1h8@*+<Wd)1LaiX%6Q@%A2?Cl+?VP<AhlOZ4>A[''1d3$)4>o!-3''Id60f3Du4s1t12D\nu4q0V/1h8L.+<Wd)1M15_%6Q@%A2c[p+?VP<@l-@Y4>A[''3''JH-4>o!+ANgPc0f3E$4s1t12D\iS4q0V/1h:#Y+<Wd)1c7$P%6Q@%A7@_F+?VP<@l?L[4>A[''@m2"X4>o!)ANgPc0f3EO4s1t12Dd6J4q0V/1h:/]+<Wd)1c-pN%6Q@%A7e"J+?VP=0Od3T4>A[(0KpU%4>o#N@Qk5`0f3Gr4s1t12Dd0C4q0V/1hAF++<Wd)1b`E''%6Q@%AMZLm+?VP=1,_<*4>A[(1d3$)4>o#O0g6%/0f3H!4s1t12Dd:&4q0V/1hAR/+<Wd)1cR<U%6Q@%AN)dq+?VP=2Inu\4>A[(3''JH-4>o#V2EhR40f3H%4s1t12Dd@$4q0V/1hC/\+<Wd)1c[Q[%6Q@%ARmtI+?VP=@UVG04>A[(ANh4Z4>o$+0Koq.0f3HR4s1t12Dequ4q0V/1hJF*+<Wd)1h8O/%6Q@%AhcIl+?VP=AMcR[4>A[)1-Qg''4>o$-1-Q.00f3Ju4s1t12Dm0K4q0V/1hJR.+<Wd)2)7$Q%6Q@%Ai2ap+?VP>11`WY4>A[)2Ei6+4>g_)@Qk64DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c1hJ[1+<Wd(An3Y\%6Q@%AiMss+?VS?0f_E,4>A[)3BeQ.4>g_*0g6%/0f3KN4s1t12)@+%4q0V/1hL2\+<Wd(1M/@*%6Q@%An+"I+?VM;An4(74>A[)A3M+Y4>ep+3Bdm70f3KR4s1t12)Af''4q0V/1hL>`+<Wd(1M1)[%6Q@&0JG[5+?VM<0etp%4>A]I0g6^&4>erM2EhR40f:X?4s1t12)I!F4q0V/2)$gM+<Wd(1c/Z*%6Q@&0K20<+?VM<2)[W-4>A]I3''JH-4>erP1Hl710f:XF4s1t12)I''C4q0V/2)&H&+<Wd(1c73U%6Q@&0Od3g+?VM<2*!i04>A]I@m2"X4>erN1Hl710f:Xq4s1t12)I*E4q0V/2)&T*+<Wd(1cR6S%6Q@&0P3Kk+?VM<3A`o/4>A]J0KpU%4>erS2a.[50f:[?4s1t12)I6H4q0V/2)-jM+<Wd(1c@0S%6Q@&0f;-;+?VM<3&Ef.4>A]J2Ei6+4>erS2EhR40f:[E4s1t12)I3L4q0V/2).''S+<Wd(1c])1%6Q@&0f_E?+?VM<A2$1V4>A]J@6PeV4>es(A3LGb0f:[p4s1t12)Jeu4q0V/2)/T)+<Wd(1h&:*%6Q@&0k<Hj+?VM<A26=X4>A]JANh4Z4>es(2a.[50f:[t4s1t12)J`"4q0V/2)6pN+<Wd(1cI0R%6Q@&1,D*:+?VM<@5C(V4>A]K1d3$)4>es+2*MI30f:^D4s1t12)JcO4q0V/2)7''R+<Wd(1h(&\%6Q@&1,hB>+?VM<@q.\34>A]K@6PeV4>es+@m1>a0f:^s4s1t12)J_u4q0V/2)8`,+<Wd(1h:,\%6Q@&11i]m+?VM<@qIn64>A]L0KpU%4>es+ANgPc0f:aA4s1t12)R*t4q0V/2)@!O+<Wd(1hAU0%6Q@&1G_3;+?VM=1,(m$4>A]L1d3$)4>es-A3LGb0f:aE4s1t12)R*F4q0V/2)@-S+<Wd(1hJO-%6Q@&1H@WA+?VM=0P3KX4>A]L@6PeV4>euN0g6%/0f:ar4s1t12)R-J4q0V/2)A`++<Wd(2)8T(%6Q@&1LrZl+?VM=2E*f/4>A]LANh4Z4>euUAj-Yd0f:b!4s1t12)Si#4q0V/2)I!N+<Wd(2)I<W%6Q@&1bh0:+?VM=2Inu\4>A]M1-Qg''4>euQ0g6%/0f:dD4s1t12)R6K4q0V/2)I-R+<Wd(2)Ai.%6Q@&1c7H>+?VM=2)%3''4>A]M2Ei6+4>euP@m1>a0f:dH4s1t12)R0K4q0V/2)I9V+<Wd(2)R9U%6Q@&1h/]l+?VM=1G_3(4>A]MA3M+Y4>euP0Koq.0f:e!4s1t12)R7$4q0V/2)Jo/+<Wd(2)o&/%6Q@&2)%3:+?VM=A26=X4>A]N0g6^&4>euU1Hl710f:gD4s1t12)Sht4q0V/2)R0R+<Wd(2.AR0%6Q@&2)IK>+?VM=3&j)24>A]N2*N-*4>euU0g6%/0f:gH4s1t12)RC+4q0V/2)R<V+<Wd(2)f)1%6Q@&2)mcB+?VM=A2ZU\4>A]N3BeQ.4>euV0g6%/0f:gs4s1t12)R=%4q0V/2)Si,+<Wd(2.U;_%6Q@&2.\ro+?VM=3A`o/4>A]NAj.=[4>euV3Bdm70f:jC4s1t12)SrR4q0V/2)[0Q+<Wd(2.ed2%6Q@&2DRH=+?VM=@lZ^^4>A]O1Hlp(4>f#OAj-Yd0f:jG4s1t12)So!4q0V/2)[BW+<Wd(2.SO-%6Q@&2E3lC+?VM=AMu^]4>A]O3BeQ.4>f!,A3LGb0f:jt4s1t12)Sl#4q0V/2)\o-+<Wd(2.^A`%6Q@&2Ieon+?VM=AMlX\4>A]P0g6^&4>f!-3''Id60f:mF4s1t12)Su''4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@&2`!W?+?VM=AMcR[4>A]P1d3$)4?-q51d2@20f:mI4s1t12)[1#4q0V/2)dEW+<Wd(2D@*S%6Q@&2`EoC+?VM>0Om9U4>A]P3''JH-4>f#N0g6%/0f:mM4s1t12)[3H4q0V/2)er-+<Wd(2DR''P%6Q@&2e"rn+?VM=An=.84>A]P@m2"X4>f#N0Koq.0f:n#4s1t12)[3K4q0V/2)f)1+<Wd(2DSf,%6Q@&2eG5r+?VM>2)mc/4>A]Q0KpU%4>f#Q3Bdm70f:pF4s1t12)[<N4q0V/2)m?T+<Wd(2DSc+%6Q@&3&<`@+?VM>1h8cZ4>A]Q1d3$)4>f#T1-Q.00f:pJ4s1t12)[<P4q0V/2)mKX+<Wd(2Dnu.%6Q@&3&a#D+?VM>1h/]Y4>A]Q3''JH-4>f#S1d2@20f:pN4s1t12)[EP4q0V/2)o#.+<Wd(2E!BU%6Q@&3+>&o+?VM>2_dK*4>A]Q@m2"X4>f#T@Qk5`0f:q&4s1t12)[EO4q0V/2*!?S+<Wd(2E<QW%6Q@&3AE]?+?VM>@:h\44>A]R1-Qg''4>f$-1d2@20f:sI4s1t12)\u(4q0V/2*!KW+<Wd(2Ip>^%6Q@&3AiuC+?VM>AMH@X4>A]R2Ei6+4>f$/2*MI30f:sM4s1t12)]#T4q0V/2*!W[+<Wd(2J+s5%6Q@&3B98G+?VM>AnF494>A]R@6PeV4>f&O1d2@20f:t#4s1t12)d3t4q0V/2*#/1+<Wd(2_[6U%6Q@&3Fk;r+?VM?0k3BV4>A]RANh4Z4>g\(Aj-Yd0f:t''4s1t12.\L&4q0V/2.81&+<Wd(AMH#*%6Q@&@50qg+?VMm0ekj$4>A^%1-Qg''4>g\+0g6%/0f<As4s1t12.\R&4q0V/2.8C,+<Wd(AMc5-%6Q@&@5g@m+?VMm2)IK+4>A^%3''JH-4>g\-@Qk5`0f<B"4s1t12.\XV4q0V/2.9oW+<Wd(AMu8,%6Q@&@:DDC+?VMk3+G,]4>A^%@m2"X4>gV-@6P,_0f<BM4s1t12.JUV4q0V/2.:&[+<Wd(@lZ5,%6Q@&@:h\G+?VMk3As&14>A^&0KpU%4>gV.3''Id60f<Dr4s1t12.JX$4q0V/2.AC++<Wd(@l[s]%6Q@&@Pp=l+?VMk3Fb5^4>A^&2Ei6+4>gVX2*MI30f<E!4s1t12.L&M4q0V/2.AO/+<Wd(@q&t4%6Q@&@Q?Up+?VMk@:MJ14>A^&@6PeV4>gVW@Qk5`0f<EL4s1t12.L)M4q0V/2.C&Z+<Wd(@pq/W%6Q@&@UqYF+?VMk@kg.V4>A^&ANh4Z4>gVX2a.[50f<EP4s1t12.L,Q4q0V/2.J=(+<Wd(@q7>Y%6Q@&@kg.i+?VMkAMcR[4>A^''1-Qg''4>gVY@Qk5`0f<Gs4s1t12.L2T4q0V/2.JO.+<Wd(A26)-%6Q@&@lHRo+?VMl1,_<*4>A^''3''JH-4>gY)ANgPc0f<H$4s1t12.SI!4q0V/2.L&Y+<Wd(A2.XZ%6Q@&@q%VE+?VMl0K)*(4>A^''@m2"X4>gY(@Qk5`0f<HO4s1t12.SR(4q0V/2.L2]+<Wd(A2@d\%6Q@&@qInI+?VMl1Gh9)4>A^(0KpU%4>gY*A3LGb0f<Jr4s1t12.SUT4q0V/2.SI++<Wd(A2Rg[%6Q@&A2?Cl+?VMl2J,,^4>A^(1d3$)4>gY,A3LGb0f<K!4s1t12.SUS4q0V/2.SU/+<Wd(A2IaZ%6Q@&A2c[p+?VMl1grQW4>A^(3''JH-4>gY-3Bdm70f<K%4s1t12.SX&4q0V/2.U,Z+<Wd(A2l>.%6Q@&A7@_F+?VMl3B9844>A^(@m2"X4>gY0A3LGb0f<KP4s1t13+Fm''4q0V/2.U8^+<Wd(A7@J]%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>A^(Aj.=[4>gYZ2*MI30f<Mr4s1t12.ed''4q0V/2.\L++<Wd(AiDY4%6Q@&AMQFl+?VMn3&3Z,4>A^)1Hlp(4>g_12a.[50f<N!4s1t12.eg.4q0V/2.\X/+<Wd(AiO9a%6Q@&AMu^p+?VMn3Aiu04>A^)2a/?,4>g_23Bdm70f<N%4s1t12.ejY4q0V/2.\d3+<Wd(AmmY_%6Q@&ARRbF+?VMn@:VP24>A^)@QknW4>g_[2*MI30f<NP4s1t12.g<-4q0V/2.^;^+<Wd+3&WNU%6Q@&AS"%J+?VMn2DIB)4>A^)Aj.=[4?#$(A3LGb0f<Ps4s1t12_nhr4q0V/2.eR,+<Wd*11E((%6Q@&Ai)[o+?VS<@l$:X4>A^*2*N-*4?#$*0g6%/0f<Q$4s1t12_nlS4q0V/2.ed2+<Wd*11OiY%6Q@&AiMss+?VS<A26=X4>A^*3BeQ.4?#$,3''Id60f<QO4s1t12_nrV4q0V/2.g;]+<Wd*11`I0%6Q@&An+"I+?VS<AhlOZ4>A^*A3M+Y4?#$-1d2@20f<QS4s1t12_nu(4q0V/2.gGa+<Wd*1GCOI%6Q@''0JG[5+?VS<AhuU[4>A`J0g6^&4?#&M1Hl710fC^B4s1t12`!0I4q0V/2D@!P+<Wd*1GL[L%6Q@''0K)*;+?VS=1,1s%4>A`J2a/?,4?#&M@6P,_0fC^F4s1t12`!1"4q0V/2D@-T+<Wd*1GNE(%6Q@''0O[-f+?VS=0f;-(4>A`J@QknW4?#&O1-Q.00fC^q4s1t12`!6M4q0V/2DAZ*+<Wd*1GUgO%6Q@''0P*Ej+?VS=11NKW4>A`JAj.=[4?#&P3''Id60fCa?4s1t12`!6E4q0V/2DHpM+<Wd*1GpjM%6Q@''0etp8+?VS=1h8cZ4>A`K1Hlp(4?#&R2a.[50fCaC4s1t12`!?G4q0V/2DI''Q+<Wd*1H&`,%6Q@''0fD3<+?VS=2J,,^4>A`K2a/?,4?#&TANgPc0fCaG4s1t13&33t4q0V/2DI3U+<Wd(3ANHU%6Q@''0k!6g+?VYDAN)d^4>A`K@QknW4>f,S1d2@20fCar4s1t12*!?G4q0V/2DJ`++<Wd,3ArZW%6Q@''1,M0;+?VYE2`*]-4>A`L2*N-*4?5D\2a.[50fCdF4s1t13B9$/4q0V/2DR3T+<Wd,3B/]V%6Q@''1,qH?+?VYE3&Ef.4>A`L3BeQ.4?5D]2a.[50fCdq4s1t13B9''-4q0V/2DS`*+<Wd,3B1P5%6Q@''1GM''9+?VMm3&!N*4>A`M1-Qg''4>g\10g6%/0fCgD4s1t12.\aV4q0V/2D[0R+<Wd(AN;Y4%6Q@''1Gq?=+?VMm@5U4X4>A`M2Ei6+4>g\Y0Koq.0fCgH4s1t12.^5W4q0V/2D[<V+<Wd(AR[M\%6Q@''1H@WA+?VMm@V%_44>A`M@6PeV4>g\Z1Hl710fCgs4s1t13+Om&4q0V/2D\i,+<Wd(ARmP[%6Q@''1LrZl+?VMmA2-7W4>A`MANh4Z4>g\\@Qk5`0fCh"4s1t12.^>Y4q0V/2Dd*O+<Wd(AS#:6%6Q@''1bh0:+?VV<@UVG04>A`N1-Qg''4>g_\1d2@20fCjE4s1t12.g>Y4q0V/2Dd6S+<Wd(An3e`%6Q@''1c7H>+?VMn@qIn64>A`N2Ei6+4>nlI1Hl710fCjI4s1t12.gE24q0V/2DdBW+<Wd)0JG=I%6Q@''1c[`B+?VMnAMH@X4>A`N@6PeV4>g_^1d2@20fCjt4s1t12.gH34q0V/2Deu/+<Wd(An>C7%6Q@''1hJoo+?VMnARmt64>A`O0KpU%4>g__3''Id60fCmD4s1t12D?jG4q0V/2Dm6R+<Wd)0JbRM%6Q@''2)@E=+?VP91,_<*ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0fCmG4s1t12D?jp4q0V/2Dm?U+<Wd)0JI*&%6Q@''2)[W@+?VP90P!?V4>A`O2a/?,4>nlK3Bdm70fCmK4s1t12D?mq4q0V/2DmKY+<Wd)0JHp!%6Q@''2.8Zk+?VP91M/f[4>A`O@QknW4>nlK0g6%/0fCn#4s1t12D@(!4q0V/2Do)1+<Wd)0K3E(%6Q@''2D@<;+?VP91bq6(4>A`P0g6^&4>nlO@6P,_0fCpF4s1t12D@(#4q0V/2E!?T+<Wd)0KD$T%6Q@''2DdT?+?VP93FP)\4>A`P2*N-*4>nm%A3LGb0fCpJ4s1t12D@.%4q0V/2E!KX+<Wd)0K:jP%6Q@''2E3lC+?VP93ANc-4>A`P3BeQ.4>nlQ@m1>a0fCpu4s1t12D@.#4q0V/2E##.+<Wd)0P+`X%6Q@''2Ieon+?VP9@U_M14>A`PA3M+Y4>nm&0g6%/0fCq$4s1t12DAZP4q0V/2E#/2+<Wd)0P!.,%6Q@''2_[E<+?VP9@l?L[4>A`Q0g6^&4>nm(@6P,_0fCsG4s1t12DASs4q0V/2E*EU+<Wd)0etFH%6Q@''2`*]@+?VP:1,_<*4>A`Q2*N-*4>noK2*MI30fCsK4s1t12DHsC4q0V/2E*QY+<Wd)0P3.*%6Q@''2`NuD+?VP:0JG["4>A`Q3BeQ.4>noJANgPc0fCt!4s1t12DHsr4q0V/2E,)/+<Wd)0f3<&%6Q@''2e,#o+?VP:2`3c.4>A`QA3M+Y4>np&@m1>a0fCt%4s1t12DI3K4q0V/2E,53+<Wd)0k!")%6Q@''3&!N=+?VP:@Q-I[4>A`R0g6^&4>np)1d2@20fD!H4s1t12DJf$4q0V/2E3KV+<Wd(An5F9%6Q@''3&EfA+?VYB@P^1W4>A`R2*N-*4?5913Bdm70fD!L4s1t13AkAW4q0V/2E3WZ+<Wd,2.eR,%6Q@''3&j)E+?VYAAhuU[4>A`R@QknW4?592@m1>a0fD"$4s1t13AkD[4q0V/2E5;4+<Wd,2D@$Q%6Q@''3A<W>+?VYB0K;6*4>A`S2*N-*4?5;RAj-Yd0fD$M4s1t13ArTI4q0V/2E>82+<Wd''AMRaZ%6Q@''3Fk;r+?VS<1M/f[4>A`SANh4Z4>nrL2*MI30fD%(4s1t12IeO#4q0V/2IS:''+<Wd)@l6),%6Q@''@50qg+?VPl2.JfZ4>Aa&1-Qg''4>p\+@6P,_0fEGr4s1t12Ig/O4q0V/2ISF++<Wd)@lQ>0%6Q@''@5U4k+?VPl3A<W+4>Aa&2Ei6+4>p\01d2@20fEH!4s1t12Ie^V4q0V/2IU#X+<Wd)@lH5.%6Q@''@:DDC+?VPl2`<i/4>Aa&@m2"X4>p\/2EhR40fEHN4s1t12Ig/U4q0V/2IU/\+<Wd)@q78W%6Q@''@:h\G+?VPlA2HIZ4>Aa''0KpU%4>p\XA3LGb0fEJs4s1t12Ig>R4q0V/2I\L,+<Wd)@q7M^%6Q@''@Pp=l+?VPl@PU+V4>Aa''2Ei6+4>p\\0Koq.0fEK"4s1t12Ig8U4q0V/2I\X0+<Wd)@qK.5%6Q@''@Q?Up+?VPlAR[h44>Aa''@6PeV4>p\\ANgPc0fEKM4s1t12Ig2N4q0V/2I^/[+<Wd)@q7AZ%6Q@''@UqYF+?VPlAS++84>Aa''ANh4Z4>p\]ANgPc0fEKQ4s1t12InU(4q0V/2IeF)+<Wd)A26)-%6Q@''@kg.i+?VPm0Om9U4>Aa(1-Qg''4>p_,1Hl710fEMt4s1t12InX(4q0V/2IeR-+<Wd)A2#r+%6Q@''@l6Fm+?VPm0Jks&4>Aa(2Ei6+4>p_)3Bdm70fEN#4s1t12InLQ4q0V/2Ie^1+<Wd)A27UX%6Q@''@lZ^q+?VPm1h8cZ4>Aa(@6PeV4>p_*ANgQ7DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c2Ig2[+<Wd)A2?),%6Q@''@q.\F+?VPm0k!6T4>Aa(A3M+Y4>p_,Aj-Yd0fENQ4s1t12In[#4q0V/2Ig>_+<Wd)A2Q2-%6Q@''A2$1i+?VPm1G_3(4>Aa)0g6^&4>p_10g6%/0fEPt4s1t12In^X4q0V/2InU-+<Wd)A3"3b%6Q@''A2HIm+?VPm@5''kS4>Aa)2*N-*4>p_-ANgPc0fEQ%4s1t12In[T4q0V/2Ing3+<Wd)A2Z,*%6Q@''A77YE+?VPm2e,#\4>Aa)@QknW4>p_.1Hl710fEQP4s1t12J"UO4q0V/2Ip>^+<Wd)A7IP^%6Q@''A7[qI+?VPm@l6FZ4>Aa)Aj.=[4>p_\ANgPc0fESs4s1t12J"RR4q0V/2J"U,+<Wd)A7B.7%6Q@''AMQFl+?VPmAM?:W4>Aa*1Hlp(4>pb*0g6%/0fET"4s1t12IpAW4q0V/2J"a0+<Wd)A7T47%6Q@''AMu^p+?VPmA2ug_4>Aa*2a/?,4>pb*2EhR40fET&4s1t12Ip6*4q0V/2J"m4+<Wd)AM@UX%6Q@''ARRbF+?VPm@:_V34>Aa*@QknW4>pb+@Qk5`0fETQ4s1t12J"dX4q0V/2J$D_+<Wd)AMds^%6Q@''AS"%J+?VPn2I\iZ4>Aa*Aj.=[4>pb[1-Q.00fEVt4s1t12J"aX4q0V/2J+[-+<Wd)AN2S3%6Q@''Ai)[o+?VPn1GV-''4>Aa+2*N-*4>pb+2*MI30fEW%4s1t12J"^%4q0V/2J+m3+<Wd)ARoC:%6Q@''AiMss+?VPn@PL%U4>Aa+3BeQ.4>pb23''Id60fEWP4s1t12J$GR4q0V/2J-D^+<Wd)Ahmm\%6Q@''An+"I+?VPnAMQFY4>Aa+A3M+Y4>pbZ2*MI30fEWT4s1t12J$;U4q0V/2J-Pb+<Wd)AR]16%6Q@(0JG[5+?VPn@U_M14>AcK0g6^&4>pb[2a.[50fLdA4s1t12J$DX4q0V/2_[$O+<Wd)AR[J[%6Q@(0Jks9+?VPn@qIn64>AcK2*N-*4>pb1Aj-Yd0fLdE4s1t12J$AR4q0V/2_[0S+<Wd)AN=?d%6Q@(0K;6=+?VPo2DRH*4>AcK@QknW4>pe,1d2@20fLdr4s1t12J+[$4q0V/2_\c++<Wd)AS*qd%6Q@(0P*Ej+?VPo11i]Z4>AcKAj.=[4>pe-2EhR40fLg@4s1t12J+dT4q0V/2_d$N+<Wd)AiDP1%6Q@(0etp8+?VPo11<?U4>AcL1Hlp(4>pe*3Bdm70fLgD4s1t12J+^)4q0V/2_d0R+<Wd)AiMe7%6Q@(0fD3<+?VPo3+P2^4>AcL2a/?,4>pe2@m1>a0fLgH4s1t12J+m-4q0V/2_d<V+<Wd)AiDJ/%6Q@(0k!6g+?VPo2e,#\4>AcL@QknW4>pe1@6P,_0fLgs4s1t12J-JS4q0V/2_ei,+<Wd)An*hb%6Q@(0kENk+?VPo@5g@Z4>AcLAj.=[4>pe\3Bdm70fLjA4s1t12J-DV4q0V/2_m*O+<Wd)An*S[%6Q@(1,;$9+?VPoAMH@X4>AcM1Hlp(4>pe_ANgPc0fLjE4s1t12J-K24q0V/2_m6S+<Wd)An<Y[%6Q@(1,_<=+?VPoAS++84>AcM2a/?,4?"rK@6P,_0fLjI4s1t12_[!C4q0V/2_mBW+<Wd*0JR$#%6Q@(11<?h+?VS:1H@W.4>AcM@QknW4?"rM2*MI30fLjt4s1t12_[(#4q0V/2_no-+<Wd*0K!E*%6Q@(11`Wl+?VMj3&!N*4>AcMAj.=[4>gS-1d2@20fLmB4s1t12.AR''4q0V/2`!0P+<Wd(@Q?5.%6Q@(1GV-:+?VMj@5U4X4>AcN1Hlp(4>gSW3''Id60fLmF4s1t12`3@&4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@(1Gq?=+?VYm3FtA`4>AcN2Ei6+4>o#P1d2@20fLmI4s1t12.C,R4q0V/2`!EW+<Wd(@V''+7%6Q@(1H@WA+?VVD1GD!%4>AcN@6PeV4>gS[0Koq.0fLmt4s1t13+Xp*4q0V/2`"r-+<Wd+@PB`)%6Q@(1LrZl+?VVq@Q$CZ4>AcNANh4Z4?-q`1Hl710fLn#4s1t13+c\Y4q0V/2`*3P+<Wd+An<h`%6Q@(1bh0:+?VVqAS"%74>AcO1-Qg''4?-qa1d2@20fLpF4s1t13+c_^4q0V/2`*?T+<Wd+An<ka%6Q@(1c7H>+?VVqAhuU[4>AcO2Ei6+4?-qa3''Id60fLpJ4s1t13A<-E4q0V/2`*KX+<Wd,0JG=I%6Q@(1c[`B+?VY<0Od3T4>AcO@6PeV4?5)N2EhR40fLpu4s1t13A<0B4q0V/2`,#.+<Wd,0JI$$%6Q@(1h8cm+?VY<0fD3)4>AcOANh4Z4?5)N0g6%/0fLsE4s1t13A<4!4q0V/2`3?S+<Wd,0J[6(%6Q@(2)@E=+?VY<1c.B*4>AcP2Ei6+4?5)Q0Koq.0fLsK4s1t13A<?N4q0V/2`3QY+<Wd,0JtgR%6Q@(2*!iC+?VY<2DRH*4>AcP@6PeV4?5)Q@Qk5`0fLt!4s1t12E##)4q0V/2`5)/+<Wd,0K1gP%6Q@(2.Sln+?VY<2e5)]4>AcPANh4Z4?5)T1-Q.00fLt%4s1t13A<EP4q0V/2`<?R+<Wd,0K:jP%6Q@(2DIB<+?VY<3+>&\4>AcQ1-Qg''4>g_.0Koq.0fM!H4s1t12.e^)4q0V/2`<KV+<Wd(Ai2J1%6Q@(2DmZ@+?VMn2)mc/4>AcQ2Ei6+4>gV)@Qk5`0fM!L4s1t12)J`N4q0V/2`<WZ+<Wd(@l5r(%6Q@(2E<rD+?VMk2*!i04>AcQ@6PeV4>gS,0g6%/0fM""4s1t12.JO#4q0V/2`>/0+<Wd(@l?5/%6Q@(2Inuo+?VSp@UhS24>AcQANh4Z4>g_+@6P,_0fM"&4s1t12.eU(4q0V/2`EES+<Wd(Ahmm\%6Q@(2_dK=+?VV=2`*]-4>AcR1-Qg''4>g_,@m1>a0fM$I4s1t13FXdR4q0V/2`EQW+<Wd(@l@m^%6Q@(2`3cA+?VMA3&*T+4>AcR2Ei6+4>f,Y1Hl710fM$M4s1t12*!X,4q0V/2`G//+<Wd(3FO^-%6Q@(2e"rn+?VMA3B'',24>AcR@m2"X4>f-/@6P,_0fM%%4s1t12*#)S4q0V/2`G;3+<Wd(3B:Y7%6Q@(2eG5r+?VMA@5L.W4>AcS0KpU%4>f-01-Q.00fM''H4s1t12*#,$4q0V/2`NQV+<Wd(3FQM`%6Q@(3&<`@+?VMAA2c[]4>AcS1d3$)4>f-.ANgPc0fM''N4s1t12*#2X4q0V/2`Nc\+<Wd(@5''Z)%6Q@(3&s/F+?VMAAMZLZ4>AcS@6PeV4>f-03''Id60fM($4s1t12*#8/4q0V/2`P;2+<Wd(@5)1T%6Q@(3+P2q+?VMi0KD<+4>AcSANh4Z4>gP''1-Q.00fM((4s1t12.89t4q0V/2`WQU+<Wd(@50K#%6Q@(3AE]?+?VMi1,D*''4>AcT1-Qg''4>gP%1Hl710fM*K4s1t12.8<q4q0V/2`W]Y+<Wd(@5^&.%6Q@(3AiuC+?VMi1grQW4>AcT2Ei6+4>gP)2*MI30fM*O4s1t12.8:N4q0V/2`Wi]+<Wd(@5]l)%6Q@(3B98G+?VMi2`3c.4>AcT@6PeV4?,$+@m1>a0fM+%4s1t12.9p%4q0V/2`YA3+<Wd(@6%d\%6Q@(3Fk;r+?VMi2`Eo04>AcTANh4Z4>gP+@6P,_0fM+)4s1t12.9s*4q0V/2dnC(+<Wd(@:`n3%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>Ad''0g6^&4>gPV1-Q.00fNMr4s1t12.:#N4q0V/2dnL++<Wd(@:V2Y%6Q@(@5L.j+?VMi@Q6O\4>Ad''2*N-*4>gPY0Koq.0fNN!4s1t12.:&P4q0V/2dnX/+<Wd(@:h5X%6Q@(@5pFn+?VMiA2ZU\4>Ad''3BeQ.4>gPY2EhR40fNNL4s1t12.:#T4q0V/2dp/Z+<Wd(@:Wk3%6Q@(@:MJD+?VMj0KD<+4>Ad''A3M+Y4>gS&2a.[50fNNP4s1t12.A9u4q0V/2dp;^+<Wd(@P]c''%6Q@(@PBtg+?VMj1H.K,4>Ad(0g6^&4>gS)0Koq.0fNPs4s1t12.J?u4q0V/2e"R,+<Wd(@khIW%6Q@(@Pg7k+?VMj2.8ZX4>Ad(2*N-*4>gS+2*MI30fNQ"4s1t12.AL#4q0V/2e"^0+<Wd(@Pol(%6Q@(@Q6Oo+?VMj2)@E*4>Ad(3BeQ.4>gS+1-Q.00fNQM4s1t13FOj(4q0V/2e$;]+<Wd,@5hUY%6Q@(@V%_G+?VYm2eG5_4>Ad(Aj.=[4?6h/A3LGb0fNSt4s1t13FOm)4q0V/2e+X-+<Wd,@5p51%6Q@(@l-@l+?VYm3+4u[4>Ad)2*N-*4?6h10Koq.0fNT%4s1t13FOp+4q0V/2e+j3+<Wd,@6$;2%6Q@(A2-7j+?VYm@5U4X4>Ad*1-Qg''4?6hY2a.[50fNW!4s1t12e>!]4q0V/2e4a/+<Wd*ARR;W%6Q@(A2QOn+?VSo@5C(V4>Ad*2Ei6+4?$h[2*MI30fNW''4s1t12e?E.4q0V/2e6>\+<Wd*AR[>W%6Q@(A7@_F+?VSo@V%_44>Ad*Aj.=[4?$h]3Bdm70fNZ!4s1t12e?MR4q0V/2e=d/+<Wd*ARmV]%6Q@(AMcRn+?VSoA2c[]4>Ad+2*N-*4?$h^@Qk5`0fNZ''4s1t12e?P[4q0V/2e>!5+<Wd*AS#=7%6Q@(AS"%J+?VSp0P!?V4>Ad+Aj.=[4?$h`2EhR40fN]"4s1t12e?T44q0V/2eHJ^+<Wd*Ah[g\%6Q@(An4(J+?VSp0fM9*4>Ad,ANh4Z4?$k,3Bdm70fN]V4s1t12eFdS4q0V/3&!$M+<Wd*AhdaY%6Q@)0JPa6+?VSp0kNTY4>AfM1-Qg''4?$k.2*MI30fUmD4s1t12.\^T4q0V/3&*6R+<Wd*2)f,2%6Q@)0f;-;+?VMlA7@_34>AfM2Ei6+4?#,RANgPc0fUmH4s1t13A<HN4q0V/3&*BV+<Wd*1H8r0%6Q@)0f_E?+?VS=3AE],4>AfM@6PeV4?#'')ANgPc0fUms4s1t12`"kt4q0V/3&+o,+<Wd*1HB&2%6Q@)0k<Hj+?VS=@qIn64>AfMANh4Z4?#''+1-Q.00fUn"4s1t12`"u!4q0V/3&30O+<Wd*1L`:,%6Q@)1,1s8+?VS=@P^1W4>AfN1-Qg''4?#''+0Koq.0fUpE4s1t12`"r(4q0V/3&3<S+<Wd*1LiC.%6Q@)1,V6<+?VS=AMlX\4>AfN2Ei6+4?#'',3Bdm70fUpI4s1t13B/s-4q0V/3&3HW+<Wd*1b`?%%6Q@)1-%N@+?VS=AN;p`4>AfN@6PeV4?#''-2a.[50fUpt4s1t12`"uU4q0V/3&4u-+<Wd*1LacV%6Q@)11WQk+?VS=AhlOZ4>AfNANh4Z4?#)NAj-Yd0fUq#4s1t12`*9u4q0V/3&<6P+<Wd*1c8`+%6Q@)1GM''9+?VS>1,_<*4>AfO1-Qg''4?#)P2*MI30fUsF4s1t12`*9L4q0V/3&<BT+<Wd*1c$gL%6Q@)1Gq?=+?VS>11`WY4>AfO2Ei6+4?#)P@m1>a0fUsJ4s1t12`*6u4q0V/3&<NX+<Wd*1biE&%6Q@)1H@WA+?VS>1bh0''ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0fUst4s1t12`*C%4q0V/3&>#-+<Wd*1c73U%6Q@)1LiTk+?VS>2)RQ,4>AfOA3M+Y4?#)S3Bdm70fUt#4s1t12`*HP4q0V/3&>/1+<Wd*1cAl.%6Q@)1b_*9+?VS>2e>/^4>AfP0g6^&4?#)W@m1>a0fV!F4s1t12`*L*4q0V/3&EKV+<Wd*1cREX%6Q@)1c@N?+?VS>3+>&\4>AfP2a/?,4?#)WANgPc0fV!u4s1t12`*NK4q0V/3&G).+<Wd*1gr=,%6Q@)1h/]l+?VS>A26=X4>AfPA3M+Y4?#*+@6P,_0fV$F4s1t12E*I&4q0V/3&NHT+<Wd)2`3BT%6Q@)2)@E=+?VP@2.\r\4>AfQ1d3$)4>o,T3''Id60fV$J4s1t12E*NS4q0V/3&NTX+<Wd)2dnR-%6Q@)2)d]A+?VP@3&a#14>AfQ3''JH-4>o,V@6P,_0fV$N4s1t12E*QN4q0V/3&P,.+<Wd)2`Wi]%6Q@)2.A`l+?VP@@5g@Z4>AfQ@m2"X4>o,W2*MI30fV%$4s1t12E,&(4q0V/3&P82+<Wd)2`YG5%6Q@)2.f#p+?VP@@:VP24>AfR0KpU%4>o,X@Qk5`0fV''G4s1t12E*QR4q0V/3&WNU+<Wd)2`G51%6Q@)2D[N>+?VP@AhZCX4>AfR1d3$)4>o/Q3Bdm70fV''K4s1t12E,/+4q0V/3&WZY+<Wd)3&"c)%6Q@)2E*fB+?VP@AN;p`4>AfR3''JH-4>o--0Koq.0fV''O4s1t12E3C#4q0V/3&Y2/+<Wd)2e4p4%6Q@)2I\im+?VP@@Pp=Y4>AfR@m2"X4>o-/@6P,_0fV(%4s1t12E,)$4q0V/3&Y>3+<Wd)2e6G_%6Q@)2J,,q+?VPA0JG["4>AfS0KpU%4>o-.1Hl710fV*H4s1t12E,))4q0V/3&`TV+<Wd)2e=a.%6Q@)2`!W?+?VPA0P*EW4>AfS1d3$)4>o-.0g6%/0fV*L4s1t12E,5Y4q0V/3&b80+<Wd)3&G21%6Q@)2e"rn+?VPA2DRH*4>AfS@m2"X4>o/U1d2@20fV+&4s1t12E3TO4q0V/3&bD4+<Wd)3&i]X%6Q@)2eG5r+?VPA0k<HW4>AfT0KpU%4>o/V2*MI30fV-I4s1t12E3TQ4q0V/3&iZW+<Wd)3&E?R%6Q@)3&<`@+?VPA2E*f/4>AfT1d3$)4>o/U0Koq.0fV-M4s1t12E3L(4q0V/3&if[+<Wd)3&G&-%6Q@)3&a#D+?VPA1c[`/4>AfT3''JH-4>o/S3Bdm70fV-Q4s1t12E5/''4q0V/3&k>1+<Wd)3&kM6%6Q@)3+>&o+?VPA2`*]-4>AfT@m2"X4>o/X2a.[50fV.''4s1t12E3]Q4q0V/3&kJ5+<Wd)3&Y50%6Q@)3+b>s+?VPA@kp4W4>AfU0KpU%4>o2XANgPc0fV0J4s1t12E5;Y4q0V/3&rfZ+<Wd)3+b07%6Q@)3AiuC+?VPB1,M0(4>AfU2Ei6+4>o020Koq.0fV0P4s1t12E<I#4q0V/3&rr^+<Wd)3A<0O%6Q@)3B98G+?VPB2)d].4>AfU@6PeV4>o011Hl710fV1&4s1t12E<KG4q0V/3&tJ4+<Wd)3B&ZV%6Q@)3Fk;r+?VPB1H@W.4>AfUANh4Z4>o2X0Koq.0fV1*4s1t12E<TL4q0V/3+4L)+<Wd)3Ak>2%6Q@)@50qg+?VPB3&Ef.4>Ag(1-Qg''4>o2X@Qk5`0fWSt4s1t12E<`N4q0V/3+4X-+<Wd)3B9&_%6Q@)@5U4k+?VPB2`Nu14>Ag(2Ei6+4>o2U1d2@20fWT#4s1t12E>8W4q0V/3+65Z+<Wd)3FcVa%6Q@)@:DDC+?VPB3&s/34>Ag(@m2"X4>o2X2EhR]DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c3+6>]+<Wd)3ArZW%6Q@)@:_VF+?VPB2`X&24>Ag(Aj.=[4>o2[@Qk5`0fWVr4s1t12E>2)4q0V/3+=U++<Wd)3FZG]%6Q@)@PU+i+?VPB@:DD04>Ag)1Hlp(4>o3.A3LGb0fWW!4s1t12E>;)4q0V/3+=a/+<Wd)3FX^,%6Q@)@Q$Cm+?VPB@kg.V4>Ag)2a/?,4>o30@6P,_0fWW%4s1t12E>;[4q0V/3+=m3+<Wd)3B8r\%6Q@)@UVGC+?VPBAM?:W4>Ag)@QknW4>o2ZA3LGb0fWWP4s1t12E>A]4q0V/3+?D^+<Wd)@5;FY%6Q@)@V%_G+?VPBARmt64>Ag*0g6^&4>pV+2*MI30fWYu4s1t12E>A)4q0V/3+Fa.+<Wd)@5Kf)%6Q@)@l-@l+?VPj1M&`Z4>Ag*2*N-*4>pVV0Koq.0fWZ$4s1t12ISHs4q0V/3+Fm2+<Wd)@5VLX%6Q@)@lQXp+?VPj1Gq?*4>Ag*3BeQ.4>pV-ANgPc0fWZO4s1t12ISO)4q0V/3+HD]+<Wd)@5DFX%6Q@)@q.\F+?VPj1,qH,4>Ag*A3M+Y4>pV*3''Id60fWZS4s1t12ISOS4q0V/3+HPa+<Wd)@6$&+%6Q@)A2$1i+?VPj3A<W+4>Ag+0g6^&4>pVV3Bdm70fW]!4s1t12ISU)4q0V/3+Og/+<Wd)@:<V/%6Q@)A2HIm+?VS=1H.K,4>Ag+2*N-*4?#&R1-Q.00fW]''4s1t12I\X)4q0V/3+P$5+<Wd)@Q62.%6Q@)A7IeG+?VPk3+P2^4>Ag+Aj.=[4>pYW0g6%/0fW_u4s1t12I^*''4q0V/3+Xg.+<Wd+Ai=*^%6Q@)AMQFl+?VVq2Inu\4>Ag,3''JH-4?-q33''Id60fW`)4s1t13+b*.4q0V/3+ZS`+<Wd+AiF3`%6Q@)ARmtI+?VVq2e>/^4>Ag-0KpU%4?-q41d2@20fWc"4s1t13+b-/4q0V/3+ap0+<Wd+AiO6`%6Q@)Ai;gq+?VVq3B0234>Ag-2a/?,4?-q5@6P,_0fWc)4s1t13+ZT24q0V/3+b07+<Wd)1,*0$%6Q@)AmmkG+?VP;0fM9*4>Ag-@QknW4>nrL@Qk5`0fWcT4s1t12DR"!4q0V/3+c\b+<Wd)1,:UK%6Q@)An=.K+?VP;1,1s%4>Ag-Aj.=[4>nrM2*MI30f^pA4s1t12DR$E4q0V/3A<0O+<Wd)1,<?''%6Q@*0JYg7+?VV<AN)d^4>AiM1Hlp(4?#*.Aj-Yd0f^pE4s1t12`,,''4q0V/3A<<S+<Wd*1hL>`%6Q@*0K)*;+?VS?0P3KX4>AiM2a/?,4?#,P0g6%/0f^pI4s1t12`3<G4q0V/3A<HW+<Wd)2)@''Q%6Q@*0P!?i+?VP?0O[-S4>AiMANh4Z4>o)P3Bdm70f^q"4s1t12E*QM4q0V/3AE3O+<Wd)2D?pN%6Q@*0ekj7+?VP?0f;-(4>AiN1-Qg''4>o)O0Koq.0f^sE4s1t12_[3K4q0V/3AE?S+<Wd)2J+m3%6Q@*0f;-;+?VP?0k<HW4>AiN2Ei6+4>o)R1d2@20f^sI4s1t12E!?G4q0V/3AEKW+<Wd)2D[6T%6Q@*0f_E?+?VP?1Gq?*4>AiN@6PeV4?,#K2EhR40f^st4s1t12E!F)4q0V/3AG#-+<Wd)2Dm<T%6Q@*0k<Hj+?VP?1bh0''4>AiNANh4Z4>o)SAj-Yd0f^t#4s1t12E!EN4q0V/3AN9P+<Wd)2E!9R%6Q@*1,1s8+?VP?2)d].4>AiO1-Qg''4>o)V2a.[50f_!F4s1t12E!NO4q0V/3ANET+<Wd)2E521%6Q@*1,V6<+?VP?@5g@Z4>AiO2Ei6+4>o)XA3LGb0f_!J4s1t12E##U4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@*11<?h+?VP?AMu^]4>AiO@QknW4>o*/3Bdm70f_"#4s1t13+Og''4q0V/3AP21+<Wd+A2@[Y%6Q@*1GD!8+?VVo1LrZY4>AiP0g6^&4?-k.0Koq.0f_$J4s1t13+Oj)4q0V/3AWTX+<Wd+A2Ig\%6Q@*1H7Q@+?VVo2)RQ,4>AiP3BeQ.4?-k/3Bdm70f_$u4s1t13&tJ-4q0V/3A`KT+<Wd*1,`]-%6Q@*1c%<<+?VS<3G(Ga4>AiQ1d3$)4?##QA3LGb0f_''J4s1t12_m9L4q0V/3A`WX+<Wd*1,``.%6Q@*1c[`B+?VS<3&Ef.4>AiQ@6PeV4?##T@Qk5`0f_("4s1t12_m@''4q0V/3Ab50+<Wd*1,rl0%6Q@*1h8cm+?VS<3ANc-4>AiQANh4Z4>nuL3''Id60f_(&4s1t12D[-E4q0V/3AiKS+<Wd)1L`%%%6Q@*2).9;+?VP=1M/f[4>AiR1-Qg''4>o$,3''Id60f_*I4s1t13&!$C4q0V/3AiWW+<Wd)@V&t3%6Q@*2)RQ?+?VPkAhuU[4>AiR2Ei6+4>pY\A3LGb0f_*M4s1t12I^8U4q0V/3Aic[+<Wd)@V.Va%6Q@*2*!iC+?VPl0Ju$''4>AiR@6PeV4>p\''2a.[50f_+#4s1t12IeF!4q0V/3Ak;1+<Wd)@k_FW%6Q@*2.Sln+?VPl0f;-(4>AiS0g6^&4>p\)0g6%/0f_-I4s1t12IeL&4q0V/3ArZW+<Wd)@kol)%6Q@*2DdT?+?VPl11<?U4>AiS2*N-*4>p\*1-Q.00f_-M4s1t12Dm9J4q0V/3Arf[+<Wd)2)R6T%6Q@*2E3lC+?VP>2I\iZ4>AiS3BeQ.4?##PA3LGb0f_.#4s1t12_m6G4q0V/3At>1+<Wd*1,UsR%6Q@*2Ieon+?VS<1GD!%4>AiSA3M+Y4?,5W1-Q.00f_.''4s1t12)6mE4q0V/3AtJ5+<Wd+0KE`/%6Q@*2_[E<+?VV;3Fb5^4>AiT0g6^&4?,#T1Hl710f_0J4s1t13&"fO4q0V/3B&`X+<Wd)2_\Z(%6Q@*2`*]@+?VV;@UqY34>AiT2*N-*4?,$(0g6%/0f_0N4s1t13&"cM4q0V/3B&l\+<Wd+0O\KU%6Q@*2`NuD+?VV;@Pg7X4>AiT3BeQ.4?,$(2a.[50f_1(4s1t13&"lP4q0V/3B(P6+<Wd+0Olk%%6Q@*3&!N=+?VV;@l-@Y4>AiU0g6^&4?,$*3Bdm70f_3K4s1t13&"iQ4q0V/3B/fY+<Wd+0P!++%6Q@*3&EfA+?VP@0ebd#4>AiU2*N-*4?,$*A3LGb0f_3O4s1t13&"oQ4q0V/3B/r]+<Wd+0P3%''%6Q@*3&j)E+?VV;Ai)[\4>AiU3BeQ.4?,$+A3LGb0f_4''4s1t13&"r"4q0V/3B1P5+<Wd+0P4fY%6Q@*3+Y8r+?VP@0f;-(4>AiUAj.=[4?,&M1-Q.00f_6J4s1t13+FgS4q0V/3B8fX+<Wd+0f(^O%6Q@*3ANc@+?VV<0kENX4>AiV1Hlp(4?,&N@m1>a0f_6N4s1t13&*-I4q0V/3B8r\+<Wd+0f(RK%6Q@*3As&D+?VV<1cRZ.4>AiV2a/?,4?,&P@m1>a0f_6R4s1t13&*9H4q0V/3B9)`+<Wd+0fLpQ%6Q@*3Fb5q+?VV<2_dK*4>AiVA3M+Y4?,&R0Koq.0f_7*4s1t13&*<O4q0V/3FOX++<Wd+0fEQ+%6Q@*@5:"h+?VV<2E*f/4>Aj)1Hlp(4>f)TA3LGb0f`Z!4s1t12.9rO4q0V/3FOd/+<Wd+0fV-V%6Q@*@5^:l+?VV<3&3Z,4>Aj)2a/?,4?,&U0g6%/0f`Z%4s1t12J$DV4q0V/3FOp3+<Wd+0juk%%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>Aj)@6PeV4?,''(@6P,_0f`ZO4s1t13&+oQ4q0V/3FQD]+<Wd)2_m9T%6Q@*@:VPE+?VV<@pqP14>Aj)ANh4Z4?,'')@Qk5`0f`ZS4s1t13&+nt4q0V/3FX[++<Wd+0jut(%6Q@*@PL%h+?VPk1,M0(4>Aj*1-Qg''4>pY)2a.[50f`]!4s1t12I\I&4q0V/3FXg/+<Wd)@Pfl)%6Q@*@Pp=l+?VPk1c@N,4>Aj*2Ei6+4>pY+3Bdm70f`]O4s1t13B1P,4q0V/3FZM_+<Wd)@U_,W%6Q@*@V%_G+?VMn1b_*&4>Aj*Aj.=[4>pYY1-Q.00f`_t4s1t13&tS,4q0V/3Fad-+<Wd)2*!?S%6Q@*@kp4j+?VYr2).9(4>Aj+1Hlp(4>o&W1Hl710f``#4s1t12DnrR4q0V/3Fap1+<Wd)2.JO.%6Q@*@l?Ln+?VP>@l-@Y4>Aj+2a/?,4>o'',1Hl710f``''4s1t12DnuS4q0V/3Fb''5+<Wd)2.L2]%6Q@*@pqPD+?VP>A26=X4>Aj+@QknW4>o''-2EhR40f``R4s1t12_[3F4q0V/3FcS`+<Wd*0KEW,%6Q@*@q@hH+?VS:3As&14>Aj+Aj.=[4?"rSA3LGb0f`bu4s1t12_\]M4q0V/3Fjj.+<Wd*0Ole#%6Q@*A26=k+?VS:@Q-I[4>Aj,1Hlp(4?"s&@Qk5`0f`c$4s1t12_\\q4q0V/3Fk!2+<Wd*0P*4-%6Q@*A2ZUo+?VS:@pqP14>Aj,2a/?,4?"uL0Koq.0f`c(4s1t12_d$C4q0V/3Fk-6+<Wd*0ekRM%6Q@*A77YE+?VS;11i]Z4>Aj,@QknW4?"uN0g6%/0f`cS4s1t12_d6I4q0V/3FlYa+<Wd*0f<H)%6Q@*A7[qI+?VS;2E3l04>Aj,Aj.=[4?"uO2*MI30f`f!4s1t12_d6H4q0V/3Fsp/+<Wd*0f3<&%6Q@*AMQFl+?VS;2`Nu14>Aj-1Hlp(4?"uR@6P,_0f`f%4s1t12_d<P4q0V/3Ft''3+<Wd*0k)q&%6Q@*AMu^p+?VS;@Pp=Y4>Aj-2a/?,4?#!''3''Id60f`f)4s1t12_e_p4q0V/3Ft37+<Wd*0kE%&%6Q@*ARRbF+?VS;A2HIZ4>Aj-@QknW4?#!+2a.[50f`fT4s1t12_eo)4q0V/3Fu_b+<Wd*1,3<''%6Q@*AS"%J+?VS<1,qH,4>Aj-Aj.=[4?"rP@m1>a0f`i"4s1t12_d$H4q0V/3G(!0+<Wd*0fCpR%6Q@*AhlOm+?VS;@Q?U]4>Aj.1Hlp(4>nrNANgPc0f`i&4s1t12DR(!4q0V/3G(-4+<Wd)1,LdN%6Q@*AiMss+?VSC1L`NW4>Aj.3BeQ.4?#8W0Koq.0f`iS4s1t12`W]Q4q0V/3G)_a+<Wd*3A``[%6Q@*An=.K+?VSC2)@E*4>Aj.Aj.=[4?#8X@6P,_0juai4s1t12`WcO4q0V/@5''E"+<Wd*3Ai`Z%6Q@R0JYg7+?VSC2D@<(4>C7u1Hlp(4?#8YAj-Yd0juam4s1t12`WcT4q0V/@5''Q&+<Wd*3B(A1%6Q@R0K)*;+?VSC3&Nl/4>C7u2a/?,4?#8[@6P,_0juaq4s1t12`Wm,4q0V/@5'']*+<Wd*3FOj1%6Q@R0O[-f+?VSC@P^1W4>C7u@QknW4>g_]0g6%/0jubG4s1t12.gAQ4q0V/@5)4U+<Wd)0Jd3&%6Q@R0P*Ej+?VP92.Sl[4>C7uAj.=[4>nlN@6P,_0judj4s1t12D@$J4q0V/@50K#+<Wd)0JkLJ%6Q@R0etp8+?VP92*!i04>C8!1Hlp(4>nlO1Hl710judn4s1t12DAQK4q0V/@50W''+<Wd)0ebLL%6Q@R0fD3<+?VP:0P!?VASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0judq4s1t12DI("4q0V/@50`*+<Wd)0k!(+%6Q@R0f_E?+?VP:3Fk;_4>C8!@6PeV4>np(@Qk5`0jueG4s1t12DJ_s4q0V/@527U+<Wd)1,(UM%6Q@R0k<Hj+?VV;3&!N*4>C8!ANh4Z4?,#RAj-Yd0jueK4s1t12Iea''4q0V/@59N#+<Wd)@qIV_%6Q@R1,1s8+?VPmAn+"64>C8"1-Qg''4?#322EhR40jugn4s1t12`G>.4q0V/@59Z''+<Wd*3&!$M%6Q@R1,V6<+?VSB0KD<+4>C8"3''JH-4?#5S0g6%/0jugt4s1t12DnoP4q0V/@5;7T+<Wd*3&5#.%6Q@R1GD!8+?VSB0kNTY4>C8#0g6^&4?#5U@m1>a0jujn4s1t12`NQM4q0V/@5B]''+<Wd*3&4u-%6Q@R1Gh9<+?VSB1,D*''4>C8#2*N-*4?#5T3Bdm70jujr4s1t12`NX*4q0V/@5Bi++<Wd*3&Y;2%6Q@R1LWHi+?VSB1,_<*4>C8#@QknW4?#5W0Koq.0jukJ4s1t12`NWQ4q0V/@5DFX+<Wd*3&G,/%6Q@R1M&`m+?VSB2IScY4>C8#Aj.=[4?#5[@Qk5`0jumm4s1t12`NfR4q0V/@5K]&+<Wd*3&tD2%6Q@R1bq6;+?VSB3&a#14>C8$1Hlp(4?#5[@m1>a0jumq4s1t12`P5#4q0V/@5Ki*+<Wd*3+4U,%6Q@R1c@N?+?VSB@PU+V4>C8$2a/?,4?#6/3Bdm70jumu4s1t12`P5''4q0V/@5Ku.+<Wd*3+Oj0%6Q@R1grQj+?VSBA2ug_4>C8$@QknW4?#603Bdm70junK4s1t12`PAY4q0V/@5MLY+<Wd*3+ap0%6Q@R1hAin+?VSC0Ju$''4>C8$Aj.=[4?#631d2@20jupn4s1t12`WTK4q0V/@5Tc''+<Wd*3ANET%6Q@R2)7?<+?VSC0kENX4>C8%1Hlp(4?#8V1d2@20jupr4s1t13G(9\4q0V/@5To++<Wd,AS*qd%6Q@R2)mcB+?VS@AhcIY4>C8%3BeQ.4?#2Q1d2@20juqJ4s1t12`EF$4q0V/@5VLX+<Wd*2J+s5%6Q@R2.\ro+?VSA0k!6T4>C8%Aj.=[4?#2S1-Q.00juso4s1t12`EHO4q0V/@5]i(+<Wd*2_no-%6Q@R2DRH=+?VSA1,_<*4>C8&1Hlp(4?#2T2*MI30juss4s1t12`ENP4q0V/@5^&.+<Wd*2`*HW%6Q@R2E3lC+?VSA1c%<)4>C8&3BeQ.4?#2V@6P,_0jutK4s1t12`EWS4q0V/@5_RY+<Wd*2`<ET%6Q@R2Ieon+?VSA2DmZ-4>C8&A3M+Y4?#2XAj-Yd0jutO4s1t12`E^,4q0V/@5_^]+<Wd*2`G82%6Q@R2_[E<+?VSA3&!N*4>C8''0g6^&4?#2Y@m1>a0k!!r4s1t12`E`O4q0V/@5g&-+<Wd*2e"I)%6Q@R2`<iB+?VSA@Pp=Y4>C8''2a/?,4?#3.A3LGb0k!"#4s1t12`3C"4q0V/@5g21+<Wd*2)I!N%6Q@R2dnlm+?VS?1hAi[4>C8''@QknW4?#,S@Qk5`0k!"N4s1t12`3EO4q0V/@5h^\+<Wd*2)Si,%6Q@R2e>/q+?VS?2_mQ+4>C8''Aj.=[4?#,V3Bdm70k!$q4s1t12`3QN4q0V/@5ou*+<Wd*Ai2P3%6Q@R3&3Z?+?VSp2DIB)4>C8(1Hlp(4?$k0Aj-Yd0k!$u4s1t13+4X''4q0V/@5p,.+<Wd*Ai;V4%6Q@R3&WrC+?VSp2`*]-4>C8(2a/?,4?$k20g6%/0k!%$4s1t12eG!/4q0V/@5p82+<Wd*AiMM/%6Q@R3+4un+?VSp2e>/^4>C8(@QknW4?#0.A3LH6DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c@5qa\+<Wd*2J"a0%6Q@R3+P2q+?VVC1GV-''4>C8)0g6^&4?55X@Qk5`0k!''t4s1t13A`^(4q0V/@6$81+<Wd,1c[BV%6Q@R3B02F+?VY@3B'',24>C8)3BeQ.4?55Y2*MI30k!(S4s1t13Ab/R4q0V/@::iR+<Wd,1gsfV%6Q@R@50qg+?VY@@:VP24>C8Q1-Qg''4?56,@m1>a0k"KJ4s1t13Ab2#4q0V/@:;&X+<Wd,1h&:*%6Q@R@:_VF+?VY@@V.e54>C8QAj.=[4?56.1d2@20k"O%4s1t13Ab8,4q0V/@:Ee3+<Wd,1h8R0%6Q@R@V.eH+?VY@A7@_34>C8S1Hlp(4?5601-Q.00k"QO4s1t13Ab;U4q0V/@:M;]+<Wd,1hA[2%6Q@R@pqPD+?VY@AR[h44>C8T0KpU%4?5612a.[50k"TI4s1t13Ab>.4q0V/@:V2Y+<Wd,1hL>`%6Q@RA2QOn+?VYA0Jbm%4>C8T2Ei6+4?58Q1-Q.00k"WL4s1t13AiNN4q0V/@:_8Z+<Wd,2)/Q(%6Q@RAN2jr+?VYA1,;$&4>C8U@QknW4?58S3Bdm70k"X''4s1t13AiR%4q0V/@:a%7+<Wd,2)@''Q%6Q@RAhuUn+?VYA1LiTX4>C8V2Ei6+4?58U1-Q.00k"ZQ4s1t13AiTM4q0V/@:it4+<Wd,2)I<W%6Q@RAn+"I+?VYA1h/]Y4>C8VAj.=[4?58V1-Q.00k)gp4s1t13Ai[''4q0V/@PBf++<Wd,2)So.%6Q@S0f;-;+?VYA2J,,^4>C;"3BeQ.4?58T@6P,_0k)kG4s1t12`G;,4q0V/@PM=U+<Wd*2e?J_%6Q@S0k3Bi+?VYB@lZ^^4>C;"A3M+Y4?#922*MI30k)kK4s1t12`YG[4q0V/@PMIY+<Wd*3Ft!1%6Q@S1,(m7+?VSCAR[h44>C;#0g6^&4?$\&2EhR40k)mn4s1t12.SO&4q0V/@PT`''+<Wd*@5''K$%6Q@S1,M0;+?VSk0JYg$4>C;#2*N-*4?$\''ANgPc0k)mr4s1t12dnEt4q0V/@PTl++<Wd*@5Bo-%6Q@S1,qH?+?VSk1H.K,4>C;#3BeQ.4?$\+0g6%/0k)nH4s1t13Fu]44q0V/@PVCV+<Wd,3FOd/%6Q@S11NKj+?VSk2_[E)4>C;#A3M+Y4?#/X3''Id60k)nL4s1t12`<X,4q0V/@PVOZ+<Wd*2E<QW%6Q@S1GD!8+?VS@3B9844>C;$0g6^&4?#0,1d2@20k)po4s1t12`,&V4q0V/@P]f(+<Wd*1hA@)%6Q@S1Gh9<+?VS?11NKW4>C;$2*N-*4?6t.0Koq.0k)ps4s1t13Fss$4q0V/@P_LX+<Wd,AMZ)*%6Q@S1LrZl+?VYq1GM''&4>C;$ANh4Z4?6t/2EhR40k)qN4s1t13Ft!+4q0V/@Pfc&+<Wd,AMZ8/%6Q@S1c%<<+?VYq1M&`Z4>C;%2Ei6+4?6t01d2@20k)tM4s1t13Ft$Y4q0V/@PhX[+<Wd,AMl2+%6Q@S1hJoo+?VYq2)RQ,4>C;&0KpU%4?6t12a.[50k*!s4s1t13Ft''Z4q0V/@Pp#,+<Wd,AMu>.%6Q@S2.Sln+?VYq2_dK*4>C;&ANh4Z4?6t2A3LGb0k*"P4s1t13Ft-*4q0V/@Q#o(+<Wd*2*!EU%6Q@S2DIB<+?VS?3A`o/4>C;''1-Qg''4?#,X2EhR40k*$s4s1t12`5"t4q0V/@Q$&,+<Wd*2*#22%6Q@S2DmZ@+?VS?@:MJ14>C;''2Ei6+4?#-+1Hl710k*%$4s1t12`5&(4q0V/@Q%XY+<Wd*2.JI,%6Q@S2I\im+?VS?@PL%U4>C;''@m2"X4?#-,0Koq.0k*%O4s1t12`5)$4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@S2J#&p+?VS?@kp4W4>C;''Aj.=[4?#-.2EhR40k*''q4s1t12`5)U4q0V/@Q-#*+<Wd*2.\R-%6Q@S2_mQ>+?VS?AN2j_4>C;(1Hlp(4?#-/2EhR40k*''u4s1t12`5/''4q0V/@Q-/.+<Wd*2.^5\%6Q@S2`<iB+?VS?AN)d^4>C;(2a/?,4?#/P1Hl710k*($4s1t12`52%4q0V/@Q-;2+<Wd*2.g>^%6Q@S2dnlm+?VS?AnF494>C;(@QknW4?#/Q0Koq.0k*(O4s1t12`<?D4q0V/@Q.g]+<Wd*2D@!P%6Q@S2e>/q+?VS@0Om9U4>C;(Aj.=[4?#/Q2a.[50k**r4s1t12`<?u4q0V/@Q6)++<Wd*2DR-R%6Q@S3&3Z?+?VS@0fV?+4>C;)1Hlp(4?#/Q2*MI30k*+!4s1t12`<BN4q0V/@Q65/+<Wd*2DJZ)%6Q@S3&WrC+?VS@1LiTX4>C;)2a/?,4?#/R1-Q.00k*+%4s1t12`<EF4q0V/@Q6A3+<Wd*2Dd*O%6Q@S3+4un+?VS@11WQX4>C;)@QknW4?#/S0Koq.0k*+P4s1t12`<I(4q0V/@Q7m^+<Wd*2D[3S%6Q@S3+Y8r+?VS@1c%<)4>C;)Aj.=[4?#/SANgPc0k*-s4s1t12`<HJ4q0V/@Q?/,+<Wd*2Der.%6Q@S3ANc@+?VS@2.\r\4>C;*1Hlp(4?#/U1d2@20k*."4s1t12`<O''4q0V/@Q?;0+<Wd*2DmBV%6Q@S3As&D+?VS@2I\iZ4>C;*2a/?,4?#/VAj-Yd0k*.&4s1t12eHQ.4q0V/@Q?G4+<Wd*@:_>\%6Q@S3Fb5q+?VSk3&!N*4>C;*A3M+Y4?$\.2EhR40k*.S4s1t12dn[*4q0V/@QA$a+<Wd*@6$2/%6Q@S@5''kf+?VSk@5^:Y4>C;R0g6^&4?$\W0Koq.0k+QH4s1t12dp-)4q0V/@UV&V+<Wd*@:;,Z%6Q@S@5L.j+?VSk@:VP24>C;R2*N-*4?$\X1Hl710k+QL4s1t13&ifQ4q0V/@UV2Z+<Wd+3&Wc\%6Q@S@5pFn+?VVC2_mQ+4>C;R3BeQ.4?,;ZA3LGb0k+R"4s1t13&ij/4q0V/@UW_0+<Wd+3&iZW%6Q@S@:MJD+?VVC@5:"U4>C;RA3M+Y4?,<12EhR40k+R&4s1t13&kA+4q0V/@UWk4+<Wd+3+?A]%6Q@S@PBtg+?VVC@lZ^^4>C;S0g6^&4?,<31-Q.00k+TI4s1t13&kDZ4q0V/@U_,W+<Wd+3+Xm0%6Q@S@Pg7k+?VVCAMlX\4>C;S2*N-*4?,<40g6%/0k+TM4s1t13&r^%4q0V/@U_8[+<Wd+3+cYa%6Q@S@Q6Oo+?VVCAN2j_4>C;S3BeQ.4?,<4ANgPc0k+U#4s1t13&kM(4q0V/@U`e1+<Wd+3AN<Q%6Q@S@UhSE+?VVD0f_E,4>C;SA3M+Y4?,>U1Hl710k+U''4s1t13&r^&4q0V/@U`q5+<Wd+3A=l*%6Q@S@k^(h+?VVD1Gh9)4>C;T0g6^&4?,>V@Qk5`0k+WJ4s1t13&rcQ4q0V/@Uh2X+<Wd+3A`HS%6Q@S@l-@l+?VVD2E!`.4>C;T2*N-*4?,>[@Qk5`0k+WN4s1t12`3R(4q0V/@Uh>\+<Wd+0P*+*%6Q@S@lQXp+?VS@@PU+V4>C;T3BeQ.4?#0-1d2@20k+X$4s1t12`G8W4q0V/@Uik2+<Wd+0JP=H%6Q@S@q.\F+?VV;0f2''''4>C;TA3M+Y4?,#L2EhR40k+X(4s1t13&!''s4q0V/@Uj"6+<Wd+0JY=G%6Q@SA2$1i+?VV;1,;$&4>C;U1d3$)4?,#M3Bdm70k+ZN4s1t13&!*I4q0V/@UqA\+<Wd+0JbFI%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>C;U2a/?,4?,#K@Qk5`0k+ZQ4s1t13&!-G4q0V/@UqJ_+<Wd+0JkRL%6Q@SA77YE+?VV;1c@N,4>C;U@QknW4?,#OA3LGb0k+[''4s1t13&!3F4q0V/@Us"5+<Wd+0K(pT%6Q@SA7[qI+?VV;2_dK*4>C;UAj.=[4?,>\1Hl710k+]J4s1t13B/rW4q0V/@V%8X+<Wd,3&iTU%6Q@SAMQFl+?VYD3&<`-4>C;V1Hlp(4?5A\3Bdm70k+]P4s1t13B0!14q0V/@V%J^+<Wd,3&rfZ%6Q@SAhZCk+?VVA1h8cZ4>C;W0g6^&4?,5V1d2@20k+`M4s1t13&W[)4q0V/@V.D[+<Wd+2E#,1%6Q@SAi)[o+?VVA2eG5_4>C;W2*N-*4?,5X@6P,_0k+`Q4s1t13&W^*4q0V/@V.P_+<Wd+2E,)/%6Q@SAiMss+?VVA@5pF[4>C;W3BeQ.4?,5YA3LGb0k+a''4s1t13&Wa*4q0V/@V0(5+<Wd+2IU)Z%6Q@SAn+"I+?VVA3Fk;_4>C;WA3M+Y4?,6-2a.[50k+a+4s1t13&Y2$4q0V/@V049+<Wd+2IU#X%6Q@T0JG[5+?VVA3AWi.4>C>"0g6^&4?,6-3Bdm70k2mm4s1t13&Y5(4q0V/@k]]&+<Wd+2IeR-%6Q@T0Jks9+?VVA@Pp=Y4>C>"2*N-*4?,6/ANgPc0k2mq4s1t13&Y5"4q0V/@k]i*+<Wd+2I^)Y%6Q@T0K;6=+?VVA@PL%U4>C>"3BeQ.4?,6-Aj-Yd0k2nG4s1t13&Y8,4q0V/@k_@U+<Wd+2Ig>_%6Q@T0Om9h+?VVA@Pg7X4>C>"A3M+Y4?,613Bdm70k2pl4s1t13&Y>Y4q0V/@kf]%+<Wd+2J+a/%6Q@T0etp8+?VVAA2$1V4>C>#1Hlp(4?,8S1Hl710k2pp4s1t13&Y;Y4q0V/@kfi)+<Wd+2J+d0%6Q@T0fD3<+?VVAA7e"74>C>#2a/?,4?,603''Id60k2pt4s1t13&Y;%4q0V/@kfu-+<Wd+2_[$O%6Q@T0k!6g+?VVB0K20)4>C>#@QknW4?,623''Id60k2qJ4s1t13&`NN4q0V/@khLX+<Wd+2_\Z(%6Q@T0kENk+?VVB0P!?V4>C>#Aj.=[4?,8R3Bdm70k2sm4s1t13&`TK4q0V/@koc&+<Wd+2`"o,%6Q@T1,;$9+?VVB0kENX4>C>$1Hlp(4?,8T2*MI30k2sq4s1t13&`U(4q0V/@koo*+<Wd+2_e`)%6Q@T1,_<=+?VVB1M&`Z4>C>$2a/?,4?,8V3''Id60k2su4s1t13&`WM4q0V/@kp&.+<Wd+2`!0P%6Q@T11<?h+?VVB1-%N-4>C>$@QknW4?,8U2a.[50k2tK4s1t13&`X*4q0V/@kqRY+<Wd+2`NQV%6Q@T11`Wl+?VVB1,;$&4>C>%0g6^&4?,8Y@Qk5`0k3!p4s1t13&``L4q0V/@l#o)+<Wd+2`EES%6Q@T1Gh9<+?VVB1h/]Y4>C>%2*N-*4?,8XANgPc0k3!t4s1t13&`g+4q0V/@l$&-+<Wd+2`3BT%6Q@T1H7Q@+?VVB2D[N+4>C>%3BeQ.4?,8Y@m1>a0k3"J4s1t13&``P4q0V/@l%RX+<Wd+2`3TZ%6Q@T1LiTk+?VVB2DmZ-4>C>%A3M+Y4?,8[1Hl710k3"N4s1t13&b8X4q0V/@l%^\+<Wd+2dn[0%6Q@T1b_*9+?VVBA26=X4>C>&0g6^&4?,902EhR40k3$q4s1t13&`fV4q0V/@l,u*+<Wd+2`NZY%6Q@T1c.B=+?VVB@:VP24>C>&2*N-*4?,8[2a.[50k3$u4s1t13&`fQ4q0V/@l-,.+<Wd+2dp/Z%6Q@T1cRZA+?VVBAMlX\ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0k3%#4s1t13&b8U4q0V/@l.UX+<Wd+2e"X.%6Q@T1h&Wk+?VVB@P^1W4>C>&@m2"X4?,90@Qk5`0k3%N4s1t13&bA(4q0V/@l.a\+<Wd+2e$;]%6Q@T1hJoo+?VVBA2-7W4>C>''0KpU%4?,900Koq.0k3''q4s1t13&b>U4q0V/@l6#*+<Wd+2e6A]%6Q@T2)@E=+?VVBARRb34>C>''1d3$)4?,920Koq.0k3''u4s1t13&bD[4q0V/@l6/.+<Wd+3&*<T%6Q@T2)d]A+?VVC0f)!&4>C>''3''JH-4?,93ANgPc0k3($4s1t13&iU#4q0V/@l7[Y+<Wd+3&+l+%6Q@T2.A`l+?VVC1,1s%4>C>''@m2"X4?,;V3Bdm70k3(O4s1t13&i^(4q0V/@l7g]+<Wd*Ahu>/%6Q@T2.f#p+?VSp1bq6(4>C>(1-Qg''4?,)N0Koq.0k3*t4s1t12dp<,4q0V/@l?/-+<Wd*@:j%6%6Q@T2DmZ@+?VSl0K;6*4>C>(3''JH-4?$_(2*MI30k3+%4s1t12e"IL4q0V/@l@aZ+<Wd*@PVCV%6Q@T2I\im+?VSl0P3KX4>C>(@m2"X4?$_+2a.[50k3+P4s1t12e"R&4q0V/@l@m^+<Wd*@PV@U%6Q@T2J,,q+?VSl0f_E,4>C>)0KpU%4?$_)ANgPc0k3-s4s1t12e"Qt4q0V/@lH/,+<Wd*@PTW$%6Q@T2`!W?+?VSl1,V6)4>C>)1d3$)4?$_)1d2@20k3."4s1t12e"R!4q0V/@lH;0+<Wd*@P_RZ%6Q@T2`EoC+?VSl0kENX4>C>)3''JH-4?$_,3''Id60k3.&4s1t12e"XQ4q0V/@lIg[+<Wd*@Pfr+%6Q@T2e"rn+?VSl2`3c.4>C>)@m2"X4?$_+@m1>a0k3.Q4s1t12e"XT4q0V/@lIs_+<Wd*@Q#o(%6Q@T2eG5r+?VSl2J#&]4>C>*0KpU%4?$_.@Qk5`0k30t4s1t12e"[#4q0V/@lQ5-+<Wd*@Q-&+%6Q@T3&<`@+?VSl2_dK*4>C>*1d3$)4?$_00Koq.0k31%4s1t12e$5U4q0V/@lQG3+<Wd*@UWb1%6Q@T3&s/F+?VSl3Fk;_4>C>*@6PeV4?$_X3''Id60k31P4s1t12e"a(4q0V/@lRs^+<Wd*@UW\/%6Q@T3+P2q+?VSl3Fb5^4>C>*ANh4Z4?$_X1-Q.00k31T4s1t12e$3)4q0V/@lZ5,+<Wd*@U_/X%6Q@T3AE]?+?VSlA2-7W4>C>+1-Qg''4?$_Z0g6%/0k34"4s1t12e$9,4q0V/@lZA0+<Wd*@Us"5%6Q@T3AiuC+?VSlA77Y24>C>+3''JH-4?$_\@6P,_0k34(4s1t12e+OO4q0V/@l[s]+<Wd*@V018%6Q@T3FY/p+?VSlAn+"64>C>+@m2"X4?$b(Aj-Yd0k34S4s1t12e+R#4q0V/@l\*a+<Wd*@k_@U%6Q@T3G(Gt+?VSm0kNTY4>C>S0KpU%4?$b*@6P,_0k4WH4s1t12e+U$4q0V/@pq,V+<Wd*@l$).%6Q@T@5C(i+?VSm1bh0''4>C>S1d3$)4?$b,0Koq.0k4WL4s1t13&,#V4q0V/@pq>\+<Wd+1,(OK%6Q@T@6$Lo+?VV<ARdn54>C>S@6PeV4?,;W1d2@20k4X''4s1t13&37"4q0V/@prt5+<Wd+1,<H*%6Q@T@PBtg+?VV=1,qH,4>C>T0g6^&4?,)O@Qk5`0k4ZJ4s1t13&39L4q0V/@q%5X+<Wd+1,EB''%6Q@T@Q$Cm+?VV=1M&`Z4>C>T2a/?,4?,)Q1d2@20k4ZP4s1t13&3<N4q0V/@q%G^+<Wd+1,NH(%6Q@T@UVGC+?VV=1hJo\4>C>T@QknW4?,)R@6P-3DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c@q&q3+<Wd+1,WZ-%6Q@T@UqYF+?VV=2E3l04>C>TANh4Z4?,;ZANgPc0k4[)4s1t13&ilT4q0V/@q.2V+<Wd+3&il]%6Q@T@kg.i+?VVCA2la^4>C>U1-Qg''4?,<2Aj-Yd0k4]L4s1t13&rj-4q0V/@q.>Z+<Wd*AiXBc%6Q@T@l6Fm+?VSp3G(Ga4>C>U2Ei6+4?$k\2a.[50k4]R4s1t12eHMS4q0V/@q/q2+<Wd*@lIm]%6Q@T@q%VE+?VP>1c[`/4>C>U@m2"X4?$b10g6%/0k4^(4s1t12e+jY4q0V/@q0(6+<Wd*@l\$_%6Q@T@qInI+?VSm3FtA`4>C>V0KpU%4?$bY1-Q.00k4`K4s1t12e-;P4q0V/@q7D[+<Wd*@q.5W%6Q@TA2QOn+?VSm@lHR\4>C>V3''JH-4?$b[3''Id60k4`S4s1t12e->T4q0V/@q9"3+<Wd*@q7M^%6Q@TA7@_F+?VSmAN2j_4>C>V@m2"X4?,)SANgPc0k4a)4s1t12E"u''4q0V/@q9.7+<Wd*An#@9%6Q@TA7e"J+?VSp@q@h54>C>W0KpU%4?$k_2*MI30k4cL4s1t12eHVY4q0V/@q@DZ+<Wd*An<\\%6Q@TAMZLm+?VSpAMu^]4>C>W1d3$)4?$k`3Bdm70k4cP4s1t12eHW44q0V/@q@P^+<Wd*AnEh_%6Q@TAN)dq+?VSmAiMs`4>C>W3''JH-4?$e02a.[50k4cT4s1t12e6>T4q0V/@qB(4+<Wd*A79%5%6Q@TAR[hG+?VSo1cIT-4>C>W@m2"X4?$h3@Qk5`0k4d*4s1t13FuYZ4q0V/@qB48+<Wd,AR[J[%6Q@TAS++K+?VVo2`!W,4>C>X0KpU%4?-k21d2@20k4fM4s1t13+P$+4q0V/@qIJ[+<Wd+A2uA.%6Q@TAhuUn+?VVo@PL%U4>C>X1d3$)4?-k02a.[50k4fQ4s1t13+OpX4q0V/@qIV_+<Wd+@l-,.%6Q@TAiDmr+?VVn1c[`/4>C>X3''JH-4?5,Q@6P,_0k4fU4s1t13AEBF4q0V/@qK47+<Wd,0fCjP%6Q@TAn4(J+?VY=2DRH*4>C>XANh4Z4?5,S0g6%/0k4g-4s1t13AEHH4q0V/A2#]$+<Wd,0fD$U%6Q@U0JPa6+?VY=2J,,^4>CA#1d3$)4?5,T1-Q.00k;sq4s1t13AEHL4q0V/A2#o*+<Wd,0fM*V%6Q@U0K20<+?VY=3+G,]4>CA#3''JH-4?5,U2*MI30k;su4s1t13AENJ4q0V/A2%FU+<Wd,0fW]-%6Q@U0Od3g+?VY=3AE],4>CA#ANh4Z4?5-)@6P,_0k<!o4s1t13AFu#4q0V/A2,l(+<Wd,0k)t''%6Q@U0f2'':+?VY=@UVG04>CA$2*N-*4?-h.2*MI30k<!s4s1t13Ft-\4q0V/A2-#,+<Wd+A7@M^%6Q@U0fV?>+?VVoAR[h44>CA$3BeQ.4?-n+2*MI30k<"I4s1t13+Xs-4q0V/A2.OW+<Wd+AMuP4%6Q@U0k3Bi+?VVo@Pp=Y4>CA$A3M+Y4?-k\Aj-Yd0k<"M4s1t13+QK.4q0V/A2.[[+<Wd+A7At2%6Q@U1,(m7+?VVo@l-@Y4>CA%1Hlp(4?-k^@6P,_0k<$r4s1t13+QQ24q0V/A26)-+<Wd+A7T.5%6Q@U1,qH?+?VVo@l?L[4>CA%3BeQ.4?-k_@m1>a0k<%L4s1t13+QSV4q0V/A27[Z+<Wd+A7dhc%6Q@U11`Wl+?VVoAn!q54>CA%Aj.=[4?-k_1d2@20k<''o4s1t13+Xd(4q0V/A2>r(+<Wd+A7f@9%6Q@U1GV-:+?VVp0f2''''4>CA&1Hlp(4?-n,A3LGb0k<''s4s1t13+XgV4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@U1Gq?=+?VVp11NKW4>CA&2Ei6+4?-n-ANgPc0k<(!4s1t13+Xj$4q0V/A2?2/+<Wd+AMRj]%6Q@U1H@WA+?VVp1LWHV4>CA&@6PeV4?-n/0Koq.0k<(L4s1t13+Xm+4q0V/A2@^Z+<Wd+AMZ2-%6Q@U1LrZl+?VVp1LrZY4>CA&ANh4Z4?-n.0g6%/0k<(P4s1t13+Xp,4q0V/A2H,,+<Wd+AMdgZ%6Q@U1c7H>+?VVp2_[E)4>CA''2Ei6+4?-n22EhR40k<+"4s1t13+Y$Y4q0V/A2H80+<Wd+AN"-a%6Q@U1c[`B+?VVp2`*]-4>CA''@6PeV4?-n32*MI30k<+M4s1t13+Y'']4q0V/A2Id[+<Wd+AN;S2%6Q@U1h8cm+?VVp3A<W+4>CA''ANh4Z4?-n4@m1>a0k<+Q4s1t13+Y*]4q0V/A2Q&)+<Wd+@lHA2%6Q@U2).9;+?VVn3&3Z,4>CA(1-Qg''4?-h1@6P,_0k<-t4s1t13+Fp*4q0V/A2Q2-+<Wd+@lZM4%6Q@U2)RQ?+?VVn3A`o/4>CA(2Ei6+4>o&W@Qk5`0k<.#4s1t13&tM-4q0V/A2Q>1+<Wd+3Fl\b%6Q@U2*!iC+?VVDA77Y24>CA(@6PeV4?,?3@m1>a0k<.N4s1t13&tP-4q0V/A2Rj\+<Wd+3FuY`%6Q@U2.Sln+?VVDAS++84>CA(ANh4Z4?-b*ANgPc0k<.R4s1t13+=X$4q0V/A2Z,*+<Wd,2`3BT%6Q@U2DIB<+?VYBAN;p`4>CA)1-Qg''4?5<31Hl710k<0u4s1t13AtG\4q0V/A2Z8.+<Wd,2_[-R%6Q@U2DmZ@+?VYC0JPa#4>CA)2Ei6+4?5>S3''Id60k<1$4s1t13B&X(4q0V/A2ZD2+<Wd,2_\f,%6Q@U2E<rD+?VYC11<?U4>CA)@6PeV4?5>UA3LGb0k<1O4s1t13B&`J4q0V/A2[p]+<Wd,2`##/%6Q@U2Inuo+?VYr3&!N*4>CA)ANh4Z4?7"51Hl710k<4#4s1t13G(6\4q0V/A2cD1+<Wd,AS,L;%6Q@U2`EoC+?VYr0Od3T4>CA*3''JH-4?7"-A3LGb0k<4''4s1t13At>,4q0V/A2e!^+<Wd,2Ig;^%6Q@U2e5)p+?VYBA26=X4>CA*ANh4Z4?#3.Aj-Yd0k<4T4s1t13AtG&4q0V/A2l8,+<Wd,1,ri/%6Q@U3&*T>+?VY>@:_V34>CA+1-Qg''4?50,3''Id60k<7"4s1t13AWI&4q0V/A2lD0+<Wd,1H&Z*%6Q@U3&NlB+?VY?@pqP14>CA+2Ei6+4?52WAj-Yd0k<7&4s1t13A`O''4q0V/A2lP4+<Wd,1cAf,%6Q@U3&s/F+?VYo2eG5_4>CA+@6PeV4?6n21-Q.00k<7U4s1t12dnHt4q0V/A2u>-+<Wd,@lRp]%6Q@U3AE]?+?VYo3+Y8_4>CAT1d3$)4?6n[@Qk5`0k=cP4s1t13FcT34q0V/A7IP^+<Wd,@q@DZ%6Q@U@lQXp+?VYC2e,#\4>CAV3BeQ.4?5>[2*MI30k=d(4s1t13B&rT4q0V/A7K.6+<Wd,2dp;^%6Q@U@q@hH+?VYC@:DD04>CAVAj.=[4?5?/1Hl710k=fK4s1t13B(D&4q0V/A7RDY+<Wd,2e"U-%6Q@UA26=k+?VYm@PL%U4>CAW1Hlp(4?6hZ0Koq.0k=fO4s1t13FQAU4q0V/A7RP]+<Wd,AMlG2%6Q@UA2ZUo+?VYm@Q$CZ4>CAW2a/?,4?6hZ@6P,_0k=fS4s1t13FQB,4q0V/A7R\a+<Wd,@:M#U%6Q@UA77YE+?VYm@k^(U4>CAW@QknW4?6h[2*MI30k=g)4s1t13FQDQ4q0V/A7T:9+<Wd,@:V)V%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>CAX0KpU%4?6k-2*MI30k=iM4s1t13FXg$4q0V/A7[M[+<Wd,@Pg#-%6Q@UAMZLm+?VYn1c[`/4>CAX1d3$)4?6k-3''Id60k=iQ4s1t13FXgU4q0V/A7[Y_+<Wd,@Pol(%6Q@UAN)dq+?VYDAN2j_4>CAX3''JH-4?5DUA3LGb0k=iU4s1t13B8j+4q0V/A7]15+<Wd,3AiZX%6Q@UAR[hG+?VYE2)IK+4>CAX@m2"X4?6h\Aj-Yd0k=j+4s1t13FQJR4q0V/A7]=9+<Wd,@:_>\%6Q@UAS++K+?VYmAS++84>CAY0KpU%4?6h]@Qk5`0k=lN4s1t13FQN/4q0V/A7dS\+<Wd,@:`t5%6Q@UAhuUn+?VYmAiW$a4>CAY1d3$)4?6k)3''Id60k=lR4s1t13FX[S4q0V/A7d_`+<Wd,@PKZ&%6Q@UAiDmr+?VYn0kNTY4>CAY3''JH-4?6k+1Hl710k=m*4s1t12e=dS4q0V/A7f=8+<Wd,AN2G/%6Q@UAnF4L+?VYq3+>&\4>CD$0KpU%4?6t51-Q.00kE$n4s1t13AY2(4q0V/AM>l''+<Wd,AN=9b%6Q@V0Jbm8+?VYq3G(Ga4>CD$2a/?,4?6ta0Koq.0kE$u4s1t13Fu`54q0V/AM?,.+<Wd,AS!V\%6Q@V0O[-f+?VYqAN;p`4>CD$@QknW4?6ta2a.[50kE%K4s1t13FubZ4q0V/AM@XY+<Wd,AS#:6%6Q@V0P*Ej+?VYqAS++84>CD$Aj.=[4?7"/1-Q.00kE''n4s1t13G($V4q0V/AMGo''+<Wd,Ahms^%6Q@V0etp8+?VYr1H@W.4>CD%1Hlp(4?7"02a.[50kE''t4s1t13G(*)4q0V/AMH,-+<Wd&0JGFL%6Q@V0fV?>+?X7J2.\r\4>CD%3BeQ.4>JTF2EhR40kE(J4s1t11GCO>4q0V/AMIXX+<WdYAh[d[%6Q@V0k3Bi+?X7J0k<HW4>CD%A3M+Y4D&1]@Qk5`0kE(N4s1t1AnEi04q0V/AMId\+<WdYAn<b^%6Q@V1,(m7+?V>3An+"64>CD&0g6^&4>8Ht3Bdm70kE*q4s1t11,1O>4q0V/AMQ&*+<Wd%0JYOM%6Q@V1,M0;+?V>31,(m$4>CD&2*N-*4?#/Y@6P,_0kE*u4s1t13&P;.4q0V/AMQ2.+<Wd*3AENX%6Q@V1,qH?+?VP:0k*<U4>CD&3BeQ.4?6hYAj-Yd0kE+K4s1t13&riS4q0V/AMR^Y+<Wd(3+Y*6%6Q@V11NKj+?VSp2`Eo04>CD&A3M+Y4>o$.@6P,_0kE+O4s1t12Dm?N4q0V/AMRj]+<Wd,3&*0P%6Q@V1GD!8+?VVq@5^:Y4>CD''0g6^&4?$e-2EhR40kE-r4s1t12.\[T4q0V/AMZ,++<Wd*A2l;-%6Q@V1Gh9<+?VY?3+4u[4>CD''2*N-*4?-e)2a.[50kE.!4s1t13B1V]4q0V/AMZ8/+<Wd(@V.M^%6Q@V1H7Q@+?VM@1GM''&4>CD''3BeQ.4?6k20g6%/0kE.L4s1t13+ap+4q0V/AM[dZ+<Wd+@l\''`%6Q@V1LiTk+?VY>@lHR\4>CD''A3M+Y4?#$-A3LGb0kE.P4s1t12)%$N4q0V/AM[p^+<Wd)0fWT*%6Q@V1b_*9+?VSn@P^1W4>CD(0g6^&4?$_+2EhR40kE0s4s1t12`3KK4q0V/AMc2,+<Wd)2)mBU%6Q@V1c.B=+?VMm2D[N+4>CD(2*N-*4?58Y3Bdm70kE1"4s1t13A<F$4q0V/AMc>0+<Wd*A7[_a%6Q@V1cRZA+?VVn@Q$CZ4>CD(3BeQ.4?-e0@6P,_0kE1M4s1t13+cT24q0V/AMdj[+<Wd+Amo77%6Q@V1h/]l+?VPj0f_E,ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0kE1P4s1t13Fam+4q0V/AMds^+<Wd*2Do)1%6Q@V1hJoo+?VS:0f;-(4>CD)0KpU%4>pe`0g6%/0kE3s4s1t13+HJT4q0V/AMl5,+<Wd)1hC8_%6Q@V2)@E=+?VYE0Ju$''4>CD)1d3$)4>o$)2*MI30kE4"4s1t13ANKJ4q0V/AMlA0+<Wd,1,UdM%6Q@V2)d]A+?VYE@kg.V4>CD)3''JH-4?,<2@m1>a0kE4&4s1t13+HAO4q0V/AMmm[+<Wd(1Li4)%6Q@V2.A`l+?VVC1H%E+4>CD)@m2"X4>pY/3''Id60kE4Q4s1t12DI''t4q0V/AMn$_+<Wd)0f:pS%6Q@V2.f#p+?VS;AMu^]4>CD*0KpU%4?,0,@m1>a0kE6t4s1t13&3?O4q0V/AMu;-+<Wd(0JGLN%6Q@V2D[N>+?VPn@l-@Y4>CD*1d3$)4>ep''0Koq.0kE7#4s1t12)$sG4q0V/AMuG1+<Wd)AMRaZ%6Q@V2E*fB+?VMk2DdT,4>CD*3''JH-4?-b-@Qk5`0kE7''4s1t12Dm3L4q0V/AN!s\+<Wd)1cJl-%6Q@V2I\im+?VVBARdn54>CD*@m2"X4?5DZANgPc0kE7R4s1t13+=m''4q0V/AN"*`+<Wd*AN49c%6Q@V2J,,q+?VY?A7e"74>CD+0KpU%4?#,Q1Hl710kE9u4s1t13AkA&4q0V/AN)A.+<Wd,3&Y50%6Q@V2`!W?+?VM@1Gh9)4>CD+1d3$)4>f#O2a.[50kE:$4s1t13Ai`S4q0V/AN)M2+<Wd(0em9(%6Q@V2`EoC+?VV<2`Nu14>CD+3''JH-4>g\]0Koq.0kE:(4s1t12E"u!4q0V/AN+$]+<Wd,1,1UL%6Q@V2e"rn+?VVp@pqP14>CD+@m2"X4>g_[3Bdm70kE:S4s1t12)mNP4q0V/AN+0a+<Wd,2E*EU%6Q@V2eG5r+?VVD2J,,^4>CD,0KpU%4?$\)0g6%/0kE=!4s1t12DJf!4q0V/AN2G/+<Wd+@::iR%6Q@V3&<`@+?VYm0JPa#4>CD,1d3$)4?5)S1-Q.00kE=%4s1t13B:P)4q0V/AN2S3+<Wd,Ai2>-%6Q@V3&a#D+?VS;@V%_44>CD,3''JH-4?,;XA3LGb0kE=)4s1t13&bG)4q0V/AN4*^+<Wd(@V.J]%6Q@V3+>&o+?VS?3&a#14>CD,@m2"X4?-n3@6P,_0kE=T4s1t12e+[S4q0V/AN46b+<Wd*A775W%6Q@V3+b>s+?VY=3Fb5^4>CD-0KpU%4?50.1d2@20kE@"4s1t13AtDW4q0V/AN;M0+<Wd*3A>#.%6Q@V3AWiA+?VM91GV-''4>CD-1d3$)4?,?53''Id60kE@&4s1t13&WWO4q0V/AN;Y4+<Wd(0Och%%6Q@V3B'',E+?VS@1,1s%4>CD-3''JH-4?5902EhR40kE@*4s1t12)7*J4q0V/AN=0_+<Wd,1GLjQ%6Q@V3FY/p+?VSn0f2''''4>CD-@m2"X4?$e[A3LGb0kE@U4s1t13+cT04q0V/AN=<c+<Wd+@5VU[%6Q@V3G(Gt+?VVnA7Ie44>CDU0KpU%4?,#R0Koq.0kFcJ4s1t12.ej[4q0V/ARR>X+<Wd(1M&=*%6Q@V@5C(i+?VVp@5U4X4>CDU1d3$)4?$\Y1d2@20kFcN4s1t13AWF&4q0V/ARRJ\+<Wd,0Jt[N%6Q@V@5g@m+?VMm1H%E+4>CDU3''JH-4?-h[3''Id60kFcR4s1t12Der$4q0V/ART"2+<Wd(2.:&[%6Q@V@:DDC+?VY=1GV-''4>CDU@m2"X4>o$)1Hl710kFd(4s1t13&+lQ4q0V/ART.6+<Wd)0f`Z+%6Q@V@:h\G+?VVl3Aiu04>CDV0KpU%4>g_-3''Id_DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,cAR[AX+<Wd*2)dEW%6Q@V@PU+i+?VP=@q%V24>CDV1Hlp(4?6ta3''Id60kFfN4s1t13&NTS4q0V/AR[M\+<Wd)@6$/.%6Q@V@Q$Cm+?VP=0fM9*4>CDV2a/?,4>gV\2EhR40kFfR4s1t12`Y>%4q0V/AR[Y`+<Wd(@k_IX%6Q@V@UVGC+?VS;@lQX]4>CDV@QknW4?5,O2a.[50kFg(4s1t12DmEN4q0V/AR]16+<Wd)ARf46%6Q@V@V%_G+?VY<2.\r\4>CDVAj.=[4?$e^0Koq.0kFiK4s1t13B/m*4q0V/ARdGY+<Wd,ARo@9%6Q@V@kp4j+?VM@3+4u[4>CDW1Hlp(4?5<3@Qk5`0kFiO4s1t12J-DQ4q0V/ARdS]+<Wd,0kE.)%6Q@V@l?Ln+?VVl@V.e54>CDW2a/?,4?-b[@m1>a0kFiS4s1t13AG&(4q0V/ARd_a+<Wd,3&!*O%6Q@V@pqPD+?VY?1,(m$4>CDW@QknW4?-b''1-Q.00kFj)4s1t12E*QL4q0V/ARf77+<Wd(11W7+%6Q@V@q@hH+?VPAA7e"74>CDWAj.=[4>ej''A3LGb0kFlL4s1t13FXa$4q0V/ARmMZ+<Wd*11;q%%6Q@VA26=k+?VS=2E3l04>CDX1Hlp(4?-e00Koq.0kFlP4s1t13+HN14q0V/ARmY^+<Wd,1GiW+%6Q@VA2ZUo+?VY?2.A`Y4>CDX2a/?,4>o''+2a.[50kFlT4s1t12e6H14q0V/ARmeb+<Wd,2E5,/%6Q@VA77YE+?VMk0P!?V4>CDX@QknW4>f#U3''Id60kFm*4s1t13B/`L4q0V/ARo=8+<Wd,1,*6&%6Q@VA7[qI+?VMA2IScY4>CDXAj.=[4>f*,ANgPc0kFoM4s1t13Fk!X4q0V/AS!S[+<Wd,3&G/0%6Q@VAMQFl+?VVl0k*<U4>CDY1Hlp(4>nm)0g6%/0kFoQ4s1t13B8fM4q0V/AS!__+<Wd(0f:^M%6Q@VAMu^p+?VS<1M&`Z4>CDY2a/?,4?5DU@m1>a0kFoU4s1t13+HDR4q0V/AS!kc+<Wd*2E,,0%6Q@VARRbF+?VSp2_[E)4>CDY@QknW4?59-2*MI30kFp+4s1t12`WX''4q0V/AS#C9+<Wd,0kE@/%6Q@VAS"%J+?VS;2E<r14>CDYAj.=[4?$_Z1d2@20kFrN4s1t13+HAW4q0V/AS*Y\+<Wd,3+Z\c%6Q@VAhlOm+?VVl11<?U4>CDZ1Hlp(4?$e+0g6%/0kFrR4s1t13B1PY4q0V/AS*e`+<Wd+@:D5\%6Q@VAi;gq+?VMmAMQFY4>CDZ2a/?,4?-h[@Qk5`0kFrV4s1t12e4XP4q0V/AS*qd+<Wd(3+=[-%6Q@VAmmkG+?VMA2J#&]4>CDZ@QknW4>np&1d2@20kFs,4s1t12e-B04q0V/AS,I:+<Wd+@l5r(%6Q@VAn=.K+?VPB2)@E*4>CDZAj.=[4?50-1-Q.00kN*n4s1t13B1G,4q0V/AhYr''+<Wd*2DAT(%6Q@W0JYg7+?VYE@:_V34>CG%1Hlp(4?$h,@Qk5`0kN*r4s1t13+6DX4q0V/AhZ)++<Wd,@qIM\%6Q@W0K)*;+?VV<3FP)\4>CG%2a/?,4?-q/@Qk5`0kN+!4s1t12DeiO4q0V/AhZ5/+<Wd+Ahc,+%6Q@W0O[-f+?VVnAMu^]4>CG%@QknW4>g_Z3Bdm70kN+L4s1t13+HAN4q0V/Ah[aZ+<Wd+@5''K$%6Q@W0P*Ej+?VMi2E!`.4>CG%Aj.=[4?$h+@Qk5`0kN-o4s1t13+4a$4q0V/Ahc#(+<Wd,1,:XL%6Q@W0etp8+?VV?@q%V24>CG&1Hlp(4>g\/3Bdm70kN-s4s1t13+P$,4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@W0f;-;+?VVo0k*<U4>CG&2Ei6+4>gVW0g6%/0kN.!4s1t12)7$u4q0V/Ahc8/+<Wd,11k#[%6Q@W0f_E?+?VSn@PL%U4>CG&@6PeV4>gY(2a.[50kN.L4s1t13AY)R4q0V/AhddZ+<Wd)1hJI+%6Q@W0k<Hj+?VYp1M/f[4>CG&ANh4Z4?59-1Hl710kN.P4s1t13ANO&4q0V/Ahl&(+<Wd(0JHs"%6Q@W1,1s8+?VSn2E!`.4>CG''1-Qg''4?7"61d2@20kN0s4s1t13B&p04q0V/Ahl2,+<Wd+@pq,V%6Q@W1,V6<+?VY>0P*EW4>CG''2Ei6+4>pb2A3LGb0kN1"4s1t12E>8V4q0V/Ahl>0+<Wd+@qK47%6Q@W1-%N@+?VVC1GM''&4>CG''@6PeV4?5AZ2a.[50kN1M4s1t12)7($4q0V/Ahmj[+<Wd,2.U2\%6Q@W11WQk+?VVD@k^(U4>CG''ANh4Z4?5DW3''Id60kN1Q4s1t12DI*G4q0V/Ahu,)+<Wd+@prh1%6Q@W1GM''9+?VMmAMZLZ4>CG(1-Qg''4?,>\Aj-Yd0kN3t4s1t12I\U)4q0V/Ahu8-+<Wd,AiX?b%6Q@W1Gq?=+?VYA@5pF[4>CG(2Ei6+4?-n^@m1>a0kN4#4s1t13+4^U4q0V/AhuD1+<Wd)@:M)W%6Q@W1H@WA+?VVn@Pg7X4>CG(@6PeV4>elR@6P,_0kN4N4s1t13+ap''4q0V/Ai!p\+<Wd,1GiQ)%6Q@W1LrZl+?VM?0Od3T4>CG(ANh4Z4?5)PANgPc0kN4R4s1t13B:Y]4q0V/Ai)2*+<Wd,2e4^.%6Q@W1bh0:+?VPo1,;$&4>CG)1-Qg''4?,5VAj-Yd0kN6u4s1t13Ak5"4q0V/Ai)>.+<Wd,A7@AZ%6Q@W1c7H>+?VVn@k^(U4>CG)2Ei6+4?-q1Aj-Yd0kN7$4s1t13FjpT4q0V/Ai)J2+<Wd*A2#l)%6Q@W1c[`B+?VM@Ammk44>CG)@6PeV4?-e/2a.[50kN7O4s1t12J$H04q0V/Ai+!]+<Wd(2DR9V%6Q@W1h8cm+?VV>AS++84>CG)ANh4Z4?#,U@Qk5`0kN7S4s1t12)7-I4q0V/Ai28++<Wd+@5fo)%6Q@W2).9;+?VP:AiDm_4>CG*1-Qg''4>f*/ANgPc0kN:!4s1t12I\R!4q0V/Ai2D/+<Wd*1h&.&%6Q@W2)RQ?+?VY<3&Ef.4>CG*2Ei6+4?$e^3Bdm70kN:%4s1t13+=RM4q0V/Ai2P3+<Wd)1M(,]%6Q@W2*!iC+?VVq0k<HW4>CG*@6PeV4?-h\1d2@20kN:P4s1t12dnU"4q0V/Ai4''^+<Wd)2_[$O%6Q@W2.Sln+?VS;Ai)[\4>CG*ANh4Z4>eoMAj-Yd0kN:T4s1t13+6DR4q0V/Ai;>,+<Wd+@:;,Z%6Q@W2DIB<+?VSo2IScY4>CG+1-Qg''4?,/V2a.[50kN="4s1t12J"[U4q0V/Ai;J0+<Wd*1H.''Q%6Q@W2DmZ@+?VVn@5pF[4>CG+2Ei6+4?#8[A3LGb0kN=&4s1t12DeoP4q0V/Ai;V4+<Wd)@5VX\%6Q@W2E<rD+?VSk1h8cZ4>CG+@6PeV4?5DZ0g6%/0kN=Q4s1t13+=^V4q0V/Ai=-_+<Wd,A7IG[%6Q@W2Inuo+?VSo1M&`Z4>CG+ANh4Z4?$e]A3LGb0kN=U4s1t12E<]R4q0V/AiDD-+<Wd+Ahms^%6Q@W2_dK=+?VSn0k!6T4>CG,1-Qg''4>o$-0Koq.0kN@#4s1t12.\^X4q0V/AiDP1+<Wd+2)o#.%6Q@W2`3cA+?VM:3AE],4>CG,2Ei6+4>pe^Aj-Yd0kN@''4s1t13+4L#4q0V/AiD\5+<Wd+@50`*%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>CG,3BeQ.4?5;[@Qk5`0kN@Q4s1t12e=pX4q0V/AiF0_+<Wd*A2#]$%6Q@W2e,#o+?VMA1M&`Z4>CG,A3M+Y4?,-*1-Q.00kN@U4s1t13B/fK4q0V/AiF<c+<Wd+@q.J^%6Q@W3&!N=+?VY>1b_*&4>CG-0g6^&4>eg)3Bdm70kNC#4s1t13B:V-4q0V/AiMS1+<Wd)@U_)V%6Q@W3&EfA+?VS@AMZLZ4>CG-2*N-*4>f)P2*MI30kNC''4s1t12e"aU4q0V/AiM_5+<Wd,2*!HV%6Q@W3&j)E+?VV=2_dK*4>CG-3BeQ.4?$e]3''Id60kNCR4s1t12e=mX4q0V/AiO6`+<Wd)@::oT%6Q@W3+G,p+?VYq2e,#\4>CG-A3M+Y4>o!*0Koq.0kNCV4s1t12DelT4q0V/AiOBd+<Wd*@koc&%6Q@W3A<W>+?VM90KD<+4>CG.0g6^&4?,3,2EhR40kNF$4s1t12IU''(4q0V/AiVY2+<Wd,1c7$P%6Q@W3A`oB+?VVp0ebd#4>CG.2*N-*4?-h^1d2@20kNF(4s1t13&rs-4q0V/AiVe6+<Wd,1H.0T%6Q@W3B02F+?VV=2E!`.4>CG.3BeQ.4>elRA3LGb0kNFS4s1t13B8g*4q0V/AiX<a+<Wd)AhuD1%6Q@W3Fb5q+?VPoAmmk44>CG.A3M+Y4>pe32a.[50kNFW4s1t12.J=!4q0V/AiXHe+<Wd)Ai"$_%6Q@W@5''kf+?VV@1,D*''4>CGV0g6^&4>o331Hl710kOiL4s1t12*!R)4q0V/AmmJZ+<Wd+@PM=U%6Q@W@5L.j+?VY=@:MJ14>CGV2*N-*4?,''(0Koq.0kOiP4s1t12J+p,4q0V/AmmV^+<Wd,@5To+%6Q@W@5pFn+?VMj0Om9U4>CGV3BeQ.4>o&P@6P,_0kOj&4s1t13ANNQ4q0V/Amo.4+<Wd*2e?Sb%6Q@W@:MJD+?VM8AMlX\4>CGVA3M+Y4?5DU1Hl710kOj*4s1t12e=p(4q0V/Amo:8+<Wd*A2Rp^%6Q@W@PBtg+?VVq1hAi[4>CGW0g6^&4?-q,1Hl710kOlM4s1t13Arj.4q0V/An!P[+<Wd*@Uh)U%6Q@W@Pg7k+?VPo2)IK+4>CGW2*N-*4?$e.0Koq.0kOlQ4s1t13+65M4q0V/An!\_+<Wd*A7K%3%6Q@W@Q6Oo+?VY?1,_<*4>CGW3BeQ.4>eg&2*MI30kOm''4s1t13+=[(4q0V/An#45+<Wd,0JbIJ%6Q@W@UhSE+?VS;An+"64>CGWA3M+Y4?#000g6%/0kOm+4s1t12)8Yr4q0V/An#@9+<Wd+1H@?W%6Q@W@k^(h+?VYnAN2j_4>CGX0g6^&4?6h-@6P,_0kOoN4s1t12e4p)4q0V/An*V\+<Wd,3&<NX%6Q@W@l-@l+?VY?AMH@X4>CGX2*N-*4>g_20g6%/0kOoR4s1t12`5,+4q0V/An*b`+<Wd*@:hD]%6Q@W@lQXp+?VSmAn=.84>CGX3BeQ.4?,)M@6P,_0kOp(4s1t13B:V*4q0V/An,:6+<Wd+1,(^P%6Q@W@q.\F+?VP=A77Y24>CGXA3M+Y4?50/3''Id60kOp,4s1t12DJfR4q0V/An,F:+<Wd(1,q3V%6Q@WA2$1i+?VYp2).9(4>CGY0g6^&4?$e03Bdm70kOrO4s1t13&tGV4q0V/An3\]+<Wd+@59W&%6Q@WA2HIm+?VSn2`<i/4>CGY2*N-*4?5/OANgPc0kOrS4s1t13+ZT14q0V/An3ha+<Wd,3G)ke%6Q@WA2laq+?VYA3+>&\4>CGY3BeQ.4>ej*0g6%/0kOs)4s1t13B/iR4q0V/An5@7+<Wd)@U`e1%6Q@WA7IeG+?VVl@PU+VASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0kOs,4s1t12)o&V4q0V/An5I:+<Wd)0k3.+%6Q@WA7e"J+?VP=2`!W,4>CGZ0KpU%4>g\Y@Qk5`0kOuO4s1t13&rcM4q0V/An<_]+<Wd+@5p20%6Q@WAMZLm+?VM@1grQW4>CGZ1d3$)4>eiI3''Id60kOuS4s1t12.C-,4q0V/An<ka+<Wd*3ANKV%6Q@WAN)dq+?VP?AM?:W4>CGZ3''JH-4?,5W2a.[50kOuW4s1t12.U3+4q0V/An>C7+<Wd*@:EY/%6Q@WAR[hG+?VYE1h&WX4>CGZ@m2"X4>pe10Koq.0kP!-4s1t12Df#&4q0V/An>O;+<Wd,2.L&Y%6Q@WAS++K+?VVC0kNTY4>CG[0KpU%4?,''+3''Id60kP#P4s1t13&E<t4q0V/AnEe^+<Wd''AiM\4%6Q@WAhuUn+?VVnAi)[\4>CG[1d3$)4?,3.A3LGb0kP#T4s1t12I\?s4q0V/AnEqb+<Wd)2)-pO%6Q@WAiDmr+?VSm1c%<)4>CG[3''JH-4?59/@m1>a0kP#X4s1t13&WO&4q0V/AnGI8+<Wd*0Jd9(%6Q@WAn!qH+?VVm3Aiu04>CG[@m2"X4>o&P@m1>a0kP$.4s1t13&tGY4q0V/AnGU<+<Wd)0kN=-%6Q@WAnF4L+?VSo3Fb5^4>JTE0KpU%4?##M@Qk5`1,(C:4s1t12J-N04q0V00JG7G+<Wd)1cRHY%6QC"0Jbm8+?VM:A7[q64>JTE1d3$)4>pe22a.[51,(C>4s1t12IS9p4q0V00JGCK+<Wd,1c$pO%6QC"0K20<+?VM@A2la^4>JTE3''JH-4?5AYANgPc1,(CB4s1t12e+aU4q0V00JHp!+<Wd,2J"X-%6QC"0Od3g+?VS:2)RQ,4>JTE@m2"X4?,<1Aj-Yd1,(Cm4s1t13FZJY4q0V00JI''%+<Wd*3FQJ_%6QC"0P3Kk+?VYq3B'',24>JTF0KpU%4>ep(1-Q.01,(F;4s1t12)8c$4q0V00JP=H+<Wd*3AP&-%6QC"0f)!9+?VPk2`Eo04>JTF1d3$)4?"rKA3LGb1,(F?4s1t13At>+4q0V00JPIL+<Wd(0JGCK%6QC"0fM9=+?VV;2J,,^4>JTF3''JH-4?,0/ANgPc1,(FC4s1t13A<3E4q0V00JR!"+<Wd,1brW+%6QC"0k*<h+?VP:3A<W+4>JTF@m2"X4>pe,1Hl711,(Fn4s1t12e+XT4q0V00JR-&+<Wd)2)m?T%6QC"0kNTl+?VV<@lZ^^4>JTG0KpU%4?53-3''Id61,(I<4s1t12DQs?4q0V00JYCI+<Wd*0f1mS%6QC"1,D*:+?VSnAi)[\4>JTG1d3$)4?$b]2a.[51,(I@4s1t12).!L4q0V00JYOM+<Wd+AhdaY%6QC"1,hB>+?VVlA26=X4>JTG3''JH-4?#/T1-Q.01,(ID4s1t13A<C%4q0V00J[''#+<Wd,1bg[J%6QC"11EEi+?VS=2`3c.4>JTG@m2"X4?,'',3''Id61,(Io4s1t13AE<D4q0V00J[3''+<Wd,@l62/%6QC"11i]m+?VVn@l$:X4>JTH0KpU%4?7"30g6%/1,(L=4s1t13ANBI4q0V00JbIJ+<Wd,2`*KX%6QC"1G_3;+?VMl@UVG04>JTH1d3$)4?5AU3''Id61,(LA4s1t13B8m,4q0V00JbUN+<Wd(1,q9X%6QC"1H.K?+?VYr3+P2^4>JTH3''JH-4?,#RANgPc1,(LE4s1t12)\l&4q0V00Jd-$+<Wd*@l?#)%6QC"1L`Nj+?VM@A7e"74>JTH@m2"X4>o&NAj-Yd1,(Lp4s1t13At>''4q0V00Jd9(+<Wd)@50Q%%6QC"1M/fn+?VMi1bh0''4>JTI0KpU%4>o#RAj-Z8DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d0JkLJ+<Wd*@k_FW%6QC"1bq6;+?VVA0K)*(4>JTI1Hlp(4?#002a.[51,(OA4s1t13B/rP4q0V00JkXN+<Wd(AS#@8%6QC"1c@N?+?VS<0ebd#4>JTI2a/?,4>o$+1d2@21,(OE4s1t12J$JZ4q0V00JkdR+<Wd+2Dnu.%6QC"1grQj+?VYn2J,,^4>JTI@QknW4?-h\1-Q.01,(Op4s1t13AWHH4q0V00Jm<(+<Wd,2E*TZ%6QC"1hAin+?VYm2DRH*4>JTIAj.=[4?50,0g6%/1,(R>4s1t12.JO"4q0V00JtRK+<Wd*AMZ8/%6QC"2)7?<+?VP:2J#&]4>JTJ1Hlp(4>pe`ANgPc1,(RB4s1t12e6GR4q0V00Jt^O+<Wd(A7RGZ%6QC"2)[W@+?VP>1,D*''4>JTJ2a/?,4>gS,Aj-Yd1,(RF4s1t12_[-H4q0V00JtjS+<Wd''AN2G/%6QC"2.8Zk+?VP<3&Ef.4>JTJ@QknW4?-q.@6P,_1,(Rq4s1t12)$dp4q0V00K!B)+<Wd''AiVb5%6QC"2.\ro+?VPmARRb34>JTJAj.=[4?$e[3''Id61,(U?4s1t13+6>U4q0V00K(XL+<Wd+2D\r/%6QC"2DRH=+?VSp3&Nl/4>JTK1Hlp(4?5)TAj-Yd1,(UC4s1t13A`[)4q0V00K(dP+<Wd*@l@m^%6QC"2E!`A+?VYm1M&`Z4>JTK2a/?,4?5E60g6%/1,(UG4s1t12e4g$4q0V00K(pT+<Wd(@:Eb2%6QC"2IScl+?VS>2IScY4>JTK@QknW4?#6/@m1>a1,(Ur4s1t13&`j/4q0V00K*H*+<Wd,3FQD]%6QC"2J#&p+?VYEAMH@X4>JTKAj.=[4>f!+ANgPc1,(X@4s1t13+HDV4q0V00K1^M+<Wd,ARRG[%6QC"2_mQ>+?VVnAMZLZ4>JTL1Hlp(4?5)T0g6%/1,(XD4s1t12`Ea.4q0V00K1jQ+<Wd,3A`TW%6QC"2`<iB+?VVC1L`NW4>JTL2a/?,4>pb_Aj-Yd1,(XH4s1t13+=[T4q0V00K2!U+<Wd,1GUpR%6QC"2dnlm+?VY>2.8ZX4>JTL@QknW4?-h[Aj-Yd1,(Xs4s1t13AWWM4q0V00K3N++<Wd,2)m9R%6QC"2e>/q+?VP9@Q$CZ4>JTLAj.=[4>efI0g6%/1,([A4s1t13AWHI4q0V00K:dN+<Wd(3AN?R%6QC"3&3Z?+?VVm0P*EW4>JTM1Hlp(4>g_-@m1>a1,([E4s1t13&ruT4q0V00K:pR+<Wd*A7B.7%6QC"3&WrC+?VSnARdn54>JTM2a/?,4>g\\Aj-Yd1,([I4s1t12J$AU4q0V00K;''V+<Wd)0k"NT%6QC"3+4un+?VYA@6$L\4>JTM@QknW4?6n`1d2@21,([t4s1t13ANTS4q0V00K<T,+<Wd+@PVFW%6QC"3+Y8r+?VVm0JG["4>JTMAj.=[4?#,TA3LGb1,(^B4s1t13AN9K4q0V00KCjO+<Wd*A2%OX%6QC"3ANc@+?VYBAMZLZ4>JTN1Hlp(4>o#V1Hl711,(^F4s1t13&*<L4q0V00KD!S+<Wd)0P3%''%6QC"3As&D+?VYn1,hB+4>JTN2a/?,4?5DV1-Q.01,(^J4s1t12DeuT4q0V00KD-W+<Wd+0k!(+%6QC"3FP)o+?VP>0K)*(4>JTN@QknW4?5-+0Koq.1,(^u4s1t13FcVX4q0V00KEZ-+<Wd+0K1mR%6QC"3FtAs+?VM>3B9844>JTNAj.=[4?55W2a.[51,*,j4s1t13AY,#4q0V00OZ\"+<Wd)@:D2[%6QC"@5:"h+?VS=2_[E)4>JU!1Hlp(4>gSZ2a.[51,*,n4s1t12Df#"4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC"@5U4k+?VPoA2la^4>JU!2Ei6+4?5/O2*MI31,*,q4s1t12e4Ws4q0V00OZq)+<Wd+0k+`Y%6QC"@6$Lo+?VPo@l$:X4>JU!@6PeV4?-q^1-Q.01,*-G4s1t12`<EM4q0V00O\HT+<Wd+@:j(7%6QC"@:VPE+?VPk2)%3''4>JU!ANh4Z4?6q_2a.[51,*-K4s1t12I^/S4q0V00Oc_"+<Wd(2DI$P%6QC"@PL%h+?VPo0k!6T4>JU"1-Qg''4?#001d2@21,*/n4s1t13G(9*4q0V00Ock&+<Wd+@q@>X%6QC"@Pp=l+?VM>2`*]-4>JU"2Ei6+4?6q1@m1>a1,*/r4s1t13FOX&4q0V00Od"*+<Wd,3+Fd/%6QC"@Q?Up+?VYD1L`NW4>JU"@6PeV4?-hZ2a.[51,*0H4s1t13&WI"4q0V00OeNU+<Wd)0f^sP%6QC"@UqYF+?VVl2)RQ,4>JU"ANh4Z4>pe/0g6%/1,*0L4s1t13B/`P4q0V00Ole#+<Wd)1h&4(%6QC"@kg.i+?VY>ARRb34>JU#1-Qg''4>eg''2*MI31,*2o4s1t12ISC$4q0V00Olq''+<Wd+@PqXZ%6QC"@l6Fm+?VV<@q7b44>JU#2Ei6+4?7"1@6P,_1,*2s4s1t13FOUQ4q0V00Om(++<Wd+@l-//%6QC"@lZ^q+?VM=2)@E*4>JU#@6PeV4>p\)1Hl711,*3I4s1t13+4O"4q0V00OnTV+<Wd*1,i`-%6QC"@q7bG+?VY=Ammk44>JU#ANh4Z4?5/S@Qk5`1,*3M4s1t13A<BN4q0V00Ouk$+<Wd*@l%XZ%6QC"A2-7j+?VVm0f_E,4>JU$1-Qg''4?52Q1-Q.01,*5p4s1t13ANHN4q0V00P!"(+<Wd)A7f76%6QC"A2QOn+?VVm2`*]-4>JU$2Ei6+4>f)W3Bdm71,*5t4s1t12E>8X4q0V00P!.,+<Wd(2.JO.%6QC"A2ugr+?VM@@U_M14>JU$@6PeV4?,2Y1d2@21,*6J4s1t12Dd3J4q0V00P"ZW+<Wd,1H&`,%6QC"A7RkH+?VPj1h&WX4>JU$ANh4Z4>f!)@m1>a1,*6N4s1t12)&Pq4q0V00P)q%+<Wd*AnF%e%6QC"AMH@k+?VSk@l6FZ4>JU%1-Qg''4?$\Y@6P,_1,*8q4s1t12I\IQ4q0V00P*()+<Wd+3FQ>[%6QC"AMlXo+?VMjAMQFY4>JU%2Ei6+4?-q-2*MI31,*8u4s1t12IeLO4q0V00P*4-+<Wd(0OeTW%6QC"AN;ps+?VYD0Jbm%4>JU%@6PeV4?-bZ@Qk5`1,*9K4s1t12DI-K4q0V00P+`X+<Wd*1h0rX%6QC"ARmtI+?VSk@:_V34>JU%ANh4Z4?-k[3''Id61,*9O4s1t12)@''C4q0V00P3"&+<Wd+ARdDX%6QC"AhcIl+?VYm1c7H+4>JU&1-Qg''4?7"41-Q.01,*;r4s1t13B/rS4q0V00P3.*+<Wd)@PD4S%6QC"Ai2ap+?VM:AiMs`4>JU&2Ei6+4?6q21-Q.01,*<!4s1t12`P8T4q0V00P3:.+<Wd+@Q?5.%6QC"AiW$t+?VYE2)7?)4>JU&@6PeV4>o$.ANgPc1,*<L4s1t12e=jX4q0V00P4fY+<Wd*0k)k$%6QC"An4(J+?VYC@q.\34>JU&ANh4Z4?-b/A3LGb1,*<P4s1t12e4U&4q0V00eb:F+<Wd)3FQJ_%6QC#0JPa6+?VSn2E3l04>JWF1-Qg''4?-n_Aj-Yd1,1I=4s1t13AP/V4q0V00ebFJ+<Wd,2)o23%6QC#0Ju$:+?VPo2DdT,4>JWF2Ei6+4?"rO0g6%/1,1IA4s1t13&P,)4q0V00ebRN+<Wd,@kfc''%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>JWF3BeQ.4?-h_A3LGb1,1Ik4s1t12)%$M4q0V00ed''#+<Wd(2.9oW%6QC#0Om9h+?VYm1H.K,4>JWFA3M+Y4>nuT1Hl711,1Io4s1t12J+p&4q0V00ed3''+<Wd)@U`b0%6QC#0ebd6+?VSn0fM9*4>JWG0g6^&4?$_\3Bdm71,1L=4s1t12E#,V4q0V00ekIJ+<Wd,2)mBU%6QC#0f2'':+?VYB2.Sl[4>JWG2*N-*4?-k*A3LGb1,1LA4s1t12e=j(4q0V00ekUN+<Wd(0Oct)%6QC#0fV?>+?VVnA7[q64>JWG3BeQ.4?#!*1-Q.01,1Ll4s1t12e4^)4q0V00em-$+<Wd+@q7>Y%6QC#0k3Bi+?VP<2E3l04>JWGA3M+Y4>o&OA3LGb1,1Lp4s1t12DJfT4q0V00em9(+<Wd+@5;@W%6QC#1,(m7+?VSn1G_3(4>JWH0g6^&4>gSZ3Bdm71,1O>4s1t12.A@$4q0V00etOK+<Wd+0f3H*%6QC#1,M0;+?VPnAhlOZ4>JWH2*N-*4?,#R1-Q.01,1OB4s1t12e=m-4q0V00et[O+<Wd(11XoZ%6QC#1,qH?+?VV;2)[W-4>JWH3BeQ.4>g\*@Qk5`1,1Om4s1t12`!9J4q0V00f!3%+<Wd)An3b_%6QC#11NKj+?VVl2E<r14>JWHA3M+Y4>o)S1-Q.01,1Oq4s1t13&`]P4q0V00f!?)+<Wd(@V%G]%6QC#1GD!8+?VVm2)mc/4>JWI0g6^&4?5E4@Qk5`1,1R?4s1t12)8_u4q0V00f(UL+<Wd,0K(pT%6QC#1Gh9<+?VY=@q%V24>JWI2*N-*4?5B5ANgPc1,1RC4s1t13&ruW4q0V00f(aP+<Wd+@5^#-%6QC#1H7Q@+?VM@An4(74>JWI3BeQ.4?#&T3''Id61,1Rn4s1t12IS=O4q0V00f*9&+<Wd+AhuD1%6QC#1LiTk+?VP?AiMs`4>JWIA3M+Y4?-k+2EhR41,1Rr4s1t12.JOS4q0V00f*E*+<Wd+3&NKU%6QC#1b_*9+?VPj1H@W.4>JWJ0g6^&4?$\[@6P,_1,1U@4s1t12DmEQ4q0V00f1[M+<Wd(AMQ,,%6QC#1c.B=+?VYBA2ug_4>JWJ2*N-*4?-bY0Koq.1,1UD4s1t13B/]N4q0V00f1gQ+<Wd+@:<Y0%6QC#1cRZA+?VSB@6$L\4>JWJ3BeQ.4?##LA3LGb1,1Uo4s1t12e4j&4q0V00f3?''+<Wd,3+cYa%6QC#1h/]l+?VYn0K)*(4>JWJA3M+Y4?,#R1Hl711,1Us4s1t12DI+!4q0V00f3K++<Wd,3&"i+%6QC#2)%3:+?VVl0kNTY4>JWK0g6^&4?-bX2EhR41,1XA4s1t12Df#T4q0V00f:aN+<Wd+2D@''R%6QC#2)IK>+?VVl1Gh9)4>JWK2*N-*4?,#S2*MI31,1XE4s1t13AtD+4q0V00f:mR+<Wd,2ISR/%6QC#2)mcB+?VSn3+b>`4>JWK3BeQ.4>pY-1-Q.01,1Xp4s1t12.AIQ4q0V00f<E(+<Wd)1b`H(%6QC#2.Jfm+?VSo11`WY4>JWKA3M+Y4?#)T1Hl711,1Xt4s1t13AWZR4q0V00f<Q,+<Wd*1H/`+%6QC#2D@<;+?VP=@U_M14>JWL0g6^&4?,''-@6P,_1,1[B4s1t12DI$t4q0V00fCgO+<Wd)2)7!P%6QC#2DdT?+?VVn@:;>/4>JWL2*N-*4?#/W0g6%/1,1[F4s1t12_[*K4q0V00fCsS+<Wd(3+Fm2%6QC#2E3lC+?VVm2.8ZX4>JWL3BeQ.4?-bZ2a.[51,1[q4s1t12)[-H4q0V00fEK)+<Wd)AN"-a%6QC#2Ieon+?VS;A2ug_ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,1[t4s1t12J-MW4q0V00fET,+<Wd*AMQ2.%6QC#2J,,q+?VVl0P*EW4>JWM0KpU%4?6h+0Koq.1,1^B4s1t13+=Qu4q0V00fLjO+<Wd,11F]V%6QC#2`!W?+?VYD1h/]Y4>JWM1d3$)4?6h\1d2@21,1^F4s1t12E3^-4q0V00fM!S+<Wd+@q&q3%6QC#2`EoC+?VY@1Gq?*4>JWM3''JH-4>g\^1Hl711,1^J4s1t13&!:%4q0V00fNN)+<Wd*0P3.*%6QC#2e"rn+?VY>3&Nl/4>JWM@m2"X4?$e00g6%/1,1^u4s1t13B/d)4q0V00fNZ-+<Wd(2_d3S%6QC#2eG5r+?VM@2)d].4>JWN0KpU%4>f&P3''Id61,1aC4s1t13B/g*4q0V00fUpP+<Wd,A2,r*%6QC#3&<`@+?VYE@PL%U4>JWN1d3$)4?5E4A3LGb1,1aG4s1t12ISL!4q0V00fV''T+<Wd*@:<S.%6QC#3&a#D+?VVD2IScY4>JWN3''JH-4>g_-ANgPc1,1aK4s1t12_[-G4q0V00fWT*+<Wd,3&*-O%6QC#3+>&o+?VV?11NKW4>JWN@m2"X4?$e[1-Q.01,1b!4s1t13B(GW4q0V00fW`.+<Wd,0Jt^O%6QC#3+b>s+?VM?0P!?V4>JWO0KpU%4?##O1-Q.01,1dD4s1t12J-PT4q0V00f_!Q+<Wd*A79"4%6QC#3AWiA+?VV?2E!`.4>JWO1d3$)4>efL3Bdm71,1dH4s1t12)&QP4q0V00f_-U+<Wd*A7]@:%6QC#3B'',E+?VVm0JYg$4>JWO3''JH-4?,;X@Qk5`1,1dL4s1t13&!4$4q0V00f`Z++<Wd*A2%IV%6QC#3FY/p+?VSk2E<r14>JWO@m2"X4>euQAj-Yd1,1e"4s1t12DelS4q0V00f`f/+<Wd+2`E][%6QC#3G(Gt+?VPn1,_<*4>JX"0KpU%4?$\W3Bdm71,32l4s1t12)SoQ4q0V00juh$+<Wd,1LW%&%6QC#@5C(i+?VS:@qIn64>JX"1d3$)4?-bX1Hl711,32p4s1t12_d''B4q0V00jut(+<Wd+2)\l,%6QC#@5g@m+?VM@2DRH*4>JX"3''JH-4?5>U2a.[51,32t4s1t12)8]&4q0V00k"KS+<Wd+@::uV%6QC#@:DDC+?VY?11EEV4>JX"@m2"X4?#$(2a.[51,33J4s1t13&roQ4q0V00k"WW+<Wd*An3Y\%6QC#@:h\G+?VY>3AE],4>JX#0KpU%4>nrN1-Q.01,35m4s1t12e4]u4q0V00k)n%+<Wd+2`<QX%6QC#@P^1j+?VVq1c.B*4>JX#1d3$)4>gV\A3LGb1,35q4s1t11hL;Q4q0V00k*%)+<Wd*11iO1%6QC#@Q-In+?VM>3&a#14>JX#3''JH-4?52S0g6%/1,35u4s1t13FZE.4q0V00k+QT+<Wd*AN;Y4%6QC#@U_MD+?VVnAMQFY4>JX#@m2"X4?5/W@m1>a1,36K4s1t13AifO4q0V00k+]X+<Wd,3&YA4%6QC#@V.eH+?VYB@:;>/4>JX$0KpU%4?#''.ANgPc1,38n4s1t12`!C%4q0V00k2t&+<Wd*AMQ&*%6QC#@l$:k+?VYE1,1s%4>JX$1d3$)4>np''1-Q.01,38r4s1t12e6?+4q0V00k3+*+<Wd,1cI0R%6QC#@lHRo+?VY=0KD<+4>JX$3''JH-4?-b.1Hl711,39!4s1t13B(P^4q0V00k4WU+<Wd,3&!3R%6QC#@q%VE+?VV@2Inu\4>JX$@m2"X4>f$,1-Q.01,39L4s1t13AP&&4q0V00k4cY+<Wd)2Iea2%6QC#@qInI+?VM>11i]Z4>JX%0KpU%4>eoP1d2@[DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d0k<"&+<Wd)1G`T+%6QC#A26=k+?VV<0Ju$''4>JX%1Hlp(4?-b\2a.[51,3;r4s1t12.C-+4q0V00k<.*+<Wd*0JGLN%6QC#A2ZUo+?VVm0k<HW4>JX%2a/?,4?50,2*MI31,3<!4s1t13AG"u4q0V00k<:.+<Wd+1,([O%6QC#A77YE+?VY>@Q?U]4>JX%@QknW4?$e13Bdm71,3<L4s1t13B/]P4q0V00k=fY+<Wd+@5BW%%6QC#A7[qI+?VSnA26=X4>JX%Aj.=[4?$h2@m1>a1,3>o4s1t13+ZVU4q0V00kE(''+<Wd)0kNC/%6QC#AMQFl+?VY<2`Nu14>JX&1Hlp(4?#/V@m1>a1,3>s4s1t12e4g%4q0V00kE4++<Wd(@Q-81%6QC#AMu^p+?VM:A7@_34>JX&2a/?,4?-b-1-Q.01,3?"4s1t12.J=L4q0V00kE@/+<Wd,3FXg/%6QC#ARRbF+?VVl0f)!&4>JX&@QknW4?-b''@6P,_1,3?M4s1t13A<=#4q0V00kFlZ+<Wd(3+Og/%6QC#AS"%J+?VYp0KD<+4>JX&Aj.=[4?6q-3''Id61,3Ap4s1t12)R7&4q0V00kN.(+<Wd''AN=<c%6QC#AhlOm+?VVl0k<HW4>JX''1Hlp(4?59.3Bdm71,3At4s1t13Ft-[4q0V00kN:,+<Wd(2I\L,%6QC#Ai;gq+?VYD2)IK+4>JX''2a/?,4?59.@Qk5`1,3B#4s1t13&3EO4q0V00kNF0+<Wd(1LXfX%6QC#AmmkG+?VSB2J,,^4>JX''@QknW4?-b]@6P,_1,3BN4s1t13FOd(4q0V00kOr[+<Wd,A26&,%6QC#An=.K+?VPB1grQW4>JX''Aj.=[4>o!+@6P,_1,:O;4s1t12`<@#4q0V01,(FH+<Wd,2E,/1%6QC$0JYg7+?VS@2DRH*4>JZG1Hlp(4?5DU@6P,_1,:O?4s1t12IS?s4q0V01,(RL+<Wd(3&5)0%6QC$0K)*;+?VVm1,1s%4>JZG2a/?,4?,302*MI31,:OC4s1t12_m0t4q0V01,(^P+<Wd,3&!''N%6QC$0O[-f+?VPB2Inu\4>JZG@QknW4?,/S3Bdm71,:On4s1t13AFrO4q0V01,*6&+<Wd,11<%(%6QC$0P*Ej+?VYD1,M0(4>JZGAj.=[4?5)S@6P,_1,:R<4s1t12)-d=4q0V01,1LI+<Wd+2eHM_%6QC$0etp8+?VV@A7Rk54>JZH1Hlp(4>eiI1d2@21,:R@4s1t12DJZ!4q0V01,1XM+<Wd*Amm\`%6QC$0fD3<+?VVl2D[N+4>JZH2a/?,4?-e/0Koq.1,:RD4s1t13+69+4q0V01,1dQ+<Wd+@Q%g^%6QC$0k!6g+?VSo2`X&24>JZH@QknW4?,2RA3LGb1,:Ro4s1t13ArfM4q0V01,3<''+<Wd,1,psO%6QC$0kENk+?VYDAhlOZ4>JZHAj.=[4?5</0g6%/1,:U=4s1t12IU3,4q0V01,:RJ+<Wd(@P]]%%6QC$1,;$9+?VYpAiW$a4>JZI1Hlp(4>np(3Bdm71,:UA4s1t12e>!*4q0V01,:^N+<Wd*1c@?X%6QC$1,_<=+?VVB@5:"U4>JZI2a/?,4?#!*Aj-Yd1,:UE4s1t12_d<J4q0V01,:jR+<Wd+3&!3R%6QC$11<?h+?VVo0P3KX4>JZI@QknW4?$\*ANgPc1,:Up4s1t12)Shu4q0V01,<B(+<Wd)1h/7(%6QC$11`Wl+?VM8@:VP24>JZIAj.=[4?#/W0Koq.1,:X>4s1t13+Xm&4q0V01,CXK+<Wd(0f!0$%6QC$1GV-:+?VP:3&3Z,4>JZJ1Hlp(4?5*-2*MI31,:XB4s1t13ANC%4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC$1Gq?=+?VS=1H%E+4>JZJ2Ei6+4?-b03''Id61,:XE4s1t13+asY4q0V01,CmR+<Wd,3AEKW%6QC$1H@WA+?VYn2.8ZX4>JZJ@6PeV4>pe*0g6%/1,:Xp4s1t13&30H4q0V01,EE(+<Wd(A7B%4%6QC$1LrZl+?VVl3FtA`4>JZJANh4Z4?6k,0g6%/1,:Xt4s1t12`!9I4q0V01,L[K+<Wd+@Q.g]%6QC$1bh0:+?VYD0ebd#4>JZK1-Qg''4?5E1A3LGb1,:[B4s1t13FjjR4q0V01,LgO+<Wd)A7d\_%6QC$1c7H>+?VVq1c7H+4>JZK2Ei6+4>f&P1-Q.01,:[F4s1t12)Jl!4q0V01,LsS+<Wd(2_d*P%6QC$1c[`B+?VSnAMZLZ4>JZK@6PeV4?5)R0Koq.1,:[q4s1t13B/lU4q0V01,NK)+<Wd*A2#i(%6QC$1h8cm+?VVp3+P2^4>JZKANh4Z4?55W0Koq.1,:[u4s1t13Ak8$4q0V01,UaL+<Wd,2J+^.%6QC$2).9;+?VY=0fD3)4>JZL1-Qg''4?5;[2*MI31,:^C4s1t13A<:!4q0V01,UmP+<Wd+2.e[/%6QC$2)RQ?+?VY=3As&14>JZL2Ei6+4>o)W3''Id61,:^G4s1t13AtDX4q0V01,V$T+<Wd+AhZ5/%6QC$2*!iC+?VP>1,;$&4>JZL@6PeV4>o*+@Qk5`1,:^r4s1t13+O^O4q0V01,WQ*+<Wd+A2.RX%6QC$2.Sln+?VV<A7e"74>JZLANh4Z4?55WAj-Yd1,:_!4s1t12E55+4q0V01,^gM+<Wd*@:M8\%6QC$2DIB<+?VVn@:MJ14>JZM1-Qg''4>o$+2a.[51,:aD4s1t12)7!I4q0V01,^sQ+<Wd)AmmM[%6QC$2DmZ@+?VVn@pqP14>JZM2Ei6+4?-k*3''Id61,:aH4s1t13+ZT/4q0V01,_*U+<Wd,1Gq-U%6QC$2E<rD+?VYA3B0234>JZM@6PeV4?-b,0Koq.1,:as4s1t13G(*W4q0V01,`W++<Wd(0Ocn''%6QC$2Inuo+?VPl0K;6*4>JZMANh4Z4?#0/ANgPc1,:b"4s1t12DnoQ4q0V01,gmN+<Wd+Ai"!^%6QC$2_dK=+?VMl3&Ef.4>JZN1-Qg''4>o012a.[51,:dE4s1t12DR''B4q0V01,h$R+<Wd*A7B"3%6QC$2`3cA+?VMn1Gq?*4>JZN2Ei6+4>pe-1-Q.01,:dI4s1t12.\R"4q0V01,h0V+<Wd+@qB.6%6QC$2`X&E+?VV<1H@W.4>JZN@6PeV4?-k33Bdm71,:dt4s1t13&b>(4q0V01,i],+<Wd+Ai+$^%6QC$2e5)p+?VY?2dnlZ4>JZNANh4Z4?5)M3Bdm71,:e#4s1t13+Fs[4q0V01,psO+<Wd,0k=fY%6QC$3&*T>+?VM82`3c.4>JZO1-Qg''4?-b*@6P,_1,:gF4s1t13AY)T4q0V01,q*S+<Wd,2E!?T%6QC$3&NlB+?VMm1b_*&4>JZO2Ei6+4?#/V2*MI31,:gJ4s1t13AE:"4q0V01,q6W+<Wd+@Pg)/%6QC$3&s/F+?VSo2)IK+4>JZO@6PeV4?,#R2a.[51,:gu4s1t12)f,+4q0V01,rc-+<Wd+3&`i]%6QC$3+P2q+?VSn0f_E,4>JZOANh4Z4>o#SAj-Yd1,:h$4s1t12Df#$4q0V01-%$P+<Wd(AMn''`%6QC$3AE]?+?VVnARRb34>JZP1-Qg''4>pb^Aj-Yd1,:jG4s1t13A`HM4q0V01-%0T+<Wd*A2H&*%6QC$3AiuC+?VSk11`WY4>JZP2Ei6+4?,&R@Qk5`1,:jK4s1t13&i`Q4q0V01-%<X+<Wd+@PBZ''%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>JZP3BeQ.4?-na3''Id61,:ju4s1t12`>,R4q0V01-&f-+<Wd)2Do#/%6QC$3Fb5q+?VYm2.f#]4>JZPA3M+Y4?-b]3''Id61,:k$4s1t13+4d(4q0V01-&r1+<Wd*0kFlZ%6QC$@5''kf+?VSAA77Y24>J[#0g6^&4>f$-0g6%/1,<8n4s1t13+HB/4q0V011;t&+<Wd,1c.$Q%6QC$@5L.j+?VSl@lZ^^4>J[#2*N-*4?5E40Koq.1,<8r4s1t12.J="4q0V011<+*+<Wd*3+QG]%6QC$@5pFn+?VVq1c[`/4>J[#3BeQ.4?-h_@6P,_1,<9H4s1t12IS9o4q0V011=WU+<Wd+1H8f,%6QC$@:MJD+?VVCA7Rk54>J[#A3M+Y4>f,ZA3LGb1,<9L4s1t12)o/Z4q0V011=cY+<Wd*11N"%%6QC$@PBtg+?VY?0ebd#4>J[$0g6^&4?-k*2*MI31,<;o4s1t12)mU+4q0V011E%''+<Wd*A7@AZ%6QC$@Pg7k+?VVl@l-@Y4>J[$2*N-*4>pb22EhR41,<;s4s1t12J-GR4q0V011E1++<Wd+@q.G]%6QC$@Q6Oo+?VPo11NKW4>J[$3BeQ.4?$e2@m1>a1,<<I4s1t12e=dU4q0V011F]V+<Wd*AMZ&)%6QC$@UhSE+?VY=0etp%4>J[$A3M+Y4?-b,@Qk5`1,<<M4s1t12e4a%4q0V011FiZ+<Wd,1cJr/%6QC$@k^(h+?VM=@lHR\4>J[%0g6^&4>eoT3Bdm71,<>p4s1t12)A\u4q0V011N+(+<Wd,2`<WZ%6QC$@l-@l+?VVo0Od3T4>J[%2*N-*4>eoMA3LGb1,<>t4s1t12)@$C4q0V011N7,+<Wd+@qK:9%6QC$@lQXp+?VM:1c.B*4>J[%3BeQ.4>elR@m1>a1,<?J4s1t12)7*I4q0V011OcW+<Wd(0Ock&%6QC$@q.\F+?VM80JG["4>J[%A3M+Y4>efQ2EhR41,<?N4s1t12)-gC4q0V011Oo[+<Wd(0eb@H%6QC$A2$1i+?VM90f2''''4>J[&0g6^&4>eiL@m1>a1,<Aq4s1t12)-mG4q0V011W1)+<Wd(0P*4-%6QC$A2HIm+?VM8@kp4W4>J[&2*N-*4>eiL@Qk5`1,<Au4s1t12)-g>4q0V011W=-+<Wd(0f*6%%6QC$A2laq+?VM8@lZ^^4>J[&3BeQ.4?$b^1d2@21,<BK4s1t13Fu]14q0V011XiX+<Wd(2IeU.%6QC$A7IeG+?VYoARdn54>J[&A3M+Y4?,>W@Qk5`1,<BO4s1t13&+tu4q0V011Xu\+<Wd+@5''E"%6QC$AM?:j+?VVl0ebd#4>J[''0g6^&4?-b''@m1>a1,<Dr4s1t13+4O!4q0V011`7*+<Wd+@P]f(%6QC$AMcRn+?VVl1hAi[4>J[''2*N-*4?-b)2*MI31,<E!4s1t13+4Wu4q0V011`C.+<Wd+@5Bf*%6QC$AN2jr+?VVl1c@N,4>J[''3BeQ.4?-b,1d2@21,<EL4s1t13+4[(4q0V011aoY+<Wd+@5Tf(%6QC$ARdnH+?VVl3&Wr04>J[''A3M+Y4?-b/1d2@21,<EP4s1t13+4aX4q0V011b&]+<Wd+@5fl(%6QC$AhZCk+?VVl2e,#\4>J[(0g6^&4?-b.2*MI31,<Gs4s1t13+4^T4q0V011i=++<Wd+@5_[\%6QC$Ai)[o+?VVl@q7b44>J[(2*N-*4?-b\1-Q.01,<H"4s1t13+4^"4q0V011iI/+<Wd+@6%a[%6QC$AiMss+?VVl@5U4X4>J[(@QknW4?-bZAj-Yd1,<HO4s1t13+6>P4q0V011k&\+<Wd+@:M;]%6QC$An=.K+?VVlA7@_3ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,<HR4s1t13+6>V4q0V01GCLH+<Wd+@:M&V%6QC%0JPa6+?VVl@Q$CZ4>J]H1-Qg''4?-b]2EhR41,CU?4s1t13+6B-4q0V01GCXL+<Wd+@PK]''%6QC%0Ju$:+?VVm0JPa#4>J]H2Ei6+4?-b\1d2@21,CUC4s1t13+6B/4q0V01GCdP+<Wd+@:j"5%6QC%0KD<>+?VVlAhuU[4>J]H@6PeV4?-b\2EhR41,CUn4s1t13+6B04q0V01GE<&+<Wd+@:Wq5%6QC%0P!?i+?VVm1,qH,4>J]HANh4Z4?-e1@m1>a1,CUr4s1t13+=U#4q0V01GLRI+<Wd+@PM:T%6QC%0ekj7+?VVm0ebd#4>J]I1-Qg''4?-e*@Qk5`1,CX@4s1t13+=XR4q0V01GL^M+<Wd+@Pp&-%6QC%0f;-;+?VVm2*!i04>J]I2Ei6+4?-e,ANgPc1,CXD4s1t13+=mZ4q0V01GLjQ+<Wd+@Q%[Z%6QC%0f_E?+?VVm3As&14>J]I@6PeV4?5;W3''Id61,CXo4s1t13AE<u4q0V01GNB''+<Wd,0ekLK%6QC%0k<Hj+?VY=1Gh9)4>J]IANh4Z4?5*+Aj-Yd1,CXs4s1t13AE<J4q0V01GUXJ+<Wd,0ebLL%6QC%1,1s8+?VY=1cRZ.4>J]J1-Qg''4?,**@Qk5`1,C[A4s1t12)8bu4q0V01GUdN+<Wd(A7dMZ%6QC%1,V6<+?VM@0O[-S4>J]J2Ei6+4>f*/3Bdm71,C[E4s1t12)o/&4q0V01GUpR+<Wd(3+Xd-%6QC%1-%N@+?VM@A77Y24>J]J@6PeV4>f''/0g6%/1,C[p4s1t12)mF)4q0V01GWH(+<Wd(3&*<T%6QC%11WQk+?VM@2)7?)4>J]JANh4Z4>f)QA3LGb1,C[t4s1t12)mKN4q0V01G^^K+<Wd+2)o)0%6QC%1GM''9+?VV@2)@E*4>J]K1-Qg''4?,312EhR41,C^B4s1t13&=u%4q0V01G^jO+<Wd+1b^jP%6QC%1Gq?=+?VV?AS++84>J]K2Ei6+4?,*-2a.[51,C^F4s1t13&WNI4q0V01G_!S+<Wd+2)7''R%6QC%1H@WA+?VM@1h&WX4>J]K@6PeV4?"uQ1-Q.01,C^q4s1t13&NQQ4q0V01G`N)+<Wd+1hL8^%6QC%1LrZl+?VV@1hAi[4>J]KANh4Z4?,2X3''Id61,C^u4s1t13&P/R4q0V01GgdL+<Wd*1-%6V%6QC%1bh0:+?VPn@q@h54>J]L1-Qg''4?,2T0g6%/1,CaC4s1t13&P2W4q0V01GgpP+<Wd+2)R-Q%6QC%1c7H>+?VV?@k^(U4>J]L2Ei6+4?,/T1-Q.01,CaG4s1t13&ENM4q0V01Gh''T+<Wd+1c[BV%6QC%1c[`B+?VV?1Gq?*4>J]L@6PeV4?,2YAj-Yd1,Car4s1t13&NQN4q0V01GiT*+<Wd,A79(6%6QC%1h8cm+?VV?3AWi.4>J]LANh4Z4?$h*3''Id61,Cb!4s1t13&NNN4q0V01GpjM+<Wd+2)[3R%6QC%2).9;+?VV@0kENX4>J]M1-Qg''4?6h,0Koq.1,CdD4s1t13&WR$4q0V01Gq!Q+<Wd,1LW(''%6QC%2)RQ?+?VV@2`Eo04>J]M2Ei6+4?,5RANgPc1,CdH4s1t13&P;V4q0V01Gq-U+<Wd+2D?sO%6QC%2*!iC+?VV@ARRb34>J]M@6PeV4?,5R@6P,_1,Cds4s1t12*!QT4q0V01GrZ++<Wd(@l$&-%6QC%2.Sln+?VP<2I\iZ4>J]MANh4Z4>o#T2EhR41,Ce"4s1t12DdF+4q0V01H$pN+<Wd)1c7!O%6QC%2DIB<+?VP=2.JfZ4>J]N1-Qg''4>o$*1Hl7ZDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d1H%$Q+<Wd)2)$jN%6QC%2DdT?+?VP>0fD3)4>J]N2*N-*4>o$.2a.[51,CgH4s1t12Df#U4q0V01H%0U+<Wd)2)/Q(%6QC%2E3lC+?VM>1GD!%4>J]N3BeQ.4>f#Q3''Id61,Cgs4s1t12)\r(4q0V01H&]++<Wd(2ISL-%6QC%2Ieon+?VM=0Jks&4>J]NA3M+Y4>es)@m1>a1,Ch"4s1t12)[EJ4q0V01H&i/+<Wd(2Do#/%6QC%2_[E<+?VM>2D@<(4>J]O0g6^&4>f#Q2*MI31,CjE4s1t12)Su(4q0V01H.*R+<Wd(2E!HW%6QC%2`*]@+?VM>2_mQ+4>J]O2*N-*4>f#V@m1>a1,CjI4s1t12)[?M4q0V01H.6V+<Wd(2DJ]*%6QC%2`NuD+?VM>11`WY4>J]O3BeQ.4>f!-3Bdm71,Cjt4s1t12)[0I4q0V01H/c,+<Wd(2IeF)%6QC%2e,#o+?VM>0P!?V4>J]OA3M+Y4>f$+1Hl711,Ck#4s1t12)\r!4q0V01H/o0+<Wd(2E#/2%6QC%3&!N=+?VVq2DIB)4>J]P0g6^&4>f$+2EhR41,CmF4s1t12)[HP4q0V01H70S+<Wd(2_[0S%6QC%3&EfA+?VMm1c%<)4>J]P2*N-*4>g\.@m1>a1,CmJ4s1t12.\X)4q0V01H7<W+<Wd(AMlD1%6QC%3&j)E+?VMl3&a#14>J]P3BeQ.4>gV\1d2@21,Cmu4s1t12.SQu4q0V01H8i-+<Wd(A27XY%6QC%3+G,p+?VMl@5g@Z4>J]PA3M+Y4>gYX0Koq.1,Cn$4s1t12.S^+4q0V01H8u1+<Wd(A2%OX%6QC%3A<W>+?VMl@Q6O\4>J]Q0g6^&4>gY/0g6%/1,CpG4s1t12.U5S4q0V01H@6T+<Wd(AmmAW%6QC%3A`oB+?VS=2`Eo04>J]Q2*N-*4?#&Q0g6%/1,CpK4s1t12`!@#4q0V01H@BX+<Wd*1G`K(%6QC%3B02F+?VS=2I\iZ4>J]Q3BeQ.4?#&U0Koq.1,Cq!4s1t12`!C&4q0V01HAo.+<Wd,3+Xd-%6QC%3Fb5q+?VYE1G_3(4>J]QA3M+Y4?5B43Bdm71,Cq%4s1t13B8m*4q0V01LW"%+<Wd,3+ZVa%6QC%@5:"h+?VYDAi)[\4>J^$1Hlp(4?5DU3Bdm71,E>q4s1t13B8fK4q0V01LW.)+<Wd,3AFu,%6QC%@5^:l+?VYE1H.K,4>J^$2a/?,4?5DXAj-Yd1,E>u4s1t13B8oP4q0V01LXcW+<Wd,3Ab50%6QC%@:VPE+?VYE2DRH*4>J^$ANh4Z4>g\]0g6%/1,E?N4s1t13+HMS4q0V01L`%%+<Wd)0kOiX%6QC%@PL%h+?VP:@:_V34>J^%1-Qg''4>noP@6P,_1,EAq4s1t12DI"!4q0V01L`1)+<Wd)0Ocn''%6QC%@Pp=l+?VP:1Gh9)4>J^%2Ei6+4>np(@m1>a1,EAu4s1t12DI($4q0V01L`=-+<Wd)0kE=.%6QC%@Q?Up+?VP9An!q54>J^%@6PeV4>noM2a.[51,EBK4s1t12DA_u4q0V01LaiX+<Wd)0fLmP%6QC%@UqYF+?VP:0k3BV4>J^%ANh4Z4>noS1-Q.01,EBO4s1t13AicO4q0V01Li+&+<Wd,2)mKX%6QC%@kg.i+?VYA@lQX]4>J^&1-Qg''4?58YANgPc1,EDr4s1t13AifR4q0V01Li7*+<Wd,2)o)0%6QC%@l6Fm+?VYAAMlX\4>J^&2Ei6+4?59-A3LGb1,EE!4s1t13Ak5S4q0V01LiC.+<Wd,@PVLY%6QC%@lZ^q+?VYA@:MJ14>J^&@6PeV4?59.ANgPc1,EEL4s1t13Ak8(4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC%@q.\F+?VYn1-%N-4>J^&A3M+Y4?59.Aj-Yd1,EEO4s1t13Ak8V4q0V01Lk#\+<Wd,2.C&Z%6QC%A2$1i+?VYA@l$:X4>J^''0g6^&4?59/@Qk5`1,EGr4s1t13Ak>(4q0V01Lr:*+<Wd,2.SC)%6QC%A2HIm+?VYAA2QO[4>J^''2*N-*4?590ANgPc1,EH!4s1t12_[''E4q0V01LrF.+<Wd)Ai2S4%6QC%A2laq+?VS:1,hB+4>J^''3BeQ.4?"rK3''Id61,EHL4s1t12J-Q24q0V01LsrY+<Wd)A2lM3%6QC%A7IeG+?VPm2`X&24>J^''A3M+Y4>pb.ANgPc1,EHP4s1t12J-B/4q0V01Lt)]+<Wd*0JI*&%6QC%AM?:j+?VPnAiMs`4>J^(0g6^&4>pe0Aj-Yd1,EJs4s1t12IpDX4q0V01M&@++<Wd)AiF<c%6QC%AMcRn+?VS:0K)*(4>J^(2*N-*4>pe[0Koq.1,EK"4s1t12_Zpp4q0V01M&L/+<Wd*0K(jR%6QC%AN2jr+?VS:1c.B*4>J^(3BeQ.4?"rJ2*MI31,EKM4s1t12J+m,4q0V01M(#Z+<Wd*0JY=G%6QC%ARdnH+?VS:0kNTY4>J^(A3M+Y4?"rM1-Q.01,EKQ4s1t12_[!H4q0V01M(/^+<Wd*0K!B)%6QC%AhZCk+?VYm11EEV4>J^)0g6^&4?5)T2a.[51,EMt4s1t13A<0F4q0V01M/F,+<Wd,0KCgN%6QC%Ai)[o+?VMk2E3l04>J^)2*N-*4>g_,1Hl711,EN#4s1t12.:)S4q0V01M/R0+<Wd(@:V;\%6QC%AiMss+?VMj0JG["4>J^)3BeQ.4>gP*A3LGb1,ENN4s1t12.A7!4q0V01M1)[+<Wd(@PhRY%6QC%An+"I+?VMi@5g@Z4>J^)A3M+Y4>gPZ@Qk5`1,ENR4s1t12.A7K4q0V01M15_+<Wd(@PTZ%%6QC&0JG[5+?VMj11<?U4>J`I0g6^&4>gS&3Bdm71,L[?4s1t13B:V,4q0V01b^^L+<Wd,3Fl_c%6QC&0Jks9+?VYEA2ug_4>J`I2*N-*4?6h+2EhR41,L[C4s1t13FOdS4q0V01b^jP+<Wd,3Fjj.%6QC&0K;6=+?VYEA2la^4>J`I3BeQ.4?6h,A3LGb1,L[n4s1t13FOaQ4q0V01b`B&+<Wd,3Fss0%6QC&0Om9h+?VYm2IScY4>J`IA3M+Y4?6h(Aj-Yd1,L[r4s1t13FOUP4q0V01b`N*+<Wd,@5''Q&%6QC&0ebd6+?VYm1bq6(4>J`J0g6^&4?6h*A3LGb1,L^@4s1t13FOX#4q0V01bgdM+<Wd,@5K]&%6QC&0f2'':+?VYm11`WY4>J`J2*N-*4?6h+3''Id61,L^F4s1t13FOaV4q0V01bh!S+<Wd,@5]u,%6QC&0k!6g+?VYm2DdT,4>J`J@QknW4?$b^3Bdm71,L^q4s1t12e4U#4q0V01biN)+<Wd*A2#c&%6QC&1,(m7+?VSo3+4u[4>J`K0g6^&4?$e*@m1>a1,LaA4s1t12e4X#4q0V01bpjN+<Wd*A2,l(%6QC&1,M0;+?VSn1LWHV4>J`K2*N-*4?$e,1-Q.01,LaE4s1t12e4^!4q0V01bq!R+<Wd*AMGl&%6QC&1,qH?+?VSn1LiTX4>J`K3BeQ.4?$e-0Koq.1,Lap4s1t12e4^V4q0V01brN(+<Wd*A2Rm]%6QC&11NKj+?VSn1hAi[4>J`KA3M+Y4?$e01Hl711,Lat4s1t12e4m+4q0V01brZ,+<Wd*A2lA/%6QC&1GD!8+?VSn3&j)24>J`L0g6^&4?$e[ANgPc1,LdB4s1t12e6B+4q0V01c$pO+<Wd*A7K(4%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>J`L1d3$)4?$e]1d2@21,LdE4s1t12e6DT4q0V01c%$R+<Wd*A3"3b%6QC&1H.K?+?VSn@:MJ14>J`L3''JH-4?$e[3Bdm71,LdI4s1t12e6>Q4q0V01c&Q(+<Wd*A7@5V%6QC&1L`Nj+?VSn@lHR\4>J`L@m2"X4?$e]3Bdm71,Ldt4s1t12e6GX4q0V01c&],+<Wd*A7dhc%6QC&1M/fn+?VSnAhlOZ4>J`M0KpU%4?$h01-Q.01,LgB4s1t12e6JX4q0V01c-sO+<Wd*A7d_`%6QC&1c%<<+?VSnAhcIY4>J`M1d3$)4?$h*@Qk5`1,LgF4s1t12e6JS4q0V01c.*S+<Wd*AM?,.%6QC&1cIT@+?VSo0k<HW4>J`M3''JH-4?$h+Aj-Yd1,LgJ4s1t12e=^T4q0V01c/W)+<Wd*AMRd[%6QC&1h&Wk+?VSo0O[-S4>J`M@m2"X4?$h+0g6%/1,Lgu4s1t12e=pY4q0V01c/c-+<Wd*AMZ>1%6QC&1hJoo+?VSo1Gq?*4>J`N0KpU%4?$h-1-Q.01,LjC4s1t12e=g(4q0V01c7$P+<Wd*AMc8.%6QC&2)@E=+?VSo3&j)24>J`N1d3$)4?$h/@6P,_1,LjG4s1t12e=j%4q0V01c70T+<Wd*AN"*`%6QC&2)d]A+?VSo2e>/^4>J`N3''JH-4?$h10Koq.1,LjK4s1t12e=mZ4q0V01c8]*+<Wd*AN;_6%6QC&2.A`l+?VS>@5C(V4>J`N@m2"X4?#)R@Qk5`1,Lk!4s1t12`,#V4q0V01c8i.+<Wd,3&"c)%6QC&2.f#p+?VS>@UqY34>J`O0KpU%4?#)QAj-Yd1,LmD4s1t12`*KS4q0V01c@*Q+<Wd*1gr:+%6QC&2D[N>+?VS>A2HIZ4>J`O1d3$)4?#*-@6P,_1,LmH4s1t13B(J/4q0V01c@6U+<Wd,2e6J`%6QC&2E*fB+?VYCA7Ie44>J`O3''JH-4>o3.@6P,_1,LmL4s1t12IU0*4q0V01cAc++<Wd)3&rr^%6QC&2I\im+?VPAA2ZU\4>J`O@m2"X4>pV%2*MI31,Ln"4s1t12E3^/4q0V01cAo/+<Wd)@:Wh2%6QC&2J,,q+?VPjAhuU[4>J`P0KpU%4>pVZ3''Id61,LpE4s1t12IU-.4q0V01cI0R+<Wd)@5p82%6QC&2`!W?+?VPB0P3KX4>J`P1d3$)4>pV)3''Id61,LpI4s1t12E<ZT4q0V01cI<V+<Wd)3FZSa%6QC&2`EoC+?VPj1LWHV4>J`P3''JH-4>pV.@m1>a1,LpM4s1t12I\Br4q0V01cJi,+<Wd)@PMFX%6QC&2e"rn+?VPjA7Rk54>J`P@m2"X4>o322a.[51,Lq#4s1t12I\@P4q0V01cJu0+<Wd)@PKc)%6QC&2eG5r+?VPjARdn54>J`Q0KpU%4>pVY@6P,_1,LsF4s1t12IU2W4q0V01cR6S+<Wd)@:D#V%6QC&3&<`@+?VPjAN)d^4>J`Q1d3$)4>pVV1Hl711,LsJ4s1t12IU,P4q0V01cRBW+<Wd)@:Wq5%6QC&3&a#D+?VPk@5L.W4>J`Q3''JH-4>pY/ANgPc1,LsN4s1t12I^*+4q0V01cSo-+<Wd)@UW_0%6QC&3+>&o+?VPk@:h\44>J`Q@m2"X4?-n_1d2@21,Lt$4s1t13+ZW04q0V01cT&1+<Wd+AS*\]%6QC&3+b>s+?VVpAn!q54>J`R0KpU%4?-q21d2@21,M!G4s1t13+Z\^4q0V01c[<T+<Wd+AS,F9%6QC&3AWiA+?VVpAR[h44>J`R1d3$)4?-n`1d2@21,M!K4s1t13+b''(4q0V01c[HX+<Wd+AS,@7%6QC&3B'',E+?VVpAn=.8ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,M!N4s1t13+ajQ4q0V01c[Q[+<Wd+AhZ/-%6QC&3FP)o+?VVq0Ju$''4>J`R@QknW4?-q-1-Q.01,M"$4s1t13+ap(4q0V01c]/3+<Wd+AhddZ%6QC&@5''kf+?VVq1G_3(4>Ja%0g6^&4?-q02EhR41,NDp4s1t13+b$)4q0V01gr1(+<Wd)1,1UL%6QC&@5L.j+?VP;1,hB+4>Ja%2*N-*4?#,O@m1>a1,NDt4s1t12E#&(4q0V01gr=,+<Wd)2IeR-%6QC&@5pFn+?VP?3&s/34>Ja%3BeQ.4>o*.2EhR41,NEJ4s1t13+HGQ4q0V01gsiW+<Wd+@q%,U%6QC&@:MJD+?VVn@UVG04>Ja%A3M+Y4?-h[A3LGb1,NEN4s1t13+O^"4q0V01gsu[+<Wd+@q%2W%6QC&@PBtg+?VVn@l6FZ4>Ja&0g6^&4?-k+0Koq.1,NGq4s1t13+HJR4q0V01h&7)+<Wd+@q9"3%6QC&@Pg7k+?VVnA2QO[4>Ja&2*N-*4?-h^@Qk5`1,NGu4s1t13+HMY4q0V01h&C-+<Wd+@qK16%6QC&@Q6Oo+?VVD3B0234>Ja&3BeQ.4?,?0@m1>a1,NHK4s1t13&tD%4q0V01h''oX+<Wd+3FZSa%6QC&@UhSE+?VVD@5^:Y4>Ja&A3M+Y4?,?0Aj-Yd1,NHO4s1t13&tG''4q0V01h(&\+<Wd+3FXp2%6QC&@k^(h+?VPkAnF494>Ja''0g6^&4>p\''@m1>a1,NJr4s1t12IeLP4q0V01h/=*+<Wd*1,V$T%6QC&@l-@l+?VP@1,hB+4>Ja''2*N-*4?,&Q2EhR41,NK!4s1t13&+rP4q0V01h/I.+<Wd+0em-$%6QC&@lQXp+?VV<@V%_44>Ja''3BeQ.4?,&R0g6%/1,NKL4s1t13&+oT4q0V01h0uY+<Wd)@Pqa]%6QC&@q@hH+?VYD@Q$CZ4>Ja''Aj.=[4?5B1@m1>a1,NMq4s1t13B1M,4q0V01h8=)+<Wd,3+Fp3%6QC&A26=k+?VVq1bq6(4>Ja(1Hlp(4?7"1Aj-Yd1,NMu4s1t12DmKP4q0V01h8I-+<Wd*0fEN*%6QC&A2ZUo+?VS;2)7?)4>Ja(2a/?,4?"uT2a.[51,NN$4s1t12_ees4q0V01h8U1+<Wd*0k=cX%6QC&A77YE+?VS;An=.84>Ja(@QknW4?#900Koq.1,NNO4s1t12`Wj/4q0V01h:,\+<Wd*3FQ>[%6QC&A7[qI+?VP:A7e"74>Ja(Aj.=[4>noP1d2@21,NPr4s1t12DJc!4q0V01hAC*+<Wd)1,(XN%6QC&AMQFl+?VPo@6$L\4>Ja)1Hlp(4?#62Aj-Yd1,NQ!4s1t12`P5V4q0V01hAO.+<Wd*3&W`[%6QC&AMu^p+?VSB@Q6O\4>Ja)2a/?,4?#8U@6P,_1,NQ%4s1t12`WZK4q0V01hA[2+<Wd*3&WTW%6QC&ARRbF+?VSBAn4(74>Ja)@QknW4?#622a.[51,NQP4s1t12`PA)4q0V01hC2]+<Wd,AiV_4%6QC&AS"%J+?VSA3B0234>Ja)Aj.=[4?#2VANgPc1,NSs4s1t12`G2U4q0V01hJI++<Wd*AiM\4%6QC&AhlOm+?VSp3&j)24>Ja*2Ei6+4?5-,3Bdm71,NT%4s1t13AG&''4q0V01hJ^2+<Wd,0k<.*%6QC&AiW$t+?VY=AiDm_4>Ja*@6PeV4?5--2a.[51,NTP4s1t13AG)%4q0V01hL5]+<Wd,1Gh!R%6QC&An4(J+?VY=Ai2a]4>Ja*ANh4Z4?5-.3Bdm71,NTT4s1t13AN9J4q0V02)$^J+<Wd,1,:aO%6QC''0JPa6+?VY>1c7H+4>JcJ1-Qg''4?5/O0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d2)$gM+<Wd,1,1IH%6QC''0Jks9+?VY>0JPa#4>JcJ2*N-*4?5/P2a.[51,UaD4s1t13AN9F4q0V02)$sQ+<Wd,1,:^N%6QC''0K;6=+?VY>0JG["4>JcJ3BeQ.4?5/Q@6P,_1,Uao4s1t13ANKN4q0V02)&K''+<Wd,1,CjQ%6QC''0Om9h+?VY>1G_3(4>JcJA3M+Y4?5/S2*MI31,Uas4s1t13ANC$4q0V02)&W++<Wd,1,CmR%6QC''0ebd6+?VY>2.\r\4>JcK1Hlp(4?5/QAj-Yd1,UdC4s1t13A`WJ4q0V02)-sP+<Wd,1,CUJ%6QC''0fD3<+?VY>1c[`/4>JcK2a/?,4?5/R3''Id61,UdG4s1t13ANF%4q0V02).*T+<Wd,1,<E)%6QC''0k!6g+?VY>1H@W.4>JcK@QknW4?55S3''Id61,Udr4s1t13AP#Q4q0V02)/W*+<Wd,11;k#%6QC''0kENk+?VY>2dnlZ4>JcKAj.=[4?50*@6P,_1,Ug@4s1t13AP/W4q0V02)6mM+<Wd,11Oo[%6QC''1,;$9+?VY@0Jbm%4>JcL1Hlp(4?50.1Hl711,UgD4s1t13A`O#4q0V02)7$Q+<Wd,11Dt%%6QC''1,_<=+?VY>@5^:Y4>JcL2a/?,4?53+2a.[51,UgH4s1t13ANTQ4q0V02)70U+<Wd,11OfX%6QC''11<?h+?VY>@6$L\4>JcL@QknW4?5302*MI31,Ugs4s1t13ANTN4q0V02)8]++<Wd,1,if/%6QC''11`Wl+?VY?@6$L\4>JcLAj.=[4?5/W@6P,_1,UjA4s1t13AWBu4q0V02)?sN+<Wd,11=WU%6QC''1GV-:+?VY>3&<`-4>JcM1Hlp(4?55P@Qk5`1,UjE4s1t13AP#&4q0V02)@*R+<Wd,11;t&%6QC''1H%E>+?VY@0etp%4>JcM2a/?,4?52R3''Id61,UjI4s1t13AP2$4q0V02)@6V+<Wd,1LrF.%6QC''1LWHi+?VY>AMlX\4>JcM@QknW4?50/0Koq.1,Ujt4s1t13AP/X4q0V02)Ac,+<Wd,11`F/%6QC''1M&`m+?VY>@UhS24>JcMAj.=[4?50-A3LGb1,UmB4s1t13AP2)4q0V02)I*Q+<Wd,11N+(%6QC''1c.B=+?VY>A7e"74>JcN2*N-*4?50.2EhR41,UmH4s1t13AWBF4q0V02)I6U+<Wd,1GC^N%6QC''1cRZA+?VY?2E<r14>JcN3BeQ.4?52P@Qk5`1,Ums4s1t13AWKG4q0V02)Jc++<Wd,1GCOI%6QC''1h/]l+?VY?0f;-(4>JcNA3M+Y4?52QANgPc1,Un"4s1t13AWKJ4q0V02)R*P+<Wd,1GNK*%6QC''2)7?<+?VY?0f_E,4>JcO1Hlp(4?52U2*MI31,UpG4s1t13AWKN4q0V02)R6T+<Wd,1H.3U%6QC''2)[W@+?VY?2)IK+4>JcO2a/?,4?52U1d2@21,UpK4s1t13AY)P4q0V02)RBX+<Wd,1H.!O%6QC''2.8Zk+?VY?3&Ef.4>JcO@QknW4?53/1d2@21,Uq!4s1t13AY2*4q0V02)So.+<Wd,1bq$S%6QC''2.\ro+?VY?3&a#14>JcOAj.=[4?53-@m1>a1,UsD4s1t13AWZT4q0V02)[0Q+<Wd,1L`=-%6QC''2DRH=+?VY?@V.e54>JcP1Hlp(4?53+2EhR41,UsH4s1t13AY+u4q0V02)[<U+<Wd,1L`4*%6QC''2E!`A+?VY@1h/]Y4>JcP2a/?,4?53/1-Q.01,Usu4s1t13AY/U4q0V02)\o-+<Wd,1Lt&\%6QC''2Ieon+?VY?@l$:X4>JcPA3M+Y4?53-2a.[51,Ut$4s1t13AY2#4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC''2J,,q+?VY@0f2''''4>JcQ0KpU%4?55QA3LGb1,V!F4s1t13AY8+4q0V02)d9S+<Wd,1c@3T%6QC''2`!W?+?VY@0f)!&4>JcQ1d3$)4?55VA3LGb1,V!J4s1t13A`KF4q0V02)dEW+<Wd,1cIEY%6QC''2`EoC+?VY?AiW$a4>JcQ3''JH-4?55Q3Bdm71,V!N4s1t13A`R$4q0V02)er-+<Wd,1c$mN%6QC''2e"rn+?VY@1M/f[4>JcQ@m2"X4?55U1d2@21,V"$4s1t13A`WM4q0V02)f)1+<Wd,1H/l/%6QC''2eG5r+?VSk2DIB)4>JcR0KpU%4?6n_3Bdm71,V$G4s1t13FcYZ4q0V02)m?T+<Wd,A2#r+%6QC''3&<`@+?VYp0K)*(4>JcR1d3$)4?6q-1Hl711,V$K4s1t13Fk*.4q0V02)mKX+<Wd,AMH&+%6QC''3&a#D+?VYp0k<HW4>JcR3''JH-4?6q,Aj-Yd1,V$O4s1t13Fl\Y4q0V02)o#.+<Wd,A27a\%6QC''3+>&o+?VYpA2ug_4>JcR@m2"X4?6q.0Koq.1,V%%4s1t13Fjs%4q0V02)o/2+<Wd,AMIa[%6QC''3+b>s+?VYp2)@E*4>JcS0KpU%4?6t-A3LGb1,V''H4s1t13Fk$%4q0V02*!EU+<Wd,A2Q,+%6QC''3AWiA+?VYpAhuU[4>JcS1d3$)4?6q0@m1>a1,V''L4s1t13Fk$&4q0V02*!QY+<Wd,A2uG0%6QC''3B'',E+?VYp2IScY4>JcS3''JH-4?6q1Aj-Yd1,V''P4s1t13Fk*04q0V02*#)/+<Wd,A2uV5%6QC''3FY/p+?VYp3FP)\4>JcS@m2"X4?6q^0Koq.1,V(&4s1t13FlPU4q0V02*#53+<Wd,A77J^%6QC''3G(Gt+?VYp@kp4W4>Jd&0KpU%4?6q]@m1>a1,WJp4s1t13FspR4q0V02.87(+<Wd,A7RJ[%6QC''@5C(i+?VYpA77Y24>Jd&1d3$)4?6q`Aj-Yd1,WJt4s1t13Fl\Z4q0V02.8C,+<Wd,A7dS\%6QC''@5g@m+?VYpAiMs`4>Jd&3''JH-4?6t,@m1>a1,WK#4s1t13Fl`14q0V02.9oW+<Wd,AMIXX%6QC''@:DDC+?VS@2DdT,4>Jd&@m2"X4?#/U3''Id61,WKN4s1t12`<QQ4q0V02.:&[+<Wd*2D?mM%6QC''@PL%h+?VS@1c[`/4>Jd''1-Qg''4?#/QANgPc1,WMs4s1t12`<I$4q0V02.AI-+<Wd*2E!QZ%6QC''@Q-In+?VS@2_mQ+4>Jd''3''JH-4?$\Y2a.[51,WN$4s1t12dp/R4q0V02.BuX+<Wd+3ArQT%6QC''@U_MD+?VVD1G_3(4>Jd''@m2"X4?,>YA3LGb1,WNO4s1t13&rfS4q0V02.C,\+<Wd+3AWWY%6QC''@V.eH+?VVD2DdT,4>Jd(0KpU%4?#0-3''Id61,WPr4s1t13&!+!4q0V02.JC*+<Wd+0J[-%%6QC''@l$:k+?VV;2`X&24>Jd(1d3$)4?,#R2*MI31,WQ!4s1t13B/]O4q0V02.JU0+<Wd,3&33P%6QC''@lZ^q+?VYD0k3BV4>Jd(@6PeV4>pe.0g6%/1,WQN4s1t13B/cP4q0V02.L,[+<Wd,3&<KW%6QC''@q7bG+?VYD1hAi[4>Jd(ANh4Z4?5AY1Hl711,WQR4s1t13B/rR4q0V02.SC)+<Wd,3&WNU%6QC''A2-7j+?VYD2*!i04>Jd)1-Qg''4?5AZ2*MI31,WSu4s1t13B/p,4q0V02.SO-+<Wd,3&`NT%6QC''A2QOn+?VVBAMZLZ4>Jd)2Ei6+4?,;S2EhR41,WT$4s1t13&`NL4q0V02.S[1+<Wd+3&39R%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>Jd)3BeQ.4?,932EhR41,WTN4s1t13&YAW4q0V02.U/[+<Wd+2e?Sb%6QC''A7IeG+?VVB3&Ef.4>Jd)A3M+Y4?,;T0Koq.1,WTR4s1t13&b>,4q0V02.U;_+<Wd+3&*-O%6QC''AM?:j+?VVB@U_M14>Jd*0g6^&4?,90ANgPc1,WVu4s1t12eFmV4q0V02.\R-+<Wd*@V%A[%6QC''AMcRn+?VSl2E*f/4>Jd*2*N-*4?$b.3Bdm71,WW$4s1t12e$AT4q0V02.\^1+<Wd*@k]T#%6QC''AN2jr+?VSl@q%V24>Jd*3BeQ.4?$b-@m1>a1,WWO4s1t12e+RR4q0V02.^5\+<Wd*@kqLW%6QC''ARdnH+?VSm1,D*''4>Jd*A3M+Y4?$b.@6P,_1,WWS4s1t12e+^W4q0V02.^A`+<Wd+1,^sQ%6QC''AhZCk+?VV=2I\iZ4>Jd+0g6^&4?,<1@6P,_1,WZ!4s1t12eHJU4q0V02.eX.+<Wd*@qIJ[%6QC''Ai)[o+?VSmAi;g^4>Jd+2*N-*4?$b\A3LGb1,WZ%4s1t12e=d''4q0V02.ed2+<Wd,ARRS_%6QC''AiMss+?VVo@PU+V4>Jd+3BeQ.4?5-+2*MI31,WZP4s1t13AG#"4q0V02.g;]+<Wd,AN+$]%6QC''An+"I+?VVp3&s/34>Jd+A3M+Y4?-n/@m1>a1,WZT4s1t13+Y**4q0V02.gGa+<Wd+AN+$]%6QC(0JG[5+?VVp2)RQ,4>JfK0g6^&4?-n4@6P,_1,^gA4s1t13+Y''Y4q0V02D?pN+<Wd+AN;P1%6QC(0Jks9+?VVp3AE],4>JfK2*N-*4?-n\0g6%/1,^gE4s1t13+Y!(4q0V02D@''R+<Wd+ART"2%6QC(0K;6=+?VVp@5^:Y4>JfK3BeQ.4?,?51d2@21,^gp4s1t13&tS/4q0V02DAT(+<Wd,2`5#-%6QC(0Om9h+?VYC1bq6(4>JfKA3M+Y4?5>VA3LGb1,^gt4s1t13B&cO4q0V02DA`,+<Wd,Ai2D/%6QC(0ebd6+?VYr2.f#]4>JfL0g6^&4?7"23Bdm71,^jB4s1t13G(0''4q0V02DI!O+<Wd,Ai4''^%6QC(0f2'':+?VYr2E!`.4>JfL2*N-*4?7"3@m1>a1,^jF4s1t13G(0X4q0V02DI-S+<Wd,AiDY4%6QC(0fV?>+?VYqAn4(74>JfL3BeQ.4?6tbAj-Yd1,^jq4s1t13G''s*4q0V02DJZ)+<Wd+@Q7p_%6QC(0k3Bi+?VY@2e>/^4>JfLA3M+Y4?53/3''Id61,^ju4s1t13FXp+4q0V02DJf-+<Wd,@Q-,-%6QC(1,(m7+?VYn3&*T+4>JfM0g6^&4?6k11Hl711,^mC4s1t13FXsZ4q0V02DR''P+<Wd,@lHA2%6QC(1,M0;+?VSk1h/]Y4>JfM2*N-*4?6k21-Q.01,^mG4s1t13FapY4q0V02DR3T+<Wd,@Q?,+%6QC(1,qH?+?VYn@:VP24>JfM3BeQ.4?6k2@6P,_1,^mr4s1t13FZE*4q0V02DS`*+<Wd,@QA!`%6QC(11NKj+?VYo2Inu\4>JfMA3M+Y4?6kZ@Qk5`1,^n!4s1t13FY!Z4q0V02DSl.+<Wd,@l650%6QC(1GD!8+?VYn@kg.V4>JfN0g6^&4?6n1@6P,_1,^pD4s1t13Faj"4q0V02D[-Q+<Wd,@l$,/%6QC(1Gh9<+?VYo1,D*''4>JfN2*N-*4?6n-2a.[51,^pH4s1t13FZJP4q0V02D[9U+<Wd,@Uih1%6QC(1H7Q@+?VYn@lHR\4>JfN3BeQ.4?6k_A3LGb1,^ps4s1t13FZMW4q0V02D\l-+<Wd,@V%8X%6QC(1M&`m+?VYnAMcR[ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,^q#4s1t13FZPY4q0V02Dd*O+<Wd,@Us"5%6QC(1bh0:+?VYnAMQFY4>JfO1-Qg''4?6k_0Koq.1,^sF4s1t13FZN.4q0V02Dd6S+<Wd,@V.G\%6QC(1c7H>+?VYnA2HIZ4>JfO2Ei6+4?6n/A3LGb1,^sJ4s1t13Faa&4q0V02DdBW+<Wd,@kfZ$%6QC(1c[`B+?VYo0P!?V4>JfO@6PeV4?6n+1-Q.01,^su4s1t13Faa''4q0V02Deo-+<Wd,@V049%6QC(1h8cm+?VYo1,(m$4>JfOANh4Z4?6n-1-Q.01,^t$4s1t13FagT4q0V02Dm0P+<Wd,@kp#-%6QC(2).9;+?VYo1,V6)4>JfP1-Qg''4?6n,3Bdm71,_!G4s1t13Faj$4q0V02Dm<T+<Wd,@l%[[%6QC(2)RQ?+?VYo1cRZ.4>JfP2Ei6+4?6n-@Qk5`1,_!K4s1t13Faj&4q0V02DmHX+<Wd,@l-&,%6QC(2*!iC+?VYo2)[W-4>JfP@6PeV4?6n/1d2@21,_"!4s1t13Fap%4q0V02Dnu.+<Wd,@l?80%6QC(2.Sln+?VYC@l$:X4>JfPANh4Z4?5?0A3LGb1,_"%4s1t13B(G.4q0V02E!6Q+<Wd,A7B"3%6QC(2DIB<+?VYm@qIn64>JfQ1-Qg''4?6h\2EhR41,_$H4s1t13FQGU4q0V02E!BU+<Wd,@Pp,/%6QC(2DmZ@+?VYn1hAi[4>JfQ2Ei6+4?5DZ2a.[51,_$L4s1t13B8s,4q0V02E!NY+<Wd,@PT]&%6QC(2E<rD+?VYqAiDm_4>JfQ@6PeV4?6tb1-Q.01,_%"4s1t13&rm,4q0V02E#&/+<Wd,2.JO.%6QC(2Inuo+?VY?1H%E+4>JfQANh4Z4>g_-2EhR41,_%&4s1t13&NEI4q0V02E*<R+<Wd*AN;S2%6QC(2_dK=+?VYr2D[N+4>JfR1-Qg''4>f#U3Bdm71,_''I4s1t13G(!''4q0V02E*HV+<Wd(2Dd-P%6QC(2`3cA+?VYmAS"%74>JfR2Ei6+4?,>T2a.[51,_''M4s1t12dnNs4q0V02E*TZ+<Wd,3+=[-%6QC(2`X&E+?VYA@5L.W4>JfR@6PeV4?6k)A3LGb1,_(#4s1t13+cbZ4q0V02E,,0+<Wd(Ai2S4%6QC(2e5)p+?VSk2I\iZ4>JfRANh4Z4?5B41-Q.01,_(''4s1t12)&Go4q0V02E3BS+<Wd+2*!BT%6QC(3&*T>+?VM90fV?+4>JfS1-Qg''4>nuS1-Q.01,_*J4s1t12)7!t4q0V02E3NW+<Wd*2`,,1%6QC(3&NlB+?VSo3+P2^4>JfS2Ei6+4>o*-2EhR41,_*N4s1t12`G/U4q0V02E3Z[+<Wd,AN)J1%6QC(3&s/F+?VM>@lZ^^4>JfS@6PeV4?6tb1d2@21,_+$4s1t12J-K/4q0V02E521+<Wd)0k=iZ%6QC(3+P2q+?VSA@lHR\4>JfSANh4Z4?"rM0Koq.1,_+(4s1t13FuYW4q0V02E<HT+<Wd+3&G&-%6QC(3AE]?+?VYAAMQFY4>JfT1-Qg''4?5?12EhR41,_-K4s1t12e+a&4q0V02E<TX+<Wd*AMZ/,%6QC(3AiuC+?VYC@5^:Y4>JfT2Ei6+4?6t]Aj-Yd1,_-O4s1t12)\rS4q0V02E<`\+<Wd,3+=U+%6QC(3B98G+?VPj@:h\44>JfT@6PeV4?$k/ANgPc1,_.%4s1t12e-GR4q0V02E>82+<Wd''An*S[%6QC(3Fk;r+?VSo2I\iZ4>JfTANh4Z4?6t33Bdm71,_.)4s1t12)\lS4q0V02IS:''+<Wd,@PM:T%6QC(@50qg+?VV?2J,,^4>Jg''1-Qg''4?#9/2EhR]DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d2ISC*+<Wd*@lH/,%6QC(@5L.j+?VYmA26=X4>Jg''2*N-*4?5</@Qk5`1,`Q!4s1t12e6N04q0V02ISO.+<Wd+3+c\b%6QC(@5pFn+?VSB1c%<)4>Jg(2*N-*4>8O$3Bdm71,`T"4s1t11,(F=4q0V02I\U/+<Wd%0JPFK%6QC(@Q6Oo+?VD51,V6)4>Jg(3BeQ.4>JTH2*MI31,`TM4s1t11,1I?4q0V02I^,Z+<Wd%0ebUO%6QC(@k^(h+?VD70f;-(4>Jg)0g6^&4>JZHAj-Yd1,`Vt4s1t11,:U@4q0V02IeO,+<Wd%1,UgN%6QC(@l?Ln+?VD7@V.e54>Jg,Aj.=[4>Jd*1-Q.01,gmC4s1t11,^gH4q0V02_[''P+<Wd%1-%3U%6QC)0Ju$:+?VG60etp%4>JiM0g6^&4>Sa$1Hl711,gpH4s1t11G`Go4q0V02_d9U+<Wd&1Li7*%6QC)0f_E?+?VG9@q@h54>JiM@m2"X4>Sd(2*MI31,gpu4s1t1An<bP4q0V02_el-+<WdYAn<_]%6QC)0kNTl+?X7JAMcR[4>JiN0KpU%4>JWH0g6%/1,gsC4s1t11GUa@4q0V02_m-P+<Wd%0JP7F%6QC)1,D*:+?VG6An+"64>JiN3''JH-4>SZF2EhR41,h%!4s1t11GCUr4q0V02`3QY+<Wd''AM>l''%6QC)2.Jfm+?VJl0P3KX4>JiQA3M+Y4>^V(1-Q.01,h(%4s1t11hAC#4q0V02`<ET+<Wd''AMQ&*%6QC)2D[N>+?VJl1,_<*4>JiR1d3$)4>^V)3Bdm71,h*M4s1t11hAHt4q0V02`<WZ+<Wd''AMZ,+%6QC)2E<rD+?VJl1Gq?*4>JiR@6PeV4>^V*2a.[51,h+#4s1t11hAIQ4q0V02`>83+<Wd''AMc5-%6QC)2_[E<+?VJl1c@N,4>JiS0g6^&4>^V+@6P,_1,h-I4s1t11hAO!4q0V02`ENV+<Wd''AMl>/%6QC)2`*]@+?VJl2)d].4>JiT1Hlp(4>^V.1-Q.01,h3M4s1t11hAX*4q0V02`W`Z+<Wd''AN4*^%6QC)3As&D+?VJl3A<W+4>JiU3BeQ.4>^V03Bdm71,h4''4s1t11hC)O4q0V02`YD4+<Wd''ART"2%6QC)@50qg+?VJl@Pg7X4>Jj(3BeQ.4>^VZ3''Id61,iWM4s1t11hC0,4q0V02dp5\+<Wd''ARmP[%6QC)@PL%h+?VJlAM?:W4>Jj)1-Qg''4>^V\1-Q.01,iZ"4s1t11hC5Y4q0V02e"d2+<Wd''AS*Y\%6QC)@UVGC+?VJlAi)[\4>Jj)ANh4Z4>^V]@m1>a1,iZS4s1t11hC914q0V02e+O*+<Wd''AhYo&%6QC)A2-7j+?VJm1,1s%4>Jj+1-Qg''4>^Y*1Hl711,i`''4s1t11hJNu4q0V02e4p4+<Wd''Ahu5,%6QC)A77YE+?VJm1Gq?*4>Jj+@QknW4>^Y+2a.[51,i`R4s1t11hJO(4q0V02e6G_+<Wd''Ai!m[%6QC)AR[hG+?VJm2)7?)4>Jj,@m2"X4>^Y-1d2@21,icT4s1t11hJU''4q0V02eFa-+<Wd''Ai;P2%6QC)AhcIl+?VJm2E3l04>Jj-3''JH-4>^Y/2*MI31,ifU4s1t11hJ[W4q0V03&!$M+<Wd''AiMP0%6QC*0JPa6+?VJm3&Nl/4>JlM1-Qg''4>^Y02a.[51,psD4s1t11hJ^U4q0V03&!0Q+<Wd''AiO9a%6QC*0Ju$:+?VJm3+Y8_4>JlM2Ei6+4>^Y10Koq.1,psJ4s1t11hJa*4q0V03&"l,+<Wd''AiX?b%6QC*0etp8+?VJm@5L.W4>JlN1Hlp(4>^YY@Qk5`1,q!F4s1t11hL0,4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC*1GM''9+?VJmA2ug_4>JlP1-Qg''4>^Y\@Qk5`1,q''G4s1t11hL;S4q0V03&<HV+<Wd''An<nb%6QC*1H@WA+?VJmAhZCX4>JlP@6PeV4>^Y^1-Q.01,q(%4s1t11hL>[4q0V03&EET+<Wd''AnGX=%6QC*1h&Wk+?VM80O[-S4>JlQ@m2"X4>efHANgPc1,q+$4s1t12)$a=4q0V03&G21+<Wd(0JP@I%6QC*2)7?<+?VM80k*<U4>JlR2*N-*4>efJ0Koq.1,q-O4s1t12)$dE4q0V03&WWX+<Wd(0Jd0%%6QC*2E!`A+?VM81LrZY4>JlT0KpU%4>efLA3LGb1,q4$4s1t12)$ms4q0V03+4a0+<Wd(0KD''U%6QC*@PBtg+?VM8@5L.W4>Jm*0g6^&4>eg$2EhR41,r`&4s1t12)&Jt4q0V03+HA\+<Wd(0Ouk$%6QC*AMH@k+?VM8Ai)[\4>Jm-2*N-*4>eg)@6P,_1,riR4s1t12)-d>4q0V03+ZP_+<Wd(0ebCI%6QC*ARdnH+?VM90Ju$''4>Jm-A3M+Y4>eiI@6P,_1,rl$4s1t12)-g?4q0V03+as1+<Wd(0ekIJ%6QC*An+"I+?VM91,(m$4>JoO1d3$)4>eiM1-Q.01-%''H4s1t12)-pH4q0V03AEEU+<Wd(0f3<&%6QC+0fM9=+?VM91h/]Y4>JoO@QknW4>eiN1Hl711-%($4s1t12)-st4q0V03ANTY+<Wd(0fEH(%6QC+11<?h+?VM92J,,^4>JoP@QknW4>eiP1-Q.01-%+"4s1t12).$u4q0V03AY,.+<Wd(0f_3W%6QC+1LiTk+?VM93FP)\4>JoR0KpU%4>ej%0g6%/1-%0G4s1t12)/Mq4q0V03A``[+<Wd(0k)t''%6QC+2)7?<+?VM9@l6FZ4>JoS1Hlp(4>ej''3''Id61-%3K4s1t12)/TL4q0V03AiZX+<Wd(0k4cY%6QC+2)[W@+?VM9A2$1V4>JoT0KpU%4>ej(@m1>a1-%7%4s1t12)/ZP4q0V03AtA2+<Wd(0kFo[%6QC+2Inuo+?VM9AhlOZ4>JoTANh4Z4>ej*1d2@21-%7)4s1t12)/]%4q0V03B&WU+<Wd(0kOu\%6QC+2`!W?+?VM:0KD<+4>JoU@QknW4>elK@m1>a1-%<N4s1t12)6pq4q0V03B/l[+<Wd(1,<?''%6QC+3&WrC+?VM:11i]Z4>JoV@QknW4>elM@m1>a1-%=(4s1t12)6t!4q0V03B8r\+<Wd(1,UpQ%6QC+3FP)o+?VM:2.Sl[4>Jp*0KpU%4>elP2EhR41-&bt4s1t12)7''L4q0V03FOj1+<Wd(1,h!Q%6QC+@:h\G+?VM:2e>/^4>Jp+0KpU%4>elR0Koq.1-&f#4s1t12)7.#4q0V03FXp2+<Wd(1-%*R%6QC+@V.eH+?VM:3Fb5^4>Jp-0g6^&4>em(0Koq.1-&l#4s1t12)8Ys4q0V03Fk$3+<Wd(11N:-%6QC+A2c[p+?VM:@pqP14>Jp-@m2"X4>em)0g6%/1-&lW4s1t12)8]$4q0V03Fsm.+<Wd(11XfW%6QC+AMH@k+?VM:A7Ie44>Jp.1d3$)4>em*1Hl711-&rV4s1t12)?pF4q0V0@5''B!+<Wd(1GE<&%6QCS0JPa6+?VM;0P*EW4>L>!2Ei6+4>eoL3''Id611;kG4s1t12)@!C4q0V0@50Q%+<Wd(1G^^K%6QCS0k<Hj+?VM;1bq6(4>L>"ANh4Z4>eoO1d2@211;nL4s1t12)@''I4q0V0@59W&+<Wd(1GpjM%6QCS1,_<=+?VM;2.A`Y4>L>#2a/?,4>eoPA3LGb11;pt4s1t12)@-J4q0V0@59i,+<Wd(1H%3V%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>L>#@6PeV4>eoQ@6P,_11;qK4s1t12)@0H4q0V0@5;CX+<Wd(1H.3U%6QCS11i]m+?VM;2`X&24>L>$2Ei6+4>eoS1Hl7111;t!4s1t12)@4#4q0V0@5Ki*+<Wd(1HB#1%6QCS1c@N?+?VM;@50qT4>L>%2a/?,4>ep''1d2@211<"!4s1t12)AZ"4q0V0@5MR[+<Wd(1L`.(%6QCS2)%3:+?VM;@Pp=Y4>L>&3''JH-4>ep)0Koq.11<''r4s1t12)Ac#4q0V0@5]o*+<Wd(1LsoX%6QCS2E*fB+?VM;AMH@X4>L>''3''JH-4>ep+2a.[511<($4s1t12)Ai$4q0V0@5_OX+<Wd(1M1&Z%6QCS2J#&p+?VM<0JYg$4>L>''Aj.=[4>erL2*MI311<*q4s1t12)I!G4q0V0@5fo)+<Wd(1b`B&%6QCS2_mQ>+?VM<0f2''''4>L>(2Ei6+4>erM@m1>a11<+#4s1t12)I''D4q0V0@5hUY+<Wd(1brK''%6QCS2e"rn+?VM<1GD!%4>L>(@m2"X4>erO1Hl7111<+R4s1t12)I*t4q0V0@5or)+<Wd(1c&Z+%6QCS3&*T>+?VM<1M/f[4>L>)2Ei6+4>erP2a.[511<.$4s1t12)I-M4q0V0@5qa\+<Wd(1c7!O%6QCS3+P2q+?VM<2.8ZX4>L>*1Hlp(4>erR1Hl7111<1"4s1t12)I3K4q0V0@6$2/+<Wd(1c@9V%6QCS3FtAs+?VM<2`*]-4>L>R1Hlp(4>erT0g6%/11=TJ4s1t12)I9K4q0V0@:;#W+<Wd(1cR?V%6QCS@:;>B+?VM<3+P2^4>L>R@QknW4>erU0g6%/11=U$4s1t12)I<L4q0V0@:<b3+<Wd(1c]&0%6QCS@Pp=l+?VM<@5U4X4>L>S2Ei6+4>es(ANgPc11=WN4s1t12)Jbr4q0V0@:D2[+<Wd(1h&4(%6QCS@V%_G+?VM<@V%_44>L>SAj.=[4>es*1Hl7111=ZH4s1t12)Jf#4q0V0@:M)W+<Wd(1h8L.%6QCS@l-@l+?VM<A2la^4>L>T2*N-*4>es+@Qk5`11=ZN4s1t12)Jku4q0V0@:V5Z+<Wd(1hL2\%6QCSA2ZUo+?VM<An=.84>L>U2a/?,4>euM0Koq.11=^%4s1t12)R''F4q0V0@:Wh2+<Wd(2)%!R%6QCSARmtI+?VM=1,1s%4>L>W1-Qg''4>euO@Qk5`11=cN4s1t12)R."4q0V0@:h>[+<Wd(2)@!O%6QCSAn+"I+?VM=1LrZY4>L>WA3M+Y4>euQ0Koq.11=d+4s1t12)R3G4q0V0@:j+8+<Wd(2)I0S%6QCT0K;6=+?VM=2)IK+4>LA"ANh4Z4>euRA3LGb11Dsq4s1t12)R:$4q0V0@PMFX+<Wd(2)f&0%6QCT0kNTl+?VM=2eG5_4>LA$2*N-*4>euV0Koq.11E"L4s1t12)RC*4q0V0@P]r,+<Wd(2.9rX%6QCT1H7Q@+?VM=@:VP24>LA%@QknW4>f!*1d2@211E%L4s1t12)Si$4q0V0@P_OY+<Wd(2.AO/%6QCT1M&`m+?VM=@UVG04>LA%Aj.=[4>f!*@m1>a11E''t4s1t12)Sl''4q0V0@PhLW+<Wd(2.SR.%6QCT1hAin+?VM=A7@_34>LA&Aj.=[4>f!,ANgPc11E*p4s1t12)Sr!4q0V0@Pol(+<Wd(2.\O,%6QCT2)7?<+?VM=AN)d^4>LA''2a/?,4>f!.1d2@211E+O4s1t12)SuX4q0V0@Q#u*+<Wd(2D@''R%6QCT2E<rD+?VM>0f;-(4>LA(@m2"X4>f#OA3LGb11E0t4s1t12)[3L4q0V0@Q-/.+<Wd(2D[-Q%6QCT2`<iB+?VM>1H.K,ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>11E1$4s1t12)[7!4q0V0@Q.a[+<Wd(2Dd*O%6QCT3AE]?+?VM>2DIB)4>LA+1-Qg''4>f#T1Hl7111E7"4s1t12)[?O4q0V0@Q?>1+<Wd(2E*<R%6QCT3B'',E+?VM>2`!W,4>LA+3''JH-4>f#U2*MI311E7(4s1t12)[BP4q0V0@Q@j\+<Wd(2E,&.%6QCT@5^:l+?VM>3+P2^4>LAS@6PeV4>f#W1d2@211F]Q4s1t12)\l%4q0V0@Uh/W+<Wd(2I\O-%6QCT@q@hH+?VM>@q%V24>LAV3BeQ.4>f$-@m1>a11Fd&4s1t12)]#%4q0V0@V%8X+<Wd(2J$A^%6QCTAS"%J+?VM?0Ju$''4>LAWAj.=[4>f&O@m1>a11FiR4s1t12)d6K4q0V0@V049+<Wd(2_m3R%6QCU0Jbm8+?VM?11EEV4>LD#A3M+Y4>f&RAj-Yd11N"L4s1t12)d?H4q0V0@kfi)+<Wd(2`+u-%6QCU0kNTl+?VM?2DmZ-4>LD%0KpU%4>f&U2a.[511N''o4s1t12)dF''4q0V0@kof''+<Wd(2`>52%6QCU1c.B=+?VM?@5U4X4>LD''2*N-*4>f''+3''Id611N.!4s1t12)erP4q0V0@l-,.+<Wd(2dp2[%6QCU1h&Wk+?VM?@P^1W4>LD)1Hlp(4>f''.1Hl7111N4%4s1t12)f&W4q0V0@lH2-+<Wd(2e?Pa%6QCU2e>/q+?VM@0JPa#4>LD+1Hlp(4>f)P@m1>a11N:U4s1t12)m=&4q0V0@q%,U+<Wd(3&G21%6QCU@PL%h+?VM@2)%3''4>LDU1-Qg''4>f)U1Hl7111Od(4s1t12)mKM4q0V0@q7>Y+<Wd(3&bG5%6QCUA2?Cl+?VM@3&3Z,4>LDW1d3$)4>f)X1d2@211OlP4s1t12)mU*4q0V0@q@M]+<Wd(3&tM5%6QCUAn4(J+?VM@@UqY34>LG$1Hlp(4>f*.2EhR411W(L4s1t12)o,%4q0V0A2%RY+<Wd(3+Oj0%6QCV0f2'':+?VM@AMH@X4>LG%2*N-*4>f*01Hl7111W+J4s1t12)o/U4q0V0A2.OW+<Wd(3+ZVa%6QCV1,qH?+?VMA0Jbm%4>LG''0KpU%4>f,QANgPc11W1"4s1t12*!C#4q0V0A2@^Z+<Wd(3ANBS%6QCV1LrZl+?VMA1,_<*4>LG''ANh4Z4>f,S3''Id611W1Q4s1t12*!F%4q0V0A2Gu(+<Wd(3AW?Q%6QCV1c7H>+?VMA1L`NW4>LG(2Ei6+4>f,TA3LGb11W4%4s1t12*!KL4q0V0A2Id[+<Wd(3Ab/.%6QCV1hJoo+?VMA2)%3''4>LG)1-Qg''4>f,V3Bdm711W7%4s1t12*!QL4q0V0A2Rp^+<Wd(3At>1%6QCV2.f#p+?VMA2Inu\4>LG*1d3$)4>f,X2*MI311W:#4s1t12*!TS4q0V0A2[p]+<Wd(3B/l[%6QCV2Inuo+?VMA3&s/34>LG+2Ei6+4>f,Z3''Id611W@Q4s1t12*#,S4q0V0A3"0a+<Wd(3Fk-6%6QCV3FtAs+?VMAA7@_34>LGU1d3$)4>f-11d2@211XiP4s1t12*#8W4q0V0A7At2+<Wd(@5''B!%6QCV@U_MD+?VMi0JYg$4>LGW1-Qg''4>gP%1-Q.011Xm+4s1t12.86s4q0V0A7R\a+<Wd(@5B]''%6QCVA77YE+?VMi1Gq?*4>LJ%0KpU%4>gP*2*MI311`7Q4s1t12.9rN4q0V0AMl;.+<Wd(@:V/X%6QCW2)RQ?+?VMiA2QO[4>LJ*@m2"X4>gPY1-Q.011`?u4s1t12.:'')4q0V0AN+$]+<Wd(@PD4S%6QCW3&EfA+?VMj0fV?+4>LJ.3BeQ.4>gS(0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,dAN=0_+<Wd(@P]f(%6QCW@PU+i+?VMj2)7?)4>LJW1Hlp(4>gS*2EhR411aoO4s1t12.AFS4q0V0AR].5+<Wd(@Q-&+%6QCW@UqYF+?VMj2`*]-4>LJX0KpU%4>gS,3Bdm711arO4s1t12.ALU4q0V0ARdP\+<Wd(@Q6,,%6QCW@l6Fm+?VMj3&Wr04>LJX2Ei6+4>gS-@6P,_11as*4s1t12.AR&4q0V0ARf77+<Wd(@Q?>1%6QCW@q@hH+?VMj3G(Ga4>LJY3''JH-4>gSW2a.[511b!-4s1t12.C&O4q0V0AS!b`+<Wd(@Uq2W%6QCWAhZCk+?VMjAM?:W4>LJ[0g6^&4>gSZ1Hl7111b&Q4s1t12.C-*4q0V0AS*_^+<Wd(@V''(6%6QCWAi)[o+?VMjAS++84>LJ[3BeQ.4>gS[2a.[511b''-4s1t12.J<o4q0V0AS,O<+<Wd(@k]c(%6QCX0JG[5+?VMk0Om9U4>LM&0g6^&4>gV''0Koq.11i3s4s1t12.J@"4q0V0AhZ)++<Wd(@kfu-%6QCX0K)*;+?VMk0k*<U4>LM&@QknW4>gV(1Hl7111i4M4s1t12.JC"4q0V0AhlA1+<Wd(@l7j^%6QCX11<?h+?VMk2E*f/4>LM(ANh4Z4>gV,A3LGb11i:R4s1t12.JR!4q0V0Ai!m[+<Wd(@lQ/+%6QCX1cRZA+?VMk3Aiu04>LM+1-Qg''4>gVW@6P,_11iC%4s1t12.L)N4q0V0Ai2M2+<Wd(@q%8Y%6QCX2)mcB+?VMk@Q$CZ4>LM+A3M+Y4>gVXANgPc11iCT4s1t12.L,M4q0V0AiF3`+<Wd(@q@S_%6QCX2e5)p+?VMkAN;p`4>LM.2*N-*4>gV\2*MI311iLS4s1t12.L6.4q0V0AiX<a+<Wd(A2,r*%6QCX@5^:l+?VMl1,V6)4>LMW2a/?,4>gY)3''Id611k$,4s1t12.SRS4q0V0An3nc+<Wd(A2[j[%6QCXARdnH+?VMl3&<`-4>LM\ANh4Z4>gY03''Id611k-14s1t12.S^U4q0V10JPRO+<Wd(A7@P_%6QF#0k!6g+?VMl@U_M14>SZH3''JH-4>gYZ@m1>a1GCRp4s1t12.U5R4q0V10JbOL+<Wd(A7T16%6QF#1H@WA+?VMlARRb34>SZJ2*N-*4>g\(1d2@21GCXD4s1t12.\I#4q0V10Jm?)+<Wd(AMH,-%6QF#2*!iC+?VMm11NKW4>SZK@m2"X4>g\+1-Q.01GC^C4s1t12.\U!4q0V10K1^M+<Wd(AMlA0%6QF#2`<iB+?VMm2D@<(4>SZN1Hlp(4>g\/2*MI31GCdF4s1t12.\^*4q0V10K;$U+<Wd(AN2P2%6QF#3+Y8r+?VMm3ANc-4>SZNAj.=[4>g\13''Id61GCgC4s1t12.\dW4q0V10KCjO+<Wd(AN=9b%6QF#3B98G+?VMm@:MJ14>SZOAj.=[4>g\Z1d2@21GE;n4s1t12.^>Z4q0V10Olk%+<Wd(AS#=7%6QF#@lZ^q+?VMmAi2a]4>S[%1-Qg''4>g_)3Bdm71GE>t4s1t12.eQs4q0V10P!+++<Wd(Ahc&)%6QF#A2laq+?VMn0f2''''4>S[%3BeQ.4>g_*2EhR41GEAr4s1t12.eU''4q0V10P*.++<Wd(Ahmp]%6QF#AN)dq+?VMn1GD!%4>S[&3''JH-4>g_,1-Q.01GEB#4s1t12.eX$4q0V10P+cY+<Wd(Ai!m[%6QF#Ai;gq+?VMn1cIT-4>S[''@6PeV4>g_-A3LGb1GEEM4s1t12.e[W4q0V10P4fY+<Wd(Ai2;,%6QF#An4(J+?VMn2)IK+4>S]G0KpU%4>g_.@m1>a1GLR?4s1t12.ea&4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QF$0Ju$:+?VMn2DmZ-4>S]G3''JH-4>g_/@Qk5`1GLRm4s1t12.ed&4q0V10ed3''+<Wd(AiD\5%6QF$0ebd6+?VMn2dnlZ4>S]H1d3$)4>g_11Hl711GLUA4s1t12.eg+4q0V10em-$+<Wd(AiVb5%6QF$0kENk+?VMn3Fk;_4>S]HAj.=[4>g_2Aj-Yd1GLXr4s1t12.g;U4q0V10f!?)+<Wd(An!_`%6QF$1L`Nj+?VMn@q@h54>S]K@6PeV4>g_^@m1>a1GLaD4s1t12.gH14q0V10f<H)+<Wd)0JP@I%6QF$2.f#p+?VP90k!6T4>S]N1d3$)4>nlM0Koq.1GLgu4s1t12D?st4q0V10fN].+<Wd)0JtRK%6QF$3+P2q+?VP92J#&]4>S]P1-Qg''4>nlP2a.[51GLmG4s1t12D@($4q0V10jue#+<Wd)0KCpQ%6QF$@5:"h+?VP93Aiu04>S^#2Ei6+4>nlR@m1>a1GN;s4s1t12D@.&4q0V10k"QU+<Wd)0OZn(%6QF$@:h\G+?VP9@:_V34>S^$0KpU%4>nm&0Koq.1GN>n4s1t12DASr4q0V10k)n%+<Wd)0Oct)%6QF$@pqPD+?VP9A2ug_4>S^%@QknW4>nm(@Qk5`1GNBL4s1t12DAZQ4q0V10k<"&+<Wd)0P+ZV%6QF$A26=k+?VP9Ai2a]4>S^&A3M+Y4>noJ2a.[51GNHP4s1t12DHsE4q0V11,*-#+<Wd)0f1mS%6QF%0Od3g+?VP:1h8cZ4>S`I1Hlp(4>noO3Bdm71GU[C4s1t12DI(#4q0V11,36%+<Wd)0fD$U%6QF%0kENk+?VP:2J,,^4>S`J0g6^&4>noQ1d2@21GUaD4s1t12DI1''4q0V11,CgP+<Wd)0f_$R%6QF%1c@N?+?VP:@:;>/4>S`L2a/?,4>np&A3LGb1GUh"4s1t12DJ_u4q0V11,`]-+<Wd)0kE:-%6QF%2dnlm+?VP:AiW$a4>S`O@QknW4>np+@Qk5`1GUn!4s1t12DJfS4q0V11,q$Q+<Wd)1,(^P%6QF%3&<`@+?VP;0f)!&4>S`P1d3$)4>nrL3Bdm71GUpL4s1t12DR$A4q0V11,q9X+<Wd)1,:XL%6QF%3+4un+?VP;1,_<*4>S`PA3M+Y4>nrM@Qk5`1GUq$4s1t12DR$u4q0V11,rl0+<Wd)1,<H*%6QF%3A<W>+?VP;1GM''&4>S`Q3''JH-4>nrO1-Q.01GUt#4s1t12DR*t4q0V111=]W+<Wd)1,_*U%6QF%@Q$Cm+?VP;2e5)]4>Sa&1d3$)4>nrT1d2@21GWGt4s1t12DR9Q4q0V111N=.+<Wd)11;t&%6QF%A2laq+?VP;@UVG04>Sa''3BeQ.4>ns(ANgPc1GWKN4s1t12DSbu4q0V111XoZ+<Wd)11OcW%6QF%A7[qI+?VP;@qIn64>Sa''Aj.=[4>ns*0g6%/1GWMq4s1t12DSf#4q0V111`=,+<Wd)11`:+%6QF%AN2jr+?VP;AhZCX4>Sa(3BeQ.4>ns,1-Q.01GWNM4s1t12DSl%4q0V111b&]+<Wd)1GCLH%6QF&0JG[5+?VP<0f_E,4>ScI0g6^&4>nuM@m1>a1G^^A4s1t12D[*K4q0V11GLaN+<Wd)1GgpP%6QF&0fV?>+?VP<1grQW4>ScK2*N-*4>nuR0Koq.1G^dH4s1t12D[7"4q0V11GWB&+<Wd)1H&`,%6QF&1H%E>+?VP<3&*T+4>ScL3BeQ.4>nuT@Qk5`1G^gq4s1t12D[=''4q0V11G`K(+<Wd)1H@0R%6QF&1M/fn+?VP<3B'',24>ScM2a/?,4>o!(0g6%/1G^jI4s1t12D\bu4q0V11Gh*U+<Wd)1LW1*%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>ScM@6PeV4>o!(@Qk5`1G^js4s1t12D\cR4q0V11GpjM+<Wd)1L`@.%6QF&2).9;+?VP<@U_M14>ScN1-Qg''4>o!)A3LGb1G^mE4s1t12D\fS4q0V11Gq*T+<Wd)1Li:+%6QF&2.Sln+?VP<A2-7W4>ScO2a/?,4>o!+Aj-Yd1G^pK4s1t12D\o"4q0V11H.*R+<Wd)1M/F,%6QF&2`*]@+?VP<Ai2a]4>ScP2*N-*4>o!-2a.[51G^su4s1t12D\rV4q0V11H7-R+<Wd)1b`K)%6QF&3+4un+?VP=0k<HW4>ScQ@QknW4>o#NAj-Yd1G_$I4s1t12Dd0u4q0V11HAl-+<Wd)1c%!Q%6QF&@5''kf+?VP=1M&`Z4>Sd%0g6^&4>o#Q0Koq.1G`Gr4s1t12Dd6N4q0V11LX`V+<Wd)1c7''Q%6QF&@PU+i+?VP=2.Sl[4>Sd&@6PeV4>o#S3''Id61G`KO4s1t12Dd=''4q0V11Li7*+<Wd)1cI?W%6QF&@q%VE+?VP=3&<`-4>Sd''@m2"X4>o#U2EhR41G`Q!4s1t12DdEN4q0V11M&=*+<Wd)1gsfV%6QF&AMZLm+?VP=@:h\44>Sd)1d3$)4>o$*0g6%/1G`T"4s1t12Del"4q0V11M&I.+<Wd)1h&@,%6QF&AN)dq+?VP=@Q?U]4>Sd)3''JH-4>o$*A3LGb1G`T&4s1t12Deo"4q0V11M''uY+<Wd)1h/F-%6QF&ARmtI+?VP=@q.\34>Sd)ANh4Z4>o$+Aj-Yd1G`TS4s1t12Der!4q0V11M/=)+<Wd)1h8C+%6QF&AhuUn+?VP=A2ug_4>Sd*2a/?,4>o$,Aj-Yd1G`W&4s1t12Deu"4q0V11M/X2+<Wd)1hAI,%6QF&AmmkG+?VP=AMlX\4>SfJ1-Qg''4>o$.1Hl711GgdE4s1t12Df#V4q0V11b^mQ+<Wd)1hL>`%6QF''0Om9h+?VP>0Ju$''4>SfK2Ei6+4>o&O1Hl711GggF4s1t12Dm3H4q0V11bgsR+<Wd)2).$R%6QF''0f_E?+?VP>0k!6T4>SfK@6PeV4>o&O@m1>a1GgjC4s1t12Dm7#4q0V11bq$S+<Wd)2)@0T%6QF''1-%N@+?VP>1LWHV4>SfM2a/?,4>o&S0Koq.1Ggms4s1t12Dm?O4q0V11c&W*+<Wd)2)Sf+%6QF''1LrZl+?VP>2.JfZ4>SfN@6PeV4>o&U0g6%/1Ggpt4s1t12DmEL4q0V11c/]++<Wd)2)dEW%6QF''2.f#p+?VP>3ANc-4>SfP0KpU%4>o&W1d2@21Gh!E4s1t12DmKQ4q0V11c@*Q+<Wd)2*!W[%6QF''2D[N>+?VP>3FP)\4>SfP2Ei6+4>o''*0Koq.1Gh!M4s1t12Dno$4q0V11cAc++<Wd)2.8I.%6QF''2I\im+?VP>@:;>/4>SfP@m2"X4>o''*ANgPc1Gh$H4s1t12Dnr''4q0V11cIEY+<Wd)2.JC*%6QF''2e>/q+?VP>@q7b44>SfR@m2"X4>o''.0g6%/1Gh+%4s1t12E!6D4q0V11gr.''+<Wd)2DAT(%6QF''@5C(i+?VP?0P!?V4>Sg&A3M+Y4>o)PANgPc1GiPr4s1t12E!<K4q0V11h&C-+<Wd)2DSi-%6QF''@Q6Oo+?VP?1GD!%4>Sg(0KpU%4>o)RA3LGb1GiVt4s1t12E!F(4q0V11h8C++<Wd)2E!6Q%6QF''A2ZUo+?VP?2DmZ-4>Sg)2a/?,4>o)U2a.[51GiYs4s1t12E!KO4q0V11hA[2+<Wd)2E3KV%6QF''AnF4L+?VP?@5C(V4>SiL3BeQ.4>o*-2*MI31Gpmq4s1t12E#&)4q0V12)70U+<Wd)2Ip5[%6QF(1H7Q@+?VP?AhcIYASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1Gpt!4s1t12E#/X4q0V12)I-R+<Wd)2_\`*%6QF(1grQj+?VP@0fD3)4>SiOANh4Z4>o,Q@m1>a1Gq"$4s1t12E*@%4q0V12)R9U+<Wd)2_mBW%6QF(2)d]A+?VP@11`WY4>SiP3''JH-4>o,S0Koq.1Gq''H4s1t12E*HI4q0V12)[?V+<Wd)2`*HW%6QF(2E<rD+?VP@1h8cZ4>SiQ@6PeV4>o,U1-Q.01Gq*H4s1t12E*L(4q0V12)er-+<Wd)2`>52%6QF(2e"rn+?VP@2`*]-4>SiR@m2"X4>o,W2EhR41Gq-H4s1t12E*R*4q0V12)m?T+<Wd)2`NKT%6QF(3&a#D+?VP@3&j)24>SiS3''JH-4>o,X@6P,_1Gq0I4s1t12E*WS4q0V12*!EU+<Wd)2`Wl^%6QF(3AWiA+?VP@3FY/]4>SiT2a/?,4>o-,1d2@21Gq0P4s1t12E,&&4q0V12*!Z\+<Wd)2dn^1%6QF(3FP)o+?VP@@:MJ14>SiT@QknW4>o-,ANgPc1Gq1(4s1t12E,)%4q0V12.8F-+<Wd)2e+U,%6QF(@Pp=l+?VP@A7@_34>Sj(2Ei6+4>o-/Aj-Yd1GrW#4s1t12E,2%4q0V12.J@)+<Wd)2eFg/%6QF(@pqPD+?VP@An=.84>Sj)Aj.=[4>o/Q2EhR41Gr\s4s1t12E3C$4q0V12.SF*+<Wd)3&**N%6QF(A26=k+?VPA0etp%4>Sj,0KpU%4>o/TAj-Yd1Grc!4s1t12E3NP4q0V12.eU-+<Wd)3&G).%6QF(AhuUn+?VPA1h8cZ4>Sj,1d3$)4>o/UAj-Yd1Grc%4s1t12E3QL4q0V12D?gK+<Wd)3&Y2/%6QF)0KD<>+?VPA2`3c.4>SlM1Hlp(4>o/Y1-Q.01H$sE4s1t12E3ZQ4q0V12DR3T+<Wd)3&tP6%6QF)1GM''9+?VPA@:_V34>SlO1d3$)4>o0.1d2@21H%%$4s1t12E52$4q0V12Dd<U+<Wd)3+HA\%6QF)1cIT@+?VPA@q.\34>SlPANh4Z4>o003Bdm71H%+%4s1t12E58[4q0V12E!EV+<Wd)3+cV`%6QF)2_mQ>+?VPB0Om9U4>SlS1Hlp(4>o2S0g6%/1H%6P4s1t12E<R)4q0V12IU2]+<Wd)3AkD4%6QF)@Pg7k+?VPB2E*f/4>Sm)2a/?,4>o2X@m1>a1H&]Q4s1t12E<]S4q0V12IeO,+<Wd)3B/`W%6QF)@l-@l+?VPB3&<`-4>Sm*2*N-*4>o2Z2*MI31H&cS4s1t12E>2+4q0V12IpA_+<Wd)3FQD]%6QF)AR[hG+?VPB@k^(U4>Sm-1d3$)4>o30Aj-Yd1H.!A4s1t12E>;Z4q0V12_d<V+<Wd)3G)hd%6QF*0k!6g+?VPj0JG["4>SoP0KpU%4>pV''0Koq.1H.*E4s1t12IS?r4q0V12`!?U+<Wd)@59i,%6QF*1L`Nj+?VPj1GD!%4>SoR2a/?,4>pV*@6P,_1H.1#4s1t12ISKt4q0V12`NKT+<Wd)@5qj_%6QF*3+G,p+?VPj@50qT4>SoV1-Qg''4>pVV@6P,_1H/cO4s1t12IU-+4q0V12e+U,+<Wd)@:_G_%6QF*@l$:k+?VPjAR[h44>Sp-A3M+Y4>pY''Aj-Yd1H/oW4s1t12I\I%4q0V12eHYc+<Wd)@P_IW%6QF+0JG[5+?VPk1LiTX4>SrN2a/?,4>pY*3''Id61H7*t4s1t12I\Qu4q0V13&3HW+<Wd)@Q.^Z%6QF+11WQk+?VPk3&Nl/4>SrPANh4Z4>pY.3''Id61H7.%4s1t12I\XU4q0V13&<HV+<Wd)@Q?A2%6QF+1H.K?+?VPk3B9844>SrR2a/?,4>pYX2EhR]DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e3&G/0+<Wd)@Uh)U%6QF+2)IK>+?VPk@q.\34>SrS2*N-*4>pYYANgPc1H76O4s1t12I^2V4q0V13&N][+<Wd)@Urn2%6QF+2Inuo+?VPkAi)[\4>SrU1d3$)4>pY\ANgPc1H7=(4s1t12IeFP4q0V13&bD4+<Wd)@kf`&%6QF+2eG5r+?VPl0fM9*4>SrV1Hlp(4>p\)0Koq.1H7?N4s1t12IeL"4q0V13&icZ+<Wd)@kqRY%6QF+3&WrC+?VPl1GM''&4>SrV2a/?,4>p\*1Hl711H7BN4s1t12IeR''4q0V13&tJ4+<Wd)@l6/.%6QF+@:;>B+?VPl2_dK*4>Ss*@QknW4>p\.1Hl711H8fQ4s1t12Ie[''4q0V13+=^.+<Wd)@lQ;/%6QF+@Pp=l+?VPl3&a#14>Ss,0KpU%4>p\0@6P,_1H8l$4s1t12Ig/L4q0V13+Fg0+<Wd)@pq,V%6QF+@l?Ln+?VPl@5pF[4>Ss,2a/?,4>p\X@m1>a1H8lU4s1t12Ig3)4q0V13+Op2+<Wd)@q/t3%6QF+AMH@k+?VPlA7e"74>Ss.1-Qg''4>p\\1d2@21H8r''4s1t12Ig;Y4q0V13+Y''5+<Wd)@qIJ[%6QF+AN;ps+?VPlAi)[\4>Ss.@6PeV4>p\]3Bdm71H8u''4s1t12InLP4q0V13+cYa+<Wd)A2-&-%6QF+AnF4L+?VPm0kNTY4>SuO2*N-*4>p_*2EhR41H@.!4s1t12InU#4q0V13AE3O+<Wd)A2@XX%6QF,0f)!9+?VPm1bq6(4>SuP1d3$)4>p_,1d2@21H@0I4s1t12InX)4q0V13AEEU+<Wd)A2Id[%6QF,0fM9=+?VPm2)%3''4>SuP@m2"X4>p_-@Qk5`1H@1#4s1t12In[U4q0V13AG)/+<Wd)A2Rs_%6QF,1H.K?+?VPm3&Wr04>SuR@6PeV4>p_0A3LGb1H@7%4s1t12Ing''4q0V13A`NU+<Wd)A3"-`%6QF,1c.B=+?VPm@5:"U4>SuS2*N-*4>p_Y2*MI31H@?K4s1t12Ip>W4q0V13ArcZ+<Wd)A7T:9%6QF,2E<rD+?VPmAMlX\4>SuUA3M+Y4>p_]A3LGb1H@BJ4s1t12IpDT4q0V13B&ZV+<Wd)A7dY^%6QF,2_mQ>+?VPmAiMs`4>SuVAj.=[4>pb)@Qk5`1H@EK4s1t12J"RS4q0V13B/fY+<Wd)AMH&+%6QF,3+4un+?VPn1,;$&4>SuWA3M+Y4>pb+@6P,_1H@F+4s1t12J"XT4q0V13B8fX+<Wd)AMZ,+%6QF,3AiuC+?VPn1H@W.4>T!+3BeQ.4>pb.2*MI31HAlP4s1t12J"a)4q0V13FcS`+<Wd)AN2M1%6QF,A77YE+?VPn3B'',24>T!.ANh4Z4>pb2ANgPc1HB#&4s1t12J$;T4q0V13FuV_+<Wd)AR[>W%6QF,AR[hG+?VPn@P^1W4>T!/@m2"X4>pb[2*MI31HB#Y4s1t12J$?-4q0V13G(''2+<Wd)ARdM[%6QF,Ai)[o+?VPn@l?L[4>T!03''JH-4>pb\A3LGb1HB&-4s1t12J$DQ4q0V13G)\`+<Wd)ARmP[%6QF,An!qH+?VPnA2ZU\4>UD"0KpU%4>pb]A3LGb1LVsl4s1t12J$GU4q0V1@5''H#+<Wd)AS!ea%6QFT0KD<>+?VPnAhuU[4>UD#0g6^&4>pe*0Koq.1LW$u4s1t12J+^!4q0V1@5;@W+<Wd)Ahmp]%6QFT11`Wl+?VPo1GD!%4>UD%0g6^&4>pe-2a.[51LW''u4s1t12J+d"4q0V1@5DLZ+<Wd)Ai+!]%6QFT1grQj+?VPo2.Sl[4>UD&ANh4Z4>pe01Hl711LW+P4s1t12J+j)4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QFT2)[W@+?VPo2_dK*4>UD''2a/?,4>pe11Hl711LW.L4s1t12J+m.4q0V1@5VLX+<Wd)AiF0_%6QFT2DIB<+?VPo3&Nl/4>UD)2a/?,4>pe[3''Id61LW4R4s1t12J-DR4q0V1@:<b3+<Wd)AnGL9%6QFT@PBtg+?VPoAn4(74>UDT3BeQ.4?"rJ@6P,_1LXa''4s1t12_Zs?4q0V1@:M)W+<Wd*0JPRO%6QFT@l-@l+?VS:0k3BV4>UDU2*N-*4?"rKANgPc1LXfL4s1t12_[$B4q0V1@:_G_+<Wd*0JtOJ%6QFTAn+"I+?VS:2J#&]4>UG#0KpU%4?"rQ1d2@21L`$m4s1t12_[0L4q0V1@PBZ''+<Wd*0K3N+%6QFU0f)!9+?VS:3AWi.4>UG%2*N-*4?"s''0Koq.1L`*t4s1t12_\\r4q0V1@PV@U+<Wd*0OeHS%6QFU1GM''9+?VS:@lZ^^4>UG&ANh4Z4?"s)@6P,_1L`1!4s1t12_\f#4q0V1@Pg#-+<Wd*0P+ZV%6QFU1cRZA+?VS:AS"%74>UG''Aj.=[4?"s+3''Id61L`7"4s1t12_d$D4q0V1@Q$,.+<Wd*0ekUN%6QFU3+Y8r+?VS;1h&WX4>UG+Aj.=[4?"uOA3LGb1L`@S4s1t12_d1#4q0V1@UUrS+<Wd*0fCgO%6QFU@50qg+?VS;2DmZ-4>UGT1d3$)4?"uQA3LGb1Lad&4s1t12_d6O4q0V1@Uh)U+<Wd*0f_$R%6QFUA2ZUo+?VS;@PU+V4>UGW2a/?,4?#!(1d2@21LaoM4s1t12_eet4q0V1@V''+7+<Wd*0k<((%6QFUAnF4L+?VS;AS++84>UJ$@6PeV4?#!,A3LGb1Li0s4s1t12_m*t4q0V1@kqX[+<Wd*1,:jR%6QFV1GD!8+?VS<11EEV4>UJ''2Ei6+4?##O@m1>a1Li7$4s1t12_m6L4q0V1@l-20+<Wd*1,WK(%6QFV1grQj+?VS<2.JfZ4>UJ(@QknW4?##QANgPc1Li7O4s1t12_m9F4q0V1@l5r(+<Wd*1,_*U%6QFV2DmZ@+?VS<3+G,]4>UJ*2Ei6+4?##TANgPc1Li@T4s1t12_nfQ4q0V1@lQ5-+<Wd*11E+)%6QFV3A<W>+?VS<@qIn64>UJ-0g6^&4?#$+0g6%/1LiF''4s1t12_no''4q0V1@l\!^+<Wd*11Xu\%6QFV@6$Lo+?VS=0JYg$4>UJV2a/?,4?#&N1d2@21LjoM4s1t12`!4"4q0V1@q.G]+<Wd*1G^mP%6QFV@lQXp+?VS=1LWHV4>UJW@QknW4?#&Q0Koq.1LjrS4s1t12`!<G4q0V1@qB+5+<Wd*1H%6W%6QFVARdnH+?VS=2J#&]4>UJYA3M+Y4?#&T0g6%/1Lk#N4s1t12`!BN4q0V1@qIGZ+<Wd*1H.<X%6QFVAhlOm+?VS=2e5)]4>UJZ1Hlp(4?#&TAj-Yd1Lk#W4s1t12`!EQ4q0V1@qK.5+<Wd*1H8f,%6QFVAnF4L+?VS=3ANc-4>UM&1-Qg''4?#'')@6P,_1Lr3t4s1t12`"nt4q0V1A2.[[+<Wd*1Li.''%6QFW1,hB>+?VS=@q@h54>UM(1Hlp(4?#'',Aj-Yd1Lr:$4s1t12`##''4q0V1A2?50+<Wd*1M&O0%6QFW2)%3:+?VS>0Jks&4>UM+3''JH-4?#)P2a.[51LrC(4s1t12`*9M4q0V1A2[j[+<Wd*1brN(%6QFW2I\im+?VS>11WQX4>UM+@m2"X4?#)PAj-Yd1LrF&4s1t12`*?F4q0V1A2lS5+<Wd*1c70T%6QFW3+4un+?VS>2)mc/4>UM-@QknW4?#)SA3LGb1LsoM4s1t12`*I*4q0V1A77;Y+<Wd*1cR6S%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>UMV3''JH-4?#)V3''Id61LsoS4s1t12`*L&4q0V1A78t3+<Wd*1cT)2%6QFW@Q6Oo+?VS>3Fk;_4>UMZ1-Qg''4?#*-1Hl711Lt&V4s1t12`,&S4q0V1A7[bb+<Wd*1h:,\%6QFWARRbF+?VS>A7e"74>UMZ@QknW4?#*.0g6%/1Lt'',4s1t12`,)''4q0V1A7deb+<Wd*1hJU/%6QFX0Od3g+?VS?0P*EW4>UP&@m2"X4?#,P0Koq.1M&7N4s1t12`3<F4q0V1AMGr(+<Wd*2)/Q(%6QFX0fV?>+?VS?1,M0(4>UP''@QknW4?#,Q@6P,_1M&:N4s1t12`3@%4q0V1AMI^Z+<Wd*2)@''Q%6QFX0kENk+?VS?1H%E+4>UP''Aj.=[4?#,R3Bdm71M&<s4s1t12`3C''4q0V1AMR^Y+<Wd*2)Ji-%6QFX1c%<<+?VS?2`!W,4>UP*1d3$)4?#,V2*MI31M&C#4s1t12`3NQ4q0V1AMlA0+<Wd*2*!?S%6QFX2)d]A+?VS?3AWi.4>UP+3''JH-4?#,X2*MI31M&F(4s1t12`3TT4q0V1AMms]+<Wd*2*#53%6QFX2.Sln+?VS?@5:"U4>UP,1Hlp(4?#-+A3LGb1M&IR4s1t12`5)''4q0V1AN)A.+<Wd*2.SL,%6QFX2`!W?+?VS?A2c[]4>UP-1d3$)4?#-.@6P,_1M&LR4s1t12`5/(4q0V1AN+''^+<Wd*2.\d3%6QFX3+4un+?VS@0Jks&4>UP/2*N-*4?#/Q2EhR41M&R)4s1t12`<C!4q0V1AN;b7+<Wd*2DR''P%6QFX3FP)o+?VS@1,qH,4>UP/@QknW4?#/R@m1>a1M''uO4s1t12`<I&4q0V1ARRG[+<Wd*2Dd-P%6QFX@5pFn+?VS@1cRZ.4>UPX0g6^&4?#/U2*MI31M(#N4s1t12`<NP4q0V1AR[P]+<Wd*2Do#/%6QFX@Q?Up+?VS@2E!`.4>UPX@6PeV4?#/V3''Id61M($)4s1t12`<R&4q0V1ARdV^+<Wd*2E3KV%6QFX@lHRo+?VS@3&Nl/4>UPYANh4Z4?#/Y1-Q.01M(,V4s1t12`>,$4q0V1AS#=7+<Wd*2I\[1%6QFXAi)[o+?VS@@lHR\4>UP\2*N-*4?#0.3Bdm71M(/X4s1t12`>2&4q0V1AS*qd+<Wd*2In[/%6QFXAn=.K+?VS@AM?:W4>UP\Aj.=[4?#001-Q.01M/<p4s1t12`>5*4q0V1AhZ/-+<Wd*2J+X,%6QFY0K;6=+?VS@AhuU[4>US''ANh4Z4?#01A3LGb1M/@!4s1t12`EF!4q0V1Ahc2-+<Wd*2_\`*%6QFY1,_<=+?VSA1,1s%4>US)@6PeV4?#2S2a.[51M/CR4s1t12`EL''4q0V1Ahu8-+<Wd*2`!HX%6QFY1Gq?=+?VSA1L`NW4>US*3BeQ.4?#2U1-Q.01M/Ku4s1t12`EWO4q0V1Ai2;,+<Wd*2`<TY%6QFY2`NuD+?VSA@50qT4>US.@QknW4?#3-2EhR41M/RU4s1t12`G/)4q0V1AiF6a+<Wd*2dp/Z%6QFY3&3Z?+?VSA@Pg7X4>US/3''JH-4?#3.ANgPc1M1&Q4s1t12`G;)4q0V1AmmS]+<Wd*2e=m2%6QFY@5g@m+?VSAAN2j_4>USX3''JH-4?#31@6P,_1M1'',4s1t12`G>-4q0V1An#=8+<Wd*3&*3Q%6QFY@V.eH+?VSB0f;-(4>USZ0KpU%4?#5S3Bdm71M1,O4s1t12`NO$4q0V1An*S[+<Wd*3&+u.%6QFY@l?Ln+?VSB1,M0(4>USZ2a/?,4?#5T3''Id61M1/P4s1t12`NU(4q0V1An3Y\+<Wd*3&>/1%6QFYA2QOn+?VSB1c.B*ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1M1/U4s1t12`NWP4q0V1An5@7+<Wd*3&G/0%6QFYA7IeG+?VSB1hJo\4>US[A3M+Y4?#5W0g6%/1M1304s1t12`N]U4q0V20JG=I+<Wd*3&il]%6QI$0KD<>+?VSB3ANc-4>\`GA3M+Y4?#5[3Bdm71b^X<4s1t12`P5"4q0V20JP:G+<Wd*3+4R+%6QI$0etp8+?VSB@5L.W4>\`H1Hlp(4?#6.2EhR41b^X@4s1t12`P5*4q0V20JR*%+<Wd*3+?>\%6QI$0kENk+?VSB@UqY34>\`K1Hlp(4?#631Hl711b^gr4s1t12`WWN4q0V20K2!U+<Wd*3AY20%6QI$2dnlm+?VSC1M/f[4>\`NAj.=[4?#8W2a.[51b^n"4s1t12`WcN4q0V20KCgN+<Wd*3ArcZ%6QI$3AiuC+?VSC2J#&]4>\`PA3M+Y4?#8Z3Bdm71b`Ds4s1t12`Y;Y4q0V20Om")+<Wd*3FXa-%6QI$@q.\F+?VSC@UhS24>\a%A3M+Y4?#90Aj-Yd1b`EN4s1t12`YA''4q0V20Out''+<Wd*3FcJ]%6QI$A2HIm+?VSC@q.\34>\a''2*N-*4?#932*MI31b`K!4s1t12`YG/4q0V20P*1,+<Wd*3FuV_%6QI$AN2jr+?VSCARdn54>\a''3BeQ.4?#93ANgPc1b`Mt4s1t12`YJ[4q0V20P34,+<Wd*@5''E"%6QI$An4(J+?VSk0Om9U4>\cH@6PeV4?$\''Aj-Yd1bg^F4s1t12dnKt4q0V20em3&+<Wd*@5Bl,%6QI%0kENk+?VSk1LWHV4>\cIAj.=[4?$\)ANgPc1bgg@4s1t12dnUQ4q0V20f1jR+<Wd*@5g&-%6QI%1h8cm+?VSk3&3Z,4>\cLANh4Z4?$\.2*MI31bgh!4s1t12dn[)4q0V20f<H)+<Wd*@6%m_%6QI%2DIB<+?VSk@5g@Z4>\cN1-Qg''4?$\W@Qk5`1bgpG4s1t12dp2S4q0V20fLsR+<Wd*@:M;]%6QI%3&j)E+?VSkAMcR[4>\cPANh4Z4?$\[ANgPc1bh!N4s1t12dp<04q0V20f`c.+<Wd*@PBZ''%6QI%3FtAs+?VSl0K20)4>\cQAj.=[4?$_''3Bdm71biDp4s1t12e"Kq4q0V20k!(++<Wd*@PM:T%6QI%@:MJD+?VSl0kNTY4>\d%0KpU%4?$_)2a.[51biGo4s1t12e"O&4q0V20k)n%+<Wd*@PVIX%6QI%@Pp=l+?VSl1GV-''4>\d%@6PeV4?$_*3Bdm71biHK4s1t12e"RP4q0V20k+WV+<Wd*@P_OY%6QI%@l$:k+?VSl1cRZ.4>\d&1d3$)4?$_+@6P,_1biK!4s1t12e"X#4q0V20k31,+<Wd*@Pp#,%6QI%@lZ^q+?VSl2)d].4>\d&@6PeV4?$_,3Bdm71biKL4s1t12e"XS4q0V20k4cY+<Wd*@Q#r)%6QI%A7RkH+?VSl2`<i/4>\d''ANh4Z4?$_.3''Id61biNQ4s1t12e"^S4q0V20kE+(+<Wd*@Q.m_%6QI%ARdnH+?VSl3+G,]4>\d)1-Qg''4?$_02EhR41bpar4s1t12e$8S4q0V21,*<(+<Wd*@UhA]%6QI&0ebd6+?VSl@pqP14>\fJ2*N-*4?$_[1-Q.01bpgH4s1t12e$AS4q0V21,CXK+<Wd*@V0.7%6QI&1GV-:+?VSlAnF494>\fL@m2"X4?$b(ANgPc1bpmr4s1t12e+Ts4q0V21,NH(+<Wd*@kof''%6QI&2D@<;+?VSm1bq6(4>\fQ0KpU%4?$b.@Qk5`1bq$F4s1t12e+aV4q0V21-&r1+<Wd*@lZG2%6QI&@5U4k+?VSm@5C(V4>\g&@QknW4?$b[2EhR]DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f11F`W+<Wd*@q.M_%6QI&@UqYF+?VSm@q%V24>\g''2*N-*4?$b\3''Id61brSu4s1t12e-GS4q0V211W7++<Wd*@qIM\%6QI&A2ZUo+?VSmAi2a]4>\g(2a/?,4?$b^2a.[51brT$4s1t12e-H.4q0V211XiX+<Wd*@qK=:%6QI&A7IeG+?VSn0JPa#4>\g(A3M+Y4?$e)1Hl711brTQ4s1t12e4UP4q0V211`7*+<Wd*A2,u+%6QI&AMcRn+?VSn0fV?+4>\g*2a/?,4?$e,@Qk5`1brZO4s1t12e4a"4q0V211juZ+<Wd*A2H)+%6QI&An+"I+?VSn1c7H+4>\iJ1d3$)4?$e-Aj-Yd1c$jE4s1t12e4g*4q0V21GUXJ+<Wd*A2cJ3%6QI''1,qH?+?VSn3&3Z,4>\iL@QknW4?$e12a.[51c$pt4s1t12e4pZ4q0V21Gh!R+<Wd*A79(6%6QI''1grQj+?VSn@UhS24>\iO3''JH-4?$e]1Hl711c%"#4s1t12e6H24q0V21Grc.+<Wd*A7[M[%6QI''2DRH=+?VSnAN)d^4>\iP2a/?,4?$e_0Koq.1c%$L4s1t12e6MV4q0V21H%6W+<Wd*A7d\_%6QI''2Ieon+?VSnAmmk44>\iR2Ei6+4?$h+@m1>a1c%-G4s1t12e=aS4q0V21H@6T+<Wd*AMZ,+%6QI''3A`oB+?VSo1H7Q-4>\iS2*N-*4?$h-@6P,_1c%-M4s1t12e=dT4q0V21LW1*+<Wd*AMl8-%6QI''@Q-In+?VSo2Ieo[4>\j(3BeQ.4?$h23Bdm71c&WM4s1t12e=sX4q0V21LjlX+<Wd*AN46b%6QI''@qInI+?VSo3Aiu04>\j)0KpU%4?$h32a.[51c&Z"4s1t12e?E/4q0V21LrC-+<Wd*AR[J[%6QI''A2ugr+?VSoA2ZU\4>\j)@6PeV4?$h_1d2@21c&ZO4s1t12e?Q14q0V21LsuZ+<Wd*AS*qd%6QI''A7RkH+?VSp0O[-S4>\j)ANh4Z4?$k,0Koq.1c&ZS4s1t12eFdU4q0V21M&7(+<Wd*AhuA0%6QI''AMH@k+?VSp1H@W.4>\j*3BeQ.4?$k/1Hl711c&_t4s1t12eFmW4q0V21M/@*+<Wd*Ai+*`%6QI''Ai)[o+?VSp2)[W-4>\j+2*N-*4?$k03Bdm71c&`P4s1t12eFs%4q0V21b^^L+<Wd*Ai=6b%6QI(0Jks9+?VSp2`!W,4>\lK2a/?,4?$k23''Id61c-pA4s1t12eG$.4q0V21bgaL+<Wd*AiMe7%6QI(0f)!9+?VSp3+>&\4>\lL1d3$)4?$k3A3LGb1c-sB4s1t12eHJP4q0V21bpmO+<Wd*AmmS]%6QI(1,V6<+?VSp@5pF[4>\lM@QknW4?$k]0g6%/1c.!E4s1t12eHN14q0V21c$sP+<Wd*An*MY%6QI(1LiTk+?VSp@q%V24>\lNA3M+Y4?$k^A3LGb1c.$D4s1t12eHSV4q0V21c7''Q+<Wd*An>R<%6QI(2)IK>+?VSpAhlOZ4>\lP@6PeV4?$ka@6P,_1c.($4s1t13&!$A4q0V21c@3T+<Wd+0JP:G%6QI(2E!`A+?VV;0f)!&4>\lQ@m2"X4?,#M0g6%/1c.+&4s1t13&!*s4q0V21cI*P+<Wd+0J[0&%6QI(2`!W?+?VV;1GV-''4>\lR1d3$)4?,#N1d2@21c.-M4s1t13&!-u4q0V21cIBX+<Wd+0Jd9(%6QI(3&EfA+?VV;2)@E*4>\lS2*N-*4?,#P2*MI31c.0M4s1t13&!3K4q0V21cREX+<Wd+0JtjS%6QI(3B98G+?VV;2`*]-4>\lT@6PeV4?,#R3''Id61c/Vp4s1t13&!<O4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI(@50qg+?VV;3+4u[4>\m''@6PeV4?,#T2a.[51c/WM4s1t13&!?Q4q0V21gslX+<Wd+0KE].%6QI(@:VPE+?VV;@5C(V4>\m(0g6^&4?,$''@m1>a1c/Ys4s1t13&"eq4q0V21h&7)+<Wd+0Och%%6QI(@Q6Oo+?VV;@U_M14>\m(3BeQ.4?,$)2*MI31c/]#4s1t13&"l&4q0V21h0uY+<Wd+0P*.+%6QI(@q.\F+?VV;AS"%74>\m)A3M+Y4?,$,2*MI31c/]R4s1t13&"r''4q0V21h1,]+<Wd+0P3=/%6QI(A2$1i+?VV;An!q54>\m*@QknW4?,&M2*MI31c/`Q4s1t13&*-H4q0V21h:,\+<Wd+0ek[P%6QI(AS++K+?VV<1GD!%4>\m,1Hlp(4?,&O2a.[51c/fV4s1t13&*6K4q0V22)$^J+<Wd+0f1mS%6QI)0JPa6+?VV<1h8cZ4>\oL1-Qg''4?,&PAj-Yd1c6sC4s1t13&*9G4q0V22)&T*+<Wd+0fD!T%6QI)0P3Kk+?VV<2IScY4>\oM0KpU%4?,&R@m1>a1c7!B4s1t13&*=''4q0V22).$R+<Wd+0fUmO%6QI)0k<Hj+?VV<3&s/34>\oN1-Qg''4?,&U0Koq.1c7$K4s1t13&*ER4q0V22)?pM+<Wd+0k!")%6QI)1M/fn+?VV<@UhS24>\oP1d3$)4?,''*@Qk5`1c7*I4s1t13&+oS4q0V22)Jl.+<Wd+0k<:.%6QI)2)mcB+?VV<AN;p`4>\oQ3BeQ.4?,'',@Qk5`1c70J4s1t13&,#U4q0V22)[<U+<Wd+0kP#]%6QI)2E!`A+?VV=0Jbm%4>\oR2a/?,4?,)M@Qk5`1c71"4s1t13&33C4q0V22)\o-+<Wd+1,1RK%6QI)2_mQ>+?VV=0k<HW4>\oS1Hlp(4?,)O0Koq.1c73O4s1t13&36L4q0V22)dNZ+<Wd+1,<E)%6QI)2dnlm+?VV=1GV-''4>\oS@QknW4?,)P@6P,_1c76M4s1t13&3<M4q0V22)mKX+<Wd+1,NE''%6QI)3FP)o+?VV=2DmZ-4>\oU@QknW4?,)S2a.[51c8\s4s1t13&3EP4q0V22.8F-+<Wd+1,q''R%6QI)@:DDC+?VV=3&s/34>\p(@m2"X4?,)U@m1>a1c8]P4s1t13&3KJ4q0V22.AC++<Wd+1-&o0%6QI)@Pp=l+?VV=@5''kS4>\p)3''JH-4?,*)2a.[51c8`&4s1t13&4qu4q0V22.C&Z+<Wd+11FZU%6QI)@UqYF+?VV=@UhS24>\p*1d3$)4?,*+3Bdm71c8c#4s1t13&5"u4q0V22.JO.+<Wd+11W:,%6QI)@lZ^q+?VV=A7Rk54>\p*@6PeV4?,*-1-Q.01c8eu4s1t13&5)"4q0V22.SU/+<Wd+11iL0%6QI)A2c[p+?VV=Ammk44>\p+Aj.=[4?,,NA3LGb1c8hu4s1t13&<9C4q0V22.\R-+<Wd+1GLdO%6QI)AhlOm+?VV>11`WY4>\p-1Hlp(4?,,Q0Koq.1c8l%4s1t13&<?G4q0V22.e^0+<Wd+1G^sR%6QI)Ai;gq+?VV>1L`NW4>\p-ANh4Z4?,,R3''Id61c8lW4s1t13&<C"4q0V22D?sO+<Wd+1GpsP%6QI*0O[-f+?VV>2.Sl[4>\rM@QknW4?,,T1-Q.01c@*I4s1t13&<QR4q0V22DR9V+<Wd+1HAu0%6QI*11<?h+?VV>3G(Ga4>\rO@QknW4?,-*0g6%/1c@-H4s1t13&>#$4q0V22D[3S+<Wd+1LafW%6QI*1L`Nj+?VV>@l?L[4>\rPANh4Z4?,-,@Qk5`1c@0J4s1t13&>)&4q0V22Dd<U+<Wd+1LrF.%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>\rQ@6PeV4?,--ANgPc1c@6G4s1t13&E<E4q0V22E!9R+<Wd+1b^dN%6QI*2DdT?+?VV?0ebd#4>\rV3''JH-4?,/T3''Id61c@@)4s1t13&ENK4q0V22E>>4+<Wd+1c@3T%6QI*@50qg+?VV?2IScY4>\s)1-Qg''4?,/UANgPc1cAbu4s1t13&EQJ4q0V22ISF++<Wd+1cI0R%6QI*@5U4k+?VV?2`*]-4>\s)2Ei6+4?,/V3Bdm71cAeu4s1t13&EU''4q0V22I\I++<Wd+1cT#0%6QI*@UVGC+?VV?3B0234>\s,0KpU%4?,0,1Hl711cAl$4s1t13&G)R4q0V22In[/+<Wd+1h(#[%6QI*A7IeG+?VV?@q.\34>\s,Aj.=[4?,0.1-Q.01cAo)4s1t13&G/W4q0V22J$>]+<Wd+1hAL-%6QI*AhcIl+?VV?ARmt64>\s.A3M+Y4?,00ANgPc1cI+"4s1t13&NEG4q0V22_d3S+<Wd+2)6jL%6QI+0fM9=+?VV@1,;$&4>\uP@6PeV4?,2T1-Q.01cI1#4s1t13&NNO4q0V22`!9S+<Wd+2)R3S%6QI+1Gq?=+?VV@2)d].4>\uQA3M+Y4?,2V1Hl711cI6M4s1t13&NWN4q0V22`+r,+<Wd+2)dKY%6QI+2)7?<+?VV@3&Wr04>\uS1Hlp(4?,2X3Bdm71cI9K4s1t13&N[)4q0V22`3NX+<Wd+2*!?S%6QI+2E!`A+?VV@@5U4X4>\uT2a/?,4?,3,2a.[51cI?J4s1t13&P/)4q0V22`NWX+<Wd+2.SO-%6QI+3Fk;r+?VV@Ai2a]4>]!,0KpU%4?,5S3''Id61cJoU4s1t13&WQQ4q0V22e-G`+<Wd+2D\f+%6QI+AMlXo+?VVA2.A`Y4>]!.2Ei6+4?,5VA3LGb1cK##4s1t13&W[*4q0V23&!$M+<Wd+2E3]\%6QI,0K)*;+?VVA3A`o/4>]#P1d3$)4?,6-@Qk5`1cR6I4s1t13&Y8(4q0V23&3?T+<Wd+2Ie^1%6QI,11WQk+?VVAA77Y24>]#R@QknW4?,61Aj-Yd1cR<I4s1t13&YA\4q0V23&EET+<Wd+2_ZsM%6QI,1h/]l+?VVB0f2''''4>]#SA3M+Y4?,8S2EhR41cR=''4s1t13&`QP4q0V23&G52+<Wd+2_ec*%6QI,2)%3:+?VVB0k<HW4>]#T1Hlp(4?,8T1d2@21cRC*4s1t13&`[)4q0V23&`ZX+<Wd+2`3EU%6QI,2`3cA+?VVB2)[W-4>]#V2Ei6+4?,8W3''Id61cRHQ4s1t13&`a-4q0V23&k>1+<Wd+2`ETX%6QI,3+>&o+?VVB2`Eo04>]#X2*N-*4?,8Z@m1>a1cSoS4s1t13&b8W4q0V23+=U++<Wd+2e"U-%6QI,@Q$Cm+?VVB@UhS24>]$,@m2"X4?,902*MI31cSrT4s1t13&b>+4q0V23+?G_+<Wd+2e+j3%6QI,A2$1i+?VVBAMcR[4>]$.2*N-*4?,92@Qk5`1cT#(4s1t13&bDZ4q0V23+QSa+<Wd+2eHJ^%6QI,AMlXo+?VVC0Jks&4>]$/ANh4Z4?,;T1-Q.01cT&Y4s1t13&iWL4q0V23+b*5+<Wd+3&30O%6QI-0O[-f+?VVC1LWHV4>]&Q1d3$)4?,;W@Qk5`1c[:#4s1t13&icT4q0V23AG&.+<Wd+3&P,.%6QI-0kENk+?VVC2.JfZ4>]&R1d3$)4?,;Y@6P,_1c[<K4s1t13&ig,4q0V23ANKV+<Wd+3&YA4%6QI-1,hB>+?VVC2_dK*4>]&R@m2"X4?,;Z3''Id61c[?G4s1t13&ilO4q0V23AWBR+<Wd+3&i]X%6QI-1H%E>+?VVC3+G,]ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1c[BP4s1t13&k>&4q0V23Ab>3+<Wd+3+6;\%6QI-2E<rD+?VVCA2?CY4>]&VANh4Z4?,<2ANgPc1c[L''4s1t13&kM*4q0V23B1S6+<Wd+3AE6P%6QI-@5L.j+?VVD1GM''&4>]'',2*N-*4?,>W2*MI31c\u&4s1t13&rcR4q0V23Fb''5+<Wd+3Ar`Y%6QI-@q7bG+?VVD2I\iZ4>]''/A3M+Y4?,>\0Koq.1c])X4s1t13&rrR4q0V23Fu_b+<Wd+3B9#^%6QI-An4(J+?VVD@:DD04>^J#@6PeV4?,?1ANgPc1gr(I4s1t13&tJ)4q0V2@5)1T+<Wd+3FcS`%6QIU0f)!9+?VVDA7@_34>^J$1d3$)4?,?3A3LGb1gr+!4s1t13&tP,4q0V2@59Z''+<Wd+3G(-4%6QIU1,V6<+?VVDAiDm_4>^J&0KpU%4?-b''3Bdm71gr0p4s1t13+4LM4q0V2@5BZ&+<Wd+@5)4U%6QIU1G_3;+?VVl0P3KX4>^J&2Ei6+4?-b(1d2@21gr1!4s1t13+4O#4q0V2@5D=U+<Wd+@527U%6QIU1L`Nj+?VVl0kENX4>^J&Aj.=[4?-b)1d2@21gr4M4s1t13+4U#4q0V2@5U#.+<Wd+@5Ko,%6QIU2.\ro+?VVl1hJo\4>^J(Aj.=[4?-b,0g6%/1gr9r4s1t13+4[#4q0V2@5_X[+<Wd+@5_OX%6QIU2J#&p+?VVl2J,,^4>^J)Aj.=[4?-b.1d2@21gr=P4s1t13+4d+4q0V2@5ou*+<Wd+@6$/.%6QIU3&EfA+?VVl3B9844>^J+3''JH-4?-b0Aj-Yd1gr@(4s1t13+65N4q0V2@5q[Z+<Wd+@:;)Y%6QIU3AE]?+?VVl@PL%U4>^J,A3M+Y4?-bZ1Hl711gsfH4s1t13+6;V4q0V2@::lS+<Wd+@:N_0%6QIU@5:"h+?VVl@q.\34>^JT1Hlp(4?-bZANgPc1gsfL4s1t13+6>O4q0V2@:<V/+<Wd+@:Wn4%6QIU@:h\G+?VVlAMZLZ4>^JU0KpU%4?-b\2*MI31gsiM4s1t13+6B.4q0V2@:D/Z+<Wd+@:h8Y%6QIU@UVGC+?VVlAiW$a4>^JU@QknW4?-b]@Qk5`1gsj''4s1t13+6E04q0V2@:Eb2+<Wd+@:j+8%6QIU@V%_G+?VVm0Jbm%4>^JUAj.=[4?-e(2EhR41gslO4s1t13+=RR4q0V2@:M;]+<Wd+@PK`(%6QIU@pqPD+?VVm0fV?+4>^JV@QknW4?-e)@m1>a1gsoN4s1t13+=X%4q0V2@:hJ_+<Wd+@Pp).%6QIUAiW$t+?VVm2.A`Y4>^M&1d3$)4?-e11d2@21h&4K4s1t13+=mY4q0V2@PVCV+<Wd+@QA$a%6QIV11NKj+?VVm@:MJ14>^M&A3M+Y4?-eZ0g6%/1h&4O4s1t13+??+4q0V2@PVOZ+<Wd+@Uh>\%6QIV1GD!8+?VVmA2$1V4>^M''0g6^&4?-e]@6P,_1h&6r4s1t13+FX&4q0V2@P]f(+<Wd+@khOY%6QIV2_mQ>+?VVn3+>&\4>^M,0g6^&4?-h2Aj-Yd1h&F(4s1t13+HDP4q0V2@Q6A3+<Wd+@q%;Z%6QIV3+4un+?VVn@Q?U]4>^M,@QknW4?-h[ANgPc1h&FS4s1t13+HGV4q0V2@Q7m^+<Wd+@q.M_%6QIV3A`oB+?VVnA2HIZ4>^M-3BeQ.4?-h]@Qk5`1h&IR4s1t13+HK04q0V2@Q@m]+<Wd+@q918%6QIV3Fb5q+?VVnAMlX\4>^MV0g6^&4?-k*3Bdm71h''oL4s1t13+O^Q4q0V2@U_,W+<Wd+A2%RY%6QIV@UqYF+?VVo1,(m$4>^MW0KpU%4?-k/2a.[^DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f@Uh,V+<Wd+A2Rs_%6QIV@kp4j+?VVo2DmZ-4>^MW2Ei6+4?-k0@m1>a1h(''*4s1t13+QJY4q0V2@V0(5+<Wd+A7B"3%6QIVAn+"I+?VVo@UqY34>^P%0KpU%4?-k]2*MI31h/3s4s1t13+QN04q0V2@k]f)+<Wd+A7RAX%6QIW0P!?i+?VVoA7Ie44>^P&1d3$)4?-k_3Bdm71h/7K4s1t13+QVX4q0V2@khFV+<Wd+A7d_`%6QIW0k3Bi+?VVoAn+"64>^P''2a/?,4?-n+@Qk5`1h/=O4s1t13+XjS4q0V2@l%XZ+<Wd+AMRd[%6QIW1M&`m+?VVp1GD!%4>^P)3''JH-4?-n/1Hl711h/F"4s1t13+Y!Z4q0V2@l?/-+<Wd+AN)>-%6QIW2DmZ@+?VVp2`!W,4>^P+2Ei6+4?-n22*MI31h/FP4s1t13+Y$X4q0V2@l@j]+<Wd+AN2A-%6QIW2_dK=+?VVp3&Wr04>^P,1-Qg''4?-n33''Id61h/I#4s1t13+Y''Z4q0V2@lH5.+<Wd+AN46b%6QIW2dnlm+?VVp3FY/]4>^P,@QknW4?-n4A3LGb1h0rJ4s1t13+ZVV4q0V2@q''%6+<Wd+AS,I:%6QIW@l-@l+?VVq0Jks&4>^PX2*N-*4?-q,2EhR41h1#R4s1t13+aj(4q0V2@q0(6+<Wd+Ahc)*%6QIWARdnH+?VVq1c%<)4>^S&0KpU%4?-q1ANgPc1h89p4s1t13+b''&4q0V2A2#c&+<Wd+Ai;G/%6QIX0Jbm8+?VVq2DmZ-4>^S&1d3$)4?-q2@6P,_1h89t4s1t13+b-(4q0V2A2#o*+<Wd+AiO9a%6QIX0K20<+?VVq3ANc-4>^S&3''JH-4?-q5A3LGb1h8:O4s1t13+cSX4q0V2A2%UZ+<Wd+Amo+3%6QIX0ebd6+?VVq@:MJ14>^S''@QknW4?-q_1Hl711h8=N4s1t13+cYY4q0V2A25o(+<Wd+An,F:%6QIX1,D*:+?VVqA26=X4>^S(2Ei6+4?-q`@6P,_1h8@%4s1t13+c_X4q0V2A27RW+<Wd+An<nb%6QIX11EEi+?VVqARdn54>^S(@m2"X4?-qaAj-Yd1h8C%4s1t13A<-s4q0V2A2?50+<Wd,0JI''%%6QIX1LWHi+?VY<0f)!&4>^S)@QknW4?5)M3''Id61h8CP4s1t13A<0t4q0V2A2H;1+<Wd,0JbXO%6QIX1h/]l+?VY<1LrZY4>^S*Aj.=[4?5)P1Hl711h8I$4s1t13A<:"4q0V2A2Q8/+<Wd,0JtaP%6QIX2*!iC+?VY<2.Sl[4>^S+@6PeV4?5)QAj-Yd1h8IQ4s1t13A<?G4q0V2A2Rj\+<Wd,0K(aO%6QIX2DmZ@+?VY<2`!W,4>^S,2Ei6+4?5)S2EhR41h8L''4s1t13A<BP4q0V2A2ZD2+<Wd,0K3H)%6QIX2E<rD+?VY<2e>/^4>^S,@m2"X4?5)T3Bdm71h8O!4s1t13A<HK4q0V2A2c5,+<Wd,0KCsR%6QIX2_mQ>+?VY<3As&14>^S-1Hlp(4?5)U3''Id61h8O%4s1t13A<I%4q0V2A2cA0+<Wd,0KEW,%6QIX2e>/q+?VY<@:DD04>^S-Aj.=[4?5*(A3LGb1h8R"4s1t13A=nt4q0V2A2l;-+<Wd,0Oct)%6QIX3&j)E+?VY<@l?L[4>^S.ANh4Z4?5*+1-Q.01h8U(4s1t13A=uT4q0V2A2uP3+<Wd,0P)q%%6QIX3Fb5q+?VY<ARdn54>^S/A3M+Y4?5*,ANgPc1h:$(4s1t13AE3D4q0V2A78t3+<Wd,0ebIK%6QIX@Q-In+?VY=0f)!&4>^SX3''JH-4?5,N2*MI31h:*)4s1t13AE:#4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QIX@q%VE+?VY=1G_3(4>^SY@m2"X4?5,P2*MI31h:,W4s1t13AE?L4q0V2A7T+4+<Wd,0f:[L%6QIXAN2jr+?VY=2I\iZ4>^S[3BeQ.4?5,SA3LGb1h:0+4s1t13AEHK4q0V2A7dV]+<Wd,0fV''T%6QIXAi)[o+?VY=3&j)24>^S\2*N-*4?5,U@6P,_1hAC"4s1t13AG#!4q0V2AMH,-+<Wd,0k3%(%6QIY0fV?>+?VY=@l?L[4>^V(3BeQ.4?5-+3''Id61hACM4s1t13AG%u4q0V2AMIXX+<Wd,0k<1+%6QIY1,V6<+?VY=AN2j_4>^V*0g6^&4?5-.2EhR41hAHu4s1t13AG,*4q0V2AMc))+<Wd,1,*<(%6QIY1hJoo+?VY>1,M0(4>^V,2Ei6+4?5/PAj-Yd1hART4s1t13ANHM4q0V2AN2P2+<Wd,1,h3W%6QIY3+>&o+?VY>3&Ef.4>^V02Ei6+4?5/W1-Q.01hA[-4s1t13ANTR4q0V2AN=0_+<Wd,1-%?Y%6QIY3FY/p+?VY>3FY/]4>^VX0g6^&4?50*1d2@21hC)N4s1t13AP#%4q0V2ARRAY+<Wd,11=]W%6QIY@:DDC+?VY>@Q6O\4>^VX@m2"X4?50+@6P,_1hC,N4s1t13AP)"4q0V2AR[DY+<Wd,11N.)%6QIY@P^1j+?VY>@l?L[4>^VZ2*N-*4?50-ANgPc1hC/W4s1t13AP/)4q0V2ARf.4+<Wd,11`I0%6QIYA2-7j+?VY>AiDm_4>^V\1d3$)4?52P0g6%/1hC6.4s1t13AWEF4q0V2AS*V[+<Wd,1GUmQ%6QIYAiW$t+?VY?1H.K,4>^V]Aj.=[4?52RAj-Yd1hJEq4s1t13AWKI4q0V2AhZ,,+<Wd,1GiT*%6QIZ0k<Hj+?VY?2I\iZ4>^Y*ANh4Z4?52W1Hl711hJOS4s1t13AWZS4q0V2Ai)M3+<Wd,1LW7,%6QIZ1grQj+?VY?@:DD04>^Y,@QknW4?53+A3LGb1hJRS4s1t13AY)U4q0V2Ai+*`+<Wd,1L`1)%6QIZ2.\ro+?VY?@lZ^^4>^Y-Aj.=[4?53-@Qk5`1hJXS4s1t13AY5#4q0V2Ai=*^+<Wd,1M&@+%6QIZ2e"rn+?VY?Ai;g^4>^Y/@m2"X4?5303''Id61hJa&4s1t13A`HF4q0V2AmmV^+<Wd,1c$sP%6QIZ@:;>B+?VY@1H@W.4>^YZ2a/?,4?55T@Qk5`1hL3-4s1t13A`TL4q0V2An,:6+<Wd,1c@0S%6QIZA2-7j+?VY@2Ieo[4>^Y\1d3$)4?55W0g6%/1hL8Y4s1t13A`ZS4q0V2An<\\+<Wd,1c[9S%6QIZAMQFl+?VY@3As&14>^Y]1Hlp(4?55Y3''Id61hL;U4s1t13Ab5)4q0V2An<h`+<Wd,1h1,]%6QIZAN2jr+?VY@A77Y24>^Y]3BeQ.4?5602EhR41hL<-4s1t13Ab>W4q0V2An>F8+<Wd,2)/T)%6QIZARdnH+?VYA1,(m$4>^Y]A3M+Y4?58S2a.[51hL<14s1t13AiTK4q0V2An>R<+<Wd,2)Ac,%6QIZAhZCk+?VYA1c%<)4>^Y^0g6^&4?58U3''Id61hL>T4s1t13AiX&4q0V2AnEh_+<Wd,2)R6T%6QIZAi)[o+?VYA2.8ZX4>^Y^2*N-*4?58W0Koq.1hL>X4s1t13Ai^+4q0V30JG1E+<Wd,2)m<S%6QL%0Ju$:+?VYA3+4u[4>efH2Ei6+4?58YA3LGb2)$^C4s1t13AifN4q0V30JGIM+<Wd,2*!EU%6QL%0f2'':+?VYA@5:"U4>efI2a/?,4?59-@6P,_2)$d?4s1t13Ak8S4q0V30JYRN+<Wd,2.JR/%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>efJ3''JH-4?59/3Bdm72)$gC4s1t13Ak>X4q0V30Jd0%+<Wd,2.^8]%6QL%1LiTk+?VYAAnF494>efKA3M+Y4?5;R2a.[52)$gt4s1t13ArTJ4q0V30Jd<)+<Wd,2DI0T%6QL%1b_*9+?VYB0k*<U4>efL0g6^&4?5;SANgPc2)$jB4s1t13ArWH4q0V30JtXM+<Wd,2D\o.%6QL%2)IK>+?VYB1bh0''4>efM2*N-*4?5;V1Hl712)$mG4s1t13Ar^&4q0V30K(UK+<Wd,2Dnu.%6QL%2DIB<+?VYB2.\r\4>efN1-Qg''4?5;X0Koq.2)$pG4s1t13Ard)4q0V30K(pT+<Wd,2E*?S%6QL%2`3cA+?VYB3&a#14>efO2Ei6+4?5;Z3Bdm72)$sJ4s1t13Arj,4q0V30K3H)+<Wd,2E<ZZ%6QL%2e,#o+?VYB3FP)\4>efP2a/?,4?5<.3Bdm72)%"#4s1t13At>%4q0V30K<W-+<Wd,2I\O-%6QL%3+b>s+?VYB@Q-I[4>efQ0KpU%4?5</@6P,_2)%$F4s1t13At>Y4q0V30KCsR+<Wd,2Ie^1%6QL%3Fk;r+?VYBA77Y24>eg$0g6^&4?5<20g6%/2)&HM4s1t13AtJ/4q0V30O\QW+<Wd,2J-A]%6QL%@PU+i+?VYBAnF494>eg%2*N-*4?5>S2*MI32)&Mr4s1t13B&[''4q0V30Ouq&+<Wd,2`!0P%6QL%A7[qI+?VYC1c%<)4>eg)0g6^&4?5>XAj-Yd2)&WS4s1t13B&lS4q0V30ekFI+<Wd,2`P;2%6QL&0f)!9+?VYC3+Y8_4>eiJ1d3$)4?5>\0Koq.2)-gC4s1t13B&rS4q0V30et^P+<Wd,2dp2[%6QL&1-%N@+?VYC@:_V34>eiK@m2"X4?5?01Hl712)-mu4s1t13B(GV4q0V30f3B(+<Wd,2e6G_%6QL&2)IK>+?VYCAN2j_4>eiN@6PeV4?5?41d2@22).!F4s1t13B/]H4q0V30fCjP+<Wd,3&!0Q%6QL&2DmZ@+?VYD0KD<+4>eiO2Ei6+4?5AT@Qk5`2).!J4s1t13B/^''4q0V30fLpQ+<Wd,3&3?T%6QL&3&NlB+?VYD1LiTX4>eiR@6PeV4?5AY@6P,_2)/Mp4s1t13B/oT4q0V30k!%*+<Wd,3&`TV%6QL&@6$Lo+?VYD3+>&\4>ej%@6PeV4?5A\ANgPc2)/NK4s1t13B0#S4q0V30k"QU+<Wd,3&ri[%6QL&@:VPE+?VYD3B9844>ej%ANh4Z4?5B01Hl712)/Ps4s1t13B1J%4q0V30k*"(+<Wd,3+=X,%6QL&@l-@l+?VYD@l6FZ4>ej''2*N-*4?5B22a.[52)/TO4s1t13B1P+4q0V30k<%''+<Wd,3+Xg.%6QL&A2c[p+?VYDARdn54>ej(3''JH-4?5B4ANgPc2)/WN4s1t13B1V,4q0V30kE:-+<Wd,3A<9R%6QL&AR[hG+?VYE0Od3T4>elJANh4Z4?5DXA3LGb2)6mA4s1t13B8oQ4q0V31,1dQ+<Wd,3AiTV%6QL''0k!6g+?VYE2)[W-4>elKAj.=[4?5DZA3LGb2)6pC4s1t13B8uS4q0V31,:[M+<Wd,3ArcZ%6QL''1,V6<+?VYE2`!W,4>elL3''JH-4?5D\@Qk5`2)6pI4s1t13B9$04q0V31,<?''+<Wd,3B0#_%6QL''11WQk+?VYE3+G,]4>elLANh4Z4?5D]ANgPc2)7!C4s1t13B:P(4q0V31,WQ*+<Wd,3Fjp0%6QL''2.f#p+?VYEA77Y24>elP0KpU%4?5E4@m1>a2)7''E4s1t13B:V]4q0V31,^mO+<Wd,3Fsm.%6QL''2e5)p+?VYm0JG["ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>2)8Sp4s1t13FO[Q4q0V311;q%+<Wd,@5;FY%6QL''@:VPE+?VYm1M/f[4>em''1d3$)4?6h,ANgPc2)8WL4s1t13FOd''4q0V311N(''+<Wd,@5]o*%6QL''@lHRo+?VYm2I\iZ4>em(3''JH-4?6h/1-Q.02)8Z%4s1t13FOm''4q0V311O`V+<Wd,@5p82%6QL''@qInI+?VYm3B9844>em)0KpU%4?6hY2EhR42)8]O4s1t13FQAW4q0V311XlY+<Wd,@:E\0%6QL''AN;ps+?VYmA2$1V4>em*@6PeV4?6h\2a.[52)8bu4s1t13FQJQ4q0V311jrY+<Wd,@:`q4%6QL(0Jks9+?VYmAmmk44>eoKANh4Z4?6k)2a.[52)?sC4s1t13FX[R4q0V31GUaM+<Wd,@PTc(%6QL(1,M0;+?VYn1,_<*4>eoM2*N-*4?6k+3''Id62)@!r4s1t13FXcu4q0V31G^sR+<Wd,@Pfu,%6QL(1L`Nj+?VYn2)%3''4>eoO0g6^&4?6k.3Bdm72)@-J4s1t13FXs''4q0V31H.!O+<Wd,@Q7s`%6QL(3&NlB+?VYn@:MJ14>eoT@m2"X4?6k\3''Id62)AZ!4s1t13FZMV4q0V31LX`V+<Wd,@Urt4%6QL(@:h\G+?VYnAMZLZ4>ep(1-Qg''4?6k^3Bdm72)A_t4s1t13FZT34q0V31Lr1''+<Wd,@kf]%%6QL(A7e"J+?VYo1,M0(4>ep+3''JH-4?6n-1d2@22)Af(4s1t13Faj''4q0V31M''uY+<Wd,@l$).%6QL(AR[hG+?VYo1LWHV4>ep,ANh4Z4?6n/1Hl712)AiV4s1t13Fap(4q0V31b^aM+<Wd,@l7g]%6QL)0k*<h+?VYo2`X&24>erM@m2"X4?6n1@Qk5`2)I%"4s1t13Fb$&4q0V31bpmO+<Wd,@lRs^%6QL)1,V6<+?VYo3+b>`4>erN2Ei6+4?6n31Hl712)I''t4s1t13Fb''[4q0V31brQ)+<Wd,@pre0%6QL)11WQk+?VYo@:MJ14>erNANh4Z4?6n[Aj-Yd2)I(#4s1t13FcMY4q0V31c/W)+<Wd,@qIS^%6QL)2.8Zk+?VYp0K;6*4>erR@QknW4?6q,@m1>a2)I4$4s1t13FjjU4q0V31cI0R+<Wd,A26)-%6QL)@5pFn+?VYp2I\iZ4>es*0g6^&4?6q33''Id62)JfT4s1t13Fk-14q0V31hC8_+<Wd,A7I>X%6QL)AhZCk+?VYp@l$:X4>es-Aj.=[4?6q_1d2@22)R''C4s1t13FlY[4q0V32)@3U+<Wd,AMI[Y%6QL*1H@WA+?VYq1,M0(4>euP@6PeV4?6t.2a.[52)R1!4s1t13FssW4q0V32)A`++<Wd,AMZ#(%6QL*1LrZl+?VYq1Gh9)4>euQ0KpU%4?6t00Koq.2)R3F4s1t13Ft$X4q0V32)I''P+<Wd,AMl/*%6QL*1c@N?+?VYq2)[W-4>euQ2a/?,4?6t13Bdm72)R3M4s1t13Ft''Y4q0V32)Ji-+<Wd,AMuD0%6QL*2)%3:+?VYq2_mQ+4>euR0g6^&4?6t31d2@22)R6K4s1t13Ft-Y4q0V32)\r.+<Wd,AN=<c%6QL*3&*T>+?VYq@UhS24>euUA3M+Y4?6t`0Koq.2)RBO4s1t13FubV4q0V32*!W[+<Wd,AS!b`%6QL*3G(Gt+?VYqAhuU[4>f!)1-Qg''4?6tb3''Id62)Seu4s1t13Fuf24q0V32.:#Z+<Wd,Ah[XW%6QL*@:_VF+?VYr0Om9U4>f!)Aj.=[4?7"-Aj-Yd2)Shu4s1t13G(!&4q0V32.A@*+<Wd,Ahc2-%6QL*@Pg7k+?VYr0fV?+4>f!*@QknW4?7"/0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,g2.L2]+<Wd,AhuD1%6QL*@qInI+?VYr1LWHV4>f!,0KpU%4?7"0@m1>a2)SoU4s1t13G(-)4q0V32.\^1+<Wd,Ai;D.%6QL*ARmtI+?VYr2I\iZ4>f#NAj.=[4D$T/@m1>a2)[0F4s1t1AmmDK4q0V32DI*R+<WdY@50`*%6QL+0kNTl+?VDj3&*T+4>f#P0KpU%4CgE.0P"ZQ2a.[52)[3E4s1t1A2lD"A7ISZ4q0V32DR$O+<WdW3&E="@q0"4%6QL+1,D*:+?VDj3&Ef.4>f#P1d3$)4>SfQ1Hl712)[3I4s1t11GgpI4q0V32DR0S+<Wd%AN2Y5%6QL+1,hB>+?VDj3+>&\4>f#P3''JH-4?7"_1d2@22)[3M4s1t11Gq1(4q0V32DS])+<Wd&2DJW(%6QL+11EEi+?VG<0P*EW4>f#P@m2"X4>LJ-@m1>a2)[4#4s1t111`I)4q0V32DSi-+<Wd&3AtG4%6QL+11i]m+?VG?0fV?+4>f#Q0KpU%4?7"_2*MI32)[6F4s1t11HArW4q0V32D[*P+<Wd&3Fl_c%6QL+1G_3;+?VGg2`!W,4>f#Q1d3$)4>T!.0Koq.2)[6L4s1t11L`1P4q0V32D[<V+<Wd&@l@m^%6QL+1H@WA+?VGiAM?:W4>f#Q@6PeV4>LJV2a.[52)[7"4s1t1A2lD''A7T404q0V32D\i,+<Wd,An!_`%6QL+1LrZl+?VDj@:;>/4>f#QANh4Z4>\`L2EhR42)[7&4s1t11bgk"4q0V32Dd*O+<Wd%ART.6%6QL+1bh0:+?VJ:1H.K,4>f#R1-Qg''4>LJW1Hl712)[9K4s1t1A2lDSA7RZ34q0V32Dd<U+<Wd''1L`(&%6QL+1cIT@+?VJ:@:MJ14>f#R3''JH-4>LJW@Qk5`2)[9O4s1t11c&ZQ4q0V32Dei++<Wd''1h8L.%6QL+1h&Wk+?VJ=2DIB)4>f#R@m2"X4>\rQ@m1>a2)[:%4s1t13G)_\4q0V32Deu/+<Wd''2_m0Q%6QL+1hJoo+?VJ>1-%N-4>f#S0KpU%4>\uU@m1>a2)[<H4s1t11cIC)4q0V32Dm6R+<Wd%ARf.4%6QL+2)@E=+?VJ@1cIT-4>f#S1d3$)4>]&W@6P,_2)[<L4s1t11c[L*4q0V32Dno,+<Wd''3B:\8%6QL+2.A`l+?VJ@3FY/]4>f#S@m2"X4>]''-2a.[52)[=&4s1t11c]#''4q0V32Do&0+<Wd,An#14%6QL+2.f#p+?X0o2)&QOAn=.84>f#T0KpU%4>^PV1Hl712)[?L4s1t11h/I''4q0V32E!EV+<Wd''@pq,V%6QL+2Inuo+?VJk@:_V34>f#TANh4Z4?7"_@Qk5`2)\rU4s1t10JI*K4q0V32Ig>_+<Wd#0OZt*%6QL+A2$1i+?VD61,;$&4>f$-0g6^&4>JTG2EhR42)d<F4s1t10JP794q0V32`!0P+<Wd#0P)t&%6QL,1GV-:+?V>4@q@h54>f&R1Hlp(4>8I#0Koq.2)d<J4s1t10JP:<4q0V32`!<T+<Wd#0P*7.%6QL,1H%E>+?V>40k*<U4>f&R2a/?,4>8I#3''Id62)d<N4s1t10JP=l4q0V32`!HX+<Wd#0P+cY%6QL,1LWHi+?V>4A2$1V4>f&R@QknW4>8I#@m1>a2)d=$4s1t10JPCp4q0V32`"u.+<Wd#0P3+)%6QL,1M&`m+?V>4A26=X4>f&RAj.=[4>8I$1-Q.02)d?G4s1t10JPIp4q0V32`*6Q+<Wd#0P4`W%6QL,1bq6;+?V>4A2HIZ4>f&S1Hlp(4>8I$3Bdm72)d?K4s1t10JR)r4q0V32`*BU+<Wd#0k<7-%6QL,1c@N?+?V>4A77Y24>f&S2a/?,4>8L#@m1>a2)d?O4s1t10JI*K4q2(@A7B.\BOPoj%5g$d@V''1dDIR3fBOPoj4>f&S3BeQ.4>8I#@6P,_2)d@#4s1t10JYL?4q0V32`+u-+<Wd$AM[p^%6QL,1h/]l+?V>41c.B*4>f&SA3M+Y4>8KH3''Id62)d@''4s1t10JR0"4q0V32`,,1+<Wd#1,^jN%6QL,2)%3:+?V>31,(m$4>f&T0g6^&4>JU!@m1>a2)dBJ4s1t10JHom4q0V32`3BT+<Wd%0O\HT%6QL,2)IK>+?V>31,M0(4>f&T2*N-*4>SZIAj-Yd2)dBN4s1t11,*-H4q0V32`3NX+<Wd&0JkLJ%6QL,2)mcB+?VG61cIT-4>f&T3BeQ.4>SZJ1Hl712)dC$4s1t11GCXp4q0V32`5&.+<Wd&0Jm6&%6QL,2.Jfm+?VG62).9(4>f&TA3M+Y4>SZK0g6%/2)dC(4s1t11GC[B4q0V32`522+<Wd&0JtXM%6QL,2D@<;+?VG61c[`/4>f&U0g6^&4>SZL1d2@22)dEK4s1t11GCXC4q0V32`<HU+<Wd&0K<W-%6QL,2DdT?+?VG63&<`-4>f&U2*N-*4>SZN2a.[52)dEO4s1t11GCdG4q0V32`<TY+<Wd&0KCsR%6QL,2E3lC+?VG6@50qT4>f&U3BeQ.4>S["2a.[52)dF%4s1t11GE5n4q0V32`>21+<Wd&0Och%%6QL,2J#&p+?VG6@P^1W4>f&UAj.=[4>S["3Bdm72)dHJ4s1t11GE;p4q0V32`EHT+<Wd&0OZh&%6QL,2_mQ>+?VG6AS"%74>f&V1Hlp(4>S[&1Hl712)dHN4s1t11GEB!4q0V32`ETX+<Wd&0P*+*%6QL,2`<iB+?VG6AiDm_4>f&V2a/?,4>S[''3Bdm72)dHR4s1t11GEE#4q0V32`E`\+<Wd&0P4`W%6QL,2dnlm+?VG6An+"64>f&X@m2"X4>LJ-0Koq.2)m9D4s1t111b&R4q0V4A2Z;/+<Wd''3B/iZ%6QR(3&<`@+?VD5@:MJ14?"uS1d3$)4>8Ht2*MI32_d9L4s1t11,*-H4q0V50fV''T+<Wd#0JYIK%6QR(3&a#D+?VG61M/f[ASu$fAn,L_EX`I40JFVYAS5^p@V0XhDJ*Mi4>8HC0g6^B0JG@r4s2sA0JY=G%6Q<u2D@<;4>8HI1-QgC1GCL:4q0V.0K*H*+?V>32J#&p4>JTF3''Id60JGCs4s2sA0K1[L+?VD50k3BV4>8HJ0g6^B0JGF@4s2sD0JPCJ%6Q<u2`!W?4>8HJ@6Per1GCLB4q0V.0K3H)+?V>32e,#o4>SZG2EhR40JGFr4s2sA0K3Q,+?VG60ebd#4>8HK1HlpD0JGIC4s2sC1,:dP%6Q<u3B98G4>8HL@6Per1,:b!4q0V.0KET++?V>33Fb5q4>JZM1d2@20JHok4s2sA0OZe%+?VD51GV-''4>8Ht3''JHI0JHoq4s2t"An<Y[%6Q<u@UVGC4>8Hu@Qkns1,1dC4q0V.0OeTW+?V>3A2-7j4>J`Q3''Id60JI#m4s2sA0P*+*+?VD92`*]-4>8I#2Ei6G0JI''M4s2sC1c@$O%6Q<uAhZCk4>8I$3BeQJ1GU^>4q0V.0P4`W+?V>3AnF4L4>JWL0Koq.0JP784s2sA0ebIK+?VD62E!`.4>8KD2Ei6G0JP7@4s2t"AhYr''%6Q=!0O[-f4>8KJ1-QgCAnE_S4q0V.0fCjP+?V>4@Q$Cm4>SZJ0g6%/0JR#q4s2sA0kP#]+?VG6@50qT4>8NE0KpUA0JY=l4s2sD0P+ZV%6Q="0P!?i4>8NFA3M+u0Jb^D4q0V.1,3?(+?V>51,M0;4>8R"1Hl710JYC@4s2sA1,CdO+?V>6@PL%U4>8NH2Ei6G0JYFo4s2sA1Li4)%6Q="1b_*94>8NI0g6^BAnEc+4q0V.1,LgO+?V>51c7H>4D&.\2*MI30JYIC4s2sA1,LpR+?X7I1H@W.4>8NI3''JHI0JYIF4s2t"AM[p^%6Q="1grQj4>8NI@QknsAn<c/4q0V.1,NK)+?V>51hJoo4D&.]0g6%/0JYL>4s2sA1,UdM+?VG60fD3)4>8NJ1-QgC0JYLA4s2t"AM[dZ%6Q="2)IK>4>8NJ2*N-FAn<bW4q0V.1,V$T+?V>52*!iC4D&.\1Hl710JYLo4s2sA1,WZ-+?V>70ebd#4>8NK0g6^B0JYUA4s2sA1bgmP%6Q="3&3Z?4>8NN@Qkns0JkRD4q0V.11F`W+?V>5AM?:j4>S]G2*MI30J[2p4s2sA11k,^+?VD:0JG["4>8QF0KpUA0JbIp4s2sC2)/Z+%6Q=#11`Wl4>8QN@Qkns0JG7:4q0V.1c/f.+?V>72)%3:4?-q]3''Id60Oc^l4s2sA@PBW&+?VP=2`Nu14>:;#3BeQJ0OunH4s2sI1,*3%%6Q@!3+Y8r4>ANLAj.>"3&EBI4q0V/0k2n$+?VA5@kg.i4?,''-1Hl710etaD4s2sB1-%*R+?VM:1M/f[4>AWH3''JHI0f(OE4s2sI@UV/Y%6Q@$0k*<h4>AWH@m2"t3+?>R4q0V/1GNH)+?VA70kNTl4?-e[1-Q.00f(R@4s2sB1GUgO+?VVmA26=X4>AWI2a/?H0f(RE4s2sI@UqG^%6Q@$11<?h4>AWI@Qkns3+?E14q0V/1GWK)+?VA711`Wl4?-e]3''Id60f(UC4s2sB1G^pQ+?VVmAnF494>AWJ@m2"t0f(Ur4s2sI@kf]%%6Q@$1M&`m4>AWK0KpUA3+F["4q0V/1GgsQ+?VA71cIT@4?-h*Aj-Yd0f(Xp4s2sB1GiQ)+?VVn11<?U4>AWK@m2"t0f(Xs4s2sI@kqUZ%6Q@$1hAin4>AWKAj.>"3+Fa"4q0V/1GpjM+?VA72).9;4?-h,2*MI30f(e#4s2sB1H8u1+?VM:@:MJ14>AX#@m2"t0f*6K4s2sF2_nr.%6Q@$Ai;gq4>AX(2a/?H3&4uQ4q0V/1bg^K+?VA80etp84?,,O1d2@20f1UD4s2sB1bgsR+?VV>2.A`Y4>AZK1-QgC0f1[B4s2sI1H&c-%6Q@%1H%E>4>AZK2a/?H3&>#"4q0V/1c8]*+?VA82.A`l4?,-/3''Id60f1dI4s2sB1c@<W+?VV?3&a#14>A[(@6Per0f3HN4s2sG1h&C-%6Q@&0Jks94>A]I2Ei6G2)I0G4q0V/2)-mN+?VA90f2'':4>erU@6P,_0f:^?4s2sB2)6mM+?VM<A2?CY4>A]K3''JHI0f:^H4s2sF1h8U1%6Q@&11EEi4>A]K@m2"t2)J`%4q0V/2)@0T+?VA91H7Q@4>euO1-Q.00f:dJ4s2sB2)Jc++?VM=2`3c.4>A]N@m2"t0f:h!4s2sF2.C)[%6Q@&2DmZ@4>A]O2Ei6G2)SrS4q0V/2)\u/+?VA92J#&p4>f!.1-Q.00f:k$4s2sB2)d3Q+?VM=@q.\34>A]QA3M+u0f:q%4s2sF2E,)/%6Q@&@5C(i4>A^%1d3$E2.\RQ4q0V/2.A:(+?VA9@PU+i4>gV/3''Id60f<Gt4s2sB2.JL-+?VMl0JYg$4>A^*1-QgC0f<Q!4s2sH11E1+%6Q@''0JYg74>A`J1HlpD2_nuR4q0V/2DJc,+?VA:1,D*:4?5D[2a.[50fCds4s2sB2DSf,+?VYE3A<W+4>A`LANh5!0fCgA4s2sJ3B8lZ%6Q@''1h/]l4>A`NA3M+u2D?gB4q0V/2Dnu.+?VA:2.Sln4>nlP3''Id60fD!O4s2sB2E5,/+?VYAAi2a]ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6Q@''3+P2q4>A`RANh5!3ArQI4q0V/2E<KU+?VA:3A`oB4?5;R@6P,_0fD$N4s2sB2E<c]+?VYB0f;-(4>A`S@6Per0fD%$4s2sJ2DI3U%6Q@''@5pFn4>Aa&3BeQJ2IeX)4q0V/2I\C)+?VA:@PU+i4>p\]2a.[50fEQ#4s2sB2Ina1+?VPm3AWi.4>Aa+1-QgC0fEW"4s2sGAMl8-%6Q@(0KD<>4>AcK@6Per2J+d(4q0V/2`,,1+?VA;2)%3:4?5)O2*MI30fLsH4s2sB2`3HV+?VY<2).9(4>AcR3''JHI0fM$O4s2sF3FOp3%6Q@(3&NlB4>AcS2Ei6G2.80r4q0V/2e$5[+?VA;@UhSE4?6h/2a.[50fNSr4s2sB2e+R++?VYm3&!N*4>Ad)2Ei6G0fNT$4s2sJ@6$),%6Q@(@pqPD4>Ad)@m2"t3FOpW4q0V/2e-A^+?VA;@q@hH4?6h1Aj-Yd0fNTS4s2sB2e4U++?VYm@5:"U4>Ad*2a/?H0fNW&4s2sHARRP^%6Q@(A7IeG4>Ad*ANh5!2e?JQ4q0V/2e=[,+?VA;AMH@k4?$h]@Qk5`0fNZ%4s2sB2e=p3+?VSoAM?:W4>Ad+@6Per0fNZQ4s2sHAS#F:%6Q@(ARdnH4>Ad+A3M+u2e?SU4q0V/2eFa-+?VA;AhcIl4?$h`@6P,_0fN]#4s2sB2eFp2+?VSp0JPa#4>Ad,2Ei6G0fN]''4s2sHAhZ/-%6Q@(AiMss4>Ad,3BeQJ2eFaQ4q0V/2eHM_+?VA;An+"I4?$k,0g6%/0fUjB4s2sB3&!<U+?VSp1,1s%4>AfL3BeQJ0fUjs4s2sHAhmdY%6Q@)0P!?i4>AfM0g6^B2eFgW4q0V/3&EET+?VA<1c.B=4?#)V0Koq.0fV!L4s2sB3&EWZ+?VS>@5pF[4>AfPANh5!0fV$E4s2sJ2e?D]%6Q@)2`<iB4>AfS2a/?H2E3KJ4q0V/3&`f\+?VA<2`X&E4>o/W0Koq.0fV0K4s2sB3&rcY+?VPB0kNTY4>Ag(3''JHI0fWT%4s2sG3B/r]%6Q@)@V.eH4>Ag*0KpUA2IS=!4q0V/3+Op2+?VA<A2c[p4>pY.0g6%/0fW]P4s2sB3+QJ^+?VPk3ANc-4>Ag+A3M+u0fW]T4s2sG@Q@j\%6Q@)AMZLm4>Ag,2*N-F3+b*(4q0V/3+Y!3+?VA<AN)dq4?-q32*MI30fW`Q4s2sB3+ZP_+?VVq2`X&24>Ag,ANh5!0fW`V4s2sIAiMM/%6Q@)AhuUn4>Ag-2*N-F3+b-\4q0V/3A=l*+?VA=0Om9h4>o''.ANgPc0f_!K4s2sB3ANTY+?VP?A7@_34>AiO@m2"t0f_""4s2sIA2>u)%6Q@*1GV-:4>AiP1HlpD3+Oj''4q0V/3AWKU+?VA=1Gq?=4?-k.3''Id60f_%!4s2sB3AY20+?VVD@pqP14>AiPANh5!0f_''F4s2sI3FcVa%6Q@*1cIT@4>AiQ3''JHI2_m=''4q0V/3AkA3+?VA=2D@<;4>p\(3''Id60f_1$4s2sB3B(J4+?VV;AN)d^4>AiU@6Per0f_4&4s2sI0ed-%%6Q@*3FP)o4>AiV@Qkns3&*9N4q0V/3B:\8+?VA=@5''kf4?,&S@m1>a0f`]%4s2sB3FY!4+?VYDA2-7W4>Aj*@Qkns0f`]Q4s2sJ3+P$5%6Q@*Ai;gq4>Aj.2a/?H2DR*K4q0V/3G)bb+?VA=An4(J4?#8X@Qk5`0jugq4s2sB@59c*+?VSB0fM9*4>C8"@Qkns0juhI4s2sH3&+o,%6Q@R11WQk4>C8"Aj.>"2`NTR4q0V/@5Bl,+?VAe1H@WA4?#5W2EhR40jupt4s2sB@5Tu-+?VYqAn!q54>C8%@m2"t0juqM4s2sH2_[0S%6Q@R2DmZ@4>C8&2Ei6G2`ETJ4q0V/@5fu++?VAe2`*]@4?#2ZAj-Yd0k!%Q4s2sB@6$#*+?VY@3&Nl/4>C8)1HlpD0k!(!4s2sJ1cSu/%6Q@R3AiuC4>C8)2Ei6G3A`^-4q0V/@6%a[+?VAe3Fb5q4?55Y@6P,_0k!(Q4s2sB@6%m_+?VY@@5C(V4>C8Q1HlpD0k"KI4s2sJ1gsu[%6Q@R@5g@m4>C8Q@Qkns3Ab2''4q0V/@:<Y0+?VAe@:VPE4?56-@m1>a0k"NF4s2sB@:D,Y+?VY@@lQX]4>C8R2a/?H0k"NO4s2sJ1h8:(%6Q@R@UVGC4>C8R@m2"t3Ab8(4q0V/@:LuT+?VAe@kp4j4?56/ANgPc0k"QK4s2sB@:M/Y+?VY@AMcR[4>C8S2Ei6G0k"QN4s2sJ1hAU0%6Q@R@q%VE4>C8S@m2"t3Ab;Y4q0V/@:Nh3+?VAe@qInI4?5611Hl710k"TJ4s2sB@:V/X+?VY@An+"64>C8T2a/?H0k"TP4s2sJ2)$pP%6Q@RA2ugr4>C8T@6Per3AiKN4q0V/@:Wh2+?VAeA7RkH4?58QA3LGb0k"U(4s2sB@:_2X+?VYA0etp%4>C8U2*N-F0k"WP4s2sJ2)/W*%6Q@RAN;ps4>C8U@6Per3AiR#4q0V/@:`t5+?VAeAS"%J4?58T0g6%/0k"ZJ4s2sB@:h8Y+?VYA1H%E+4>C8V1d3$E0k"ZO4s2sJ2)Af-%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaV@:hJ_+?VAeAmmkG4?58U1d2@20k"[)4s2sB@:j(7+?VYA1hAi[4>C;!0KpUA0k)gk4s2sJ2)R0R%6Q@S0JYg74>C;!2*N-F3AiZP4q0V/@PB`)+?VAf0K;6=4?58VANgPc0k)hF4s2sB@PD7T+?VYA2DIB)4>C;!@m2"t0k)jo4s2sJ2)[9T%6Q@S0fD3<4>C;"3''JHI3Ai`M4q0V/@P]r,+?VAf1L`Nj4?6t.3''Id60k)so4s2sB@Pfi(+?VYq1H@W.4>C;%1d3$E0k)ss4s2sJAMc,*%6Q@S1cIT@4>C;%@6Per3Ft$*4q0V/@PhOX+?VAf1h/]l4?6t0@Qk5`0k*!p4s2sB@Por*+?VYq2.8ZX4>C;&2Ei6G0k*"M4s2sJAMuG1%6Q@S2E*fB4>C;''3''JHI2`5&#4q0V/@Q@j\+?VAf3FY/p4?$\-3''Id60k+ZJ4s2sB@Uq8Y+?VV;1,V6)4>C;V1d3$E0k+]O4s2sJ3&kD3%6Q@SAN2jr4>C;V3BeQJ3B0$-4q0V/@V&t3+?VAfAR[hG4?5A]ANgPc0k+^(4s2sB@V''(6+?VYD@50qT4>C;VANh5!0k+^+4s2sJ3+4[.%6Q@T0P*Ej4>C>"Aj.>"3&YA''4q0V/@kqX[+?VAg1GD!84?,8YA3LGb0k3*q4s2sB@l?&*+?VSp1c.B*4>C>(2Ei6G0k3+#4s2sH@PBT%%6Q@T3&NlB4>C>*2Ei6G2e$2R4q0V/@lZG2+?VAg3B'',E4?$_\2*MI30k4WM4s2sB@pq;[+?VV=0JPa#4>C>S@Qkns0k4X&4s2sI1,:RJ%6Q@T@Pg7k4>C>T2*N-F3&39G4q0V/@q.G]+?VAg@lQXp4?$k\Aj-Yd0k4`L4s2sB@q7AZ+?VSm@UhS24>C>V2Ei6G0k4`Q4s2sH@q0"4%6Q@TAmmkG4>C>X@Qkns3AE@%4q0V/A2#c&+?VAh0Jbm84?5,TA3LGb0k;tJ4s2sBA2%OX+?VY=@5:"U4>CA#Aj.>"0k<!n4s2sJ0k"TV%6Q@U1,1s84>CA%1-QgC3+QPX4q0V/A26#++?VAh1,_<=4?-k]ANgPc0k<%J4s2sBA27UX+?VVoAiDm_4>CA''0KpUA0k<*q4s2sIAMc,*%6Q@U1bq6;4>CA''1HlpD3+Xs%4q0V/A2\$`+?VAh2`*]@4?7"52*MI30k<4O4s2sBA2ds]+?VYB@UhS24>CA+@Qkns0k<7T4s2sJ@lQ>0%6Q@U3ANc@4>CA,1d3$E3Fb''''4q0V/A2uM2+?VAh3As&D4?6n31d2@20k<:''4s2sBA2uV5+?VYo3FP)\4>CA,3BeQJ0k<:U4s2sJ@l\*a%6Q@U3G(Gt4>CAT1HlpD3FcJT4q0V/A77>Z+?VAh@5^:l4?6n[A3LGb0k=]O4s2sBA79%5+?VYo@PBtT4>CATAj.>"0k=`K4s2sJ@q&k1%6Q@U@P^1j4>CAU2Ei6G3FcPU4q0V/A7@J]+?VAh@UqYF4?6n]@6P,_0k=a)4s2sBA7I;W+?VYoA2?CY4>CAV0g6^B0k=cM4s2sJ@q7M^%6Q@U@l-@l4>CAV2*N-F3FcT04q0V/A7K%3+?VAh@q%VE4?5>\0g6%/0k=g*4s2sBA7T78+?VYm@q%V24>CAY3BeQJ0k=m)4s2sJAR]16%6Q@UAn4(J4>CAYANh5!3Ft0/4q0V/AM>r)+?VAi0K)*;4?6t`@Qk5`0kE''r4s2sBAMH&++?VYr1LrZY4>J[(3BeQJ1,<HM4s2sI@6$&+%6QC%3G(Gt4>J^$0KpUA3B1SY4q0V01LW:-+?VD8@:DDC4?5DY3''Id61,L^D4s2sC1bgpQ+?VYm1c%<)4>J`JANh5!1,L^t4s2sHA2#r+%6QC&3Fk;r4>J`RANh5!3+amV4q0V01h1#Z+?VD9@q7bG4?5B0ANgPc1,NT!4s2sC1hJU/+?VY=A26=X4>JcK0g6^B1,UdA4s2sJ1,`W+%6QC''1bh0:4>JcN1-QgC3A`KL4q0V02)Jo/+?VD:2)%3:4?52O2a.[51,UsL4s2sC2)[HY+?VY?A7Ie44>Jd&Aj.>"1,WMp4s2sH2Dd<U%6QC''@Pg7k4>Jd''2*N-F2`<R)4q0V02.JO.+?VD:@lHRo4?5ATANgPc1,^pt4s2sC2D\i,+?VYnARRb34>Jg''3BeQJ1,`Ss4s2sC0fLdM%6QC(@P^1j4>Jg(1d3$E0J[-H4q0V02I^/[+?VD;@V.eH4>JWO2EhR41,`W!4s2sC2IeU.+?VD72E!`.4>Jg)2a/?H1,`]P4s2sC2)R''O%6QC(AR[hG4>Jg,3BeQJ1,V$G4q0V02J-A]+?VD;An+"I4>JcS1Hl711,``T4s2sC2J-Ma+?VD:@UhS24>JiL0KpUA1,gmB4s2sC2.\R-%6QC)0K)*;4>JiL2a/?H1GCOo4q0V02_[3T+?VD<0ebd64>SZH0g6%/1,gpC4s2sC2_d*P+?VG93+Y8_4>JiM1d3$E1,gpG4s2sD1HAr/%6QC)0k!6g4>JiM@Qkns1G`Pr4q0V02_m3R+?VD<1,V6<4>SZO@Qk5`1,gsH4s2sC2_m<U+?VG6An4(74>JiN3BeQJ1,gss4s2sD0KEZ-%6QC)11EEi4>JiO1d3$EAn<eZ4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71,h!H4s2sC2`!EW+?X7I2)IK+4>JiO3BeQJ1,h$J4s2t"AMlJ3%6QC)1cIT@4>JiP@6PerAn<k[4q0V02`,#.+?VD<2)d]A4>LM\0Koq.1,h''N4s2sC2`5&.+?VJl0Jks&4>JiQAj.>"1,h*G4s2sEAMId\%6QC)2DmZ@4>JiR2Ei6G1hAFR4q0V02`>/0+?VD<2J#&p4>^V+0Koq.1,h-L4s2sC2`EWY+?VJl2.8ZX4>JiS2a/?H1,h.#4s2sEAMu;-%6QC)2e"rn4>JiS@m2"t1hAR(4q0V02`G82+?VD<3&3Z?4>^V-@6P,_1,h0L4s2sC2`P>3+?VJl2`*]-4>JiTANh5!1,h3I4s2sEAN+3b%6QC)3AE]?4>JiU1HlpD1hAX&4q0V02`Wf\+?VD<3B02F4>^V02EhR41,h4%4s2sC2`Y>2+?VJl3Fb5^4>JiUANh5!1,iVq4s2sEART17%6QC)@5:"h4>Jj(2*N-F1hC,S4q0V02dnU.+?VD<@5pFn4>^VY@m1>a1,iWN4s2sC2dp2[+?VJl@qIn64>Jj(ANh5!1,iYr4s2sEARo45%6QC)@P^1j4>Jj)1d3$E1hC5V4q0V02e"[/+?VD<@Q6Oo4>^V\A3LGb1,iZO4s2sC2e$;]+?VJlAiMs`4>Jj*0g6^B1,i]%4s2sEAhYu(%6QC)@lQXp4>Jj*3BeQJ1hJFN4q0V02e-8[+?VD<@q@hH4>^Y)1-Q.01,i]T4s2sC2e4U++?VJm0k3BV4>Jj+1HlpD1,i`#4s2sEAhl>0%6QC)A2QOn4>Jj+2a/?H1hJLQ4q0V02e6J`+?VD<AMQFl4>^Y+ANgPc1,ic#4s2sC2e=g0+?VJm1c.B*4>Jj,2*N-F1,icQ4s2sEAi)G1%6QC)AS"%J4>Jj,Aj.>"1hJX#4q0V02eFg/+?VD<AhuUn4>^Y.@6P,_1,if%4s2sC2eFp2+?VJm2Inu\4>Jj-2Ei6G1,if(4s2sEAiDG.%6QC)AiW$t4>Jj-@m2"t1hJ[*4q0V02eHVb+?VD<AnF4L4>^Y00Koq.1,psH4s2sC3&!<U+?VJm3ANc-4>JlM@6Per1,pst4s2sEAiVh7%6QC*0P*Ej4>JlMAj.>"1hJaZ4q0V03&**N+?VD=0ekj74>^YY0g6%/1,q!G4s2sC3&*EW+?VJm@PBtT4>JlN@6Per1,q$E4s2sEAn!Y^%6QC*1,D*:4>JlO1d3$E1hL5O4q0V03&3?T+?VD=1,qH?4>^Y[2EhR41,q$L4s2sC3&4r,+?VJm@q%V24>JlO@m2"t1,q''D4s2sEAn3Y\%6QC*1Gh9<4>JlP2*N-F1hL;U4q0V03&<KW+?VD=1H7Q@4>^Y]@Qk5`1,q(!4s2sC3&>,0+?VJmAi)[\4>JlQ0KpUA1,q*G4s2sEAnGL9%6QC*1c.B=4>JlQ3''JHI2)$^=4q0V03&EWZ+?VD=1grQj4>efH2a.[51,q+&4s2sC3&NES+?VM80f;-(4>JlR1HlpD1,q-J4s2sF0JR*%%6QC*2)[W@4>JlR3''JHI2)$d@4q0V03&P,.+?VD=2DdT?4>efJAj-Yd1,q0N4s2sC3&Y2/+?VM81M/f[4>JlS@Qkns1,q1&4s2sF0JkUM%6QC*2J#&p4>JlSAj.>"2)$jq4q0V03&`QU+?VD=2`3cA4>efM0Koq.1,q3N4s2sC3&`i]+?VM82)[W-4>JlT@Qkns1,q6K4s2sF0K!B)%6QC*3&<`@4>JlU3''JHI2)$pH4q0V03&io^+?VD=3+b>s4>efNA3LGb1,q9J4s2sC3&r`X+?VM82`Nu14>JlV1HlpD1,q9N4s2sF0K3K*%6QC*3AiuC4>JlV3''JHI2)%!E4q0V03&ru_+?VD=3FP)o4>efP2EhR41,q:''4s2sC3&tP6+?VM83&s/34>JlVAj.>"1,r]#4s2sF0K<W-%6QC*@5pFn4>Jm)Aj.>"2)%%!4q0V03+=X,+?VD=@P^1j4>eg$@6P,_1,r`"4s2sC3+=g1+?VM8@:_V34>Jm*3BeQJ1,r`O4s2sF0Od"*%6QC*@U_MD4>Jm*@m2"t2)&KL4q0V03+?D^+?VD=@V.eH4>eg%Aj-Yd1,rbt4s2sC3+F[,+?VM8@l$:X4>Jm+1-QgC1,rc#4s2sF0Om")%6QC*@l6Fm4>Jm+3BeQJ2)&NK4q0V03+HD]+?VD=@q7bG4>eg''1-Q.01,rcT4s2sC3+O^,+?VM8A2c[]4>Jm,0g6^B1,rf#4s2sF0P"WV%6QC*A2HIm4>Jm,3BeQJ2)&QQ4q0V03+QG]+?VD=A7IeG4>eg(3Bdm71,rfT4s2sC3+Xd-+?VM8AS++84>Jm-1-QgC1,ri%4s2sF0P34,%6QC*AMu^p4>Jm-3BeQJ2)&WP4q0V03+ZYb+?VD=AhcIl4>eiI@m1>a1,rl&4s2sC3+b$3+?VM90fD3)4>Jm.2Ei6G1,rlT4s2sF0ek[P%6QC*An4(J4>Jm.Aj.>"2)-jA4q0V03A<-N+?VD>0Jks94>eiK2*MI31-%$G4s2sC3A=o++?VM911EEV4>JoN@m2"t1-%%#4s2sF0f(UL%6QC+0ebd64>JoO0g6^B2)-mH4q0V03AE9Q+?VD>0f)!94>eiLA3LH6DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>JoO3''JHI1-%''t4s2sF0f3H*%6QC+0k3Bi4>JoOANh5!2)-sI4q0V03AN9P+?VD>1,M0;4>eiNA3LGb1-%*I4s2sC3ANKV+?VM92D[N+4>JoP2a/?H1-%*L4s2sF0fCpR%6QC+11WQk4>JoPANh5!2).%$4q0V03AP21+?VD>1GD!84>eiQ1Hl711-%-F4s2sC3AWES+?VM93&Wr04>JoQ1HlpD1-%-I4s2sF0fWT*%6QC+1Gq?=4>JoQ3''JHI2).(%4q0V03AWZZ+?VD>1LWHi4>eiR1Hl711-%.$4s2sC3AY82+?VM93Fk;_4>JoR1-QgC1-%0L4s2sF0jut(%6QC+1cIT@4>JoR3''JHI2)/NM4q0V03Ab/.+?VD>1h/]l4>ej&3''Id61-%1%4s2sC3Ab;2+?VM9@V%_44>JoRAj.>"1-%3H4s2sF0k2q%%6QC+2)d]A4>JoSAj.>"2)/Vs4q0V03ArTU+?VD>2DRH=4>ej(ANgPc1-%6K4s2sC3Ar]X+?VM9AMQFY4>JoT2*N-F1-%7$4s2sF0kE4+%6QC+2_dK=4>JoU1-QgC2)6jB4q0V03B&cY+?VD>2`3cA4>elJ@Qk5`1-%9O4s2sC3B&l\+?VM:0P3KX4>JoU3''JHI1-%:%4s2sF1,1RK%6QC+2e,#o4>JoUA3M+u2)6mt4q0V03B(M5+?VD>3&!N=4>elL0g6%/1-%<K4s2sC3B/fY+?VM:1,V6)4>JoV2a/?H1-%<R4s2sF1,CXK%6QC+3&s/F4>JoV@6Per2)6sE4q0V03B1P5+?VD>3+Y8r4>elN2*MI31-%=+4s2sC3B8cW+?VM:1cRZ.4>JoW0g6^B1-%?M4s2sF1,NQ+%6QC+3AWiA4>JoW1d3$E2)7$E4q0V03B8u]+?VD>3B98G4>elO2a.[51-%@(4s2sC3B:S5+?VM:2.f#]4>JoWA3M+u1-%@,4s2sF1,^mO%6QC+@5:"h4>Jp*1d3$E2)7(!4q0V03FOd/+?VD>@5^:l4>elQ0Koq.1-&c&4s2sC3FQJ_+?VM:2`<i/4>Jp+0g6^B1-&f"4s2sF1,q*S%6QC+@Pp=l4>Jp+2Ei6G2)7.&4q0V03FXs3+?VD>@V%_G4>elS1d2@21-&hu4s2sC3Faj/+?VM:@5L.W4>Jp,1d3$E1-&i&4s2sF11=`X%6QC+@lHRo4>Jp-0KpUA2)8Vt4q0V03Fjp0+?VD>A2QOn4>em(1d2@21-&l)4s2sC3FlS_+?VM:@q.\34>Jp-A3M+u1-&lV4s2sF11W1)%6QC+AMQFl4>Jp.1HlpD2)8_s4q0V03Ft''3+?VD>AS++K4>em*2*MI31-&r#4s2sC3G($1+?VM:AhlOZ4>Jp/1HlpD1-&r''4s2sF11iF.%6QC+Ai2ap4>Jp/2a/?H2)8cQ4q0V03G(67+?VD>An!qH4>eoK0g6%/1-&rW4s2sC3G)ke+?VM;0KD<+4>L>!1-QgC11;jo4s2sF1GLUJ%6QCS0K20<4>L>!3''JHI2)?sr4q0V0@5'']*+?VDf0O[-f4>eoLANgPc11;kH4s2sC@5)4U+?VM;1,M0(4>L>!ANh5!11;mk4s2sF1GUmQ%6QCS0ekj74>L>"1-QgC2)@!s4q0V0@50T&+?VDf0k!6g4>eoN1-Q.011;nH4s2sC@527U+?VM;1LiTX4>L>#0KpUA11;pn4s2sF1GiQ)%6QCS1,M0;4>L>#2*N-F2)@*L4q0V0@5;:U+?VDf11NKj4>eoQ@m1>a11;sm4s2sC@5B]''+?VM;2e"r[4>L>$1d3$E11;sr4s2sF1H7''P%6QCS1H.K?4>L>$3''JHI2)@3N4q0V0@5D=U+?VDf1b_*94>eoSANgPc11<!o4s2sC@5K`''+?VM;3As&14>L>%1HlpD11<!r4s2sF1HAo.%6QCS1c[`B4>L>%@Qkns2)AZL4q0V0@5MIX+?VDf1hAin4>ep''Aj-Yd11<$p4s2sC@5Tl*+?VM;@Q-I[4>L>&2*N-F11<%!4s2sF1LaiX%6QCS2*!iC4>L>&@m2"t2)A`!4q0V0@5VRZ+?VDf2.f#p4>ep)ANgPc11<''p4s2sC@5]i(+?VM;A26=X4>L>''1d3$E11<(!4s2sF1LsuZ%6QCS2I\im4>L>''A3M+u2)AiU4q0V0@5fu++?VDf2`3cA4>erM3''Id611<+$4s2sC@5g21+?VM<1,M0(4>L>(A3M+u11<+Q4s2sF1c%$R%6QCS3&3Z?4>L>)1HlpD2)I-E4q0V0@5p)-+?VDf3&NlB4>erP1d2@211<.%4s2sC@5q^[+?VM<1h/]Y4>L>)ANh5!11<0u4s2sF1c8f-%6QCS3As&D4>L>*A3M+u2)I3O4q0V0@6%p`+?VDf@5''kf4>erS3Bdm711=TG4s2sC@::oT+?VM<2e>/^4>L>R2Ei6G11=TO4s2sF1cREX%6QCS@:VPE4>L>RANh5!2)I<P4q0V0@:CoS+?VDf@Pg7k4>erUANgPc11=WP4s2sC@:E\0+?VM<@Pp=Y4>L>S@m2"t11=X&4s2sF1h&I/%6QCS@kg.i4>L>T1-QgC2)JfO4q0V0@:M5[+?VDf@lZ^q4>es,1-Q.011=[$4s2sC@:Nb1+?VM<AR[h4ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QCS@q.\F4>L>TANh5!2)JlV4q0V0@:Nn5+?VDfA2HIm4>es-1d2@211=]Q4s2sC@:VA^+?VM=0JYg$4>L>U@m2"t11=`J4s2sF2)&H&%6QCSAMH@k4>L>V1-QgC2)R*D4q0V0@:_5Y+?VDfAN2jr4>euN2*MI311=`S4s2sC@:`q4+?VM=0k3BV4>L>VANh5!11=a+4s2sF2)7$Q%6QCSAhZCk4>L>W0g6^B2)R-K4q0V0@:hA\+?VDfAiDmr4>euP1d2@211=cS4s2sC@:it4+?VM=1H7Q-4>LA"0KpUA11Dpl4s2sF2)I6U%6QCT0JYg74>LA"2*N-F2)R4"4q0V0@PB](+?VDg0K20<4>euR0g6%/11Dpt4s2sC@PD=V+?VM=2)d].4>LA"Aj.>"11Dsl4s2sF2)Su0%6QCT0ekj74>LA#1-QgC2)R9I4q0V0@PKZ&+?VDg0f2'':4>euS3''Id611Dsr4s2sC@PM=U+?VM=2J,,^4>LA#@m2"t11DtK4s2sF2)dNZ%6QCT1,(m74>LA$0g6^B2)R?N4q0V0@PT]&+?VDg1,M0;4>euU@m1>a11E!s4s2sC@PTl++?VM=3ANc-4>LA$3''JHI11E"I4s2sF2*!NX%6QCT11EEi4>LA$@m2"t2)RC&4q0V0@PVLY+?VDg1Gh9<4>f!)0Koq.11E$s4s2sC@P]o++?VM=@5pF[4>LA%3BeQJ11E%J4s2sF2.:)\%6QCT1b_*94>LA&1d3$E2)SiT4q0V0@Pfu,+?VDg1cIT@4>f!+@6P,_11E("4s2sC@Pg)/+?VM=@qIn64>LA&@Qkns11E(N4s2sF2.SX0%6QCT2)@E=4>LA''1d3$E2)SrU4q0V0@Pp#,+?VDg2)[W@4>f!.0Koq.11E+#4s2sC@PqXZ+?VM=AiMs`4>LA''ANh5!11E-r4s2sF2D?mM%6QCT2D[N>4>LA(1d3$E2)[-s4q0V0@Q$)-+?VDg2E3lC4>f#O0Koq.11E.M4s2sC@Q%[Z+?VM>0f_E,4>LA(A3M+u11E.R4s2sF2DQsM%6QCT2_[E<4>LA)0g6^B2)[3I4q0V0@Q-),+?VDg2`*]@4>f#P@6P,_11E1%4s2sC@Q.^Z+?VM>1LiTX4>LA)@m2"t11E4#4s2sF2Dd0Q%6QCT3&WrC4>LA*@6Per2)[:''4q0V0@Q7g\+?VDg3+G,p4>f#S2*MI311E4R4s2sC@Q7p_+?VM>2.8ZX4>LA*Aj.>"11E6t4s2sF2Do&0%6QCT3A`oB4>LA+2*N-F2)[@''4q0V0@Q@m]+?VDg3Fk;r4>f#UA3LGb11E7T4s2sC@UUuT+?VM>3&*T+4>LAS1-QgC11FZL4s2sF2E3Z[%6QCT@5g@m4>LAS3BeQJ2)[HK4q0V0@UW_0+?VDg@:VPE4>f#W2EhR411F[''4s2sC@U_5Z+?VM>3FP)\4>LAT2a/?H11F]P4s2sF2ISF+%6QCT@UVGC4>LATANh5!2)\l''4q0V0@U`q5+?VDg@kg.i4>f$+0Koq.11F`L4s2sC@Uh;[+?VM>@Q6O\4>LAU2a/?H11F`R4s2sF2I^2\%6QCT@pqPD4>LAU@Qkns2)\r#4q0V0@Uin3+?VDg@q7bG4>f$,2EhR411Fa*4s2sC@Uq5X+?VM>@q7b44>LAV1HlpD11FcN4s2sF2InR,%6QCTA2QOn4>LAV2Ei6G2)\u&4q0V0@UqD]+?VDgA2laq4>f$-3''Id611Fd''4s2sC@V%5W+?VM>AMlX\4>LAW1-QgC11FfN4s2sF2J$G`%6QCTAMcRn4>LAW2*N-F2)]&%4q0V0@V%G]+?VDgAN2jr4>f$/2EhR411FfT4s2sC@V&t3+?VM>An!q54>LAW@Qkns11Fg*4s2sF2_ZpL%6QCTAhZCk4>LAX1HlpD2)d4#4q0V0@V.G\+?VDgAi2ap4>f&P1d2@211FiS4s2sC@V.Va+?VM?0f_E,4>LAX@6Per11Fj)4s2sF2_ei,%6QCTAn+"I4>LAXANh5!2)d9E4q0V0@k]T#+?VDh0JYg74>f&Q2*MI311N!p4s2sC@k]c(+?VM?1GM''&4>LD#2Ei6G11N"H4s2sF2`!9S%6QCU0Od3g4>LD#@m2"t2)d=$4q0V0@k_LY+?VDh0etp84>f&S1Hl7111N$p4s2sC@kff(+?VM?1cRZ.4>LD$2Ei6G11N%I4s2sF2`3?S%6QCU0k*<h4>LD$@m2"t2)dBP4q0V0@khLX+?VDh0kENk4>f&U1-Q.011N''q4s2sC@koo*+?VM?2_[E)4>LD%2Ei6G11N''u4s2sF2`EQW%6QCU1,qH?4>LD%@6Per2)dHR4q0V0@kqLW+?VDh11i]m4>f&VA3LGb11N*o4s2sC@l#o)+?VM?3&a#14>LD&1d3$E11N+"4s2sF2`P>3%6QCU1H@WA4>LD&Aj.>"2)dNP4q0V0@l,l''+?VDh1c%<<4>f&X@m1>a11N.#4s2sC@l.UX+?VM?@:h\44>LD''@m2"t11N.P4s2sF2e"X.%6QCU1hJoo4>LD(2a/?H2)eu)4q0V0@l650+?VDh2.\ro4>f''-1d2@211N1R4s2sC@l?#)+?VM?@q.\34>LD)0g6^B11N3t4s2sF2e4U+%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaW@l?/-+?VDh2DmZ@4>f''.2EhR411N4#4s2sC@l?80+?VM?A7@_34>LD)3BeQJ11N4N4s2sF2e=a.%6QCU2I\im4>LD*1-QgC2)f)(4q0V0@lH5.+?VDh2`EoC4>f''00Koq.11N7&4s2sC@lHD3+?VM?Ai2a]4>LD*@6Per11N7P4s2sF2eHM_%6QCU2e,#o4>LD*A3M+u2)f,Y4q0V0@lJ!`+?VDh3&!N=4>f)P1Hl7111N9u4s2sC@lQ5-+?VM@0K;6*4>LD+1d3$E11N:%4s2sF3&"o-%6QCU3&a#D4>LD+3BeQJ2)m<G4q0V0@lRm\+?VDh3+>&o4>f)Q2a.[511N:R4s2sC@lS$`+?VM@0k!6T4>LD,0KpUA11N=!4s2sF3&36Q%6QCU3ANc@4>LD,2Ei6G2)m?K4q0V0@lZJ3+?VDh3FP)o4>f)R@Qk5`11N=R4s2sC@l\$_+?VM@1GV-''4>LD,A3M+u11Oa$4s2sF3&<HV%6QCU@:DDC4>LDTAj.>"2)mEM4q0V0@q%5X+?VDh@Pg7k4>f)U2*MI311OcN4s2sC@q%G^+?VM@2*!i04>LDU@6Per11Od''4s2sF3&P;3%6QCU@V%_G4>LDV1-QgC2)mKP4q0V0@q.;Y+?VDh@pqPD4>f)VA3LGb11Og''4s2sC@q0%5+?VM@2`<i/4>LDVANh5!11OiL4s2sF3&b80%6QCUA2QOn4>LDW2a/?H2)mQR4q0V0@q7P_+?VDhA7[qI4>f)X@Qk5`11Oj,4s2sC@q@G[+?VM@3A`o/4>LDX2Ei6G11Om+4s2sF3+4L)%6QCUAS"%J4>LDY0g6^B2)o#Q4q0V0@qIJ[+?VDhAi2ap4>f*,Aj-Yd11OoS4s2sC@qK47+?VM@@Pg7X4>LDYANh5!11Op.4s2sF3+?J`%6QCV0JG[54>LG$1-QgC2)o)$4q0V0A2#i(+?VDi0Om9h4>f*.3''Id611W(N4s2sCA2,c%+?VM@A2ZU\4>LG%0g6^B11W*q4s2sF3+QJ^%6QCV0fD3<4>LG%3BeQJ2)o/)4q0V0A2.RX+?VDi0k<Hj4>f*10g6%/11W+N4s2sCA2.[[+?VM@Ai)[\4>LG&0KpUA11W-p4s2sF3+b*5%6QCV1,;$94>LG&1HlpD2)o2W4q0V0A25u*+?VDi1,hB>4>f*1ANgPc11W.#4s2sCA27RW+?VMA0Ju$''4>LG&@Qkns11W.P4s2sF3A<EV%6QCV1GM''94>LG''1d3$E2*!BF4q0V0A2?),+?VDi1H%E>4>f,R2a.[511W1#4s2sCA2?50+?VMA0k<HW4>LG''@6Per11W1M4s2sF3AN9P%6QCV1bh0:4>LG(1-QgC2*!HJ4q0V0A2H)++?VDi1c.B=4>f,T2*MI311W4#4s2sCA2H80+?VMA1M/f[4>LG(@6Per11W4N4s2sF3A`TW%6QCV1h8cm4>LG(ANh5!2*!L''4q0V0A2Q&)+?VDi2).9;4>f,V1-Q.011W6u4s2sCA2Q;0+?VMA2.A`Y4>LG)3BeQJ11W7N4s2sF3ArZW%6QCV2.A`l4>LG)A3M+u2*!QQ4q0V0A2Z,*+?VDi2D[N>4>f,WAj-Yd11W:$4s2sCA2ZD2+?VMA2dnlZ4>LG*3BeQJ11W:P4s2sF3B(M5%6QCV2J#&p4>LG*Aj.>"2*!X*4q0V0A2c2++?VDi2`!W?4>f,YANgPc11W=#4s2sCA2cA0+?VMA3A`o/4>LG+2a/?H11W=(4s2sF3B:M3%6QCV2dnlm4>LG+A3M+u2*![/4q0V0A2e''`+?VDi2eG5r4>f--2EhR411W?u4s2sCA2l;-+?VMA@:MJ14>LG,1-QgC11W@#4s2sF3FX[+%6QCV3&EfA4>LG,3BeQJ2*#,%4q0V0A2n$^+?VDi3+G,p4>f-.@m1>a11W@T4s2sCA2uG0+?VMA@V.e54>LG-1d3$E11WC''4s2sF3Fb!3%6QCV3B'',E4>LG-@6Per2*#/V4q0V0A3"*_+?VDi3Fb5q4>f-02*MI311WCW4s2sCA778X+?VMAA7[q64>LGU2*N-F11XfO4s2sF3Ft*4%6QCV@5g@m4>LGU3BeQJ2*#5.4q0V0A78n1+?VDi@Pp=l4>f-1A3LGb11XiQ4s2sCA7@P_+?VMAAn+"64>LGV@m2"t11Xj)4s2sF@5)+R%6QCV@V%_G4>LGW0g6^B2.81L4q0V0A7IDZ+?VDi@l?Ln4>gP%1d2@211XlR4s2sCA7IV`+?VMi0f_E,4>LGW@6Per11Xm(4s2sF@52:V%6QCV@q.\F4>LGWA3M+u2.86p4q0V0A7K48+?VDiA2-7j4>gP&2EhR411XoN4s2sCA7RY`+?VMi11<?U4>LGX@Qkns11Xp-4s2sF@5Bi+%6QCVAM?:j4>LGY1-QgC2.8:O4q0V0A7[P\+?VDiAMu^p4>gP(1-Q.011XrT4s2sCA7[_a+?VMi1cIT-4>LGY3BeQJ11XuP4s2sF@5MFW%6QCVAhuUn4>LGZ2Ei6G2.8@#4q0V0A7dba+?VDiAn4(J4>gP)@Qk5`11Y!.4s2sCA7fF;+?VMi2D[N+4>LJ%0g6^B11`-p4s2sF@5^)/%6QCW0Jbm84>LJ%1d3$E2.8CP4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN711`-s4s2sCAM@OV+?VMi2J#&]4>LJ%@Qkns11`.L4s2sF@5g/0%6QCW0P!?i4>LJ&0KpUA2.8FQ4q0V0AMGo''+?VDj1,;$94>gP,0Koq.11`3s4s2sCAMQ80+?VMi3AWi.4>LJ''@6Per11`6u4s2sF@6%g]%6QCW1Gq?=4>LJ(2Ei6G2.9oQ4q0V0AMZ8/+?VDj1LrZl4>gPU@Qk5`11`7R4s2sCAMc))+?VMi@Q$CZ4>LJ)0g6^B11`:!4s2sF@:D5\%6QCW1c7H>4>LJ)2Ei6G2.9s+4q0V0AMc>0+?VDj1h/]l4>gPW1Hl7111`:Q4s2sCAMds^+?VMi@pqP14>LJ)Aj.>"11`=!4s2sF@:Nh3%6QCW2)[W@4>LJ*3''JHI2.:#U4q0V0AMlJ3+?VDj2.A`l4>gPXA3LGb11`=R4s2sCAMn$_+?VMiAMcR[4>LJ*Aj.>"11`?t4s2sF@:_A]%6QCW2DRH=4>LJ+2Ei6G2.:''+4q0V0AMuJ2+?VDj2E<rD4>gPZ1-Q.011`@P4s2sCAN"*`+?VMiAi;g^4>LJ+Aj.>"11`C"4s2sF@:j"5%6QCW2`!W?4>LJ,3BeQJ2.A6o4q0V0AN+''^+?VDj3&<`@4>gS%A3LGb11`F&4s2sCAN4-_+?VMj0k!6T4>LJ-@m2"t11`I%4s2sF@PT]&%6QCW3A`oB4>LJ.3''JHI2.A=M4q0V0AN=3`+?VDj3Fb5q4>gS(2*MI311`IV4s2sCARRAY+?VMj1H@W.4>LJV1d3$E11am*4s2sF@Pff''%6QCW@:h\G4>LJW0g6^B2.ACQ4q0V0AR[M\+?VDj@Q$Cm4>gS+0Koq.11aoR4s2sCAR[V_+?VMj2E*f/4>LJW3BeQJ11ap(4s2sF@Q%a\%6QCW@V%_G4>LJWAj.>"2.AL&4q0V0ARdGY+?VDj@kp4j4>gS,@Qk5`11arS4s2sCARd\`+?VMj3+P2^4>LJX3BeQJ11as)4s2sF@Q?,+%6QCW@qInI4>LJY0g6^B2.BuQ4q0V0ARmP[+?VDjA2QOn4>gSV@m1>a11auS4s2sCARm_`+?VMj@PL%U4>LJY3BeQJ11b!*4s2sF@U`b0%6QCWA7IeG4>LJYA3M+u2.C&L4q0V0ARoC:+?VDjAMQFl4>gSX3''Id611b#Q4s2sCAS!__+?VMj@q7b44>LJZ2a/?H11b$/4s2sF@Uq;Z%6QCWAi2ap4>LJ[3''JHI2.C/P4q0V0AS,@7+?VDjAn!qH4>gS[A3LGb11b''.4s2sCAS,L;+?VMk0JYg$4>LM&1-QgC11i3r4s2sF@kf`&%6QCX0K20<4>LM&@6Per2.J@P4q0V0Ah[aZ+?VDk0ebd64>gV(3''Id611i6q4s2sCAhc,++?VMk11WQX4>LM''2*N-F11i7!4s2sF@l#l(%6QCX0fM9=4>LM''3''JHI2.JF"4q0V0Ahc;0+?VDk0k!6g4>gV*1Hl7111i7M4s2sCAhddZ+?VMk1c@N,4>LM''A3M+u11i7P4s2sF@l.[Z%6QCX0kNTl4>LM(0g6^B2.JL!4q0V0Ahl,*+?VDk1,M0;4>gV+2EhR411i:!4s2sCAhl>0+?VMk2.8ZX4>LM(@Qkns11i:P4s2sF@l?>2%6QCX1GD!84>LM)2Ei6G2.JR#4q0V0AhuA0+?VDk1LWHi4>gV-@Qk5`11i=P4s2sCAi)2*+?VMk3&<`-4>LM*0g6^B11i@!4s2sF@lQJ4%6QCX1c.B=4>LM*2*N-F2.JUW4q0V0Ai)D0+?VDk1cIT@4>gV/1-Q.011i@''4s2sCAi+!]+?VMk3Fk;_4>LM*A3M+u11iBu4s2sF@pq2X%6QCX2)@E=4>LM+2*N-F2.L''+4q0V0Ai2S4+?VDk2.Jfm4>gVX3Bdm711iCU4s2sCAi;>,+?VMk@kp4W4>LM,0g6^B11iF&4s2sF@q.A[%6QCX2E*fB4>LM,@m2"t2.L-+4q0V0Ai=0`+?VDk2_mQ>4>gVZ1Hl7111iI$4s2sCAiD_6+?VMkA77Y24>LM-@6Per11iIS4s2sF@q@DZ%6QCX2e>/q4>LM-Aj.>"2.L3,4q0V0AiMJ.+?VDk3&*T>4>gV[ANgPc11iL$4s2sCAiMV2+?VMkAhcIY4>LM.2Ei6G11iL+4s2sF@qIY`%6QCX3+>&o4>LM.ANh5!2.L604q0V0AiOBd+?VDk3A<W>4>gY''1d2@211iO$4s2sCAiV_4+?VMl0K;6*4>LM/2Ei6G11iOT4s2sFA2%UZ%6QCX3Fb5q4>LM/ANh5!2.SF$4q0V0AiXHe+?VDk@5''kf4>gY(@m1>a11jrL4s2sCAmmP\+?VMl0kNTY4>LMW3''JHI11jrT4s2sFA27RW%6QCX@:;>B4>LMWANh5!2.SIS4q0V0Amo:8+?VDk@Q$Cm4>gY*2*MI311juS4s2sCAn#=8+?VMl1M/f[4>LMXAj.>"11k#M4s2sFA2H80%6QCX@kg.i4>LMY1HlpD2.SOS4q0V0An*Y]+?VDk@pqPD4>gY,0g6%/11k$*4s2sCAn,=7+?VMl2*!i04>LMYANh5!11k&V4s2sFA2Rp^%6QCXA77YE4>LMZ@Qkns2.SUU4q0V0An5C8+?VDkA7e"J4>gY.0KoqWDId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>LM[0KpUA11k*,4s2sFA2cA0%6QCXARmtI4>LM[ANh5!2.S[(4q0V0An>R<+?VDkAn4(J4>gY/3''Id61GCL:4s2sD0JG4F+?VMl3FY/]4>SZF1-QgC1GCL=4s2sFA3"3b%6QF#0Jks94>SZF3BeQJ2.U,M4q0V10JHp!+?VG60fV?>4>gYX3''Id61GCOm4s2sD0JYCI+?VMl@UqY34>SZH1HlpD1GCRC4s2sFA7IM]%6QF#1-%N@4>SZH@m2"t2.U3.4q0V10J[3''+?VG61G_3;4>gY[2*MI31GCUB4s2sD0JbUN+?VMlA7e"74>SZI2a/?H1GCUE4s2sFA7[P\%6QF#1LWHi4>SZI@Qkns2.U9.4q0V10Jd3&+?VG61LrZl4>gY]2*MI31GCUr4s2sD0JkOK+?VMlAiMs`4>SZJ1HlpD1GCXB4s2sFA7fF;%6QF#1cIT@4>SZJ3BeQJ2.\I%4q0V10Jm3%+?VG61h&Wk4>g\(A3LGb1GCXq4s2sD0Jm<(+?VMm0etp%4>SZJAj.>"1GC[D4s2sFAMIa[%6QF#2)[W@4>SZK3''JHI2.\O&4q0V10K!9&+?VG62.A`l4>g\*Aj-Yd1GC[s4s2sD0K!E*+?VMm1Gh9)4>SZKAj.>"1GC^@4s2sFAMZ>1%6QF#2DIB<4>SZL1-QgC2.\RT4q0V10K(aO+?VG62E<rD4>g\,2EhR41GC^q4s2sD0K1[L+?VMm1h8cZ4>SZM1-QgC1GCaD4s2sFAMlJ3%6QF#2`*]@4>SZM2*N-F2.\XT4q0V10K1pS+?VG62e5)p4>g\.1d2@21GCb!4s2sD0K:gO+?VMm2Inu\4>SZN2*N-F1GCdI4s2sFAN2D.%6QF#3&s/F4>SZN@6Per2.\a,4q0V10K<N*+?VG63+P2q4>g\0@m1>a1GCgE4s2sD0KD!S+?VMm@50qT4>SZO2Ei6G1GCgK4s2sFARRP^%6QF#3FP)o4>SZOANh5!2.^3-4q0V10OZY!+?VG6@5C(i4>g\Z@6P,_1GE5o4s2sD0O\KU+?VMm@V.e54>S["ANh5!1GE8o4s2sFARf15%6QF#@Pg7k4>S[#2*N-F2.^;T4q0V10Ocq(+?VG6@Q?Up4>g\\2a.[51GE9H4s2sD0OeNU+?VMmA7Ie44>S[#A3M+u1GE;m4s2sFAS!\^%6QF#@l$:k4>S[$3''JHI2.^?04q0V10OnNT+?VG6@q%VE4>g\^3''Id61GE<K4s2sD0OnZX+?VMmAn!q54>S[$Aj.>"1GE>o4s2sFAhZ)+%6QF#A2?Cl4>S[%2*N-F2.eOP4q0V10P"TU+?VG6A7@_F4>g_*3Bdm71GE?L4s2sD0P"`Y+?VMn0k3BV4>S[%Aj.>"1GEAq4s2sFAhl))%6QF#AMcRn4>S[&2*N-F2.eUQ4q0V10P+ZV+?VG6ARdnH4>g_,2EhR41GEBO4s2sD0P3"&+?VMn1LrZY4>S[''0g6^B1GEDu4s2sFAi)5+%6QF#AiDmr4>S[''3BeQJ2.e[*4q0V10P4l[+?VG6AnF4L4>g_.@6P,_1GLR<4s2sD0ebCI+?VMn2.\r\4>S]G2Ei6G1GLRB4s2sFAi;S3%6QF$0KD<>4>S]G@6Per2.eaX4q0V10ed*$+?VG70P*Ej4>g_01d2@21GLU=4s2sD0ekIJ+?VMn2e5)]4>S]H2Ei6G1GLUD4s2sFAiO<b%6QF$0f_E?4>S]H@6Per2.ej)4q0V10em0%+?VG70k<Hj4>g_2@6P,_1GLX=4s2sD0etUM+?VMn@5:"U4>S]I2Ei6G1GLXD4s2sFAmo.4%6QF$1,qH?4>S]IA3M+u2.g9/4q0V10f(LI+?VG71GM''94>g_[@6P,_1GL[@4s2sD0f(^O+?VMn@V%_44>S]J2a/?H1GL[F4s2sFAn*b`%6QF$1H@WA4>S]J@6Per2.g?,4q0V10f*<''+?VG71M&`m4>g_]1Hl711GL[t4s2sD0f1UK+?VMnA77Y24>S]K1-QgC1GL^B4s2sFAn5I:%6QF$1c.B=4>S]K2*N-F2.gDT4q0V10f1dP+?VG71cIT@4>g_^2*MI31GL^G4s2sD0f1mS+?VMnAN2j_4>S]K@Qkns1GL^r4s2sFAn>R<%6QF$1h8cm4>S]KAj.>"2.gGU4q0V10f:XK+?VG72).9;4>g__2EhR41GLaB4s2sD0f:aN+?VMnAiW$a4>S]L2*N-F1GLaG4s2sG0JGFL%6QF$2)mcB4>S]L3BeQJ2D?go4q0V10f<B''+?VG72.A`l4>nlJ0Koq.1GLat4s2sD0f<N++?VP90fM9*4>S]M0KpUA1GLdB4s2sG0JR-&%6QF$2DRH=4>S]M1d3$E2D?mA4q0V10fCmQ+?VG72E*fB4>nlK@m1>a1GLdI4s2sD0fEN*+?VP91GD!%4>S]MA3M+u1GLgC4s2sG0JbUN%6QF$2_mQ>4>S]N1HlpD2D?pt4q0V10fLsR+?VG72e"rn4>nlM1d2@21GLh!4s2sD0fNZ-+?VP91hAi[4>S]O0KpUA1GLjD4s2sG0JtXM%6QF$3&3Z?4>S]O1d3$E2D@!H4q0V10fV$S+?VG73&WrC4>nlN@Qk5`1GLjJ4s2sD0fWT*+?VP92.\r\ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QF$3+>&o4>S]O@m2"t2D@$H4q0V10fW`.+?VG73+b>s4>nlP0g6%/1GLmD4s2sD0f^sP+?VP92`*]-4>S]P1d3$E1GLmJ4s2sG0K:aM%6QF$3B'',E4>S]P@6Per2D@*J4q0V10f`],+?VG73Fb5q4>nlQ@6P,_1GLn#4s2sD0jub"+?VP93+Y8_4>S^#1HlpD1GN;q4s2sG0KD''U%6QF$@5pFn4>S^#3BeQJ2DAPo4q0V10k"KS+?VG7@:DDC4>nm%1d2@21GN<K4s2sD0k"WW+?VP9@6$L\4>S^$1HlpD1GN>q4s2sG0Od%+%6QF$@Pp=l4>S^$@m2"t2DATN4q0V10k+ZW+?VG7@V.eH4>nm''2a.[51GNAn4s2sD0k3%(+?VP9@q.\34>S^%2*N-F1GNAu4s2sG0Ouq&%6QF$@lQXp4>S^%3BeQJ2DAZ"4q0V10k4`X+?VG7A2$1i4>nm)1-Q.01GNDr4s2sD0k<+)+?VP9AiDm_4>S^&2*N-F1GNE"4s2sG0P4fY%6QF$A2ugr4>S^&@m2"t2DHm@4q0V10k=iZ+?VG7AM?:j4>noJ@6P,_1GNGq4s2sD0kE4++?VP:0ebd#4>S^''2Ei6G1GNH$4s2sG0ekRM%6QF$ARRbF4>S^''@Qkns2DHps4q0V10kFiY+?VG7ARmtI4>noL0g6%/1GNHQ4s2sD0kN.(+?VP:1,qH,4>S^(1-QgC1GNK%4s2sG0f!6&%6QF$AmmkG4>S^(@Qkns2DI!F4q0V10kOoZ+?VG7AnF4L4>noM3''Id61GUX<4s2sD1,(FH+?VP:1LiTX4>S`H1-QgC1GUXE4s2sG0f1RJ%6QF%0Om9h4>S`HA3M+u2DI%#4q0V11,*9''+?VG80ebd64>noO1-Q.01GU[>4s2sD1,1OJ+?VP:2)[W-4>S`I1d3$E1GU[B4s2sG0f<E(%6QF%0fM9=4>S`I3''JHI2DI*D4q0V11,1dQ+?VG80k!6g4>noP2*MI31GU[p4s2sD1,3<''+?VP:2Ieo[4>S`IAj.>"1GU^>4s2sG0fLgN%6QF%1,;$94>S`J@Qkns2DI-M4q0V11,<?''+?VG81GV-:4>noR1Hl711GUaB4s2sD1,CaN+?VP:3+G,]4>S`K2a/?H1GUaq4s2sG0f_*T%6QF%1LiTk4>S`KA3M+u2DI4$4q0V11,EK*+?VG81c%<<4>noSANgPc1GUdD4s2sD1,LjP+?VP:@5U4X4>S`L3''JHI1GUdq4s2sG0k"ZX%6QF%1h&Wk4>S`LA3M+u2DJYs4q0V11,NQ++?VG82)@E=4>np''3''Id61GUgE4s2sD1,UsR+?VP:@V.e54>S`M2a/?H1GUgr4s2sG0k3"''%6QF%2.A`l4>S`MANh5!2DJ]P4q0V11,^gM+?VG82E3lC4>np)2*MI31GUjK4s2sD1,`T*+?VP:AM?:W4>S`N@m2"t1GUk!4s2sG0kE1*%6QF%2J,,q4>S`O2a/?H2DJc''4q0V11,h0V+?VG82`X&E4>np+1Hl711GUn"4s2sD1,q!P+?VP;0JPa#4>S`P2*N-F1GUpK4s2sG1,39&%6QF%3+>&o4>S`P@m2"t2DR$I4q0V11-%''Q+?VG83ANc@4>nrN2*MI31GUsH4s2sD1-%9W+?VP;1H7Q-4>S`Q3BeQJ1GUt"4s2sG1,LgO%6QF%3Fk;r4>S`QANh5!2DR+$4q0V11-&r1+?VG8@50qg4>nrP2*MI31GWAo4s2sD11;t&+?VP;2*!i04>Sa$1d3$E1GWBI4s2sG1,WQ*%6QF%@:DDC4>Sa$@m2"t2DR0I4q0V111=`X+?VG8@:h\G4>nrR0g6%/1GWDn4s2sD11Dt%+?VP;2`*]-4>Sa%1-QgC1GWDq4s2sG1,h-U%6QF%@Pg7k4>Sa%2*N-F2DR4"4q0V111E1++?VG8@Q?Up4>nrS0g6%/1GWEJ4s2sD11FcX+?VP;3&Nl/4>Sa%ANh5!1GWGr4s2sG1,r`,%6QF%@l?Ln4>Sa&3''JHI2DR:&4q0V111O`V+?VG8@q%VE4>ns''2EhR41GWHM4s2sD11OiY+?VP;@6$L\4>Sa&ANh5!1GWJq4s2sG11=]W%6QF%A26=k4>Sa''1d3$E2DS_s4q0V111W7++?VG8A2c[p4>ns(2EhR41GWKL4s2sD11XiX+?VP;@k^(U4>Sa(0g6^B1GWMs4s2sG11XoZ%6QF%AMZLm4>Sa(1d3$E2DSht4q0V111`@-+?VG8AN)dq4>ns+@6P,_1GWNN4s2sD11b#\+?VP;AiMs`4>Sa)0KpUA1GWPu4s2sG1GCUK%6QF%Ai)[o4>Sa)2a/?H2D[$q4q0V111iL0+?VG8AiW$t4>nuLAj-Yd1GWQN4s2sD11k&\+?VP<0etp%4>Sa)ANh5!1GWQS4s2sG1GLgP%6QF&0JYg74>ScI1HlpD2D[*H4q0V11GC[M+?VG90K20<4>nuN@m1>a1G^^E4s2sD1GCgQ+?VP<1GD!%4>ScI@6Per1G^^s4s2sG1G^gN%6QF&0ebd64>ScJ0g6^B2D[-u4q0V11GLXK+?VG90f2'':4>nuOAj-Yd1G^aD4s2sD1GLgP+?VP<1cIT-4>ScJ3BeQJ1G^aq4s2sG1GpmN%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaX1GNE(+?VG91,M0;4>nuQ2EhR41G^dE4s2sD1GUpR+?VP<2DdT,4>ScK@Qkns1G^dr4s2sG1H&i/%6QF&11WQk4>ScKAj.>"2D[9J4q0V11G^^K+?VG91GM''94>nuS3''Id61G^gB4s2sD1G^mP+?VP<2e,#\4>ScL2a/?H1G^gH4s2sG1H76U%6QF&1LiTk4>ScLANh5!2D[?L4q0V11GgdL+?VG91c@N?4>nuU3Bdm71G^jt4s2sD1GiW++?VP<@PL%U4>ScMANh5!1G^k"4s2sG1L`4*%6QF&2)IK>4>ScN2Ei6G2D\ht4q0V11Gq-U+?VG92*!iC4>o!*2a.[51G^ms4s2sD1GrZ++?VP<@pqP14>ScNANh5!1G^pC4s2sG1Lr:*%6QF&2DIB<4>ScO1HlpD2D\l&4q0V11H%''R+?VG92E!`A4>o!+@Qk5`1G^pL4s2sD1H&c-+?VP<AMcR[4>ScOANh5!1G^q$4s2sG1M(#Z%6QF&2_[E<4>ScP1-QgC2D\oV4q0V11H.3U+?VG92`X&E4>o!-3Bdm71G^t!4s2sD1H/f-+?VP=0Jbm%4>ScPA3M+u1G_!F4s2sG1b^gO%6QF&3&<`@4>ScQ1d3$E2Dd-C4q0V11H76U+?VG93&WrC4>o#N2*MI31G_!L4s2sD1H7BY+?VP=0fV?+4>ScQ@m2"t1G_"&4s2sG1bpgM%6QF&3A<W>4>ScR1-QgC2Dd0J4q0V11H@9U+?VG93B98G4>o#OANgPc1G_%#4s2sD1HAu0+?VP=1H.K,4>ScRANh5!1G_%''4s2sG1c&T)%6QF&@5:"h4>Sd%1HlpD2Dd6G4q0V11LW.)+?VG9@:;>B4>o#Q@Qk5`1G`HL4s2sD1LXiY+?VP=2)RQ,4>Sd%Aj.>"1G`Jp4s2sG1c79W%6QF&@P^1j4>Sd&3BeQJ2Dd<G4q0V11LafW+?VG9@UqYF4>o#S@6P,_1G`KP4s2sD1Li.''+?VP=2_[E)4>Sd''1-QgC1G`Ms4s2sG1cI6T%6QF&@l6Fm4>Sd''@6Per2Dd@&4q0V11LjrZ+?VG9A2HIm4>o#U3Bdm71G`Q"4s2sD1LrF.+?VP=3B'',24>Sd(3''JHI1G`QN4s2sG1c\u.%6QF&A7IeG4>Sd(ANh5!2Dehr4q0V11Lt)]+?VG9AMH@k4>o$)2EhR41G`TO4s2sD1M(&[+?VP=@lQX]4>Sd*0g6^B1G`Vu4s2sG1h8I-%6QF&Ai)[o4>Sd*2Ei6G2DerR4q0V11M1)[+?VG9AnF4L4>o$-2a.[51Ggd>4s2sD1b^XJ+?VP=ARmt64>SfJ1HlpD1GgdB4s2sG1hJU/%6QF''0Ju$:4>SfJ2Ei6G2Df#*4q0V11b^pR+?VG:0Od3g4>o&N0g6%/1Ggdr4s2sD1b`K)+?VP>0K20)4>SfJAj.>"1GggB4s2sG2)&H&%6QF''0f2'':4>SfK2*N-F2Dm3C4q0V11biH''+?VG:0kENk4>o&OANgPc1Gggu4s2sD1bpgM+?VP>1,_<*4>SfL1d3$E1GgjG4s2sG2)?pM%6QF''11<?h4>SfL@Qkns2Dm:#4q0V11brQ)+?VG:1GD!84>o&R0Koq.1GgmB4s2sD1c$mN+?VP>1c@N,4>SfM1HlpD1GgmE4s2sG2)J`*%6QF''1Gq?=4>SfM2Ei6G2Dm=%4q0V11c%*T+?VG:1LWHi4>o&S1-Q.01Ggn!4s2sD1c-mM+?VP>2.f#]4>SfN0g6^B1GgpD4s2sG2)[9T%6QF''1c%<<4>SfN2Ei6G2DmBO4q0V11c.-T+?VG:1c[`B4>o&TA3LGb1Ggq!4s2sD1c7-S+?VP>2`X&24>SfO2Ei6G1GgsK4s2sG2)mEV%6QF''2*!iC4>SfO@Qkns2DmHR4q0V11c8c,+?VG:2.\ro4>o&VA3LGb1Gh!H4s2sD1c@3T+?VP>3Fk;_4>SfP2a/?H1Gh!L4s2sG2.87(%6QF''2Inuo4>SfQ1-QgC2Dnqu4q0V11cI6T+?VG:2`3cA4>o''+@6P,_1Gh$K4s2sD1cIBX+?VP>@V%_44>SfQ@6Per1Gh%$4s2sG2.JR/%6QF''2eG5r4>SfR0KpUA2Do#!4q0V11cR3R+?VG:3&<`@4>o''-1Hl711Gh''J4s2sD1cSr.+?VP>A2la^4>SfRA3M+u1Gh(&4s2sG2.\R-%6QF''3+b>s4>SfS0KpUA2Do&S4q0V11c[9S+?VG:3A`oB4>o''/1-Q.01Gh*L4s2sD1c[HX+?VP>AiMs`4>SfS2a/?H1Gh+$4s2sG2.g;]%6QF''3Fk;r4>SfSANh5!2E!6G4q0V11c]/3+?VG:@50qg4>o)O2a.[51GiMs4s2sD1gr:++?VP?0ebd#4>Sg&2a/?H1GiN#4s2sG2DI*R%6QF''@:;>B4>Sg&@m2"t2E!9u4q0V11gsrZ+?VG:@PL%h4>o)Q0g6%/1GiPs4s2sD1h&@,+?VP?1-%N-4>Sg''3BeQJ1GiQL4s2sG2D[*P%6QF''@U_MD4>Sg''Aj.>"2E!?M4q0V11h/7(+?VG:@kp4j4>o)RAj-Yd1GiSt4s2sD1h/O0+?VP?1c.B*4>Sg(@6Per1GiTN4s2sG2Der.%6QF''@q.\F4>Sg(A3M+u2E!EH4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71GiTQ4s2sD1h1,]+?VP?2)mc/4>Sg)0KpUA1GiVs4s2sG2Dnr-%6QF''A2HIm4>Sg)2*N-F2E!HK4q0V11h8R0+?VG:A7IeG4>o)U3Bdm71GiWQ4s2sD1h:2^+?VP?2_dK*4>Sg*0g6^B1GiYu4s2sG2E*TZ%6QF''AMZLm4>Sg*2*N-F2E!L''4q0V11hAR/+?VG:AN2jr4>o)VAj-Yd1GiZO4s2sD1hC,[+?VP?3&Nl/4>Sg*@m2"t1GiZR4s2sG2E5,/%6QF''AS"%J4>Sg+0g6^B2E!O*4q0V11hJL,+?VG:Ai2ap4>o)X1-Q.01Gi]%4s2sD1hL/[+?VP?3B0234>Sg+@Qkns1Gi]T4s2sG2E>>4%6QF(0JG[54>SiK1-QgC2E"u#4q0V12)$gM+?VG;0Jks94>o*+3Bdm71GpjD4s2sD2)$pP+?VP?@:MJ14>SiK2a/?H1Gpjq4s2sG2IU2]%6QF(0Om9h4>SiKAj.>"2E##%4q0V12)-dK+?VG;0f)!94>o*,@6P,_1GpmD4s2sD2).''S+?VP?@V.e54>SiL@Qkns1GppG4s2sG2Ig/Z%6QF(1,hB>4>SiM3''JHI2E#))4q0V12)8T(+?VG;11EEi4>o*.ANgPc1Gppt4s2sD2)?pM+?VP?AMH@X4>SiN0g6^B1GpsD4s2sG2J"g2%6QF(1G_3;4>SiN1d3$E2E#,T4q0V12)@*R+?VG;1H.K?4>o*/A3LGb1GpsK4s2sD2)AZ)+?VP?Ai2a]4>SiN@Qkns1Gpsu4s2sG2J-A]%6QF(1M&`m4>SiNAj.>"2E*<E4q0V12)I!N+?VG;1c%<<4>o,P1d2@21Gq!H4s2sD2)I3T+?VP@0P*EW4>SiO2a/?H1Gq!L4s2sG2_d$N%6QF(1h&Wk4>SiOA3M+u2E*?M4q0V12)R''O+?VG;2)RQ?4>o,R0Koq.1Gq$M4s2sD2)Sf++?VP@1GV-''4>SiP@Qkns1Gq%$4s2sG2`!?U%6QF(2.f#p4>SiQ0KpUA2E*F$4q0V12)[0Q+?VG;2DRH=4>o,SANgPc1Gq''I4s2sD2)[<U+?VP@1c.B*4>SiQ2a/?H1Gq''M4s2sG2`+r,%6QF(2I\im4>SiQ@m2"t2E*KM4q0V12)\u/+?VG;2_dK=4>o,U2a.[51Gq*I4s2sD2)dBV+?VP@2DRH*4>SiR2Ei6G1Gq*M4s2sG2`<QX%6QF(2`NuD4>SiR3BeQJ2E*O''4q0V12)f&0+?VG;3&!N=4>o,W3''Id61Gq-J4s2sD2)mEV+?VP@3&3Z,4>SiS2*N-F1Gq-M4s2sG2`NZY%6QF(3&s/F4>SiS@m2"t2E*U*4q0V12)o,1+?VG;3A<W>4>o,Y0g6%/1Gq0L4s2sD2*!QY+?VP@3G(Ga4>SiT@m2"t1Gq1''4s2sG2e"L*%6QF(3G(Gt4>Sj''2Ei6G2E,)*4q0V12.8I.+?VG;@PL%h4>o-.2*MI31GrVs4s2sD2.AC++?VP@A2QO[4>Sj(3''JHI1GrW%4s2sG2e=d/%6QF(@UVGC4>Sj(@m2"t2E,2*4q0V12.C)[+?VG;@V%_G4>o-0@6P,_1GrWR4s2sD2.J=(+?VP@ARmt64>Sj)1-QgC1GrZ&4s2sG2eFp2%6QF(@q%VE4>Sj)ANh5!2E3BF4q0V12.SL,+?VG;A2HIm4>o/R1d2@21Gr]#4s2sD2.S^2+?VPA0fV?+4>Sj*@6Per1Gr]Q4s2sG3&+u.%6QF(A7RkH4>Sj+1HlpD2E3HI4q0V12.\U.+?VG;ARRbF4>o/S@Qk5`1Gr`Q4s2sD2.^;^+?VPA1Gh9)4>Sj+ANh5!1Gr`U4s2sG3&=u,%6QF(Ai;gq4>Sj,Aj.>"2E3QP4q0V12D?jL+?VG<0K;6=4>o/W@m1>a1H$pq4s2sD2DHsN+?VPA2`Nu14>SlM2*N-F1H$st4s2sG3&ii\%6QF)0k<Hj4>SlMAj.>"2E3]N4q0V12DQsM+?VG<1,;$94>o/Z1d2@21H%!E4s2sD2DR0S+?VPA3B9844>SlN3''JHI1H%!K4s2sG3+4L)%6QF)11<?h4>SlN@m2"t2E5,$4q0V12DSf,+?VG<1GD!84>o0-3Bdm71H%$E4s2sD2D[-Q+?VPA@PL%U4>SlO2*N-F1H%%#4s2sG3+=d0%6QF)1b_*94>SlP2*N-F2E52&4q0V12DdBW+?VG<1h&Wk4>o0/ANgPc1H%("4s2sD2Der.+?VPAA2?CY4>SlPAj.>"1H%*G4s2sG3+QJ^%6QF)2)@E=4>SlQ1d3$E2E58&4q0V12Dm?U+?VG<2)d]A4>o011d2@21H%*M4s2sD2Do#/+?VPAAN2j_4>SlQAj.>"1H%-G4s2sG3+ap0%6QF)2DRH=4>SlR1d3$E2E5;,4q0V12E!HW+?VG<2E<rD4>o02A3LGb1H%."4s2sD2E#&/+?VPB0JYg$4>SlRA3M+u1H%0H4s2sG3A<?T%6QF)2`*]@4>SlSAj.>"2E<KJ4q0V12E3BS+?VG<3&3Z?4>o2T0g6%/1H%3K4s2sD2E5,/+?VPB1,V6)4>SlT@Qkns1H%4&4s2sG3AP/0%6QF)3+P2q4>SlTAj.>"2E<QJ4q0V12E<HT+?VG<3AWiA4>o2U2*MI\DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>SlU1d3$E1H%6O4s2sG3AY)-%6QF)3B02F4>SlU3BeQJ2E<TJ4q0V12E>20+?VG<@5''kf4>o2V1Hl711H&Yr4s2sD2ISR/+?VPB1h&WX4>Sm(3BeQJ1H&ZM4s2sG3AiZX%6QF)@:DDC4>Sm(@m2"t2E<WS4q0V12IU,[+?VG<@:_VF4>o2W@Qk5`1H&\r4s2sD2I\C)+?VPB2DIB)4>Sm)1-QgC1H&\u4s2sG3Ar]X%6QF)@Pp=l4>Sm)2Ei6G2E<ZU4q0V12I\X0+?VG<@Q?Up4>o2XAj-Yd1H&]N4s2sD2I^/[+?VPB2_mQ+4>Sm)ANh5!1H&]S4s2sG3B(A1%6QF)@k^(h4>Sm*1-QgC2E<^,4q0V12IeX/+?VG<@lQXp4>o2Z@6P,_1H&`''4s2sD2Ig;^+?VPB3+Y8_4>Sm*Aj.>"1H&bt4s2sG3B8u]%6QF)A2-7j4>Sm+1-QgC2E<cX4q0V12InU-+?VG<A7IeG4>o2[A3LGb1H&cU4s2sD2J"R++?VPB@:h\44>Sm,0g6^B1H&f"4s2sG3FXa-%6QF)AMZLm4>Sm,1d3$E2E>5(4q0V12J"a0+?VG<AN)dq4>o3/3''Id61H&f(4s2sD2J$;\+?VPB@UhS24>Sm,@m2"t1H&i$4s2sG3Fag.%6QF)Ai2ap4>Sm-2a/?H2E>;&4q0V12J+p4+?VG<An4(J4>o312*MI31H&iV4s2sD2J-Pb+?VPBA7Ie44>SoM0g6^B1H.!G4s2sG3Fsp/%6QF*0K20<4>SoM@Qkns2E>>.4q0V12_\`*+?VG=0P3Kk4>o32ANgPc1H.$B4s2sD2_d9U+?VPBAi)[\4>SoN@Qkns1H.$u4s2sG@5''K$%6QF*0k<Hj4>SoO0KpUA2IS9t4q0V12_m*O+?VG=1,qH?4>pV%@Qk5`1H.''L4s2sD2_ni++?VPj0f2''''4>SoO@m2"t1H.($4s2sG@521S%6QF*1GV-:4>SoP2*N-F2IS?t4q0V12`!BV+?VG=1LWHi4>pV''@Qk5`1H.+"4s2sD2`##/+?VPj1GV-''4>SoPAj.>"1H.-E4s2sG@5Bf*%6QF*1bh0:4>SoQ1-QgC2ISCN4q0V12`*<S+?VG=1cIT@4>pV(Aj-Yd1H.-M4s2sD2`*NY+?VPj1c7H+4>SoQ@6Per1H.."4s2sG@5Ku.%6QF*1h/]l4>SoQAj.>"2ISFP4q0V12`39Q+?VG=2)[W@4>pV*0g6%/1H.0N4s2sD2`5#-+?VPj2.JfZ4>SoR@m2"t1H.1%4s2sG@5]o*%6QF*2.\ro4>SoS3''JHI2ISL%4q0V12`<Z[+?VG=2J,,q4>pV,1-Q.01H.6H4s2sD2`EHT+?VPj2dnlZ4>SoT1-QgC1H.6L4s2sG@5h^\%6QF*2`3cA4>SoT2a/?H2ISR"4q0V12`E][+?VG=2e"rn4>pV-2*MI31H.7&4s2sD2`G>4+?VPj3+4u[4>SoU0g6^B1H.9K4s2sG@6$),%6QF*3&<`@4>SoU1d3$E2ISU''4q0V12`NZY+?VG=3&j)E4>pV.3''Id61H.9R4s2sD2`P81+?VPj3Fk;_4>SoUA3M+u1H.<K4s2sG@::uV%6QF*3AWiA4>SoV1d3$E2IU$)4q0V12`W`Z+?VG=3B'',E4>pVW0Koq.1H.<R4s2sD2`Y>2+?VPj@Pg7X4>SoV@m2"t1H.=)4s2sG@:D5\%6QF*3FtAs4>Sp)1d3$E2IU'')4q0V12dnR-+?VG=@P^1j4>pVX1d2@21H/c"4s2sD2e"d2+?VPjA2HIZ4>Sp*@Qkns1H/eu4s2sG@:_,V%6QF*@l-@l4>Sp+3BeQJ2IU0-4q0V12e-8[+?VG=@q7bG4>pV[1d2@21H/fT4s2sD2e-G`+?VPjAiW$a4>Sp,0KpUA1H/i''4s2sG@:j"5%6QF*A2laq4>Sp,@m2"t2I\?t4q0V12e6G_+?VG=AM?:j4>pY&@Qk5`1H/l"4s2sD2e=a.+?VPk0ebd#4>Sp-1HlpD1H/l&4s2sG@PKZ&%6QF*AMu^p4>Sp-@m2"t2I\C"4q0V12e?Pa+?VG=AS++K4>pY(2*MI31H/o"4s2sD2eG''6+?VPk1,qH,4>Sp.@6Per1H/oV4s2sG@P]f(%6QF+0JPa64>SrN1d3$E2I\IS4q0V13&!3R+?VG>0K)*;4>pY*1d2@21H7''J4s2sD3&!?V+?VPk1grQW4>SrN@6Per1H7''u4s2sG@PhUZ%6QF+0P!?i4>SrO1d3$E2I\Nu4q0V13&*9S+?VG>0f_E?4>pY+@6P,_1H7*u4s2sD3&+o,+?VPk2E3l04>SrOA3M+u1H7-G4s2sG@Q%[Z%6QF+1,M0;4>SrP2a/?H2I\U$4q0V13&3KX+?VG>11NKj4>pY-A3LGb1H70E4s2sD3&<?S+?VPk3+Y8_4>SrQ1d3$E1H70J4s2sG@Q?8/%6QF+1H7Q@4>SrQ3BeQJ2I\[V4q0V13&=u,+?VG>1L`Nj4>pY/Aj-Yd1H71#4s2sD3&>)/+?VPk@5:"U4>SrQANh5!1H73H4s2sG@UV,X%6QF+1c%<<4>SrR1d3$E2I^*)4q0V13&EKV+?VG>1c@N?4>pYX0Koq.1H73N4s2sD3&EWZ+?VPk@Q6O\ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QF+1grQj4>SrR@m2"t2I^-*4q0V13&G21+?VG>1hJoo4>pYY1Hl711H76G4s2sD3&NKU+?VPk@lHR\4>SrS2Ei6G1H76N4s2sG@Uq/V%6QF+2.8Zk4>SrSANh5!2I^3,4q0V13&P;3+?VG>2E!`A4>pY[1-Q.01H79O4s2sD3&Wc\+?VPkARdn54>SrT@6Per1H7:&4s2sG@V.;X%6QF+2J#&p4>SrU0KpUA2I^8V4q0V13&`QU+?VG>2`!W?4>pY\@6P,_1H7<N4s2sD3&`i]+?VPl0JG["4>SrU@6Per1H7=''4s2sG@k]o,%6QF+3&!N=4>SrV1-QgC2IeIO4q0V13&il]+?VG>3&s/F4>p\*2EhR41H7@&4s2sD3&kG4+?VPl1H@W.4>SrVANh5!1H7@+4s2sG@l%[[%6QF+3A<W>4>SrW1-QgC2IeR"4q0V13&rfZ+?VG>3B02F4>p\+@Qk5`1H7BT4s2sD3&tG3+?VPl2).9(4>SrWA3M+u1H7C,4s2sG@l650%6QF+@5''kf4>Ss*0g6^B2IeX#4q0V13+4R++?VG>@5L.j4>p\-2*MI31H8f#4s2sD3+4g2+?VPl2I\iZ4>Ss*A3M+u1H8fS4s2sG@lH>1%6QF+@:h\G4>Ss+0g6^B2Ie[S4q0V13+=X,+?VG>@P^1j4>p\.Aj-Yd1H8i%4s2sD3+=g1+?VPl3+4u[4>Ss+3''JHI1H8i(4s2sG@lS!_%6QF+@UVGC4>Ss+@Qkns2Iea%4q0V13+?A]+?VG>@V.eH4>p\02*MI31H8l!4s2sD3+Fa.+?VPl3Fb5^4>Ss,3''JHI1H8l)4s2sG@prt5%6QF+@pqPD4>Ss,A3M+u2Ig2Q4q0V13+HPa+?VG>A26=k4>p\Z0Koq.1H8o$4s2sD3+Om1+?VPl@l?L[4>Ss-2a/?H1H8o*4s2sG@q0%5%6QF+A77YE4>Ss-@Qkns2Ig8P4q0V13+QM_+?VG>A7[qI4>p\[3''Id61H8oW4s2sD3+Xd-+?VPlA7Ie44>Ss.1HlpD1H8r&4s2sG@q@P^%6QF+AMu^p4>Ss.2a/?H2Ig<.4q0V13+ZP_+?VG>ARdnH4>p\]Aj-Yd1H8rV4s2sD3+ZYb+?VPm0JYg$4>Ss.Aj.>"1H8u#4s2sGA2#l)%6QF+AhcIl4>Ss/1HlpD2InL$4q0V13+b$3+?VG>AiDmr4>p_(Aj-Yd1H8u+4s2sD3+cV`+?VPm0f)!&4>Ss/A3M+u1H8uX4s2sGA2.RX%6QF,0JG[54>SuO1d3$E2InQs4q0V13A<?T+?VG?0K20<4>p_*3''Id61H@-K4s2sD3A<HW+?VPm11NKW4>SuO@6Per1H@-u4s2sGA27a\%6QF,0P!?i4>SuOAj.>"2InU%4q0V13AE6P+?VG?0etp84>p_+Aj-Yd1H@0L4s2sD3AFu,+?VPm2)RQ,4>SuPAj.>"1H@3E4s2sGA2Z/+%6QF,1,1s84>SuQ1-QgC2In^&4q0V13ANBS+?VG?1,M0;4>p_.2a.[51H@3J4s2sD3ANNW+?VPm2I\iZ4>SuQ3''JHI1H@4"4s2sGA2c2+%6QF,11NKj4>SuQA3M+u2Ina(4q0V13AP/0+?VG?11i]m4>p_/@6P,_1H@6F4s2sD3AWKU+?VPm2e5)]4>SuR2*N-F1H@6L4s2sGA2lA/%6QF,1H7Q@4>SuR3BeQJ2IndU4q0V13AY,.+?VG?1LiTk4>p_0Aj-Yd1H@7&4s2sD3A`KT+?VPm3As&14>SuS2Ei6G1H@9N4s2sGA78t3%6QF,1cRZA4>SuS3BeQJ2Ip8N4q0V13Ab/.+?VG?1h&Wk4>p_Z1Hl711H@:%4s2sD3Ab81+?VPm@Q$CZ4>SuSANh5!1H@<K4s2sGA7@P_%6QF,2)IK>4>SuT2Ei6G2Ip;P4q0V13Ai`Z+?VG?2*!iC4>p_[3''Id61H@=$4s2sD3Ak>2+?VPm@q7b44>SuTANh5!1H@?J4s2sGA7RGZ%6QF,2D[N>4>SuU2*N-F2Ip?,4q0V13Arf[+?VG?2E3lC4>p_]1-Q.01H@@%4s2sD3AtA2+?VPmAN)d^4>SuUANh5!1H@@*4s2sGA7]@:%6QF,2`!W?4>SuV@6Per2IpE14q0V13B(D2+?VG?2e>/q4>pb)2EhR41H@EL4s2sD3B/cX+?VPn0etp%4>SuW1d3$E1H@EP4s2sGAMH/.%6QF,3&WrC4>SuW2a/?H2J"UP4q0V13B/u^+?VG?3&s/F4>pb*ANgPc1H@F(4s2sD3B1M4+?VPn1,hB+4>SuWAj.>"1H@HL4s2sGAMZ#(%6QF,3ANc@4>SuX1d3$E2J"[%4q0V13B8u]+?VG?3B02F4>pb,@Qk5`1H@HU4s2sD3B:S5+?VPn1M/f[4>SuXA3M+u1HAl#4s2sGAMc8.%6QF,@5U4k4>T!+3''JHI2J"^W4q0V13FQA\+?VG?@:MJD4>pb.3Bdm71HAlS4s2sD3FQJ_+?VPn2.JfZ4>T!+Aj.>"1HAo)4s2sGAMu5+%6QF,@UVGC4>T!,@Qkns2J"dV4q0V13FZJ^+?VG?@lZ^q4>pb00Koq.1HArR4s2sD3FcP_+?VPn3&!N*4>T!-ANh5!1HArW4s2sGAN2V4%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaX3Fjg-+?VG?A2HIm4>pb1@6P,_1HAu''4s2sD3Fk-6+?VPn3AE],4>T!.@Qkns1HAuV4s2sGAN;b7%6QF,A7e"J4>T!/0KpUA2J$;N4q0V13Fsp/+?VG?AMQFl4>pbZ1Hl711HB#''4s2sD3Ft''3+?VPn@5pF[4>T!/2Ei6G1HB#,4s2sGART%3%6QF,ARmtI4>T!/ANh5!2J$>W4q0V13G''s/+?VG?AhlOm4>pb[ANgPc1HB&)4s2sD3G(36+?VPn@lQX]4>T!0@m2"t1HB&X4s2sGARmba%6QF,An=.K4>T!0Aj.>"2J$E.4q0V1@5''K$+?VGg0Jks94>pb^@6P,_1LVsp4s2sD@5''T''+?VPnARmt64>UD"2a/?H1LVss4s2sGAS*V[%6QFT0O[-f4>UD"@Qkns2J$JX4q0V1@5)1T+?VGg0ebd64>pb_@6P,_1LW!n4s2sD@50T&+?VPo0Jbm%4>UD#2*N-F1LW!r4s2sGAhZ/-%6QFT0fM9=4>UD#@Qkns2J+XO4q0V1@527U+?VGg0kENk4>pe+0Koq.1LW"M4s2sD@59T%+?VPo0fD3)4>UD$1HlpD1LW$t4s2sGAhdaY%6QFT1-%N@4>UD$@m2"t2J+^%4q0V1@5;FY+?VGg1GD!84>pe-1d2@21LW''p4s2sD@5Bf*+?VPo1H@W.4>UD%3''JHI1LW(K4s2sGAi)8,%6QFT1LiTk4>UD%ANh5!2J+d*4q0V1@5KZ%+?VGg1bq6;4>pe.ANgPc1LW*r4s2sD@5Kf)+?VPo2)7?)4>UD&2*N-F1LW+!4s2sGAi2G0%6QFT1cRZA4>UD&3BeQJ2J+gT4q0V1@5MFW+?VGg1h8cm4>pe/Aj-Yd1LW-p4s2sD@5To++?VPo2E*f/4>UD''3''JHI1LW.$4s2sGAiDS2%6QFT2.Jfm4>UD''A3M+u2J+mY4q0V1@5VU[+?VGg2D@<;4>pe20g6%/1LW0s4s2sD@5]o*+?VPo3+4u[4>UD(1d3$E1LW1N4s2sGAiOBd%6QFT2Ieon4>UD(Aj.>"2J+s/4q0V1@5fl(+?VGg2_mQ>4>pe3A3LGb1LW3u4s2sD@5g#,+?VPo@5:"U4>UD)2*N-F1LW4#4s2sGAmmP\%6QFT2`NuD4>UD)@Qkns2J-B+4q0V1@5h[[+?VGg2e5)p4>pe[Aj-Yd1LW4S4s2sD@5or)+?VPo@Pg7X4>UD*0g6^B1LW6u4s2sGAn!\_%6QFT3&<`@4>UD*3''JHI2J-E,4q0V1@5p82+?VGg3+P2q4>pe]1d2@21LW7S4s2sD@6$/.+?VPo@pqP14>UD+2*N-F1LW:%4s2sGAn3\]%6QFT3B'',E4>UD+3''JHI2J-JX4q0V1@6$>3+?VGg3FP)o4>pe^3Bdm71LW:Q4s2sD@6%g]+?VPoA7Ie44>UD+A3M+u1LW:T4s2sGAn<_]%6QFT3G(Gt4>UDS1d3$E2J-MX4q0V1@:;#W+?VGg@5^:l4>pe_@m1>a1LX]N4s2sD@:<_2+?VPoAhlOZ4>UDT0g6^B1LX`N4s2sGAnGX=%6QFT@Q-In4>UDT3''JHI2_ZpE4q0V1@:EY/+?VGg@UhSE4?"rJ@m1>a1LXa(4s2sD@:LuT+?VS:0etp%4>UDU0g6^B1LXcK4s2sH0JPIL%6QFT@l?Ln4>UDU2a/?H2_[!A4q0V1@:M8\+?VGg@pqPD4?"rL1d2@21LXd&4s2sD@:V)V+?VS:1-%N-4>UDV1HlpD1LXfN4s2sH0JbLK%6QFTA2QOn4>UDV2a/?H2_[$G4q0V1@:V>]+?VGgA7@_F4?"rM@6P,_1LXg(4s2sD@:Wt6+?VS:1M/f[4>UDW0KpUA1LXiQ4s2sH0JkXN%6QFTAN)dq4>UDW3''JHI2_[(!4q0V1@:`k2+?VGgARdnH4?"rO1-Q.01LXj*4s2sD@:a"6+?VS:2)[W-4>UDWAj.>"1LXlN4s2sH0JtjS%6QFTAhuUn4>UDX2Ei6G2_[+$4q0V1@:hG^+?VGgAiMss4?"rP2*MI31LXlU4s2sD@:it4+?VS:2E3l04>UDXA3M+u1LXm-4s2sH0K1^M%6QFU0JYg74>UG#1d3$E2_[0N4q0V1@PB](+?VGh0KD<>4?"rR0g6%/1L`%H4s2sD@PD:U+?VS:3&Wr04>UG#A3M+u1L`%M4s2sH0K<N*%6QFU0ebd64>UG$1-QgC2_[4''4q0V1@PK]''+?VGh0f;-;4?"rS2a.[51L`''s4s2sD@PKf*+?VS:3FP)\4>UG$3''JHI1L`*r4s2sH0KE].%6QFU1,hB>4>UG%3BeQJ2_\\t4q0V1@PVCV+?VGh11NKj4?"s''ANgPc1L`+M4s2sD@P]]%+?VS:@l-@Y4>UG&1-QgC1L`-t4s2sH0OnQU%6QFU1H%E>4>UG&A3M+u2_\br4q0V1@P_U[+?VGh1bh0:4?"s)@m1>a1L`0r4s2sD@Pfr++?VS:AM?:W4>UG''3BeQJ1L`1N4s2sH0P3"&%6QFU1h8cm4>UG''ANh5!2_\i$4q0V1@Poi''+?VGh2)7?<4?"s+@6P,_1L`3t4s2sD@Pq[[+?VS:An=.84>UG(ANh5!1L`6t4s2sH0ed''#%6QFU2D[N>4>UG)1d3$E2_d$A4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71L`7$4s2sD@Q%^[+?VS;0k*<U4>UG)A3M+u1L`9s4s2sH0etLJ%6QFU2_dK=4>UG*3''JHI2_d''H4q0V1@Q-;2+?VGh2e,#o4?"uN1-Q.01L`:R4s2sD@Q7d[+?VS;1H.K,4>UG+@Qkns1L`=S4s2sH0f1dP%6QFU3A<W>4>UG,1-QgC2_d.$4q0V1@Q?5.+?VGh3FY/p4?"uP1Hl711L`@T4s2sD@QA$a+?VS;2.f#]4>UGT1-QgC1LacK4s2sH0fEH(%6QFU@5U4k4>UGT2a/?H2_d4&4q0V1@UV5[+?VGh@:DDC4?"uR1d2@21Lad''4s2sD@UWh3+?VS;2e"r[4>UGTAj.>"1LafM4s2sH0fNZ-%6QFU@Pp=l4>UGU3BeQJ2_d9L4q0V1@U`b0+?VGh@UqYF4?"uS@Qk5`1Lag)4s2sD@U`q5+?VS;3A<W+4>UGV0g6^B1LaiL4s2sH0f_*T%6QFU@l$:k4>UGV2a/?H2_d=$4q0V1@UhA]+?VGh@q@hH4?#!''0g6%/1Laj+4s2sD@Uq2W+?VS;@6$L\4>UGW1-QgC1LalP4s2sH0k"TV%6QFUA2laq4>UGW@6Per2_ec"4q0V1@Urq3+?VGhA7[qI4?#!(@6P,_1Lam,4s2sD@V%5W+?VS;@V.e54>UGX1-QgC1LaoQ4s2sH0k3%(%6QFUAMu^p4>UGX@6Per2_ef&4q0V1@V''"4+?VGhARmtI4?#!)Aj-Yd1Lap-4s2sD@V.>Y+?VS;A2ZU\4>UGY1-QgC1LarP4s2sH0k=]V%6QFUAi)[o4>UGY2*N-F2_eiR4q0V1@V.M^+?VGhAiW$t4?#!+0g6%/1Las)4s2sD@V018+?VS;AN2j_4>UJ$0KpUA1Li*p4s2sH0kN+''%6QFV0Jks94>UJ$2a/?H2_eo%4q0V1@k]l++?VGi0KD<>4?#!,@6P,_1Li+J4s2sD@kf]%+?VS;AnF494>UJ%1-QgC1Li-u4s2sH1,(XN%6QFV0fV?>4>UJ%3BeQJ2_m''u4q0V1@khCU+?VGi1,D*:4?##M0g6%/1Li0t4s2sD@kqUZ+?VS<0kENX4>UJ''0g6^B1Li3s4s2sH1,<B(%6QFV1Gh9<4>UJ''2*N-F2_m0F4q0V1@l$&-+?VGi1LrZl4?##P0Koq.1Li4P4s2sD@l,l''+?VS<1c[`/4>UJ(0g6^B1Li6u4s2sH1,NQ+%6QFV1c7H>4>UJ(2a/?H2_m6H4q0V1@l.^[+?VGi1hJoo4?##R1Hl711Li9s4s2sD@l6),+?VS<2IScY4>UJ)2*N-F1Li:#4s2sH1,gmN%6QFV2)d]A4>UJ)3''JHI2_m<J4q0V1@l681+?VGi2.A`l4?##S2EhR41Li:P4s2sD@l7d\+?VS<2e"r[4>UJ)ANh5!1Li:S4s2sH1,q$Q%6QFV2D@<;4>UJ*1d3$E2_m?M4q0V1@l?80+?VGi2E3lC4?##U0Koq.1Li=''4s2sD@l@d[+?VS<3AWi.4>UJ*@m2"t1Li@"4s2sH1-%9W%6QFV2`*]@4>UJ+2*N-F2_neq4q0V1@lH;0+?VGi2`X&E4?#$(1Hl711Li@P4s2sD@lIp^+?VS<@5pF[4>UJ+Aj.>"1LiC!4s2sH11Dt%%6QFV3&<`@4>UJ,3''JHI2_niN4q0V1@lQJ4+?VGi3+>&o4?#$*2*MI31LiCS4s2sD@lS''a+?VS<@lZ^^4>UJ-1-QgC1LiF&4s2sH11W1)%6QFV3B'',E4>UJ-@6Per2_noP4q0V1@l\$_+?VGi@50qg4?#$,1-Q.01LjiK4s2sD@pq/W+?VS<ARRb34>UJU1d3$E1LjiN4s2sH11iC-%6QFV@5^:l4>UJU3''JHI2_nuV4q0V1@pre0+?VGi@:h\G4?#&M1d2@21LjlJ4s2sD@q%2W+?VS=0Od3T4>UJV1HlpD1LjlP4s2sH1GEE)%6QFV@Q6Oo4>UJV@6Per2`!0J4q0V1@q&n2+?VGi@UhSE4?#&NAj-Yd1Ljm)4s2sD@q''"5+?VS=1,D*''4>UJVAj.>"1LjoL4s2sH1GUjP%6QFV@l$:k4>UJW1d3$E2`!4$4q0V1@q.A[+?VGi@l?Ln4?#&P1-Q.01LjoT4s2sD@q/q2+?VS=1LiTX4>UJW@m2"t1Ljp*4s2sH1GgjN%6QFV@q@hH4>UJX1d3$E2`!9K4q0V1@q7G\+?VGiA2ZUo4?#&QANgPc1LjrT4s2sD@q9%4+?VS=2)@E*4>UJX@m2"t1LjuP4s2sH1Gq-U%6QFVAMcRn4>UJY@6Per2`!?H4q0V1@qB48+?VGiAS++K4?#&T1Hl711Lk#R4s2sD@qIV_+?VS=3&*T+4>UJZ2a/?H1Lk#V4s2sH1H76U%6QFVAn!qH4>UJZ@m2"t2`!F''4q0V1@qK78+?VGiAn=.K4?#&UAj-Yd1Lr0n4s2sDA2#c&+?VS=3AWi.4>UM%1HlpD1Lr0t4s2sH1H@BX%6QFW0K20<4>UM%3BeQJ2`!I(4q0V1A2%FU+?VGj0Od3g4?#'')0Koq.1Lr1L4s2sDA2,f&+?VS=@5C(V4>UM&1HlpD1Lr3s4s2sH1LXcW%6QFW0fD3<4>UM&3''JHI2`"o"4q0V1A2-).+?VGj0k!6g4?#''*3''Id_DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>UM&@Qkns1Lr4O4s2sH1LaiX%6QFW1,(m74>UM''1d3$E2`"r"4q0V1A26#++?VGj1,_<=4?#''+@Qk5`1Lr7#4s2sDA27^[+?VS=A26=X4>UM''Aj.>"1Lr9s4s2sH1LsoX%6QFW1Gh9<4>UM(2a/?H2`##"4q0V1A2@XX+?VGj1LiTk4?#''-@6P,_1Lr:P4s2sDA2Gu(+?VS=AS"%74>UM)0g6^B1Lr=O4s2sH1M/F,%6QFW1h/]l4>UM)Aj.>"2`#&X4q0V1A2Q)*+?VGj2)7?<4?#)N2a.[51Lr@!4s2sDA2Q8/+?VS>0Od3T4>UM*2a/?H1Lr@T4s2sH1bg^K%6QFW2D@<;4>UM+2*N-F2`*7!4q0V1A2Z>0+?VGj2E*fB4?#)P1Hl711LrCS4s2sDA2\!_+?VS>1GM''&4>UM+Aj.>"1LrF#4s2sH1c%''S%6QFW2`*]@4>UM,2*N-F2`*=$4q0V1A2cG2+?VGj2eG5r4?#)R1-Q.01LrI!4s2sDA2lP4+?VS>1h/]Y4>UM-@m2"t1LrIV4s2sH1c@$O%6QFW3+b>s4>UM.1HlpD2`*EL4q0V1A2uJ1+?VGj3AiuC4?#)T@Qk5`1LrL(4s2sDA2uS4+?VS>2J#&]4>UM.3''JHI1LrLU4s2sH1cI-Q%6QFW3Fk;r4>UMV1-QgC2`*HQ4q0V1A77>Z+?VGj@5g@m4?#)V1d2@21Lsp&4s2sDA78q2+?VS>3+G,]4>UMVA3M+u1LsrR4s2sH1c[9S%6QFW@Q?Up4>UMW@m2"t2`*O,4q0V1A7B(5+?VGj@V%_G4?#**1d2@21Lss,4s2sDA7IG[+?VS>@:;>/4>UMX2*N-F1Lt!+4s2sH1h&1''%6QFW@q@hH4>UMXAj.>"2`+uQ4q0V1A7RAX+?VGjA7@_F4?#*+ANgPc1Lt$+4s2sDA7T:9+?VS>@q%V24>UMZ0KpUA1Lt&O4s2sH1h8:(%6QFWAMZLm4>UMZ2a/?H2`,&&4q0V1A7]:8+?VGjAhuUn4?#*.2a.[51Lt)S4s2sDA7dba+?VS>AhZCX4>UM[3BeQJ1Lt*04s2sH1hJ^2%6QFX0JG[54>UP&1HlpD2`39C4q0V1AM>r)+?VGk0O[-f4?#,O2*MI31M&7O4s2sDAMGo''+?VS?0f2''''4>UP''1HlpD1M&9t4s2sH2)/W*%6QFX0f;-;4>UP''2a/?H2`3?E4q0V1AMH2/+?VGk0k!6g4?#,Q2EhR41M&<q4s2sDAMPu(+?VS?1LiTX4>UP(1HlpD1M&="4s2sH2)I$O%6QFX1,hB>4>UP(3''JHI2`3EM4q0V1AMQ80+?VGk11<?h4?#,S3Bdm71M&=O4s2sDAMRj]+?VS?2)%3''4>UP)0KpUA1M&?u4s2sH2)R6T%6QFX1Gh9<4>UP)2a/?H2`3I(4q0V1AMZ;0+?VGk1H@WA4?#,U1Hl711M&@N4s2sDAM[g[+?VS?2E*f/4>UP)A3M+u1M&Bu4s2sH2)\r.%6QFX1c@N?4>UP*@6Per2`3O&4q0V1AMdj[+?VGk1h8cm4?#,W0Koq.1M&CS4s2sDAMe!_+?VS?3&Ef.4>UP+0KpUA1M&F!4s2sH2)mQZ%6QFX2)@E=4>UP+2*N-F2`3R)4q0V1AMmm[+?VGk2.A`l4?#,X@Qk5`1M&FT4s2sDAMu;-+?VS?@5^:Y4>UP,1d3$E1M&I%4s2sH2.AI-%6QFX2E!`A4>UP,2a/?H2`5&Q4q0V1AMuM3+?VGk2IScl4?#-,Aj-Yd1M&IS4s2sDAN"''_+?VS?@q%V24>UP,ANh5!1M&L"4s2sH2.L2]%6QFX2`3cA4>UP-2Ei6G2`5,U4q0V1AN)P3+?VGk2`X&E4?#-.Aj-Yd1M&LT4s2sDAN+3b+?VS?ARdn54>UP.0KpUA1M&O#4s2sH2.eU-%6QFX3&3Z?4>UP.2*N-F2`52)4q0V1AN2S3+?VGk3&a#D4?#-0@6P,_1M&O*4s2sDAN2\6+?VS?An4(74>UP.@Qkns1M&OW4s2sH2D@$Q%6QFX3+b>s4>UP/0KpUA2`<@$4q0V1AN;J/+?VGk3A`oB4?#/Q0g6%/1M&R*4s2sDAN;_6+?VS@0k3BV4>UP/@m2"t1M&RW4s2sH2DSi-%6QFX3FtAs4>UP/Aj.>"2`<HH4q0V1ARR8V+?VGk@50qg4?#/S2EhR41M''uM4s2sDARRAY+?VS@1H@W.4>UPW2Ei6G1M''uR4s2sH2Dd6S%6QFX@6$Lo4>UPW@6Per2`<L$4q0V1ART%3+?VGk@PBtg4?#/TANgPc1M(#O4s2sDAR[M\+?VS@2*!i04>UPX2a/?H1M(#T4s2sH2E!6Q%6QFX@UhSE4>UPY0KpUA2`<TN4q0V1ARdGY+?VGk@kp4j4?#/W3Bdm71M(&P4s2sDARdS]+?VS@2eG5_4>UPY3''JHI1M(&V4s2sH2E3]\%6QFX@pqPD4>UPY@Qkns2`<X*4q0V1ARf46+?VGk@q7bG4?#/XAj-Yd1M(''.4s2sDARmJY+?VS@3A`o/4>UPZ0g6^B1M()P4s2sH2E<][%6QFXA2?Cl4>UPZ@Qkns2`<[*4q0V1ARo:7+?VGkAMcRn4?#0,2*MI31M(,T4s2sDAS!b`+?VS@@:h\4ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QFXAN2jr4>UP[@6Per2`>,&4q0V1AS#@8+?VGkAS++K4?#0-@Qk5`1M(/P4s2sDAS*Y\+?VS@@k^(U4>UP\1-QgC1M(/S4s2sH2IeO,%6QFXAi;gq4>UP\2a/?H2`>/T4q0V1AS,@7+?VGkAn!qH4?#0/3Bdm71M(0.4s2sDAS,I:+?VS@A7Ie44>US''0g6^B1M/=!4s2sH2J"j3%6QFY0KD<>4>US''@Qkns2`>8*4q0V1Ah[^Y+?VGl0P!?i4?#01@6P,_1M/=Q4s2sDAhbu''+?VS@AnF494>US(0g6^B1M/?s4s2sH2_[!N%6QFY0f)!94>US(1d3$E2`EEJ4q0V1Ahc5.+?VGl1,1s84?#2QANgPc1M/Bt4s2sDAhl5-+?VSA0k*<U4>US)2a/?H1M/C&4s2sH2_m0Q%6QFY11EEi4>US)A3M+u2`EL#4q0V1Ahms^+?VGl1G_3;4?#2T0Koq.1M/F$4s2sDAhuD1+?VSA1LrZY4>US*@6Per1M/FQ4s2sH2`*?T%6QFY1LrZl4>US+1HlpD2`EQQ4q0V1Ai)>.+?VGl1h&Wk4?#2V1-Q.01M/IR4s2sDAi+$^+?VSA2.JfZ4>US+ANh5!1M/IU4s2sH2`522%6QFY2)7?<4>US,1HlpD2`EWT4q0V1Ai2D/+?VGl2.f#p4?#2WA3LGb1M/O!4s2sDAi;D.+?VSA2dnlZ4>US-1HlpD1M/O&4s2sH2`NNU%6QFY2E!`A4>US-@Qkns2`E]S4q0V1Ai=-_+?VGl2Inuo4?#2YAj-Yd1M/OV4s2sDAiDJ/+?VSA3AWi.4>US.1HlpD1M/R)4s2sH2`Wl^%6QFY2`X&E4>US.@6Per2`G/$4q0V1AiF9b+?VGl2eG5r4?#3-ANgPc1M/U#4s2sDAiMM/+?VSA@PL%U4>US/1HlpD1M/U*4s2sH2e"[/%6QFY3&s/F4>US/Aj.>"2`G5#4q0V1AiVP/+?VGl3A`oB4?#3/3''Id61M/X)4s2sDAiXBc+?VSA@q@h54>US0ANh5!1M/XZ4s2sH2e4m3%6QFY@5''kf4>USX1d3$E2`G8X4q0V1Amm\`+?VGl@:DDC4?#320Koq.1M1''*4s2sDAmo46+?VSAAi)[\4>USXAj.>"1M1)O4s2sH2eG''6%6QFY@P^1j4>USY3''JHI2`NKI4q0V1An!ba+?VGl@UVGC4?#5R@6P,_1M1**4s2sDAn#:7+?VSB0P*EW4>USZ1HlpD1M1,S4s2sH3&30O%6QFY@lQXp4>USZ3BeQJ2`NR$4q0V1An,75+?VGl@q%VE4?#5TANgPc1M1-,4s2sDAn,C9+?VSB1GM''&4>USZAj.>"1M1/O4s2sH3&<EU%6QFYA2?Cl4>US[1d3$E2`NWK4q0V1An3ha+?VGlA77YE4?#5V3''Id61M10/4s2sDAn5L;+?VSB2)@E*4>US\0KpUA1M12T4s2sH3&NZZ%6QFYAMlXo4>US\@6Per2`N[+4q0V1An>F8+?VGlARmtI4?#5X2*MI31M1314s2sDAnEna+?VSB2_[E)4>US]2Ei6G1M15Z4s2sH3&`f\%6QFYAmmkG4>US]Aj.>"2`Na,4q0V20JG1E+?VJ70Jbm84?#5Z1Hl711b^U@4s2sE0JGCK+?VSB3+4u[4>\`G2a/?H1b^UC4s2sH3&kM6%6QI$0O[-f4>\`G@m2"t2`NfS4q0V20JI''%+?VJ70P3Kk4?#5[A3LGb1b^XA4s2sE0JPLM+?VSB@:;>/4>\`H3''JHI1b^XE4s2sH3+6A^%6QI$0k!6g4>\`H@m2"t2`P8(4q0V20JR0''+?VJ71,(m74?#6/Aj-Yd1b^[>4s2sE0JYFJ+?VSB@kp4W4>\`I1d3$E1b^[C4s2sH3+Fj1%6QI$1,hB>4>\`I@6Per2`P;W4q0V20J[*$+?VJ711WQk4?#610g6%/1b^[r4s2sE0JbCH+?VSBA2ZU\4>\`J0g6^B1b^^F4s2sH3+QJ^%6QI$1H@WA4>\`J@Qkns2`PA*4q0V20Jd3&+?VJ71M&`m4?#623Bdm71b^^t4s2sE0JkII+?VSBARmt64>\`K0g6^B1b^aA4s2sH3+aj.%6QI$1c.B=4>\`K2*N-F2`PD,4q0V20Jk[O+?VJ71cIT@4?#633''Id61b^aG4s2sE0JkdR+?VSBAn!q54>\`K@6Per1b^ar4s2sH3+c_c%6QI$1h8cm4>\`KAj.>"2`WQI4q0V20JtOJ+?VJ72)d]A4?#8S2EhR41b^dH4s2sE0K!<''+?VSC0P3KX4>\`L@m2"t1b^gA4s2sH3AE?S%6QI$2DIB<4>\`M1d3$E2`WU$4q0V20K(dP+?VJ72E<rD4?#8TAj-Yd1b^gs4s2sE0K*H*+?VSC1,hB+4>\`MANh5!1b^jC4s2sH3AP,/%6QI$2_mQ>4>\`N1HlpD2`WZL4q0V20K1gP+?VJ72`NuD4?#8V2*MI31b^jt4s2sE0K3Q,+?VSC1bq6(4>\`O0KpUA1b^mK4s2sH3Ab/.%6QI$3&s/F4>\`O@6Per2`W`P4q0V20K<N*+?VJ73+G,p4?#8X3''Id61b^n#4s2sE0K<Z.+?VSC2D[N+4>\`P0g6^B1b^pH4s2sH3Arl]%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaY0KD$T+?VJ73Fb5q4?#8Z0Koq.1b^q$4s2sE0OZ_#+?VSC2e"r[4>\a#1HlpD1b`>p4s2sH3B/cX%6QI$@5U4k4>\a#3''JHI2`WiU4q0V20OZt*+?VJ7@:;>B4?#8[@Qk5`1b`?I4s2sE0Ock&+?VSC3A<W+4>\a$2*N-F1b`BN4s2sH3B:P4%6QI$@k^(h4>\a%0g6^B2`Y;+4q0V20Olk%+?VJ7@l-@l4?#9/@Qk5`1b`Du4s2sE0OnQU+?VSC@Pg7X4>\a%Aj.>"1b`Go4s2sH3Fam0%6QI$A2-7j4>\a&1-QgC2`YA,4q0V20P!%)+?VJ7A2c[p4?#91ANgPc1b`H"4s2sE0P!1-+?VSCA2?CY4>\a&@6Per1b`HL4s2sH3Fk$3%6QI$A7IeG4>\a''0g6^B2`YD/4q0V20P*"''+?VJ7AMcRn4?#930Koq.1b`KL4s2sE0P3"&+?VSCAhcIY4>\a(0g6^B1b`Ms4s2sH3G(98%6QI$Ai)[o4>\a(2*N-F2`YJ]4q0V20P37-+?VJ7AiMss4?$\&1d2@21b`N%4s2sE0P4fY+?VSk0K20)4>\a(ANh5!1b`NR4s2sH@5):W%6QI%0JG[54>\cH1-QgC2dnEq4q0V20ebCI+?VJ80Jks94?$\''2*MI31bg[A4s2sE0ebLL+?VSk0fV?+4>\cH2a/?H1bg[E4s2sH@524T%6QI%0Od3g4>\cH@m2"t2dnHr4q0V20ed-%+?VJ80fD3<4?$\(1d2@21bg^D4s2sE0ekXO+?VSk11i]Z4>\cI@6Per1bg^p4s2sH@5B`(%6QI%1,(m74>\cJ1d3$E2dnNt4q0V20etUM+?VJ81-%N@4?$\*2a.[51bgao4s2sE0f!3%+?VSk1hJo\4>\cJ@m2"t1bgd?4s2sH@5Tf(%6QI%1GM''94>\cK3BeQJ2dnR''4q0V20f*6%+?VJ81M/fn4?$\,1Hl711bggA4s2sE0f1^N+?VSk2Ieo[4>\cL2*N-F1bggG4s2sH@5fo)%6QI%1c[`B4>\cL@m2"t2dnXS4q0V20f:XK+?VJ82)@E=4?$\.3Bdm71bgjE4s2sE0f:jQ+?VSk3+Y8_4>\cM2a/?H1bgjI4s2sH@6$,-%6QI%2*!iC4>\cM@Qkns2dn^,4q0V20f<K*+?VJ82D@<;4?$\W0g6%/1bgmE4s2sE0fCpR+?VSk@:h\44>\cN2a/?H1bgmJ4s2sH@:D&W%6QI%2E<rD4>\cN@Qkns2dp/S4q0V20fEN*+?VJ82J,,q4?$\X@Qk5`1bgpC4s2sE0fLmP+?VSk@k^(U4>\cO2Ei6G1bgq$4s2sH@:Ne2%6QI%3&!N=4>\cP0g6^B2dp5U4q0V20fUpP+?VJ83&NlB4?$\Z@6P,_1bgsJ4s2sE0fV*U+?VSkAMH@X4>\cP3BeQJ1bgt!4s2sH@:_A]%6QI%3+G,p4>\cPA3M+u2dp9,4q0V20fWc/+?VJ83A`oB4?$\\0Koq.1bh!J4s2sE0f_-U+?VSkAiDm_4>\cQ2a/?H1bh!M4s2sH@:it4%6QI%3FP)o4>\cQ@m2"t2e"Hp4q0V20jub"+?VJ8@5:"h4?$_''@m1>a1biDq4s2sE0juq''+?VSl0etp%4>\d$2Ei6G1biDu4s2sH@PKc)%6QI%@:;>B4>\d$@Qkns2e"LO4q0V20k"TV+?VJ8@:h\G4?$_)0g6%/1biGq4s2sE0k)t''+?VSl11i]Z4>\d%2Ei6G1biH"4s2sH@P]i)%6QI%@UqYF4>\d&1-QgC2e"RT4q0V20k3()+?VJ8@l?Ln4?$_+A3LGb1biKM4s2sE0k4`X+?VSl2.\r\4>\d&Aj.>"1biMr4s2sH@Q$#+%6QI%A2?Cl4>\d''3''JHI2e"[)4q0V20k<:.+?VJ8A77YE4?$_-Aj-Yd1biNM4s2sE0k=cX+?VSl2`!W,4>\d(0KpUA1biPr4s2sH@Q.d\%6QI%AMZLm4>\d(2Ei6G2e"a$4q0V20kE:-+?VJ8AR[hG4?$_/2EhR41biQP4s2sE0kFo[+?VSl3+Y8_4>\d(Aj.>"1biSs4s2sH@Q?/,%6QI%AhuUn4>\d)2Ei6G2e"d,4q0V20kN@.+?VJ8AiW$t4?$_0ANgPc1biTN4s2sE0kOoZ+?VSl@5C(V4>\d)A3M+u1biTS4s2sH@UWh3%6QI&0JG[54>\fI0g6^B2e$5O4q0V21,(II+?VJ90Jks94?$_Y2*MI31bpaB4s2sE1,*0$+?VSl@Q?U]4>\fI@m2"t1bpaq4s2sH@Uh/W%6QI&0ekj74>\fJ1d3$E2e$9-4q0V21,1[N+?VJ90k!6g4?$_[1d2@21bpdp4s2sE1,39&+?VSlA7@_34>\fJA3M+u1bpdt4s2sH@Us%6%6QI&1,(m74>\fK0g6^B2e$>R4q0V21,:UK+?VJ91,D*:4?$_\2a.[51bpgC4s2sE1,:aO+?VSlAR[h44>\fK2a/?H1bpgG4s2sH@V''.8%6QI&11<?h4>\fK@m2"t2e$AU4q0V21,<B(+?VJ91GD!84?$_]3''Id61bpjC4s2sE1,CmR+?VSm0JPa#4>\fL3BeQJ1bpjr4s2sH@k]l+%6QI&1LrZl4>\fM1-QgC2e+Qr4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71bpmD4s2sE1,M!T+?VSm0fM9*4>\fM@m2"t1bpmu4s2sH@kol)%6QI&1hAin4>\fMAj.>"2e+U&4q0V21,UaL+?VJ92.A`l4?$b*@m1>a1bppu4s2sE1,WZ-+?VSm1H@W.4>\fO0g6^B1bpsK4s2sH@l-#+%6QI&2E<rD4>\fP2Ei6G2e+[U4q0V21,h-U+?VJ92`NuD4?$b-A3LGb1bq!M4s2sE1,iZ++?VSm2DIB)4>\fP@m2"t1bq"%4s2sH@l?2.%6QI&3&3Z?4>\fQ1d3$E2e+aX4q0V21,q-T+?VJ93+4un4?$b/2*MI31bq%"4s2sE1-%3U+?VSm2e>/^4>\fR2Ei6G1bq($4s2sH@lRm\%6QI&3Fk;r4>\fRANh5!2e+j(4q0V211;k#+?VJ9@5:"h4?$b13Bdm71brJq4s2sE11<"''+?VSm@5''kS4>\g%2Ei6G1brK"4s2sH@pq8Z%6QI&@:;>B4>\g%@m2"t2e-9*4q0V211=]W+?VJ9@:_VF4?$bYAj-Yd1brKO4s2sE11E%''+?VSm@Pg7X4>\g&1d3$E1brMt4s2sH@q&k1%6QI&@Q$Cm4>\g&2a/?H2e-</4q0V211E4,+?VJ9@UVGC4?$b[1-Q.01brNO4s2sE11N.)+?VSm@q@h54>\g''2Ei6G1brQ"4s2sH@q9"3%6QI&@lQXp4>\g''A3M+u2e-DR4q0V211OlZ+?VJ9A2?Cl4?$b]3Bdm71brT%4s2sE11XfW+?VSmAn+"64>\g(Aj.>"1brVr4s2sHA2%RY%6QI&AMH@k4>\g)1-QgC2e4Wt4q0V211`=,+?VJ9AN)dq4?$e*A3LGb1brW%4s2sE11aoY+?VSn1,D*''4>\g)@m2"t1brWR4s2sHA26,.%6QI&AS++K4>\g*0g6^B2e4[R4q0V211i:*+?VJ9Ai;gq4?$e,1d2@21brZ&4s2sE11iO1+?VSn1LrZY4>\g*A3M+u1brZT4s2sHA2H5/%6QI''0JG[54>\iJ1HlpD2e4aR4q0V21GC[M+?VJ:0ebd64?$e.0g6%/1c$j@4s2sE1GLXK+?VSn2.f#]4>\iK1HlpD1c$jD4s2sHA2Z5-%6QI''0fM9=4>\iK@Qkns2e4g,4q0V21GNB''+?VJ:0k<Hj4?$e/Aj-Yd1c$jt4s2sE1GNK*+?VSn2`*]-4>\iL0g6^B1c$mG4s2sHA2dp\%6QI''1-%N@4>\iL@6Per2e4m)4q0V21GWH(+?VJ:1GD!84?$e1@6P,_1c$pB4s2sE1G^gN+?VSn3A<W+4>\iM1d3$E1c$ps4s2sHA2uJ1%6QI''1LrZl4>\iMAj.>"2e4p\4q0V21GgdL+?VJ:1bh0:4?$eZ1d2@21c$sD4s2sE1GgsQ+?VSn@5g@Z4>\iN2a/?H1c$sK4s2sHA7@D[%6QI''1h&Wk4>\iNANh5!2e6DP4q0V21Gi]-+?VJ:2)%3:4?$e\2*MI31c%!D4s2sE1GppO+?VSn@lQX]4>\iO1HlpD1c%!J4s2sHA7K+5%6QI''2*!iC4>\iO@6Per2e6GV4q0V21GrW*+?VJ:2.Sln4?$e]@6P,_1c%$D4s2sE1H$sO+?VSnAMcR[4>\iP1HlpD1c%$H4s2sHA7]15%6QI''2DmZ@4>\iP2Ei6G2e6K14q0V21H&Z*+?VJ:2I\im4?$e_2a.[51c%%#4s2sE1H.9W+?VSnAn+"64>\iQ3BeQJ1c%(#4s2sHAM@UX%6QI''2e5)p4>\iR2*N-F2e=^!4q0V21H7<W+?VJ:3&s/F4?$h,0Koq.1c%+"4s2sE1H8l.+?VSo1,M0(4>\iRA3M+u1c%+''4s2sHAMQ5/%6QI''3AE]?4>\iS1-QgC2e=aV4q0V21H@BX+?VJ:3B02F4?$h-Aj-Yd1c%-P4s2sE1HAo.+?VSo1bq6(4>\iS@m2"t1c&Pt4s2sHAMcA1%6QI''@5g@m4>\j&@6Per2e=j)4q0V21LX`V+?VJ:@:VPE4?$h/@Qk5`1c&QO4s2sE1L`%%+?VSo2.f#]4>\j''0g6^B1c&T!4s2sHAMu>.%6QI''@Q6Oo4>\j''3BeQJ2e=p&4q0V21LacV+?VJ:@V%_G4?$h11d2@21c&TQ4s2sE1Li+&+?VSo2dnlZ4>\j(0g6^B1c&Vt4s2sHAN+3b%6QI''@l-@l4>\j(3''JHI2e=s)4q0V21LjoY+?VJ:@q@hH4?$h30Koq.1c&Ys4s2sE1Lr7)+?VSo3B9844>\j)1HlpD1c&Z!4s2sHAN=9b%6QI''A2c[p4>\j)3''JHI2e?H-4q0V21M&=*+?VJ:AN2jr4?$k.@Qk5`1c&]O4s2sE1M(/^+?VSp1c@N,4>\j+1-QgC1c&`"4s2sHAi2>-%6QI''Ai;gq4>\j+3BeQJ2eFpV4q0V21M1)[+?VJ:AnF4L4?$k11Hl711c-m?4s2sE1b^[K+?VSp2I\iZ4>\lK2*N-F1c-mE4s2sHAiDS2%6QI(0K;6=4>\lK@Qkns2eG!W4q0V21b`E''+?VJ;0P!?i4?$k2Aj-Yd1c-mt4s2sE1bg[J+?VSp3&3Z,4>\lL2*N-F1c-pI4s2sHAiOBd%6QI(0k!6g4>\lLANh5!2eG''-4q0V21biT++?VJ;1,(m74?$k4@Qk64DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>\lM1-QgC1c-sD4s2sHAmmGY%6QI(1,_<=4>\lM@6Per2eHK,4q0V21brQ)+?VJ;1GD!84?$k]1Hl711c.!C4s2sE1c$mN+?VSp@UVG04>\lN2*N-F1c.!I4s2sHAn*S[%6QI(1H7Q@4>\lN@Qkns2eHPX4q0V21c&],+?VJ;1b_*94?$k^Aj-Yd1c.$E4s2sE1c.!P+?VSpA2ZU\4>\lO1d3$E1c.$L4s2sHAn3nc%6QI(1grQj4>\lO@m2"t2eHVV4q0V21c/`,+?VJ;1hAin4?$k`2a.[51c.%$4s2sE1c7$P+?VSpARRb34>\lP2*N-F1c.''M4s2sHAnEk`%6QI(2.A`l4>\lPA3M+u2eHZ44q0V21c8l/+?VJ;2DRH=4?,#K2a.[51c.*H4s2sE1c@0S+?VV;0P*EW4>\lQ2a/?H1c.*M4s2sI0JR!"%6QI(2E<rD4>\lQ@Qkns3&!''t4q0V21cAl.+?VJ;2J#&p4?,#M1Hl711c.-G4s2sE1cI0R+?VV;11i]Z4>\lR2*N-F1c.-L4s2sI0Jb^Q%6QI(2`X&E4>\lR@6Per3&!0C4q0V21cJl-+?VJ;2e,#o4?,#O1d2@21c..%4s2sE1cK#1+?VV;1cIT-4>\lS0KpUA1c.0J4s2sI0Jm?)%6QI(3&j)E4>\lS@6Per3&!4!4q0V21cSr.+?VJ;3A`oB4?,#PAj-Yd1c.3M4s2sE1c[NZ+?VV;2I\iZ4>\lT@Qkns1c.4''4s2sI0K3E(%6QI(3FtAs4>\lTAj.>"3&!<H4q0V21gr.''+?VJ;@5g@m4?,#SA3LGb1c/W#4s2sE1grC.+?VV;3A`o/4>\m''ANh5!1c/Yq4s2sI0OZk''%6QI(@Pg7k4>\m(2*N-F3&"f!4q0V21h&@,+?VJ;@Q-In4?,$(3''Id61c/ZM4s2sE1h(#[+?VV;@lHR\4>\m(Aj.>"1c/]"4s2sI0On]Y%6QI(@lHRo4>\m)3''JHI3&"lT4q0V21h/O0+?VJ;@pqPD4?,$+1-Q.01c/_t4s2sE1h8F,+?VV;An=.84>\m*2*N-F1c/`$4s2sI0ebCI%6QI(A2c[p4>\m*3''JHI3&**G4q0V21h8U1+?VJ;A77YE4?,&L@Qk5`1c/`S4s2sE1h:2^+?VV<0k3BV4>\m+0KpUA1c/cR4s2sI0em9(%6QI(ARmtI4>\m+ANh5!3&*1!4q0V21hJF*+?VJ;AhlOm4?,&O1Hl711c/f$4s2sE1hJ[1+?VV<1LWHV4>\m,3''JHI1c/fU4s2sI0f*E*%6QI)0Jks94>\oL2*N-F3&*9L4q0V22)$pP+?VJ<0O[-f4?,&Q@Qk5`1c6sr4s2sE2)&Q)+?VV<2DRH*4>\oM1-QgC1c7!D4s2sI0fLjO%6QI)0f2'':4>\oM2Ei6G3&*?L4q0V22).''S+?VJ<0k3Bi4?,&T1Hl711c7"!4s2sE2)6mM+?VV<3+>&\4>\oN1HlpD1c7$J4s2sI0f_!Q%6QI)11<?h4>\oN@Qkns3&*F)4q0V22)8Z*+?VJ<11WQk4?,''(0g6%/1c7%"4s2sE2)8c-+?VV<@5L.W4>\oO0g6^B1c7''K4s2sI0k"NT%6QI)1H@WA4>\oOANh5!3&+l!4q0V22)I!N+?VJ<1bh0:4?,''*1d2@21c7*F4s2sE2)I*Q+?VV<@lHR\4>\oP2Ei6G1c7+#4s2sI0k;t%%6QI)1hJoo4>\oQ1-QgC3&+rQ4q0V22)R0R+?VJ<2)IK>4?,'',0g6%/1c7-J4s2sE2)R<V+?VV<AMcR[4>\oQ@6Per1c7.%4s2sI0kFo[%6QI)2.f#p4>\oR1HlpD3&,#&4q0V22)[EX+?VJ<2E<rD4?,)MANgPc1c71$4s2sE2)d6R+?VV=0f;-(4>\oS1d3$E1c73N4s2sI1,:[M%6QI)2e,#o4>\oSA3M+u3&3:"4q0V22)f)1+?VJ<3&3Z?4?,)PAj-Yd1c76K4s2sE2)mEV+?VV=1c7H+4>\oT2a/?H1c76Q4s2sI1,NK)%6QI)3+4un4>\oU0g6^B3&3?F4q0V22*!EU+?VJ<3AiuC4?,)R@Qk5`1c79O4s2sE2*!Z\+?VV=2D@<(4>\oU@m2"t1c7:(4s2sI1,_-V%6QI)3FtAs4>\oUAj.>"3&3C%4q0V22.81&+?VJ<@50qg4?,)T2*MI31c8\t4s2sE2.8=*+?VV=2e"r[4>\p(2*N-F1c8]"4s2sI1,psO%6QI)@5pFn4>\p(@6Per3&3HN4q0V22.:&[+?VJ<@PL%h4?,)V1Hl711c8_t4s2sE2.A@*+?VV=3FP)\4>\p)2Ei6G1c8`$4s2sI11;q%%6QI)@UVGC4>\p)@Qkns3&4r#4q0V22.C,\+?VJ<@V.eH4?,**Aj-Yd1c8bs4s2sE2.J@)+?VV=@kp4W4>\p*1-QgC1c8c!4s2sI11N1*%6QI)@lHRo4>\p*3''JHI3&5#)4q0V22.L)Z+?VJ<@q7bG4?,*-3''Id61c8cS4s2sE2.SC)+?VV=ARdn54>\p+1-QgC1c8f"4s2sI11i:*%6QI)A2HIm4>\p+2*N-F3&5)''4q0V22.S[1+?VJ<A7IeG4?,*.@m1>a1c8fS4s2sE2.U8^+?VV>0O[-SASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QI)AMH@k4>\p,1-QgC3&<9E4q0V22.\U.+?VJ<AMlXo4?,,O3''Id61c8i&4s2sE2.^A`+?VV>0k<HW4>\p-0KpUA1c8l"4s2sI1GUsS%6QI)AiDmr4>\p-3BeQJ3&<@$4q0V22.g8\+?VJ<An!qH4?,,R0g6%/1c8lT4s2sE2.gA_+?VV>1c.B*4>\rM0KpUA1c@$D4s2sI1GiQ)%6QI*0Ju$:4>\rM3BeQJ3&<EL4q0V22DAW)+?VJ=0etp84?,,U0Koq.1c@''E4s2sE2DI$P+?VV>2`X&24>\rN2*N-F1c@''t4s2sI1H/l/%6QI*0k3Bi4>\rNA3M+u3&<NQ4q0V22DJc,+?VJ=1,(m74?,,V@Qk5`1c@*D4s2sE2DR''P+?VV>3+b>`4>\rO1d3$E1c@*H4s2sI1H@9U%6QI*1,hB>4>\rO3''JHI3&<QT4q0V22DSc++?VJ=11i]m4?,-*1Hl711c@-D4s2sE2D[-Q+?VV>@:MJ14>\rP2Ei6G1c@-K4s2sI1LaoZ%6QI*1H7Q@4>\rP@6Per3&>&"4q0V22D\i,+?VJ=1LrZl4?,-,3''Id61c@.%4s2sE2Dd*O+?VV>@q7b44>\rQ0g6^B1c@0I4s2sI1Lr1''%6QI*1cIT@4>\rQ3BeQJ3&>)*4q0V22Del,+?VJ=1h8cm4?,-.1-Q.01c@1%4s2sE2Dm0P+?VV>AMu^]4>\rR0g6^B1c@3J4s2sI1M(#Z%6QI*2)RQ?4>\rR3BeQJ3&>/&4q0V22Dno,+?VJ=2.Jfm4?,-/@6P,_1c@4%4s2sE2Do)1+?VV>An=.84>\rS1-QgC1c@6J4s2sI1b^mQ%6QI*2DmZ@4>\rS@6Per3&E?F4q0V22E##.+?VJ=2Inuo4?,/P3Bdm71c@7''4s2sE2E*EU+?VV?0kENX4>\rT1d3$E1c@9N4s2sI1bq''T%6QI*2`EoC4>\rT@6Per3&EC$4q0V22E,)/+?VJ=2e5)p4?,/R1-Q.01c@:(4s2sE2E,53+?VV?1H%E+4>\rU0KpUA1c@<K4s2sI1c%-U%6QI*3&<`@4>\rU@6Per3&EF&4q0V22E5/0+?VJ=3+G,p4?,/S2a.[51c@=(4s2sE2E<QW+?VV?1grQW4>\rV1d3$E1c@?Q4s2sI1c7''Q%6QI*3B98G4>\rV@m2"t3&EL''4q0V22E>A5+?VJ=@5''kf4?,/U2a.[51cAc$4s2sE2IU,[+?VV?2e"r[4>\s)ANh5!1cAet4s2sI1cR9T%6QI*@Pg7k4>\s*2a/?H3&EU,4q0V22I\X0+?VJ=@Q?Up4?,/X2*MI31cAfP4s2sE2I^/[+?VV?3FP)\4>\s*A3M+u1cAht4s2sI1c])1%6QI*@kg.i4>\s+A3M+u3&G&!4q0V22Ig;^+?VJ=@qInI4?,0,0Koq.1cAl!4s2sE2InU-+?VV?@Pp=Y4>\s,2Ei6G1cAl''4s2sI1h/:)%6QI*A2laq4>\s,@Qkns3&G,&4q0V22Ip>^+?VJ=A7[qI4?,0-ANgPc1cAo!4s2sE2J"U,+?VV?A2HIZ4>\s-1-QgC1cAo(4s2sI1h8O/%6QI*AN;ps4>\s-@6Per3&G2$4q0V22J$A^+?VJ=AhZCk4?,0/2a.[51cAr$4s2sE2J-G_+?VV?AhcIY4>\s.ANh5!1cArX4s2sI2)$^J%6QI+0JG[54>\uN3BeQJ3&NBF4q0V22_\Z(+?VJ>0P!?i4?,2PA3LGb1cI+#4s2sE2_d!M+?VV@0f;-(4>\uO0g6^B1cI-E4s2sI2).''S%6QI+0f)!94>\uO2*N-F3&NF"4q0V22_d9U+?VJ>0f_E?4?,2R1d2@21cI-t4s2sE2_ei,+?VV@1,hB+4>\uOANh5!1cI0J4s2sI2)8`,%6QI+1,hB>4>\uP3BeQJ3&NL''4q0V22_ni++?VJ>11NKj4?,2T1d2@21cI1$4s2sE2`!-O+?VV@1h&WX4>\uQ0g6^B1cI3H4s2sI2)Jo/%6QI+1H%E>4>\uQ3BeQJ3&NR%4q0V22`"l++?VJ>1LiTk4?,2UAj-Yd1cI4%4s2sE2`*3P+?VV@2DmZ-4>\uR0g6^B1cI6H4s2sI2)\o-%6QI+1c%<<4>\uR2Ei6G3&NU*4q0V22`*KX+?VJ>1c[`B4?,2W2*MI31cI7#4s2sE2`,#.+?VV@2e,#\4>\uRA3M+u1cI9H4s2sI2)f,2%6QI+2)RQ?4>\uS2Ei6G3&N[+4q0V22`3QY+?VJ>2*!iC4?,2Y1-Q.01cI:#4s2sE2`522+?VV@3Aiu04>\uT0KpUA1cI<I4s2sI2*#22%6QI+2DRH=4>\uT2*N-F3&P+u4q0V22`<WZ+?VJ>2IScl4?,3,@Qk5`1cI=%4s2sE2`EES+?VV@@PL%U4>\uU1-QgC1cI?P4s2sI2.C#Y%6QI+2`NuD4>\uUANh5!3&P2$4q0V22`G>4+?VJ>3&*T>4?,3.@6P,_1cIBL4s2sE2`NTW+?VV@A2-7W4>\uV2*N-F1cIC&4s2sI2.SU/%6QI+3+>&o4>\uW0KpUA3&P5X4q0V22`WTV+?VJ>3AWiA4?,302EhR41cIEO4s2sE2`YA3+?VV@AR[h44>\uWANh5!1cIF,4s2sI2.ed2%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaY2dnC(+?VJ>@5:"h4?,31@m1>a1cJi!4s2sE2dnU.+?VVA0JG["4>]!*2a/?H1cJi''4s2sI2D@*S%6QI+@:;>B4>]!*ANh5!3&WI#4q0V22dp;^+?VJ>@PU+i4?,5R1-Q.01cJl"4s2sE2e"X.+?VVA0fM9*4>]!+2Ei6G1cJl''4s2sI2DJZ)%6QI+@Q?Up4>]!+@Qkns3&WL''4q0V22e$8\+?VJ>@V.eH4?,5S1Hl711cJo!4s2sE2e+X-+?VVA11<?U4>]!,1d3$E1cJoT4s2sI2DSi-%6QI+A2$1i4>]!-0g6^B3&WR''4q0V22e4[-+?VJ>A7[qI4?,5U0Koq.1cJrW4s2sE2e=[,+?VVA2)7?)4>]!.0g6^B1cJu&4s2sI2DmBV%6QI+AN)dq4>]!.3''JHI3&WZK4q0V22e>!5+?VJ>ARdnH4?,5W1Hl711cJuV4s2sE2e?Sb+?VVA2E3l04>]!/0g6^B1cK#%4s2sI2E#/2%6QI+AhuUn4>]!/3BeQJ3&W]N4q0V22eHJ^+?VJ>AnF4L4?,5Y1Hl711cR0D4s2sE3&!3R+?VVA3+Y8_4>]#O2a/?H1cR1!4s2sI2E<ZZ%6QI,0P!?i4>]#P0g6^B3&Wd.4q0V23&*0P+?VJ?0f)!94?,6-2*MI31cR3I4s2sE3&*<T+?VVA@:VP24>]#P2a/?H1cR3L4s2sI2I\F*%6QI,0f_E?4>]#P@Qkns3&Y5)4q0V23&+o,+?VJ?1,(m74?,6.@Qk5`1cR6F4s2sE3&39R+?VVA@kg.V4>]#Q2Ei6G1cR6L4s2sI2Ig5\%6QI,1,qH?4>]#Q3BeQJ3&Y;&4q0V23&4o++?VJ?11NKj4?,602*MI31cR7%4s2sE3&5)0+?VVAA7Ie44>]#R0KpUA1cR9I4s2sI2J"R+%6QI,1Gh9<4>]#R2a/?H3&Y>*4q0V23&<NX+?VJ?1LWHi4?,61@6P,_1cR:$4s2sE3&>,0+?VVAAi2a]4>]#RAj.>"1cR<H4s2sI2J-D^%6QI,1c.B=4>]#S2*N-F3&`NJ4q0V23&ENW+?VJ?1cIT@4?,8R@Qk5`1cR<O4s2sE3&G).+?VVB0P*EW4>]#T0g6^B1cR?J4s2sI2_eo.%6QI,2)IK>4>]#T2Ei6G3&`TN4q0V23&NWY+?VJ?2.8Zk4?,8T@6P,_1cR@%4s2sE3&P20+?VVB11i]Z4>]#TA3M+u1cR@(4s2sI2`!3Q%6QI,2.f#p4>]#U0KpUA3&`WN4q0V23&WKT+?VJ?2D[N>4?,8U3''Id61cRBM4s2sE3&WWX+?VVB1LiTX4>]#U2Ei6G1cRC''4s2sI2`*3P%6QI,2Inuo4>]#UANh5!3&`[&4q0V23&`NT+?VJ?2`!W?4?,8VAj-Yd1cREQ4s2sE3&b>2+?VVB2.8ZX4>]#VA3M+u1cRF*4s2sI2`<BS%6QI,2eG5r4>]#W2*N-F3&``S4q0V23&ii\+?VJ?3&s/F4?,8Y0g6%/1cRI)4s2sE3&kG4+?VVB2`X&24>]#WANh5!1cRKL4s2sI2`G>4%6QI,3AE]?4>]#X1-QgC3&`fT4q0V23&rcY+?VJ?3A`oB4?,8Z3Bdm71cRKR4s2sE3&tD2+?VVB3+Y8_4>]#X@Qkns1cRL+4s2sI2`W]Y%6QI,3FtAs4>]$+1HlpD3&`iW4q0V23+4X-+?VJ?@5U4k4?,9.0Koq.1cSo%4s2sE3+65Z+?VVB@5C(V4>]$+@Qkns1cSoR4s2sI2dn^1%6QI,@:_VF4>]$,0KpUA3&b;#4q0V23+=X,+?VJ?@Pp=l4?,9/2EhR41cSr''4s2sE3+=j2+?VVB@V%_44>]$,3BeQJ1cSrR4s2sI2e+R+%6QI,@V.eH4>]$-0KpUA3&b>W4q0V23+F[,+?VJ?@kp4j4?,90Aj-Yd1cSu$4s2sE3+Fs4+?VVBA2HIZ4>]$-@6Per1cSuU4s2sI2e6D^%6QI,@q@hH4>]$-Aj.>"3&bD''4q0V23+Oa-+?VJ?A2HIm4?,922EhR41cT#)4s2sE3+P!4+?VVBAhZCX4>]$.3BeQJ1cT#T4s2sI2eFj0%6QI,A7IeG4>]$.A3M+u3&bG.4q0V23+QVb+?VJ?AM?:j4?,93@m1>a1cT&$4s2sE3+Xp1+?VVBAnF494>]$/2Ei6G1cT&+4s2sI3&!9T%6QI,AN;ps4>]$/A3M+u3&iU$4q0V23+aj.+?VJ?AhuUn4?,;T2a.[51cT)(4s2sE3+b''4+?VVC0k3BV4>]$03''JHI1cT)Z4s2sI3&3<S%6QI-0JG[54>]&P1d3$E3&i[''4q0V23A<<S+?VJ@0K20<4?,;V1Hl711c[6L4s2sE3A<HW+?VVC1H.K,4>]&P@Qkns1c[7#4s2sI3&>)/%6QI-0P*Ej4>]&Q0KpUA3&i`L4q0V23AE6P+?VJ@0f)!94?,;W2a.[51c[9J4s2sE3AENX+?VVC1hAi[4>]&Q@6Per1c[:"4s2sI3&NQW%6QI-0kNTl4>]&R0g6^B3&id,4q0V23AN?R+?VJ@1,D*:4?,;Y2EhR41c[<N4s2sE3AP&-+?VVC2`!W,4>]&RA3M+u1c[=''4s2sI3&b80%6QI-1GV-:4>]&S1HlpD3&ilU4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71c[?K4s2sE3AWNV+?VVC3&s/34>]&S2a/?H1c[@#4s2sI3&kJ5%6QI-1L`Nj4>]&SA3M+u3&ioS4q0V23AY51+?VJ@1bq6;4?,;\2a.[51c[BK4s2sE3A`ZY+?VVC3Fk;_4>]&T3BeQJ1c[C(4s2sI3+4[.%6QI-2)%3:4>]&U1-QgC3&k>X4q0V23AiTV+?VJ@2)d]A4?,<01-Q.01c[EQ4s2sE3Ak80+?VVC@Q6O\4>]&U@m2"t1c[F*4s2sI3+?D^%6QI-2D@<;4>]&V0g6^B3&kD(4q0V23ArWV+?VJ@2D[N>4?,<12a.[51c[HN4s2sE3ArcZ+?VVC@q%V24>]&V2a/?H1c[HR4s2sI3+O^,%6QI-2IScl4>]&V@Qkns3&kG,4q0V23AtA2+?VJ@2Inuo4?,<2@6P,_1c[I+4s2sE3B&WU+?VVCAM?:W4>]&W0g6^B1c[KM4s2sI3+Y!3%6QI-2`!W?4>]&W3BeQJ3&kJ04q0V23B(D2+?VJ@2e5)p4?,<42*MI31c[L+4s2sE3B(P6+?VVCAmmk44>]&X0KpUA1c[NN4s2sI3+cbd%6QI-3&<`@4>]&X2Ei6G3&rZK4q0V23B/r]+?VJ@3&j)E4?,>T3''Id61c[NU4s2sE3B1P5+?VVD0Od3T4>]&XAj.>"1c[QP4s2sI3AE?S%6QI-3A`oB4>]&Y3''JHI3&r^''4q0V23B9)`+?VJ@3FY/p4?,>V1-Q.01c[R+4s2sE3B:\8+?VVD1,_<*4>]'',0KpUA1c\u#4s2sI3AP).%6QI-@5g@m4>]'',3''JHI3&rcT4q0V23FOp3+?VJ@@:VPE4?,>W@m1>a1c\uU4s2sE3FQM`+?VVD1bq6(4>]''-0KpUA1c]#"4s2sI3A`TW%6QI-@PU+i4>]''-Aj.>"3&rfT4q0V23Faa,+?VJ@@l6Fm4?,>Y2a.[51c]&(4s2sE3Fb$4+?VVD2DIB)4>]''.@6Per1c]&U4s2sI3Arf[%6QI-@q@hH4>]''.Aj.>"3&rm-4q0V23Fjg-+?VJ@A2-7j4?,>[0Koq.1c])%4s2sE3Fk-6+?VVD2`!W,4>]''/@6Per1c])V4s2sI3B(G3%6QI-A7e"J4>]''00KpUA3&rrT4q0V23Fsp/+?VJ@AMcRn4?,>\2a.[51c],)4s2sE3Ft-5+?VVD3+G,]4>]''03''JHI1c],U4s2sI3B8cW%6QI-AR[hG4>]''0@m2"t3&ruU4q0V23Fubc+?VJ@Ai2ap4?,>]3Bdm71c]/+4s2sE3G(98+?VVD@5:"U4>]''1@6Per1c]/X4s2sI3FOj1%6QI-An=.K4>]''1Aj.>"3&tDX4q0V2@5''B!+?VJh0JPa64?,?10Koq.1gr''n4s2sE@5''Q&+?VVD@P^1W4>^J#2Ei6G1gr''s4s2sI3FXs3%6QIU0K;6=4>^J#3BeQJ3&tGW4q0V2@5)4U+?VJh0P3Kk4?,?31Hl711gr*m4s2sE@50N$+?VVDA2c[]4>^J$2*N-F1gr*u4s2sI3Fl_c%6QIU0k!6g4>^J$A3M+u3&tP/4q0V2@52=W+?VJh1,(m74?,?4@m1>a1gr-o4s2sE@59W&+?VVDAhZCX4>^J%2Ei6G1gr.L4s2sI3G(98%6QIU11WQk4>^J%Aj.>"3+4Kt4q0V2@5B`(+?VJh1Gq?=4?-b(0g6%/1gr1"4s2sE@5Bo-+?VVl0f_E,4>^J&@m2"t1gr1O4s2sI@59N#%6QIU1b_*94>^J''1HlpD3+4R#4q0V2@5Kf)+?VJh1c7H>4?-b)@Qk5`1gr4!4s2sE@5Kr-+?VVl11`WY4>^J''3BeQJ1gr4L4s2sI@5BZ&%6QIU1h/]l4>^J''ANh5!3+4U%4q0V2@5MR[+?VJh2).9;4?-b*@Qk5`1gr6s4s2sE@5Ti)+?VVl1M/f[4>^J(1d3$E1gr7#4s2sI@5K`''%6QIU2*!iC4>^J(A3M+u3+4X(4q0V2@5]i(+?VJh2DRH=4?-b,2EhR41gr9u4s2sE@5]r++?VVl2*!i04>^J)2*N-F1gr:#4s2sI@5VOY%6QIU2E*fB4>^J)3''JHI3+4[V4q0V2@5^,0+?VJh2IScl4?-b-1d2@21gr:O4s2sE@5_UZ+?VVl2E*f/4>^J*0KpUA1gr<u4s2sI@5g).%6QIU2`!W?4>^J*1d3$E3+4aS4q0V2@5g&-+?VJh2`<iB4?-b.A3LGb1gr=%4s2sE@5hUY+?VVl3&!N*4>^J*@m2"t1gr=R4s2sI@5q^[%6QIU2e>/q4>^J+0KpUA3+4dX4q0V2@5p#++?VJh3&<`@4?-b02EhR41gr@$4s2sE@5p20+?VVl3FY/]4>^J+@Qkns1gr@S4s2sI@:;/[%6QIU3+Y8r4>^J,0KpUA3+66+4q0V2@6$),+?VJh3A`oB4?-bY1Hl711grC%4s2sE@6$50+?VVl@Q-I[4>^J,2a/?H1grC(4s2sI@:EY/%6QIU3B98G4>^J,@6Per3+69,4q0V2@6%d\+?VJh3Fb5q4?-bZ0Koq.1grCU4s2sE@6%p`+?VVl@l6FZ4>^JT2*N-F1gsfO4s2sI@:V/X%6QIU@5pFn4>^JT@6Per3+6>W4q0V2@:<Y0+?VJh@:_VF4?-b[Aj-Z8DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>^JU0g6^B1gsiL4s2sI@:_D^%6QIU@Pp=l4>^JU2Ei6G3+6B14q0V2@:D2[+?VJh@Q?Up4?-b]1d2@21gslJ4s2sE@:M#U+?VVm0K;6*4>^JV1-QgC1gslN4s2sI@PD7T%6QIU@l?Ln4>^JV3''JHI3+=Ts4q0V2@:Ne2+?VJh@q@hH4?-e)ANgPc1gsm+4s2sE@:V,W+?VVm1,;$&4>^JW1d3$E1gsoP4s2sI@PTr-%6QIUA2ZUo4>^JW@6Per3+=XS4q0V2@:Wh2+?VJhA7e"J4?-e+1d2@21gsrL4s2sE@:_5Y+?VVm1LWHV4>^JX1d3$E1gss+4s2sI@P_U[%6QIUAS"%J4>^JY0g6^B3+=^Q4q0V2@:h8Y+?VJhAiDmr4?-e-0Koq.1gt!)4s2sE@:j+8+?VVm2.Sl[4>^M$0KpUA1h&-o4s2sI@Q$#+%6QIV0Jbm84>^M$2Ei6G3+=d)4q0V2@PB`)+?VJi0K;6=4?-e.A3LGb1h&.!4s2sE@PD7T+?VVm2_dK*4>^M$@m2"t1h&.L4s2sI@Q-/.%6QIV0P*Ej4>^M%1-QgC3+=g+4q0V2@PKZ&+?VJi0f2'':4?-e/ANgPc1h&0s4s2sE@PMCW+?VVm3&*T+4>^M%ANh5!1h&3o4s2sI@Q7g\%6QIV1,1s84>^M&1HlpD3+=jZ4q0V2@PTf)+?VJi1-%N@4?-e12a.[51h&6t4s2sE@P_LX+?VVn1H7Q-4>^M''A3M+u1h&9q4s2sI@l,r)%6QIV1bh0:4>^M(1-QgC3+FdR4q0V2@Pfl)+?VJi1c7H>4?-h-A3LGb1h&:"4s2sE@Pg)/+?VVn2).9(4>^M(@6Per1h&:P4s2sI@l6/.%6QIV1hAin4>^M)1HlpD3+FgT4q0V2@Pou++?VJi2.8Zk4?-h/1Hl711h&=O4s2sE@Q#r)+?VVn2Ieo[4>^M*1-QgC1h&@#4s2sI@lH5.%6QIV2E!`A4>^M*@m2"t3+FmV4q0V2@Q%a\+?VJi2J#&p4?-h11Hl711h&@T4s2sE@Q-#*+?VVn3&Wr04>^M+1HlpD1h&C(4s2sI@lS!_%6QIV2dnlm4>^M+@m2"t3+Fs+4q0V2@Q.g]+?VJi3&!N=4?-h23Bdm71h&F"4s2sE@Q65/+?VVn@5C(V4>^M,2Ei6G1h&F''4s2sI@prn3%6QIV3+Y8r4>^M-1HlpD3+HH-4q0V2@Q?;0+?VJi3B02F4?-h]2EhR41h&IU4s2sE@QA!`+?VVnAN2j_4>^M-Aj.>"1h''lM4s2sI@qB48%6QIV@5U4k4>^MU3BeQJ3+HPX4q0V2@UW\/+?VJi@:_VF4?-h_Aj-Yd1h''m*4s2sE@U_#T+?VVo0K)*(4>^MV1d3$E1h''oR4s2sIA2,f&%6QIV@Q?Up4>^MV@m2"t3+Oa&4q0V2@U`n4+?VJi@V.eH4?-k/0g6%/1h''rN4s2sE@Uh8Z+?VVo2E3l04>^MW2a/?H1h''rS4s2sIA2\!_%6QIV@lZ^q4>^MW@6Per3+Os&4q0V2@Uik2+?VJiA2?Cl4?-k13''Id61h''uP4s2sE@Uq>[+?VVo3&3Z,4>^MX2Ei6G1h''uU4s2sIA2lJ2%6QIVA77YE4>^MXANh5!3+P!Y4q0V2@Us(7+?VJiAM?:j4?-k31-Q.01h(#N4s2sE@V%>Z+?VVo3As&14>^MY1d3$E1h(#U4s2sIA3"''^%6QIVAN;ps4>^MY@Qkns3+QGO4q0V2@V''%5+?VJiAS++K4?-k[1d2@21h(&N4s2sE@V.P_+?VVo@6$L\4>^MZ3''JHI1h(&W4s2sIA7@G\%6QIVAn4(J4>^MZAj.>"3+QMQ4q0V2@k]W$+?VJj0Jks94?-k]2a.[51h/3u4s2sE@k_=T+?VVoA26=X4>^P%@Qkns1h/4L4s2sIA7RY`%6QIW0P*Ej4>^P&0KpUA3+QSS4q0V2@kf]%+?VJj0f)!94?-k_2*MI31h/6t4s2sE@kfl*+?VVoARmt64>^P&2a/?H1h/7#4s2sIA7dMZ%6QIW0k<Hj4>^P''1HlpD3+QW44q0V2@kol)+?VJj1,_<=4?-n+2EhR41h/:#4s2sE@kp&.+?VVp0P!?V4>^P''@6Per1h/:N4s2sIAMGo''%6QIW11WQk4>^P(1d3$E3+Xg%4q0V2@l#u++?VJj1H%E>4?-n-0Koq.1h/=#4s2sE@l%RX+?VVp1,M0(4>^P(Aj.>"1h/?r4s2sIAMZ)*%6QIW1bh0:4>^P)1HlpD3+Xm(4q0V2@l-#++?VJj1c7H>4?-n.@Qk5`1h/@#4s2sE@l-,.+?VVp1M&`Z4>^P)3BeQJ1h/@N4s2sIAMc8.%6QIW1h&Wk4>^P)ANh5!3+XpW4q0V2@l.d]+?VJj2)%3:4?-n01Hl711h/Bt4s2sE@l6&++?VVp2)[W-4>^P*1d3$E1h/CQ4s2sIAMmm[%6QIW2.Sln4>^P*ANh5!3+Y!)4q0V2@l7j^+?VJj2D@<;4?-n12a.[51h/Eu4s2sE@l?)++?VVp2IScY4>^P+2a/?H1h/F(4s2sIAN)P3%6QIW2I\im4>^P+@m2"t3+Y$Z4q0V2@l@m^+?VJj2_[E<4?-n31-Q.01h/I%4s2sE@lHD3+?VVp3Aiu0ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QIW2e,#o4>^P,A3M+u3+Y*^4q0V2@lIs_+?VJj3&!N=4?-n\1-Q.01h/L"4s2sE@lQ8.+?VVp@5g@Z4>^P-1d3$E1h/L&4s2sIART+5%6QIW3&WrC4>^P-2a/?H3+ZPQ4q0V2@lQG3+?VJj3+Y8r4?-n]1Hl711h/LW4s2sE@lZ>/+?VVp@U_M14>^P.1d3$E1h/OU4s2sIARdGY%6QIW3Fk;r4>^P.Aj.>"3+ZT34q0V2@pq)U+?VJj@5^:l4?-n_2*MI31h0rQ4s2sE@pqA]+?VVpA7Ie44>^PV@6Per1h0s)4s2sIAS!PZ%6QIW@:_VF4>^PW1HlpD3+ZYY4q0V2@q%8Y+?VJj@Q?Up4?-n`@m1>a1h1!''4s2sE@q''"5+?VVpAhuU[4>^PX0KpUA1h1#O4s2sIAS,O<%6QIW@lHRo4>^PXA3M+u3+ajR4q0V2@q0+7+?VJjA2?Cl4?-q-2EhR41h1&Q4s2sE@q7P_+?VVq1,(m$4>^PY3BeQJ1h1'')4s2sIAhl;/%6QIWA7@_F4>^PYANh5!3+apT4q0V2@q918+?VJjAMH@k4?-q/0Koq.1h1)P4s2sE@q@M]+?VVq1Gh9)4>^PZ2Ei6G1h1)U4s2sIAhuG2%6QIWAN2jr4>^PZ3BeQJ3+asV4q0V2@qB(4+?VJjAR[hG4?-q00Koq.1h1*-4s2sE@qB48+?VVq1cIT-4>^PZAj.>"1h1,P4s2sIAi*p[%6QIWAhlOm4>^P[2Ei6G3+b!Z4q0V2@qIY`+?VJjAnF4L4?-q12*MI31h8:#4s2sEA2%IV+?VVq@5''kS4>^S&@m2"t1h8:N4s2sIAmmM[%6QIX0ekj74>^S''1HlpD3+cVU4q0V2A2,o)+?VJk0f;-;4?-q^2a.[51h8=!4s2sEA2-&-+?VVq@UVG04>^S''3BeQJ1h8=L4s2sIAn#@9%6QIX0k<Hj4>^S(0g6^B3+cY\4q0V2A25u*+?VJk1,V6<4?-q`2EhR41h8@#4s2sEA26,.+?VVqAM?:W4>^S(A3M+u1h8@Q4s2sIAnEb]%6QIX11i]m4>^S)0KpUA3+cb[4q0V2A2>r(+?VJk1G_3;4?-qb@6P,_1h8C!4s2sEA2?),+?VVqAn=.84>^S)2Ei6G1h8C$4s2sJ0JGFL%6QIX1LrZl4>^S)ANh5!3A<3F4q0V2A2@g]+?VJk1c.B=4?5)N2a.[51h8F#4s2sEA2H2.+?VY<1GD!%4>^S*2a/?H1h8F&4s2sJ0JbLK%6QIX1grQj4>^S*@Qkns3A<6L4q0V2A2Ig\+?VJk1hAin4?5)OAj-Yd1h8Ht4s2sEA2Q)*+?VY<1c7H+4>^S+1-QgC1h8I#4s2sJ0JkaQ%6QIX2)d]A4>^S+3''JHI3A<<N4q0V2A2Rm]+?VJk2.\ro4?5)R2EhR41h8IU4s2sEA2Z/++?VY<2IScY4>^S,1-QgC1h8L$4s2sJ0K*N,%6QIX2IScl4>^S,@Qkns3A<EM4q0V2A2[s^+?VJk2J,,q4?5)T@m1>a1h8O''4s2sEA2cJ3+?VY<3FtA`4>^S-3BeQJ1h8OR4s2sJ0OZe%%6QIX2e"rn4>^S-A3M+u3A=l#4q0V2A2l>.+?VJk3&<`@4?5*)@m1>a1h8R&4s2sEA2lG1+?VY<@V.e54>^S.2Ei6G1h8R)4s2sJ0Olk%%6QIX3&s/F4>^S.@6Per3A=r&4q0V2A2n$^+?VJk3+P2q4?5**@Qk5`1h8RX4s2sEA2uA.+?VY<A2HIZ4>^S/1-QgC1h8U''4s2sJ0P!.,%6QIX3B'',E4>^S/3BeQJ3A>##4q0V2A3"''^+?VJk3FY/p4?5*,3Bdm71h8UX4s2sEA772V+?VY<AhZCX4>^SW1-QgC1h:#N4s2sJ0P34,%6QIX@5L.j4>^SW2a/?H3A>&*4q0V2A77G]+?VJk@:;>B4?5*-Aj-Yd1h:$*4s2sEA79%5+?VY=0K20)4>^SWAj.>"1h:&R4s2sJ0ed$"%6QIX@Q?Up4>^SX@6Per3AE6I4q0V2A7B"3+?VJk@V%_G4?5,N@6P,_1h:''-4s2sEA7I>X+?VY=0kNTY4>^SY1-QgC1h:)Q4s2sJ0etRL%6QIX@l6Fm4>^SY3BeQJ3AE9K4q0V2A7K.6+?VJk@q@hH4?5,P2a.[51h:*.4s2sEA7RS^+?VY=1L`NW4>^SZ2a/?H1h:,V4s2sJ0f1^N%6QIXA7@_F4>^SZANh5!3AEBI4q0V2A7T:9+?VJkAM?:j4?5,R3''Id61h:/P4s2sEA7[M[+?VY=2.A`Y4>^S[1HlpD1h:/S4s2sJ0f<Q,%6QIXAMlXo4>^S[2a/?H3AEEM4q0V2A7]46+?VJkARmtI4?5,T@6P,_1h:0/4s2sEA7dS\+?VY=3&!N*4>^S\2Ei6G1h:2W4s2sJ0fW`.%6QIXAiMss4>^S\@6Per3AENM4q0V2A7f:7+?VJkAn4(J4?5,V2a.[51h:304s2sEA7fF;+?VY=3Fk;_4>^V''0KpUA1hA?r4s2sJ0f`i0%6QIY0Jbm84>^V''3''JHI3AFr!4q0V2AM?,.+?VJl0Om9h4?5-*0Koq.1hA@O4s2sEAMGl&+?VY=@Q$CZ4>^V(0g6^B1hAC!4s2sJ0k+TU%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaYAMI[Y+?VJl0k<Hj4?5-,@6P,_1hACQ4s2sEAMQ#)+?VY=A7[q64>^V)1HlpD1hAF!4s2sJ0kE4+%6QIY1,_<=4>^V*0KpUA3AG)R4q0V2AMZ,++?VJl1H.K?4?5-.@Qk5`1hAI&4s2sEAMZ>1+?VY>0JYg$4>^V*@6Per1hAIQ4s2sJ1,(RL%6QIY1LrZl4>^V*Aj.>"3AN9s4q0V2AMc,*+?VJl1bq6;4?5/O1-Q.01hAL"4s2sEAMdgZ+?VY>0fD3)4>^V+@Qkns1hALT4s2sJ1,3B)%6QIY2)%3:4>^V,2*N-F3AN?L4q0V2AMlD1+?VJl2)mcB4?5/Q0g6%/1hAO)4s2sEAMmm[+?VY>1Gq?*4>^V,@Qkns1hAOS4s2sJ1,EB''%6QIY2.Sln4>^V-0KpUA3ANEG4q0V2AMu8,+?VJl2DRH=4?5/R2EhR41hAR$4s2sEAMuD0+?VY>1grQW4>^V-2Ei6G1hAR)4s2sJ1,NQ+%6QIY2E<rD4>^V-@Qkns3ANHI4q0V2AN"''_+?VJl2J#&p4?5/S3''Id61hARW4s2sEAN);,+?VY>2.JfZ4>^V.0g6^B1hAU%4s2sJ1,WZ-%6QIY2`*]@4>^V.2Ei6G3ANKK4q0V2AN)P3+?VJl2e"rn4?5/T2a.[51hAUU4s2sEAN2D.+?VY>2J#&]4>^V/1-QgC1hAX''4s2sJ1,h''S%6QIY3&WrC4>^V/3''JHI3ANO''4q0V2AN2\6+?VJl3+4un4?5/V0g6%/1hAXV4s2sEAN;P1+?VY>3&Wr04>^V01d3$E1hA[)4s2sJ1,rl0%6QIY3B'',E4>^V03''JHI3ANTO4q0V2AN=6a+?VJl3FtAs4?5/WA3LGb1hA[Z4s2sEARR8V+?VY>@50qT4>^VX1d3$E1hC)Q4s2sJ11=cY%6QIY@5^:l4>^VX@6Per3AP&!4q0V2ART+5+?VJl@PBtg4?50+A3LGb1hC,Q4s2sEAR[P]+?VY>@lZ^^4>^VY2a/?H1hC,U4s2sJ11OiY%6QIY@Q?Up4>^VY@6Per3AP,!4q0V2AR]+4+?VJl@l-@l4?50-1Hl711hC/T4s2sEARd\`+?VY>AM?:W4>^VZ@Qkns1hC0,4s2sJ11aoY%6QIY@q7bG4>^V[0KpUA3AP2%4q0V2ARmP[+?VJlA2HIm4?50/3Bdm71hC2T4s2sEARmba+?VY>An4(74>^V[3BeQJ1hC3-4s2sJ1GCRJ%6QIYA7RkH4>^V\1HlpD3AW?L4q0V2AS!__+?VJlAMu^p4?52P1Hl711hC5W4s2sEAS!hb+?VY?0fD3)4>^V\3BeQJ1hC6-4s2sJ1GNB''%6QIYARmtI4>^V\Aj.>"3AWEH4q0V2AS*Y\+?VJlAhlOm4?52Q3Bdm71hC8T4s2sEAS*b_+?VY?11NKW4>^V]2*N-F1hC8W4s2sJ1G^^K%6QIYAiDmr4>^V]3''JHI3AWHJ4q0V2AS,@7+?VJlAn=.K4?52R3Bdm71hJEr4s2sEAhYu(+?VY?1c.B*4>^Y(1HlpD1hJF!4s2sJ1Gh''T%6QIZ0K20<4>^Y(@m2"t3AWL''4q0V2Ah[aZ+?VJm0P3Kk4?52T2*MI31hJHr4s2sEAhc#(+?VY?2*!i04>^Y)1-QgC1hJI&4s2sJ1GrZ+%6QIZ0k!6g4>^Y)@m2"t3AWQO4q0V2Ahdj\+?VJm1,(m74?52UA3LGb1hJKt4s2sEAhl2,+?VY?2_dK*4>^Y*2*N-F1hJL%4s2sJ1H.6V%6QIZ1,qH?4>^Y*@6Per3AWU''4q0V2AhmgZ+?VJm11WQk4?52VAj-Yd1hJLT4s2sEAhu,)+?VY?3&Nl/4>^Y+0g6^B1hJO!4s2sJ1H7?X%6QIZ1G_3;4>^Y+2Ei6G3AWX(4q0V2AhuA0+?VJm1LiTk4?52X0Koq.1hJOT4s2sEAi)D0+?VY?3B9844>^Y,2a/?H1hJR(4s2sJ1LW+(%6QIZ1h8cm4>^Y,ANh5!3AY,!4q0V2Ai28++?VJm2).9;4?53,2EhR41hJU#4s2sEAi2M2+?VY?@Q?U]4>^Y-3''JHI1hJUR4s2sJ1Li+&%6QIZ2.A`l4>^Y-A3M+u3AY/%4q0V2Ai;>,+?VJm2DRH=4?53-ANgPc1hJX%4s2sEAi;P2+?VY?A26=X4>^Y.2a/?H1hJX+4s2sJ1LrL0%6QIZ2Ieon4>^Y.ANh5!3AY5(4q0V2Ai=6b+?VJm2dnlm4?53/3Bdm71hJ[W4s2sEAiMY3+?VY?Ammk44>^Y02Ei6G1hJ^W4s2sJ1b^aM%6QIZ3+P2q4>^Y10KpUA3A`F"4q0V2AiVV1+?VJm3A`oB4?55Q2*MI31hJa*4s2sEAiVe6+?VY@0k!6T4>^Y13''JHI1hJa.4s2sJ1biQ*%6QIZ3FP)o4>^Y1ANh5!3A`KG4q0V2AiXHe+?VJm@5C(i4?55R3Bdm71hL/Q4s2sEAmmS]+?VY@11i]Z4>^YY3''JHI1hL/V4s2sJ1c%$R%6QIZ@:DDC4>^YYA3M+u3A`O$4q0V2Amo77+?VJm@PL%h4?55T0Koq.1hL2P4s2sEAn!Y^+?VY@1c7H+4>^YZ3''JHI1hL3,4s2sJ1c/`,%6QIZ@V%_G4>^Y[3''JHI3A`TN4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71hL5X4s2sEAn,75+?VY@2DIB)4>^Y[@m2"t1hL8P4s2sJ1c@6U%6QIZA26=k4>^Y\1HlpD3A`X*4q0V2An3b_+?VJmA2laq4?55W1Hl711hL9,4s2sEAn5@7+?VY@2dnlZ4>^Y\@m2"t1hL;Q4s2sJ1cR0Q%6QIZAMu^p4>^Y]2a/?H3Ab8&4q0V2AnEtc+?VJmAiMss4?58X1d2@21hL>[4s2sEAnGX=+?VYA2`Nu14>efH0g6^B2)$^>4s2sJ2)mEV%6QL%0Jbm84>efH1d3$E3AicT4q0V30JGLN+?VM80Od3g4?58Z2*MI32)$^o4s2sF0JP@I+?VYA3B9844>efI2*N-F2)$aC4s2sJ2.8C,%6QL%0fV?>4>efI@Qkns3Ak5V4q0V30JR''$+?VM80kENk4?59.1Hl712)$as4s2sF0JY=G+?VYA@Q-I[4>efJ1-QgC2)$dB4s2sJ2.J=(%6QL%1,V6<4>efJ2Ei6G3Ak;''4q0V30JYXP+?VM811EEi4?59/A3LGb2)$dq4s2sF0J[3''+?VYAA2-7W4>efJAj.>"2)$gB4s2sJ2.SX0%6QL%1Gq?=4>efK2Ei6G3Ak>Z4q0V30JbXO+?VM81H7Q@4?5911Hl712)$gH4s2sF0Jd-$+?VYAAMu^]4>efL1HlpD2)$jI4s2sJ2DR''P%6QL%1grQj4>efL@m2"t3ArX%4q0V30Jm<(+?VM81hAin4?5;TAj-Yd2)$k!4s2sF0JtUL+?VYB1H.K,4>efM2a/?H2)$mI4s2sJ2Deu/%6QL%2*!iC4>efM@Qkns3Ar`L4q0V30K!?(+?VM82.Sln4?5;W2EhR42)$n!4s2sF0K!H++?VYB2*!i04>efN1HlpD2)$pF4s2sJ2E!EV%6QL%2E!`A4>efN3''JHI3Ard+4q0V30K*?''+?VM82Inuo4?5;Y3Bdm72)$q"4s2sF0K1gP+?VYB2e>/^4>efO3''JHI2)$st4s2sJ2E<KU%6QL%2e5)p4>efP2Ei6G3Arm.4q0V30K;$U+?VM83+G,p4?5<.@Qk5`2)%$G4s2sF0KCpQ+?VYB@kp4W4>efQ2*N-F2)%$K4s2sJ2Ig/Z%6QL%3B'',E4>efQ3''JHI3AtD%4q0V30KD-W+?VM83FP)o4?5<11Hl712)%%"4s2sF0KEW,+?VYBA2c[]4>efQANh5!2)&Gm4s2sJ2Ip>^%6QL%@5:"h4>eg$2*N-F3AtG*4q0V30OZk''+?VM8@6$Lo4?5<2@Qk5`2)&HI4s2sF0O\ES+?VYBAhZCX4>eg$@m2"t2)&HL4s2sJ2J+d0%6QL%@PBtg4>eg%0g6^B3AtJZ4q0V30Och%+?VM8@Pg7k4?5>S1-Q.02)&Jt4s2sF0Od"*+?VYC0O[-S4>eg%3BeQJ2)&KK4s2sJ2_d!M%6QL%@UhSE4>eg%A3M+u3B&ZL4q0V30OeTW+?VM8@kp4j4?5>T2a.[52)&Ms4s2sF0OnQU+?VYC0kNTY4>eg&@m2"t2)&NN4s2sJ2_m?V%6QL%@q@hH4>eg&Aj.>"3B&^&4q0V30Ouk$+?VM8A2-7j4?5>UANgPc2)&Ps4s2sF0P!+++?VYC1G_3(4>eg''3''JHI2)&QL4s2sJ2`"l+%6QL%A7@_F4>eg''A3M+u3B&a+4q0V30P"cZ+?VM8AMH@k4?5>W2*MI32)&Ss4s2sF0P+ZV+?VYC1c[`/4>eg(@Qkns2)&TO4s2sJ2`3EU%6QL%ARmtI4>eg(ANh5!3B&fS4q0V30P+i[+?VM8AhZCk4?5>X@m1>a2)&Vt4s2sF0P3+)+?VYC2D[N+4>eg)1d3$E2)&W"4s2sJ2`<QX%6QL%Ai;gq4>eg)ANh5!3B&j)4q0V30eb:F+?VM90Jks94?5>Z2a.[52)-dB4s2sF0ed*$+?VYC2e5)]4>eiIA3M+u2)-g?4s2sJ2`N]Z%6QL&0fD3<4>eiJ3''JHI3B&rU4q0V30ek[P+?VM90kNTl4?5>\3Bdm72)-j?4s2sF0etII+?VYC@50qT4>eiK1-QgC2)-jB4s2sJ2dnO,%6QL&1,M0;4>eiK2a/?H3B(A*4q0V30f!0$+?VM911EEi4?5?00Koq.2)-js4s2sF0f(XM+?VYC@Pp=Y4>eiL2*N-F2)-mI4s2sJ2e$>^%6QL&1LWHi4>eiL@Qkns3B(G)4q0V30f*<''+?VM91LrZl4?5?12a.[52)-n!4s2sF0f1^N+?VYC@q7b44>eiM2*N-F2)-pJ4s2sJ2e4a/%6QL&1grQj4>eiM@Qkns3B(JW4q0V30f3E)+?VM92)@E=4?5?2Aj-Yd2)-sG4s2sF0f:sT+?VYCAS"%74>eiN@Qkns2).!E4s2sJ2eG!4%6QL&2E3lC4>eiO@6Per3B/`M4q0V30fEK)+?VM92Inuo4?5AU3Bdm72)."#4s2sF0fLgN+?VYD0k<HW4>eiP1-QgC2).$G4s2sJ3&36Q%6QL&2`3cA4>eiP@6Per3B/cQ4q0V30fNQ*+?VM92e,#o4?5AVANgPc2).%#4s2sF0fUpP+?VYD1GM''&4>eiQ1HlpD2).''I4s2sJ3&<QY%6QL&3&WrC4>eiQA3M+u3B/g+4q0V30fW`.+?VM93ANc@4?5AX2a.[^DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>eiR1HlpD2).*L4s2sJ3&G52%6QL&3B'',E4>eiR3BeQJ3B/lR4q0V30f`],+?VM93Fb5q4?5AY@m1>a2).+%4s2sF0f`i0+?VYD2.f#]4>ej%0KpUA2)/Mo4s2sJ3&WQV%6QL&@5C(i4>ej%2*N-F3B/oV4q0V30jut(+?VM9@5g@m4?5AZA3LGb2)/NO4s2sF0k)q&+?VYD@6$L\4>ej&2Ei6G2)/Q!4s2sJ3+=^.%6QL&@Q6Oo4>ej&@m2"t3B1J,4q0V30k+ZW+?VM9@l$:k4?5B1A3LGb2)/T!4s2sF0k4WU+?VYD@lZ^^4>ej''@Qkns2)/TN4s2sJ3+HPa%6QL&@q@hH4>ej''Aj.>"3B1P-4q0V30k;t%+?VM9A2-7j4?5B3@m1>a2)/Vt4s2sF0k<1++?VYDAMZLZ4>ej(3BeQJ2)/WM4s2sJ3+aj.%6QL&A7IeG4>ej)1-QgC3B1V.4q0V30kE.)+?VM9AMu^p4?5B5Aj-Yd2)/Z%4s2sF0kFcW+?VYE0K)*(4>ej)@m2"t2)/ZQ4s2sJ3A>#.%6QL&AS"%J4>ej*0g6^B3B8fN4q0V30kN1)+?VM9AhuUn4?5DV3Bdm72)/]"4s2sF0kN:,+?VYE0k3BV4>ej*2Ei6G2)/]%4s2sJ3AG,0%6QL&AiMss4>ej*A3M+u3B8iM4q0V30kOu\+?VM9AnF4L4?5DW3Bdm72)6j>4s2sF1,(II+?VYE11EEV4>elJ1HlpD2)6jD4s2sJ3AP21%6QL''0K20<4>elJ3BeQJ3B8lP4q0V31,*-#+?VM:0P!?i4?5DX3''Id62)6jt4s2sF1,1LI+?VYE1b_*&4>elK1HlpD2)6mC4s2sJ3A`WX%6QL''0f;-;4>elK3''JHI3B8p,4q0V31,36%+?VM:0kENk4?5DZ3''Id62)6p@4s2sF1,:UK+?VYE2.f#]4>elL2Ei6G2)6pG4s2sJ3B&o]%6QL''11<?h4>elL@Qkns3B9&S4q0V31,<H*+?VM:1H@WA4?5D^@6P,_2)6sr4s2sF1,EB''+?VYE@5^:Y4>elM@m2"t2)6t!4s2sJ3FOp3%6QL''1M/fn4>elN0KpUA3B:M[4q0V31,LaM+?VM:1h8cm4?5E22*MI32)7""4s2sF1,WN)+?VYE@kp4W4>elOA3M+u2)7%#4s2sJ3Fk$3%6QL''2D[N>4>elP@m2"t3B:Y,4q0V31,`Z,+?VM:2J,,q4?5E5ANgPc2)7*E4s2sF1,i],+?VYEAhlOZ4>elQANh5!2)7-F4s2sJ@5''H#%6QL''3&*T>4>elR2a/?H3FOU"4q0V31,q6W+?VM:3+P2q4?6h)0Koq.2)7.&4s2sF1,rl0+?VYm0fM9*4>elS0KpUA2)8So4s2sJ@521S%6QL''@5C(i4>em&2a/?H3FO]u4q0V311<.++?VM:@:MJD4?6h+3Bdm72)8TO4s2sF11Dt%+?VYm1c@N,4>em''1-QgC2)8Vs4s2sJ@5MFW%6QL''@Pp=l4>em''3BeQJ3FOd!4q0V311F]V+?VM:@UhSE4?6h-3''Id62)8WO4s2sF11FiZ+?VYm2.JfZ4>em(0KpUA2)8Yr4s2sJ@5]f''%6QL''@l$:k4>em(2Ei6G3FOg(4q0V311OcW+?VM:@q.\F4?6h0A3LGb2)8ZP4s2sF11OlZ+?VYm3A`o/4>em)0g6^B2)8]#4s2sJ@:;/[%6QL''A2c[p4>em)@6Per3FQAP4q0V311XoZ+?VM:A7e"J4?6hZA3LGb2)8_s4s2sF11`1(+?VYm@l$:X4>em*1-QgC2)8`$4s2sJ@:M2Z%6QL''AN)dq4>em*3''JHI3FQE.4q0V311aoY+?VM:AhZCk4?6h\3Bdm72)8c!4s2sF11iC-+?VYmAMQFY4>em+2Ei6G2)8c(4s2sJ@:_A]%6QL''An!qH4>em+Aj.>"3FQMR4q0V31GCLH+?VM;0Jbm84?6h^2*MI32)?pD4s2sF1GE9%+?VYmAn+"64>eoK@m2"t2)?ps4s2sJ@PBW&%6QL(0P3Kk4>eoL1-QgC3FX[&4q0V31GL^M+?VM;0fD3<4?6k*0Koq.2)?sG4s2sF1GNB''+?VYn0f2''''4>eoLA3M+u2)@!A4s2sJ@PM=U%6QL(1,1s84>eoM1-QgC3FX`t4q0V31GUjP+?VM;1-%N@4?6k+@6P,_2)@!s4s2sF1G^dM+?VYn1G_3(4>eoN1HlpD2)@$H4s2sJ@P_OY%6QL(1H7Q@4>eoN@6Per3FXgR4q0V31G`N)+?VM;1LrZl4?6k.1-Q.02)@%"4s2sF1GgdL+?VYn2)RQ,4>eoO1-QgC2)@*I4s2sJ@PqUY%6QL(2)[W@4>eoP3BeQJ3FXp$4q0V31GrT)+?VM;2.A`l4?6k02*MI32)@+"4s2sF1H%''R+?VYn2`Nu14>eoQ2Ei6G2)@.&4s2sJ@Q62.%6QL(2_dK=4>eoR2a/?H3FY!)4q0V31H.9W+?VM;2`X&E4?6k2@Qk5`2)@1"4s2sF1H73T+?VYn3G(Ga4>eoS2Ei6G2)@6N4s2sJ@UWk4%6QL(3B'',E4>eoT@Qkns3FZJR4q0V31HAu0+?VM;@5U4k4?6k\@Qk5`2)AZ"4s2sF1LX]U+?VYnA2c[]ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QL(@:MJD4>ep''ANh5!3FZN14q0V31L`%%+?VM;@PL%h4?6k^2*MI32)A\t4s2sF1L`7++?VYnARdn54>ep(2a/?H2)A]%4s2sJ@V.>Y%6QL(@UVGC4>ep)0g6^B3FZSX4q0V31Li4)+?VM;@pqPD4?6n*0Koq.2)A`O4s2sF1LjrZ+?VYo0O[-S4>ep)ANh5!2)A`S4s2sJ@k_IX%6QL(A2-7j4>ep*@m2"t3Fad#4q0V31Lt#[+?VM;A7[qI4?6n,0g6%/2)Aet4s2sF1M&:)+?VYo1,_<*4>ep+1-QgC2)Af#4s2sJ@kqIV%6QL(AMlXo4>ep+2a/?H3FagU4q0V31M(&[+?VM;ARmtI4?6n-@m1>a2)AfT4s2sF1M/F,+?VYo1M/f[4>ep,1d3$E2)Ai%4s2sJ@l-)-%6QL(Ai;gq4>ep,A3M+u3FamS4q0V31b^UI+?VM<0Jbm84?6n/3Bdm72)I!E4s2sF1b`B&+?VYo2D@<(4>erL@m2"t2)I$A4s2sJ@l?;1%6QL)0ekj74>erM@6Per3FasY4q0V31biN)+?VM<0kENk4?6n1A3LGb2)I''B4s2sF1bpdL+?VYo3&<`-4>erN1-QgC2)I''E4s2sJ@lQJ4%6QL)1,hB>4>erN@6Per3Fb''-4q0V31c$gL+?VM<1Gh9<4?6n\ANgPc2)I*H4s2sF1c%$R+?VYo@lQX]4>erO2a/?H2)I*K4s2sJ@q7;X%6QL)1H@WA4>erO@6Per3FcT.4q0V31c&T)+?VM<1LiTk4?6n_0Koq.2)I+"4s2sF1c&],+?VYoAMZLZ4>erOAj.>"2)I-E4s2sJ@q@P^%6QL)1bq6;4>erP1HlpD3FcW/4q0V31c.$Q+?VM<1c[`B4?6n_A3LGb2)I.!4s2sF1c79W+?VYoAiDm_4>erQ@Qkns2)I3K4s2sJA2%FU%6QL)2E!`A4>erR@6Per3Fjj&4q0V31cAl.+?VM<2J,,q4?6q-0Koq.2)I6G4s2sF1cI-Q+?VYp1,M0(4>erS1HlpD2)I6O4s2sJA26//%6QL)2`X&E4>erT1-QgC3Fjp#4q0V31cR9T+?VM<3&NlB4?6q.@m1>a2)I9N4s2sF1cREX+?VYp1b_*&4>erT3''JHI2)I<N4s2sJA2H)+%6QL)3As&D4>erUA3M+u3Fk!(4q0V31c],2+?VM<3G(Gt4?6q0ANgPc2)J_q4s2sF1gr=,+?VYp2DRH*4>es(3BeQJ2)J`M4s2sJA2[s^%6QL)@:DDC4>es(@m2"t3Fk''&4q0V31gsoY+?VM<@k^(h4?6q21Hl712)Jeu4s2sF1h0rX+?VYp3+4u[4>es*@Qkns2)JfS4s2sJA2uJ1%6QL)A2$1i4>es+3BeQJ3Fk-Z4q0V31h:#Y+?VM<A7IeG4?6q\2EhR42)JiS4s2sF1hAC*+?VYp@:;>/4>es,1-QgC2)Jl%4s2sJA7@5V%6QL)AMu^p4>es,@Qkns3FlSV4q0V31hC/\+?VM<AS"%J4?6q]A3LGb2)Jo"4s2sF1hL;_+?VYp@l6FZ4>euM0KpUA2)R''B4s2sJA7RP]%6QL*0Jbm84>euM@m2"t3FlZ04q0V32)&Q)+?VM=0f2'':4?6q`2a.[52)R*G4s2sF2).!Q+?VYpAhZCX4>euN2a/?H2)R*s4s2sJA7dY^%6QL*0k*<h4>euO@Qkns3Fl`24q0V32)8Z*+?VM=1G_3;4?6t,A3LGb2)R0H4s2sF2)@0T+?VYq0fD3)4>euPANh5!2)R1%4s2sJAM[dZ%6QL*1c%<<4>euQ2*N-F3Ft''''4q0V32)I<W+?VM=1h/]l4?6t1Aj-Yd2)R4%4s2sF2)Jo/+?VYq2J#&]4>euR1-QgC2)R6J4s2sJAN)M2%6QL*2)[W@4>euR2a/?H3Ft0(4q0V32)R?W+?VM=2.A`l4?6t41Hl712)R7$4s2sF2)So.+?VYq3&s/34>euRANh5!2)R9J4s2sJAN40`%6QL*2DdT?4>euS2Ei6G3Ft3-4q0V32)[BW+?VM=2I\im4?6t53''Id62)R:&4s2sF2)d6R+?VYq@5''kS4>euT1-QgC2)R<K4s2sJARRM]%6QL*2`*]@4>euT3''JHI3FuW-4q0V32)dNZ+?VM=2e,#o4?6t^0Koq.2)R=''4s2sF2)f)1+?VYq@Q$CZ4>euTAj.>"2)R?I4s2sJAR[Y`%6QL*3&3Z?4>euU2Ei6G3FuZ34q0V32)mNY+?VM=3+4un4?6t_2*MI32)R@&4s2sF2)o)0+?VYq@pqP14>euUANh5!2)R@*4s2sJARmP[%6QL*3A<W>4>euV1-QgC3Fu_Y4q0V32*!HV+?VM=3A`oB4?6t`3Bdm72)RBP4s2sF2*!TZ+?VYqAMZLZ4>euV3BeQJ2)RC(4s2sJAS#=7%6QL*3Fk;r4>euVANh5!3FueV4q0V32.81&+?VM=@50qg4?6tb2*MI32)Sf!4s2sF2.9uY+?VYr0JG["4>f!*0KpUA2)Sht4s2sJAhc#(%6QL*@Pp=l4>f!*@6Per3G(!S4q0V32.C&Z+?VM=@l-@l4?7"/1Hl712)Sl$4s2sF2.JO.+?VYr11WQX4>f!+2a/?H2)SlS4s2sJAhu,)%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaZ2.SF*+?VM=A2QOn4?7"0Aj-Yd2)So&4s2sF2.U,Z+?VYr1c7H+4>f!,@Qkns2)SoT4s2sJAi+!]%6QL*A7e"J4>f!-1-QgC3G(-+4q0V32.\R-+?VM=AMcRn4?7"2@6P,_2)Sr&4s2sF2.\[0+?VYr2.Sl[4>f!-3''JHI2)Sr*4s2sJAi;J0%6QL*ARRbF4>f!-@m2"t3G(0.4q0V32.^>_+?VM=AhlOm4?7"3A3LGb2)Su%4s2sF2.ea1+?VYr2`!W,4>f!.2a/?H2)SuV4s2sJAiD\5%6QL*An=.K4>f!.Aj.>"3G(6*4q0V32D?gK+?VM>0JPa64?7"5ANgPc2)[-D4s2sF2D?sO+?VYr3AE],4>f#N2*N-F2)[-I4s2sJAiVb5%6QL+0K;6=4>f#N3BeQJ3G(9^4q0V32DAQ''+?VM>0P*Ej4?7"^0g6%/2)[0C4s2sF2DHsN+?X7E0P!?V4>f#O1d3$E2)[0H4s2t"@50Q%%6QL+0fM9=4>f#O3BeQJAmmE+4q0V32DJW(+?VM>0k*<h4D&"W1Hl712)[1!4s2sF2DJc,+?X7E1,hB+4>f#Q2*N-F2)[6K4s2sJAn!Y^%6QL+1c%<<4>f#R1d3$E11aoQ4q0V32DmBV+?VM>2)d]A4>]&X1-Q.02)[<O4s2sF2DmKY+?VJ@3&Nl/4>f#T0g6^B2)[?K4s2sE@l\-b%6QL+2E!`A4>f#T@m2"t1h8<s4q0V32E#/2+?VM>@q7bG4>8HE0Koq.2)\u#4s2sF2J-Pb+?V>31,1s%4>f&O0KpUA2)d:&4s2sA0JmB*%6QL,2I\im4>f&U@m2"t1GEDu4q0V32`G20+?VM?2e5)p4>SZI1Hl712)dI*4s2sF2`NKT+?VG61H7Q-4>f&W0g6^B2)dKN4s2sD0f!0$%6QL,3&EfA4>f&X@Qkns1GN;l4q0V32`YD4+?VM?3FtAs4>LJ-1-Q.02)dO-4s2sF2dnF)+?VDj3&Nl/4>f''+1-QgC2)er"4s2sCAN2\6%6QL,@5L.j4>f''+A3M+u11`FU4q0V32dp8]+?VM?@:h\G4>LJ.3''Id62)etu4s2sF2e$5[+?VDj3FY/]4>f'',@m2"t2)euT4s2sCARRP^%6QL,@V%_G4>f''-0KpUA11am''4q0V32e+R++?VM?@l-@l4>LJVAj-Yd2)f#&4s2sF2e+a0+?VDj@Pg7X4>f''-2a/?H2)f#*4s2sCAR[V_%6QL,@pqPD4>f''.2a/?H11ap)4q0V32e4m3+?VM?AnF4L4>LJX@Qk5`2)m9E4s2sF3&EQX+?VG:0JG["4>f)T3''JHI2)mNM4s2sD1c.0U%6QL-2`!W?4>f*1Aj.>"1Gh$I4q0V33A<-N+?VMA3Fb5q4>SiK0g6%/2*![-4s2sF3G)ke+?VG;3G(Ga4>gP$0KpUA2.81J4s2sD2D?mM%6QLV0Om9h4>gP%2Ei6G1H$q!4q0V3@50])+?VMiAnF4L4>SlM@Qk5`2.A6n4s2sF@V049+?VG=0Jks&4>gV&0KpUA2.L614s2sD3&!0Q%6QLY0JG[54>gY(1HlpD1H@-G4q0V3A2,o)+?VMl2E3lC4>SuP3Bdm72.SU*4s2sFA7IS_+?VG?2J,,^4>gYZ3BeQJ2.U5U4s2sD3Fjj.%6QLYA2c[p4>gY]Aj.>"1HB##4q0V3AM>f%+?VMm2E<rD4>UD"3Bdm72.\[S4s2sFAS,O<+?VGg2`*]-4>g_)0KpUA2.e[$4s2sD@PD4S%6QL[1c.B=4>g__Aj.>"1L`1Q4q0V40JG1E+?VP92DRH=4>UJ$@Qk5`2D@$F4s2sG0Out''+?VGi2J,,^4>nm(1d3$E2DA`T4s2sD@q@AY%6QO''0JG[54>np+Aj.>"1Lr1M4q0V41,(CG+?VP;AnF4L4>UP&A3LGb2D[$@4s2sG1M15_+?VGl0P!?V4>o#M0KpUA2Dd6M4s2sE0JI$$%6QO*1c[`B4>o$.Aj.>"1b^dG4q0V42)$^J+?VP>2)%3:4>\cHANgPc2Dm?H4s2sG2.gGa+?VJ82D@<(4>o)O0KpUA2E#/Z4s2sE1,*<(%6QO-0JG[54>o,R2a/?H1c$gt4q0V42_m?V+?VP@3FY/p4>\iM3''Id62E*X+4s2sG2`YJ6+?VJ:@:VP24>o-,0KpUA2E,,S4s2sE1L`+''%6QO-@q%VE4>o-1Aj.>"1c&ZR4q0V43&!$M+?VPA@kp4j4>\lL1Hl712E52&4s2sG3+cbd+?VJ;A2c[]4>o2R0KpUA2E>A]4s2sE2)-pO%6QOW0JG[54>pV(2a/?H1c@''F4q0V4@5Bl,+?VPj1h&Wk4>\rQA3LGb2ISFP4s2sG@:j+8+?VJ=2DRH*4>pY&0KpUA2I\@M4s2sE2_d3S%6QOX0P!?i4>pY''0g6^B1cI0H4q0V4@PKW%+?VPk2D[N>4>\uP@6P,_2I\R$4s2sG@Q-),+?VJ>2e5)]4>pY-1d3$E2I^914s2sE2`PA4%6QOY0JG[54>p\]Aj.>"1cR3u4q0V4A2#]$+?VPm11NKj4>]&Q@6P,_2InRR4s2sGA2Rp^+?VJ@1cRZ.4>p_-Aj.>"2In^"4s2sE3B(D2%6QOZ2DIB<4>p_.1d3$E1c[L+4q2(@A7B.k@;]^h%1P$P+C\npBl7BlEa`iuAIUa[A2Z>0+?VPm2`X&E4>]&X2a.[52InaT4s2sGA2e!^+?VJ@3Fb5^4>p_/A3M+u2Ing''4s2sE3FOU*%6QOZ3AWiA4>p_^Aj.>"1c]#)4q0V4AM>f%+?VPnAnF4L4>^J%2*MI32J+Ws4s2sGAnGX=+?VJi1,V6)4?"rJ0KpUA2_[*D4s2sE@koo*%6QR''2)7?<4?"rQ3''JHI1h/I(4q0V50K2!U+?VS:AN)dq4>^PV1d2@22_\f&4s2sH0P4o\+?VJk0k!6T4?"uK0KpUA2_d7#4s2sEA2>u)%6QR(2e,#o4?"uS1-QgC1h:$,4q0V50fV-V+?VS;AnF4L4CKot0Koq.2_m''@4s2sH11k,^+?X''d2`Nu14?#&M0KpUA2`#&X4s2sr0fM''U%6QR+0JG[54?#*/Aj.>"@59c$4q0V52)$^J+?VS?AnF4L4CL$)3''Id62`<?D4s2sH2DI$P+?X''h2`Nu14?#/Q2*N-F2`<L%4s2sr1c[6R%:sEf@V0XhDJ*Mi%:sEf@r5Xn%7<iuE)''hYAKYK*EcP`/FC])qF<E5(9jqu`A7]@eDImj"F)Q2A@q?d%Df?.sDIa2fDIa1c,pbutA5Zu[Dfp)1AITq378HA^~>'
%
classmethod: Category
cmapAdobe_Japan1_UCS2
	"Category class>>#recodeCMapUnicodeMethods generated this method at 17. Mai 2021 um 12:46:54"

	^String fromASCII85: ',p?)`/O<oc@V%,I/heDGATMd4EarZ46VV!.%4*;gDe!p,ASuTbAS#C`A5Zu[Dfp)1ATKmT:i^Ja;e:%n-ppQo8T&6a.1IRL8T&$SF_#&]ATMd4EarZA+Ad)s@oHr\+=KTK6qM91F=@YF,sl0UBl6g[F)Q2A@q@\D6VV!.+=KNdDdm908mu[IDD<_C6W5`h%4*<"Bln0&3Zoh:A8bpg/P9Gj@;[eO<C9\?+@0OV@V$ZS@;oXm0d&D(%4*<$ATDj+Df.TY3A*!>1(>NU6Z6phEbT0"F?1Nr/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M.DX,suTiH#dV3BQQ9X6Z6phEbT0"F<E:u3A<$?0JPR16"FnCAM,)kCht57BkM+$F!,L7F(KB8ARmD&,pbosE-ZJ<B4uBJ%4*;fDfBuBBkM+$3Zq=3A8-+,EbT!*FD5Z2+CT.u+E_a:+DG^9F)Q2A@q?ckDIal!Bl7@"Gp$^;Ec#kK+EqOABHV56%4*;fDfBuBBkM+$3ZrW\FD,T8F<GF=A8,Xi@psInDf.*K@<,p%E+O'',BlnH.A0>i3Dg#i*ARlp*BOQ!*FD,4p,pbosE-ZJ<B4uBJ+D,P.Ci=N3DJ()%Df0*"FD5Z2F!+n3AKYi$F?0jW,suTiH#dV3BQQ9E,pbosE-ZJ<B4uBJ+Auc]BleB:Bju4,Bl@m1+E(j7F)Q2A@q?cmDe*E%D09oA+ED%8@;0U%FD,5.@:F.uAITq36Z6phEbT0"F?1OSDfBuBBkM+$+Du+>Bk(^*+EV:2F!,:5F*&OCAftT%DIdI''Bl@m1+CT.u+EV:.+D,P.Ci=N3DJ''D),suTiH#dV3BQQ9XA8-*pCgh$pATBC4,pbosE-ZJ<B4uBJ%4*;fDfBuBBkM+$3Zq=3A8-+,EbT!*FD5Z2F!,17+C]&&@<-W9AoD^,+Dl7BF<GU8E,ol-F^nu*FD,5.@:F.uAITq36Z6phEbT0"F?1OSDfBuBBkM+$+Du+>Bk(^*+EV:2F!,:5F*&OCAftT%DIdI''Bl@m1+CT.u+EV:.+D,P.Ci=N3DJ''D),suTiH#dV3BQQ9XA8-*pCgh$pATAo-DBO%7AKYN%@s)X"DKK</Bl@l3@;]U/DfQt=FD,6++DkP/ATDKnCi^%3,suTiH#dV3BQQ9XE,ol?Bk1dc+EqOABHVD1AKYMtF*)G:@Wcd,Df.0M%4*;fDfBuBBkM+$3XmA]6Z6phEbT0"F?1O>ASH7"ATAo8BOr<(@;TQuDe:+XA8bpg+Du+<+EV:.+DtV)ATJu4Aftf0F!+t2DKKo5@Wcd2EcV[9,suTiH#dV3BQQ9XD..]4@V$[)F(Jl)FDi:5DId[+F(HJ4EZf=ADf''E7AKYr4De+!#FE8R8ATDL.ARloqEc5e(,pbosE-ZJ<B4uBJ+EV:2F!,OBAor6*Eb-A;Bln$,F`\aIE+NNnAnb`tE,oZ2EZfRHBlnH.DBNn0Ec#N3F(oQ1/e''*Q6Z6phEbT0"F?0jW,suTiH#dV3BQQ9X<(KSZ+B)''*<*)@`73G0#+Abs3<_5\J6m+g!+B1m#+@Aq$=].g]85p^&:J=/F;H"](:.,O;,suTiH#dV3BQQ9X6VgHV;Fs2T<)6Cj+<j*M+A#KU+@/aj+@/b*+@TC/;FOM_+AYlX8PN#T8OZ#i=$]_^5u(BN78k`H,pbosE-ZJ<B4uBJ+A#<q9N=JP:.HiX6<-u-:/=h39M%rM<(01t<)5%f<(KG#8PN#T8OZ#i=$]_^5u(BN78k=)7L^Xi6Z6phEbT0"F?1O=78cKD5u(BF6:jjB<*:>0:.-3o8Q8GR;c=f.:Jr<$+Ab@%<(TGW9L2Q!:fUCi:K''\)5uL,\,pbosE-ZJ<B4uBJ+@Je"6VKd;9gqH&+A#<N:/<!$<^fb_+B(fs9M?R.84=Xg:Jb1l8Ol<N+@o:%6q''ur:JqWJ,suTiH#dV3BQQ9X6VgHV;Fs2T<)6Cj+@8L>9M%N:9LU''n:Jr<$:0A]-8Q%uE<%K.`:..ZO771$*+A#<q8OQ!B<''a2/%4*;fDfBuBBkM+$3Zq?t770X49Iq;T=@Gq\9L2QZ/0I_d+@Aq";ajP`78?fR5tiCh5tsX878k<W8PVWH<CBDR7k>cL<E''DR,suTiH#dV3BQQ9X:/=h39M%rM<(01t<)5%f:f:(V<Dl7[78?f):IZI*<C0V`8Q8\h73G)r:IJ,(:Jr<678d/X6Uap8%4*;fDfBuBBkM+$3Zq*l;c=f77Nb]074]QL5u^-$+AYlX:f:(Y8Q8VM+AYlX6<-rU:.8)[+A#=-78d#`:fL"^:+6Vu,suTiH#dV3BQQ9X85E;U<^fn/6U=^N7787a:.-4#:*;ht=Wg[778Hfa+AYHL9M%N:8PD]T=Y([s84?KK78b7":(8Kq6Z6phEbT0"F?1O3:JOke5snU&+B)6;8OHH"9M%N:8PD]T=Y([k;BSq7;H+be8PVWH<CBDR7j(Pq7ncKE78?3=+AYlE,pbosE-ZJ<B4uBJ+AYs-78d2Y;ai,X5uL9Q8PVbu8PUBo:0A]@6!5=+<E():7NbZ$73GT/73GAq+B1m'';[k$!6Z6phEbT0"F?1OC:I\;b5uL-&+@T=":*<+t+@/Cr8Q/&G+AYHL<(KG#:et"g8O?!B8Q8h8:IZI*<C9;"6pXO57n#$>,pbosE-ZJ<B4uBJ+>#/s/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+%4*;hDIc+QD/Ej%FE7m#01/<!8T&6a+>6Q3Ddu^WF<G10DIdd!F)Q2A@q?clAS5^p%1P$I+Co1rF<G%(B5)5m%:Wm]Bl7Et@;lYb01/<!;gEG+ASk"VAoAeJ+Co1rF<G+:E$/V$B5)5m+<W=8AS5^uFE2XL-p_B^@V$u2A7]?^+<W=5Eb&a%Bl7Q+-p_B^@V&n=@;oXm0jdpJ;_fdEA7]?^+<W=9F`;;9ASl!rF<ELbA7]?^ASu$$A7]?^%51(C@;ntMD.OhC6"FnCAM$M_E+*W=/QG/:1*C+=AdpC\9jr!AATDj+Df-[X/het7+Co%q%51(C@;o1kE+L.I+Co%q%1Osm<CoS$>;76T0H`,.1G^m20etI=>p*ZhAdo2&=&!UDAKWZLA7]?^%5Au7AS5^p@rGmhF)YPtATD3sB4VMp+?V>30JG[54@Ve07Qq8mDId6qA7]h$@:Nkh@;]^h%1P$G0Hah9B5)6mAn,L_EXb,b0JG1E+?X7JAn4(74>8HFA3M+u0JHom4q0V.0K!B)+?V>3@5^:Y4>8HHANh5!0JGFr4q0V.0K!H++?V>60Jbm%4>8HI0KpUA1,(FC4q0V.0K(XL+?V>32.JfZ4>8HI1-QgC1,(FB4q0V.0K(^N+?V>32e,#\4>8HI1d3$E0JGFs4q0V.0K(mS+?VD51c.B*4>8HI3BeQJ0JPRC4q0V.0K*?''+?V>3@5g@Z4>8HI@Qkns0JHol4q0V.0K*E)+?VD50k3BV4>8HIA3M+u0JHpE4q0V.0K1aN+?VD50etp%4>8HJ2*N-F0JHrp4q0V.0K1mR+?V>3@Q$CZ4>8HJ2a/?H1,(I=4q0V.0K1sT+?VD50k!6T4>8HJ3BeQJ1,(Fo4q0V.0K3E(+?VD50k<HW4>8HJ@Qkns0JHsF4q0V.0K3K*+?VD51,_<*4>8HJA3M+u1,(L<4q0V.0K3Q,+?V>3@V.e54>8HK0g6^B0JHpI4q0V.0K:pR+?V>60O[-S4>8HK2Ei6G0JHrq4q0V.0K;!T+?V>60Od3T4>8HK3''JHI0JbID4q0V.0K;''V+?V>60Om9U4>8HK@6Per0JbLC4q0V.0K<N*+?V>3@l?L[4>8HK@m2"t0JHpD4q0V.0K<T,+?V>41bh0''4>8HKANh5!0JI#s4q0V.0K<Z.+?V>42)7?)4>8HL0KpUA0JHsE4q0V.0KCjO+?V>3AMu^]4>8HL1-QgC0JP@<4q0V.0KCpQ+?V>41bq6(4>8HL1d3$E0JI)u4q0V.0KD!S+?V>42)@E*4>8HL2Ei6G0JI$L4q0V.0KD''U+?V>311WQX4>8HL3''JHI0JHoq4q0V.0KD-W+?V>3@:MJ14>8HL@6Per0JHpH4q0V.0KE`/+?V>3@Pp=Y4>8Ht0KpUA0JHrr4q0V.0P"cZ+?V>42D@<(4>8I#0KpUA0JPLG4q0V.0P)t&+?V>42e5)]4>8I#1-QgC0JbC?4q0V.0P*%(+?V>42DIB)4>8I#1d3$E1,1O>4q0V.0P*+*+?V>42e>/^4>8I#2Ei6G0JG::4q0V.0etOK+?V>3@5U4X4>8KH2*N-F1,(Lq4q0V.0fV''T+?X7J1b_*&4>8KL3BeQJ1GEBO4q0V.0fWT*+?VG6@:DD04>8KL@Qkns1GE8m4q0V.0fWZ,+?VG6Ai)[\4>8KLA3M+u1GE6I4q0V.0fW`.+?VG6@:_V34>8KLAj.>"1GE8l4q0V.0f^pO+?VG6@PU+V4>8KM0g6^B1GE8p4q0V.0f_!Q+?VG6@Q$CZ4>8KM1HlpD1GE8t4q0V.0f_''S+?VG6@UVG04>8KM2*N-F1GE9J4q0V.0f_-U+?VG6@V%_44>8KM2a/?H1GE;m4q0V.0f_3W+?VG6@kp4W4>8KM3BeQJ1GE;r4q0V.0f`Z++?VG6@lHR\4>8KM@Qkns1GE<!4q0V.0jut(+?X7J2D@<(4>8L%2*N-F1,(L>4q0V.0kN=-+?V>3@5pF[4>8L%2a/?H1,(LB4q0V.0kNC/+?V>32.A`Y4>8L%3BeQJ0JG@p4q0V.1,(II+?VD50etp%4>8NE1HlpDAnEqT4q0V.1,(OK+?VG63ANc-4>8NE2*N-F1GCX?4q0V.1,(UM+?VG61c%<)4>8NE2a/?H1GCXC4q0V.1,([O+?VG61cIT-4>8NE3BeQJ1GCXG4q0V.1,*-#+?VG63&<`-4>8NE@Qkns1GCdG4q0V.1,*3%+?VG63&a#14>8NEA3M+u1GC^C4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q="0P*Ej4>SZJ1-Q.00JY=o4s2sD0JkUM%6Q="0ebd64>SZJ2EhR40JY@;4s2sD0JkaQ%6Q="0f2'':4>SZJA3LGb0JY@?4s2sD0JmB*%6Q="0fD3<4>SZK0g6%/0JY@A4s2sD0JtXM%6Q="0fV?>4>SZK2*MI30JY@C4s2sD0JtdQ%6Q="0k!6g4>SZK3Bdm70JY@l4s2sD0K!<''%6Q="0k3Bi4>SZKA3LGb0JY@n4s2sD0K!H+%6Q="0kENk4>SZL0g6%/0JY@p4s2sD0K(aO%6Q="1,(m74>SZL2EhR40JYC<4s2sD0K(mS%6Q="1,qH?4>SZM1-Q.00JYCD4s2sD0K1jQ%6Q="11<?h4>SZM3''Id60JYCm4s2sD0K3H)%6Q="1GM''94>SZN1d2@20JYF>4s2sD0K:sS%6Q="1H@WA4>SZNAj-Yd0JYFm4s2sD0KCpQ%6Q="1LrZl4>SZNANgPc0JYFq4s2sD0Jm9''%6Q="1M/fn4>SZJANgPc0JYI=4s2sD0JtOJ%6Q="1bh0:4>SZK1-Q.00JYI?4s2sD0Jt[N%6Q="1c%<<4>SZK2EhR40JYIA4s2sD0JtgR%6Q="1c7H>4>SZK@6P,_0JYIC4s2sD0K!?(%6Q="1cIT@4>SZKANgPc0JYIE4s2sD0K(UK%6Q="1c[`B4>SZL1-Q.00JYIn4s2sD0K(dP%6Q="1h&Wk4>SZL2a.[50JYIp4s2sD0K(pT%6Q="2)d]A4>8I!1d2@20JYLF4s2sA0P3=/%6Q="2*!iC4>8I#3Bdm70JYLo4s2sA0P+cY%6Q="2.A`l4>8I"Aj-Yd0JYLq4s2sA0P*1,%6Q="2.Sln4>8I!2a.[50JYLs4s2sA0Oun%%6Q="2.f#p4>8I$0g6%/0JYOA4s2sA0P3+)%6Q="2D[N>4>8I$@6P,_0JYOC4s2sA0OZ\"%6Q="2DmZ@4>8HuAj-Yd0JYOE4s2sA0OeQV%6Q="2E*fB4>8I"2EhR40JYOG4s2sA0P"ZW%6Q="2E<rD4>8I#1d2@20JYOp4s2sA0P+]W%6Q="2I\im4>8I#Aj-Yd0JYOr4s2sA0P34,%6Q="2Inuo4>8I"@m1>a0JYOt4s2sA0P*"''%6Q="2J,,q4>8I#@6P,_0JYR@4s2sA0P+fZ%6Q="2_dK=4>8I$1d2@20JYRB4s2sA0P4fY%6Q="2`!W?4>8I#0Koq.0JYRD4s2sA0P*7.%6Q="2`3cA4>Jd''1-Q.00JYRF4s2sA0P)t&%6Q="2`EoC4>8HJANgPc0JYRH4s2sA0JbCH%6Q="2e,#o4D&1Z@m1>a0JYRt4s2t"Ah[d[%6Q="2e>/q4>S[''@Qk5`0JYUB4s2t"Ahdm]%6Q="3&3Z?4D&1Z0g6%/0JYUF4s2sA0Ock&%6Q="3&WrC4D&1^0Koq.0JYUH4s2sA0OZq)%6Q="3&j)E4D&1]ANgPc0JYUJ4s2sC0Jd9(%6Q="3+4un4D&1]Aj-Yd0JYV"4s2sD0JG:H%6Q="3A<W>4>^V[A3LGb0JYXF4s2sD0P4fY%6Q="3AiuC4>JTF2*MI30JYXH4s2sC0JP7F%6Q="3B'',E4D&1ZAj-Yd0JYXJ4s2t"Ai!p\%6Q="3B98G4D&1_ANgPc0JYXs4s2sC0JPIL%6Q="3FY/p4D&1_@m1>a0JYXu4s2sC0JYOM%6Q="3Fk;r4>JTG2*MI30J[&p4s2t"Ai!m[%6Q="@5g@m4D&1]A3LGb0J[&r4s2t"Ai4$]%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8O!3BeQJAnEo24q0V.11E((+?X7J0Od3T4>8O"2*N-FAnE`-4q0V.11E.*+?V>3@PL%U4>8O"2a/?H0JI#r4q0V.11E4,+?V>3AiDm_4>8O"3BeQJAnEc.4q0V.11FZU+?VD72D@<(4>8O"@QknsAnEc-4q0V.11F`W+?X7J0kENX4>8O"Aj.>"1,:Rq4q0V.11N"%+?VD71Gh9)4>8O#0g6^B1,^sE4q0V.11N(''+?VD;1b_*&4>8O#1HlpD0JHri4q0V.11N4++?VD60Jbm%4>8O#2a/?HAnGU34q0V.11N:-+?X7J0Jks&4>8O#@QknsAnE_S4q0V.11OfX+?X7J0Jbm%4>8O#A3M+uAnE_T4q0V.11OlZ+?X7J0O[-S4>8O#Aj.>"AnEeP4q0V.11W(&+?V>3@5g@Z4>8O$0g6^B1,^gE4q0V.11W.(+?VD;0Ju$''4>8O$1HlpD1,WQN4q0V.11W4*+?VD:@qIn64>8O$2*N-F1,WQQ4q0V.11W:,+?VD:@lHR\4>8O$2a/?H1,WQ"4q0V.11W@.+?VD:@50qT4>8O$3BeQJ1,WJo4q0V.11XfW+?VD:@P^1W4>8O$@Qkns1,WMr4q0V.11XlY+?VD:@UqY34>8O$A3M+u1,WNN4q0V.11Xr[+?VD51L`NW4>8O$Aj.>"1GCO=4q0V.11`.''+?VD63ANc-4>8O%1HlpD1,1dF4q0V.11`:++?VG60f)!&4>8O%2*N-F1,:OC4q0V.11`@-+?VD70Od3T4>8O%@Qkns1,:Un4q0V.11arZ+?VD71-%N-4>8O%Aj.>"0JHpF4q0V.11i4(+?VD6A26=X4>8O&0g6^B1,3;r4q0V.11i:*+?VD70JG["4>8O&1HlpD1,:O>4q0V.11i@,+?VD71,(m$4>8O&2*N-F1,<8q4q0V.11iF.+?VD80etp%4>8O&2a/?H1,:O=4q0V.11iL0+?VD70K20)4>8O&3BeQJ1,:aB4q0V.11jrY+?VD72)7?)4>8O&A3M+u1,:Rm4q0V.11k)]+?VD71LrZY4>8O&Aj.>"1,:Rp4q0V.1GCLH+?VD71Gq?*4>8QF1HlpD1,1On4q0V.1GCXL+?VD51GD!%4>8QF2*N-F1,_%&4q0V.1GC^N+?VD;2Inu\4>8QF2a/?H1,_%!4q0V.1GE6$+?V>3@Q$CZ4>8QF@Qkns1,WWT4q0V.1bq''T+?V>70JPa#4>8TK@6Per0JkXA4q0V.1c@3T+?VJl3Fb5^4>8TM2Ei6G2)R*H4q0V.1c@9V+?VMi0Jbm%4>8TM3''JHI3Ar[*4q0V.1c@?X+?VM<@k^(U4>8TM@6Per2DHpq4q0V.1cAf,+?VP<1,qH,4>8TM@m2"t2*#8,4q0V.1cAl.+?VY<1,;$&4>8TMANh5!3&EQO4q0V.1cAr0+?VV>0k3BV4>8TN0KpUA2dnQt4q0V.1cI-Q+?VP9@:;>/4>8TN1-QgC2D\o!4q0V.1cI3S+?VPn1,V6)4>8TN1d3$E2Do&V4q0V.1cI9U+?VV?2E!`.4>8TN2Ei6G3&4o#4q0V.1cI?W+?VYnAi2a]4>8TN3''JHI2E3]Q4q0V.1cIEY+?VM?1,hB+4>8TN@6Per2Dnnt4q0V.1cJl-+?VP;2_dK*4>8TN@m2"t2.ART4q0V.1cJr/+?VMAA2$1V4>8TNANh5!3&W^)4q0V.1cK#1+?VYDAi)[\4>8TO0KpUA2e4g%4q0V.1cR3R+?VSn@V%_4ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0JkaE4s2sJ@Q7p_%6Q=$3&<`@4>nrL2EhR40JkaG4s2sH@l\-b%6Q=$3&NlB4?,<02a.[50JkaI4s2sF@Q6A3%6Q=$3&a#D4>g\Z2*MI30JkaK4s2sG1GCgQ%6Q=$3&s/F4>o)X2a.[50Jkat4s2sG3&ETY%6Q=$3+>&o4?59/2a.[50Jkb!4s2sJ2`P>3%6Q=$3+P2q4>o,TAj-Yd0Jkb#4s2sEAS!__%6Q=$3+b>s4>^Y(@6P,_0JkdD4s2sEAi+$^%6Q=$3AE]?4>^Y1A3LGb0JkdF4s2sF0JkdR%6Q=$3AWiA4>f$/1-Q.00JkdH4s2sF3AWTX%6Q=$3AiuC4>f-01d2@20JkdJ4s2sF@5''E"%6Q=$3B'',E4>gV&3Bdm70JkdL4s2sG0P"cZ%6Q=$3B98G4>noJAj-Yd0Jkdu4s2sG0fLdM%6Q=$3FY/p4>o)P1Hl710Jke"4s2sG3A<<S%6Q=$3Fk;r4?"s''@6P,_0Jke$4s2sH2)Jo/%6Q=$3G(Gt4?#,V0Koq.0Jm2l4s2sH3G)_a%6Q=$@50qg4?$eZA3LGb0Jm2n4s2sHA7]@:%6Q=$@5C(i4?,$)1Hl710Jm2p4s2sI1b`K)%6Q=$@5U4k4?,;Y1Hl710Jm2r4s2sI@PBQ$%6Q=$@5g@m4?5)Q2*MI30Jm2t4s2sJ0K3E(%6Q=$@6$Lo4>eoN@Qk5`0Jm3H4s2sEAN;V3%6Q=$@:DDC4>^VX2*MI30Jm3J4s2sF2e6Ma%6Q=$@:VPE4?,$(1-Q.00Jm3L4s2sJ0Olh$%6Q=$@:h\G4?#62Aj-Yd0Jm5m4s2sEAM>f%%6Q=$@PL%h4>f*10g6%/0Jm5o4s2sGARR>X%6Q=$@P^1j4?5)O3''Id60Jm5q4s2sH@5BZ&%6Q=$@Pp=l4?,,P3''Id60Jm5s4s2sI1,r`,%6Q=$@Q-In4?6n,Aj-Yd0Jm5u4s2sF0f1UK%6Q=$@Q?Up4>eoR0Koq.0Jm6I4s2sF1h''uZ%6Q=$@U_MD4>es,0g6%/0Jm6K4s2sF2J"R+%6Q=$@UqYF4>f-2@Qk5`0Jm6M4s2sFAhc/,%6Q=$@V.eH4?5B51-Q.00Jm8n4s2sGA7]46%6Q=$@kg.i4?,$+1d2@20Jm8p4s2sI2)8]+%6Q=$@l$:k4?5;X1-Q.00Jm8r4s2sJ2E*<R%6Q=$@l6Fm4?5<.0Koq.0Jm8t4s2sJ2eHM_%6Q=$@lHRo4>erL@Qk5`0Jm9!4s2sF1M/F,%6Q=$@lZ^q4>gS-2a.[50Jm9J4s2sH0On]Y%6Q=$@q%VE4?$k]A3LGb0Jm9L4s2sIAn*S[%6Q=$@q7bG4?5<23''Id60Jm9N4s2sF1H&i/%6Q=$@qInI4?6q0@m1>a0Jm;o4s2sH@:EY/%6Q=$A2-7j4>^V(0g6%/0Jm;q4s2sH3&rcY%6Q=$A2?Cl4?,''-@m1>a0Jm;s4s2sGAMQ/-%6Q=$A2QOn4>f#O3''Id60Jm;u4s2sF2)$jN%6Q=$A2c[p4>pY''A3LGb0Jm<"4s2sI2)/N''%6Q=$A2ugr4?6n-@Qk5`0Jm<K4s2sF3Ft''3%6Q=$A7@_F4>ep''3Bdm70Jm<M4s2sGA2Z>0%6Q=$A7RkH4?#*-@m1>a0Jm<O4s2sJ2)o23%6Q=$A7e"J4>f#R1-Q.00Jm>p4s2sEAN;J/%6Q=$AMH@k4?5)P@Qk5`0Jm>r4s2sJ2J+^.%6Q=$AMZLm4?,,RAj-Yd0Jm>t4s2sJ3A=r,%6Q=$AMlXo4>ep+0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b1hAR/+?VM=@Q$CZ4>8U''2a/?H2.A?q4q0V.1hAX1+?VMn2_dK*4>8U''3BeQJ2E!<E4q0V.1hC)Z+?VP?AhuU[4>8U''@Qkns2E3BI4q0V.1hC/\+?VPl1H7Q-4>8U''A3M+u2Ig>T4q0V.1hC5^+?VPm1-%N-4>8U''Aj.>"2`*C$4q0V.1hJF*+?VS@@lQX]4>8U(0g6^B2dnOS4q0V.1hJL,+?VYD1Gh9)4>8U(1HlpD3&5)#4q0V.1hJR.+?VVC2.A`Y4>8U(2*N-F3+4^!4q0V.1hJX0+?VY>ARmt64>8U(2a/?H2Ip8P4q0V.1hJ^2+?VS?@:DD04>8U(3BeQJ2`>/S4q0V.1hL/[+?VYE@l6FZ4>8U(@Qkns2DAPt4q0V.1hL5]+?VVm0JPa#4>8U(A3M+u3+P!W4q0V.1hL;_+?VYA@PU+V4>8U(Aj.>"2E<a.4q0V.2)$^J+?VM;@:VP24>8WH0g6^B2).''K4q0V.2)$dL+?VM?0etp%4>8WH1HlpD2)mBG4q0V.2)$jN+?VMA1c.B*4>8WH2*N-F2.C#O4q0V.2)$pP+?VMmAi;g^4>8WH2a/?H2D?mG4q0V.2)%!R+?VP<@6$L\4>8WH3BeQJ2D\r%4q0V.2)&H&+?VPl@V.e54>8WH@Qkns2J+[#4q0V.2)&N(+?VS:3+Y8_4>8WHA3M+u2_d$D4q0V.2)&T*+?VS;2*!i04>8WHAj.>"2_ei#4q0V.2)-dK+?VS=1M/f[4>8WI0g6^B2e=Zt4q0V.2)-jM+?VV=2`<i/4>8WI1HlpD3&5#!4q0V.2)-pO+?VV@3B'',24>8WI2*N-F3A<?F4q0V.2).!Q+?VY>2.A`Y4>8WI2a/?H3FjjR4q0V.2).''S+?VM@2E<r14>8WI3BeQJ2DnrR4q0V.2)/N''+?VPl2.8ZX4>8WI@Qkns2`3?J4q0V.2)/T)+?VM9AiW$a4>8WIA3M+u2*!F''4q0V.2)/Z++?VMA2DmZ-4>8WIAj.>"2.eg%4q0V.2)6jL+?VMnA7Ie44>8WJ0g6^B2DS`O4q0V.2)6pN+?VP>Ammk44>8WJ1HlpD2IS@L4q0V.2)7!P+?VPk1,hB+4>8WJ2*N-F2I^,P4q0V.2)7''R+?VS=3+>&\4>8WJ2a/?H2eHPS4q0V.2)7-T+?VVD2)[W-4>8WJ3BeQJ3FjmT4q0V.2)8T(+?VYp0P*EW4>8WJ@Qkns3Fu\W4q0V.2)8Z*+?VMk@50qT4>8WJA3M+u2Iea*4q0V.2)8`,+?VV>2e"r[4>8WJAj.>"2)-dA4q0V.2)?pM+?VMk1h&WX4>8WK0g6^B2DJZ!4q0V.2)@!O+?VV<@l?L[4>8WK1HlpD2E3WR4q0V.2)@''Q+?VS<2DIB)4>8WK2*N-F1hAO)4q0V.2)@-S+?VJmAmmk44>8WK2a/?H2)@0N4q0V.2)@3U+?VP92E<r14>8WK3BeQJ2J"X(4q0V.2)AZ)+?VSk1hJo\4>8WK@Qkns3B(P+4q0V.2)A`++?VJl0Od3T4>8WKA3M+u2)?sF4q0V.2)Af-+?VJlAS"%74>8WKAj.>"1hJU&4q0V.2)I!N+?VJm1LrZY4>8WL0g6^B1hL/N4q0V.2)I''P+?VJm2`!W,4>8WL1HlpD2)8So4q0V.2)I-R+?VM;AS++84>8WL2*N-F2)[-K4q0V.2)I3T+?VMA0P3KX4>8WL2a/?H2.9uL4q0V.2)I9V+?VMj@Q$CZ4>8WL3BeQJ2.C,O4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=%1grQj4?#920g6%/0Jt[r4s2sG2E3WZ%6Q=%1h/]l4>o,Y@m1>a0Jt[t4s2sG2e"[/%6Q=%1hAin4>pY*@m1>a0Jt\!4s2sG@q%5X%6Q=%2)%3:4?"rP@Qk5`0Jt^B4s2sH1Li1(%6Q=%2)7?<4?#8[A3LGb0Jt^D4s2sH3FZP`%6Q=%2)IK>4?$\)@m1>a0Jt^F4s2sH@Q6;1%6Q=%2)[W@4?,**0g6%/0Jt^H4s2sI11XiX%6Q=%2)mcB4?,,N1d2@20Jt^J4s2sI1H.6V%6Q=%2.8Zk4?,-.Aj-Yd0Jt^s4s2sI1Lr:*%6Q=%2.Jfm4?,8X2EhR40Jt^u4s2sI@:CuU%6Q=%2.\ro4>f#P3Bdm70Jt_"4s2sI@pq>\%6Q=%2D@<;4?-qa2EhR40JtaC4s2sJ0Jm?)%6Q=%2DRH=4?5>TANgPc0JtaE4s2sI2E5,/%6Q=%2DdT?4>^Y[1d2@20JtaG4s2sF@q@V`%6Q=%2E!`A4>nrL0g6%/0JtaI4s2sH1,V''U%6Q=%2E3lC4?#,R@Qk5`0JtaK4s2sI0kE4+%6Q=%2IScl4?,**A3LGb0Jtat4s2sI2J-Ma%6Q=%2Ieon4?-h\0Koq.0Jtb!4s2sJ2IeU.%6Q=%2J#&p4?5DV1Hl710Jtb#4s2sJ3Fk!2%6Q=%2_[E<4>^VZ@Qk5`0JtdD4s2sEAhd^X%6Q=%2_mQ>4?,?41Hl710JtdF4s2sF2IpA_%6Q=%2`*]@4>f)T@6P,_0JtdH4s2sF3+HA\%6Q=%2`<iB4>g\^@Qk5`0JtdJ4s2sFAn>F8%6Q=%2`NuD4>nlK@6P,_0JtdL4s2sG0KCsR%6Q=%2dnlm4>nlO1-Q.00Jtdu4s2sG0k;t%%6Q=%2e,#o4>nrL1-Q.00Jte"4s2sG11W(&%6Q=%2e>/q4>o&Q3Bdm70Jte$4s2sJ@Pff''%6Q=%3&!N=4>o)U2EhR40JtgE4s2sG3+=R*%6Q=%3&3Z?4>p_/2a.[50JtgG4s2sH0K1[L%6Q=%3&EfA4?#,S@m1>a0JtgI4s2sH2E3TY%6Q=%3&WrC4?$e02*MI30JtgK4s2sI11<%(%6Q=%3&j)E4?,933Bdm70JtgM4s2sJ2)o&/%6Q=%3+4un4?5;ZANgPc0Jth!4s2sI@l\''`%6Q=%3+G,p4>ej*0g6%/0Jth#4s2sF11FfY%6Q=%3+Y8r4>f,R2EhR40Jth%4s2sF1h&7)%6Q=%3A<W>4>gSW1Hl710JtjF4s2sFA2,u+%6Q=%3ANc@4>noP3''Id60JtjH4s2sG3B/cX%6Q=%3A`oB4>p_YAj-Yd0JtjJ4s2sH3&kG4%6Q=%3As&D4?,0-@Qk5`0JtjL4s2sI3&NWY%6Q=%3B02F4?-b.1-Q.00JtjN4s2sJ1LW4+%6Q=%3FP)o4?6hZ3''Id60Jtk"4s2sGA2[p]%6Q=%3Fb5q4?5E13''Id60Jtk$4s2sI2Ing3%6Q=%3FtAs4>f''+1Hl710Jtk&4s2sG2eHYc%6Q=%@5''kf4?,6/ANgPc0K!8n4s2sJ1,*9''%6Q=%@5:"h4>elR1Hl710K!8p4s2sF2E3WZ%6Q=%@5L.j4>erL1d2@20K!8r4s2sFARmS\%6Q=%@5^:l4>ns+0g6%/0K!8t4s2sG1h&I/%6Q=%@5pFn4>o/T@m1>a0K!9!4s2sG3&<NX%6Q=%@:;>B4>pYX@Qk5`0K!9J4s2sH1H.''Q%6Q=%@:MJD4?#6/@6P,_0K!9L4s2sH@5_RY%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8X$ANh5!3&s!-4q0V.2.:)\+?VVDA26=X4>8X%0KpUA3+OpV4q0V.2.A:(+?VVq0Jbm%4>8X%1-QgC3A>#T4q0V.2.A@*+?VYA@5C(V4>8X%1d3$E3ArlS4q0V.2.AF,+?VYC2E<r14>8X%2Ei6G2.AI%4q0V.2.AL.+?VMk@P^1W4>8X%3''JHI2E<^,4q0V.2.C#Y+?VP<3FY/]4>8X%@m2"t2e"Nr4q0V.2.C)[+?VPj11EEV4>8X%ANh5!2ISOV4q0V.2.C/]+?VPA@Q$CZ4>8X&0KpUA3FaaR4q0V.2.J@)+?VPo2.f#]4>8X&1-QgC2)7*G4q0V.2.JF++?VM=3Fk;_4>8X&1d3$E2D@''D4q0V.2.JL-+?VP;ARdn54>8X&2Ei6G2InUQ4q0V.2.JR/+?VPn0K20)4>8X&3''JHI2J$DR4q0V.2.JX1+?VV?2.A`Y4>8X&@6Per3&r]I4q0V.2.L)Z+?VVq1c.B*4>8X&@m2"t1hABu4q0V.2.L/\+?VYo1H@W.4>8X&ANh5!2)Ai&4q0V.2.L5^+?VPB0k*<U4>8X''0KpUA2ISCM4q0V.2.SF*+?VYC3&Ef.4>8X''1-QgC2E3I#4q0V.2.SL,+?VM92.JfZ4>8X''1d3$E2dp2P4q0V.2.SR.+?VV?@PU+V4>8X''2Ei6G3AG&S4q0V.2.SX0+?VY?3+G,]4>8X''3''JHI2)[=$4q0V.2.S^2+?VYp1,qH,4>8X''@6Per2E3HI4q0V.2.U/[+?VV>0Ju$''4>8X''@m2"t3&EEG4q0V.2.U5]+?VSm@5U4X4>8X''ANh5!2)6jF4q0V.2.U;_+?VV=@l6FZ4>8X(0KpUA2`,)(4q0V.2.\L++?VJl2e>/^4>8X(1-QgC1hJ^''4q0V.2.\R-+?VM9@5''kS4>8X(1d3$E2.C)O4q0V.2.\X/+?VM:0O[-S4>8X(2Ei6G2)8]%4q0V.2.\^1+?VM:AN)d^4>8X(3''JHI2.U<.4q0V.2.\d3+?VM=3FP)\4>8X(@6Per2)m@"4q0V.2.^5\+?VMAAMu^]4>8X(@m2"t2.AOT4q0V.2.^;^+?VMj3B0234>8X(ANh5!2.C**4q0V.2.^A`+?VMm2_mQ+4>8X)0KpUA2.\^,4q0V.2.eR,+?VP9@5C(V4>8X)1-QgC2DHpu4q0V.2.eX.+?VP:2D[N+4>8X)1d3$E2DJZP4q0V.2.e^0+?VP<A7@_34>8X)2Ei6G2DmBJ4q0V.2.ed2+?VP@A2-7W4>8X)3''JHI2E3QM4q0V.2.ej4+?VPAAmmk44>8X)@6Per2I\IR4q0V.2.g;]+?VPk2)@E*4>8X)@m2"t2IeU''4q0V.2.gA_+?VPo1,;$&4>8X)ANh5!2J+s.4q0V.2.gGa+?VPo1c7H+4>8ZI0KpUA2`+tt4q0V.2D?jL+?VS?0fV?+4>8ZI1-QgC2`>5''4q0V.2D?pN+?VSA0Od3T4>8ZI1d3$E2dp<14q0V.2D@!P+?VSl@50qT4>8ZI2Ei6G2e+Tt4q0V.2D@''R+?VSnAN;p`4>8ZI3''JHI2eFj(4q0V.2D@-T+?VSpAhZCX4>8ZI@6Per3&!@''4q0V.2DAT(+?VV=2E!`.4>8ZI@m2"t3&<R+4q0V.2DAZ*+?VVD@P^1W4>8ZIANh5!3+6<,4q0V.2DA`,+?VVn@:DD04>8ZJ0KpUA3A<EL4q0V.2DHpM+?VY@2).9(4>8ZJ1-QgC3AifQ4q0V.2DI!O+?VYA3AE],ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0K(XB4s2sJ2.87(%6Q=&0f;-;4?5;X2*MI30K(XD4s2sJ2e4^.%6Q=&0fM9=4?5DW3''Id60K(XF4s2sI1,1aP%6Q=&0f_E?4>^V*3''Id60K(Xo4s2sF1brN(%6Q=&0k*<h4>gVX3''Id60K(Xq4s2sFA7K+5%6Q=&0k<Hj4?#'')3Bdm70K(Xs4s2sH2Deo-%6Q=&0kNTl4?#2T@m1>a0K([?4s2sF@pqA]%6Q=&1,1s84?$k`@Qk5`0K([A4s2sIA2%IV%6Q=&1,D*:4?5<00g6%/0K([C4s2sJ3&*-O%6Q=&1,V6<4?5AY1d2@20K([E4s2sJ3&NZZ%6Q=&1,hB>4>^Y(0g6%/0K([G4s2sEAh[d[%6Q=&1-%N@4>eoR0g6%/0K([p4s2sF2*#/1%6Q=&11EEi4>f#T3''Id60K([r4s2sF2eHJ^%6Q=&11WQk4>f,U2a.[50K([t4s2sF@PBf+%6Q=&11i]m4>gSX1d2@20K(^@4s2sF@lZ5,%6Q=&1GM''94>g\(@m1>a0K(^B4s2sFAN+0a%6Q=&1G_3;4>g_\@m1>a0K(^D4s2sG1M(,]%6Q=&1Gq?=4>o,S@6P,_0K(^F4s2sG2.SX0%6Q=&1H.K?4>o''.1-Q.00K(^H4s2sG2_eo.%6Q=&1H@WA4>o0/@Qk5`0K(^q4s2sG3+Fd/%6Q=&1L`Nj4>pV*Aj-Yd0K(^s4s2sFAMZ#(%6Q=&1LrZl4>pYY2*MI30K(^u4s2sG@kfo+%6Q=&1M/fn4>p\.A3LGb0K(aA4s2sH2)f,2%6Q=&1bh0:4?#8W3''Id60K(aC4s2sF@Q$#+%6Q=&1c%<<4?$\&0Koq.0K(aE4s2sHA2#]$%6Q=&1c7H>4>g_[A3LGb0K(aG4s2sI3B1V7%6Q=&1cIT@4?-b(3''Id60K(aI4s2sI@q%8Y%6Q=&1c[`B4?-k12a.[50K(ar4s2sIARf46%6Q=&1h&Wk4?-q-A3LGb0K(at4s2sJ3+Xj/%6Q=&1h8cm4?6h(ANgPc0K(b!4s2sJ@P_LX%6Q=&1hJoo4>^V/0Koq.0K(dB4s2sF0K3N+%6Q=&2).9;4>eiI0Koq.0K(dD4s2sF3B8lZ%6Q=&2)@E=4>gS.@m1>a0K(dF4s2sG1,<H*%6Q=&2)RQ?4>nrS0Koq.0K(dH4s2sG1hC/\%6Q=&2)d]A4>pY)@6P,_0K(dJ4s2sH11;k#%6Q=&2*!iC4?#,X0g6%/0K(ds4s2sH3A`ZY%6Q=&2.A`l4?$k\3Bdm70K(du4s2sI2eHM_%6Q=&2.Sln4?-bY@m1>a0K(e"4s2sI@Q,u)%6Q=&2.f#p4>o!(@m1>a0K(gC4s2sI1LjiW%6Q=&2DIB<4?5?/0Koq.0K(gE4s2sF1b^pR%6Q=&2D[N>4>erL1Hl710K(gG4s2sF2.9rX%6Q=&2DmZ@4>o/V1d2@20K(gI4s2sG@5U#.%6Q=&2E*fB4?-b.0Koq.0K(gK4s2sH3&3EV%6Q=&2E<rD4>o,W2*MI30K(gt4s2sJARf77%6Q=&2I\im4>eoR1d2@20K(h!4s2sF@UV#U%6Q=&2Inuo4?,&M@6P,_0K(h#4s2sI2Dm0P%6Q=&2J,,q4?5)L2EhR40K(jD4s2sEAMH/.%6Q=&2_dK=4>^V+2*MI30K(jF4s2sEARdY_%6Q=&2`!W?4>^Y)0g6%/0K(jH4s2sF1LjiW%6Q=&2`3cA4>erO3''Id60K(jJ4s2sF@UWh3%6Q=&2`EoC4>g_*1Hl7ZDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b2E*TZ+?VP91,V6)4>8ZP3BeQJ2Dm?H4q0V.2E,&.+?VP@1LrZY4>8ZP@Qkns2IeR!4q0V.2E,,0+?VPl2_mQ+4>8ZPA3M+u2Ig;S4q0V.2E,22+?VS:2`Nu14>8ZPAj.>"2`*3E4q0V.2E3BS+?VSk2`<i/4>8ZQ0g6^B2dp-+4q0V.2E3HU+?VSl0K;6*4>8ZQ1HlpD2e4XO4q0V.2E3NW+?VSmAn=.84>8ZQ2*N-F2e4g)4q0V.2E3TY+?VP>AN)d^4>8ZQ2a/?H2_m7"4q0V.2E3Z[+?VM;@U_M14>8ZQ3BeQJ2.JI#4q0V.2E5,/+?VMlAN2j_4>8ZQ@Qkns2DSeu4q0V.2E521+?VP;AM?:W4>8ZQA3M+u2D[''J4q0V.2E583+?VPn1,(m$4>8ZQAj.>"3&WX&4q0V.2E<HT+?VVl1GM''&4>8ZR0g6^B3+QQ14q0V.2E<NV+?VY>AiMs`4>8ZR1HlpD2J+Wt4q0V.2E<TX+?VSC@5^:Y4>8ZR2*N-F3FXjS4q0V.2E<ZZ+?VJl@5pF[4>8ZR3BeQJ1hJaW4q0V.2E>20+?VJm@5''kS4>8ZR@Qkns2)&Pq4q0V.2E>82+?VM91cIT-4>8ZRA3M+u2dp;V4q0V.2E>>4+?VM92_dK*4>8ZRAj.>"2)/]$4q0V.2IS:''+?VM;2)IK+4>8[%0g6^B2)@!B4q0V.2IS@)+?VM;2eG5_4>8[%1HlpD2)AfQ4q0V.2ISF++?VM=@:MJ14>8[%2*N-F2)mQO4q0V.2ISL-+?VMkAMH@X4>8[%2a/?H2.eX''4q0V.2ISR/+?VMn1grQW4>8[%3BeQJ2D?mu4q0V.2IU#X+?VP92)%3''4>8[%@Qkns2D@%"4q0V.2IU)Z+?VP<0kNTY4>8[%A3M+u2Dm?P4q0V.2IU/\+?VPj1h&WX4>8[%Aj.>"2Ig5O4q0V.2I\@(+?VS<@kp4W4>8[&0g6^B2_nrT4q0V.2I\F*+?VSAAS++84>8[&1HlpD3&"r(4q0V.2I\L,+?VV<0Ju$''4>8[&2*N-F3&30I4q0V.2I\R.+?VV@1hAi[4>8[&2a/?H3A>&(4q0V.2I\X0+?VY?AMH@X4>8[&3BeQJ3B(P^4q0V.2I^)Y+?VYE2)d].4>8[&@Qkns3FOdR4q0V.2I^/[+?VJlAhZCX4>8[&A3M+u2)/WP4q0V.2I^5]+?VMk11WQX4>8[&Aj.>"2E!NL4q0V.2IeF)+?VPB2Inu\4>8[''0g6^B2.JHs4q0V.2IeL++?VP?AhlOZ4>8[''1HlpD2E<]R4q0V.2IeR-+?VS=3&s/34>8[''2*N-F2E3QJ4q0V.2IeX/+?VSm3&*T+4>8[''2a/?H2)&Mt4q0V.2Ie^1+?VM:AMcR[4>8[''3BeQJ2)d?N4q0V.2Ig/Z+?VMlAn=.84>8[''@Qkns3AWEK4q0V.2Ig5\+?VP>@5L.W4>8[''A3M+u2I\Et4q0V.2Ig;^+?VPk1LrZY4>8[''Aj.>"2`*<I4q0V.2InL*+?VSC3&*T+4>8[(0g6^B2`Y>X4q0V.2InR,+?VSl1h&WX4>8[(1HlpD2e6E,4q0V.2InX.+?VV=@Q?U]4>8[(2*N-F3&>&S4q0V.2In^0+?VVC2eG5_4>8[(2a/?H3&rj.4q0V.2Ind2+?VVm1H@W.4>8[(3BeQJ3+c\U4q0V.2Ip5[+?VY=A2-7W4>8[(@Qkns2)I%"4q0V.2Ip;]+?VY>3&!N*4>8[(A3M+u1hAOT4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=&A7[qI4>efK2EhR40K*HR4s2sF1M&F-%6Q=&AM?:j4>eoN@6P,_0K*Js4s2sH11W=-%6Q=&AMQFl4?#&V2EhR40K*Ju4s2sH2e>!5%6Q=&AMcRn4?,*-2EhR40K*K"4s2sIART17%6Q=&AMu^p4?5E32EhR40K*K$4s2sJ3Fb$4%6Q=&AN2jr4?5E41-Q.00K*K&4s2sF0fM$T%6Q=&ARRbF4>noK@6P,_0K*KO4s2sI2Do&0%6Q=&ARdnH4>f!*0Koq.0K*KQ4s2sH@5hUY%6Q=&AS"%J4>efO2EhR40K*KS4s2sF@Uq8Y%6Q=&AhZCk4?5)P2a.[50K*Mt4s2sJ2E3QX%6Q=&AhlOm4>^V*1-Q.00K*N!4s2sG@:Wh2%6Q=&Ai)[o4?5--2a.[50K*N#4s2sF@l5u)%6Q=&Ai;gq4>gV*3''Id60K*N%4s2sG1H@EY%6Q=&AiMss4?$\/Aj-Yd0K*N''4s2sG@lZ>/%6Q=&AmmkG4?5>Z1d2@20K*NP4s2sIAi;A-%6Q=&An+"I4?$\W@6P,_0K*NR4s2sH0fWT*%6Q=&An=.K4?5;Z3''Id60K*NT4s2sH@lQ5-%6Q=''0JG[54>o/R2a.[50K1[?4s2sHAN);,%6Q=''0JYg74>o/V0g6%/0K1[A4s2sJ1H&`,%6Q=''0Jks94>em+1-Q.00K1[C4s2sF1biH''%6Q=''0K)*;4?,3,@Qk5`0K1[E4s2sI@50Q%%6Q=''0K;6=4?$k\1d2@20K1[G4s2sIARf77%6Q=''0O[-f4?5*,0g6%/0K1[p4s2sF1H%-T%6Q=''0Om9h4?,;[3''Id60K1[r4s2sH3A`HS%6Q=''0P*Ej4>^Y[1-Q.00K1[t4s2sF0OeTW%6Q=''0ebd64>elK0g6%/0K1^@4s2sF0f1^N%6Q=''0etp84>euR1Hl710K1^B4s2sF2_no-%6Q=''0f2'':4?#''-@6P,_0K1^D4s2sF2`P81%6Q=''0fD3<4>f,V0g6%/0K1^F4s2sFAi;D.%6Q=''0fV?>4>g_11d2@20K1^H4s2sG0K1jQ%6Q=''0k!6g4>noQ2EhR40K1^q4s2sG0fCsS%6Q=''0k3Bi4>np&3Bdm70K1^s4s2sG1L`+''%6Q=''0kENk4>o#P@6P,_0K1^u4s2sG2)\r.%6Q=''1,(m74>o)UAj-Yd0K1aA4s2sG3&EBS%6Q=''1,;$94>pb*1Hl710K1aC4s2sH2)[?V%6Q=''1,M0;4?$\)A3LGb0K1aE4s2sH@qK16%6Q=''1,_<=4?$e-@m1>a0K1aG4s2sHA2uY6%6Q=''1,qH?4?$h.@Qk5`0K1aI4s2sHAi=*^%6Q=''11<?h4?,,NANgPc0K1ar4s2sI1GiN(%6Q=''11NKj4?,6/A3LGb0K1at4s2sI@5''Z)%6Q=''11`Wl4?-b-1Hl710K1b!4s2sI@Q$,.%6Q=''1GD!84?-naA3LGb0K1dB4s2sJ3&+i*%6Q=''1GV-:4?6q3Aj-Yd0K1dD4s2sI11E4,%6Q=''1Gh9<4?-q_ANgPc0K1dF4s2sJ@V%M_%6Q=''1H%E>4>elR2a.[50K1dH4s2sG1,3B)%6Q=''1H7Q@4>o#U1Hl710K1dJ4s2sGAn*MY%6Q=''1LWHi4?5;[3Bdm70K1ds4s2sG3&E?R%6Q=''1LiTk4>efQ0g6%/0K1du4s2sG@PTW$%6Q=''1M&`m4>p\.@6P,_0K1e"4s2sGAi2D/%6Q=''1b_*94?$\-1d2@20K1gC4s2sHA2Q&)%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8]N1-QgC3&i`K4q0V.2`*<S+?VVl1,D*''4>8]N1d3$E2E*<L4q0V.2`*BU+?VJlAi;g^4>8]N2Ei6G2)$gH4q0V.2`*HW+?VM81,_<*4>8]N3''JHI2)$pG4q0V.2`*NY+?VM92e,#\4>8]N@6Per2)6sI4q0V.2`+u-+?VM:2D[N+4>8]N@m2"t2)Sf$4q0V.2`,&/+?VM?0P3KX4>8]NANh5!2)m9I4q0V.2`,,1+?VMi@q.\34>8]O0KpUA2.^B.4q0V.2`3<R+?VP:@PU+V4>8]O1-QgC2DJf''4q0V.2`3BT+?VP;AhuU[4>8]O1d3$E2D[9I4q0V.2`3HV+?VPB0k3BV4>8]O2Ei6G2IS@$4q0V.2`3NX+?VS<2e5)]4>8]O3''JHI2_nfO4q0V.2`3TZ+?VS=11`WY4>8]O@6Per2`NNK4q0V.2`5&.+?VSB2J,,^4>8]O@m2"t2e4j-4q0V.2`5,0+?VSA0Om9U4>8]OANh5!3&"c$4q0V.2`522+?VVD3+>&\4>8]P0KpUA3+=U&4q0V.2`<BS+?VVnAMQFY4>8]P1-QgC3+ZVU4q0V.2`<HU+?VY<2D[N+4>8]P1d3$E3AWTO4q0V.2`<NW+?VYB2dnlZ4>8]P2Ei6G3B/lR4q0V.2`<TY+?VYm0f)!&4>8]P3''JHI3Ft-/4q0V.2`<Z[+?VM91c%<)4>8]P@6Per2)@7)4q0V.2`>,/+?VM;@P^1W4>8]P@m2"t2.\^U4q0V.2`>21+?VMn1,_<*4>8]PANh5!2J"UP4q0V.2`>83+?VPn3A<W+4>8]Q0KpUA2`!EM4q0V.2`EHT+?VS=An=.84>8]Q1-QgC2e4a$4q0V.2`ENV+?VV=1H.K,4>8]Q1d3$E3+4Kp4q0V.2`ETX+?VVlAmmk44>8]Q2Ei6G3Ar`K4q0V.2`EZZ+?VJl1hAi[4>8]Q3''JHI2)$^n4q0V.2`E`\+?VM;AMcR[4>8]Q@6Per2)I7%4q0V.2`G20+?VM>Ammk44>8]Q@m2"t2*#2%4q0V.2`G82+?VMj2DdT,4>8]QANh5!2.U;R4q0V.2`G>4+?VMm@:DD04>8]R0KpUA2.eU&4q0V.2`NNU+?VP;1H7Q-4>8]R1-QgC2Dm<K4q0V.2`NTW+?VP@@:h\44>8]R1d3$E2J"a(4q0V.2`NZY+?VS<A2$1V4>8]R2Ei6G2e-?+4q0V.2`N`[+?VVC@Pg7X4>8]R3''JHI3&"bq4q0V.2`Nf]+?VV;AMH@X4>8]R@6Per3&>/#4q0V.2`P81+?VVA1hAi[4>8]R@m2"t3+4d*4q0V.2`P>3+?VVoAN2j_4>8]RANh5!3ANBL4q0V.2`PD5+?VYB@lHR\4>8]S0KpUA3B/oU4q0V.2`WTV+?VYr0f)!&4>8]S1-QgC1hA[(4q0V.2`WZX+?VJl3ANc-4>8]S1d3$E1hJFP4q0V.2`W`Z+?VM;1cRZ.4>8]S2Ei6G2)I-M4q0V.2`Wf\+?VM<1M&`Z4>8]S3''JHI2.87P4q0V.2`Wl^+?VMn3+G,]4>8]S@6Per2.g8O4q0V.2`Y>2+?VP93G(Ga4>8]S@m2"t2E5,(4q0V.2`YD4+?VPj3+Y8_4>8]SANh5!2`*C#4q0V.2`YJ6+?VSB3&*T+4>8^&0KpUA3+4gY4q0V.2dnF)+?VVl@5L.W4>8^&1-QgC3+=g*4q0V.2dnL++?VY=3A<W+4>8^&1d3$E1hAOU4q0V.2dnR-+?VYn@lZ^^ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0K3Du4s2sEARRDZ%6Q=''@5g@m4>^Y/@m1>a0K3E"4s2sEAmo:8%6Q=''@6$Lo4>efI3Bdm70K3EK4s2sF0JPIL%6Q=''@:DDC4>eiM3Bdm70K3EM4s2sF0fEN*%6Q=''@:VPE4>elSAj-Yd0K3EO4s2sF11E7-%6Q=''@:h\G4>em+ANgPc0K3Gp4s2sF1HAl-%6Q=''@PL%h4>ep+1Hl710K3Gr4s2sF1bg^K%6Q=''@P^1j4>erLANgPc0K3Gt4s2sF2)mT[%6Q=''@Pp=l4>f&T0g6%/0K3H!4s2sF2dnI*%6Q=''@Q-In4>f,XA3LGb0K3H#4s2sF@Pou+%6Q=''@Q?Up4>gS*A3LGb0K3HL4s2sF@Q7s`%6Q=''@U_MD4>gY\2*MI30K3HN4s2sFA7[\`%6Q=''@UqYF4>gY]2a.[50K3HP4s2sFAN)S4%6Q=''@V.eH4>g\01Hl710K3Jq4s2sFAN=0_%6Q=''@kg.i4>g\Z2a.[50K3Js4s2sFAhc8/%6Q=''@l$:k4>nlN1-Q.00K3Ju4s2sG0f3B(%6Q=''@l6Fm4>nrT2a.[50K3K"4s2sG11W@.%6Q=''@lHRo4>o!(2a.[50K3K$4s2sG2)A]*%6Q=''@lZ^q4>o)O1-Q.00K3KM4s2sG2Dd3R%6Q=''@q%VE4>o*01d2@20K3KO4s2sG2`>21%6Q=''@q7bG4>o/S0g6%/0K3KQ4s2sG3&ro]%6Q=''@qInI4>o30@Qk5`0K3Mr4s2sG@l7j^%6Q=''A2-7j4>p_*@6P,_0K3Mt4s2sGA2ZG3%6Q=''A2?Cl4>pb+Aj-Yd0K3N!4s2sGAN=9b%6Q=''A2QOn4?#,R1-Q.00K3N#4s2sH2E3WZ%6Q=''A2c[p4?#5X@m1>a0K3N%4s2sH@5DLZ%6Q=''A2ugr4?$b]0Koq.0K3NN4s2sHA2#l)%6Q=''A7@_F4?$e*3''Id60K3NP4s2sHA2Rp^%6Q=''A7RkH4?$e[0g6%/0K3NR4s2sI0JPFK%6Q=''A7e"J4?,#K1Hl710K3Ps4s2sI0O\QW%6Q=''AMH@k4?,$(0g6%/0K3Pu4s2sI0f:dO%6Q=''AMZLm4?,&TAj-Yd0K3Q"4s2sI1,<9%%6Q=''AMlXo4?,,S1-Q.00K3Q$4s2sI3&G,/%6Q=''AN)dq4?,;Y0g6%/0K3Q&4s2sI@PM=U%6Q=''AN;ps4?-hZ1-Q.00K3QO4s2sI@qK47%6Q=''AR[hG4?5**@6P,_0K3QQ4s2sJ0fLsR%6Q=''ARmtI4?5/U0g6%/0K3QS4s2sH3&>/1%6Q=''AS++K4?50/@m1>a0K3St4s2sJ2.8=*%6Q=''AhcIl4?5;VA3LGb0K3T!4s2sJ3&!3R%6Q=''AhuUn4?5D^3Bdm70K3T#4s2sJ@:V>]%6Q=''Ai2ap4?6q.@Qk5`0K3T%4s2sF1,WN)%6Q=''AiDmr4>em&@Qk5`0K3T''4s2sF1M/R0%6Q=''AiW$t4>erL3''Id60K3TP4s2sF3+Om1%6Q=''An!qH4>ns,2a.[50K3TR4s2sGAn<Y[%6Q=''An4(J4?-h/@6P,_0K3TT4s2sIAi40a%6Q=''AnF4L4?6t^3Bdm70K:a?4s2sF0f3?''%6Q=(0JPa64>elM@Qk5`0K:aA4s2sF1c/W)%6Q=(0Jbm84>f$/A3LGb0K:aC4s2sH@5KZ%%6Q=(0Ju$:4?5,T2a.[50K:aE4s2sJA2Z,*%6Q=(0K20<4?6t`1-Q.00K:aG4s2sH1GgpP%6Q=(0KD<>4>pe*3Bdm`DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b3&"c)+?VV<2_[E)4>8`K@Qkns2`3<E4q0V.3&"i++?VMnAn4(74>8`KA3M+u2DAZM4q0V.3&"o-+?VYm@5pF[4>8`KAj.>"2_noQ4q0V.3&**N+?VVq@UhS24>8`L0g6^B2I\R$4q0V.3&*0P+?VYD0Jbm%4>8`L1HlpD1hC0*4q0V.3&*6R+?VM>AhZCX4>8`L2*N-F2)dEM4q0V.3&*<T+?VM@@V%_44>8`L2a/?H2.8@N4q0V.3&*BV+?VP92E3l04>8`L3BeQJ2DJ]#4q0V.3&+i*+?VP?0P3KX4>8`L@Qkns2E!6I4q0V.3&+o,+?VPA1H@W.4>8`LA3M+u2E5/#4q0V.3&+u.+?VPmAiDm_4>8`LAj.>"2`5,''4q0V.3&30O+?VSn1LWHV4>8`M0g6^B3&3C''4q0V.3&36Q+?VYn1bq6(4>8`M1HlpD1hA[V4q0V.3&3<S+?VJm2)%3''4>8`M2*N-F2)A`&4q0V.3&3BU+?VM=0K)*(4>8`M2a/?H2.SUW4q0V.3&3HW+?VMlAMu^]4>8`M3BeQJ2.U904q0V.3&4o++?VP@An!q54>8`M@Qkns2Iea-4q0V.3&4u-+?VS>2`!W,4>8`MA3M+u2`NKH4q0V.3&5&/+?VVl2)%3''4>8`MAj.>"3AWZR4q0V.3&<6P+?VVCA7e"74>8`N0g6^B2)dBH4q0V.3&<<R+?VMm@5g@Z4>8`N1HlpD2D[*t4q0V.3&<BT+?VM8@Pp=Y4>8`N2*N-F2)&HK4q0V.3&<HV+?VM93+P2^4>8`N2a/?H2E*<D4q0V.3&<NX+?VM<@lZ^^4>8`N3BeQJ2)mI)4q0V.3&=u,+?VMA@U_M14>8`N@Qkns2.C#K4q0V.3&>&.+?VMn2E<r14>8`NA3M+u2DR+"4q0V.3&>,0+?VP<@50qT4>8`NAj.>"2E3L''4q0V.3&E<Q+?VPk2`!W,4>8`O0g6^B2J"R%4q0V.3&EBS+?VS:2e5)]4>8`O1HlpD3AG#&4q0V.3&EHU+?VS<3&!N*4>8`O2*N-F2`NNL4q0V.3&ENW+?VSB1,_<*4>8`O2a/?H2`Wd,4q0V.3&ETY+?VP>3+Y8_4>8`O3BeQJ2e4]u4q0V.3&G&-+?VV>A7Ie44>8`O@Qkns3&kD&4q0V.3&G,/+?VVq0KD<+4>8`OA3M+u3Arm,4q0V.3&G21+?VM:2DdT,4>8`OAj.>"2)d9M4q0V.3&NBR+?VP@2)%3''4>8`P0g6^B2eFsV4q0V.3&NHT+?VVn@50qT4>8`P1HlpD2)/Ps4q0V.3&NNV+?VM?1bq6(4>8`P2*N-F3ArX$4q0V.3&NTX+?VM@1LWHV4>8`P2a/?H2E<a*4q0V.3&NZZ+?VV;@Pg7X4>8`P3BeQJ2)Jbt4q0V.3&P,.+?VMl0P*EW4>8`P@Qkns2)f,W4q0V.3&P20+?VSB3Aiu04>8`PA3M+u3Fl`14q0V.3&P82+?VJm2.JfZ4>8`PAj.>"2)7!s4q0V.3&WHS+?VM<3+>&\4>8`Q0g6^B2Dd4$4q0V.3&WNU+?VP?1,qH,4>8`Q1HlpD2E*?I4q0V.3&WTW+?VP@Ai2a]4>8`Q2*N-F2dn[&4q0V.3&WZY+?VSl2)[W-4>8`Q2a/?H2e4[!4q0V.3&W`[+?VY?11i]Z4>8`Q3BeQJ2E3R(4q0V.3&Y2/+?VYn@:VP24>8`Q@Qkns2e"R''4q0V.3&Y81+?VM;0f_E,4>8`QA3M+u2).(!4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=(2J#&p4>elM2a.[50K:t&4s2sF@Us(7%6Q=(2_[E<4>ns,2EhR40K;!G4s2sG1gsrZ%6Q=(2_mQ>4>o$-2EhR40K;!I4s2sG2_no-%6Q=(2`*]@4>pYX@6P,_0K;!K4s2sI2.8L/%6Q=(2`<iB4?5<10g6%/0K;!M4s2sH2E<HT%6Q=(2`NuD4?6k]2EhR40K;!O4s2sG1GiT*%6Q=(2dnlm4?52O2EhR40K;"#4s2sJ@UW_0%6Q=(2e,#o4?#0-Aj-Yd0K;"%4s2sG2Dm6R%6Q=(2e>/q4>^V''3Bdm70K;"''4s2sF0KD*V%6Q=(3&!N=4>ep)1-Q.00K;$H4s2sF@lH,+%6Q=(3&3Z?4>nm)3''Id60K;$J4s2sG1c[<T%6Q=(3&EfA4>o&T1Hl710K;$L4s2sG3&P;3%6Q=(3&WrC4?#!+2EhR40K;$N4s2sH1LjiW%6Q=(3&j)E4?#,Q1Hl710K;$P4s2sH@Q?A2%6Q=(3+4un4?$h21-Q.00K;%$4s2sI2E<WY%6Q=(3+G,p4?-e01Hl710K;%&4s2sI@q9%4%6Q=(3+Y8r4?5,T3''Id60K;%(4s2sJ3AE3O%6Q=(3A<W>4>o''*@m1>a0K;''I4s2sG2IU&Y%6Q=(3ANc@4>pY.@Qk5`0K;''K4s2sEARmY^%6Q=(3A`oB4>^V[1d2@20K;''M4s2sEAi!jZ%6Q=(3As&D4>^Y/Aj-Yd0K;''O4s2sF1,E?&%6Q=(3B02F4>ep,3''Id60K;''Q4s2sF1M/C+%6Q=(3FP)o4>f!-1Hl710K;(%4s2sF2Ip8\%6Q=(3Fb5q4>f*0@Qk5`0K;(''4s2sF3FcM^%6Q=(3FtAs4>f-/3Bdm70K;()4s2sF3G)ke%6Q=(@5''kf4>gS*0Koq.0K<Jq4s2sF@l.^[%6Q=(@5:"h4>g\(1-Q.00K<Js4s2sFAMR^Y%6Q=(@5L.j4>g_]2a.[50K<Ju4s2sG0JR*%%6Q=(@5^:l4>nuL2a.[50K<K"4s2sG2)8c-%6Q=(@5pFn4>gS*@m1>a0K<K$4s2sG2.:)\%6Q=(@:;>B4>o''+A3LGb0K<KM4s2sG2.\a2%6Q=(@:MJD4>o,YA3LGb0K<KO4s2sG@Q#u*%6Q=(@:_VF4>pY-@Qk5`0K<KQ4s2sG@k_LY%6Q=(@PBtg4?#&Q2*MI30K<Mr4s2sH3A``[%6Q=(@PU+i4?#910g6%/0K<Mt4s2sH@qI\a%6Q=(@Pg7k4?$e*3Bdm70K<N!4s2sHA27UX%6Q=(@Q$Cm4?,$''1-Q.00K<N#4s2sI0eb@H%6Q=(@Q6Oo4?,''-1Hl710K<N%4s2sI3B8u]%6Q=(@UVGC4?-b,ANgPc0K<NN4s2sI@5^,0%6Q=(@UhSE4?-b-2EhR40K<NP4s2sI@5qa\%6Q=(@V%_G4?-b\ANgPc0K<NR4s2sI@q.G]%6Q=(@k^(h4?-h]@m1>a0K<Ps4s2sJ2Ig5\%6Q=(@kp4j4?5B5@m1>a0K<Pu4s2sG@Q%g^%6Q=(@l-@l4>^V/@Qk5`0K<Q"4s2sEAi!p\%6Q=(@l?Ln4>^Y0A3LGb0K<Q$4s2sF0f:XK%6Q=(@lQXp4>gS*2a.[50K<Q&4s2sF@V0%4%6Q=(@pqPD4>noN3''Id60K<QO4s2sG1GCOI%6Q=(@q.\F4>o)S1-Q.00K<QQ4s2sG@PTZ%%6Q=(@q@hH4>pb\@Qk5`0K<QS4s2sG@q&n2%6Q=(A2$1i4?##OANgPc0K<St4s2sH1h''uZ%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8a*1-QgC2`5,&4q0V.3+Og/+?VSB@kg.V4>8a*1d3$E2`W[&4q0V.3+Om1+?VV;0Om9U4>8a*2Ei6G3&!-E4q0V.3+Os3+?VV<ARRb34>8a*3''JHI3&EWP4q0V.3+P$5+?VVq3FtA`4>8a*@6Per2IeTu4q0V.3+QJ^+?VYq2eG5_4>8a*@m2"t2.eOS4q0V.3+QP`+?VVm2)mc/4>8a*ANh5!3FjmS4q0V.3+QVb+?VSkAmmk44>8a+0KpUA3+Z\]4q0V.3+Xg.+?VMj3+P2^4>8a+1-QgC3AtGX4q0V.3+Xm0+?VJl0Jbm%4>8a+1d3$E2)Ai!4q0V.3+Xs2+?VM?AiDm_4>8a+2Ei6G2*!HI4q0V.3+Y$4+?VMi@lZ^^4>8a+3''JHI2.BuN4q0V.3+Y*6+?VP93&s/34>8a+@6Per2J"gZ4q0V.3+ZP_+?VPo0K)*(4>8a+@m2"t2`5&U4q0V.3+ZVa+?VVnARRb34>8a+ANh5!2.ARX4q0V.3+Z\c+?VV@0JG["4>8a,0KpUA2e$>P4q0V.3+am/+?VM82_mQ+4>8a,1-QgC2E,5)4q0V.3+as1+?VV=3Fk;_4>8a,1d3$E2.JO!4q0V.3+b$3+?VV@1grQW4>8a,2Ei6G2e=^T4q0V.3+b*5+?VV=0P*EW4>8a,3''JHI2).*O4q0V.3+b07+?VMk0Jks&4>8a,@6Per2D[6N4q0V.3+cV`+?VVo2E!`.4>8a,@m2"t2DmL)4q0V.3+c\b+?VS;2J#&]4>8a,ANh5!2`W[*4q0V.3+cbd+?VSn0fM9*4>8cL0KpUA3&!$D4q0V.3A<0O+?VVm0k<HW4>8cL1-QgC3+ZT.4q0V.3A<6Q+?VY<2J#&]4>8cL1d3$E3&Y8*4q0V.3A<<S+?VY<@:;>/4>8cL2Ei6G2)$as4q0V.3A<BU+?VM:Ammk44>8cL3''JHI2.JFN4q0V.3A<HW+?VP@2)@E*4>8cL@6Per2_[1#4q0V.3A=o++?VS<1Gq?*4>8cL@m2"t3AE@#4q0V.3A=u-+?VY=@lQX]4>8cLANh5!3AWF"4q0V.3A>&/+?VV=AMlX\4>8cM0KpUA2.C&N4q0V.3AE6P+?VMn1GM''&4>8cM1-QgC2DA`''4q0V.3AE<R+?VJl1L`NW4>8cM1d3$E2)Ac$4q0V.3AEBT+?VMj3&j)24>8cM2Ei6G2DR*u4q0V.3AEHV+?VP@1GM''&4>8cM3''JHI2I\XS4q0V.3AENX+?VS<AN;p`4>8cM@6Per2`##!4q0V.3AFu,+?VSk11`WY4>8cM@m2"t3&*=#4q0V.3AG&.+?VVo@5C(V4>8cMANh5!3AEBH4q0V.3AG,0+?VYE3As&14>8cN0KpUA2)-g@4q0V.3AN<Q+?VM;A2c[]4>8cN1-QgC2)I4"4q0V.3ANBS+?VMjAnF494>8cN1d3$E2D[<P4q0V.3ANHU+?VPj1H@W.4>8cN2Ei6G2e6?,4q0V.3ANNW+?VYC0JG["4>8cN3''JHI2)\uR4q0V.3ANTY+?VM;@q@h54>8cN@6Per2)I3N4q0V.3AP&-+?VMj3B'',24>8cN@m2"t2.JEs4q0V.3AP,/+?VMlA7[q64>8cNANh5!1hL<14q0V.3AP21+?VP:0JPa#4>8cO0KpUA2DSlU4q0V.3AWBR+?VPm1GV-''4>8cO1-QgC2`YA%4q0V.3AWHT+?VSC@q%V24>8cO1d3$E2e4a#4q0V.3AWNV+?VSo1h8cZASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0KCpI4s2sHAn3Y\%6Q=)1H.K?4?,'',A3LGb0KCpK4s2sI1,3B)%6Q=)1H@WA4?,/X0Koq.0KCpt4s2sI3&ENW%6Q=)1L`Nj4?,>[1-Q.00KCq!4s2sI@Q?,+%6Q=)1LrZl4?-n21d2@20KCq#4s2sIAhms^%6Q=)1M/fn4?5)O0g6%/0KCsD4s2sJ0f3?''%6Q=)1bh0:4?5,S@m1>a0KCsF4s2sJ2IeX/%6Q=)1c%<<4?5,V@m1>a0KCsH4s2sEARdDX%6Q=)1c7H>4>^Y,Aj-Yd0KCsJ4s2sF0f1aO%6Q=)1cIT@4>eoO0g6%/0KCsL4s2sFAiVY2%6Q=)1c[`B4>nrKANgPc0KCsu4s2sG2e4a/%6Q=)1h&Wk4>p\+0g6%/0KCt"4s2sGAM@RW%6Q=)1h8cm4?#&S1Hl710KCt$4s2sHAMQ/-%6Q=)1hJoo4?5-+A3LGb0KD!E4s2sJ1,q''R%6Q=)2).9;4>ep*1d2@20KD!G4s2sF3AENX%6Q=)2)@E=4>gSWAj-Yd0KD!I4s2sGA7RDY%6Q=)2)RQ?4?#8XA3LGb0KD!K4s2sHAMRg\%6Q=)2)d]A4?$b1@Qk5`0KD!M4s2sF3&bD4%6Q=)2*!iC4?"uTAj-Yd0KD"!4s2sF0kOiX%6Q=)2.A`l4?,;X1Hl710KD"#4s2sIAnE_\%6Q=)2.Sln4>^Y[@6P,_0KD"%4s2sF@qK16%6Q=)2.f#p4>o)Q2*MI30KD$F4s2sH2dp2[%6Q=)2DIB<4?$\[1Hl710KD$H4s2sI1,39&%6Q=)2D[N>4?5E6Aj-Yd0KD$J4s2sF0k3+*%6Q=)2DmZ@4>g_Z@6P,_0KD$L4s2sG2.^8]%6Q=)2E*fB4>o2XAj-Yd0KD$N4s2sG@Q6A3%6Q=)2E<rD4>p_^1Hl710KD%"4s2sGAN;Y4%6Q=)2I\im4>pe01d2@20KD%$4s2sH2J-Ma%6Q=)2Inuo4?$e*1d2@20KD%&4s2sFA7[JZ%6Q=)2J,,q4?5)S2*MI30KD''G4s2sJ0fV*U%6Q=)2_dK=4?5AT2EhR40KD''I4s2sF0kE7,%6Q=)2`!W?4>elKA3LGb0KD''K4s2sG1,L[K%6Q=)2`3cA4>o)X0g6%/0KD''M4s2sG2Ing3%6Q=)2`EoC4>pb*@6P,_0KD''O4s2sFAR[P]%6Q=)2`X&E4?$e]1-Q.00KD(#4s2sHAiDJ/%6Q=)2e"rn4>o*03''Id60KD(%4s2sI2.:)\%6Q=)2e5)p4?,312a.[50KD(''4s2sI@:hJ_%6Q=)2eG5r4>em&3Bdm70KD*H4s2sF1LrL0%6Q=)3&*T>4>f,X1Hl710KD*J4s2sFAN49c%6Q=)3&<`@4>g_20Koq.0KD*L4s2sG0Jt^O%6Q=)3&NlB4?50.1d2@20KD*N4s2sJ2E!BU%6Q=)3&a#D4>eg%2a.[50KD*P4s2sF0em9(%6Q=)3&s/F4>em)A3LGb0KD+$4s2sF1GUXJ%6Q=)3+>&o4>eoO2a.[50KD+&4s2sF1M(&[%6Q=)3+P2q4>es,3''Id60KD+(4s2sF2)I3T%6Q=)3+b>s4>euP0g6%/0KD-I4s2sF2DI-S%6Q=)3AE]?4>f,W3''Id60KD-K4s2sF3FZP`%6Q=)3AWiA4>gP''@m1>a0KD-M4s2sF@U_2Y%6Q=)3AiuC4>gV&2EhR40KD-O4s2sF@k_LY%6Q=)3B'',E4>gV''0g6%/0KD-Q4s2sF@khCU%6Q=)3B98G4>g\01d2@[DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b3B:M3+?VMm3+4u[4>8cU@Qkns2.^>Q4q0V.3B:S5+?VMn2_[E)4>8cUA3M+u2DR4''4q0V.3B:Y7+?VP;3&Ef.4>8cUAj.>"2DSfP4q0V.3FOU*+?VP<3+G,]4>8d(0g6^B2D[9N4q0V.3FO[,+?VP?0K20)4>8d(1HlpD2E!7!4q0V.3FOa.+?VP?11WQX4>8d(2*N-F2E!KP4q0V.3FOg0+?VP@2e>/^4>8d(2a/?H2E5,#4q0V.3FOm2+?VPj0kNTY4>8d(3BeQJ2ISC!4q0V.3FQ>[+?VPl@UhS24>8d(@Qkns2Ind,4q0V.3FQD]+?VPn0KD<+4>8d(A3M+u2J"a*4q0V.3FQJ_+?VS;1LiTX4>8d(Aj.>"2_d''G4q0V.3FX[++?VS;2E*f/4>8d)0g6^B2`5)(4q0V.3FXa-+?VSA0JPa#4>8d)1HlpD2`N[*4q0V.3FXg/+?VSC0JPa#4>8d)2*N-F2`WcR4q0V.3FXm1+?VSCAhZCX4>8d)2a/?H2dp8O4q0V.3FXs3+?VSl0ekj$4>8d)3BeQJ2e-8T4q0V.3FZD\+?VSn1H@W.4>8d)@Qkns3&!?N4q0V.3FZJ^+?VV>A2ZU\4>8d)A3M+u3&EU(4q0V.3FZP`+?VV@1c[`/4>8d)Aj.>"3&id+4q0V.3Faa,+?VVCAhuU[4>8d*0g6^B3+4OR4q0V.3Fag.+?VVl1LiTX4>8d*1HlpD3+4[$4q0V.3Fam0+?VVl2`!W,4>8d*2*N-F3+Fj$4q0V.3Fas2+?VVnA7[q64>8d*2a/?H3AFr!4q0V.3Fb$4+?VY>2E!`.4>8d*3BeQJ3AWU*4q0V.3FcJ]+?VY@0fV?+4>8d*@Qkns3Arm-4q0V.3FcP_+?VYC3B0234>8d*A3M+u1hA@L4q0V.3FcVa+?VJl0K;6*4>8d*Aj.>"1hACQ4q0V.3Fjg-+?VJl2)d].4>8d+0g6^B2).*M4q0V.3Fjm/+?VM:2_[E)4>8d+1HlpD2)f#V4q0V.3Fjs1+?VM@1Gh9)4>8d+2*N-F2)o)U4q0V.3Fk$3+?VMj1,;$&4>8d+2a/?H2.\R''4q0V.3Fk*5+?VP9@l6FZ4>8d+3BeQJ2Df#W4q0V.3FlP^+?VP@2DIB)4>8d+@Qkns2E*KO4q0V.3FlV`+?VPm1c.B*4>8d+A3M+u2_ni#4q0V.3Fl\b+?VS?2`!W,4>8d+Aj.>"2dnU#4q0V.3Fsm.+?VV?@Q6O\4>8d,0g6^B3+=g%4q0V.3Fss0+?VY=@Q6O\4>8d,1HlpD3AWEE4q0V.3Ft$2+?VM>1GM''&4>8d,2*N-F2)f,(4q0V.3Ft*4+?VYDAn=.84>8d,2a/?H2DSiS4q0V.3Ft06+?VPB0P!?V4>8d,3BeQJ2I\[)4q0V.3FuV_+?VS;ARmt64>8d,@Qkns2e=j''4q0V.3Fu\a+?VV;2`Eo04>8d,A3M+u3&3EJ4q0V.3Fubc+?VVDAMu^]4>8d,Aj.>"3B1P]4q0V.3G''s/+?VVB2)RQ,4>8d-0g6^B3+cVS4q0V.3G($1+?VMk1L`NW4>8d-1HlpD1hJO''4q0V.3G(*3+?VJmAMH@X4>8d-2*N-F1hL2S4q0V.3G(05+?VM=0K20)4>8d-2a/?H2.86o4q0V.3G(67+?VMjA7Rk54>8d-3BeQJ2.C,W4q0V.3G)\`+?VMn@l$:X4>8d-@Qkns2DI%"4q0V.3G)bb+?VP<11i]Z4>8d-A3M+u2Dnqt4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=)An=.K4>o)S@Qk5`0KE`W4s2sG3+ZYb%6Q=Q0JG[54>o2[@Qk5`0OZXi4s2sGA2cJ3%6Q=Q0JYg74>p_^0g6%/0OZXk4s2sH2)@$P%6Q=Q0Jks94?#-,3Bdm70OZXm4s2sH2_eo.%6Q=Q0K)*;4?#8XANgPc0OZXo4s2sH3Ft*4%6Q=Q0K;6=4?$e,1Hl710OZXq4s2sI0kE.)%6Q=Q0O[-f4?,*)Aj-Yd0OZYE4s2sI2.9oW%6Q=Q0Om9h4?,?0@6P,_0OZYG4s2sI@5D=U%6Q=Q0P*Ej4?-n\@Qk5`0OZYI4s2sIAiX<a%6Q=Q0ebd64?5)O1-Q.00OZ[j4s2sJ0k=fY%6Q=Q0etp84?5>S2a.[50OZ[l4s2sEAR](3%6Q=Q0f2'':4>^VZ0g6%/0OZ[n4s2sF1,(LJ%6Q=Q0fD3<4>f)W2*MI30OZ[p4s2sF3+ZS`%6Q=Q0fV?>4>gV&@Qk5`0OZ[r4s2sH2)/N''%6Q=Q0k!6g4>gV)A3LGb0OZ\F4s2sI0f3H*%6Q=Q0k3Bi4?-b''@6P,_0OZ\H4s2sIAn*\^%6Q=Q0kENk4?5;X1Hl710OZ\J4s2sJ2`>21%6Q=Q1,(m74?$_)2*MI30OZ^k4s2sI@:Nn5%6Q=Q1,;$94?5AT3''Id60OZ^m4s2sJ0fCdN%6Q=Q1,M0;4>f$/1Hl710OZ^o4s2sF1LW7,%6Q=Q1,_<=4?5)M2a.[50OZ^q4s2sF1c%-U%6Q=Q1,qH?4>f&W1-Q.00OZ^s4s2sFAMQ,,%6Q=Q11<?h4>o!(3''Id60OZ_G4s2sG@l#r*%6Q=Q11NKj4?"rR@6P,_0OZ_I4s2sH2`<BS%6Q=Q11`Wl4?$b0@Qk5`0OZ_K4s2sHAn<Y[%6Q=Q1GD!84?,;Z0Koq.0OZal4s2sJ0JkOK%6Q=Q1GV-:4?5,R1d2@20OZan4s2sJ1GLRI%6Q=Q1Gh9<4?52P3''Id60OZap4s2sJ2E5;4%6Q=Q1H%E>4?#)SANgPc0OZar4s2sJ@:M,X%6Q=Q1H7Q@4>gY''2a.[50OZat4s2sFA2ZG3%6Q=Q1LWHi4>o&U0Koq.0OZbH4s2sG2dnI*%6Q=Q1LiTk4?-k[3''Id60OZbJ4s2sJ2Ip8\%6Q=Q1M&`m4>nuRANgPc0OZbL4s2sG2`*NY%6Q=Q1b_*94>o2S3Bdm70OZdm4s2sI1Li:+%6Q=Q1bq6;4?5AU2a.[50OZdo4s2sJ2IeF)%6Q=Q1c.B=4?,<4ANgPc0OZdq4s2sGAiMV2%6Q=Q1c@N?4>o#T@6P,_0OZds4s2sF@V.S`%6Q=Q1cRZA4>^V(2EhR40OZdu4s2sH0J[-%%6Q=Q1grQj4?#,TA3LGb0OZeI4s2sG2DSl.%6Q=Q1h/]l4>ej''1d2@20OZeK4s2sF1,CgP%6Q=Q1hAin4>em*1-Q.00OZeM4s2sF3Fjp0%6Q=Q2)%3:4>g_10g6%/0OZgn4s2sG0JYRN%6Q=Q2)7?<4>nrL0Koq.0OZgp4s2sG2)Ai.%6Q=Q2)IK>4>o&U1d2@20OZgr4s2sG2DJf-%6Q=Q2)[W@4>o)V1d2@20OZgt4s2sG3+ap0%6Q=Q2)mcB4>o/R2EhR40OZh!4s2sG@Q$#+%6Q=Q2.8Zk4>pb)2*MI30OZhJ4s2sH1,gsP%6Q=Q2.Jfm4?#,PAj-Yd0OZhL4s2sH2Ip8\%6Q=Q2.\ro4?$bZANgPc0OZhN4s2sI0JtaP%6Q=Q2D@<;4>f*10Koq.0OZjo4s2sI3+c\b%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:2%1-QgC3&rp04q0V.@5]o*+?VVl@5''kS4>:2%1d3$E3+4g''4q0V.@5]u,+?VVl@q%V24>:2%2Ei6G3A<0u4q0V.@5^&.+?VY=3ANc-4>:2%3''JHI3B&fN4q0V.@5^,0+?VYC2*!i04>:2%@6Per2DmHS4q0V.@5_RY+?VSk0P*EW4>:2%@m2"t3&**F4q0V.@5_X[+?VYB@U_M14>:2%ANh5!2.\OR4q0V.@5_^]+?VP9A7Ie44>:2&0KpUA2DR!q4q0V.@5fo)+?VP>@5U4X4>:2&1-QgC2E!9H4q0V.@5fu++?VP@3A<W+4>:2&1d3$E2`G>)4q0V.@5g&-+?VSk1h8cZ4>:2&2Ei6G2e+[T4q0V.@5g,/+?VSo1M&`Z4>:2&3''JHI3&**q4q0V.@5g21+?VVn@:MJ14>:2&@6Per3+Op(4q0V.@5hXZ+?VVoAMH@X4>:2&@m2"t3+XsZ4q0V.@5h^\+?VSB@6$L\4>:2&ANh5!2)6jE4q0V.@5hd^+?VP;A2ug_4>:2''0KpUA2D\c!4q0V.@5ou*+?VP=1bq6(4>:2''1-QgC2DR9P4q0V.@5p&,+?VVl11WQX4>:2''1d3$E2dn[%4q0V.@5p,.+?VSl@k^(U4>:2''2Ei6G3+66*4q0V.@5p20+?VYBARRb34>:2''3''JHI2e4j*4q0V.@5p82+?VV=0Om9U4>:2''@6Per3&`ZS4q0V.@5q^[+?VJlA2ug_4>:2''@m2"t2)-pI4q0V.@5qd]+?VM;1c%<)4>:2''ANh5!2)@-E4q0V.@5qj_+?VMj@5C(V4>:2(0KpUA2.J<q4q0V.@6$&++?VMk0fD3)4>:2(1-QgC2.U6.4q0V.@6$,-+?VP;1,_<*4>:2(1d3$E2DR*J4q0V.@6$2/+?VP=@PBtT4>:2(2Ei6G2E3EI4q0V.@6$81+?VPA1Gh9)4>:2(3''JHI2Ig5W4q0V.@6$>3+?VPm1c7H+4>:2(@6Per2InO$4q0V.@6%d\+?VP@A2?CY4>:2(@m2"t2J+gV4q0V.@6%j^+?VS;1hAi[4>:2(ANh5!2_d7%4q0V.@6%p`+?VP>@q%V24>:2P0KpUA2dnXW4q0V.@::lS+?VSl@:VP24>:2P1-QgC2e6H-4q0V.@::rU+?VSo1grQW4>:2P1d3$E2eHJX4q0V.@:;#W+?VV<2dnlZ4>:2P2Ei6G3&33t4q0V.@:;)Y+?VV=1H@W.4>:2P3''JHI3&P,&4q0V.@:;/[+?VVl2J#&]4>:2P@6Per3+HH04q0V.@:<V/+?VVoAi2a]4>:2P@m2"t3A<BO4q0V.@:<\1+?VY<2`Eo04>:2PANh5!3AP#R4q0V.@:<b3+?VY>3AE],4>:2Q0KpUA3AicP4q0V.@:CrT+?VYn@:_V34>:2Q1-QgC2)7"!4q0V.@:D#V+?VM=3&Ef.4>:2Q1d3$E2J+a)4q0V.@:D)X+?VS;1H%E+4>:2Q2Ei6G2).!K4q0V.@:D/Z+?VSC3&Nl/4>:2Q3''JHI2e=j(4q0V.@:D5\+?VV<@P^1W4>:2Q@6Per2e-?/4q0V.@:E\0+?VM>1h/]Y4>:2Q@m2"t2)mHJ4q0V.@:Eb2+?VMk@5pF[4>:2QANh5!2D\cM4q0V.@:Eh4+?VP?An=.84>:2R0KpUA2E#/X4q0V.@:M#U+?VPB2.8ZX4>:2R1-QgC2_no(4q0V.@:M)W+?VS?3+b>`4>:2R1d3$E2`3R+4q0V.@:M/Y+?VSC0P*EWASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0O\HL4s2sH3Ai]Y%6Q=Q@lHRo4?#92Aj-Yd0O\HN4s2sH@lZJ3%6Q=Q@lZ^q4?$e+0Koq.0O\I"4s2sHA2H,,%6Q=Q@q%VE4?,5Q2a.[50O\I$4s2sI@5B`(%6Q=Q@q7bG4?5;U@Qk5`0O\I&4s2sJ0K(XL%6Q=Q@qInI4?7"/0Koq.0O\KG4s2sF0P*1,%6Q=QA2-7j4>elQ2*MI30O\KI4s2sF1LjoY%6Q=QA2?Cl4>ep+1-Q.00O\KK4s2sF0JGLN%6Q=QA2QOn4>f!)@6P,_0O\KM4s2sF3+ZYb%6Q=QA2c[p4>f,UAj-Yd0O\KO4s2sH1,EH)%6Q=QA2ugr4>gS-@Qk5`0O\L#4s2sF@l?/-%6Q=QA7@_F4>eoLA3LGb0O\L%4s2sG0P*%(%6Q=QA7RkH4>nm*1Hl710O\L''4s2sG1GrZ+%6Q=QA7e"J4>nuT1Hl710O\NH4s2sG1G`W,%6Q=QAMH@k4>o!)@Qk5`0O\NJ4s2sG1h1&[%6Q=QAMZLm4>o''.3Bdm70O\NL4s2sG2J+s5%6Q=QAMlXo4>gY\1Hl710O\NN4s2sG3FcS`%6Q=QAN)dq4>o33A3LGb0O\NP4s2sGAhc/,%6Q=QAN;ps4?#!+2*MI30O\O$4s2sEAN2\6%6Q=QAR[hG4?#-/3Bdm70O\O&4s2sH2J+p4%6Q=QARmtI4?$\/1Hl710O\O(4s2sH@q918%6Q=QAS++K4?$e\Aj-Yd0O\QI4s2sHA3"-`%6Q=QAhcIl4?,#Q0g6%/0O\QK4s2sI1Gh*U%6Q=QAhuUn4?,,S3''Id60O\QM4s2sI1cAi-%6Q=QAi2ap4?,0,@m1>a0O\QO4s2sI2.g;]%6Q=QAiDmr4?,<12*MI30O\QQ4s2sIA2c2+%6Q=QAiW$t4?5)L0g6%/0O\R%4s2sJ0K*H*%6Q=QAn!qH4?52X2a.[50O\R''4s2sJ2_ef+%6Q=QAn4(J4?6h)1-Q.00O\R)4s2sF0On]Y%6Q=QAnF4L4>f)Y2a.[50Oc^i4s2sG0fW`.%6Q=R0JPa64?,''+1Hl710Oc^k4s2sI2)@*R%6Q=R0Jbm84?-k*3''Id60Oc^m4s2sJ0JY=G%6Q=R0Ju$:4>^Y[1Hl710Oc^o4s2sF0K1gP%6Q=R0K20<4>elN2a.[50Oc^q4s2sF1H.*R%6Q=R0KD<>4>nlOAj-Yd0Oc_E4s2sG1Gh*U%6Q=R0Od3g4>o,UAj-Yd0Oc_G4s2sGAMRaZ%6Q=R0P!?i4?-k\1Hl710Oc_I4s2sJ0JR0''%6Q=R0P3Kk4>^Y\2a.[50Ocaj4s2sF@l7g]%6Q=R0ekj74?-h\@6P,_0Ocal4s2sG2.L5^%6Q=R0f)!94?$e2@6P,_0Ocan4s2sF1GppO%6Q=R0f;-;4?,;\2EhR40Ocap4s2sF0fM!S%6Q=R0fM9=4>o!*1Hl710Ocar4s2sF@Pp,/%6Q=R0f_E?4>gS+@Qk5`0OcbF4s2sF@k_=T%6Q=R0k*<h4>o#MA3LGb0OcbH4s2sG2`3<R%6Q=R0k<Hj4?5)Q@m1>a0OcbJ4s2sEARm\_%6Q=R0kNTl4>f,R@6P,_0Ocdk4s2sF3AP#,%6Q=R1,1s84>p\.0Koq.0Ocdm4s2sI@5Tc''%6Q=R1,D*:4>euPANgPc0Ocdo4s2sF3&*9S%6Q=R1,V6<4>f--2*MI30Ocdq4s2sG0P3"&%6Q=R1,hB>4>nrP1Hl710Ocds4s2sG2e+R+%6Q=R1-%N@4?,)P2*MI\DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b@PV@U+?VPB2)RQ,4>:5"@Qkns3Ar]J4q0V.@PVFW+?VYE@l-@Y4>:5"A3M+u3FO[&4q0V.@PVLY+?VJm2)@E*4>:5"Aj.>"2)m9J4q0V.@P]]%+?VMjAn=.84>:5#0g6^B3&!''@4q0V.@P]c''+?VMk@PL%U4>:5#1HlpD2.\OT4q0V.@P]i)+?VMn3&Nl/4>:5#2*N-F2D?m?4q0V.@P]o++?VP:1h&WX4>:5#2a/?H2DR''F4q0V.@P]u-+?VP?AnF494>:5#3BeQJ2Ig>Q4q0V.@P_FV+?VPnA7[q64>:5#@Qkns3&"iR4q0V.@P_LX+?VV<2eG5_4>:5#A3M+u3&5#$4q0V.@P_RZ+?VVC3+>&\4>:5#Aj.>"3+HDW4q0V.@Pfc&+?VY<0JG["4>:5$0g6^B3A<4"4q0V.@Pfi(+?VYB3+4u[4>:5$1HlpD3Fu`14q0V.@Pfo*+?VYnA7@_34>:5$2*N-F1hC5S4q0V.@Pfu,+?VM;AhZCX4>:5$2a/?H2*!EN4q0V.@Pg&.+?VSl11NKW4>:5$3BeQJ3AEL(4q0V.@PhLW+?VYD1h/]Y4>:5$@Qkns3Fl_^4q0V.@PhRY+?VPnA7Rk54>:5$A3M+u2_[!G4q0V.@PhX[+?VM;2)@E*4>:5$Aj.>"2)R3I4q0V.@Poi''+?VMj3&Nl/4>:5%0g6^B2DR-L4q0V.@Poo)+?VP;3FtA`4>:5%1HlpD2DSf!4q0V.@Pou++?VPl@5:"U4>:5%2*N-F2J-N44q0V.@Pp&-+?VS>1,;$&4>:5%2a/?H3+4O#4q0V.@Pp,/+?VY@1H7Q-4>:5%3BeQJ2J-GR4q0V.@PqRX+?VVlAn=.84>:5%@Qkns3&<?M4q0V.@PqXZ+?VM9AN)d^4>:5%A3M+u3&YA.4q0V.@Pq^\+?VM;ARRb34>:5%Aj.>"2)Af(4q0V.@Q#o(+?VJm1c@N,4>:5&0g6^B3A<<I4q0V.@Q#u*+?VVq@PBtT4>:5&1HlpD2*!R''4q0V.@Q$&,+?VV<1GM''&4>:5&2*N-F2.U<04q0V.@Q$,.+?VSkARRb34>:5&2a/?H3+cW34q0V.@Q$20+?VPAA77Y24>:5&3BeQJ3+Fa''4q0V.@Q%XY+?VS<AiMs`4>:5&@Qkns3Fam*4q0V.@Q%^[+?VPj1LrZY4>:5&A3M+u3+68M4q0V.@Q%d]+?VJl1H@W.4>:5&Aj.>"2)@*L4q0V.@Q,u)+?VM>0K)*(4>:5''0g6^B2)dEO4q0V.@Q-&++?VP;@l6FZ4>:5''1HlpD2D\bs4q0V.@Q-,-+?VP>AMu^]4>:5''2*N-F2I\LS4q0V.@Q-2/+?VPmAMH@X4>:5''2a/?H2J"aT4q0V.@Q-81+?VS:@:VP24>:5''3BeQJ2`G;Y4q0V.@Q.^Z+?VSkAS++84>:5''@Qkns2e$3(4q0V.@Q.d\+?VSn@U_M14>:5''A3M+u3&!.!4q0V.@Q.j^+?VV;@l?L[4>:5''Aj.>"3&Y8U4q0V.@Q6&*+?VVl3Aiu04>:5(0g6^B3AWO%4q0V.@Q6,,+?VM>AMZLZ4>:5(1HlpD2)o))4q0V.@Q62.+?VMn1M&`Z4>:5(2*N-F2DnoR4q0V.@Q680+?VP?3As&14>:5(2a/?H2ISR!4q0V.@Q6>2+?VPk@Pp=Y4>:5(3BeQJ2`3BM4q0V.@Q7d[+?VVl@lHR\4>:5(@Qkns2)$dB4q0V.@Q7j]+?VSAAMlX\4>:5(A3M+u2)d<F4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=R3+Y8r4>g_*@Qk5`0Od"R4s2sG0K(dP%6Q=R3A<W>4>o)V@6P,_0Od$s4s2sG@l?#)%6Q=R3ANc@4?#-01d2@20Od$u4s2sH@521S%6Q=R3A`oB4?$k1ANgPc0Od%"4s2sI0kN7+%6Q=R3As&D4?,8S3''Id60Od%$4s2sJ0JkXN%6Q=R3B02F4?5E21Hl710Od%&4s2sH@UhD^%6Q=R3FP)o4?#,T@m1>a0Od%O4s2sH@:hM`%6Q=R3Fb5q4?$_,0g6%/0Od%Q4s2sI1h/@+%6Q=R3FtAs4?5)M0Koq.0Od%S4s2sH3Ft37%6Q=R@5''kf4?$\/1-Q.00OeHF4s2sI1G^pQ%6Q=R@5:"h4>gPY0g6%/0OeHH4s2sH2`*3P%6Q=R@5L.j4>^V)A3LGb0OeHJ4s2sEAS*\]%6Q=R@5^:l4>gS.3Bdm70OeHL4s2sFAn<Y[%6Q=R@5pFn4>ns(A3LGb0OeHN4s2sG2D\i,%6Q=R@:;>B4>o-10g6%/0OeI"4s2sG@q@V`%6Q=R@:MJD4?,5W@Qk5`0OeI$4s2sI3&`c[%6Q=R@:_VF4?-b*@Qk5`0OeI&4s2sJ0f3H*%6Q=R@PBtg4?50/1Hl710OeKG4s2sJ3Fjg-%6Q=R@PU+i4>pV&2a.[50OeKI4s2sH0JYOM%6Q=R@Pg7k4?#&O@6P,_0OeKK4s2sI11`C.%6Q=R@Q$Cm4?,/T2a.[50OeKM4s2sI@prt5%6Q=R@Q6Oo4>^V''0g6%/0OeKO4s2sF0f1dP%6Q=R@UVGC4>ej''@Qk5`0OeL#4s2sF2)o&/%6Q=R@UhSE4>gS[2*MI30OeL%4s2sFAMH),%6Q=R@V%_G4>g\+1Hl710OeL''4s2sFAN2D.%6Q=R@k^(h4>g_*1d2@20OeNH4s2sFAhu;.%6Q=R@kp4j4>g_/@Qk5`0OeNJ4s2sFAn!S\%6Q=R@l-@l4>np+1-Q.00OeNL4s2sG1GLUJ%6Q=R@l?Ln4>o*+1-Q.00OeNN4s2sG2_ei,%6Q=R@lQXp4>pe0ANgPc0OeNP4s2sH1,UgN%6Q=R@pqPD4?#,R@6P,_0OeO$4s2sH2`"l+%6Q=R@q.\F4?,#R1d2@20OeO&4s2sI0f(gR%6Q=R@q@hH4?,&S3''Id60OeO(4s2sI2`EWY%6Q=RA2$1i4?-bYAj-Yd0OeQI4s2sI@:Wk3%6Q=RA26=k4?-k22*MI30OeQK4s2sIA7dV]%6Q=RA2HIm4?5/W@6P,_0OeQM4s2sJ2)dHX%6Q=RA2ZUo4?5AT1-Q.00OeQO4s2sJ@q@M]%6Q=RA2laq4>em(2*MI30OeQQ4s2sG1Gq*T%6Q=RA77YE4?#011d2@20OeR%4s2sG2_d0R%6Q=RA7IeG4>p\/3''Id60OeR''4s2sH1LjrZ%6Q=RA7[qI4?-h\1Hl710OeR)4s2sJ1LXiY%6Q=RAM?:j4?5;Y1Hl710OeTJ4s2sGA26#+%6Q=RAMQFl4>f)Y@m1>a0OeTL4s2sG3A>#.%6Q=RAMcRn4>o30@m1>a0OeTN4s2sIAnGR;%6Q=RAMu^p4?52X@6P,_0OeTP4s2sH2.U/[%6Q=RAN2jr4?5)M@6P,_0OeTR4s2sF3&P,.%6Q=RARRbF4>o/Q1-Q.00OeU&4s2sG1L`1)%6Q=RARdnH4>o33@Qk5`0OeU(4s2sEAi);-%6Q=RAS"%J4>pe,@m1>a0OeU*4s2sG2e4m3%6Q=RAhZCk4?-q^@Qk5`0OeWK4s2sI2)7''R%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:5V1-QgC2e6AS4q0V.@V.D[+?VY?2)IK+4>:5V1d3$E2E<R*4q0V.@V.J]+?VPo2_[E)4>:5V2Ei6G2)dF%4q0V.@V.P_+?VM@AiDm_4>:5V3''JHI2.A=N4q0V.@V.Va+?VSn11NKW4>:5V@6Per2_m-s4q0V.@V0(5+?VM<0O[-S4>:5V@m2"t3AG)$4q0V.@V0.7+?VYp@Pg7X4>:5VANh5!1hC*+4q0V.@V049+?VJm1hAi[4>:8!0KpUA2)$mt4q0V.@k]W$+?VM82`3c.4>:8!1-QgC2)7!E4q0V.@k]]&+?VVn3FtA`4>:8!1d3$E2)I-L4q0V.@k]c(+?VM@1,M0(4>:8!2Ei6G2.ARS4q0V.@k]i*+?VMm0k<HW4>:8!3''JHI2.\d*4q0V.@k]o,+?VMm@:VP24>:8!@6Per2.^AY4q0V.@k_@U+?VMn0kNTY4>:8!@m2"t2D@+#4q0V.@k_FW+?VP;@Pp=Y4>:8!ANh5!2D[-t4q0V.@k_LY+?VP<A2$1V4>:8"0KpUA2E5,W4q0V.@kf]%+?VPl1b_*&4>:8"1-QgC2`NcU4q0V.@kfc''+?VSC3+Y8_4>:8"1d3$E2dnCL4q0V.@kfi)+?VSnAM?:W4>:8"2Ei6G3&3<L4q0V.@kfo++?VVl0JYg$4>:8"3''JHI3+6AV4q0V.@kfu-+?VVp1c.B*4>:8"@6Per3A<0D4q0V.@khFV+?VY<@Q6O\4>:8"@m2"t3AE:"4q0V.@khLX+?VY=A2la^4>:8"ANh5!3G''sV4q0V.@khRZ+?VPlAMlX\4>:8#0KpUA2Dd9N4q0V.@koc&+?VP=AMQFY4>:8#1-QgC2DmEN4q0V.@koi(+?VPnAi)[\4>:8#1d3$E2`<WP4q0V.@koo*+?VSl0k*<U4>:8#2Ei6G3A<?O4q0V.@kou,+?VY?A2-7W4>:8#3''JHI2J$?+4q0V.@kp&.+?VM<AhlOZ4>:8#@6Per2.g;X4q0V.@kqLW+?VP=@5L.W4>:8#@m2"t3+b!X4q0V.@kqRY+?VVqARmt64>:8#ANh5!3ANEJ4q0V.@kqX[+?VM92`Nu14>:8$0KpUA2)mL''4q0V.@l#i''+?VMA1-%N-4>:8$1-QgC2.JL$4q0V.@l#o)+?VMm3B'',24>:8$1d3$E2IpE/4q0V.@l#u++?VSo3+b>`4>:8$2Ei6G2`3="4q0V.@l$&-+?VVn@UhS24>:8$3''JHI3+ZYV4q0V.@l$,/+?VYD2.A`Y4>:8$@6Per2_\]$4q0V.@l%RX+?VJm0k<HW4>:8$@m2"t2I^--4q0V.@l%XZ+?VPo@PL%U4>:8$ANh5!2`3BF4q0V.@l%^\+?VYBAn!q54>:8%0KpUA2)-q!4q0V.@l,o(+?VM<0ebd#4>:8%1-QgC2)mBL4q0V.@l,u*+?VM@2)d].4>:8%1d3$E2*#)T4q0V.@l-&,+?VMk2D@<(4>:8%2Ei6G2.ej(4q0V.@l-,.+?VP>3B'',24>:8%3''JHI2E*L''4q0V.@l-20+?VPn1,1s%4>:8%@6Per2`<U(4q0V.@l.XY+?VV>A7e"74>:8%@m2"t3+HN14q0V.@l.^[+?VY<0f2''''4>:8%ANh5!3A>&U4q0V.@l.d]+?VY?1h8cZ4>:8&0KpUA2`NQM4q0V.@l5u)+?VSB1LWHV4>:8&1-QgC2)8TK4q0V.@l6&++?VMm@5^:Y4>:8&1d3$E2)d7%4q0V.@l6,-+?VMA2`*]-ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0Olsu4s2sG0JP=H%6Q=S2)d]A4>efI1-Q.00Olt"4s2sF0f<B''%6Q=S2*!iC4>ej%@m1>a0OltK4s2sF0k4`X%6Q=S2.A`l4>elJ0Koq.0OltM4s2sF2)-dK%6Q=S2.Sln4>f)U1d2@20OltO4s2sF3&NZZ%6Q=S2.f#p4>f,V2a.[50Om!p4s2sF@Q?;0%6Q=S2DIB<4>gV\2EhR40Om!r4s2sFA2n$^%6Q=S2D[N>4>nm&@m1>a0Om!t4s2sG1-%3U%6Q=S2DmZ@4>o#OA3LGb0Om"!4s2sG2`EHT%6Q=S2E*fB4>o/U1Hl710Om"#4s2sG3+?A]%6Q=S2E<rD4>o00Aj-Yd0Om"L4s2sH2Ina1%6Q=S2I\im4>p_\3''Id60Om"N4s2sGAN"-a%6Q=S2Inuo4>p_1@Qk5`0Om"P4s2sH0K*N,%6Q=S2J,,q4?#!)3''Id60Om$q4s2sFAi2A.%6Q=S2_dK=4?#-.3''Id60Om$s4s2sH3B&l\%6Q=S2`!W?4?$_+3Bdm70Om$u4s2sH@Pou+%6Q=S2`3cA4?$_,1-Q.00Om%"4s2sH@q7J]%6Q=S2`EoC4?$e00g6%/0Om%$4s2sF1,CUJ%6Q=S2`X&E4?,/U1Hl710Om%M4s2sI2)[HY%6Q=S2e"rn4?,301d2@20Om%O4s2sI@5)7V%6Q=S2e5)p4?-e(1d2@20Om%Q4s2sI@l-)-%6Q=S2eG5r4?-n+Aj-Yd0Om''r4s2sJ0JG:H%6Q=S3&*T>4?5)LAj-Yd0Om''t4s2sJ1bh!S%6Q=S3&<`@4?5;Y2EhR40Om(!4s2sJ3&5#.%6Q=S3&NlB4?6h+0Koq.0Om(#4s2sJ2.S[1%6Q=S3&a#D4>eg&A3LGb0Om(%4s2sF11W7+%6Q=S3&s/F4>erL@m1>a0Om(N4s2sF3&!*O%6Q=S3+>&o4>gV&ANgPc0Om(P4s2sG0k!")%6Q=S3+P2q4>o#VANgPc0Om(R4s2sGA2.XZ%6Q=S3+b>s4?#3.1Hl710Om*s4s2sH@:_;[%6Q=S3AE]?4?,$,1d2@20Om*u4s2sI1b^aM%6Q=S3AWiA4?5)Q1Hl710Om+"4s2sJ1,q-T%6Q=S3AiuC4>gV[0Koq.0Om+$4s2sJA2#r+%6Q=S3B'',E4>eoNAj-Yd0Om+&4s2sFAiVe6%6Q=S3B98G4>g_[1Hl710Om+O4s2sGA3"-`%6Q=S3FY/p4?##S3Bdm70Om+Q4s2sH2`<HU%6Q=S3Fk;r4?#90Aj-Yd0Om+S4s2sH@V%A[%6Q=S3G(Gt4>pYZ1-Q.00OnNF4s2sH11arZ%6Q=S@50qg4?-bXA3LGb0OnNH4s2sG3&!-P%6Q=S@5C(i4>pV+0g6%/0OnNJ4s2sF0kNC/%6Q=S@5U4k4?$\.0g6%/0OnNL4s2sG3AWKU%6Q=S@5g@m4>gV*@6P,_0OnNN4s2sJ@qIV_%6Q=S@6$Lo4?,*-@Qk5`0OnO"4s2sF@Uh8Z%6Q=S@:DDC4?5,Q3Bdm70OnO$4s2sH0JR-&%6Q=S@:VPE4>f#U3''Id60OnO&4s2sF@l@p_%6Q=S@:h\G4>nm''2a.[50OnQG4s2sG2)[?V%6Q=S@PL%h4>p\/@m1>a0OnQI4s2sI@l7[Y%6Q=S@P^1j4?5)P0g6%/0OnQK4s2sJ3&*3Q%6Q=S@Pp=l4>erQ0g6%/0OnQM4s2sG2Ie[0%6Q=S@Q-In4?5/NA3LGb0OnQO4s2sF3A`]Z%6Q=S@Q?Up4?5*(1Hl7ZDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b@q&k1+?VM93&Nl/4>:8S@Qkns1hALS4q0V.@q&q3+?VM9ARRb34>:8SA3M+u3&N]V4q0V.@q''"5+?VVm0P*EW4>:8SAj.>"2_[*K4q0V.@q.2V+?VP<2dnlZ4>:8T0g6^B3AWL$4q0V.@q.8X+?VPB2DRH*4>:8T1HlpD3B:P*4q0V.@q.>Z+?VSo0Jks&4>:8T2*N-F2`3NQ4q0V.@q.D\+?VM;2)d].4>:8T2a/?H2E<ZL4q0V.@q.J^+?VVpA7e"74>:8T3BeQJ3AtG)4q0V.@q/q2+?VPl2.Sl[4>:8T@Qkns1hAXV4q0V.@q0"4+?VMk1LiTX4>:8TA3M+u2.eQs4q0V.@q0(6+?VVqAN;p`4>:8TAj.>"2)?pA4q0V.@q78W+?VVnA2-7W4>:8U0g6^B3&!<P4q0V.@q7>Y+?VVA2`X&24>:8U1HlpD2.^B34q0V.@q7D[+?VP>AMlX\4>:8U2*N-F1hAU%4q0V.@q7J]+?VM92DmZ-4>:8U2a/?H2*!WO4q0V.@q7P_+?VMk1M/f[4>:8U3BeQJ3B(M\4q0V.@q9"3+?VJlAn!q54>:8U@Qkns2*!X)4q0V.@q9(5+?VMn@q7b44>:8UA3M+u3+4dW4q0V.@q9.7+?VPoAMH@X4>:8UAj.>"2`Y>$4q0V.@q@>X+?VSC2DRH*4>:8V0g6^B2.C,U4q0V.@q@DZ+?VV?2_dK*4>:8V1HlpD2`!3u4q0V.@q@J\+?VS;@PL%U4>:8V2*N-F2.\^''4q0V.@q@P^+?VMnAi2a]4>:8V2a/?H2D[:$4q0V.@q@V`+?VP=3FP)\4>:8V3BeQJ2_eeu4q0V.@qB(4+?VSm3B0234>:8V@Qkns1hAL"4q0V.@qB.6+?VMmAn+"64>:8VA3M+u1hALQ4q0V.@qB48+?VM?A7Ie44>:8VAj.>"2)\ku4q0V.@qIDY+?VP9@6$L\4>:8W0g6^B2J-GT4q0V.@qIJ[+?VSn0P!?V4>:8W1HlpD3&"rT4q0V.@qIP]+?VV<1G_3(4>:8W2*N-F3&+lS4q0V.@qIV_+?VVq@PU+V4>:8W2a/?H3&ruX4q0V.@qI\a+?VVA@5L.W4>:8W3BeQJ2.U;U4q0V.@qK.5+?VP;3+4u[4>:8W@Qkns2DeiQ4q0V.@qK47+?VVD3&a#14>:8WA3M+u2E*QR4q0V.@qK:9+?VPlAMQFY4>:8WAj.>"2InUT4q0V.A2#]$+?VS>1H%E+4>:;"0g6^B2`NTM4q0V.A2#c&+?VMi1c@N,4>:;"1HlpD2eG!+4q0V.A2#i(+?VV=@:VP24>:;"2*N-F3B:MX4q0V.A2#o*+?VJmAhuU[4>:;"2a/?H2.^8R4q0V.A2#u,+?VP;A7Rk54>:;"3BeQJ2D[?K4q0V.A2%FU+?VP>2)d].4>:;"@Qkns2E*O+4q0V.A2%LW+?VS@@l$:X4>:;"A3M+u2_m4"4q0V.A2%RY+?VV;@q.\34>:;"Aj.>"3&"fM4q0V.A2,c%+?VVq1-%N-4>:;#0g6^B3AE@$4q0V.A2,i''+?VM80P!?V4>:;#1HlpD2)f,-4q0V.A2,o)+?VMi3ANc-4>:;#2*N-F2E3ZR4q0V.A2,u++?VPB2`!W,4>:;#2a/?H2_d3I4q0V.A2-&-+?VS<An4(74>:;#3BeQJ3+HDV4q0V.A2.LV+?VM@AhlOZ4>:;#@Qkns3+HMR4q0V.A2.RX+?VYB2IScY4>:;#A3M+u3A<0J4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=T0kENk4?,8YAj-Yd0OunM4s2sH3Ft$2%6Q=T1,(m74?#312a.[50Oupn4s2sI1bq''T%6Q=T1,;$94>^Y*Aj-Yd0Oupp4s2sF1,_!R%6Q=T1,M0;4>eoP@6P,_0Oupr4s2sG11OiY%6Q=T1,_<=4>o-.Aj-Yd0Oupt4s2sG@q/q2%6Q=T1,qH?4?#/WA3LGb0Ouq!4s2sH@Q?8/%6Q=T11<?h4?$b12*MI30OuqJ4s2sI1,CgP%6Q=T11NKj4?,2X1d2@20OuqL4s2sIAn>F8%6Q=T11`Wl4>o*.A3LGb0OuqN4s2sGAhl&(%6Q=T1GD!84?##L2EhR40Ouso4s2sHAMIXX%6Q=T1GV-:4?,-*@Qk5`0Ousq4s2sJ3Fad-%6Q=T1Gh9<4?6t]2EhR40Ouss4s2sF0kOr[%6Q=T1H%E>4?$_Y0g6%/0Ousu4s2sH3&`TV%6Q=T1H7Q@4?$_Y3''Id60Out"4s2sI0K;!T%6Q=T1LWHi4?$_+3''Id60OutK4s2sG@:_D^%6Q=T1LiTk4>g\.0g6%/0OutM4s2sI0K<Q+%6Q=T1M&`m4?#,T0g6%/0OutO4s2sH2)[-P%6Q=T1b_*94>eiO@Qk5`0P!!p4s2sJ1,^mO%6Q=T1bq6;4>pb1@m1>a0P!!r4s2sH2E,&.%6Q=T1c.B=4?5,V2a.[50P!!t4s2sJ@:`k2%6Q=T1c@N?4>^Y)0Koq.0P!"!4s2sHAiDD-%6Q=T1cRZA4>nrT@m1>a0P!"#4s2sH@Ph[\%6Q=T1grQj4?59-2*MI30P!"L4s2sJ@q@Ya%6Q=T1h/]l4>f#U@6P,_0P!"N4s2sF3&N][%6Q=T1hAin4?,611d2@20P!"P4s2sJ2I^/[%6Q=T2)%3:4>^Y+1d2@20P!$q4s2sF1,:[M%6Q=T2)7?<4>eoO@6P,_0P!$s4s2sF1LjrZ%6Q=T2)IK>4>ep*@Qk5`0P!$u4s2sFAM?#+%6Q=T2)[W@4>o#O@m1>a0P!%"4s2sG2*!BT%6Q=T2)mcB4>o,WAj-Yd0P!%$4s2sG@l%[[%6Q=T2.8Zk4>p\+ANgPc0P!%M4s2sH1,LsS%6Q=T2.Jfm4?#$(Aj-Yd0P!%O4s2sH1M()\%6Q=T2.\ro4?#,T1d2@20P!%Q4s2sHAMc,*%6Q=T2D@<;4?,)O@m1>a0P!''r4s2sI2.\d3%6Q=T2DRH=4?-hZ3Bdm70P!''t4s2sH@Uh5Y%6Q=T2DdT?4?5-+2EhR40P!(!4s2sH0fD$U%6Q=T2E!`A4?5AU1-Q.00P!(#4s2sJ3+Z\c%6Q=T2E3lC4>nuOA3LGb0P!(%4s2sG2E!QZ%6Q=T2IScl4?#,U@6P,_0P!(N4s2sH2J"^/%6Q=T2Ieon4?#610Koq.0P!(P4s2sI2)I*Q%6Q=T2J#&p4?,61ANgPc0P!(R4s2sF1GWB&%6Q=T2_[E<4>eoP0g6%/0P!*s4s2sF1bpsQ%6Q=T2_mQ>4>f,Y1Hl710P!*u4s2sFAN2V4%6Q=T2`*]@4>g_0@m1>a0P!+"4s2sG0Oce$%6Q=T2`<iB4>nrO3Bdm70P!+$4s2sG1,h3W%6Q=T2`NuD4>ns''@Qk5`0P!+&4s2sG2*!?S%6Q=T2dnlm4>pYZ1d2@20P!+O4s2sG@q0"4%6Q=T2e,#o4?#-,1-Q.00P!+Q4s2sH2IU/\%6Q=T2e>/q4?#5[0g6%/0P!+S4s2sH3Fk*5%6Q=T3&!N=4?$e\@Qk5`0P!-t4s2sHAiDY4%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:;*1-QgC3&"bu4q0V.A2lA/+?VVC@:DD04>:;*1d3$E3+68V4q0V.A2lG1+?VVn@U_M14>:;*2Ei6G3A<C(4q0V.A2lM3+?VYC2.\r\4>:;*3''JHI3B1PY4q0V.A2lS5+?VPj0Od3T4>:;*@6Per2e+X''4q0V.A2n$^+?VM83B9844>:;*@m2"t2.JFR4q0V.A2n*`+?VMn@:_V34>:;*ANh5!2E*TS4q0V.A2n0b+?VPkA2la^4>:;+0KpUA2`*<J4q0V.A2uA.+?VSA0KD<+4>:;+1-QgC2eG$\4q0V.A2uG0+?VYr1L`NW4>:;+1d3$E2E,,S4q0V.A2uM2+?VSk0fM9*4>:;+2Ei6G2)@$K4q0V.A2uS4+?VS?3+>&\4>:;+3''JHI3FQK04q0V.A2uY6+?VMn2E!`.4>:;+@6Per3&*F(4q0V.A3"*_+?VV>AhcIY4>:;+@m2"t3&!?P4q0V.A3"0a+?VMn1LiTX4>:;+ANh5!2.g>U4q0V.A3"6c+?VS?2DRH*4>:;S0KpUA2e"U%4q0V.A772V+?VY<1LiTX4>:;S1-QgC2E3TR4q0V.A778X+?VMAAR[h44>:;S1d3$E2.8LS4q0V.A77>Z+?VSn0ebd#4>:;S2Ei6G2`<U+4q0V.A77D\+?VVm11NKW4>:;S3''JHI1hL>W4q0V.A77J^+?VMn2IScY4>:;S@6Per2IS=#4q0V.A78q2+?VPl1H.K,4>:;S@m2"t2J+Wu4q0V.A79"4+?VS>AMQFY4>:;SANh5!2`WcU4q0V.A79(6+?VVC2E3l04>:;T0KpUA3+4[%4q0V.A7@8W+?VVn2`X&24>:;T1-QgC2.^<14q0V.A7@>Y+?VP<@qIn64>:;T1d3$E2`5)&4q0V.A7@D[+?VSCA26=X4>:;T2Ei6G3&5#''4q0V.A7@J]+?VY?1,qH,4>:;T3''JHI3AP2%4q0V.A7@P_+?VV?3Fb5^4>:;T@6Per3&Y>Y4q0V.A7B"3+?VYo11WQX4>:;T@m2"t2)Jet4q0V.A7B(5+?VMn2Ieo[4>:;TANh5!2DmI(4q0V.A7B.7+?VPm2.JfZ4>:;U0KpUA2_ZsD4q0V.A7I>X+?VVn@5g@Z4>:;U1-QgC3+HJT4q0V.A7IDZ+?VYD1L`NW4>:;U1d3$E2Dm=''4q0V.A7IJ\+?VS>Ai;g^4>:;U2Ei6G1hA@O4q0V.A7IP^+?VJlA2la^4>:;U3''JHI2)f)#4q0V.A7IV`+?VMA11EEV4>:;U@6Per2.8C$4q0V.A7K(4+?VMj@q.\34>:;U@m2"t2)/N!4q0V.A7K.6+?VMm0Jbm%4>:;UANh5!2.\dX4q0V.A7K48+?VP90fD3)4>:;V0KpUA2DR3L4q0V.A7RDY+?VP>2`Eo04>:;V1-QgC2Dno%4q0V.A7RJ[+?VP?2J#&]4>:;V1d3$E2In^W4q0V.A7RP]+?VS<1H%E+4>:;V2Ei6G2e"O#4q0V.A7RV_+?VV<2)%3''4>:;V3''JHI3&*F%4q0V.A7R\a+?VV=3B9844>:;V@6Per3+=aT4q0V.A7T.5+?VVn@5''kS4>:;V@m2"t3+HMX4q0V.A7T47+?VVo2`*]-4>:;VANh5!3ArU%4q0V.A7T:9+?VYB1c.B*4>:;W0KpUA1hL0-4q0V.A7[JZ+?VP=@:DD04>:;W1-QgC2I\R&4q0V.A7[P\+?VV=0kENX4>:;W1d3$E3&ENJ4q0V.A7[V^+?VV@2IScYASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0P"`Q4s2sJ0P*4-%6Q=TAN)dq4>gV&0g6%/0P"`S4s2sG3AiTV%6Q=TAN;ps4?5B03''Id60P"a''4s2sI1cJi,%6Q=TAR[hG4?,2U2a.[50P"a)4s2sEAh[g\%6Q=TARmtI4>elPAj-Yd0P"a+4s2sFAmm\`%6Q=TAS++K4>g\,2*MI30P"cL4s2sG2_\c+%6Q=TAhcIl4?#8[Aj-Yd0P"cN4s2sI0fM*V%6Q=TAhuUn4?,>T2a.[50P"cP4s2sI3B/o\%6Q=TAi2ap4>p_^2*MI30P"cR4s2sFAhc5.%6Q=TAiDmr4>nrP2*MI30P"cT4s2sG@q%D]%6Q=TAiW$t4>^VZAj-Yd0P"d(4s2sH1,_-V%6Q=TAn!qH4?6k21-Q.00P"d*4s2sF1,(UM%6Q=TAn4(J4>erO@Qk5`0P"d,4s2sF2E*HV%6Q=TAnF4L4>f*-1Hl710P)pl4s2sG0jun&%6Q=U0JPa64>nrQANgPc0P)pn4s2sH0em*#%6Q=U0Jbm84>f,WANgPc0P)pp4s2sH@lQJ4%6Q=U0Ju$:4?$b\ANgPc0P)pr4s2sHA2.OW%6Q=U0K20<4?5<30Koq.0P)pt4s2sG2)mNY%6Q=U0KD<>4?,#PANgPc0P)qH4s2sEAMH2/%6Q=U0Od3g4>^Y/2*MI30P)qJ4s2sF0fLsR%6Q=U0P!?i4>f)T0Koq.0P)qL4s2sFAMu>.%6Q=U0P3Kk4>g\/1Hl710P)sm4s2sFAh[XW%6Q=U0ekj74>o-.1d2@20P)so4s2sEAMQ/-%6Q=U0f)!94?,2SA3LGb0P)sq4s2sJ2)mT[%6Q=U0f;-;4?5;W@Qk5`0P)ss4s2sH@lH2-%6Q=U0fM9=4?5AT0g6%/0P)su4s2sF0P4cX%6Q=U0f_E?4>f*.0g6%/0P)tI4s2sH2DmBV%6Q=U0k*<h4?#6.2a.[50P)tK4s2sF1,:^N%6Q=U0k<Hj4?#3-2*MI30P)tM4s2sI2)-gL%6Q=U0kNTl4?$_/2EhR40P*!n4s2sF0JmB*%6Q=U1,1s84>f,Q3Bdm70P*!p4s2sH1,LpR%6Q=U1,D*:4?$_Z2a.[50P*!r4s2sHA7[_a%6Q=U1,V6<4?-q^@6P,_0P*!t4s2sIAn3_^%6Q=U1,hB>4?5)PA3LGb0P*"!4s2sEAn#@9%6Q=U1-%N@4>em(3Bdm70P*"J4s2sF@59i,%6Q=U11EEi4>g_)0g6%/0P*"L4s2sJ2dp5\%6Q=U11WQk4>^Y\A3LGb0P*"N4s2sI1,1^O%6Q=U11i]m4?50.@6P,_0P*$o4s2sF2_[$O%6Q=U1GM''94>nuQ2*MI30P*$q4s2sG@Q$51%6Q=U1G_3;4?#,Q@Qk5`0P*$s4s2sI3+QM_%6Q=U1Gq?=4?-q-1d2@20P*$u4s2sH@5K`''%6Q=U1H.K?4>em)Aj-Yd0P*%"4s2sF3&rcY%6Q=U1H@WA4>noO2*MI30P*%K4s2sG1,*-#%6Q=U1L`Nj4>o*+ANgPc0P*%M4s2sG@Uiq4%6Q=U1LrZl4?$b+Aj-Yd0P*%O4s2sI1M&R1%6Q=U1M/fn4>efJ1Hl710P*''p4s2sEAnF"d%6Q=U1bh0:4>eoK2*MI30P*''r4s2sF1c.*S%6Q=U1c%<<4>f)S0g6%/0P*''t4s2sF3A``[%6Q=U1c7H>4>gS.A3LGb0P*(!4s2sF@qIDY%6Q=U1cIT@4>gV[Aj-Yd0P*(#4s2sFA26//%6Q=U1c[`B4>g\12EhR]DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,bAMdgZ+?VP;@PL%U4>:>''@Qkns2D[6M4q0V.AMdm\+?VP>1M&`Z4>:>''A3M+u2Dnr(4q0V.AMds^+?VP@0Od3T4>:>''Aj.>"2Ig8T4q0V.AMl/*+?VPlAMH@X4>:>(0g6^B2_\i(4q0V.AMl5,+?VSB1GV-''4>:>(1HlpD2e=aR4q0V.AMl;.+?VV;A7[q64>:>(2*N-F3&4r!4q0V.AMlA0+?VV?0Om9U4>:>(2a/?H3&G2V4q0V.AMlG2+?VVB0JYg$4>:>(3BeQJ3&r]K4q0V.AMmm[+?VVl11<?U4>:>(@Qkns3+FdR4q0V.AMms]+?VY<@5^:Y4>:>(A3M+u3AP,#4q0V.AMn$_+?VYDAn4(74>:>(Aj.>"3FcYW4q0V.AMu5++?VYp2Ieo[4>:>)0g6^B1hALU4q0V.AMu;-+?VJl@50qT4>:>)1HlpD2)%"#4q0V.AMuA/+?VM:2)[W-4>:>)2*N-F2)d@#4q0V.AMuG1+?VMA@5pF[4>:>)2a/?H2.\RS4q0V.AN!s\+?VP;1M/f[4>:>)@Qkns2E##$4q0V.AN"$^+?VP@0k*<U4>:>)A3M+u2E,/#4q0V.AN"*`+?VPAA26=X4>:>)Aj.>"2).*H4q0V.AN);,+?VSn1,1s%4>:>*0g6^B3&"cL4q0V.AN)A.+?VV<@5pF[4>:>*1HlpD3+=Qq4q0V.AN)G0+?VVn3+G,]4>:>*2*N-F3+HE04q0V.AN)M2+?VY>2e>/^4>:>*2a/?H3ArZK4q0V.AN)S4+?VM<1,(m$4>:>*3BeQJ3B/d(4q0V.AN+$]+?VM;0fM9*4>:>*@Qkns2)&Pu4q0V.AN+*_+?VM;2.JfZ4>:>*A3M+u2)o#(4q0V.AN+0a+?VP=@PU+V4>:>*Aj.>"2E*EK4q0V.AN2A-+?VS<2E*f/4>:>+0g6^B2`EWQ4q0V.AN2G/+?VSk1c@N,4>:>+1HlpD3AG)''4q0V.AN2M1+?VM:@l$:X4>:>+2*N-F2Ig/M4q0V.AN2S3+?VPk3&Wr04>:>+2a/?H2)m9D4q0V.AN2Y5+?VMm1h/]Y4>:>+3BeQJ2*!NN4q0V.AN4*^+?VP@11NKW4>:>+@Qkns2eHZ24q0V.AN40`+?VM9AMH@X4>:>+A3M+u2`>/(4q0V.AN46b+?VP=2E<r14>:>+Aj.>"2`PA.4q0V.AN;G.+?VYn2)IK+4>:>,0g6^B3FuZ/4q0V.AN;M0+?VM?@q%V24>:>,1HlpD2*#,+4q0V.AN;S2+?VP?1,hB+4>:>,2*N-F2E*X)4q0V.AN;Y4+?VPk@q@h54>:>,2a/?H2)Jl)4q0V.AN;_6+?VPBA2ug_4>:>,3BeQJ2.\X&4q0V.AN=0_+?VV<3Fb5^4>:>,@Qkns2E*WR4q0V.AN=6a+?VYn@:;>/4>:>,A3M+u2E,5Z4q0V.AN=<c+?VYo2)7?)4>:>,Aj.>"2E3R)4q0V.ARR8V+?VJl@5^:Y4>:>T0g6^B1hL;T4q0V.ARR>X+?VM;@lQX]4>:>T1HlpD2DS`%4q0V.ARRDZ+?VP@11EEV4>:>T2*N-F2Ig0)4q0V.ARRJ\+?VVq@l-@Y4>:>T2a/?H1hL0,4q0V.ARRP^+?VSo2Inu\4>:>T3BeQJ3FuZ34q0V.ART"2+?VJl0K20)4>:>T@Qkns2DI*F4q0V.ART(4+?VPn3&!N*4>:>TA3M+u2J+^R4q0V.ART.6+?VV@0f)!&4>:>TAj.>"2)I6J4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=U@PBtg4>o,R@6P,_0P+]J4s2sJ@Pfr+%6Q=U@PU+i4>gY]1Hl710P+]L4s2sH@Q?;0%6Q=U@Pg7k4>gVW@m1>a0P+]N4s2sF@Uh;[%6Q=U@Q$Cm4?,8S@m1>a0P+]P4s2sGAMdgZ%6Q=U@Q6Oo4?,0.0g6%/0P+]R4s2sH@50T&%6Q=U@UVGC4?,&L3''Id60P+^&4s2sF3B9)`%6Q=U@UhSE4?$b0A3LGb0P+^(4s2sG@kf]%%6Q=U@V%_G4?#2S0Koq.0P+^*4s2sF11WC/%6Q=U@k^(h4>f,S1-Q.00P+`K4s2sH0etII%6Q=U@kp4j4?##QAj-Yd0P+`M4s2sH2e6A]%6Q=U@l-@l4?5>U2a.[50P+`O4s2sJA2Z/+%6Q=U@l?Ln4>o2R@Qk5`0P+`Q4s2sF@5hd^%6Q=U@lQXp4>gP%3''Id60P+`S4s2sF0juq''%6Q=U@pqPD4>erLA3LGb0P+a''4s2sF1cJr/%6Q=U@q.\F4>o)OANgPc0P+a)4s2sH2IpD`%6Q=U@q@hH4?-qb2a.[50P+a+4s2sJ1-%<X%6Q=UA2$1i4?6n`1d2@20P+cL4s2sF3FuV_%6Q=UA26=k4?##QA3LGb0P+cN4s2sGARdS]%6Q=UA2HIm4>eiMA3LGb0P+cP4s2sG3+Fs4%6Q=UA2ZUo4?$e[Aj-Yd0P+cR4s2sHA7]77%6Q=UA2laq4?5>Y1-Q.00P+cT4s2sJAR](3%6Q=UA77YE4>o#T3''Id60P+d(4s2sG@59Q$%6Q=UA7IeG4?,,N1-Q.00P+d*4s2sF3B/iZ%6Q=UA7[qI4>gS*Aj-Yd0P+d,4s2sG@Urq3%6Q=UAM?:j4?#&N@Qk5`0P+fM4s2sH2J+^.%6Q=UAMQFl4?$e[1-Q.00P+fO4s2sI0JPLM%6Q=UAMcRn4?,/X3Bdm70P+fQ4s2sF0f(RK%6Q=UAMu^p4>o,R3''Id60P+fS4s2sJARmeb%6Q=UAN2jr4?#00ANgPc0P+fU4s2sG2`<ET%6Q=UARRbF4>em+Aj-Yd0P+g)4s2sJ3A<<S%6Q=UARdnH4>gV(1d2@20P+g+4s2sG1,EB''%6Q=UAS"%J4?$b/ANgPc0P+g-4s2sI@q%,U%6Q=UAhZCk4>euQAj-Yd0P+iN4s2sG0Ocq(%6Q=UAhlOm4?$e)@Qk5`0P+iP4s2sJ2)m9R%6Q=UAi)[o4>eoK0g6%/0P+iR4s2sEAMn''`%6Q=UAi;gq4>ej&2EhR40P+iT4s2sF3AG#-%6Q=UAiMss4?##O@6P,_0P+iV4s2sI0JbUN%6Q=UAmmkG4?5-+ANgPc0P+j*4s2sFAhl5-%6Q=UAn+"I4?#311-Q.00P+j,4s2sF1H73T%6Q=UAn=.K4>g_03Bdm70P+j.4s2sHA2#i(%6Q=V0JG[54?,3,@m1>a0P3!n4s2sI@5B]''%6Q=V0JYg74?-n3A3LGb0P3!p4s2sJ2`3KW%6Q=V0Jks94>o-11Hl710P3!r4s2sI2.:&[%6Q=V0K)*;4?55U1Hl710P3!t4s2sG0ebUO%6Q=V0K;6=4>noJ3''Id60P3"!4s2sG@q%G^%6Q=V0O[-f4?#/U1-Q.00P3"J4s2sI@:`t5%6Q=V0Om9h4?-q/3''Id60P3"L4s2sF2)8c-%6Q=V0P*Ej4>^Y-0g6%/0P3"N4s2sF0f!0$%6Q=V0ebd64>em(2a.[50P3$o4s2sF1LjlX%6Q=V0etp84>gSV2*MI30P3$q4s2sFAN+-`%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:A%1d3$E2DAPn4q0V.Ahc/,+?VP:3&3Z,4>:A%2Ei6G2D\l%4q0V.Ahc5.+?VP@0KD<+4>:A%3''JHI2E,/T4q0V.Ahc;0+?VPn2E*f/4>:A%@6Per2IndW4q0V.Ahdg[+?VS?1GM''&4>:A%ANh5!2`W`L4q0V.Ahdm]+?VVCA2QO[4>:A&0KpUA3+4g,4q0V.Ahl))+?VY<1grQW4>:A&1-QgC3A<HJ4q0V.Ahl/++?VY<Ai2a]4>:A&1d3$E3AtA(4q0V.Ahl5-+?VVB3+P2^4>:A&2Ei6G2*!BK4q0V.Ahl;/+?VJl3&j)24>:A&3''JHI1hJU*4q0V.AhlA1+?VJl0P*EW4>:A&@6Per3+4d,4q0V.AhmgZ+?VVq1M/f[4>:A&@m2"t3B/`I4q0V.Ahmm\+?VM8@:VP24>:A&ANh5!2.\^V4q0V.Ahms^+?VMA3As&14>:A''0KpUA2.C#T4q0V.Ahu/*+?VMm@Q6O\4>:A''1-QgC2D\lP4q0V.Ahu5,+?VP<Ammk44>:A''1d3$E2Denu4q0V.Ahu;.+?VP?A7Ie44>:A''2Ei6G2E<U&4q0V.AhuA0+?VPBA2la^4>:A''3''JHI2InLN4q0V.AhuG2+?VPn@Q$CZ4>:A''@6Per2_d<L4q0V.Ai!m[+?VS?1,qH,4>:A''@m2"t2dp-,4q0V.Ai!s]+?VSp3+4u[4>:A''ANh5!3&!$?4q0V.Ai"$_+?VV?1c[`/4>:A(0KpUA3&G,*4q0V.Ai)5++?VVD3&*T+4>:A(1-QgC3+=Wt4q0V.Ai);-+?VVp0O[-S4>:A(1d3$E3A<?K4q0V.Ai)A/+?VYB2e5)]4>:A(2Ei6G3B8d%4q0V.Ai)G1+?VP:2e>/^4>:A(3''JHI2DR9I4q0V.Ai)M3+?VPk1GV-''4>:A(@6Per2Ie^&4q0V.Ai*s\+?VPm2`*]-4>:A(@m2"t2eHQ04q0V.Ai+$^+?VSpAn+"64>:A(ANh5!2Ip;O4q0V.Ai+*`+?VSp3&Nl/4>:A)0KpUA3&b;T4q0V.Ai2;,+?VVCAiMs`4>:A)1-QgC2E*NO4q0V.Ai2A.+?VV>@PL%U4>:A)1d3$E3B/g)4q0V.Ai2G0+?VYBAiDm_4>:A)2Ei6G2InOO4q0V.Ai2M2+?VSn2DIB)4>:A)3''JHI3&EF%4q0V.Ai2S4+?VY=2IScY4>:A)@6Per1hAU#4q0V.Ai4$]+?VM;2`3c.4>:A)@m2"t2.SQu4q0V.Ai4*_+?VPk0Jks&4>:A)ANh5!2J-N04q0V.Ai40a+?VV@@q7b44>:A*0KpUA3&WO&4q0V.Ai;A-+?VVD@5g@Z4>:A*1-QgC2)6pI4q0V.Ai;G/+?VM<0P3KX4>:A*1d3$E2.JO%4q0V.Ai;M1+?VP@1hAi[4>:A*2Ei6G2E5,)4q0V.Ai;S3+?VS>0K)*(4>:A*3''JHI2`*KM4q0V.Ai;Y5+?VS?AMQFY4>:A*@6Per3&kD[4q0V.Ai=*^+?VVCAMH@X4>:A*@m2"t3AG#R4q0V.Ai=0`+?VYBAMQFY4>:A*ANh5!3ArfU4q0V.Ai=6b+?VMn3+>&\4>:A+0KpUA2`!EP4q0V.AiDG.+?VSk@q%V24>:A+1-QgC3&EI''4q0V.AiDM0+?VP<@5''kS4>:A+1d3$E2`3KN4q0V.AiDS2+?VM:3&s/34>:A+2Ei6G2InX!4q0V.AiDY4+?VPn3Fb5^4>:A+3''JHI2`*3K4q0V.AiD_6+?VS?2*!i0ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0P37P4s2sH3&Y50%6Q=V2e"rn4?$b11-Q.00P37R4s2sJ2E3TY%6Q=V2e5)p4?$\Z@m1>a0P37T4s2sJAiO<b%6Q=V2eG5r4>^YZ2EhR40P39u4s2sG0fET,%6Q=V3&*T>4>o'',2*MI30P3:"4s2sI2Dnu.%6Q=V3&<`@4>^V/2EhR40P3:$4s2sEART.6%6Q=V3&NlB4>eg''@6P,_0P3:&4s2sEAMPu(%6Q=V3&a#D4>ej''@m1>a0P3:(4s2sF@V''+7%6Q=V3&s/F4>o&W3Bdm70P3:Q4s2sG3&iWV%6Q=V3+>&o4>p_Z@m1>a0P3:S4s2sH1GNK*%6Q=V3+P2q4?#/T1-Q.00P3:U4s2sH2dp5\%6Q=V3+b>s4?$\''@m1>a0P3=!4s2sH@q@S_%6Q=V3AE]?4?,)SAj-Yd0P3=#4s2sI@:V,W%6Q=V3AWiA4?5)S@m1>a0P3=%4s2sJ0k4fZ%6Q=V3AiuC4?5;Y2*MI30P3=''4s2sJ3&*BV%6Q=V3B'',E4>elS@Qk5`0P3=)4s2sHA7RDY%6Q=V3B98G4>efJ@Qk5`0P3=R4s2sF1H@EY%6Q=V3FY/p4>o,Y2a.[50P3=T4s2sGA7K(4%6Q=V3Fk;r4?#!*0Koq.0P3=V4s2sH1c$pO%6Q=V3G(Gt4?,'',3''Id60P4`I4s2sIAhmdY%6Q=V@50qg4?5<.1Hl710P4`K4s2sJ@l62/%6Q=V@5C(i4?6t5Aj-Yd0P4`M4s2sH1c@$O%6Q=V@5U4k4>f)T0g6%/0P4`O4s2sGA2uY6%6Q=V@5g@m4?$e+Aj-Yd0P4`Q4s2sJ3&P82%6Q=V@6$Lo4>^V\1d2@20P4a%4s2sEAhu>/%6Q=V@:DDC4>^Y0@Qk5`0P4a''4s2sF0k*(*%6Q=V@:VPE4>em''0g6%/0P4a)4s2sFA7At2%6Q=V@:h\G4>nlJ@m1>a0P4cJ4s2sH1L`+''%6Q=V@PL%h4?#8V@m1>a0P4cL4s2sI11W1)%6Q=V@P^1j4?5/Q1d2@20P4cN4s2sJ2I\U/%6Q=V@Pp=l4?5<32EhR40P4cP4s2sJ2_\Z(%6Q=V@Q-In4?6t52a.[50P4cR4s2sJAi;D.%6Q=V@Q?Up4>o*+2EhR40P4d&4s2sG@Q-,-%6Q=V@U_MD4>elK2a.[50P4d(4s2sF11;t&%6Q=V@UqYF4?"s(3''Id60P4d*4s2sI3+F^-%6Q=V@V.eH4>g\[3Bdm70P4fK4s2sG0Jm6&%6Q=V@kg.i4>noS0Koq.0P4fM4s2sGAhl/+%6Q=V@l$:k4?"uO3Bdm70P4fO4s2sH@l%[[%6Q=V@l6Fm4?$e_1d2@20P4fQ4s2sI0K*N,%6Q=V@lHRo4?,0/ANgPc0P4fS4s2sJ0JYFJ%6Q=V@lZ^q4?52Q@m1>a0P4g''4s2sF1c-sO%6Q=V@q%VE4?6k/Aj-Yd0P4g)4s2sG@:V/X%6Q=V@q7bG4?"rR3Bdm70P4g+4s2sI@q.8X%6Q=V@qInI4?-k_Aj-Yd0P4iL4s2sJ2`!3Q%6Q=VA2-7j4>em''1d2@20P4iN4s2sF@5K]&%6Q=VA2?Cl4>g\[@6P,_0P4iP4s2sFAhZ&*%6Q=VA2QOn4>o,Q2a.[50P4iR4s2sG3B(G3%6Q=VA2c[p4>o2[1d2@20P4iT4s2sGA2[j[%6Q=VA2ugr4>pe*Aj-Yd0P4j(4s2sH1,^mO%6Q=VA7@_F4?#$-@m1>a0P4j*4s2sH@V''(6%6Q=VA7RkH4?,#K0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,bAn5I:+?VV;2e>/^4>:AXAj.>"3&`[''4q0V.An<Y[+?VY<@q@h54>:AY0g6^B2).""4q0V.An<_]+?VYq3AWi.4>:AY1HlpD2`WiS4q0V.An<e_+?VV;3+>&\4>:AY2*N-F3AWHH4q0V.An<ka+?VVlA2ZU\4>:AY2a/?H2)$dr4q0V.An<qc+?VM<3+G,]4>:AY3BeQJ3+4a#4q0V.An>C7+?VPk2IScY4>:AY@Qkns3+HGT4q0V.An>I9+?VV<0K20)4>:AYA3M+u2DAYr4q0V.An>O;+?VP@@5''kS4>:AYAj.>"3Fl_W4q0V.AnE_\+?VJl3B9844>:AZ0g6^B1hA[,4q0V.AnEe^+?VYo0ebd#4>:AZ1HlpD3+4^S4q0V.AnEk`+?VV@@kg.V4>:AZ2*N-F3&NTR4q0V.AnEqb+?VPB0JG["4>:AZ2a/?H2J"gY4q0V.AnF"d+?VSB3B'',24>:AZ3BeQJ3&*9J4q0V.AnGI8+?VMn0Om9U4>:AZ@Qkns1hABq4q0V.AnGO:+?VJl0f;-(4>:AZA3M+u1hAFN4q0V.AnGU<+?VJl1GM''&4>:AZAj.>"1hAI$4q0V/0JG1E+?VJl1LiTX4>AND0g6^B1hAIT4q0V/0JG7G+?VJl1bq6(4>AND1HlpD1hAO&4q0V/0JG=I+?VJl2)mc/4>AND2*N-F1hAX%4q0V/0JGCK+?VJl3&Nl/4>AND2a/?H3+FjU4q0V/0JGIM+?VJl3+4u[4>AND3BeQJ3&33D4q0V/0JHp!+?VMn0P!?V4>AND@Qkns1hAXX4q0V/0JI*&+?VJl@5:"U4>ANE0KpUA1hC,M4q0V/0JP:G+?VJl@P^1W4>ANE1-QgC1hC,S4q0V/0JP@I+?VJl@q@h54>ANE1d3$E1hC0-4q0V/0JPFK+?VJl@l-@Y4>ANE2Ei6G1hC/T4q0V/0JPLM+?VJl@kp4W4>ANE3''JHI1hC2V4q0V/0JPRO+?VJlA7[q64>ANE@6Per1hC6/4q0V/0JR$#+?VJlA7e"74>ANE@m2"t1hC8X4q0V/0JR*%+?VJm0KD<+4>ANEANh5!1hJUR4q0V/0JR0''+?VJm1GD!%4>ANF0KpUA1hJUS4q0V/0JY@H+?VJm2.Sl[4>ANF1-QgC1hJU(4q0V/0JYFJ+?VJm1cIT-4>ANF1d3$E1hJ[)4q0V/0JYLL+?VJm3&j)24>ANF2Ei6G1hJ^Z4q0V/0JYRN+?VJm3B0234>ANF3''JHI1hJ[U4q0V/0JYXP+?VJm2E<r14>ANF@6Per1hJ[#4q0V/0J[*$+?VJm3AE],4>ANF@m2"t1hJXX4q0V/0J[0&+?VJm3&Wr04>ANFANh5!1hJa+4q0V/0J[6(+?VM90fV?+4>ANG0KpUA1hL8T4q0V/0JbFI+?VJmA7e"74>ANG1-QgC1hL6/4q0V/0JbLK+?VJmA2la^4>ANG1d3$E1hL9-4q0V/0JbRM+?VJmA2-7W4>ANG2Ei6G1hL9,4q0V/0JbXO+?VJmA2$1V4>ANG@6Per2)$an4q0V/0Jd0%+?VM81,qH,4>ANG@m2"t2)$aA4q0V/0Jd6''+?VM811<?U4>ANGANh5!2)$dC4q0V/0Jd<)+?VM80Ju$''4>ANH0KpUA1hJIP4q0V/0JkLJ+?VJmAi;g^4>ANH1-QgC2)$d?4q0V/0JkRL+?VM81-%N-4>ANH1d3$E2)$dq4q0V/0JkXN+?VJmAn=.84>ANH2Ei6G1hL<24q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@!1cIT@4>efI0g6%/0ebFD4s2sF0JGCK%6Q@!1c[`B4>efL1Hl710ebFm4s2sF0Jk^P%6Q@!1h&Wk4>o,P1Hl710ebFo4s2sF0Jt^O%6Q@!1h8cm4>efM0Koq.0ebFq4s2sF0JkaQ%6Q@!1hJoo4>efM@6P,_0ebI=4s2sF0JtaP%6Q@!2).9;4>efN@m1>a0ebI?4s2sF0K1sT%6Q@!2)@E=4>efP0Koq.0ebIA4s2sF0KEQ*%6Q@!2)RQ?4>efP2*MI30ebIC4s2sF0Ock&%6Q@!2)d]A4>eg%1-Q.00ebIn4s2sF0Och%%6Q@!2.A`l4>eg&1-Q.00ebIp4s2sF0P!(*%6Q@!2.Sln4>eg''ANgPc0ebIr4s2sF0P*+*%6Q@!2.f#p4>eg(A3LGb0ebL>4s2sF0P*%(%6Q@!2DIB<4>eg(ANgPc0ebL@4s2sF0P3=/%6Q@!2D[N>4>eg)2*MI30ebLB4s2sF0ebUO%6Q@!2E*fB4>eiJ2EhR40ebLF4s2sF0ekOL%6Q@!2E<rD4>eiJ1d2@20ebLo4s2sF0em*#%6Q@!2I\im4>eiK0g6%/0ebLq4s2sF0f*6%%6Q@!2Inuo4>eiL2a.[50ebLs4s2sF0f*<''%6Q@!2J,,q4>eiL@Qk5`0ebOA4s2sF0f:^M%6Q@!2`!W?4>eiM@m1>a0ebOC4s2sF0f:dO%6Q@!2`3cA4>eiO1-Q.00ebOE4s2sH@:hJ_%6Q@!2`X&E4>eiOANgPc0ebOp4s2sF0fUjN%6Q@!2e"rn4>eiQ1-Q.00ebOr4s2sF2Ind2%6Q@!2e5)p4>eiQ@m1>a0ebOt4s2sF0fV0W%6Q@!2eG5r4>eiQAj-Yd0ebR@4s2sF0f^sP%6Q@!3&*T>4>eiR1Hl710ebRD4s2sF0jun&%6Q@!3&NlB4>ej%2EhR40ebRF4s2sF0juh$%6Q@!3+4un4>ej&1Hl710ebRt4s2sF0k)h#%6Q@!3+Y8r4>ej&2*MI30ebS!4s2sF0k+ZW%6Q@!3A<W>4>ej''2*MI30ebUB4s2sF0k34-%6Q@!3ANc@4>ej(@Qk5`0ebUD4s2sF0kE%&%6Q@!3A`oB4?,5V2*MI30ebUF4s2sF0kE@/%6Q@!3As&D4>ej)A3LGb0ebUH4s2sF0kN+''%6Q@!3B02F4>ej*2*MI30ebUJ4s2sF0kOu\%6Q@!3FP)o4>elJ1d2@20ebUs4s2sF1,*0$%6Q@!3Fb5q4>elK1d2@20ebUu4s2sF1,*9''%6Q@!3FtAs4>elL2a.[50ebV"4s2sF1,<9%%6Q@!@5''kf4>elLANgPc0ed#j4s2sF1,C^M%6Q@!@5:"h4>elM3Bdm70ed#l4s2sF1,NT,%6Q@!@5L.j4>elN1d2@20ed#p4s2sF1,WW,%6Q@!@5pFn4>elO1d2@20ed#r4s2sF1,`Q)%6Q@!@:;>B4>elQ1d2@20ed$F4s2sF1,_-V%6Q@!@:MJD4>elQ1Hl710ed$H4s2sF1,if/%6Q@!@:_VF4>elQA3LGb0ed$J4s2sF1,rf.%6Q@!@PBtg4>elS1d2@20ed&k4s2sF1-%*R%6Q@!@PU+i4>elQ0g6%/0ed&m4s2sF1,q6W%6Q@!@Pg7k4>elS0g6%/0ed&o4s2sIAmmY_%6Q@!@Q$Cm4?-q]2a.[50ed&s4s2sF11F`W%6Q@!@UVGC4>em''2*MI30ed''G4s2sF11N%&%6Q@!@UhSE4>em(A3LGb0ed''I4s2sF11W=-%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AO!ANh5!2)8]R4q0V/0OeWX+?VM:AMZLZ4>AO"0KpUA2)8`$4q0V/0Olh$+?VYDARmt64>AO"1-QgC2)8_s4q0V/0Oln&+?VM:AhuU[4>AO"1d3$E2)8c$4q0V/0Om%*+?VM;0K)*(4>AO"3''JHI2)?pG4q0V/0Om+,+?VS?1H7Q-4>AO"@6Per2)?ps4q0V/0OnQU+?VM;0ebd#4>AO"@m2"t2)?pu4q0V/0OnWW+?VM;0f;-(4>AO"ANh5!2)?sq4q0V/0On]Y+?VM;1,D*''4>AO#0KpUA2)@""4q0V/0Oun%+?VM;1GM''&4>AO#1-QgC2)@$E4q0V/0Out''+?VM;1H7Q-4>AO#1d3$E2)@''C4q0V/0P!%)+?VM;1c@N,4>AO#2Ei6G2)@''H4q0V/0P!+++?VJl0fM9*4>AO#3''JHI2)@''L4q0V/0P!1-+?VM;1h8cZ4>AO#@6Per2)/W"4q0V/0P"WV+?VM;2.\r\4>AO#@m2"t2)@-N4q0V/0P"]X+?VM;2J#&]4>AO#ANh5!2*!BN4q0V/0P"cZ+?VM;2e"r[4>AO$0KpUA2)@0M4q0V/0P)t&+?VM;3&3Z,4>AO$1-QgC2)@6N4q0V/0P*%(+?VM;@5''kS4>AO$1d3$E2)AZ!4q0V/0P*+*+?VM;@5U4X4>AO$2Ei6G2)AZP4q0V/0P*1,+?VM;@PBtT4>AO$3''JHI2)A]"4q0V/0P*7.+?VM;@l$:X4>AO$@6Per2e+Qt4q0V/0P+]W+?VYBA2ug_4>AO$@m2"t2)AcT4q0V/0P+cY+?VP?An+"64>AO$ANh5!2_elT4q0V/0P+i[+?VM;AS"%74>AO%0KpUA2)Af''4q0V/0P3%''+?VM;ARmt64>AO%1-QgC2)AiQ4q0V/0P3+)+?VM<0JPa#4>AO%1d3$E2)I+"4q0V/0P31++?VM<1b_*&4>AO%3''JHI2)I+!4q0V/0P3=/+?VM<11`WY4>AO%@6Per2)I*I4q0V/0P4cX+?VM<1-%N-4>AO%@m2"t2)I$u4q0V/0P4iZ+?VM<1hAi[4>AO%ANh5!2)I:)4q0V/0P4o\+?VM<2`3c.4>AQE0KpUA2)I:(4q0V/0eb=G+?VM<2.f#]4>AQE1-QgC2)I6H4q0V/0ebCI+?VM<2`Eo04>AQE1d3$E2)I6G4q0V/0ebIK+?VM<3ANc-4>AQE2Ei6G2)I7$4q0V/0ebOM+?VM<3&!N*4>AQE3''JHI2)I6M4q0V/0ebUO+?VM<3&Ef.4>AQE@6Per2)I<I4q0V/0ed''#+?VM<3&Wr04>AQE@m2"t2)Jf%4q0V/0ed-%+?VM<@5:"U4>AQEANh5!2)Jc%4q0V/0ed3''+?VM<@5U4X4>AQF0KpUA2)J`O4q0V/0ekCH+?VM<@l-@Y4>AQF1-QgC2)Jf&4q0V/0ekIJ+?VM<@5pF[4>AQF1d3$E2)J`N4q0V/0ekOL+?VM<@kp4W4>AQF2Ei6G2)J_u4q0V/0ekUN+?VM<@V%_44>AQF3''JHI2)JcP4q0V/0ek[P+?VM<A2la^4>AQF@m2"t2)R("4q0V/0em3&+?VM=0f2''''4>AQFANh5!2)JoU4q0V/0em9(+?VM<AS"%74>AQG0KpUA2)JlT4q0V/0etII+?VM<Ammk44>AQG1-QgC2)Jl"4q0V/0etOK+?VM=1H@W.4>AQG1d3$E2)R3E4q0V/0etUM+?VM=2D[N+4>AQG2Ei6G2)R4#4q0V/0et[O+?VM=11`WYASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0ekFC4s2sF2)Sl-%6Q@"1-%N@4>euQ2*MI30ekFn4s2sF2)@3U%6Q@"11WQk4>euP1Hl710ekFp4s2sF2)So.%6Q@"11i]m4>euV3Bdm70ekI<4s2sF2)m9R%6Q@"1GM''94>es(Aj-Yd0ekI>4s2sF2)o#.%6Q@"1G_3;4>euVAj-Yd0ekI@4s2sF2)eu.%6Q@"1Gq?=4>euTANgPc0ekIB4s2sF2*!W[%6Q@"1H.K?4>euVANgPc0ekID4s2sF2.:&[%6Q@"1H@WA4>euT@m1>a0ekIm4s2sF2)mBU%6Q@"1L`Nj4>f!)3Bdm70ekIo4s2sF2)mNY%6Q@"1LrZl4>f!)3''Id60ekIq4s2sF2.U,Z%6Q@"1M/fn4>f!+2*MI30ekL=4s2sF2.U;_%6Q@"1bh0:4>f!+1d2@20ekL?4s2sF2.U2\%6Q@"1c%<<4>f!-1d2@20ekLA4s2sF2.SO-%6Q@"1c7H>4>f#O1d2@20ekLC4s2sF2.ed2%6Q@"1cIT@4>f#O2EhR40ekLE4s2sF2.gD`%6Q@"1c[`B4>f!.A3LGb0ekLn4s2sF2DJZ)%6Q@"1h&Wk4>f!.3Bdm70ekLp4s2sF2Deu/%6Q@"1h8cm4>f#S0Koq.0ekLr4s2sH0k=l[%6Q@"1hJoo4>f#Q1d2@20ekO>4s2sF2D[6T%6Q@"2).9;4>f#Q1-Q.00ekO@4s2sF2D[<V%6Q@"2)@E=4>f#T@Qk5`0ekOB4s2sF2E!BU%6Q@"2)RQ?4>f#PAj-Yd0ekOD4s2sF2E#&/%6Q@"2)d]A4>f#T@6P,_0ekOF4s2sF2E3TY%6Q@"2*!iC4>f#V0Koq.0ekOo4s2sF2E5,/%6Q@"2.A`l4>f$*0Koq.0ekOq4s2sF2E<TX%6Q@"2.Sln4>f#VAj-Yd0ekOs4s2sF2ISI,%6Q@"2.f#p4>f$*ANgPc0ekR?4s2sF2I\R.%6Q@"2DIB<4>f$+1d2@20ekRA4s2sF2IeL+%6Q@"2D[N>4>f$+@m1>a0ekRC4s2sF2IeI*%6Q@"2DmZ@4>f$,1Hl710ekRE4s2sF2IeF)%6Q@"2E*fB4>f$,3''Id60ekRG4s2sF2Ig;^%6Q@"2E<rD4>f$-0g6%/0ekRp4s2sF2InU-%6Q@"2I\im4>f$-2a.[50ekRr4s2sF2J$G`%6Q@"2Inuo4>f$/3Bdm70ekRt4s2sF2_ZpL%6Q@"2J,,q4>f$/Aj-Yd0ekU@4s2sF2_[''P%6Q@"2_dK=4>f&O3Bdm70ekUB4s2sF2_[3T%6Q@"2`!W?4>f&O@Qk5`0ekUD4s2sF2_\c+%6Q@"2`3cA4>f&P1Hl710ekUF4s2sF2_d9U%6Q@"2`EoC4>f&P2EhR40ekUH4s2sF2.JR/%6Q@"2`X&E4>f&P@m1>a0ekUq4s2sF2_m9T%6Q@"2e5)p4>f&SANgPc0ekUu4s2sF2`"o,%6Q@"2eG5r4>f&S0Koq.0ekXA4s2sF2`,,1%6Q@"3&*T>4>f&U3Bdm70ekXC4s2sF2e+O*%6Q@"3&<`@4>f&W3''Id60ekXE4s2sF2`<BS%6Q@"3&NlB4>f&VAj-Yd0ekXG4s2sF2`Nf]%6Q@"3&a#D4>f&X1Hl710ekXI4s2sF2dnC(%6Q@"3&s/F4>f'',1Hl710ekXr4s2sF2dnO,%6Q@"3+>&o4>f''+@6P,_0ekXt4s2sF2e"I)%6Q@"3+P2q4>f''-1Hl710ekY!4s2sF2e+a0%6Q@"3+b>s4>f''.1d2@[DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c0f_!Q+?VM@0O[-S4>AQN1HlpD2)f&(4q0V/0f_''S+?VM?AMZLZ4>AQN2*N-F2)m:!4q0V/0f_-U+?VM@0f_E,4>AQN2a/?H2)m=$4q0V/0f_3W+?VM@2_mQ+4>AQN3BeQJ2)m?G4q0V/0f`Z++?VM@2DRH*4>AQN@Qkns2)mF%4q0V/0f``-+?VM@2_[E)4>AQNA3M+u2I^/M4q0V/0f`f/+?VM@2)7?)4>AQNAj.>"2)mC&4q0V/0jub"+?VM@2`X&24>AR!0g6^B2)mQQ4q0V/0juh$+?VM@@Q?U]4>AR!1HlpD2)mU.4q0V/0jun&+?VM@@:DD04>AR!2*N-F2)o&R4q0V/0jut(+?VM@A7[q64>AR!2a/?H2)o&S4q0V/0k!%*+?VM@@Q6O\4>AR!3BeQJ2)o#U4q0V/0k"KS+?VM@@l6FZ4>AR!@Qkns2)o,&4q0V/0k"QU+?VM@A2-7W4>AR!A3M+u2)o,*4q0V/0k"WW+?VM@A2ug_4>AR!Aj.>"2)o,+4q0V/0k)h#+?VM@AMlX\4>AR"0g6^B2)o,V4q0V/0k)n%+?VM@AMcR[4>AR"1HlpD2)o,Y4q0V/0k)t''+?VM@AS++84>AR"2*N-F2)o2V4q0V/0k*%)+?VM@AiW$a4>AR"@6Per2*!?G4q0V/0k+TU+?VMA0O[-S4>AR"@m2"t2*!BF4q0V/0k+ZW+?VMA0k*<U4>AR"ANh5!2E5,''4q0V/0k+`Y+?VMA1,V6)4>AR#1-QgC2*!HJ4q0V/0k3"''+?VMA1H7Q-4>AR#1d3$E2*!I(4q0V/0k3()+?VSkA26=X4>AR#2Ei6G2*!NO4q0V/0k3.++?VMA2)%3''4>AR#3''JHI2*!L)4q0V/0k34-+?VMA2.8ZX4>AR#@6Per2*!NR4q0V/0k4ZV+?VMA2DRH*4>AR#@m2"t2*!QK4q0V/0k4`X+?VMA2E*f/4>AR#ANh5!2*!R)4q0V/0k4fZ+?VMA2E<r14>AR$0KpUA2*!TT4q0V/0k<"&+?VMA3&*T+4>AR$1-QgC2*![-4q0V/0k<((+?VJm2.\r\4>AR$1d3$E1hL0*4q0V/0k<.*+?VMA@5C(V4>AR$2Ei6G2*#,$4q0V/0k<4,+?VMA@l?L[4>AR$3''JHI2*#5-4q0V/0k<:.+?VMAA7Ie44>AR$@6Per2*!X,4q0V/0k=fY+?VMi1,V6)4>AR$ANh5!2.84O4q0V/0k=l[+?VMi0ekj$4>AR%0KpUA2.84L4q0V/0kE(''+?VMi0KD<+4>AR%1-QgC2.84J4q0V/0kE.)+?VMi1b_*&4>AR%1d3$E2.8CQ4q0V/0kE4++?VMi1c[`/4>AR%3''JHI2.8Bu4q0V/0kE@/+?VMi2IScY4>AR%@6Per2.8LR4q0V/0kFfX+?VMi@UhS24>AR%@m2"t2.9s*4q0V/0kFlZ+?VMi@q%V24>AR%ANh5!2.9uM4q0V/0kFr\+?VMi@UqY34>AR&0KpUA2.:&P4q0V/0kN.(+?VMiA2c[]4>AR&1-QgC2.:&S4q0V/0kN4*+?VMiAN;p`4>AR&1d3$E2.:#R4q0V/0kN@.+?VMj0Om9U4>AR&3''JHI2.A7K4q0V/0kNF0+?VMj0fD3)4>AR&@6Per2.A?s4q0V/0kOlY+?VMiA2$1V4>AR&@m2"t2.A=L4q0V/0kOr[+?VMj1H%E+4>AR&ANh5!2.A@Q4q0V/0kP#]+?VMj1c%<)4>ATF0KpUA2.AC"4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@#0JPa64>gS)0Koq.0etF<4s2sF@Pol(%6Q@#0Jbm84>gS*2*MI30etF@4s2sF@Q$)-%6Q@#0K20<4>gS+3Bdm70etFB4s2sF@Q,u)%6Q@#0KD<>4>gS,1Hl710etFk4s2sF@Q-/.%6Q@#0Od3g4>gS,3''Id60etFm4s2sG2)mQZ%6Q@#0P!?i4>gS,@6P,_0etFo4s2sF@Q6&*%6Q@#0P3Kk4>gS-1Hl710etI;4s2sF@UV/Y%6Q@#0ekj74>gSW3''Id60etI=4s2sF@Uh2X%6Q@#0f)!94>gSX2a.[50etI?4s2sF@UhD^%6Q@#0f;-;4>gSY1d2@20etIA4s2sF@Uq/V%6Q@#0fM9=4>gSZ1d2@20etIC4s2sF@V%G]%6Q@#0f_E?4>gSZ1-Q.00etIl4s2sF@Us%6%6Q@#0k*<h4>gSZ2*MI30etIn4s2sF@V''"4%6Q@#0k<Hj4>gS[0Koq.0etIp4s2sF@V.M^%6Q@#0kNTl4>gS[1Hl710etL<4s2sF@k]c(%6Q@#1,D*:4>gV&A3LGb0etL@4s2sF@kfc''%6Q@#1,V6<4>gV(0Koq.0etLB4s2sF@kof''%6Q@#1,hB>4>gV(3''Id60etLm4s2sF@l,o(%6Q@#11EEi4>gV*2EhR40etLo4s2sF@l.a\%6Q@#11WQk4>gV+1Hl710etLq4s2sF@l5r(%6Q@#11i]m4>gV*Aj-Yd0etO=4s2sF@Q-#*%6Q@#1GM''94>gV,@m1>a0etO?4s2sF@l@m^%6Q@#1G_3;4>^V-1-Q.00etOA4s2sF@lH;0%6Q@#1Gq?=4>gV-3Bdm70etOC4s2sF@lRs^%6Q@#1H.K?4>gV/0g6%/0etOE4s2sF@lZA0%6Q@#1H@WA4>f,Z@Qk5`0etOn4s2sF@prh1%6Q@#1L`Nj4>gVX@Qk5`0etOp4s2sF@q%>[%6Q@#1LrZl4>gVX@m1>a0etOr4s2sF@q%A\%6Q@#1M/fn4>gVY2*MI30etR>4s2sF@q''"5%6Q@#1bh0:4>gVY2a.[50etR@4s2sF@q7S`%6Q@#1c%<<4>gV[3Bdm70etRB4s2sF@qK78%6Q@#1c7H>4>gV\@6P,_0etRD4s2sF@qB17%6Q@#1cIT@4>gY/@m1>a0etRF4s2sF@qB(4%6Q@#1c[`B4>gY''@Qk5`0etRo4s2sFA2,r*%6Q@#1h&Wk4>gY(2a.[50etRq4s2sFA2Rj\%6Q@#1h8cm4>gY(Aj-Yd0etRs4s2sFA2.OW%6Q@#1hJoo4>gY(0g6%/0etU?4s2sFA2,o)%6Q@#2).9;4>gY)1-Q.00etUA4s2sFA2.LV%6Q@#2)@E=4>gY(3Bdm70etUC4s2sFA2-&-%6Q@#2)RQ?4>gY+@m1>a0etUE4s2sFA2Q,+%6Q@#2)d]A4>gY+ANgPc0etUG4s2sFA2IaZ%6Q@#2*!iC4>gY-@m1>a0etUp4s2sFA2c;.%6Q@#2.A`l4>gY.2EhR40etUr4s2sFA2lM3%6Q@#2.Sln4>gY/1d2@20etUt4s2sFA2l>.%6Q@#2.f#p4>gYX1-Q.00etX@4s2sFA3"0a%6Q@#2DIB<4>gYX@m1>a0etXB4s2sFA79%5%6Q@#2D[N>4>gYYA3LGb0etXD4s2sFA2u>-%6Q@#2DmZ@4>gYY2a.[50etXF4s2sFA7B%4%6Q@#2E*fB4>gYZ3Bdm70etXH4s2sFA7K.6%6Q@#2E<rD4>gY[1Hl710etXq4s2sFA7RGZ%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>ATL@Qkns2.U5U4q0V/1,`W++?VMlA7@_34>ATLA3M+u2.U9-4q0V/1,`]-+?VMlAhlOZ4>ATLAj.>"2.U;V4q0V/1,gmN+?VMm0Od3T4>ATM0g6^B2.\LN4q0V/1,gsP+?VMm0f_E,4>ATM1HlpD2.\Ks4q0V/1,h$R+?VMm0k*<U4>ATM2a/?H2.\U$4q0V/1,h0V+?VMm1c%<)4>ATM3BeQJ2.\Tu4q0V/1,iW*+?VMm1hAi[4>ATM@Qkns2.\X(4q0V/1,i],+?VMm2)IK+4>ATMA3M+u2.\XW4q0V/1,ic.+?VMm2DRH*4>ATMAj.>"2.\[&4q0V/1,psO+?VMm1cIT-4>ATN1HlpD2.\^T4q0V/1,q*S+?VYq@UhS24>ATN2*N-F2.\^Y4q0V/1,q0U+?VMm@5''kS4>ATN3BeQJ2.^8W4q0V/1,r]++?VMmA2$1V4>ATN@Qkns2.^904q0V/1,rc-+?VMmA2ZU\4>ATNA3M+u2.^>T4q0V/1,ri/+?VMmA7Rk54>ATO0g6^B2.^>S4q0V/1-%*R+?VMmAMH@X4>ATO2*N-F2.^?/4q0V/1-%6V+?VMmAhcIY4>ATO2a/?H2.^AU4q0V/1-%<X+?VMmAhZCX4>ATO3BeQJ2.^AV4q0V/1-&c,+?VMmAiMs`4>ATO@Qkns2.^B24q0V/1-&i.+?VMn0Jbm%4>ATOA3M+u2.eO&4q0V/1-&o0+?VMn2.Sl[4>ATOAj.>"2.e^U4q0V/11;k#+?VMn0Od3T4>AU"0g6^B2.eQt4q0V/11;q%+?VMn0fD3)4>AU"1HlpD2.eU(4q0V/11<"''+?VMn11WQX4>AU"2*N-F2.eX(4q0V/11<()+?VMn1bh0''4>AU"2a/?H2.e[)4q0V/11<.++?VMn1h/]Y4>AU"3BeQJ2.e[V4q0V/11=TT+?VMn11i]Z4>AU"@Qkns2.e^#4q0V/11=`X+?VMn2*!i04>AU"Aj.>"2.ea$4q0V/11Dq$+?VMn2Inu\4>AU#0g6^B2.ed''4q0V/11E"&+?VMn2`Eo04>AU#1HlpD2.eg(4q0V/11E((+?VMn3&3Z,4>AU#2*N-F2.edZ4q0V/11E.*+?VMn3+4u[4>AU#2a/?H2.eg-4q0V/11E4,+?VMn3AE],4>AU#3BeQJ2.eg,4q0V/11FZU+?VMn3FtA`4>AU#@Qkns2.ej/4q0V/11F`W+?VMn3B0234>AU#A3M+u2.g8N4q0V/11FfY+?VMn@5pF[4>AU#Aj.>"2.g9-4q0V/11N"%+?VMn@UhS24>AU$0g6^B2.gAW4q0V/11N(''+?VMnAn!q54>AU$1HlpD2.gDV4q0V/11N.)+?VMnAiMs`4>AU$2*N-F2.gGT4q0V/11N4++?VMnA7Rk54>AU$2a/?H2DASr4q0V/11N:-+?VMnAnF494>AU$3BeQJ2D?m@4q0V/11O`V+?VP92D@<(4>AU$@Qkns2D?jG4q0V/11OfX+?VP90ebd#4>AU$A3M+u2D?mH4q0V/11OlZ+?VP90P*EW4>AU$Aj.>"2D?pA4q0V/11W(&+?VP90k*<U4>AU%0g6^B2D?jC4q0V/11W.(+?VP911EEV4>AU%1HlpD2D?mE4q0V/11W4*+?VP90P3KX4>AU%2*N-F2D?pq4q0V/11W:,+?VP92.8ZX4>AU%2a/?H2D?sB4q0V/11W@.+?VP92IScY4>AU%3BeQJ2D@''K4q0V/11XfW+?VP92.f#]ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0f!9K4s2sG0Jm3%%6Q@#A7IeG4>nlM2EhR40f!9M4s2sG0Jm<(%6Q@#A7[qI4>nlO1Hl710f!9O4s2sG0JkRL%6Q@#AM?:j4>nlO1d2@20f!;p4s2sG0JkOK%6Q@#AMQFl4>nlO@m1>a0f!;r4s2sG0K*B(%6Q@#AMcRn4>nlN3Bdm70f!;t4s2sG0K:dN%6Q@#AMu^p4>nlQA3LGb0f!<!4s2sG0P*1,%6Q@#AN2jr4>nlQ1Hl710f!<#4s2sG0KEQ*%6Q@#ARRbF4>nlQ1d2@20f!<L4s2sG0KET+%6Q@#AS"%J4>nlR1-Q.00f!<P4s2sG0OZn(%6Q@#AhZCk4>nlQ@Qk5`0f!>q4s2sG0P)t&%6Q@#AhlOm4>nm&3''Id60f!>s4s2sG0P)q%%6Q@#Ai)[o4>nm(1Hl710f!>u4s2sG0Ock&%6Q@#Ai;gq4>g__0Koq.0f!?"4s2sG0OeQV%6Q@#AiMss4>nm''2EhR40f!?$4s2sG0Ocn''%6Q@#AmmkG4>nm(3''Id60f!?M4s2sG0f3E)%6Q@#An+"I4>noK2*MI30f!?O4s2sG0ebLL%6Q@$0JG[54>noJ0Koq.0f(L<4s2sG0P3.*%6Q@$0JYg74>nm*@6P,_0f(L>4s2sG0ebCI%6Q@$0Jks94>noL0g6%/0f(L@4s2sG0P4cX%6Q@$0K)*;4>nm*0g6%/0f(LD4s2sG0f1gQ%6Q@$0O[-f4>noMANgPc0f(Lm4s2sG0et^P%6Q@$0Om9h4>noL2a.[50f(Lo4s2sG0f3<&%6Q@$0P*Ej4>noMAj-Yd0f(Lq4s2sG0f*<''%6Q@$0ebd64>noL@m1>a0f(O=4s2sG0f(XM%6Q@$0etp84>noMA3LGb0f(O?4s2sG0f1XL%6Q@$0f2'':4>noN1d2@20f(OA4s2sG0fLmP%6Q@$0fD3<4>noQ2a.[50f(Om4s2sG0fEK)%6Q@$0k*<h4>noQ1d2@20f(Oo4s2sG0fEW-%6Q@$0k<Hj4>noP2*MI30f(Oq4s2sG0fLgN%6Q@$0kNTl4>noOAj-Yd0f(R=4s2sG0f<K*%6Q@$1,1s84>noO1Hl710f(R?4s2sG0fLsR%6Q@$1,D*:4>noS3Bdm70f(RA4s2sG0f_-U%6Q@$1,V6<4>noR2a.[50f(RC4s2sG0k"QU%6Q@$1,hB>4>noS1d2@20f(RE4s2sG0f`Z+%6Q@$1-%N@4>noR@6P,_0f(Rn4s2sG0f^sP%6Q@$11EEi4>np&@Qk5`0f(Rp4s2sG0k"WW%6Q@$11WQk4>np(@m1>a0f(Rr4s2sG0k4WU%6Q@$11i]m4>np(3Bdm70f(U>4s2sG0kN@.%6Q@$1GM''94>np(3''Id60f(U@4s2sG0k3"''%6Q@$1G_3;4>np(2EhR40f(UB4s2sG0k+QT%6Q@$1Gq?=4>np(@Qk5`0f(UD4s2sHAiD_6%6Q@$1H.K?4>np(A3LGb0f(UF4s2sG0kE7,%6Q@$1H@WA4>np*1Hl710f(Uo4s2sG0kN=-%6Q@$1L`Nj4>np+@6P,_0f(Uq4s2sG0kN7+%6Q@$1LrZl4>np+Aj-Yd0f(Us4s2sG0kOr[%6Q@$1M/fn4>np+@m1>a0f(X?4s2sG0kOu\%6Q@$1bh0:4>nrK0Koq.0f(XC4s2sG1,*6&%6Q@$1c7H>4>nrK@m1>a0f(XE4s2sG1,1UL%6Q@$1cIT@4>nrL@Qk5`0f(XG4s2sG1,3?(%6Q@$1c[`B4>nrM0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c1GiN(+?VP;11<?U4>AWK@Qkns2DR%!4q0V/1GiT*+?VP;1GD!%4>AWKAj.>"2DR*D4q0V/1GpjM+?VP;1hAi[4>AWL0g6^B2DR.$4q0V/1GppO+?VP;2D[N+4>AWL1HlpD2DR.!4q0V/1Gq!Q+?VP;2D@<(4>AWL2*N-F2DR0M4q0V/1Gq''S+?VP;2e,#\4>AWL2a/?H2DR6I4q0V/1Gq-U+?VP;3&s/34>AWL3BeQJ2DR4&4q0V/1GrZ++?VP;3As&14>AWLA3M+u2DSf"4q0V/1Gr`-+?VP;3&<`-4>AWLAj.>"2DR9L4q0V/1H$pN+?VP;A2c[]4>AWM0g6^B2DSet4q0V/1H%!P+?VP;@U_M14>AWM1HlpD2DScS4q0V/1H%''R+?VP;AnF494>AWM2*N-F2DSc#4q0V/1H%-T+?VP=A2HIZ4>AWM2a/?H2DSc%4q0V/1H%3V+?VP;A7Ie44>AWM3BeQJ2DScP4q0V/1H&Z*+?VP;@pqP14>AWM@Qkns2DSbt4q0V/1H&`,+?VP;@lHR\4>AWMA3M+u2DR:%4q0V/1H&f.+?VP;@lZ^^4>AWMAj.>"2D[$s4q0V/1H.!O+?VP;AS"%74>AWN0g6^B2DSl!4q0V/1H.''Q+?VP<1,hB+4>AWN1HlpD2D[$B4q0V/1H.-S+?VP<0K;6*4>AWN2*N-F2DSiU4q0V/1H.3U+?VP;Ai2a]4>AWN2a/?H2D[3E4q0V/1H.9W+?VP<1M&`Z4>AWN3BeQJ2D[1#4q0V/1H/`++?VP=0k3BV4>AWN@Qkns2D[1%4q0V/1H/f-+?VP<3As&14>AWNA3M+u2D[=(4q0V/1H/l/+?VP<3&!N*4>AWNAj.>"2D\cN4q0V/1H7''P+?VP<2`<i/4>AWO0g6^B2D\bt4q0V/1H7-R+?VP<3+b>`4>AWO1HlpD2D[<Q4q0V/1H73T+?VP<3G(Ga4>AWO2*N-F2D\f"4q0V/1H79V+?VP<2I\iZ4>AWO2a/?H2D[6O4q0V/1H7?X+?VP<@V%_44>AWO3BeQJ2D\o)4q0V/1H8f,+?VP<@k^(U4>AWO@Qkns2D\i$4q0V/1H8l.+?VP<AMZLZ4>AWOA3M+u2D\i''4q0V/1H8r0+?VP<A26=X4>AWOAj.>"2D\r''4q0V/1H@-Q+?VP<@l-@Y4>AWP0g6^B2Dd-H4q0V/1H@3S+?VP=1Gh9)4>AWP1HlpD2Dd*G4q0V/1H@9U+?VP=0f)!&4>AWP2*N-F2Dd0I4q0V/1H@?W+?VP=1H%E+4>AWP2a/?H2Dm4"4q0V/1H@EY+?VP=0fM9*4>AWP3BeQJ2Dd0K4q0V/1HAl-+?VP=0P3KX4>AWP@Qkns2Dd<N4q0V/1HAr/+?VP=2J,,^4>AWPA3M+u2Dd?N4q0V/1HB#1+?VP=1hAi[4>AWPAj.>"2Dm6u4q0V/1LVt$+?VP=3Aiu04>AX#0g6^B2DdEM4q0V/1LW%&+?VP=@5U4X4>AX#1HlpD2Dei&4q0V/1LW+(+?VP=3&j)24>AX#2*N-F2DelQ4q0V/1LW1*+?VP=A77Y24>AX#2a/?H2Der"4q0V/1LW7,+?VP=@l6FZ4>AX#3BeQJ2Deo&4q0V/1LX]U+?VP=@U_M14>AX#@Qkns2Der(4q0V/1LXcW+?VP=@kp4W4>AX#A3M+u2Df##4q0V/1LXiY+?VP=AN)d^4>AX#Aj.>"3&30J4q0V/1L`+''+?VP;@:MJ14>AX$1HlpD2Deu$4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@$@Pg7k4>o$-Aj-Yd0f*8r4s2sG2)8Z*%6Q@$@Q$Cm4>o$.2EhR40f*8t4s2sG1hJR.%6Q@$@Q6Oo4>o$.1-Q.00f*9!4s2sG1hL/[%6Q@$@UVGC4>o&N0Koq.0f*9J4s2sG1hL8^%6Q@$@UhSE4>o&O3''Id60f*9L4s2sG2)/T)%6Q@$@V%_G4>o&N2*MI30f*9N4s2sG2)7!P%6Q@$@k^(h4>o&P1Hl710f*;o4s2sG2)8W)%6Q@$@l-@l4>o&Q2a.[50f*;s4s2sG2)@-S%6Q@$@l?Ln4>o&Q3''Id60f*;u4s2sH2)Jc+%6Q@$@lQXp4>o&R3''Id60f*<"4s2sG2)R9U%6Q@$@pqPD4>o&S2*MI30f*<K4s2sG2)Ji-%6Q@$@q.\F4>o&S3''Id60f*<M4s2sG2)Sr/%6Q@$@q@hH4>o&SA3LGb0f*<O4s2sG2)d9S%6Q@$A2$1i4>o&U3''Id60f*>r4s2sI@Q7d[%6Q@$A2HIm4>o&W@Qk5`0f*>t4s2sG2*#84%6Q@$A2ZUo4>o''*@Qk5`0f*?!4s2sG2.AL.%6Q@$A2laq4>o'',1Hl710f*?#4s2sG2.JO.%6Q@$A77YE4>o'',0g6%/0f*?L4s2sG2.JI,%6Q@$A7IeG4>o'',@m1>a0f*?N4s2sG2.SI+%6Q@$A7[qI4>o''-@Qk5`0f*?P4s2sG2.S^2%6Q@$AMQFl4>o''/0g6%/0f*As4s2sG2`EKU%6Q@$AMcRn4>o)O@6P,_0f*Au4s2sG2D?pN%6Q@$AMu^p4>o''/@Qk5`0f*B"4s2sG2`ENV%6Q@$ARRbF4>o)R1d2@20f*BM4s2sG2DJ]*%6Q@$ARdnH4>o)SAj-Yd0f*BO4s2sG2Dd6S%6Q@$AS"%J4>o)S3Bdm70f*BQ4s2sG2Dd-P%6Q@$AhZCk4>o)TANgPc0f*Dr4s2sG2Do#/%6Q@$AhlOm4>o)U1d2@20f*E!4s2sG2Do)1%6Q@$Ai;gq4>o)U1-Q.00f*E#4s2sG2E*<R%6Q@$AiMss4>o)W1Hl710f*E%4s2sG2E3Z[%6Q@$AmmkG4>o)WANgPc0f*EN4s2sG2E3]\%6Q@$An+"I4>o)W1d2@20f*EP4s2sG2E<`\%6Q@$An=.K4>o)XA3LGb0f*ER4s2sG2IeI*%6Q@%0JG[54>o*,3Bdm70f1R=4s2sG2Iea2%6Q@%0JYg74>o*,ANgPc0f1R?4s2sG2I^/[%6Q@%0Jks94>o*-1d2@20f1RA4s2sG2I\X0%6Q@%0K)*;4>o*.2EhR40f1RC4s2sG2Ip5[%6Q@%0K;6=4>o*/0Koq.0f1RE4s2sG2D\r/%6Q@%0O[-f4>o*/2EhR40f1Rn4s2sG2J"m4%6Q@%0Om9h4>o*00Koq.0f1Rp4s2sG2J+g1%6Q@%0P*Ej4>o*02a.[50f1Rr4s2sG2_\i-%6Q@%0ebd64>o,Q2EhR40f1U>4s2sG2_el-%6Q@%0f2'':4?5>V3''Id60f1UB4s2sG2_nr.%6Q@%0fD3<4>o,SAj-Yd0f1UD4s2sG2`!?U%6Q@%0fV?>4>o,T0g6%/0f1UF4s2sG2`!EW%6Q@%0k!6g4>o,S2a.[50f1Uo4s2sG2`*EV%6Q@%0k3Bi4>o,UANgPc0f1Uq4s2sG2`<?R%6Q@%0kENk4>o,U3Bdm70f1X?4s2sG2`Nf]%6Q@%1,;$94>o,W0Koq.0f1XA4s2sG2dn^1%6Q@%1,M0;4>o,W@m1>a0f1XC4s2sG2`>).%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AZJ2Ei6G2E*U*4q0V/1bq!R+?VP@3+>&\4>AZJ3''JHI2E,&&4q0V/1bq''T+?VP@@50qT4>AZJ@6Per2E*TQ4q0V/1brN(+?VP@@Q-I[4>AZJ@m2"t2E,2Z4q0V/1brT*+?VP@@Pg7X4>AZJANh5!2E,2W4q0V/1brZ,+?VP@@P^1W4>AZK0KpUA2E,2-4q0V/1c$jM+?VP@@Q6O\4>AZK1-QgC2E,2(4q0V/1c$pO+?VP@A7[q64>AZK1d3$E2E,/W4q0V/1c%!Q+?VP@AMQFY4>AZK2Ei6G2E,2Y4q0V/1c%''S+?VP@@Q?U]4>AZK3''JHI2E,,W4q0V/1c%-U+?VP@@l?L[4>AZK@6Per2E,2+4q0V/1c&T)+?VPj3Fb5^4>AZK@m2"t2E3F&4q0V/1c&Z++?VPA1c@N,4>AZKANh5!2E3HP4q0V/1c&`-+?VPA1b_*&4>AZL0KpUA2E3O(4q0V/1c-pN+?VPA1GV-''4>AZL1-QgC2E3O)4q0V/1c.!P+?VPA@P^1W4>AZL1d3$E2E3I$4q0V/1c.''R+?VPA2*!i04>AZL2Ei6G2E3TN4q0V/1c.-T+?VPA2`Eo04>AZL3''JHI2E3X-4q0V/1c.3V+?VPA3G(Ga4>AZL@6Per2E3[.4q0V/1c/Z*+?VPA@:VP24>AZL@m2"t2E3]R4q0V/1c/`,+?VPA3Fk;_4>AZLANh5!2E3^+4q0V/1c/f.+?VPA3&<`-4>AZM0KpUA2IU$*4q0V/1c7!O+?VPA@Q?U]4>AZM1-QgC2E3WP4q0V/1c7''Q+?VPA@Pp=Y4>AZM1d3$E2E5,!4q0V/1c7-S+?VPA@UVG04>AZM2Ei6G2E<I''4q0V/1c73U+?VPA3+P2^4>AZM3''JHI2E3X,4q0V/1c79W+?VPB0JPa#4>AZM@6Per2E52T4q0V/1c8`++?VPB0K;6*4>AZM@m2"t2E55,4q0V/1c8f-+?VPB1,;$&4>AZMANh5!2E<NN4q0V/1c8l/+?VPAAMH@X4>AZN0KpUA2E<I$4q0V/1c@''P+?VPA@q7b44>AZN1-QgC2E55(4q0V/1c@-R+?VPAAN)d^4>AZN1d3$E2E55)4q0V/1c@3T+?VPB1H%E+4>AZN2Ei6G2E<KI4q0V/1c@9V+?VPB0Jks&4>AZN3''JHI2E55+4q0V/1c@?X+?VPAAMZLZ4>AZN@6Per2E<NM4q0V/1cAf,+?VPAAiW$a4>AZN@m2"t2E58%4q0V/1cAl.+?VPAAS++84>AZNANh5!2E<NP4q0V/1cAr0+?VPB11<?U4>AZO0KpUA2E<L#4q0V/1cI-Q+?VPB1,D*''4>AZO1-QgC2E<NI4q0V/1cI3S+?VPA@l?L[4>AZO1d3$E2E<]V4q0V/1cI9U+?VPB2`Eo04>AZO2Ei6G2E<X)4q0V/1cI?W+?VPB2`Nu14>AZO3''JHI2E<[)4q0V/1cIEY+?VPB2)IK+4>AZO@6Per2E<^-4q0V/1cJl-+?VPB2J#&]4>AZO@m2"t2E<QR4q0V/1cJr/+?VPB2`*]-4>AZOANh5!2E<R(4q0V/1cK#1+?VPB2*!i04>AZP0KpUA2E<QI4q0V/1cR3R+?VPB2DIB)4>AZP1-QgC2E<X+4q0V/1cR9T+?VPB2.Sl[4>AZP1d3$E2E<`O4q0V/1cR?V+?VPB2IScY4>AZP2Ei6G2E>5%4q0V/1cREX+?VPB@:_V34>AZP3''JHI2E>;%4q0V/1cRKZ+?VPB@V.e5ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0f1ju4s2sG3Fad-%6Q@%3+>&o4>o311Hl710f1k"4s2sG3FZP`%6Q@%3+P2q4>o30ANgPc0f1k$4s2sF@V%M_%6Q@%3+b>s4>o30@6P,_0f1mE4s2sG3FlYa%6Q@%3AE]?4>o3/@Qk5`0f1mG4s2sG3Faj/%6Q@%3AWiA4>o3.2a.[50f1mI4s2sG@5;CX%6Q@%3AiuC4>o2[0g6%/0f1mK4s2sG3FOU*%6Q@%3B'',E4>o2[@m1>a0f1mM4s2sG3B8r\%6Q@%3B98G4>o3/1d2@20f1n!4s2sG3Fl\b%6Q@%3FY/p4>o323''Id60f1n#4s2sG@5''H#%6Q@%3Fk;r4>pV&@Qk5`0f1n%4s2sG3G)ke%6Q@%3G(Gt4>pY&@6P,_0f3;m4s2sG3G(98%6Q@%@50qg4>o331-Q.00f3;o4s2sG3Ft-5%6Q@%@5C(i4>pV%2*MI30f3;q4s2sG3FX^,%6Q@%@5U4k4>pV&ANgPc0f3;s4s2sG3Fu_b%6Q@%@5g@m4>pV&1d2@20f3;u4s2sG3FuY`%6Q@%@6$Lo4>pV%@6P,_0f3<I4s2sG@50N$%6Q@%@:DDC4>pVX0g6%/0f3<K4s2sG@59W&%6Q@%@:VPE4>pV&1Hl710f3<M4s2sG@5Kf)%6Q@%@:h\G4>pV%@m1>a0f3>n4s2sG@5fr*%6Q@%@PL%h4>pV(2EhR40f3>p4s2sG@5g/0%6Q@%@P^1j4>pV)2a.[50f3>r4s2sG@5]l)%6Q@%@Pp=l4>pV*3Bdm70f3>t4s2sG@5^#-%6Q@%@Q-In4>pV)3''Id60f3?!4s2sG@5Bl,%6Q@%@Q?Up4>pV''1-Q.00f3?J4s2sG@6$#*%6Q@%@U_MD4>pV-A3LGb0f3?L4s2sG@::iR%6Q@%@UqYF4>pV-1d2@20f3Ao4s2sG@6$81%6Q@%@kg.i4?,5R2a.[50f3Aq4s2sG@:E\0%6Q@%@l$:k4>pVX1Hl710f3As4s2sG@:M&V%6Q@%@l6Fm4>pVW3''Id60f3Au4s2sG@:D#V%6Q@%@lHRo4>pVV@m1>a0f3B"4s2sG@:Wq5%6Q@%@lZ^q4>pVY0g6%/0f3BK4s2sG@:Wt6%6Q@%@q%VE4>pVV@6P,_0f3BM4s2sG@:We1%6Q@%@q7bG4>pVZ@6P,_0f3BO4s2sG@:it4%6Q@%@qInI4>pY&2*MI30f3Dp4s2sI2DI*R%6Q@%A2-7j4>pV[@6P,_0f3Dr4s2sG@PKW%%6Q@%A2?Cl4>pY''2EhR40f3Dt4s2sJ@P]`&%6Q@%A2QOn4>pY''Aj-Yd0f3E!4s2sG@P]u-%6Q@%A2c[p4>pY)2a.[50f3E#4s2sH2Ip;]%6Q@%A2ugr4>pY)3Bdm70f3EL4s2sJ3+ZYb%6Q@%A7@_F4>pY*2a.[50f3EN4s2sG@Pfl)%6Q@%A7RkH4>pY*3Bdm70f3EP4s2sG@Poi''%6Q@%A7e"J4>pY+3Bdm70f3Gq4s2sG@Pou+%6Q@%AMH@k4>pY+@Qk5`0f3Gs4s2sG@Pqa]%6Q@%AMZLm4>pY,0g6%/0f3H$4s2sG@Q62.%6Q@%AN;ps4>pY.1Hl710f3HM4s2sG@Q7m^%6Q@%AR[hG4>pY/3''Id60f3HO4s2sG@Q?;0%6Q@%ARmtI4>pY/ANgPc0f3HQ4s2sG@UV)W%6Q@%AhcIl4>pYWAj-Yd0f3Jt4s2sG@U_)V%6Q@%AhuUn4>pYX0g6%/0f3K!4s2sG@U_,W%6Q@%Ai2ap4>pYX2a.[^DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c1hJX0+?VPk@UhS24>A[)2a/?H2I^/S4q0V/1hJ^2+?VPk@q%V24>A[)3BeQJ2I^2Q4q0V/1hL/[+?VPkA7e"74>A[)@Qkns2I^6-4q0V/1hL5]+?VPkAR[h44>A[)A3M+u2I^8S4q0V/1hL;_+?VPkAS++84>A[)Aj.>"3FuZ24q0V/2)$^J+?VPl0K;6*4>A]I1HlpD2IeIN4q0V/2)$jN+?VPl1,M0(4>A]I2*N-F2IeKu4q0V/2)$pP+?VPl2.\r\4>A]I2a/?H2IeU%4q0V/2)%!R+?VPl2DRH*4>A]I3BeQJ2IeXR4q0V/2)&H&+?VPl3&3Z,4>A]I@Qkns2Ie^W4q0V/2)&N(+?VPl3FP)\4>A]IA3M+u2Ie^$4q0V/2)&T*+?VPl3FY/]4>A]IAj.>"2Ie[W4q0V/2)-dK+?VPl2E3l04>A]J0g6^B2Ie[%4q0V/2)-jM+?VPl3ANc-4>A]J1HlpD2Iea$4q0V/2)-pO+?VPl@l-@Y4>A]J2*N-F2Ig>R4q0V/2).!Q+?VPlA2?CY4>A]J2a/?H2Ig3,4q0V/2).''S+?VPlA2c[]4>A]J3BeQJ2Ig5S4q0V/2)/N''+?VPlA7Rk54>A]J@Qkns2Ig0,4q0V/2)/T)+?VPl@PL%U4>A]JA3M+u2Ig3-4q0V/2)/Z++?VPl@UVG04>A]JAj.>"2Ig9,4q0V/2)6jL+?VPlAS++84>A]K0g6^B2Ig8X4q0V/2)6pN+?VPlARRb34>A]K1HlpD2InOS4q0V/2)7!P+?VVC1h8cZ4>A]K2*N-F2InU%4q0V/2)7''R+?VPm11EEV4>A]K2a/?H2InUS4q0V/2)7-T+?VPm1H7Q-4>A]K3BeQJ2InO&4q0V/2)8T(+?VPm1Gq?*4>A]K@Qkns2InU"4q0V/2)8Z*+?VPm0etp%4>A]KA3M+u2InLO4q0V/2)8`,+?VPm2D[N+4>A]KAj.>"2Ing(4q0V/2)?pM+?VPm2DdT,4>A]L0g6^B2In[R4q0V/2)@!O+?VPm2`X&24>A]L1HlpD2In[*4q0V/2)@''Q+?VPm3+Y8_4>A]L2*N-F2Ing*4q0V/2)@-S+?VPoAMcR[4>A]L2a/?H2Ind)4q0V/2)@3U+?VPmAiW$a4>A]L3BeQJ2J"U#4q0V/2)AZ)+?VPn0O[-S4>A]L@Qkns2Ip8S4q0V/2)A`++?VPm@lHR\4>A]LA3M+u2IpAW4q0V/2)Af-+?VPm@Q6O\4>A]LAj.>"2Ip;U4q0V/2)I!N+?VPmARdn54>A]M0g6^B2Ip?04q0V/2)I''P+?VPm@q.\34>A]M1HlpD2IpAY4q0V/2)I-R+?VPmA26=X4>A]M2*N-F2Ip;T4q0V/2)I3T+?VPmAmmk44>A]M2a/?H2Ip>Y4q0V/2)I9V+?VPmAMcR[4>A]M3BeQJ2Ip>U4q0V/2)J`*+?VPmARRb34>A]M@Qkns2IpB14q0V/2)Jf,+?VPn11WQX4>A]MA3M+u2J"dX4q0V/2)Jl.+?VPn11`WY4>A]MAj.>"2J"U''4q0V/2)R''O+?VPn2_mQ+4>A]N0g6^B2J"aX4q0V/2)R-Q+?VPn1M&`Z4>A]N1HlpD2J"X"4q0V/2)R3S+?VPn2I\iZ4>A]N2*N-F2J"XQ4q0V/2)R9U+?VPn2`<i/4>A]N2a/?H2J"^U4q0V/2)R?W+?VPn0kNTY4>A]N3BeQJ2J"^$4q0V/2)Sf++?VPn1LWHV4>A]N@Qkns2J"^V4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@&2.Jfm4>pb+1d2@20f:h!4s2sGAS,O<%6Q@&2.\ro4>pb*A3LGb0f:h#4s2sGAMZ;0%6Q@&2D@<;4>pb11-Q.00f:jD4s2sGART"2%6Q@&2DRH=4>pb23''Id60f:jF4s2sGARd_a%6Q@&2DdT?4>pb[2a.[50f:jH4s2sGARmS\%6Q@&2E!`A4>pb[A3LGb0f:jJ4s2sGART17%6Q@&2E3lC4>pb\1d2@20f:jL4s2sGAR[DY%6Q@&2Ieon4>pb1Aj-Yd0f:k"4s2sGARRG[%6Q@&2J#&p4>pb\1-Q.00f:k$4s2sGAN=?d%6Q@&2_[E<4>pe.0g6%/0f:mE4s2sGAhc#(%6Q@&2_mQ>4?"rN@m1>a0f:mG4s2sGAS#@8%6Q@&2`*]@4>pb_3''Id60f:mI4s2sGAS,L;%6Q@&2`<iB4>pe-Aj-Yd0f:mK4s2sGAS*\]%6Q@&2`NuD4>pe-0g6%/0f:mM4s2sGAS#I;%6Q@&2dnlm4>pe-1-Q.00f:n!4s2sGARf46%6Q@&2e,#o4>pe-ANgPc0f:n#4s2sGAhc)*%6Q@&2e>/q4>pb_2a.[50f:n%4s2sGAiM\4%6Q@&3&!N=4>pe1@6P,_0f:pF4s2sGAiD\5%6Q@&3&3Z?4>pe20g6%/0f:pH4s2sGAiMJ.%6Q@&3&EfA4>pe0Aj-Yd0f:pJ4s2sGAi4$]%6Q@&3&WrC4>pe`1Hl710f:pL4s2sGAi=0`%6Q@&3&j)E4>pe21-Q.00f:pN4s2sGAiF3`%6Q@&3+4un4>pe/3''Id60f:q"4s2sGAiO?c%6Q@&3+G,p4>pe30g6%/0f:q$4s2sGAn*S[%6Q@&3+Y8r4>pe02EhR40f:q&4s2sGAn!P[%6Q@&3A<W>4>pe[1Hl710f:sG4s2sGAmmDX%6Q@&3ANc@4>pe[1d2@20f:sI4s2sGAn!ba%6Q@&3A`oB4>pe]2EhR40f:sK4s2sGAmo+3%6Q@&3As&D4>pe^Aj-Yd0f:sM4s2sGAn3b_%6Q@&3B02F4>pe_@m1>a0f:sO4s2sGAn3_^%6Q@&3FP)o4>pe^3''Id60f:t#4s2sGAnEb]%6Q@&3Fb5q4>pe_ANgPc0f:t%4s2sGAn5@7%6Q@&3FtAs4?"rJ3Bdm70f:t''4s2sH0JHs"%6Q@&@5''kf4>pe`@6P,_0f<Ao4s2sH0JP:G%6Q@&@5:"h4?"rJ0g6%/0f<Aq4s2sH0JI*&%6Q@&@5L.j4>pe`ANgPc0f<As4s2sH0JR$#%6Q@&@5^:l4?"rK@6P,_0f<Au4s2sGAiDP1%6Q@&@5pFn4?"rKA3LGb0f<B"4s2sH0JPON%6Q@&@:;>B4?"rKAj-Yd0f<BK4s2sH0JbCH%6Q@&@:MJD4?"rMANgPc0f<BM4s2sH0JbIJ%6Q@&@:_VF4?"rO0g6%/0f<BO4s2sH0K(^N%6Q@&@PBtg4?"rS3Bdm70f<Dp4s2sH0KCmP%6Q@&@PU+i4?"s&Aj-Yd0f<Dr4s2sH0P3%''%6Q@&@Pg7k4?"s&@m1>a0f<Dt4s2sH0Od"*%6Q@&@Q$Cm4?"s''1Hl710f<E!4s2sH0O\NV%6Q@&@Q6Oo4?"s)Aj-Yd0f<E#4s2sH0OnQU%6Q@&@UVGC4?"s)A3LGb0f<EL4s2sH0P!1-%6Q@&@UhSE4?"uK3Bdm70f<EN4s2sH0P4iZ%6Q@&@V%_G4?"uL@m1>a0f<EP4s2sH0ek[P%6Q@&@k^(h4?"uQ2*MI30f<Gq4s2sH0f:gP%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>A^''1-QgC2_d9O4q0V/2.JF++?VS;2E!`.4>A^''1d3$E2_d3G4q0V/2.JL-+?VS;1h/]Y4>A^''2Ei6G2_d0J4q0V/2.JR/+?VS;2Ieo[4>A^''3''JHI2_d:(4q0V/2.JX1+?VS;An!q54>A^''@6Per2_d9K4q0V/2.L)Z+?VS;3Aiu04>A^''@m2"t2_e`#4q0V/2.L/\+?VS;@:MJ14>A^''ANh5!2_ei%4q0V/2.L5^+?VS;@Q?U]4>A^(0KpUA2_ecQ4q0V/2.SF*+?VS;A26=X4>A^(1-QgC2_ef&4q0V/2.SL,+?VS;A2HIZ4>A^(1d3$E2_efR4q0V/2.SR.+?VS;AM?:W4>A^(2Ei6G2_elR4q0V/2.SX0+?VS;AN)d^4>A^(3''JHI2_eo%4q0V/2.S^2+?VS;An+"64>A^(@6Per2_eo)4q0V/2.U/[+?VS;AnF494>A^(@m2"t2_m''t4q0V/2.U5]+?VS<0ebd#4>A^(ANh5!2_m*s4q0V/2.U;_+?VS<1,qH,4>A^)0KpUA2_m.!4q0V/2.\L++?VS<11NKW4>A^)1-QgC2_m0C4q0V/2.\R-+?VS<1GV-''4>A^)3''JHI2_m3J4q0V/2.\d3+?VS<1h&WX4>A^)@6Per2_m6M4q0V/2.^5\+?VS<2`*]-4>A^)@m2"t2_m=''4q0V/2.^;^+?VS<3&3Z,4>A^)ANh5!2_m?I4q0V/2.^A`+?VS<3&a#14>A^*0KpUA2_mBK4q0V/2.eR,+?VS<3As&14>A^*1-QgC2_nes4q0V/2.eX.+?VS<@5g@Z4>A^*1d3$E2_ni&4q0V/2.e^0+?VS<@PU+V4>A^*2Ei6G2_nl!4q0V/2.ed2+?VS<@l?L[4>A^*3''JHI2_nl"4q0V/2.ej4+?VS<@q@h54>A^*@6Per2_no!4q0V/2.g;]+?VS<AMQFY4>A^*ANh5!2_nu*4q0V/2.gGa+?VS<AiDm_4>A`J0KpUA2)$^r4q0V/2D?jL+?VS=0fM9*4>A`J1-QgC2`!-r4q0V/2D?pN+?VS=0k3BV4>A`J1d3$E2`!0H4q0V/2D@!P+?VS=0k<HW4>A`J2Ei6G2`!6H4q0V/2D@''R+?VS=11i]Z4>A`J3''JHI2`!3L4q0V/2D@-T+?VS=1,V6)4>A`J@6Per2`!7$4q0V/2DAZ*+?VYqA2la^4>A`JANh5!2`!<M4q0V/2DA`,+?VS=2IScY4>A`K0KpUA2`!?O4q0V/2DHpM+?VS=2_[E)4>A`K1-QgC2`!BP4q0V/2DI!O+?VS=2`3c.4>A`K1d3$E2`!C%4q0V/2DI''Q+?VS=2dnlZ4>A`K2Ei6G2`"r''4q0V/2DI-S+?VS=@P^1W4>A`K3''JHI2`"rT4q0V/2DI3U+?VS=@U_M14>A`K@6Per2`"qt4q0V/2DJZ)+?VS=AMlX\4>A`K@m2"t2`##V4q0V/2DJ`++?VS=A7[q64>A`KANh5!2`+qu4q0V/2DJf-+?VS>0Ju$''4>A`L0KpUA2`*F)4q0V/2DR!N+?VS>1,V6)4>A`L1-QgC2`#&*4q0V/2DR''P+?VS>1GV-''4>A`L1d3$E2`*=!4q0V/2DR-R+?VS>2)RQ,4>A`L2Ei6G2`*=&4q0V/2DR3T+?VS>2.f#]4>A`L3''JHI2`*BP4q0V/2DR9V+?VS>1bh0''4>A`L@6Per2`*C%4q0V/2DS`*+?VS>2E<r14>A`L@m2"t2`*HI4q0V/2DSf,+?VS>2D[N+ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0fCdu4s2sH1cAc+%6Q@''11i]m4?#)U2EhR40fCgA4s2sH1cJu0%6Q@''1GM''94?#)V@Qk5`0fCgC4s2sH1c],2%6Q@''1G_3;4?#**2a.[50fCgE4s2sH1h0rX%6Q@''1Gq?=4?#*,Aj-Yd0fCgG4s2sH1h8F,%6Q@''1H.K?4?#''.0g6%/0fCgI4s2sH1hA@)%6Q@''1H@WA4?#*.1Hl710fCgr4s2sH1hAU0%6Q@''1L`Nj4?#*.3Bdm70fCgt4s2sH1hC5^%6Q@''1LrZl4?#*/1-Q.00fCjB4s2sH1hJ^2%6Q@''1bh0:4?#*/2a.[50fCjD4s2sH2)$jN%6Q@''1c%<<4?#,O1Hl710fCjF4s2sH2)$mO%6Q@''1c7H>4?#,O@m1>a0fCjH4s2sH2)&T*%6Q@''1cIT@4?#,OA3LGb0fCjJ4s2sH2)-sP%6Q@''1c[`B4?#,P1Hl710fCjs4s2sH2)/Z+%6Q@''1h&Wk4?#,Q2EhR40fCju4s2sH2)8Z*%6Q@''1h8cm4?#,R@m1>a0fCk"4s2sH2)I-R%6Q@''1hJoo4?#,SA3LGb0fCmC4s2sH2)J`*%6Q@''2).9;4?#,S3Bdm70fCmE4s2sH2)Si,%6Q@''2)@E=4?#,S2EhR40fCmG4s2sH2)Sf+%6Q@''2)RQ?4?#,U3Bdm70fCmI4s2sH2)[9T%6Q@''2)d]A4?#,U2a.[50fCmK4s2sH2)\o-%6Q@''2*!iC4?#,UA3LGb0fCmt4s2sH2)dKY%6Q@''2.A`l4?#,V2EhR40fCn#4s2sH2)d?U%6Q@''2.f#p4?#,W@6P,_0fCpD4s2sH2)mT[%6Q@''2DIB<4?#,W1-Q.00fCpF4s2sH2*!KW%6Q@''2D[N>4?#,X@6P,_0fCpH4s2sH2*#22%6Q@''2DmZ@4?#-+2*MI30fCpJ4s2sH2.8:)%6Q@''2E*fB4?#--1-Q.00fCpL4s2sH2.A@*%6Q@''2E<rD4?#--1Hl710fCpu4s2sH2.AF,%6Q@''2I\im4?#-,A3LGb0fCq"4s2sH2.AO/%6Q@''2Inuo4?#-,@m1>a0fCq$4s2sH2.A:(%6Q@''2J,,q4?#--A3LGb0fCsE4s2sH2.L&Y%6Q@''2_dK=4?#-.1-Q.00fCsG4s2sH2.S^2%6Q@''2`!W?4?#-/1Hl710fCsI4s2sH2.U8^%6Q@''2`EoC4?#-0@m1>a0fCsM4s2sH2D?jL%6Q@''2`X&E4?#-00Koq.0fCt!4s2sH2.g8\%6Q@''2e5)p4?#/P@Qk5`0fCt%4s2sH2DAZ*%6Q@''2eG5r4?#/P3Bdm70fD!F4s2sH2DJf-%6Q@''3&*T>4?#/R2a.[50fD!K4s2sH2DR*Q%6Q@''3&WrC4?#/S1d2@20fD!M4s2sH2D[$N%6Q@''3&j)E4?#/S@Qk5`0fD"#4s2sH2Dd<U%6Q@''3+G,p4?#/U@m1>a0fD"%4s2sH2DmHX%6Q@''3AWiA4?#/V2a.[50fD$K4s2sH2E#&/%6Q@''3AiuC4?#/W0Koq.0fD$M4s2sH2E*BT%6Q@''3B'',E4?#/W2EhR40fD$O4s2sH2E*TZ%6Q@''3B98G4?#/W@m1>a0fD%#4s2sH2E3BS%6Q@''3FY/p4?#/X1Hl710fD%%4s2sH2E3Z[%6Q@''3Fk;r4?#/X@Qk5`0fD%''4s2sH2E583%6Q@''3G(Gt4?#/Y2EhR40fEGo4s2sH2E<QW%6Q@''@5C(i4?#0-0Koq.0fEGs4s2sH2I\L,%6Q@''@5pFn4?#0.1-Q.YDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c2ISU0+?VS@@q7b44>Aa&@6Per2`>2)4q0V/2IU&Y+?VS@A26=X4>Aa&@m2"t2`>2X4q0V/2IU,[+?VS@AMH@X4>Aa&ANh5!2`>5)4q0V/2IU2]+?VS@AN)d^4>Aa''0KpUA2`>5U4q0V/2I\C)+?VVA11i]Z4>Aa''1-QgC2`>8W4q0V/2I\I++?VSA0K;6*4>Aa''1d3$E2`EEL4q0V/2I\O-+?VSA0Jks&4>Aa''2Ei6G2`EKP4q0V/2I\U/+?VSA1,M0(4>Aa''3''JHI2`EI&4q0V/2I^,Z+?VSA0k*<U4>Aa''ANh5!2`EQP4q0V/2I^8^+?VSA2.8ZX4>Aa(0KpUA2`EWS4q0V/2IeI*+?VSA2I\iZ4>Aa(1-QgC2`EU''4q0V/2IeO,+?VSA2DmZ-4>Aa(1d3$E2`E[-4q0V/2IeU.+?VSA2e>/^4>Aa(2Ei6G2`EZU4q0V/2Ie[0+?VSA3+Y8_4>Aa(3''JHI2`E^*4q0V/2Iea2+?VSA3AE],4>Aa(@6Per2`G/!4q0V/2Ig2[+?VSA3FtA`4>Aa(@m2"t2`G2"4q0V/2Ig8]+?VSA@Q$CZ4>Aa(ANh5!2`G2+4q0V/2Ig>_+?VSA@V.e54>Aa)1-QgC2`G2T4q0V/2InU-+?VSA@lHR\4>Aa)1d3$E2`G5W4q0V/2In[/+?VSAA2c[]4>Aa)2Ei6G2`G8U4q0V/2Ina1+?VSAA7Ie44>Aa)3''JHI2`G;(4q0V/2Ing3+?VSAAS"%74>Aa)@6Per2`G>Y4q0V/2Ip8\+?VSB0Om9U4>Aa)@m2"t2`NNI4q0V/2Ip>^+?VSC1,_<*4>Aa)ANh5!2`NQH4q0V/2IpD`+?VSC11<?U4>Aa*0KpUA2`NWO4q0V/2J"U,+?VSB3+Y8_4>Aa*1-QgC2`N`Q4q0V/2J"[.+?VSB3&Wr04>Aa*1d3$E2`Na+4q0V/2J"a0+?VSB3FP)\4>Aa*2Ei6G2`Nd,4q0V/2J"g2+?VSB@5C(V4>Aa*3''JHI2`P8(4q0V/2J"m4+?VSB@:;>/4>Aa*@6Per2`P5X4q0V/2J$>]+?VSBA2-7W4>Aa*@m2"t2`P;*4q0V/2J$D_+?VSB@q%V24>Aa*ANh5!2`P>)4q0V/2J$Ja+?VSB@V%_44>Aa+0KpUA2`P8V4q0V/2J+[-+?VSB@l6FZ4>Aa+1-QgC2`P;U4q0V/2J+a/+?VSBARdn54>Aa+1d3$E2`PA-4q0V/2J+g1+?VSBA77Y24>Aa+2Ei6G2`PD[4q0V/2J+m3+?VSBAi)[\4>Aa+3''JHI2`WQN4q0V/2J+s5+?VSC0etp%4>Aa+@6Per2`WTI4q0V/2J-D^+?VSC0f_E,4>Aa+@m2"t2`WX''4q0V/2J-J`+?VSC11EEV4>Aa+ANh5!2`W]K4q0V/2J-Pb+?VSC2D@<(4>AcK0KpUA2`W`S4q0V/2_ZsM+?VSC2.f#]4>AcK1-QgC2`Wa(4q0V/2_[$O+?VSC2)RQ,4>AcK1d3$E2`W`O4q0V/2_[*Q+?VSC2dnlZ4>AcK2Ei6G2`Wg/4q0V/2_[0S+?VSC3+4u[4>AcK3''JHI2`Wm/4q0V/2_[6U+?VSC@5g@Z4>AcK@6Per3G(*W4q0V/2_\])+?VSC@:;>/4>AcK@m2"t2`Y;X4q0V/2_\c++?VSC@P^1W4>AcL0KpUA2`YA.4q0V/2_d$N+?VSCA2QO[4>AcL1-QgC2`YG.4q0V/2_d*P+?VSCARdn54>AcL1d3$E2`YG(4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@(0f;-;4?#931Hl710fLgF4s2sH@5''Z)%6Q@(0fM9=4?$\&A3LGb0fLgq4s2sH@59N#%6Q@(0k*<h4?$\''Aj-Yd0fLgs4s2sH3B/]V%6Q@(0k<Hj4?$\)0g6%/0fLgu4s2sH@5D@V%6Q@(0kNTl4?$\)ANgPc0fLjA4s2sH@5Bi+%6Q@(1,1s84?$\*1Hl710fLjC4s2sH@5Tu-%6Q@(1,D*:4?$\*3Bdm70fLjG4s2sH@5^,0%6Q@(1,hB>4?7"6A3LGb0fLjI4s2sH@5fl(%6Q@(1-%N@4?$\-3Bdm70fLjr4s2sH@5h^\%6Q@(11EEi4?$\.3''Id60fLjt4s2sH@6$81%6Q@(11WQk4?$\/2*MI30fLk!4s2sH@6$;2%6Q@(11i]m4?$\/2EhR40fLmB4s2sH@:;/[%6Q@(1GM''94?$\Y3''Id60fLmD4s2sH@:CoS%6Q@(1G_3;4?$\X2EhR40fLmF4s2sH@:M/Y%6Q@(1Gq?=4?$\Y1d2@20fLmH4s2sH@:Eh4%6Q@(1H.K?4?5)T1Hl710fLmJ4s2sH@:M5[%6Q@(1H@WA4?$\Y@6P,_0fLms4s2sH@:Nh3%6Q@(1L`Nj4?$\YAj-Yd0fLmu4s2sH@:V5Z%6Q@(1LrZl4?$\Z1Hl710fLpC4s2sH@:Wn4%6Q@(1c%<<4?$\[2EhR40fLpG4s2sH@:`t5%6Q@(1c7H>4?$\\0Koq.0fLpI4s2sH@PBQ$%6Q@(1cIT@4?$_''Aj-Yd0fLpK4s2sH@PD4S%6Q@(1c[`B4?$_''2EhR40fLpt4s2sH@P]f(%6Q@(1h8cm4?$_(ANgPc0fLq#4s2sH@P]l*%6Q@(1hJoo4?$_)3''Id60fLsD4s2sH@P]o+%6Q@(2).9;4?$_,0Koq.0fLsF4s2sH@Q.^Z%6Q@(2)@E=4?$_''1d2@20fLsH4s2sH@PhUZ%6Q@(2)RQ?4?$_''@Qk5`0fLsJ4s2sH@PhRY%6Q@(2)d]A4?$_+2*MI30fLsL4s2sH@Q-/.%6Q@(2*!iC4?$_-2*MI30fLsu4s2sH@Q-,-%6Q@(2.A`l4?$_-2a.[50fLt$4s2sH@Q%^[%6Q@(2.f#p4?$_-ANgPc0fM!E4s2sH@Q@s_%6Q@(2DIB<4?$_03''Id60fM!G4s2sH@QA$a%6Q@(2D[N>4?$_/A3LGb0fM!I4s2sH@Q@p^%6Q@(2DmZ@4?$_0@6P,_0fM!K4s2sH@Q7g\%6Q@(2E*fB4?$_01-Q.00fM!M4s2sH@Q7s`%6Q@(2E<rD4?$_,A3LGb0fM"!4s2sH@Q?G4%6Q@(2I\im4?$_Z@Qk5`0fM"#4s2sH@Uh,V%6Q@(2Inuo4?$_Z@m1>a0fM"%4s2sH@Uj"6%6Q@(2J,,q4?$_Y1d2@20fM$F4s2sH@Uh;[%6Q@(2_dK=4?$_[A3LGb0fM$H4s2sH@V%P`%6Q@(2`!W?4?$b)0g6%/0fM$J4s2sH@kff(%6Q@(2`3cA4?$_\2EhR40fM$L4s2sH@V%D\%6Q@(2`EoC4?$b.0Koq.0fM$N4s2sH@k]T#%6Q@(2`X&E4?$b(2a.[50fM%"4s2sH@kfc''%6Q@(2e"rn4?$_]1Hl710fM%$4s2sH@V.P_%6Q@(2e5)p4?$b)2a.[50fM%&4s2sH@k_FW%6Q@(2eG5r4?$_]2EhR40fM''G4s2sH@koi(%6Q@(3&*T>4?$b*2a.[50fM''I4s2sH@kqIV%6Q@(3&<`@4?$b)Aj-Yd0fM''K4s2sH@l$&-%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AcS2*N-F2e+UP4q0V/2`N]Z+?VSm1LrZY4>AcS2a/?H2e+[S4q0V/2`Nc\+?VSm1c%<)4>AcS3BeQJ2e+^%4q0V/2`P50+?VSm1hJo\4>AcS@Qkns2e+Zu4q0V/2`P;2+?VSm2)%3''4>AcSA3M+u2e+^)4q0V/2`PA4+?VSm2.f#]4>AcSAj.>"2e+a&4q0V/2`WQU+?VSm2)[W-4>AcT0g6^B2e+a''4q0V/2`WWW+?VSm2Ieo[4>AcT1HlpD2e+d(4q0V/2`W]Y+?VSm3&<`-4>AcT2*N-F2e+j%4q0V/2`Wc[+?VSm@5L.W4>AcT2a/?H2e-9,4q0V/2`Wi]+?VSm@5:"U4>AcT3BeQJ2e-9*4q0V/2`Y;1+?VSm@50qT4>AcT@Qkns2e-8U4q0V/2`YA3+?VSm@P^1W4>AcTA3M+u2e-;P4q0V/2`YG5+?VSm@PL%U4>AcTAj.>"2e-9-4q0V/2dnC(+?VSm@Q?U]4>Ad''0g6^B2e-<-4q0V/2dnI*+?VSm@k^(U4>Ad''1HlpD2e->T4q0V/2dnO,+?VSm@kp4W4>Ad''2*N-F2e-AX4q0V/2dnU.+?VSmA26=X4>Ad''2a/?H2e-B.4q0V/2dn[0+?VSmAMQFY4>Ad''3BeQJ3FXdR4q0V/2dp,Y+?VSmAS++84>Ad''@Qkns2e-GT4q0V/2dp2[+?VSmAi)[\4>Ad''A3M+u2e-GX4q0V/2dp8]+?VSmAmmk44>Ad''Aj.>"2e4U#4q0V/2e"I)+?VSn0JYg$4>Ad(0g6^B2e4XQ4q0V/2e"O++?VSn0f;-(4>Ad(1HlpD2e4UN4q0V/2e"U-+?VSn1c7H+4>Ad(2*N-F2e4aS4q0V/2e"[/+?VSn11`WY4>Ad(2a/?H2e4^"4q0V/2e"a1+?VSn1M/f[4>Ad(3BeQJ2e4^%4q0V/2e$2Z+?VSn1c@N,4>Ad(@Qkns2e4j''4q0V/2e$8\+?VSn2)[W-4>Ad(A3M+u2e4aV4q0V/2e$>^+?VSn2_mQ+4>Ad(Aj.>"2e4g+4q0V/2e+O*+?VSn2J#&]4>Ad)0g6^B2e4aW4q0V/2e+U,+?VSn2D[N+4>Ad)1HlpD2e4p)4q0V/2e+[.+?VSn3&s/34>Ad)2*N-F2e4dT4q0V/2e+a0+?VSn3+b>`4>Ad)2a/?H2e4jX4q0V/2e+g2+?VSn3FY/]4>Ad)3BeQJ2e6B+4q0V/2e-8[+?VSn@:_V34>Ad)@Qkns2e6>Q4q0V/2e->]+?VSn@Pp=Y4>Ad)A3M+u2e6DW4q0V/2e-D_+?VSn@UqY34>Ad)Aj.>"2e6?+4q0V/2e4U++?VSo1LrZY4>Ad*0g6^B2e6>P4q0V/2e4[-+?VSn@:h\44>Ad*1HlpD2e6H/4q0V/2e4a/+?VSn@Q6O\4>Ad*2*N-F2e4p\4q0V/2e4g1+?VSn@PBtT4>Ad*2a/?H2e6GY4q0V/2e4m3+?VSnA7Rk54>Ad*3BeQJ2e6JV4q0V/2e6>\+?VSnA7[q64>Ad*@Qkns2e6N04q0V/2e6D^+?VSnAhlOZ4>Ad*A3M+u2e6JS4q0V/2e6J`+?VSo0Ju$''4>Ad*Aj.>"2e=[O4q0V/2e=[,+?VSo1,D*''4>Ad+0g6^B2e=a!4q0V/2e=a.+?VSo0etp%4>Ad+1HlpD2e=d"4q0V/2e=g0+?VSo0kNTY4>Ad+2*N-F2e=[''4q0V/2e=m2+?VSo0Od3T4>Ad+2a/?H2e=a"4q0V/2e=s4+?VSo1c@N,ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0fNZ(4s2sHAMuG1%6Q@(ARRbF4?$h-@Qk5`0fNZQ4s2sHAMZ2-%6Q@(ARdnH4?$h-3Bdm70fNZS4s2sHAMc2,%6Q@(AS"%J4?$h-2a.[50fNZU4s2sHAMZ)*%6Q@(AhZCk4?$h-@6P,_0fN]!4s2sHAMuJ2%6Q@(AhlOm4?$h/A3LGb0fN]#4s2sHAMlA0%6Q@(Ai)[o4?$h/ANgPc0fN]''4s2sHAN)V5%6Q@(AiMss4?$h0@6P,_0fN])4s2sHAMuP4%6Q@(AmmkG4?$h1@m1>a0fN]R4s2sHAN+''^%6Q@(An+"I4?$h21Hl710fN]T4s2sHA7RP]%6Q@(An=.K4?$h1A3LGb0fN]V4s2sIAmo77%6Q@)0JG[54?$h1Aj-Yd0fUjC4s2sHAN40`%6Q@)0Jks94?$h31-Q.00fUjE4s2sHAN;G.%6Q@)0K;6=4?$h32EhR40fUjI4s2sHAN46b%6Q@)0Om9h4?$k.3''Id60fUjt4s2sHAi!jZ%6Q@)0P*Ej4?$k/2*MI30fUmE4s2sHAi2G0%6Q@)0f;-;4?$k01d2@20fUmG4s2sHAi2P3%6Q@)0k*<h4?$k12a.[50fUmt4s2sHAiD\5%6Q@)0k<Hj4?$k31-Q.00fUn!4s2sHAiM\4%6Q@)0kNTl4?$k31Hl710fUpB4s2sHAiMb6%6Q@)1,1s84?$k32a.[50fUpD4s2sHAiO9a%6Q@)1,D*:4?$k41d2@20fUpF4s2sHAiXEd%6Q@)1,V6<4?$k4A3LGb0fUpH4s2sHAiX9`%6Q@)1,hB>4?$k\1Hl710fUpJ4s2sHAmo:8%6Q@)1-%N@4?$k]1-Q.00fUps4s2sHAn!ba%6Q@)11EEi4?$k\ANgPc0fUpu4s2sHAn!Y^%6Q@)11WQk4?$k]3''Id60fUq"4s2sI@Q-#*%6Q@)1GM''94?$k^@6P,_0fUsE4s2sHAn3b_%6Q@)1G_3;4?$k_1d2@20fUsG4s2sHAn<\\%6Q@)1Gq?=4?$k`2EhR40fUsI4s2sHAn<td%6Q@)1H.K?4?$ka1Hl710fUsK4s2sHAnF%e%6Q@)1H@WA4?5B3@m1>a0fUst4s2sI0JGCK%6Q@)1L`Nj4?,#K1d2@20fUt!4s2sI0JHs"%6Q@)1LrZl4?,#L1-Q.00fV!D4s2sI0JR''$%6Q@)1bh0:4?,#M0g6%/0fV!F4s2sI0JYUO%6Q@)1c%<<4?,#NAj-Yd0fV!H4s2sI0Jd0%%6Q@)1c7H>4?,#O@6P,_0fV!J4s2sI0Jk[O%6Q@)1cIT@4?,#P1-Q.00fV!L4s2sI0JtgR%6Q@)1c[`B4?,#P@6P,_0fV!u4s2sI0K!H+%6Q@)1h&Wk4?,#Q1-Q.00fV""4s2sI0K(mS%6Q@)1h8cm4?,#R1Hl710fV"$4s2sI0K1aN%6Q@)1hJoo4?,#R0Koq.0fV$E4s2sI0K1mR%6Q@)2).9;4?,#R3Bdm70fV$G4s2sI0K3N+%6Q@)2)@E=4?,#RAj-Yd0fV$I4s2sI0K:mQ%6Q@)2)RQ?4?,#S2EhR40fV$K4s2sI0K:pR%6Q@)2)d]A4?,#T@Qk5`0fV$M4s2sI0KCpQ%6Q@)2*!iC4?,#T@6P,_0fV%!4s2sI0O\KU%6Q@)2.A`l4>eiR0Koq.0fV%#4s2sI0O\HT%6Q@)2.Sln4?,$*@Qk5`0fV%%4s2sI0P*+*%6Q@)2.f#p4?,$*3Bdm70fV''F4s2sI0P"]X%6Q@)2DIB<4?,$)1d2@[DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c3&WNU+?VV;A77Y24>AfR1HlpD3&"l$4q0V/3&WTW+?VV<0KD<+4>AfR2*N-F3&"oU4q0V/3&WZY+?VV;AhcIY4>AfR2a/?H3&*-s4q0V/3&W`[+?VV<1-%N-4>AfR3BeQJ3&*0E4q0V/3&Y2/+?VV<11i]Z4>AfR@Qkns3&*7!4q0V/3&Y81+?VYB3+>&\4>AfRA3M+u3&*6J4q0V/3&Y>3+?VV<1M&`Z4>AfRAj.>"3&*9H4q0V/3&`NT+?VV<2).9(4>AfS0g6^B3&"rS4q0V/3&`TV+?VV<2_dK*4>AfS1HlpD3&*=&4q0V/3&``Z+?VV<2`*]-4>AfS2a/?H3&*BK4q0V/3&`f\+?VV<3&j)24>AfS3BeQJ3&*C$4q0V/3&b80+?VV<3&!N*4>AfS@Qkns3&*BJ4q0V/3&b>2+?VV<@5''kS4>AfSA3M+u3&*EN4q0V/3&bD4+?VV<@5L.W4>AfSAj.>"3&+ht4q0V/3&iTU+?VV<2.f#]4>AfT0g6^B3&*EL4q0V/3&iZW+?VV<@6$L\4>AfT1HlpD3&+kr4q0V/3&i`Y+?VV<@Pp=Y4>AfT2*N-F3&+lR4q0V/3&if[+?VV<@Q6O\4>AfT2a/?H3&+lQ4q0V/3&il]+?VV<@k^(U4>AfT3BeQJ3&+nu4q0V/3&k>1+?VV<@UVG04>AfT@Qkns3&+o''4q0V/3&kD3+?VV<@q7b44>AfTA3M+u3&+qu4q0V/3&kJ5+?VV<A2ug_4>AfTAj.>"3&+r''4q0V/3&rZV+?VV<@lQX]4>AfU0g6^B3&+rP4q0V/3&rfZ+?VV<AN)d^4>AfU2a/?H3&,#V4q0V/3&tD2+?VV=0Ju$''4>AfU@Qkns3&30H4q0V/3&tJ4+?VV=0O[-S4>AfUA3M+u3&30u4q0V/3&tP6+?VV=0ebd#4>AfUAj.>"3&33H4q0V/3+4L)+?VV=1-%N-4>Ag(0g6^B3&36u4q0V/3+4R++?VV=1H7Q-4>Ag(1HlpD3&39G4q0V/3+4X-+?VV=1b_*&4>Ag(2*N-F3&3?O4q0V/3+4^/+?VV=2)mc/4>Ag(2a/?H3&3@%4q0V/3+4d1+?VV=2.8ZX4>Ag(3BeQJ3&3@''4q0V/3+65Z+?VV=2DdT,4>Ag(@Qkns3&3BI4q0V/3+6;\+?VV=2E3l04>Ag(Aj.>"3&37#4q0V/3+=R*+?VV=2_dK*4>Ag)1HlpD3&3F(4q0V/3+=^.+?VV=3+P2^4>Ag)2*N-F3&3KL4q0V/3+=d0+?VV=@:DD04>Ag)2a/?H3&3L+4q0V/3+=j2+?VV=@U_M14>Ag)3BeQJ3&4oP4q0V/3+?;[+?VV=AMH@X4>Ag)@Qkns3&5&$4q0V/3+?A]+?VV=A7e"74>Ag)A3M+u3&5#"4q0V/3+?G_+?VV=Ai)[\4>Ag)Aj.>"3&5)%4q0V/3+FX++?VV=Ammk44>Ag*0g6^B3&<QN4q0V/3+F^-+?VV>0Jbm%4>Ag*1HlpD3&5)T4q0V/3+Fd/+?VV=AiW$a4>Ag*2*N-F3&5#U4q0V/3+Fj1+?VV>0K)*(4>Ag*2a/?H3&5#S4q0V/3+Fp3+?VV>0KD<+4>Ag*3BeQJ3&5#)4q0V/3+HA\+?VV>1Gq?*4>Ag*@Qkns3&<?I4q0V/3+HG^+?VV>0fD3)4>Ag*A3M+u3&<?G4q0V/3+HM`+?VV>1GM''&4>Ag*Aj.>"3&<BF4q0V/3+O^,+?VV>1H@W.4>Ag+0g6^B3&<EG4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@)A26=k4?,,R2*MI30fW]"4s2sI1GWQ+%6Q@)A2HIm4?,,P@Qk5`0fW]&4s2sI1H76U%6Q@)A2laq4?,,W@6P,_0fW](4s2sI1LX]U%6Q@)A77YE4?,,WAj-Yd0fW]Q4s2sI1LW%&%6Q@)A7IeG4?,,W2EhR40fW]S4s2sI1GUaM%6Q@)A7[qI4?,,VANgPc0fW]U4s2sI1H7<W%6Q@)AM?:j4?,,V@6P,_0fW`!4s2sI1H/f-%6Q@)AMQFl4?,-+2*MI30fW`#4s2sI1H.*R%6Q@)AMcRn4?,,U2*MI30fW`%4s2sI1LVt$%6Q@)AMu^p4?,,V3Bdm70fW`''4s2sI1LW7,%6Q@)AN2jr4?,-/1d2@20fW`)4s2sI1bgdM%6Q@)ARRbF4?,-.@Qk5`0fW`R4s2sI1Lju[%6Q@)ARdnH4?,-/A3LGb0fW`T4s2sI1b^^L%6Q@)AS"%J4?,--3''Id60fW`V4s2sI1b`B&%6Q@)AhZCk4?,-,0g6%/0fWc"4s2sI1M/R0%6Q@)AhlOm4?,/O2a.[50fWc$4s2sI1M&7(%6Q@)Ai)[o4?,-/1-Q.00fWc&4s2sI1b`H(%6Q@)Ai;gq4?,/Q1-Q.00fWc(4s2sI1bpaK%6Q@)AiMss4?,-+A3LGb0fWc*4s2sI1c%*T%6Q@)AmmkG4?,2P2EhR40fWcS4s2sI1M1)[%6Q@)An+"I4?,/UA3LGb0fWcU4s2sI1brK''%6Q@)An=.K4?,/R@m1>a0fWcW4s2sI2)Sf+%6Q@*0JG[54?,/W1d2@20f^pB4s2sI1cI?W%6Q@*0JYg74?,/U@Qk5`0f^pD4s2sI1gsoY%6Q@*0Jks94?,/UANgPc0f^pF4s2sI1cR6S%6Q@*0K)*;4?,/U3Bdm70f^pH4s2sI1c.*S%6Q@*0K;6=4?,/Q@m1>a0f^pJ4s2sI1cAr0%6Q@*0O[-f4?,/V3Bdm70f^ps4s2sI1c%!Q%6Q@*0Om9h4?,0-@6P,_0f^pu4s2sI1c@*Q%6Q@*0P*Ej4?,0,3Bdm70f^q"4s2sI1h(&\%6Q@*0ebd64?,/XAj-Yd0f^sC4s2sI1h8U1%6Q@*0etp84?,0-A3LGb0f^sE4s2sI1h''oX%6Q@*0f2'':4?,0.@6P,_0f^sG4s2sI1h8:(%6Q@*0fD3<4?,0-0g6%/0f^sI4s2sI1h/F-%6Q@*0fV?>4?,0.2EhR40f^sK4s2sI1gr+&%6Q@*0k!6g4?,2R0g6%/0f^st4s2sI1hL>`%6Q@*0k3Bi4?,001d2@20f^t#4s2sI2)8Z*%6Q@*1,(m74?,2QAj-Yd0f_!D4s2sI2)-sP%6Q@*1,;$94?,2Q1d2@20f_!F4s2sI1hL5]%6Q@*1,M0;4?,2T0Koq.0f_!H4s2sI2)[6S%6Q@*1,_<=4?,2U3''Id60f_!J4s2sI2)I9V%6Q@*1,qH?4?,2T0g6%/0f_!L4s2sI2D?mM%6Q@*11<?h4?,2T@Qk5`0f_!u4s2sI2)R6T%6Q@*11NKj4?,2X0Koq.0f_""4s2sI2.8=*%6Q@*11`Wl4?,2X3''Id60f_"$4s2sI2*!BT%6Q@*1GD!84?,2X@6P,_0f_$E4s2sI2.8I.%6Q@*1GV-:4?,2VA3LGb0f_$G4s2sI2*!KW%6Q@*1Gh9<4?,2Y@Qk5`0f_$I4s2sI2.^2[%6Q@*1H%E>4?,2X2a.[50f_$K4s2sI2*#/1%6Q@*1H7Q@4?,2W2a.[50f_$M4s2sI2)f)1%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AiP@6Per3&N]M4q0V/3AY,.+?VV@@lZ^^4>AiP@m2"t3&P/R4q0V/3AY20+?VV@@qIn64>AiPANh5!3&P/*4q0V/3AY82+?VV@A2$1V4>AiQ0KpUA3&P5(4q0V/3A`HS+?VV@A7Rk54>AiQ1-QgC3&P8)4q0V/3A`NU+?VV@A7Ie44>AiQ1d3$E3&P;.4q0V/3A`TW+?VVA0O[-S4>AiQ2Ei6G3&WKI4q0V/3A`ZY+?VVA0Od3T4>AiQ3''JHI3&P;Z4q0V/3A``[+?VV@Ammk44>AiQ@6Per3&WHK4q0V/3Ab2/+?VVA1,;$&4>AiQ@m2"t3&WL"4q0V/3Ab81+?VVA1GD!%4>AiQANh5!3&WR)4q0V/3Ab>3+?VVA1h8cZ4>AiR0KpUA1hAO%4q0V/3AiNT+?VVA2)IK+4>AiR1-QgC3&WX+4q0V/3AiTV+?VVA2E*f/4>AiR1d3$E3&W]M4q0V/3AiZX+?VVA3AWi.4>AiR2Ei6G3&Y2$4q0V/3Ak80+?VVA@Q$CZ4>AiR@m2"t3&Y2W4q0V/3Ak>2+?VVA@l-@Y4>AiRANh5!3&Y8)4q0V/3AkD4+?VVA@PBtT4>AiS0KpUA3&Y8,4q0V/3ArTU+?VVC1,D*''4>AiS1-QgC3&Y2S4q0V/3ArZW+?VVAA2HIZ4>AiS1d3$E3&Y;Y4q0V/3Ar`Y+?VVAAN;p`4>AiS2Ei6G3&Y>X4q0V/3Arf[+?VVAA7e"74>AiS3''JHI3&Y;V4q0V/3Arl]+?VVAAS++84>AiS@6Per3&`QI4q0V/3At>1+?VVB0K)*(4>AiS@m2"t3&`NN4q0V/3AtD3+?VVB0JG["4>AiSANh5!3&`NI4q0V/3AtJ5+?VVAAn!q54>AiT0KpUA3&`QH4q0V/3B&ZV+?VVB0KD<+4>AiT1-QgC3&`O%4q0V/3B&`X+?VVAAiW$a4>AiT1d3$E3&`O"4q0V/3B&fZ+?VVB1Gh9)4>AiT2Ei6G3&`X*4q0V/3B&l\+?VVB1H.K,4>AiT3''JHI3&`X&4q0V/3B&r^+?VVB1,V6)4>AiT@6Per3&`TQ4q0V/3B(D2+?VVB0k!6T4>AiT@m2"t3&``L4q0V/3B(J4+?VVB2.f#]4>AiTANh5!3&`cU4q0V/3B(P6+?VVB1h/]Y4>AiU0KpUA3&`[*4q0V/3B/`W+?VVB2`*]-4>AiU1-QgC3&`]R4q0V/3B/fY+?VVB2E3l04>AiU1d3$E3&`a,4q0V/3B/l[+?VVB2*!i04>AiU2Ei6G3&`]N4q0V/3B/r]+?VVB2D[N+4>AiU3''JHI3&`a(4q0V/3B0#_+?VVC0Ju$''4>AiU@6Per3&b8$4q0V/3B1J3+?VVB3G(Ga4>AiU@m2"t3&`fP4q0V/3B1P5+?VVB@:h\44>AiUANh5!3&b>V4q0V/3B1V7+?VVB@UqY34>AiV0KpUA3&b>$4q0V/3B8fX+?VVBA2$1V4>AiV1-QgC3AtD+4q0V/3B8lZ+?VVB@:DD04>AiV1d3$E3&b>(4q0V/3B8r\+?VVB@P^1W4>AiV2Ei6G3&b>+4q0V/3B9#^+?VVB@l?L[4>AiV3''JHI3&b;U4q0V/3B9)`+?VVBAS++84>AiV@6Per3&bG)4q0V/3B:P4+?VVBAM?:W4>AiV@m2"t3&iU(4q0V/3B:V6+?VVC0P!?V4>AiVANh5!3&bG\4q0V/3FOX++?VVC0P*EW4>Aj)1-QgC3&bA''4q0V/3FO^-+?VVC0ekj$ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0f`Z!4s2sI3&*<T%6Q@*@5U4k4?,;T2*MI30f`Z#4s2sI3&36Q%6Q@*@5g@m4?,;U0g6%/0f`Z%4s2sI3&<9Q%6Q@*@6$Lo4?,;V2EhR40f`ZN4s2sI3&<QY%6Q@*@:DDC4?,;U2a.[50f`ZP4s2sI3&>#-%6Q@*@:VPE4?,;W1d2@20f`ZR4s2sI3&EBS%6Q@*@:h\G4?,;X1-Q.00f`\s4s2sI3&N][%6Q@*@PL%h4?,;XANgPc0f`\u4s2sI3&WNU%6Q@*@P^1j4?,;Y@Qk5`0f`]"4s2sI3&iWV%6Q@*@Pp=l4?,;ZANgPc0f`]$4s2sI3&tP6%6Q@*@Q-In4?,;Z2*MI30f`]&4s2sI3&bA3%6Q@*@Q?Up4?,<02*MI30f`]O4s2sI3&`TV%6Q@*@U_MD4?,;[1-Q.00f`]Q4s2sI3&ro]%6Q@*@UqYF4?,;\1-Q.00f`]S4s2sI3+6A^%6Q@*@V.eH4?,;\3Bdm70f`_t4s2sI3+4R+%6Q@*@kg.i4?,;[A3LGb0f``!4s2sI3+4X-%6Q@*@l$:k4?,<00Koq.0f``#4s2sI3+?J`%6Q@*@l6Fm4?,<00g6%/0f``''4s2sI3+Oj0%6Q@*@q%VE4?,<2A3LGb0f``R4s2sI3+b07%6Q@*@q7bG4?,>T1-Q.00f``T4s2sI3+cYa%6Q@*@qInI4?,<41d2@20f`bu4s2sI3+Y''5%6Q@*A2-7j4?,<41-Q.00f`c"4s2sI3A<9R%6Q@*A2?Cl4?,>T@m1>a0f`c$4s2sI3A=l*%6Q@*A2QOn4?,>U1Hl710f`c&4s2sI3A`NU%6Q@*A2c[p4?,>UANgPc0f`c(4s2sI3ANHU%6Q@*A7@_F4?,>X0g6%/0f`cS4s2sI3A`QV%6Q@*A7RkH4?,>W@Qk5`0f`cU4s2sI3AWQW%6Q@*A7e"J4?,>W3''Id60f`f!4s2sI3Ab50%6Q@*AMH@k4?,>UA3LGb0f`f#4s2sI3ArQT%6Q@*AMZLm4?,>YANgPc0f`f%4s2sI3ArcZ%6Q@*AMlXo4?,>Z1d2@20f`f''4s2sI3AtD3%6Q@*AN)dq4?,>Z@6P,_0f`f)4s2sI3AtJ5%6Q@*AN;ps4?,>[1d2@20f`fR4s2sI3B&l\%6Q@*AR[hG4?,>[ANgPc0f`fT4s2sI3B/fY%6Q@*ARmtI4?,>\3''Id60f`fV4s2sI3B1G2%6Q@*AS++K4?,>]1Hl710f`i"4s2sI3B9&_%6Q@*AhcIl4?,?00g6%/0f`i$4s2sI3FOp3%6Q@*AhuUn4?,?02EhR40f`i&4s2sI3FQD]%6Q@*Ai2ap4?,?0Aj-Yd0f`i(4s2sI3FXa-%6Q@*AiDmr4?,?1@6P,_0f`i*4s2sI3FZM_%6Q@*An!qH4?,?3@6P,_0f`iW4s2sI3Ft-5%6Q@*AnF4L4?,?51d2@20juai4s2sI3G(67%6Q@R0JPa64?-b''1Hl710juak4s2sI@50Z(%6Q@R0Jbm84?-b(0Koq.0juam4s2sI@5)1T%6Q@R0Ju$:4?-b(@Qk5`0juao4s2sI@52:V%6Q@R0K20<4?-b)2*MI30juaq4s2sI@5Bf*%6Q@R0KD<>4?-b+0g6%/0jubE4s2sI@5VLX%6Q@R0Od3g4?-b,1-Q.00jubG4s2sI@5Kl+%6Q@R0P!?i4?-b+3''Id60jubI4s2sI@5h[[%6Q@R0P3Kk4?-b-A3LGb0judj4s2sI@5_UZ%6Q@R0ekj74?-b-1-Q.YDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c@50N$+?VVl3&Nl/4>C8!1HlpD3+4d%4q0V/@50T&+?VVl3&Ef.4>C8!2*N-F3+65T4q0V/@50Z(+?VVl@50qT4>C8!2a/?H3+4g%4q0V/@521S+?VVl3FP)\4>C8!@Qkns3+65O4q0V/@527U+?VVl@l-@Y4>C8!A3M+u3+6<-4q0V/@52=W+?VVl@kp4W4>C8!Aj.>"3+6?+4q0V/@59N#+?VVlAR[h44>C8"0g6^B3+6DT4q0V/@59T%+?VVlAN)d^4>C8"1HlpD3+6AT4q0V/@59Z''+?VVlAhcIY4>C8"2*N-F3+=U!4q0V/@59`)+?VVlAM?:W4>C8"2a/?H3+6AR4q0V/@59f++?VVlAiDm_4>C8"3BeQJ3+6?/4q0V/@5;7T+?VVlA7@_34>C8"@Qkns3+=RO4q0V/@5;=V+?VVm0K20)4>C8"A3M+u3+=UN4q0V/@5;CX+?VVlAMH@X4>C8"Aj.>"3+=U#4q0V/@5BT$+?VVm0ebd#4>C8#0g6^B3+=U$4q0V/@5BZ&+?VVm1,(m$4>C8#1HlpD3+=["4q0V/@5B`(+?VYC@:DD04>C8#2*N-F3+=X$4q0V/@5Bf*+?VVm11EEV4>C8#2a/?H3+=[T4q0V/@5Bl,+?VVm1,qH,4>C8#3BeQJ3+=^!4q0V/@5D=U+?VVm1h/]Y4>C8#@Qkns3+=^V4q0V/@5DCW+?VVm1hAi[4>C8#A3M+u3+=^)4q0V/@5DIY+?VVm2)[W-4>C8#Aj.>"3+=aS4q0V/@5KZ%+?VVm2.8ZX4>C8$0g6^B3+=dT4q0V/@5K`''+?VVm2.f#]4>C8$1HlpD3+=dU4q0V/@5Kf)+?VVm2J,,^4>C8$2*N-F3+=g''4q0V/@5Kl++?VVm2e5)]4>C8$2a/?H3+=j$4q0V/@5Kr-+?VVm3+G,]4>C8$3BeQJ3+=jY4q0V/@5MIX+?VVm3As&14>C8$Aj.>"3+FaQ4q0V/@5T`&+?VVn1bh0''4>C8%0g6^B3+FaV4q0V/@5Tf(+?VVn1cRZ.4>C8%1HlpD3+FdT4q0V/@5Tl*+?VVn1hAi[4>C8%2*N-F3+Fg"4q0V/@5Tr,+?VVn2)RQ,4>C8%2a/?H3+Fj%4q0V/@5U#.+?VVn2Ieo[4>C8%3BeQJ3+Fm,4q0V/@5VIW+?VVn2dnlZ4>C8%@Qkns3+Fp''4q0V/@5VOY+?VVn3&s/34>C8%A3M+u3+Fp*4q0V/@5VU[+?VVn3+4u[4>C8&0g6^B3+Fs*4q0V/@5]l)+?VVn2e,#\4>C8&1HlpD3+Fs.4q0V/@5]r++?VP;0k<HW4>C8&2*N-F3+HB-4q0V/@5^#-+?VVn@:;>/4>C8&2a/?H3+HE.4q0V/@5_OX+?VVn@:_V34>C8&@Qkns3+HDU4q0V/@5_UZ+?VVn@lQX]4>C8&A3M+u3+HGQ4q0V/@5_[\+?VVnAMcR[4>C8&Aj.>"3+HMU4q0V/@5fl(+?VVnA77Y24>C8''0g6^B3+HQ24q0V/@5g).+?VVo0O[-S4>C8''2a/?H3+O^%4q0V/@5g/0+?VVo0P3KX4>C8''3BeQJ3+O^R4q0V/@5hUY+?VVo0ebd#4>C8''@Qkns3G(*Z4q0V/@5h[[+?VVo0f)!&4>C8''A3M+u3+HH/4q0V/@5ha]+?VVo0f2''''4>C8''Aj.>"3+Oa%4q0V/@5or)+?VVo2E*f/4>C8(0g6^B3+OpX4q0V/@5p#++?VVo2_dK*4>C8(1HlpD3+Os(4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@R3&EfA4?-k20g6%/0k!%!4s2sIA2uY6%6Q@R3&WrC4?-k]1-Q.00k!%#4s2sIA7B+6%6Q@R3&j)E4?-k\@6P,_0k!%%4s2sIA7K48%6Q@R3+4un4?-k^@6P,_0k!%N4s2sIA7RS^%6Q@R3+G,p4?-k]@m1>a0k!%P4s2sIA7T.5%6Q@R3+Y8r4?-k]@Qk5`0k!''s4s2sIA7T:9%6Q@R3ANc@4?-k_1Hl710k!''u4s2sIA7f=8%6Q@R3As&D4?-k`Aj-Yd0k!(&4s2sIAMGl&%6Q@R3FP)o4?-n,Aj-Yd0k!(O4s2sIAMc/+%6Q@R3Fb5q4?-n.2*MI30k!(Q4s2sIAMZ#(%6Q@R3FtAs4?-n.1d2@20k!(S4s2sIAMdgZ%6Q@R@5''kf4?-n/2a.[50k"KF4s2sIAMcD2%6Q@R@5:"h4?-n/@m1>a0k"KH4s2sIAMl/*%6Q@R@5L.j4?-n/3''Id60k"KJ4s2sIAMlJ3%6Q@R@5^:l4?-n11d2@20k"KL4s2sIAMu5+%6Q@R@5pFn4?-n-@6P,_0k"KN4s2sIAMu>.%6Q@R@:;>B4?-n02*MI30k"L"4s2sIAN)M2%6Q@R@:MJD4?-n21-Q.00k"L$4s2sIAN+*_%6Q@R@:_VF4?-n30g6%/0k"L&4s2sIAN2V4%6Q@R@PBtg4?-n32*MI30k"NG4s2sIAN2M1%6Q@R@PU+i4?-n3@Qk5`0k"NI4s2sIAN4*^%6Q@R@Pg7k4?-n41Hl710k"NK4s2sIAN;J/%6Q@R@Q$Cm4?-n41d2@20k"NM4s2sIAN;b7%6Q@R@Q6Oo4?-n\@6P,_0k"NO4s2sIARR;W%6Q@R@UVGC4?-n\@m1>a0k"O#4s2sIAR[>W%6Q@R@UhSE4?-n^2EhR40k"O%4s2sIAR[AX%6Q@R@V%_G4?-n]ANgPc0k"O''4s2sIARdS]%6Q@R@k^(h4?-n^3''Id60k"QH4s2sIARf15%6Q@R@kp4j4?-n_@Qk5`0k"QJ4s2sIAS!Y]%6Q@R@l-@l4?-na@m1>a0k"QL4s2sIAS,C8%6Q@R@l?Ln4?-n`@Qk5`0k"QN4s2sIAS,L;%6Q@R@lQXp4?-q,@6P,_0k"QP4s2sIAhZ)+%6Q@R@pqPD4?-q-2*MI30k"R$4s2sIAhc&)%6Q@R@q.\F4?-q-3Bdm70k"R&4s2sIAhc)*%6Q@R@q@hH4?-q-@m1>a0k"R(4s2sIAhdm]%6Q@RA2$1i4?-q-@Qk5`0k"TI4s2sIAh[^Y%6Q@RA26=k4?-q.2EhR40k"TK4s2sIAhu5,%6Q@RA2HIm4?-q/@Qk5`0k"TM4s2sIAhuG2%6Q@RA2ZUo4?-q02*MI30k"TO4s2sIAi)8,%6Q@RA2laq4?-q/ANgPc0k"TQ4s2sIAi+!]%6Q@RA77YE4?-q03Bdm70k"U%4s2sIAi)D0%6Q@RA7IeG4?-q0ANgPc0k"U''4s2sIAi2M2%6Q@RA7[qI4?-q1@m1>a0k"WK4s2sIAiX?b%6Q@RAMZLm4?-q5Aj-Yd0k"WM4s2sIAmmJZ%6Q@RAMlXo4?-q]A3LGb0k"WO4s2sIAmo:8%6Q@RAN)dq4?-q^2a.[50k"WQ4s2sIAn5=6%6Q@RAN;ps4?-qa2*MI30k"X%4s2sIAn<_]%6Q@RAR[hG4?-qa@6P,_0k"X''4s2sIAn>R<%6Q@RARmtI4?5)T2a.[50k"X)4s2sIAnEk`%6Q@RAS++K4?5)L2*MI30k"ZL4s2sJ0JP:G%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>C8V1HlpD3A<0F4q0V/@:h>[+?VY<1,1s%4>C8V2*N-F3A<-t4q0V/@:hD]+?VY<0kENX4>C8V2a/?H3A<0G4q0V/@:hJ_+?VY<0Od3T4>C8V3BeQJ3A<3I4q0V/@:iq3+?VY<1H%E+4>C8V@Qkns3A<6H4q0V/@:j"5+?VY<1H@W.4>C8VA3M+u3+cb^4q0V/@PBQ$+?VY<0P*EW4>C;!1HlpD3A<9M4q0V/@PBW&+?VY<1M&`Z4>C;!2*N-F3A<<K4q0V/@PB](+?VY<2)mc/4>C;!2a/?H3A<=%4q0V/@PBc*+?VY<2E3l04>C;!3BeQJ3A<@''4q0V/@PD4S+?VY<2`<i/4>C;!@Qkns3At;*4q0V/@PD:U+?VY<2_mQ+4>C;!A3M+u3A<EJ4q0V/@PD@W+?VY<2e5)]4>C;!Aj.>"3A<EI4q0V/@PKQ#+?VY<3&!N*4>C;"0g6^B3A<F$4q0V/@PKW%+?VY<3&s/34>C;"1HlpD3A<F)4q0V/@PK]''+?VY<@5pF[4>C;"2*N-F3A=lR4q0V/@PKc)+?VY<@PL%U4>C;"2a/?H3A=o"4q0V/@PKi++?VY<AMQFY4>C;"3BeQJ3A>#$4q0V/@PM:T+?VP;1cRZ.4>C;"@Qkns3A=uQ4q0V/@PM@V+?VY=0JYg$4>C;"A3M+u3AE6D4q0V/@PMFX+?VY=0f_E,4>C;"Aj.>"3AE<F4q0V/@PTW$+?VY=1GD!%4>C;#0g6^B3AE@!4q0V/@PT]&+?VY=2)[W-4>C;#1HlpD3AEBN4q0V/@PTc(+?VY=2D[N+4>C;#2*N-F3AEEL4q0V/@PTi*+?VY=2E<r14>C;#2a/?H3AEHK4q0V/@PTo,+?VY=2_mQ+4>C;#3BeQJ3AEL&4q0V/@PV@U+?VY=3&s/34>C;#@Qkns3AEKK4q0V/@PVFW+?VY=@5:"U4>C;#A3M+u3AFrO4q0V/@PVLY+?VY=@:h\44>C;#Aj.>"3AFrN4q0V/@P]]%+?VY=@Pp=Y4>C;$0g6^B3AFu"4q0V/@P]c''+?VY=@UVG04>C;$2*N-F3AG#(4q0V/@P]o++?VY=@q%V24>C;$2a/?H3AG%u4q0V/@P]u-+?VY=A2ZU\4>C;$3BeQJ3AG&V4q0V/@P_FV+?VY=AMH@X4>C;$@Qkns3AG&R4q0V/@P_LX+?VY=An+"64>C;$Aj.>"3AN=#4q0V/@Pfc&+?VY=AnF494>C;%0g6^B3AN<G4q0V/@Pfi(+?VY>11NKW4>C;%1HlpD3AN<H4q0V/@Pfo*+?VY>0ekj$4>C;%2*N-F3ANI''4q0V/@Pfu,+?VY>2)d].4>C;%2a/?H3ANEK4q0V/@Pg&.+?VY>1c[`/4>C;%3BeQJ3ANKL4q0V/@PhLW+?VY>1cRZ.4>C;%@Qkns3ANTP4q0V/@PhRY+?VY>1M/f[4>C;%A3M+u3ANF#4q0V/@PhX[+?VY>2)%3''4>C;%Aj.>"3ANU)4q0V/@Poi''+?VY>3As&14>C;&0g6^B3ANTN4q0V/@Poo)+?VY>3FY/]4>C;&1HlpD3ANI#4q0V/@Pou++?VY>@qIn64>C;&2*N-F3AP&(4q0V/@Pp&-+?VY>@Q-I[4>C;&2a/?H3AP/+4q0V/@Pp,/+?VY?0P3KX4>C;&3BeQJ3AP2T4q0V/@PqRX+?VY?1c.B*4>C;&@Qkns3AWF%4q0V/@PqXZ+?VY?0f_E,4>C;&A3M+u3AWEG4q0V/@Pq^\+?VY?0k!6TASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0k*"P4s2sJ1GUaM%6Q@S2D@<;4?52R@6P,_0k*$q4s2sJ1G^mP%6Q@S2DRH=4?52R@Qk5`0k*$s4s2sJ1GrZ+%6Q@S2DdT?4?52U0Koq.0k*$u4s2sJ1H/f-%6Q@S2E!`A4?52UANgPc0k*%"4s2sJ1Gq''S%6Q@S2E3lC4?53,0Koq.0k*%M4s2sJ1H@9U%6Q@S2Ieon4?53,3Bdm70k*%Q4s2sJ1M&O0%6Q@S2_[E<4?53/2*MI30k*''r4s2sJ1LrI/%6Q@S2_mQ>4?53-1Hl710k*''t4s2sJ1Lt#[%6Q@S2`*]@4?53.0Koq.0k*(!4s2sJ1LiC.%6Q@S2`<iB4?53/1d2@20k*(#4s2sJ1biE&%6Q@S2`NuD4?55Q1d2@20k*(%4s2sJ1bgdM%6Q@S2dnlm4?55P1Hl710k*(N4s2sJ1b^jP%6Q@S2e,#o4?55Q0Koq.0k*(P4s2sJ1c%$R%6Q@S2e>/q4?55R@Qk5`0k*(R4s2sJ1c%!Q%6Q@S3&!N=4?55R0g6%/0k**s4s2sJ1c&Q(%6Q@S3&3Z?4?55T0g6%/0k**u4s2sJ1c7$P%6Q@S3&EfA4?55T1d2@20k*+"4s2sJ1c8`+%6Q@S3&WrC4?55V0Koq.0k*+$4s2sJ1c@*Q%6Q@S3&j)E4?55UANgPc0k*+&4s2sJ1cAc+%6Q@S3+4un4?5/P3Bdm70k*+O4s2sJ1cI*P%6Q@S3+G,p4?55W2*MI30k*+Q4s2sJ1cI?W%6Q@S3+Y8r4?55WA3LGb0k*+S4s2sJ1c8]*%6Q@S3A<W>4?55W@m1>a0k*-t4s2sJ1cJu0%6Q@S3ANc@4?55X0g6%/0k*.!4s2sJ1cK#1%6Q@S3A`oB4?58Y1-Q.00k*.#4s2sJ2)mNY%6Q@S3As&D4?58Y@6P,_0k*.%4s2sJ2*!KW%6Q@S3B02F4?58Z2EhR40k*.P4s2sJ2.81&%6Q@S3Fb5q4?59-3''Id60k*.R4s2sJ2.8F-%6Q@S3FtAs4?59-A3LGb0k*.T4s2sJ2.C&Z%6Q@S@5''kf4?59.@Qk5`0k+QG4s2sJ2.AR0%6Q@S@5:"h4?59.ANgPc0k+QI4s2sJ2.L&Y%6Q@S@5L.j4>pe`2EhR40k+QK4s2sJ2.JF+%6Q@S@5^:l4?59/A3LGb0k+QM4s2sJ2.L,[%6Q@S@5pFn4?5902*MI30k+QO4s2sJ2.SO-%6Q@S@:;>B4?5902EhR40k+R#4s2sJ2.U2\%6Q@S@:MJD4?5910g6%/0k+R%4s2sJ2.\X/%6Q@S@:_VF4?5911-Q.00k+R''4s2sJ2DR!N%6Q@S@PBtg4?5;T3''Id60k+TJ4s2sJ2Dd0Q%6Q@S@Pg7k4?5;V@m1>a0k+TL4s2sJ2Df#0%6Q@S@Q$Cm4?5;V@Qk5`0k+TN4s2sJ2E*QY%6Q@S@Q6Oo4?5;W@m1>a0k+TP4s2sJ2Do&0%6Q@S@UVGC4?5;WA3LGb0k+U$4s2sJ2Do)1%6Q@S@UhSE4?5;X2EhR40k+U&4s2sJ2E*BT%6Q@S@V%_G4?5;X@m1>a0k+U(4s2sJ2E552%6Q@S@k^(h4?5;[3''Id60k+WI4s2sJ2E<WY%6Q@S@kp4j4?5;[2a.[50k+WK4s2sJ2IU#X%6Q@S@l-@l4?5<.2a.[50k+WO4s2sJ2I\@(%6Q@S@lQXp4?5</1d2@20k+WQ4s2sJ2I\R.%6Q@S@q.\F4?5<0ANgPc0k+X''4s2sJ2Ig2[%6Q@S@q@hH4?5<03Bdm`DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c@Uj"6+?VYB@q7b44>C;U0KpUA3&rg+4q0V/@Uq2W+?VYBA7Ie44>C;U1-QgC3B&X&4q0V/@Uq8Y+?VYBA2QO[4>C;U1d3$E3AtJ04q0V/@Uq>[+?VYC0Jks&4>C;U2Ei6G3B&WM4q0V/@UqD]+?VYC0K;6*4>C;U3''JHI3B&ZK4q0V/@UqJ_+?VYC0P*EW4>C;U@6Per3B&ZI4q0V/@Urq3+?VYC0P3KX4>C;U@m2"t3B&ZN4q0V/@Us"5+?VYC0f_E,4>C;UANh5!3B&]M4q0V/@Us(7+?VYC11<?U4>C;V0KpUA3B&`J4q0V/@V%8X+?VYC1H@W.4>C;V1d3$E3B&cO4q0V/@V%D\+?VYC1c@N,4>C;V2Ei6G3B&cS4q0V/@V%J^+?VYC1bq6(4>C;V3''JHI3B&cT4q0V/@V%P`+?VYC2.JfZ4>C;V@6Per3B&iM4q0V/@V''"4+?VYC2DdT,4>C;V@m2"t3B&iS4q0V/@V''(6+?VYC2E3l04>C;VANh5!2)8\t4q0V/@V''.8+?VYC2I\iZ4>C;W0KpUA3B&lO4q0V/@V.>Y+?VYC2`X&24>C;W1-QgC3B&oT4q0V/@V.D[+?VYC2e,#\4>C;W1d3$E3B&oP4q0V/@V.J]+?VYC2dnlZ4>C;W2Ei6G3B&oU4q0V/@V.P_+?VYC3+>&\4>C;W@6Per3B&s.4q0V/@V0(5+?VYC@5pF[4>C;W@m2"t3B(A)4q0V/@V0.7+?VYC@5C(V4>C>"0KpUA3B(G(4q0V/@k]W$+?VYC@l?L[4>C>"1-QgC3B(G-4q0V/@k]]&+?VYC@q%V24>C>"1d3$E3B(JY4q0V/@k]c(+?VYCARmt64>C>"2Ei6G3G(*[4q0V/@k]i*+?VYCAhlOZ4>C>"3''JHI2dp6/4q0V/@k]o,+?VYCAi;g^4>C>"@6Per3B(P-4q0V/@k_@U+?VYD0P3KX4>C>"@m2"t3B/^&4q0V/@k_FW+?VYD1H7Q-4>C>"ANh5!3B/cN4q0V/@k_LY+?VYD1,1s%4>C>#0KpUA3B/fR4q0V/@kf]%+?VYD1LrZY4>C>#1-QgC3B/iR4q0V/@kfc''+?VYD1hJo\4>C>#1d3$E3B/j)4q0V/@kfi)+?VYD2I\iZ4>C>#3BeQJ3B/rS4q0V/@khCU+?VYD2`!W,4>C>#@Qkns3B1GU4q0V/@khIW+?VYD@:h\44>C>#A3M+u3B1J&4q0V/@khOY+?VYD@Q$CZ4>C>#Aj.>"3B1M*4q0V/@ko`%+?VYD@l$:X4>C>$0g6^B3B1M,4q0V/@kof''+?VYDAN;p`4>C>$1HlpD3B1SZ4q0V/@kol)+?VYE0Jbm%4>C>$2*N-F3B8cR4q0V/@kor++?VYE0etp%4>C>$2a/?H3B8fN4q0V/@kp#-+?VYE0fV?+4>C>$3BeQJ3B8iL4q0V/@kqOX+?VYE1,M0(4>C>$A3M+u3B8iK4q0V/@kqUZ+?VYE11NKW4>C>$Aj.>"3B8j+4q0V/@l#l(+?VYE1bq6(4>C>%1HlpD3B8oV4q0V/@l#r*+?VYE1c7H+4>C>%2*N-F3B8rN4q0V/@l$#,+?VYE1h&WX4>C>%3BeQJ3B8p+4q0V/@l%OW+?VYE2)RQ,4>C>%A3M+u3B:M*4q0V/@l,l''+?VYE@UhS24>C>&0g6^B3B:V^4q0V/@l,r)+?VYEA7@_34>C>&1HlpD3B:V\4q0V/@l-#++?VYEA2la^4>C>&2*N-F3B:V)4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@T1grQj4?5E6@Qk5`0k3%L4s2sJ3G(67%6Q@T1h/]l4?6h(0g6%/0k3%N4s2sJ@5):W%6Q@T1hAin4?6h(2*MI30k3%P4s2sJ3Fss0%6Q@T2)%3:4?6h)3Bdm70k3''q4s2sJ@5;:U%6Q@T2)7?<4?6h+2a.[50k3''s4s2sJ@5Ki*%6Q@T2)IK>4?6h,1-Q.00k3''u4s2sJ@5KZ%%6Q@T2)[W@4?6h,1Hl710k3("4s2sJ@5DIY%6Q@T2)mcB4?6h-2*MI30k3($4s2sJ@5MLY%6Q@T2.8Zk4?6h-@Qk5`0k3(M4s2sJ@5Tu-%6Q@T2.Jfm4?6h-Aj-Yd0k3(O4s2sJ@5]l)%6Q@T2.\ro4?6h.2*MI30k3(Q4s2sJ@5]r+%6Q@T2D@<;4?6h.3Bdm70k3*r4s2sJ@5_RY%6Q@T2DRH=4?6h.@6P,_0k3*t4s2sJ@:<\1%6Q@T2DdT?4?6hZ0Koq.0k3+!4s2sJ@:E_1%6Q@T2E!`A4?6h[0Koq.0k3+#4s2sJ@:Nn5%6Q@T2E3lC4?6h\0g6%/0k3+R4s2sJ@:_>\%6Q@T2_[E<4?6h]Aj-Yd0k3-s4s2sJ@:`n3%6Q@T2_mQ>4?6h]ANgPc0k3-u4s2sJ@:h>[%6Q@T2`*]@4?6h^0g6%/0k3."4s2sJ@:hG^%6Q@T2`<iB4?6h^@Qk5`0k3.$4s2sJ@PB](%6Q@T2`NuD4?6k*3''Id60k3.&4s2sJ@PM:T%6Q@T2dnlm4?6k*Aj-Yd0k3.Q4s2sJ@PTf)%6Q@T3&EfA4?6k,1-Q.00k31#4s2sJ@Pfo*%6Q@T3&WrC4?6k-1Hl710k31%4s2sJ@Ph[\%6Q@T3+4un4?6k.0g6%/0k31P4s2sJ@Pp,/%6Q@T3+G,p4?6k01d2@20k31R4s2sJ@Q?5.%6Q@T3+Y8r4?6k11Hl710k31T4s2sJ@Q?/,%6Q@T3A`oB4?6kZ3''Id60k34$4s2sJ@U_/X%6Q@T3As&D4?6k\0Koq.0k34&4s2sJ@Uih1%6Q@T3B02F4?6k[3Bdm70k34(4s2sJ@Uh;[%6Q@T3FP)o4?6k\Aj-Yd0k34S4s2sJ@V%>Z%6Q@T3FtAs4?6k^1-Q.00k34U4s2sJ@V%A[%6Q@T@5''kf4?6k]1d2@20k4WH4s2sJ@V%8X%6Q@T@5:"h4?6n-@6P,_0k4WJ4s2sJ@V.AZ%6Q@T@5L.j4?6k_0g6%/0k4WL4s2sJ@V.;X%6Q@T@5^:l4?6n+2*MI30k4WN4s2sJ@kff(%6Q@T@5pFn4?6n*3Bdm70k4WP4s2sJ@kfc''%6Q@T@:;>B4?6n*@m1>a0k4X$4s2sJ@k]f)%6Q@T@:MJD4?6n*3''Id60k4X&4s2sJ@kf`&%6Q@T@:_VF4?6n*@6P,_0k4X(4s2sJ@k]`''%6Q@T@PBtg4?6n,ANgPc0k4ZI4s2sJ@khFV%6Q@T@PU+i4?6n,2*MI30k4ZK4s2sJ@kol)%6Q@T@Pg7k4?6n,0g6%/0k4ZM4s2sJ@l#f&%6Q@T@Q$Cm4?6n.2a.[50k4ZO4s2sJ@l#l(%6Q@T@Q6Oo4?6n.2EhR40k4ZQ4s2sJ@l%[[%6Q@T@UVGC4?6n/@6P,_0k4[%4s2sJ@l?#)%6Q@T@UhSE4?6n02a.[50k4[''4s2sJ@lH;0%6Q@T@V%_G4?6n13''Id60k4[)4s2sJ@q@S_%6Q@T@k^(h4?6n_@m1>a0k4]J4s2sJ@qIDY%6Q@T@kp4j4?6q+3Bdm70k4]L4s2sJA2#u,%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>C>U1d3$E3FcW04q0V/@q.A[+?VYp0Jbm%4>C>U2Ei6G3Fjg%4q0V/@q.G]+?VYp11<?U4>C>U3''JHI3Fjm''4q0V/@q.M_+?VYp@:h\44>C>U@6Per3Fjm$4q0V/@q/t3+?VYp0kNTY4>C>U@m2"t3Fjs''4q0V/@q0%5+?VYp0f;-(4>C>UANh5!3Fjj"4q0V/@q0+7+?VYp1bh0''4>C>V0KpUA3FjpX4q0V/@q7;X+?VYp1M&`Z4>C>V1-QgC3Fjs)4q0V/@q7AZ+?VYp1cRZ.4>C>V2Ei6G3Fk$)4q0V/@q7M^+?VYp2).9(4>C>V3''JHI3Fk!$4q0V/@q7S`+?VYp2*!i04>C>V@6Per3Fk''(4q0V/@q9%4+?VYp3&s/34>C>V@m2"t3Fk*.4q0V/@q9+6+?VYp@:DD04>C>VANh5!3Fk$[4q0V/@q918+?VYp2dnlZ4>C>W0KpUA3Fk-Y4q0V/@q@AY+?VYp@5L.W4>C>W1-QgC3FlPY4q0V/@q@G[+?VYp@PU+V4>C>W1d3$E3FlVV4q0V/@q@M]+?VYp@kg.V4>C>W2Ei6G3FlT.4q0V/@q@S_+?VYp@Q6O\4>C>W3''JHI3FlT-4q0V/@q@Ya+?VYp@l?L[4>C>W@6Per3FlW34q0V/@qB+5+?VYp@kp4W4>C>W@m2"t3FlY\4q0V/@qB17+?VYpA2?CY4>C>WANh5!3Fl_]4q0V/@qB79+?VYpAMu^]4>C>X0KpUA3Fl]34q0V/@qIGZ+?VYpAS++84>C>X1-QgC3Fl`44q0V/@qIS^+?VYq0kENX4>C>X2Ei6G3Ft-,4q0V/@qIY`+?VYq2`X&24>C>X3''JHI3Ft-[4q0V/@qI_b+?VYq3&*T+4>C>X@6Per3Ft004q0V/@qK78+?VYq3ANc-4>C>XANh5!3Ft3.4q0V/@qK=:+?VYq3AE],4>CA#0KpUA3Ft3]4q0V/A2#`%+?VYq@5U4X4>CA#1-QgC3FuVZ4q0V/A2#f''+?VYq@Q6O\4>CA#1d3$E3FuW-4q0V/A2#l)+?VYq@:VP24>CA#2Ei6G3B&iN4q0V/A2#r++?VYq@q.\34>CA#@Qkns3Fu_X4q0V/A2%LW+?VYqA7Ie44>CA#A3M+u3Fu`44q0V/A2%RY+?VYqA7Rk54>CA#Aj.>"3FubU4q0V/A2,c%+?VYqAMlX\4>CA$0g6^B3Fub]4q0V/A2,i''+?VYqAS++84>CA$1HlpD3FueZ4q0V/A2,u++?VYqAiW$a4>CA$@m2"t2`>,(4q0V/A2.UY+?VYr0f;-(4>CA$ANh5!3G($$4q0V/A2.[[+?VYr11NKW4>CA%0KpUA3G(''Y4q0V/A25l''+?VYr1grQW4>CA%1-QgC3G(-(4q0V/A25r)+?VYr2)IK+4>CA%1d3$E3G(0*4q0V/A27RW+?VYr2Ieo[4>CA%@Qkns3G(0X4q0V/A27XY+?VYr2`Eo04>CA%A3M+u3G(3*4q0V/A27^[+?VYr2`<i/4>CA%Aj.>"3G(9/4q0V/A2>o''+?VYr3Fb5^4>CA&0g6^B3G)\R4q0V/A2>u)+?VM@11i]Z4>CA&1HlpD2E>8+4q0V/A2?&++?VY<2*!i04>CA&2*N-F2`*EL4q0V/A2?,-+?VD;1bq6(4>CAT0g6^B1G^jJ4q0V/A775W+?VG90f2''''4>CAT1HlpD1G^dA4q0V/A77;Y+?VG91h8cZ4>CAT2*N-F1G^aF4q0V/A77A[+?VG91,hB+ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0k=]O4s2sD1GCUK%6Q@U@5pFn4>ScL2EhR40k=]Q4s2sD1GpmN%6Q@U@:;>B4>ScN2a.[50k=^%4s2sD1GE?''%6Q@U@:MJD4>ScK2EhR40k=^''4s2sD1GUaM%6Q@U@:_VF4>ScK@Qk5`0k=^)4s2sD1GiN(%6Q@U@PBtg4>ScL@Qk5`0k=`O4s2sD1Li7*%6Q@U@Q-In4>Sd%0g6%/0k=`Q4s2sD0JR*%%6Q@U@Q?Up4>SZGAj-Yd0k=a%4s2sC0ekRM%6Q@U@U_MD4>Sd''A3LGb0k=a''4s2sC0etII%6Q@U@l-@l4>S`K3Bdm70k=cO4s2sD1H/l/%6Q@U@l?Ln4>ScPA3LGb0k=cQ4s2sD1H/f-%6Q@U@lQXp4>JZIANgPc0k=cS4s2sC1,1LI%6Q@U@pqPD4>JZH@6P,_0k=d''4s2sC11<%(%6Q@U@q.\F4>JZI0Koq.0k=d)4s2sC1,3B)%6Q@U@q@hH4>J[$Aj-Yd0k=fL4s2sF2)Sr/%6Q@UA26=k4?5B51d2@20k=fN4s2sGARR>X%6Q@UA2HIm4?6n,Aj-Yd0k=fP4s2sGA7]46%6Q@UA2ZUo4?-q_1-Q.00k=fR4s2sG@PMCW%6Q@UA2laq4>ep''3Bdm70k=fT4s2su3&WR''@q9+6%6Q@UA77YE4>f#R1-Q.00k=g(4s2sJ3A=r,%6Q@UA7IeG4?"uN0Koq.0k=g*4s2sI3Ai]Y%6Q@UA7[qI4?6q_2a.[50k=g,4s2sIAn<ka%6Q@UAM?:j4>nlO1-Q.00k=iM4s2sG11W(&%6Q@UAMQFl4>o)U2EhR40k=iO4s2t"@5Bf*%6Q@UAMcRn4?,/T@Qk5`0k=iQ4s2sJ2`NWX%6Q@UAMu^p4>f#W3Bdm70k=iS4s2sDA2Ij]%6Q@UAN2jr4?$ka0Koq.0k=iU4s2sHAn>F8%6Q@UARRbF4>g_[A3LGb0k=j)4s2sH3A`ZY%6Q@UARdnH4>^Y]0Koq.0k=j+4s2sF1H/o0%6Q@UAS"%J4>eg&2*MI30k=j-4s2sIARdDX%6Q@UAhZCk4>f!*0Koq.0k=lN4s2su3&bDZ@qB17%6Q@UAhlOm4>gV+0g6%/0k=lP4s2sJ2`EQW%6Q@UAi)[o4?#8W0g6%/0k=lR4s2sG0fCsS%6Q@UAi;gq4CgE/2Ip;V1d2@20k=lT4s2sHAN"!]%6Q@UAiMss4?,,R2EhR40k=lV4s2su3&WR''AS*ha%6Q@UAmmkG4>efJ2EhR40k=m*4s2sF@:Ne2%6Q@UAn+"I4>nuS1-Q.00k=m,4s2sJAN+*_%6Q@UAn=.K4?-b]@6P,_0k=m.4s2sFA7dba%6Q@V0JG[54>o)R@Qk5`0kE$n4s2sGAN=9b%6Q@V0JYg74?6t^1d2@20kE$p4s2sJA2Z,*%6Q@V0Jks94?#,P0g6%/0kE$r4s2sJ0k3.+%6Q@V0K)*;4>o2Z@6P,_0kE$t4s2sG3&!3R%6Q@V0K;6=4?,3,3Bdm70kE%!4s2sJ@UqA\%6Q@V0O[-f4?52O2EhR40kE%J4s2sH1LjiW%6Q@V0Om9h4>ep,0g6%/0kE%L4s2sF@l?)+%6Q@V0P*Ej4?5)RANgPc0kE%N4s2su3&bDZ@q9(5%6Q@V0ebd64?"rQ@m1>a0kE''o4s2sHAMu8,%6Q@V0etp84?5,Q@Qk5`0kE''q4s2sG2Ing3%6Q@V0f2'':4D&"Y2EhR40kE''s4s2sI2.:)\%6Q@V0fD3<4?,312a.[50kE''u4s2sF1hAX1%6Q@V0fV?>4>g\]0KoqWDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,cAMH2/+?VPA@5:"U4>CD%@6Per3&NHI4q0V/AMIXX+?VY=@:MJ14>CD%@m2"t3B&rX4q0V/AMI^Z+?VVB2)RQ,4>CD%ANh5!3B&j,4q0V/AMId\+?VY<0fM9*4>CD&0KpUA2eHVT4q0V/AMPu(+?VP=2dnlZ4>CD&1-QgC3A<0u4q0V/AMQ&*+?VVBARdn54>CD&1d3$E2Deks4q0V/AMQ,,+?VPA0f)!&4>CD&2Ei6G2_d.#4q0V/AMQ2.+?VS;2e5)]4>CD&3''JHI3+4^V4q0V/AMQ80+?VM>1h/]Y4>CD&@6Per3A<?G4q0V/AMR^Y+?VM:2`3c.4>CD&@m2"t2Dd-F4q0V/AMRd[+?VS?AN;p`4>CD&ANh5!3A<=#4q0V/AMRj]+?VYm2)7?)4>CD''0KpUA3&*@(4q0V/AMZ&)+?VYqA7@_34>CD''1-QgC2)R3I4q0V/AMZ,++?VPoAS++84>CD''1d3$EAmmN)4q0V/AMZ2-+?VVAAiMs`4>CD''2Ei6GA2lMZA7ISU4q0V/AMZ8/+?VVq@V.e54>CD''3''JHI2E55U4q0V/AMZ>1+?VYo1cRZ.4>CD''@6Per2ISCP4q0V/AM[dZ+?VSm0kENX4>CD''@m2"t3+4UP4q0V/AM[j\+?VS:1,_<*4>CD''ANh5!2)/TM4q0V/AM[p^+?VP<2)d].4>CD(0KpUA2E>8W4q0V/AMc,*+?VY?3FP)\4>CD(1-QgCAmmDJ4q0V/AMc2,+?VP=2).9(4>CD(1d3$E3AE:"4q0V/AMc8.+?VP=AMQFY4>CD(2Ei6GAiXF44q0V/AMc>0+?VM@2DIB)4>CD(3''JHI3B/m)4q0V/AMcD2+?VM@1Gq?*4>CD(@6PerA2lMZA7IPW4q0V/AMdj[+?VV>A7e"74>CD(@m2"t3+HN14q0V/AMdp]+?VM@2)mc/4>CD(ANh5!2`Y>%4q0V/AMe!_+?VYp0K20)4>CD)0KpUA2_ZpD4q0V/AMl2++?VS:0kENX4>CD)1-QgC2)[BQ4q0V/AMl8-+?VY<1bh0''4>CD)1d3$E3B/`L4q0V/AMl>/+?VY<@5C(V4>CD)2Ei6G3+=RQ4q0V/AMlD1+?VS:2)mc/4>CD)3''JHI2E<ZN4q0V/AMlJ3+?VSC@PBtT4>CD)@6Per2)\rQ4q0V/AMmp\+?VS<1h/]Y4>CD)@m2"t3A<0J4q0V/AMn!^+?VSCAMcR[4>CD)ANh5!2)7%"4q0V/AMn''`+?VSl@Q6O\4>CD*0KpUA2J+g$4q0V/AMu8,+?VY=@PL%U4>CD*1-QgC2D[."4q0V/AMu>.+?VP;1c[`/4>CD*1d3$E2IS:K4q0V/AMuD0+?VP@@pqP14>CD*2Ei6G2dnF"4q0V/AMuJ2+?VY<1LiTX4>CD*3''JHI2.8LS4q0V/AMuP4+?VVm11NKW4>CD*@6Per2.^<14q0V/AN"!]+?VS:0f;-(4>CD*@m2"tAmmT+4q0V/AN"''_+?VV@1LrZY4>CD*ANh5!2`G/&4q0V/AN"-a+?VMi1-%N-4>CD+0KpUA2.\d+4q0V/AN)>-+?VPlAMH@X4>CD+1-QgC3&G2V4q0V/AN)D/+?VYD1GD!%4>CD+1d3$E3Fap%4q0V/AN)J1+?VYq@Pp=Y4>CD+2Ei6G2)-mB4q0V/AN)P3+?VYE0Ju$''4>CD+3''JHI2e+dX4q0V/AN)V5+?VY@2)@E*4>CD+@6Per2DHmF4q0V/AN+''^+?VS@2)7?)4>CD+@m2"t2`!6K4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@V2e5)p4?"uT1d2@20kE:T4s2sI0JG1E%6Q@V2eG5r4?,/O@6P,_0kE<u4s2t"3Faj/%6Q@V3&<`@4D$T63Bdm70kE=$4s2sG3B8o[%6Q@V3&NlB4?,;TAj-Yd0kE=&4s2su3&bDZ@k_LY%6Q@V3&a#D4>eiQ3Bdm70kE=(4s2su3&bDZ@q7AZ%6Q@V3&s/F4CgE1ARo:*3''Id60kE=Q4s2sF2)@6V%6Q@V3+>&o4>euP1Hl710kE=S4s2sF2.\U.%6Q@V3+P2q4>f#Q1-Q.00kE=U4s2sF2ISI,%6Q@V3+b>s4>f)P@Qk5`0kE@!4s2sF@:Ee3%6Q@V3AE]?4CgE.2IpAR@6P,_0kE@#4s2sF@l7^Z%6Q@V3AWiA4>g\.1d2@20kE@%4s2sG0KD''U%6Q@V3AiuC4>nuR3Bdm70kE@''4s2sG1b^gO%6Q@V3B'',E4>o&P1-Q.00kE@)4s2sG2)mBU%6Q@V3B98G4>o-,2EhR40kE@R4s2sG2eHJ^%6Q@V3FY/p4>o/Z@Qk5`0kE@T4s2sG3&kJ5%6Q@V3Fk;r4>pb/ANgPc0kE@V4s2su3&NC#An3SZ%6Q@V3G(Gt4CgE1ARo=,0Koq.0kFcI4s2sH1Lju[%6Q@V@50qg4?#,O1d2@20kFcK4s2sH2)&Q)%6Q@V@5C(i4?#,P2*MI30kFcM4s2sH2E<QW%6Q@V@5U4k4?#5Y@m1>a0kFcO4s2sH@5BW%%6Q@V@5g@m4?7"6A3LGb0kFcQ4s2sH@Q?G4%6Q@V@6$Lo4?$b10Koq.0kFd%4s2sH@prq4%6Q@V@:DDC4?$e2@Qk5`0kFd''4s2sHA79%5%6Q@V@:VPE4?$e2Aj-Yd0kFd)4s2sHAn3_^%6Q@V@:h\G4?,)OANgPc0kFfJ4s2sI1,rf.%6Q@V@PL%h4?,*,1-Q.00kFfL4s2sI1GUaM%6Q@V@P^1j4?,,U2*MI30kFfN4s2sI2).$R%6Q@V@Pp=l4?,2SANgPc0kFfP4s2sI2`NQV%6Q@V@Q-In4?,911-Q.00kFfR4s2sI3A=l*%6Q@V@Q?Up4?,?0Aj-Yd0kFg&4s2sI@:Wq5%6Q@V@U_MD4?-e,0g6%/0kFg(4s2sIA7T+4%6Q@V@UqYF4?-n+3Bdm70kFg*4s2sIAhc)*%6Q@V@V.eH4?-qa@6P,_0kFiK4s2sJ0K;!T%6Q@V@kg.i4?5)Q3''Id60kFiM4s2sG1,LsS%6Q@V@l$:k4?5-+0g6%/0kFiO4s2sJ2.C#Y%6Q@V@l6Fm4?#2W1-Q.00kFiQ4s2sJ2_m3R%6Q@V@lHRo4?5>Y0Koq.0kFiS4s2sJ2`EHT%6Q@V@lZ^q4?5AV1d2@20kFj''4s2sJ@PVLY%6Q@V@q%VE4?6k22a.[50kFj)4s2sJ@V.AZ%6Q@V@q7bG4?6t]@6P,_0kFj+4s2sJAiX?b%6Q@VA2-7j4>JTHANgPc0kFlN4s2t"Ai"$_%6Q@VA2?Cl4>S[''@m1>a0kFlP4s2sC0JPFK%6Q@VA2QOn4>JTF0Koq.0kFlR4s2sD0JR''$%6Q@VA2c[p4>JTF2EhR40kFlT4s2t"Ai4''^%6Q@VA2ugr4>JTG2EhR40kFm(4s2sC0JYLL%6Q@VAMH@k4D&1_@Qk5`0kFoO4s2t"Ai4*_%6Q@VARmtI4D&1[A3LGb0kFp-4s2sD0JkLJ%6Q@VAS++K4>SZJ1Hl710kFrN4s2sD0JkXN%6Q@VAhcIl4>SZJ2a.[50kFrP4s2sD0JkdR%6Q@VAhuUn4>SZL1Hl710kFrR4s2sD0K:jP%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>CDZ2*N-F1GCdG4q0V/AS*ha+?VG63&a#14>CDZ2a/?H1GCe"4q0V/AS*nc+?VG6@50qT4>CDZ3BeQJ1GE5n4q0V/AS,@7+?VG6@5U4X4>CDZ@Qkns1GE5r4q0V/AS,F9+?VG6@6$L\4>CDZA3M+u1GE;p4q0V/AS,L;+?VG6AMZLZ4>CDZAj.>"1GEAt4q0V/AhYo&+?VG6AN)d^4>CG%0g6^B1GEBO4q0V/AhZ&*+?VG91c[`/4>CG%2*N-F1G^aB4q0V/AhZ,,+?VG91,;$&4>CG%2a/?H1G^ju4q0V/AhZ2.+?VG90fV?+4>CG%3BeQJ1G^dF4q0V/Ah[XW+?VG90Jbm%4>CG%@Qkns1G^gF4q0V/Ah[^Y+?VG92).9(4>CG%A3M+u1G^mI4q0V/Ah[d[+?VG90P!?V4>CG%Aj.>"1G^dE4q0V/Ahbu''+?VG91,D*''4>CG&0g6^B1G^dq4q0V/Ahc&)+?VG91grQW4>CG&1HlpD1G^gr4q0V/Ahc;0+?VV=@5^:Y4>CG&@6Per3&<<L4q0V/AhdaY+?VM>2)@E*4>CG&@m2"t2)AZ$4q0V/Ahdg[+?VS<2*!i04>CG&ANh5!2Ie[$4q0V/Ahdm]+?VSl0K;6*4>CG''0KpUA3B8rU4q0V/Ahl))+?VP;AhuU[4>CG''1-QgC3B8fJ4q0V/Ahl/++?VYC2Inu\4>CG''1d3$E2_d7%4q0V/Ahl5-+?VSk2eG5_4>CG''2Ei6G2e$3+4q0V/Ahl;/+?VP<@l$:X4>CG''3''JHI3&>)W4q0V/AhlA1+?VSC2DRH*4>CG''@6Per2)AcP4q0V/AhmgZ+?VSl@lHR\4>CG''@m2"t3+cYW4q0V/Ahmm\+?VSm1M&`Z4>CG''ANh5!2)&NK4q0V/Ahms^+?VM;0f;-(4>CG(0KpUA2)Sf&4q0V/Ahu/*+?VM>@:_V34>CG(1-QgC2)m<N4q0V/Ahu5,+?VMA0k*<U4>CG(1d3$E2.JC$4q0V/Ahu;.+?VMmA2$1V4>CG(2Ei6G2.^904q0V/AhuA0+?VP;1bh0''4>CG(3''JHI2E#&"4q0V/AhuG2+?VPl0K;6*4>CG(@6Per2J"X"4q0V/Ai!m[+?VPnARdn54>CG(@m2"t2dn^*4q0V/Ai!s]+?VSlA7Rk54>CG(ANh5!2eHV]4q0V/Ai"$_+?VV?1,;$&4>CG)0KpUA3&`]T4q0V/Ai)5++?VVC0P*EW4>CG)1-QgC3&bA''4q0V/Ai);-+?VYm0f_E,4>CG)1d3$E3FuW04q0V/Ai)A/+?X7JAMcR[4>CG)2Ei6GAnE_U4q0V/Ai)G1+?X7J0JYg$4>CG)3''JHI0em)r4q0V/Ai)M3+?VD:@kg.V4>CG)@6Per1,WN"4q0V/Ai*s\+?VD6AN;p`4>CG)@m2"t1,3?!4q0V/Ai+$^+?VD6AMu^]4>CG)ANh5!1,3?"4q0V/Ai+*`+?VD:@5:"U4>CG*0KpUA1,_$L4q0V/Ai2;,+?VD;2DIB)4>CG*1-QgC1,_$I4q0V/Ai2A.+?VD;2DRH*4>CG*1d3$E1G`Gn4q0V/Ai2G0+?VG9@5:"U4>CG*3''JHI1G_$M4q0V/Ai2S4+?VD60f)!&4>CG*@6Per1G_$N4q0V/Ai4$]+?VG9@P^1W4>CG*@m2"t1G`Jq4q0V/Ai4*_+?VG9@PL%U4>CG*ANh5!1G`Jo4q0V/Ai;D.+?VG9@q%V24>CG+1HlpD1G_$F4q0V/Ai;J0+?VG9A2HIZASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0kN=$4s2sD1H@?W%6Q@W2E!`A4>ScK1-Q.00kN=&4s2sD1GLdO%6Q@W2E3lC4>ScJ3''Id60kN=(4s2sD1GLaN%6Q@W2IScl4>ScI1Hl710kN=Q4s2sD1GUaM%6Q@W2Ieon4>ScN2a.[50kN=S4s2sD1GgjN%6Q@W2J#&p4>ScL3Bdm70kN=U4s2sD1G`K(%6Q@W2_[E<4>ScI0Koq.0kN@!4s2sD1G^aL%6Q@W2_mQ>4>ScM2a.[50kN@#4s2sD1GNH)%6Q@W2`*]@4>ScK@6P,_0kN@%4s2sD1LjrZ%6Q@W2`<iB4>ScPAj-Yd0kN@''4s2sC0etII%6Q@W2`NuD4>JfKANgPc0kN@)4s2sD0JbUN%6Q@W2dnlm4>SZH0Koq.0kN@R4s2sA0OZt*%6Q@W2e,#o4>8HtANgPc0kN@T4s2sA0JbC:0J[3''%6Q@W3FY/p4>S`M0g6%/0kOp(4s2sD1,LdN%6Q@W@q%VE4>S`KA3LGb0kOp*4s2sD1,EN+%6Q@W@q7bG4>S`K1d2@20kOp,4s2sD1,CmR%6Q@W@qInI4>S`K1Hl710kOrM4s2sD1,EE(%6Q@WA2-7j4>S`L1-Q.00kOrO4s2sD1,EK*%6Q@WA2?Cl4>S`K2EhR40kOrQ4s2sD1,CdO%6Q@WA2QOn4>S`K@Qk5`0kOrS4s2sD1,L[K%6Q@WA2c[p4>S`K@6P,_0kOrU4s2sD11Dq$%6Q@WA2ugr4>Sa$A3LGb0kOs)4s2sD11<1,%6Q@WA7@_F4>Sa$Aj-Yd0kOs+4s2sD1-%0T%6Q@WA7RkH4>Sa$@6P,_0kOs-4s2sD1-%<X%6Q@WA7e"J4>Sa$@Qk5`0kOuN4s2sD1-%*R%6Q@WAMH@k4>S`Q0g6%/0kOuP4s2sD1-%-S%6Q@WAMZLm4>Sa$@m1>a0kOuR4s2sD11=`X%6Q@WAMlXo4>S`Q2EhR40kOuT4s2sC1LW:-%6Q@WAN)dq4>J^$3''Id60kOuV4s2sC1LW4+%6Q@WAN;ps4D&.\3''Id60kP!*4s2sC1LXfX%6Q@WAR[hG4>J^$@m1>a0kP!,4s2sC1LX`V%6Q@WARmtI4D&.\3''Id60kP#P4s2t"AMZ;0%6Q@WAi2ap4D&.\3''Id60kP#U4s2sD1LjoY%6Q@WAiDmr4>ScI2*MI30kP#W4s2sA0OeQV%6Q@WAiW$t4>8Hu@m1>a0kP$+4s2sD1HB&2%6Q@WAn!qH4>Sd%1Hl710kP$-4s2sD1LW1*%6Q@WAn4(J4>8HJ1GCL@2)$^B1Hl710kP$/4s2sA0K*Gq0K(pF0K*K+%6Q@WAnF4L4>S`QANgPc1,(C;4s2sD1LiC.%6QC"0Jbm84>JZIA3LGb1,(C=4s2sF1H.!O%6QC"0Ju$:4>S`K0Koq.1,(Cl4s2sD1,CjQ%6QC"0P!?i4>S`L0g6%/1,(Cn4s2sC2dnF)%6QC"0etp84>Jd(3Bdm71,(F=4s2sC2E!6Q%6QC"0f2'':4>JfQ2*MI31,(F?4s2sC2E!?T%6QC"0fD3<4>JfQ2EhR41,(Fl4s2sC2DJc,%6QC"0kENk4>JfLAj-Yd1,(Fp4s2sD1-%?Y%6QC"1,(m74>Ja)@6P,_1,(I>4s2t"Ahbu''%6QC"1,M0;4D&1[0Koq.1,(I@4s2sD0JG1E%6QC"11`Wl4>JcRAj-Yd1,(Iq4s2sC2)o/2%6QC"1GD!84>JcRA3LGb1,(L=4s2sC2)o)0%6QC"1GV-:4>JcR@Qk5`1,(L?4s2sC2)o#.%6QC"1Gh9<4>JcR3Bdm`DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d0Jb^Q+?VD:2_[E)4>JTH@6Per1,Ut%4q0V00Jd0%+?VD:2)%3''4>JTH@m2"t1,Uq#4q0V00Jd6''+?VD:2IScY4>JTHANh5!1,UsE4q0V00JkLJ+?VD:AMlX\4>JTI1-QgC1,WW"4q0V00JkRL+?VD:@qIn64>JTI1d3$E0P+cK4q0V00Jm3%+?VY<1,;$&4>JTI@Qkns3+cW/4q0V00Jm9''+?X7J0Om9U4>JTIA3M+u0JHri4q0V00Jm?)+?VG60f)!&4>JTIAj.>"1GCh!4q0V00JtOJ+?VG63FY/]4>JTJ0g6^B1,(L>4q0V00JtUL+?X7J0P*EW4>JTJ2a/?H1,(Fm4q0V00JtgR+?VD50kENX4>JTJ3BeQJ1,(FB4q0V00K!9&+?VD50k!6T4>JTJ@Qkns1,(L?4q0V00K!?(+?VM9A7Ie44>JTJA3M+u2_d<Q4q0V00K(jR+?V>32)m9D1c[6D1c[6D1c[`/4>JTK3''JHI0JG@D0JG=D0JG@B4q0V00K(pT+?V>32)m9D2)[W-4>JTK@m2"t0JGFF0JGCF0JGCF0JGCF4q0V00K*H*+?V>32`NKF2E<HF2`<i/4>JTKANh5!0JGFF0JGFD4q0V00K*N,+?VD62eG5_4>JTL0KpUA1,1Ik4q0V00K1^M+?VD60KD<+4>JTL1-QgC0JG@@0JG==4q0V00K1dO+?VD61L`NW4>JTL1d3$E1GCL>4q0V00K1jQ+?VD6@l?L[4>JTL3''JHI1,1dF1,1dD4q0V00K3N++?VMA1,hB+4>JTLANh5!2.J=P4q0V00K3T-+?VG83Fk;_4>JTM0KpUA2D\c#4q0V00K:dN+?VP@0KD-O2)$k!0k!"$1M&`Z4>JTM1-QgC3+HAO2)]#%2Ig8T1hC-)4q0V00K:jP+?VG92e"r[4>JTM1d3$E1G^t%4q0V00K:pR+?VP@0KD-O2)$k!0k!"$1M&`Z4>JTM2Ei6G3+HAO2)]#%2Ig8T1hC-)4q0V00K;!T+?VG91G_3(4>JTM3''JHI1G^k!4q0V00K;''V+?VG91,;$&4>JTM@6Per1G^aD4q0V00K<N*+?VG90Ju$''4>JTM@m2"t1G^^B4q0V00K<T,+?VG90Ju$''4>JTMANh5!1G^gC4q0V00K<Z.+?VG91hAi[4>JTN0KpUA1G^k!4q0V00KCjO+?VG91hAi[4>JTN1-QgC1G^^@4q0V00KCpQ+?VG90fV?+4>JTN1d3$E1G^aC4q0V00KD!S+?VG91H@W.4>JTN2Ei6G1G^gI4q0V00KD''U+?VG91H@W.4>JTN3''JHI1G^mI4q0V00KD-W+?VG91bq6(4>JTN@6Per1G^jC4q0V00KET++?VG91bq6(4>JTN@m2"t1G^dB4q0V00KEZ-+?VG91L`NW4>JTNANh5!1G^^=4q0V00KE`/+?VG90kENX4>JU!0KpUA1G^as4q0V00OZ\"+?VG90kENX4>JU!1-QgC1G^dp4q0V00OZb$+?VG911<?U4>JU!1d3$E1G^dp4q0V00OZh&+?VG91cIT-4>JU!2Ei6G1G^gA4q0V00OZn(+?VSo3+4u[4>JU!3''JHI3&r^''4q0V00OZt*+?VY?1cRZ.4>JU!@6Per3ANQR4q0V00O\ES+?VV?A7Ie44>JU!@m2"t1hL5X4q0V00O\KU+?VS:@U_M14>JU!ANh5!2E!?G4q0V00O\QW+?VPA@lQX]4>JU"0KpUA3AP2,4q0V00Ocb#+?VP?An!q54>JU"1-QgC2.e[&4q0V00Och%+?VJl1,qH,4>JU"1d3$E1hC5Q4q0V00Ocn''+?VJlAn+"64>JU"2Ei6G1hJEq4q0V00Oct)+?VJm0Jbm%4>JU"3''JHI1hJO(4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC"@Q?Up4>^Y-2EhR41,*0G4s2sEAiVV1%6QC"@U_MD4>^Y0@6P,_1,*0I4s2sEAiX9`%6QC"@UqYF4>^Y11d2@21,*0K4s2sEAn,@8%6QC"@V.eH4>efL0Koq.1,*2l4s2sF0JYCI%6QC"@kg.i4>^Y^Aj-Yd1,*2n4s2sF0JR-&%6QC"@l$:k4>efL2EhR41,*2p4s2sF0K1[L%6QC"@l6Fm4>efL1-Q.01,*2r4s2sF0KCsR%6QC"@lHRo4>eg)1d2@21,*2t4s2sF0P!.,%6QC"@lZ^q4>eiM@6P,_1,*3H4s2sF0fCjP%6QC"@q%VE4>eiRA3LGb1,*3J4s2sF0k+]X%6QC"@q7bG4>ej)@m1>a1,*3L4s2sF1,1XM%6QC"@qInI4>elS@m1>a1,*5m4s2sF11<()%6QC"A2-7j4>em(0Koq.1,*5o4s2sF11XiX%6QC"A2?Cl4>eoK0Koq.1,*5q4s2sF1GCaO%6QC"A2QOn4>eoM1d2@21,*5s4s2sF1H.''Q%6QC"A2c[p4>eoT1Hl711,*5u4s2sF1L`+''%6QC"A2ugr4>ep*A3LGb1,*6I4s2t"@5)7V%6QC"A7@_F4>erU@m1>a1,*6K4s2sF1cSo-%6QC"A7RkH4>es(3Bdm71,*6M4s2sF1hL>`%6QC"A7e"J4>euU2EhR41,*8n4s2sF2`3TZ%6QC"AMH@k4>f&U2*MI31,*8p4s2sF2dp2[%6QC"AMZLm4>f''-3''Id61,*8r4s2sF2e+d1%6QC"AMlXo4D&"UAj-Yd1,*8t4s2sF3&P,.%6QC"AN)dq4>f)YANgPc1,*9!4s2sF3+=X,%6QC"AN;ps4>f,Q@Qk5`1,*9J4s2sF3AiTV%6QC"AR[hG4>f,V@Qk5`1,*9L4s2sF3Ak>2%6QC"ARmtI4>f,W1Hl711,*9N4s2sF3FOa.%6QC"AS++K4>f-.@6P,_1,*;o4s2sF@Pp&-%6QC"AhcIl4>gSX0Koq.1,*;q4s2sH2)8c-%6QC"AhuUn4>gSY3''Id61,*;s4s2sF@Urq3%6QC"Ai2ap4>gV''ANgPc1,*;u4s2sF@pq8Z%6QC"AiDmr4>gVX@6P,_1,*<"4s2sF@qIS^%6QC"AiW$t4>gY)2a.[51,*<K4s2sFA2Q/,%6QC"An!qH4D&"V0g6%/1,*<M4s2sFA2H&*%6QC"An4(J4>gY-A3LGb1,1I:4s2sFA7RAX%6QC#0JPa64>g_+0g6%/1,1I<4s2sFAhu8-%6QC#0Jbm84>g_/2a.[51,1I>4s2sFAn!\_%6QC#0Ju$:4>g_]ANgPc1,1I@4s2sG0K!B)%6QC#0K20<4>nlQ2*MI31,1IB4s2sG0K<K)%6QC#0KD<>4>nm(ANgPc1,1Ik4s2sG0P!%)%6QC#0Od3g4>noL0Koq.1,1Im4s2sG0P3((%6QC#0P!?i4>noK0g6%/1,1Io4s2sG0f(aP%6QC#0P3Kk4>noM0Koq.1,1L;4s2sG0f_3W%6QC#0ekj74>nrL1Hl711,1L=4s2sG11<()%6QC#0f)!94>o!-2*MI31,1L?4s2sG1c@$O%6QC#0f;-;4>o#VA3LGb1,1LA4s2sG1h1)\%6QC#0fM9=4>o&RANgPc1,1LC4s2sG2D?gK%6QC#0f_E?4>o)P2*MI31,1Ll4s2sG2D@-T%6QC#0k*<h4>o)QANgPc1,1Ln4s2sG2DJc,%6QC#0k<Hj4>o)Q1d2@21,1Lp4s2sG2E!EV%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>JWGAj.>"2E!EO4q0V00etFH+?VP?2*!i04>JWH0g6^BAmmDL4q0V00etLJ+?VP?2`!W,4>JWH1HlpD2E!QU4q0V00etRL+?VP?@5''kS4>JWH2*N-F2E##"4q0V00etXN+?VP?@V.e54>JWH2a/?H2E#/U4q0V00et^P+?VP@0P*EW4>JWH3BeQJ2E*?L4q0V00f!0$+?VP@2E!`.4>JWH@Qkns2E,)S4q0V00f!6&+?VPA2)7?)4>JWHA3M+u2E,,"4q0V00f!<(+?VPA0JPa#4>JWHAj.>"2E3NM4q0V00f(LI+?VPA@qIn64>JWI0g6^BAmmDM4q0V00f(RK+?VPB2E3l04>JWI1HlpDAmmDN4q0V00f(XM+?VPB3B0234>JWI2*N-F2E>>(4q0V00f(^O+?VPj1GD!%4>JWI2a/?H2ISLQ4q0V00f(dQ+?VPj1c@N,4>JWI3BeQJ2ISO#4q0V00f*6%+?VPj2e>/^4>JWI@Qkns2IU/P4q0V00f*<''+?VPjAMcR[4>JWIA3M+u2I^2T4q0V00f*B)+?VPl1M/f[4>JWIAj.>"2IeUS4q0V00f1RJ+?VPl3&Wr04>JWJ0g6^B2IeXW4q0V00f1XL+?VPlA77Y24>JWJ1HlpD2InKu4q0V00f1^N+?VPm3&a#14>JWJ2*N-F2In^X4q0V00f1dP+?VPm3As&14>JWJ2a/?H2Ip6+4q0V00f1jR+?VPm@qIn64>JWJ3BeQJ2IpDZ4q0V00f3<&+?VPmAhlOZ4>JWJ@Qkns2IpE04q0V00f3B(+?VPn1H@W.4>JWJA3M+u2J"aU4q0V00f3H*+?VPn1,hB+4>JWJAj.>"2J"[S4q0V00f:XK+?VPn@V.e54>JWK0g6^B2J+p.4q0V00f:^M+?VPo@Pp=Y4>JWK1HlpD2J-PY4q0V00f:dO+?VS:0Ju$''4>JWK2*N-F2_ZpE4q0V00f:jQ+?VS:1,qH,4>JWK2a/?H2_[3K4q0V00f:pS+?VS:@:DD04>JWK3BeQJ2_d!u4q0V00f<B''+?VS;0Jks&4>JWK@Qkns2_d1"4q0V00f<N++?X0o1biNP0ekj$4>JWKAj.>"2_ees4q0V00fC^L+?VS;An=.84>JWL0g6^B2_nhs4q0V00fCdN+?VS<@V%_44>JWL1HlpD2`!3G4q0V00fCjP+?X7E0fD3)4>JWL2*N-F2`!BO4q0V00fCpR+?VS=@UqY34>JWL2a/?H2`"r(4q0V00fD!T+?VS=A2ZU\4>JWL3BeQJ2`##$4q0V00fEH(+?VS=A26=X4>JWL@Qkns2`*3I4q0V00fEN*+?VS=Ai2a]4>JWLA3M+u2`*9J4q0V00fET,+?VS>11<?U4>JWLAj.>"2`*9M4q0V00fLdM+?VS>11`WY4>JWM0g6^B2`*EJ4q0V00fLjO+?VS>3&s/34>JWM1HlpD2`*O,4q0V00fLpQ+?VS?0JPa#4>JWM2*N-F2`3L*4q0V00fM!S+?VS@3&3Z,4>JWM2a/?H2`<[+4q0V00fM''U+?VS@3FtA`4>JWM3BeQJ2`<[*4q0V00fNN)+?VS@@5^:Y4>JWM@QknsAmmDQ4q0V00fNT++?VSA1c@N,4>JWMA3M+u2)8TP4q0V00fNZ-+?VSB1,1s%4>JWMAj.>"2`NX*4q0V00fUjN+?VSB2DdT,4>JWN0g6^B2`Na)4q0V00fUpP+?VSC1GD!%4>JWN2Ei6G2`WlT4q0V00fV*U+?X7E0k*<UASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,1aJ4s2sH3B:P4%6QC#3&s/F4?$\Z0g6%/1,1as4s2sH@:_A]%6QC#3+>&o4D&"V@m1>a1,1au4s2sH@:`n3%6QC#3+P2q4?$_0ANgPc1,1b"4s2t"@52:V%6QC#3+b>s4?$e-3''Id61,1dC4s2sHA2Rj\%6QC#3AE]?4?$e[2a.[51,1dE4s2sHA77/U%6QC#3AWiA4?$e]2EhR41,1dG4s2sHAMl5,%6QC#3AiuC4?$k/2a.[51,1dI4s2sHAmmDX%6QC#3B'',E4D&"VANgPc1,1dK4s2sI1GCOI%6QC#3B98G4?,,T1-Q.01,1dt4s2sI1H/o0%6QC#3FY/p4?,-,2a.[51,1e!4s2sI1M/O/%6QC#3Fk;r4?,/S3''Id61,1e#4s2sI1h&:*%6QC#3G(Gt4?,2U1Hl711,32k4s2sI2)RBX%6QC#@50qg4?,2V@Qk5`1,32m4s2t"@52@X%6QC#@5C(i4?,3-0Koq.1,32q4s2sI3&!9T%6QC#@5g@m4?,<42*MI31,32s4s2sI@50N$%6QC#@6$Lo4?-b*2a.[51,33G4s2sI@5g21%6QC#@:DDC4?-bX2a.[51,33I4s2sI@:Ee3%6QC#@:VPE4?-b[Aj-Yd1,33K4s2t"@59T%%6QC#@:h\G4?-b]2EhR41,35l4s2sI@Por*%6QC#@PL%h4?-e/Aj-Yd1,35n4s2sI@qIDY%6QC#@P^1j4?-h_1d2@21,35p4s2sIA2,i''%6QC#@Pp=l4?-k12EhR41,35r4s2t"@59W&%6QC#@Q-In4?-n^Aj-Yd1,36H4s2sJ0K(jR%6QC#@U_MD4?5*+ANgPc1,36J4s2t"@59`)%6QC#@UqYF4?5,N2*MI31,36L4s2sJ0et[O%6QC#@V.eH4?5-,@6P,_1,38m4s2sJ0k<4,%6QC#@kg.i4?5-,ANgPc1,38s4s2sJ1,(UM%6QC#@lHRo4?5/O0Koq.1,38u4s2sJ1,*-#%6QC#@lZ^q4?5/Q@6P,_1,39I4s2sJ1,L[K%6QC#@q%VE4?5/Q@m1>a1,39K4s2sJ1,NQ+%6QC#@q7bG4?5/S3Bdm71,39M4s2sJ1,UdM%6QC#@qInI4?5/Q3Bdm71,3;n4s2sJ1,_''T%6QC#A2-7j4?50*2a.[51,3;r4s2sJ11`C.%6QC#A2QOn4?50-2a.[51,3;t4s2sJ11WC/%6QC#A2c[p4?50-0Koq.1,3<!4s2t"@59c*%6QC#A2ugr4?50-2*MI31,3<J4s2sJ11`.''%6QC#A7@_F4?50-1Hl711,3<L4s2sJ1GUgO%6QC#A7RkH4?52Q0g6%/1,3<N4s2sJ11juZ%6QC#A7e"J4D&"W3''Id61,3>o4s2sJ1GNH)%6QC#AMH@k4?50/Aj-Yd1,3>q4s2sJ1GNE(%6QC#AMZLm4?52O1-Q.01,3>s4s2sJ1H.!O%6QC#AMlXo4?52T2a.[51,3>u4s2sJ1LW+(%6QC#AN)dq4?53-2EhR41,3?"4s2sJ1Lt&\%6QC#AN;ps4?5303''Id61,3?K4s2sJ1c$jM%6QC#AR[hG4?55T2*MI31,3?M4s2sJ1c.0U%6QC#ARmtI4?58Z1-Q.01,3?O4s2sJ2E3TY%6QC#AS++K4D&"W3Bdm71,3Ap4s2sJ2E>;3%6QC#AhcIl4?5<.Aj-Yd1,3Ar4s2sJ2`!6R%6QC#AhuUn4?5>V@Qk5`1,3At4s2sJ2`*<S%6QC#Ai2ap4?5>WA3LH6DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d0kN=-+?VYC1hJo\4>JX''2a/?H3B&fM4q0V00kNC/+?VYC2)RQ,4>JX''3BeQJ3B/lT4q0V00kOiX+?VYD2DmZ-4>JX''A3M+u3B8iR4q0V00kOu\+?X7E11NKW4>JX''Aj.>"3B9*24q0V01,(CG+?VYm1hAi[4>JZG0g6^B3FQGY4q0V01,(II+?VYmA7Ie44>JZG1HlpD3FXp)4q0V01,(OK+?VYn2_mQ+4>JZG2*N-F3FXs[4q0V01,(UM+?VYn@PL%U4>JZG2a/?H3FZH,4q0V01,([O+?VYo0JG["4>JZG3BeQJ3Fk''&4q0V01,*-#+?VYp2I\iZ4>JZG@QknsAmmH*4q0V01,*3%+?VYq0f_E,4>JZGA3M+u3Fu_U4q0V01,*9''+?V>3@:MJ14>JZGAj.>"0JG@o4q0V01,NK)+?V>3@5U4X4>JZM@m2"t0JHon4q0V01,`Z,+?V>32e5)]4>JZMANh5!0JbC=4q0V01,``.+?VD50f_E,4>JZN0KpUA0JG@o4q0V01,gpO+?VD50fV?+4>JZN1-QgC0JGFq4q0V01,h!Q+?V>32e>/^4>JZN2a/?H1,(OA4q0V01,h0V+?V>43ANc-4>JZN3BeQJ0JHoo4q0V01,iW*+?V>3@5L.W4>JZN@Qkns1,(Fm4q0V01,i],+?V>3@:DD04>JZO0g6^B1,(F<4q0V01,q*S+?V>3@Q-I[4>JZO2*N-F0JHro4q0V01,q0U+?VD51,;$&4>JZO2a/?H1,(Fk4q0V01,q6W+?VD50kENX4>JZO3BeQJ1,(Fn4q0V01,r]++?V>3@U_M14>JZO@Qkns1,(IA4q0V01,rc-+?VD51GD!%4>JZOA3M+u0JHsJ4q0V01-%$P+?V>3@:h\44>JZP1d3$E0JbCk4q0V01-%3U+?V>3@Q6O\4>JZP2Ei6G0JbCl4q0V01-%9W+?V>61,qH,4>JZP3''JHI0JbCm4q0V01-%?Y+?V>61H%E+4>JZP@6Per0JHup4q0V01-&f-+?V>3@:;>/4>JZP@m2"t0JPC=4q0V01-&l/+?V>3A2la^4>JZPANh5!0JPF?4q0V01-&r1+?V>3@UVG04>J[#0KpUA0JI&r4q0V011;n$+?V>41GM''&4>J[#1-QgC0JPC>4q0V011;t&+?V>3AiMs`4>J[#1d3$E0JPF@4q0V011<%(+?V>3A7e"74>J[#2Ei6G0JG7m4q0V011<+*+?V>3@6$L\4>J[#3''JHI0JHpF4q0V011<1,+?V>3@:_V34>J[#ANh5!0JHrn4q0V011=cY+?V>3@Q?U]4>J[''ANh5!0JPI>4q0V011b&]+?V>42`Nu14>J[(0KpUA0JPLs4q0V011i7)+?V>60Ju$''4>J[(1-QgC0JPI?4q0V011i=++?VD61,;$&4>J[(1d3$E0JPLt4q0V011iC-+?V>31GD!%4>J[(2Ei6G1,(C;4q0V01G^dM+?V>3@5U4X4>J]M1d3$E1,(Lq4q0V01Gq$R+?X7J1b_*&4>J]M2Ei6G1,(L>4q0V01Gq*T+?V>3@5pF[4>J]M3''JHI1,(LB4q0V01Gq0V+?V>3@l-@Y4>J]M@6Per0JI*!4q0V01GrW*+?V>3AN;p`4>J]M@m2"t0JI''K4q0V01Gr],+?V>3A7e"74>J]MANh5!0JI&s4q0V01Grc.+?V>3@lHR\4>J]N0KpUA0JI#l4q0V01H$sO+?V>3AhcIY4>J]N1d3$E0JI)p4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC%2DmZ@4>8I$@6P,_1,CgH4s2sA0OZ\"%6QC%2E*fB4>8HuAj-Yd1,CgJ4s2sA0OeQV%6QC%2E<rD4>8I"2EhR41,Cgs4s2sA0P"ZW%6QC%2I\im4>8I#1d2@21,Cgu4s2sA0P+]W%6QC%2Inuo4>8I#Aj-Yd1,Ch"4s2sA0P34,%6QC%2J,,q4>8I"@m1>a1,CjC4s2sA0P*"''%6QC%2_dK=4>8I#@6P,_1,CjE4s2sA0P+fZ%6QC%2`!W?4>8I$1d2@21,CjG4s2sA0P4fY%6QC%2`3cA4>8I#0Koq.1,CjI4s2sA0P*7.%6QC%2`EoC4>8I#0g6%/1,CjK4s2sA0K3Q,%6QC%2`X&E4>8HF0Koq.1,Cjt4s2sA0O\HT%6QC%2e"rn4>8HH@m1>a1,EBN4s2sD0P+fZ%6QC%@V.eH4>S["@Qk5`1,EDo4s2sD0Ocb#%6QC%@kg.i4>S[''1d2@21,EDq4s2sD0O\HT%6QC%@l$:k4>S["ANgPc1,EDs4s2sD0Oc_"%6QC%@l6Fm4>S[#1-Q.01,EDu4s2sD0Ock&%6QC%@lHRo4>S[#2EhR41,EE"4s2sD0Od"*%6QC%@lZ^q4>S[#@6P,_1,EEK4s2sD0OeNU%6QC%@q%VE4>S[#ANgPc1,EEM4s2sD0Ole#%6QC%@q7bG4>S[$1-Q.01,EEO4s2sD0Olt(%6QC%@qInI4>S[$2a.[51,EGp4s2sD0Om+,%6QC%A7@_F4D&1`0Koq.1,EHN4s2sD0KCmP%6QC%A7RkH4>SZJ0g6%/1,EHP4s2sD0JkRL%6QC%A7e"J4>SZJ2*MI31,EJq4s2sD0Jk^P%6QC%AMH@k4>SZJ3Bdm71,EJs4s2sD0K:jP%6QC%AMZLm4>SZN2*MI31,EJu4s2sD0K;!T%6QC%AMlXo4>SZL1Hl711,EK"4s2sD0JkOK%6QC%AN)dq4>SZJ1d2@21,EK$4s2sD0Jk[O%6QC%AN;ps4>SZJ3''Id61,EKO4s2sD0Jm<(%6QC%ARmtI4>SZJAj-Yd1,EKQ4s2sD0JtRK%6QC%AS++K4>SZK1Hl711,EMr4s2sD0Jt^O%6QC%AhcIl4>SZK2a.[51,EMt4s2sD0JtjS%6QC%AhuUn4>SZK@Qk5`1,EN!4s2sD0K!B)%6QC%Ai2ap4>SZKAj-Yd1,EN#4s2sD0K(XL%6QC%AiDmr4>SZL1d2@21,EN%4s2sD0K(gQ%6QC%AiW$t4>SZL3''Id61,L[=4s2sD0K1aN%6QC&0JPa64>SZM2*MI31,L[?4s2sD0K1sT%6QC&0Jbm84>SZM@Qk5`1,L[F4s2sD0K:mQ%6QC&0O[-f4>SZN2EhR41,L^?4s2sD0K<Z.%6QC&0etp84>SZO1Hl711,L^C4s2sD0K<W-%6QC&0fD3<4>SZJ@m1>a1,L^E4s2sD0Jm?)%6QC&0fV?>4>SZK0Koq.1,L^G4s2sD0JtUL%6QC&0k!6g4>SZK1d2@21,L^p4s2sD0JtaP%6QC&0k3Bi4>SZK3''Id61,L^r4s2sD0K!9&%6QC&0kENk4>SZK@m1>a1,L^t4s2sD0K!E*%6QC&1,(m74>SZL0Koq.1,La@4s2sD0K([M%6QC&1,;$94>SZL2*MI31,LaB4s2sD0K(jR%6QC&1,M0;4>SZL3Bdm71,LdA4s2sA0K!<''%6QC&1GV-:4>8HHA3LGb1,Ldr4s2sC0JP=H%6QC&1LiTk4D&1`0Koq.1,LsN4s2sC2.A=)%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>J`Q@6Per1,*-H4q0V01cSr.+?VD61,_<*4>J`QANh5!An!GJ4q0V01c[9S+?V>40JPa#4>J`R1-QgC0JP=l4q0V01c[?U+?V>42I\iZ4>J`R1d3$E0JP:<4q0V01c[EW+?V>41h8cZ4>J`R2Ei6G0JP784q0V01c[KY+?V>411<?U4>J`R3''JHI0JPIo4q0V01c[Q[+?V>40etp%4>J`R@6Per0JPCo4q0V01gr+&+?VD52_[E)4>Ja&1-QgC0JR''J4q0V01h&7)+?V>40k!6T4>Ja&1d3$E0JG=@0JbCk4q0V01h&=++?VAi@UhS24>Ja&2Ei6G0JR''L4q0V01h&C-+?V>31c[6G0O[-S4>Ja&3''JHI0JP=B4q0V01h&I/+?V>4A2-7W4>Ja&@6Per0JG=q0JbCk4q0V01h''oX+?V>4A2?CY4>Ja&@m2"t0JPIs4q0V01h''uZ+?V>42E3l04>Ja&ANh5!0JR''K4q0V01h(&\+?V>40k*<U4>Ja''0KpUA0JGCB0JbCk4q0V01h/7(+?VAi@UqY34>Ja''1-QgC0JR)l4q0V01h/=*+?V>41GLR>0O[-S4>Ja''1d3$E0JP=C4q0V01h/C,+?V>4A26=X4>Ja''2Ei6G0JGCs0JbCk4q0V01h/I.+?V>4A2HIZ4>Ja''3''JHI0JPIt4q0V01h/O0+?V>42E<r14>Ja''@6Per0JYL?4q0V01h0uY+?VAj2_dK*4>Ja''@m2"t0kN?u4q0V01h1&[+?V>4An4(74>Ja''ANh5!0JI&r4q0V01h1,]+?V>52)IK+4>Ja(0KpUA0JYLB4q0V01h8=)+?V>52)IK+4>Ja(1-QgC0JYLG4q0V01h8C++?V>52*!i04>Ja(2Ei6G0JYLo4q0V01h8U1+?VAj2`!W,4>Ja(@6Per0kN@"4q0V01h:&Z+?V>51H.K,4>Ja(@m2"t0JPCn4q0V01h:,\+?V>52`3c.4>Ja(ANh5!0JYUt4q0V01h:2^+?V>53+G,]4>Ja)0KpUA0JYUt4q0V01hAC*+?V>53ANc-4>Ja)1-QgC0JYUD4q0V01hAI,+?V>5A2$1V4>JcL0KpUA0JHom4q0V02)I!N+?V>3@5^:Y4>JcN0g6^B0JGFr4q0V02)I''P+?V>60Jbm%4>JcN1HlpD1,(FC4q0V02)I-R+?V>32.JfZ4>JcN2*N-F1,(FB4q0V02)I3T+?V>32e,#\4>JcN2a/?H0JGFs4q0V02)Jc++?VD51c.B*4>JcN@m2"t0JPRC4q0V02)Ji-+?V>3@5g@Z4>JcNANh5!0JHol4q0V02)Jo/+?VD50k3BV4>JcO0KpUA0JHpE4q0V02)R6T+?VD50etp%4>JcO3''JHI0JHrp4q0V02)RBX+?V>3@Q$CZ4>JcO@6Per1,(I=4q0V02)Si,+?VD50k!6T4>JcO@m2"t1,(Fo4q0V02)So.+?VD50k<HW4>JcOANh5!0JHsF4q0V02)Su0+?VD51,_<*4>JcP0KpUA1,(L<4q0V02)[0Q+?V>3@V.e54>JcP1d3$E0JHpI4q0V02)[EX+?V>60O[-S4>JcP3BeQJ0JHrq4q0V02)\l,+?V>60Od3T4>JcP@Qkns0JbID4q0V02)\r.+?V>60Om9U4>JcPA3M+u0JbLC4q0V02)]#0+?V>3@l?L[4>JcPAj.>"0JHpD4q0V02)d3Q+?V>41bh0''4>JcQ0g6^B0JI#s4q0V02)d9S+?V>42)7?)4>JcQ1HlpD0JHsE4q0V02)d?U+?V>3AMu^]ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,V!J4s2sA0f(OJ%6QC''2`<iB4>8KH1-Q.01,V!L4s2sA0P3:.%6QC''2`NuD4>8KI1Hl711,V!N4s2sA0P"cZ%6QC''2dnlm4>8HEA3LGb1,V""4s2sA0OZt*%6QC''2e,#o4>8Ht@m1>a1,V"$4s2sA0O\NV%6QC''3&3Z?4>8Hu2*MI31,V$I4s2sA0Od%+%6QC''@kp4j4>8KJ0Koq.1,WPt4s2sA0fM''U%6QC''@l-@l4>8KKA3LGb1,WQ!4s2sA1GC[M%6QC''@l?Ln4>8KJ0g6%/1,WQ#4s2sC0etLJ%6QC''@lQXp4>8KKANgPc1,WQ%4s2sA0JbCH%6QC''@pqPD4>JU!@m1>a1,WQN4s2sC0etXN%6QC''@q@hH4D&%V0Koq.1,WSs4s2sA0eb=G%6QC''A26=k4>8KF@Qk5`1,WSu4s2sA0fEK)%6QC''A2HIm4>8KE1Hl711,WT"4s2sA0f3E)%6QC''A2ZUo4>8KD0Koq.1,WT$4s2sA0f!0$%6QC''A2laq4>8KJ@6P,_1,WT&4s2sA0ekFI%6QC''A77YE4>8KH@m1>a1,WVt4s2sC0K1[L%6QC''AhlOm4>8L"A3LGb1,WZ"4s2sA0em*#%6QC''Ai)[o4>8HG2)$g?@6P,_1,WZ$4s2sBAR].5%6QC''Ai;gq4>8L"Aj-Yd1,WZ&4s2sA0JkdD1GE6$%6QC''AiMss4>8KF3''Id61,WZ(4s2sA0k<"&%6QC''AmmkG4>8HGAhZ"p@6P,_1,WZQ4s2sA0k<((%6QC''An+"I4>8KJANgPc1,WZS4s2sA0fD!T%6QC''An=.K4>8L"ANgPc1,WZU4s2sA0em-$%6QC(0JG[54>8HI2)$g?@6P,_1,^g@4s2sBAR]16%6QC(0JYg74>8L#0Koq.1,^gB4s2sA0f(O<1GE6$%6QC(0Jks94>8KF3Bdm71,^gD4s2sA0k<%''%6QC(0K)*;4>8HIAhZ"p@6P,_1,^gF4s2sA0k<+)%6QC(0K;6=4>8KJAj-Yd1,^gH4s2sA0fD$U%6QC(0f2'':4>8QI2EhR41,^jE4s2sA0J[0&%6QC(0fD3<4>8HFA3LGb1,^jG4s2sA0J[-%%6QC(1,qH?4>8QI2EhR41,^mJ4s2sA0J[0&%6QC(11<?h4>8HFA3LGb1,^ms4s2sA0J[-%%6QC(1GV-:4>8Hu2a.[51,^pE4s2sC0O\HT%6QC(1Gh9<4>8HF0JG19AhYnp1Hl711,^pI4s2sA0OeTW%6QC(1M&`m4>8HF0eb::AhYnp2a.[51,^q#4s2sA0JbI<0J[5o0JbXO%6QC(1b_*94>8HF1GCL<AhYnp2a.[51,^sD4s2sA0JbO>0J[5o0JbXO%6QC(1bq6;4>8HF2)$^>AhYnp2a.[51,^sF4s2sA0JbU@0J[5o0JbXO%6QC(1cRZA4>8HF0eb::AhYnp3Bdm71,^sL4s2sA0JbI<0J[5o0Jb^Q%6QC(1grQj4>8HF1b^U=AhYnp3Bdm71,^su4s2sA0JbR?0J[5o0Jb^Q%6QC(1h/]l4>8HF2_Zp@AhYnp3Bdm71,^t"4s2sA0Jb[B0J[5o0Jb^Q%6QC(1hAin4>8HF0eb::AhYnp0eb:;0Koq.1,^t$4s2sA0JbL=0J[5o0JbF;0JbCH%6QC(2)%3:4>8HF2_Zp@AhYnp0eb:;0Koq.1,_!E4s2sA0Jb^C0J[5o0JbF;0JbCH%6QC(2)7?<4>8HF0eb::AhYnp0eb:;0g6%/1,_!G4s2sA0JbI<0J[5o0JbF;0JbFI%6QC(2)IK>4>8HF1GCL<AhYnp0eb:;0g6%/1,_!I4s2sA0JbO>0J[5o0JbF;0JbFI%6QC(2)[W@4>8HF2)$^>AhYnp0eb:;0g6%/1,_!K4s2sA0JbU@0J[5o0JbF;0JbFI%6QC(2)mcB4>8HF2_Zp@AhYnp0eb:;0g6%/1,_!M4s2sA0Jb[B0J[5o0JbF;0JbFI%6QC(2.8Zk4>8HF3A<-BAhYnp0eb:;0g6%/1,_"!4s2sA0JbF;0JbC:0J[5o0JbF;0JbFI%6QC(2.Jfm4>8HF0eb::AhYnp0eb:;1-Q.01,_"#4s2sA0JbR?0J[5o0JbF;0JbIJ%6QC(2.\ro4>8HF2_Zp@AhYnp0eb:;1-Q.01,_"%4s2sA0JbF;0JbF;0J[5o0JbF;0JbIJ%6QC(2D@<;4>8HF0eb::AhYnp0eb:;0JG1:0KoqWDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d2E!9R+?V>31GCL:11i3o1G_3(4>JfQ1-QgC0JG:;0JG7o0JG:<4q0V02E!?T+?V>31GLR;11i3o1G_3(4>JfQ1d3$E0JG:<0JG7o0JG:=4q0V02E!EV+?V>31GLR;11i3o1Gh9)4>JfQ2Ei6G0JG:=0JG7o0JG:>4q0V02E!KX+?V>31GLR;11i3o1Gq?*4>JfQ3''JHI0JG:<0JG7o0JG:?4q0V02E!QZ+?V>31G^^=11i3o1Gq?*4>JfQ@6Per0JG:>0JG7o0JG:?4q0V02E##.+?V>31GLR;11i3o1H%E+4>JfQ@m2"t0JG:?0JG7o0JG:@4q0V02E#)0+?V>31GLR;11i3o1H.K,4>JfQANh5!0JG:<0JG7o0JG:A4q0V02E#/2+?V>31G^^=11i3o1H.K,4>JfR0KpUA0JG:>0JG7o0JG:A4q0V02E*?S+?V>31Gpj?11i3o1H.K,4>JfR1-QgC0JG:@0JG7o0JG:A4q0V02E*EU+?V>31GLR;11i3o1H7Q-4>JfR1d3$E0JG:=0JG7o0JG:B4q0V02E*KW+?V>31Gpj?11i3o1H7Q-4>JfR2Ei6G0JG:A0JG7o0JG:B4q0V02E*QY+?V>31GLR;11i3o1H@W.4>JfR3''JHI0JG:<0JG7o0JG:C4q0V02E*W[+?V>31Ggd>11i3o1H@W.4>JfR@6Per0JG:?0JG7o0JG:C4q0V02E,)/+?V>31H.!A11i3o1H@W.4>JfR@m2"t0JG:B0JG7o0JG:C4q0V02E,/1+?V>31GLR;11i3o1GLR;1GD!%4>JfRANh5!0JG:=0JG7o0JG:;0JG::4q0V02E,53+?V>31H.!A11i3o1GLR;1GD!%4>JfS0KpUA0JG:C0JG7o0JG:;0JG::4q0V02E3ET+?V>31GLR;11i3o1GLR;1GM''&4>JfS1-QgC0JG:<0JG7o0JG:;0JG:;4q0V02E3KV+?V>31G^^=11i3o1GLR;1GM''&4>JfS1d3$E0JG:>0JG7o0JG:;0JG:;4q0V02E3QX+?V>31Gpj?11i3o1GLR;1GM''&4>JfS2Ei6G0JG:@0JG7o0JG:;0JG:;4q0V02E3WZ+?V>31H.!A11i3o1GLR;1GM''&4>JfS3''JHI0JG:B0JG7o0JG:;0JG:;4q0V02E3]\+?V>31H@-C11i3o1GLR;1GM''&4>JfS@6Per0JG:;0JG::0JG7o0JG:;0JG:;4q0V02E5/0+?V>31GLR;11i3o1GLR;1GV-''4>JfS@m2"t0JG:?0JG7o0JG:;0JG:<4q0V02E552+?V>31H.!A11i3o1GLR;1GV-''4>JfSANh5!0JG:;0JG:;0JG7o0JG:;0JG:<4q0V02E5;4+?V>31GLR;11i3o1GLR;1GCL:1GD!%4>JfT@6Per0JG::4q0V02E>51+?VD62D[N+4>JfT@m2"t0JG::0JG::4q0V02E>;3+?V>31GCL:1GM''&4>JfTANh5!0JG::0JG:<4q0V02E>A5+?V>31GCL:1G_3(4>Jg''0KpUA0JG::0JG:>4q0V02IS=(+?V>31GCL:1Gq?*4>Jg''1-QgC0JG::0JG:@4q0V02ISC*+?V>31GCL:1H.K,4>Jg''1d3$E0JG::0JG:B4q0V02ISI,+?V>31GCL:1H@W.4>Jg''2Ei6G0JG:<0JG:;4q0V02ISO.+?V>31GUX<1GV-''4>Jg''3''JHI0JG:<0JG:=4q0V02ISU0+?V>31GUX<1Gh9)4>Jg''@6Per0JG:<0JG:?4q0V02IU&Y+?V>31GUX<1H%E+4>Jg''@m2"t0JG:<0JG:A4q0V02IU,[+?V>31GUX<1H7Q-4>Jg''ANh5!0JG:<0JG:C4q0V02IU2]+?V>31G^^=1GD!%4>Jg(0KpUA0JG:=0JG:;4q0V02I\C)+?V>31G^^=1GV-''4>Jg(1-QgC0JG:=0JG:=4q0V02I\I++?V>31G^^=1Gh9)4>Jg(1d3$E0JG:=0JG:?4q0V02I\O-+?V>31G^^=1H%E+4>Jg(2Ei6G0JG:=0JG:A4q0V02I\U/+?V>31G^^=1H7Q-4>Jg(3''JHI0JG:=0JG:C4q0V02I\[1+?V>31Ggd>1GD!%4>Jg(@6Per0JG:>0JG:;4q0V02I^,Z+?V>31Ggd>1GV-''4>Jg(@m2"t0JG:>0JG:=4q0V02I^2\+?V>31Ggd>1Gh9)4>Jg(ANh5!0JG:>0JG:?4q0V02I^8^+?V>31Ggd>1H%E+4>Jg)0KpUA0JG:>0JG:A4q0V02IeI*+?V>31Ggd>1H7Q-4>Jg)1-QgC0JG:>0JG:C4q0V02IeO,+?V>31Gpj?1GD!%4>Jg)1d3$E0JG:?0JG:;4q0V02IeU.+?V>31Gpj?1GV-''4>Jg)2Ei6G0JG:?0JG:=4q0V02Ie[0+?V>31Gpj?1Gh9)4>Jg)3''JHI0JG:?0JG:?4q0V02Iea2+?V>31Gpj?1H%E+4>Jg)@6Per0JG:?0JG:A4q0V02Ig2[+?V>31Gpj?1H7Q-4>Jg)@m2"t0JG:?0JG:C4q0V02Ig8]+?V>31H$p@1GD!%4>Jg)ANh5!0JG:@0JG:;4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC(@qInI4>8HF2D?g@1-Q.01,`Ys4s2sA0JbU@0JbLK%6QC(A2-7j4>8HF2D?g@1d2@21,`Yu4s2sA0JbU@0JbRM%6QC(A2?Cl4>8HF2D?g@2EhR41,`Z"4s2sA0JbU@0JbXO%6QC(A2QOn4>8HF2D?g@3''Id61,`Z$4s2sA0JbU@0Jb^Q%6QC(A2c[p4>8HF2_ZpA0Koq.1,`Z&4s2sA0JbXA0JbFI%6QC(A2ugr4>8HF2_ZpA1-Q.01,`ZO4s2sA0JbXA0JbLK%6QC(A7@_F4>8HF2_ZpA1d2@21,`ZQ4s2sA0JbXA0JbRM%6QC(A7RkH4>8HF2_ZpA2EhR41,`ZS4s2sA0JbXA0JbXO%6QC(A7e"J4>8HF2_ZpA3''Id61,`\t4s2sA0JbXA0Jb^Q%6QC(AMH@k4>8HF3&!$B0Koq.1,`]!4s2sA0Jb[B0JbFI%6QC(AMZLm4>8HF3&!$B1-Q.01,`]#4s2sA0Jb[B0JbLK%6QC(AMlXo4>8HF3&!$B1d2@21,`]%4s2sA0Jb[B0JbRM%6QC(AN)dq4>8HF3&!$B2EhR41,`]''4s2sA0Jb[B0JbXO%6QC(AN;ps4>8HF3&!$B3''Id61,`]P4s2sA0Jb[B0Jb^Q%6QC(AR[hG4>8HF3A<-C0Koq.1,`]R4s2sA0Jb^C0JbFI%6QC(ARmtI4>8HF3A<-C1-Q.01,`]T4s2sA0Jb^C0JbLK%6QC(AS++K4>8HF3A<-C1d2@21,`_u4s2sA0Jb^C0JbRM%6QC(AhcIl4>8HF3A<-C2EhR41,``"4s2sA0Jb^C0JbXO%6QC(AhuUn4>8HF3A<-C3''Id61,``$4s2sA0Jb^C0Jb^Q%6QC(Ai2ap4>8HF0eb:;0JG1:0Koq.1,gmB4s2sA0K1sF0K(pF0K(pF0K(pT%6QC)0Jbm84>8HJ3&!$E3A<-G2EhR41,gmD4s2sA0K1sF0K1mR%6QC)0ekj74>8HH3&!$C3A<-D3A<-D3Bdm71,gpC4s2sA0JtgD0JkdD0JtaP%6QC)0f)!94>8HH3&!$D2EhR41,gt"4s2sD0JkOK%6QC)11i]m4>SZJ1d2@21,h!C4s2sD0Jk[O%6QC)1GM''94>SZJ3''Id61,h!G4s2sD0Jm<(%6QC)1Gq?=4>SZJAj-Yd1,h!I4s2sD0JtRK%6QC)1H.K?4>SZK1Hl711,h!K4s2sD0Jt^O%6QC)1H@WA4>SZK2a.[51,h!t4s2sD0JtjS%6QC)1L`Nj4>SZK@Qk5`1,h"!4s2sD0K!B)%6QC)1LrZl4>SZKAj-Yd1,h"#4s2sD0K(XL%6QC)1M/fn4>SZL1d2@21,h$D4s2sD0K(gQ%6QC)1bh0:4>SZL3''Id61,h$L4s2sD0K1aN%6QC)1c[`B4>SZM2*MI31,h$u4s2sD0K1sT%6QC)1h&Wk4>SZM@Qk5`1,h''F4s2sD0K:mQ%6QC)2)7?<4>SZN2EhR41,h(%4s2sD0OZ_#%6QC)2.f#p4>S["1d2@21,h*F4s2sD0OZk''%6QC)2DIB<4>S["3''Id61,h*J4s2sD0O\KU%6QC)2DmZ@4>S["Aj-Yd1,h*L4s2sD0Ocb#%6QC)2E*fB4>S[#1Hl711,h*N4s2sD0Ocn''%6QC)2E<rD4>S[#2a.[51,h+"4s2sD0Od%+%6QC)2I\im4>S[#@Qk5`1,h+$4s2sD0OeQV%6QC)2Inuo4>S[#Aj-Yd1,h+&4s2sD0Olh$%6QC)2J,,q4>S[$1d2@21,h-G4s2sD0Om")%6QC)2_dK=4>S[$3''Id61,h-O4s2sD0Ouq&%6QC)2`X&E4>S[%2*MI31,h.#4s2sD0P!.,%6QC)2e"rn4>S[%@Qk5`1,h0I4s2sD0P*()%6QC)3&3Z?4>S[&2EhR41,h3Q4s2sF1GggCAM>f%%6QC)3B98G4>eoO0f3H$@m1>a1,h4%4s2sF1GggCAM?,.%6QC)3FY/p4>eoO0f:k"@Qk5`1,h4''4s2sF1GggCAN;S2%6QC)3Fk;r4>eoO0f:[DA3LGb1,h4)4s2sF1GggCAM>o(%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>JiUAj.>"2)@''D2).!u4q0V02dnC(+?VM;1bggu2.Sl[4>Jj(0g6^B1hAXV2)@''D4q0V02dnI*+?VM=@Q$CZ4>Jj(1HlpD2)I!H4q0V02dnO,+?VPlAR[h44>Jj(2*N-F2)R4&4q0V02dnU.+?VSl2)IK+4>Jj(2a/?H1hJ^V4q0V02e$8\+?VG62D[N+4>Jj)A3M+u2DR+"4q0V02e$>^+?VG60K20)4>Jj)Aj.>"1hA?p4q0V02e+O*+?VJl3+G,]4>Jj*0g6^B1hA@$4q0V02e+U,+?VM>A7@_34>Jj*1HlpD1hA[(4q0V02e+[.+?VM92Inu\4>Jj*2*N-F1hA?s4q0V02e+a0+?VM92I\iZ4>Jj*2a/?H1hAOT4q0V02e+g2+?VM;1bh0''4>Jj*3BeQJ1GCLA4q0V02e-8[+?VJl0JG["4>Jj*@Qkns1hAXV4q0V02e->]+?VJl0KD<+4>Jj*A3M+u2)\uS4q0V02e-D_+?VJl3A`o/4>Jj*Aj.>"2).""4q0V02e4U++?VJl0Jbm%4>Jj+0g6^B2).!u4q0V02e4[-+?VJl2.Sl[4>Jj+1HlpD2)@''D4q0V02e4a/+?VG60K20)4>Jj+2*N-F1hA?p4q0V02e4g1+?VJl3+G,]4>Jj+2a/?H1hA@$4q0V02e4m3+?VM>A7@_34>Jj+3BeQJ1hA[(4q0V02e6>\+?VM92Inu\4>Jj+@Qkns1hA?s4q0V02e6D^+?VM92I\iZ4>Jj+A3M+u1hAOT4q0V02e6J`+?VG62DdT,4>Jj+Aj.>"2DR+"4q0V02e=[,+?VJl0JG["4>Jj,0g6^B1hAXV4q0V02e=a.+?VJl0KD<+4>Jj,1HlpD2)\uS4q0V02e=g0+?VJl3A`o/4>Jj,2*N-F2).""4q0V02e=m2+?VJl0Jbm%4>Jj,2a/?H2).!u4q0V02e=s4+?VJl2.Sl[4>Jj,3BeQJ2)@''D4q0V02e?D]+?VG60K20)4>Jj,@Qkns1hA?p4q0V02e?J_+?VJl3+G,]4>Jj,A3M+u1hA@$4q0V02e?Pa+?VM>A7@_34>Jj,Aj.>"1hA[(4q0V02eFa-+?VM92Inu\4>Jj-0g6^B1hA?s4q0V02eFg/+?VM92I\iZ4>Jj-1HlpD1hAOT4q0V02eFm1+?VM;1bh0''4>Jj-2*N-F1GE8o4q0V02eFs3+?VG62D[N+4>Jj-2a/?H1GE;p4q0V02eG$5+?VG6@6$L\4>Jj-3BeQJ0JG7A0JG7B4q0V02eHJ^+?V>31GCL:1GD!%4>JlM1d3$E0JG:=0JG:<4q0V03&!3R+?V>31G^^=1G_3(4>JlM2Ei6G0JG:=0JG:>4q0V03&!9T+?V>31G^^=1Gq?*4>JlM3''JHI0JG:=0JG:@4q0V03&!?V+?V>31G^^=1H.K,4>JlM@6Per0JG:=0JG:B4q0V03&"f*+?V>31G^^=1H@W.4>JlM@m2"t0JG:>0JG::4q0V03&"l,+?V>31Ggd>1GM''&4>JlMANh5!0JG:>0JG:<4q0V03&"r.+?V>31Ggd>1G_3(4>JlN0KpUA0JG:>0JG:>4q0V03&*-O+?V>31Ggd>1Gq?*4>JlN1-QgC0JG:>0JG:@4q0V03&*3Q+?V>31Ggd>1H.K,4>JlN1d3$E0JG:>0JG:B4q0V03&*9S+?V>31Ggd>1H@W.4>JlN2Ei6G0JG:?0JG::4q0V03&*?U+?V>31Gpj?1GM''&4>JlN3''JHI0JG:?0JG:<4q0V03&*EW+?V>31Gpj?1G_3(4>JlN@6Per0JG:?0JG:>4q0V03&+l++?V>31Gpj?1Gq?*4>JlN@m2"t0JG:?0JG:@4q0V03&+r-+?V>31Gpj?1H.K,4>JlNANh5!0JG:?0JG:B4q0V03&,#/+?V>31Gpj?1H@W.ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,q$C4s2sA0JbU@0JbCH%6QC*1,1s84>8HF2D?g@0g6%/1,q$E4s2sA0JbU@0JbIJ%6QC*1,D*:4>8HF2D?g@1Hl711,q$G4s2sA0JbU@0JbOL%6QC*1,V6<4>8HF2D?g@2*MI31,q$I4s2sA0JbU@0JbUN%6QC*1,hB>4>8HF2D?g@2a.[51,q$K4s2sA0JbU@0Jb[P%6QC*1-%N@4>8HF2D?g@3Bdm71,q$t4s2sA0JbXA0JbCH%6QC*11EEi4>8HF2_ZpA0g6%/1,q%!4s2sA0JbXA0JbIJ%6QC*11WQk4>8HF2_ZpA1Hl711,q%#4s2sA0JbXA0JbOL%6QC*11i]m4>8HF2_ZpA2*MI31,q''D4s2sA0JbXA0JbUN%6QC*1GM''94>8HF2_ZpA2a.[51,q''F4s2sA0JbXA0Jb[P%6QC*1G_3;4>8HF2_ZpA3Bdm71,q''H4s2sA0Jb[B0JbCH%6QC*1Gq?=4>8HF3&!$B0g6%/1,q''J4s2sA0Jb[B0JbIJ%6QC*1H.K?4>8HF3&!$B1Hl711,q''L4s2sA0Jb[B0JbOL%6QC*1H@WA4>8HF3&!$B2*MI31,q''u4s2sA0Jb[B0JbUN%6QC*1L`Nj4>8HF3&!$B2a.[51,q("4s2sA0Jb[B0Jb[P%6QC*1LrZl4>8HF3&!$B3Bdm71,q($4s2sA0Jb^C0JbCH%6QC*1M/fn4>8HF3A<-C0g6%/1,q*E4s2sA0Jb^C0JbIJ%6QC*1bh0:4>8HF3A<-C1Hl711,q*G4s2sA0Jb^C0JbOL%6QC*1c%<<4>8HF3A<-C2*MI31,q*I4s2sA0Jb^C0JbUN%6QC*1c7H>4>8HF3A<-C2a.[51,q*K4s2sA0Jb^C0Jb[P%6QC*1cIT@4>8HF3A<-C3Bdm71,q*M4s2sA0JbF;0JbC:0JbCH%6QC*2e5)p4>SZJ1-Q.01,q4(4s2sD0JkUM%6QC*2eG5r4>SZJ2EhR41,q6I4s2sD0JkaQ%6QC*3&<`@4>SZJA3LGb1,q6M4s2sD0JmB*%6QC*3&NlB4>SZK0g6%/1,q6O4s2sD0JtXM%6QC*3&a#D4>SZK2*MI31,q6Q4s2sD0JtdQ%6QC*3&s/F4>SZK3Bdm71,q7%4s2sD0K!<''%6QC*3+>&o4>SZKA3LGb1,q7''4s2sD0K!H+%6QC*3+P2q4>SZL0g6%/1,q7)4s2sD0K(aO%6QC*3+b>s4>SZL2EhR41,q9J4s2sD0K(mS%6QC*3B'',E4>SZM1-Q.01,q9R4s2sD0K1jQ%6QC*3B98G4>SZM3''Id61,q:&4s2sD0K3H)%6QC*@5''kf4>SZN1d2@21,r\s4s2sD0K:sS%6QC*A7IeG4>S[''1Hl711,ri(4s2sD1-%$P%6QC*AS"%J4?-bYAj-Yd1,riW4s2sD1-&r1%6QC*AhZCk4>elPAj-Yd1,rl#4s2sGAMIXX%6QC*AhlOm4>pV&3Bdm71,rl%4s2sG@PTW$%6QC*Ai)[o4>f''0@6P,_1,rl''4s2sH3B/`W%6QC*AiMss4>S`Q@Qk5`1,rl+4s2sD1-&c,%6QC*AmmkG4>Sa$1Hl711,rlT4s2sD11;q%%6QC*An+"I4>S`Q2a.[51,rlV4s2sF0kOiX%6QC*An=.K4>S`Q@m1>a1,rlX4s2sD1-%3U%6QC+0JG[54>pb)3''Id61-%$C4s2sF3&ro]%6QC+0JYg74>euQAj-Yd1-%$E4s2sH@Pou+%6QC+0Jks94>^Y0@Qk5`1-%$G4s2sJ2J-D^%6QC+0K)*;4>Jd(@m1>a1-%$I4s2sC1hL>`%6QC+0K;6=4>8HF0JG1:0Koq.1-%$K4s2sA0JbC:0JbFI%6QC+0O[-f4>8HF0JG1:1-Q.01-%$t4s2sA0JbC:0JbLK%6QC+0Om9h4>8HF0JG1:1d2@21-%%!4s2sA0JbC:0JbRM%6QC+0P*Ej4>8HF0JG1:2EhR41-%%#4s2sA0JbC:0JbXO%6QC+0ebd64>8HF0JG1:3''Id_DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d3AE6P+?V>31GCL:1H@W.4>JoO1-QgC0JG:;0JG::4q0V03AE<R+?V>31GLR;1GM''&4>JoO1d3$E0JG:;0JG:<4q0V03AEBT+?V>31GLR;1G_3(4>JoO2Ei6G0JG:;0JG:>4q0V03AEHV+?V>31GLR;1Gq?*4>JoO3''JHI0JG:;0JG:@4q0V03AENX+?V>31GLR;1H.K,4>JoO@6Per0JG:;0JG:B4q0V03AFu,+?V>31GLR;1H@W.4>JoO@m2"t0JG:<0JG::4q0V03AG&.+?V>31GUX<1GM''&4>JoOANh5!0JG:<0JG:<4q0V03AG,0+?V>31GUX<1G_3(4>JoP0KpUA0JG:<0JG:>4q0V03AN<Q+?V>31GUX<1Gq?*4>JoP1-QgC0JG:<0JG:@4q0V03ANBS+?V>31GUX<1H.K,4>JoP1d3$E0JG:<0JG:B4q0V03ANHU+?V>31GUX<1H@W.4>JoP2Ei6G0JG:=0JG::4q0V03ANNW+?V>31G^^=1GM''&4>JoP3''JHI0JG:=0JG:<4q0V03ANTY+?V>31G^^=1G_3(4>JoP@6Per0JG:=0JG:>4q0V03AP&-+?V>31G^^=1Gq?*4>JoP@m2"t0JG:=0JG:@4q0V03AP,/+?V>31G^^=1H.K,4>JoPANh5!0JG:=0JG:B4q0V03AP21+?V>31G^^=1H@W.4>JoQ0KpUA0JG:>0JG::4q0V03AWBR+?V>31Ggd>1GM''&4>JoQ1-QgC0JG:>0JG:<4q0V03AWHT+?V>31Ggd>1G_3(4>JoQ1d3$E0JG:>0JG:>4q0V03AWNV+?V>31Ggd>1Gq?*4>JoQ2Ei6G0JG:>0JG:@4q0V03AWTX+?V>31Ggd>1H.K,4>JoQ3''JHI0JG:>0JG:B4q0V03AWZZ+?V>31Ggd>1H@W.4>JoQ@6Per0JG:?0JG::4q0V03AY,.+?V>31Gpj?1GM''&4>JoQ@m2"t0JG:?0JG:<4q0V03AY20+?V>31Gpj?1G_3(4>JoQANh5!0JG:?0JG:>4q0V03AY82+?V>31Gpj?1Gq?*4>JoR0KpUA0JG:?0JG:@4q0V03A`HS+?V>31Gpj?1H.K,4>JoR1-QgC0JG:?0JG:B4q0V03A`NU+?V>31Gpj?1H@W.4>JoR1d3$E0JG:@0JG::4q0V03A`TW+?V>31H$p@1GM''&4>JoR2Ei6G0JG:@0JG:<4q0V03A`ZY+?V>31H$p@1G_3(4>JoR3''JHI0JG:@0JG:>4q0V03A``[+?V>31H$p@1Gq?*4>JoR@6Per0JG:@0JG:@4q0V03Ab2/+?V>31H$p@1H.K,4>JoR@m2"t0JG:@0JG:B4q0V03Ab81+?V>31H$p@1H@W.4>JoRANh5!0JG:A0JG::4q0V03Ab>3+?V>31H.!A1GM''&4>JoS0KpUA0JG:A0JG:<4q0V03AiNT+?V>31H.!A1G_3(4>JoS1-QgC0JG:A0JG:>4q0V03AiTV+?V>31H.!A1Gq?*4>JoS1d3$E0JG:A0JG:@4q0V03AiZX+?V>31H.!A1H.K,4>JoS2Ei6G0JG:A0JG:B4q0V03Ai`Z+?V>31H.!A1H@W.4>JoS3''JHI0JG:B0JG::4q0V03Aif\+?V>31H7''B1GM''&4>JoS@6Per0JG:B0JG:<4q0V03Ak80+?V>31H7''B1G_3(4>JoS@m2"t0JG:B0JG:>4q0V03Ak>2+?V>31H7''B1Gq?*4>JoSANh5!0JG:B0JG:@4q0V03AkD4+?V>31H7''B1H.K,4>JoT0KpUA0JG:B0JG:B4q0V03ArTU+?V>31H7''B1H@W.4>JoT1-QgC0JG:C0JG::4q0V03ArZW+?V>31H@-C1GM''&4>JoT1d3$E0JG:C0JG:<4q0V03Ar`Y+?V>31H@-C1G_3(4>JoT2Ei6G0JG:C0JG:>4q0V03Arf[+?V>31H@-C1Gq?*4>JoT3''JHI0JG:C0JG:@4q0V03Arl]+?V>31H@-C1H.K,4>JoT@6Per0JG:C0JG:B4q0V03At>1+?V>31H@-C1H@W.4>JoT@m2"t0JG:;0JG::0JG::4q0V03FOX++?VG61bq6(4>Jp*1-QgC1GCXB4q0V03FO^-+?VG61c@N,4>Jp*1d3$E1GCXF4q0V03FOj1+?VG61h8cZ4>Jp*3''JHI1GCXt4q0V03FOp3+?VG62).9(4>Jp*@6Per1GC[B4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC+@:DDC4>SZK2*MI31-&cQ4s2sD0JtdQ%6QC+@:VPE4>SZK3Bdm71-&cS4s2sD0K!<''%6QC+@:h\G4>SZKA3LGb1-&et4s2sD0K!H+%6QC+@PL%h4>SZL0g6%/1-&f!4s2sD0K(aO%6QC+@P^1j4>SZL2EhR41-&f#4s2sD0K(mS%6QC+@U_MD4>SZM1-Q.01-&fR4s2sD0K1jQ%6QC+@UqYF4>SZM3''Id61-&fT4s2sD0K3H)%6QC+@l-@l4>SZN1d2@21-&i%4s2sD0K:sS%6QC+A2-7j4>S["1-Q.01-&l#4s2sD0OZe%%6QC+A2?Cl4>S["2EhR41-&l%4s2sD0OZq)%6QC+A2c[p4>S["A3LGb1-&l)4s2sD0O\QW%6QC+A2ugr4>S[#0g6%/1-&lR4s2sD0Och%%6QC+A7@_F4>S[#2*MI31-&lT4s2sD0Oct)%6QC+A7RkH4>S[#3Bdm71-&lV4s2sD0OeKT%6QC+A7e"J4>S[#A3LGb1-&o"4s2sD0OeWX%6QC+AMH@k4>S[$0g6%/1-&o$4s2sD0Olq''%6QC+AMZLm4>S[$2EhR41-&o&4s2sD0Om(+%6QC+AR[hG4>S[%1-Q.01-&oU4s2sD0P!%)%6QC+ARmtI4>S[%3''Id61-&oW4s2sD0P"WV%6QC+Ai)[o4>S[&1d2@21-&r(4s2sD0P*.+%6QCS0JG[54>S[''1Hl7111;jk4s2sG2.\X/%6QCS0JYg74>o,P3''Id611;jm4s2sH0K*B(%6QCS0Jks94>p\*1d2@211;jo4s2sG2_m?V%6QCS0K)*;4?5-,0g6%/11;jq4s2sF2_eo.%6QCS0K;6=4>euQAj-Yd11;js4s2sH@Pou+%6QCS0O[-f4>^Y0@Qk5`11;kG4s2sC2.L5^%6QCS0Om9h4>8HF0Koq.11;kI4s2sA0JbC:0JbCH%6QCS0P*Ej4>8HF0g6%/11;kK4s2sA0JbC:0JbFI%6QCS0ebd64>8HF1-Q.011;ml4s2sA0JbC:0JbIJ%6QCS0etp84>8HF1Hl7111;mn4s2sA0JbC:0JbLK%6QCS0f2'':4>8HF1d2@211;mp4s2sA0JbC:0JbOL%6QCS0fD3<4>8HF2*MI311;mr4s2sA0JbC:0JbRM%6QCS0fV?>4>8HF2EhR411;mt4s2sA0JbC:0JbUN%6QCS0k!6g4>8HF2a.[511;nH4s2sA0JbC:0JbXO%6QCS0k3Bi4>8HF3''Id611;nJ4s2sA0JbC:0Jb[P%6QCS0kENk4>8HF3Bdm711;nL4s2sA0JbC:0Jb^Q%6QCS1,(m74>8HF0eb:;0Koq.11;pm4s2sA0JbF;0JbFI%6QCS1,;$94>8HF0eb:;1-Q.011;po4s2sA0JbF;0JbLK%6QCS1,M0;4>8HF0eb:;1d2@211;pq4s2sA0JbF;0JbRM%6QCS1,_<=4>8HF0eb:;2EhR411;ps4s2sA0JbF;0JbXO%6QCS1,qH?4>8HF0eb:;3''Id611;pu4s2sA0JbF;0Jb^Q%6QCS11<?h4>8HF1,(C<0Koq.11;qI4s2sA0JbI<0JbFI%6QCS11NKj4>8HF1,(C<1-Q.011;qK4s2sA0JbI<0JbLK%6QCS11`Wl4>8HF1,(C<1d2@211;qM4s2sA0JbI<0JbRM%6QCS1GD!84>8HF1,(C<2EhR411;sn4s2sA0JbI<0JbXO%6QCS1GV-:4>8HF1,(C<3''Id611;sp4s2sA0JbI<0Jb^Q%6QCS1Gh9<4>8HF1GCL=0Koq.11;sr4s2sA0JbL=0JbFI%6QCS1H%E>4>8HF1GCL=1-Q.011;st4s2sA0JbL=0JbLK%6QCS1H7Q@4>8HF1GCL=1d2@211;t!4s2sA0JbL=0JbRM%6QCS1LWHi4>8HF1GCL=2EhR411;tJ4s2sA0JbL=0JbXO%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>L>$@m2"t0JG:=0JG:B4q0V0@5DFX+?V>31G^^=1H@W.4>L>$ANh5!0JG:>0JG::4q0V0@5DLZ+?V>31Ggd>1GM''&4>L>%0KpUA0JG:>0JG:<4q0V0@5K]&+?V>31Ggd>1G_3(4>L>%1-QgC0JG:>0JG:>4q0V0@5Kc(+?V>31Ggd>1Gq?*4>L>%1d3$E0JG:>0JG:@4q0V0@5Ki*+?V>31Ggd>1H.K,4>L>%2Ei6G0JG:>0JG:B4q0V0@5Ko,+?V>31Ggd>1H@W.4>L>%3''JHI0JG:?0JG::4q0V0@5Ku.+?V>31Gpj?1GM''&4>L>%@6Per0JG:?0JG:<4q0V0@5MFW+?V>31Gpj?1G_3(4>L>%@m2"t0JG:?0JG:>4q0V0@5MLY+?V>31Gpj?1Gq?*4>L>%ANh5!0JG:?0JG:@4q0V0@5MR[+?V>31Gpj?1H.K,4>L>&0KpUA0JG:?0JG:B4q0V0@5Tc''+?V>31Gpj?1H@W.4>L>&1-QgC0JG:@0JG::4q0V0@5Ti)+?V>31H$p@1GM''&4>L>&1d3$E0JG:@0JG:<4q0V0@5To++?V>31H$p@1G_3(4>L>&2Ei6G0JG:@0JG:>4q0V0@5Tu-+?V>31H$p@1Gq?*4>L>&3''JHI0JG:@0JG:@4q0V0@5U&/+?V>31H$p@1H.K,4>L>&@6Per0JG:@0JG:B4q0V0@5VLX+?V>31H$p@1H@W.4>L>&@m2"t0JG:A0JG::4q0V0@5VRZ+?V>31H.!A1GM''&4>L>&ANh5!0JG:A0JG:<4q0V0@5VX\+?V>31H.!A1G_3(4>L>''0KpUA0JG:A0JG:>4q0V0@5]i(+?V>31H.!A1Gq?*4>L>''1-QgC0JG:A0JG:@4q0V0@5]o*+?V>31H.!A1H.K,4>L>''1d3$E0JG:A0JG:B4q0V0@5]u,+?V>31H.!A1H@W.4>L>''2Ei6G0JG:B0JG::4q0V0@5^&.+?V>31H7''B1GM''&4>L>''3''JHI0JG:B0JG:<4q0V0@5^,0+?V>31H7''B1G_3(4>L>''@6Per0JG:B0JG:>4q0V0@5_RY+?V>31H7''B1Gq?*4>L>''@m2"t0JG:B0JG:@4q0V0@5_X[+?V>31H7''B1H.K,4>L>''ANh5!0JG:B0JG:B4q0V0@5_^]+?V>31H7''B1H@W.4>L>(0KpUA0JG:C0JG::4q0V0@5fo)+?V>31H@-C1GM''&4>L>(1-QgC0JG:C0JG:<4q0V0@5fu++?V>31H@-C1G_3(4>L>(1d3$E0JG:C0JG:>4q0V0@5g&-+?V>31H@-C1Gq?*4>L>(2Ei6G0JG:C0JG:@4q0V0@5g,/+?V>31H@-C1H.K,4>L>(3''JHI0JG:C0JG:B4q0V0@5g21+?V>31H@-C1H@W.4>L>(@6Per0JG:;0JG::0JG::4q0V0@:<b3+?VG61bq6(4>L>S0KpUA1GCXB4q0V0@:CrT+?VG61c@N,4>L>S1-QgC1GCXF4q0V0@:D)X+?VG61h8cZ4>L>S2Ei6G1GCXt4q0V0@:D/Z+?VG62).9(4>L>S3''JHI1GC[B4q0V0@:D5\+?VG62)RQ,4>L>S@6Per1GC[F4q0V0@:E\0+?VG62*!i04>L>S@m2"t1GC[q4q0V0@:Eb2+?VG62.Sl[4>L>SANh5!1GC[u4q0V0@:Eh4+?VG62DIB)4>L>T0KpUA1GC^D4q0V0@:M#U+?VG62E!`.4>L>T1-QgC1GC^H4q0V0@:M;]+?VG62_mQ+4>L>T@6Per1GCaF4q0V0@:Nb1+?VG62`Nu14>L>T@m2"t1GCas4q0V0@:V,W+?VG63&Ef.4>L>U1HlpD1GCdH4q0V0@:Wt6+?VG6@5:"U4>L>V0KpUA1GE5o4q0V0@:_/W+?VG6@5^:Y4>L>V1-QgC1GE5s4q0V0@:_;[+?VG6@:VP24>L>V2Ei6G1GE6L4q0V0@:_A]+?VG6@PL%U4>L>V3''JHI1GE8o4q0V0@:_G_+?VG6@Pp=Y4>L>V@6Per1GE8s4q0V0@:`n3+?VG6@Q?U]4>L>V@m2"t1GE9I4q0V0@:`t5+?VG6@UqY3ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>11=a*4s2sD0OeWX%6QCSAS++K4>S[$0g6%/11=cK4s2sD0Olq''%6QCSAhcIl4>S[$2EhR411=cM4s2sD0Om(+%6QCSAiW$t4>S[%1-Q.011=d''4s2sD0P!%)%6QCSAn!qH4>S[%3''Id611=d)4s2sD0P"WV%6QCT0JYg74>S[&1d2@211Dpn4s2sD0P*.+%6QCT0P3Kk4>o''.2*MI311Dsl4s2sG2_[3T%6QCT0ekj74?"rP@Qk5`11Dsn4s2sG@l#r*%6QCT0f)!94>o,R3''Id611Dsp4s2sJ0k<"&%6QCT0f;-;4>f&PAj-Yd11Dsr4s2sI@pq&T%6QCT0fM9=4>em)A3LGb11Dst4s2sF2)Jo/%6QCT0f_E?4?$_,1d2@211DtH4s2sEAiO6`%6QCT0k*<h4>JU$ANgPc11DtJ4s2sC2.84''%6QCT0k<Hj4>8HF0Koq.11DtL4s2sA0JbC:0JbCH%6QCT0kNTl4>8HF0g6%/11E!m4s2sA0JbC:0JbFI%6QCT1,1s84>8HF1-Q.011E!o4s2sA0JbC:0JbIJ%6QCT1,D*:4>8HF1Hl7111E!q4s2sA0JbC:0JbLK%6QCT1,V6<4>8HF1d2@211E!s4s2sA0JbC:0JbOL%6QCT1,hB>4>8HF2*MI311E!u4s2sA0JbC:0JbRM%6QCT1-%N@4>8HF2EhR411E"I4s2sA0JbC:0JbUN%6QCT11EEi4>8HF2a.[511E"K4s2sA0JbC:0JbXO%6QCT11WQk4>8HF3''Id611E"M4s2sA0JbC:0Jb[P%6QCT11i]m4>8HF3Bdm711E$n4s2sA0JbC:0Jb^Q%6QCT1GM''94>8HF0eb:;0Koq.11E$p4s2sA0JbF;0JbFI%6QCT1G_3;4>8HF0eb:;1-Q.011E$r4s2sA0JbF;0JbLK%6QCT1Gq?=4>8HF0eb:;1d2@211E$t4s2sA0JbF;0JbRM%6QCT1H.K?4>8HF0eb:;2EhR411E%!4s2sA0JbF;0JbXO%6QCT1H@WA4>8HF0eb:;3''Id611E%J4s2sA0JbF;0Jb^Q%6QCT1L`Nj4>8HF1,(C<0Koq.11E%L4s2sA0JbI<0JbFI%6QCT1LrZl4>8HF1,(C<1-Q.011E%N4s2sA0JbI<0JbLK%6QCT1M/fn4>8HF1,(C<1d2@211E''o4s2sA0JbI<0JbRM%6QCT1bh0:4>8HF1,(C<2EhR411E''q4s2sA0JbI<0JbXO%6QCT1c%<<4>8HF1,(C<3''Id611E''s4s2sA0JbI<0Jb^Q%6QCT1c7H>4>8HF1GCL=0Koq.11E''u4s2sA0JbL=0JbFI%6QCT1cIT@4>8HF1GCL=1-Q.011E("4s2sA0JbL=0JbLK%6QCT1c[`B4>8HF1GCL=1d2@211E(K4s2sA0JbL=0JbRM%6QCT1h&Wk4>8HF1GCL=2EhR411E(M4s2sA0JbL=0JbXO%6QCT1h8cm4>8HF1GCL=3''Id611E(O4s2sA0JbL=0Jb^Q%6QCT1hJoo4>8HF1b^U>0Koq.11E*p4s2sA0JbO>0JbFI%6QCT2).9;4>8HF1b^U>1-Q.011E*r4s2sA0JbO>0JbLK%6QCT2)@E=4>8HF1b^U>1d2@211E*t4s2sA0JbO>0JbRM%6QCT2)RQ?4>8HF1b^U>2EhR411E+!4s2sA0JbO>0JbXO%6QCT2)d]A4>8HF1b^U>3''Id611E+#4s2sA0JbO>0Jb^Q%6QCT2*!iC4>8HF2)$^?0Koq.11E+L4s2sA0JbR?0JbFI%6QCT2.A`l4>8HF2)$^?1-Q.011E+N4s2sA0JbR?0JbLK%6QCT2.Sln4>8HF2)$^?1d2@211E+P4s2sA0JbR?0JbRM%6QCT2.f#p4>8HF2)$^?2EhR411E-q4s2sA0JbR?0JbXO%6QCT2DIB<4>8HF2)$^?3''Id611E-s4s2sA0JbR?0Jb^Q%6QCT2D[N>4>8HF2D?g@0Koq.11E-u4s2sA0JbU@0JbFI%6QCT2DmZ@4>8HF2D?g@1-Q.011E."4s2sA0JbU@0JbLK%6QCT2E*fB4>8HF2D?g@1d2@[DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d@Q$20+?V>31H$p@1Gq?*4>LA(3BeQJ0JG:@0JG:@4q0V0@Q%XY+?V>31H$p@1H.K,4>LA(@Qkns0JG:@0JG:B4q0V0@Q%^[+?V>31H$p@1H@W.4>LA(A3M+u0JG:A0JG::4q0V0@Q%d]+?V>31H.!A1GM''&4>LA(Aj.>"0JG:A0JG:<4q0V0@Q,u)+?V>31H.!A1G_3(4>LA)0g6^B0JG:A0JG:>4q0V0@Q-&++?V>31H.!A1Gq?*4>LA)1HlpD0JG:A0JG:@4q0V0@Q-,-+?V>31H.!A1H.K,4>LA)2*N-F0JG:A0JG:B4q0V0@Q-2/+?V>31H.!A1H@W.4>LA)2a/?H0JG:B0JG::4q0V0@Q-81+?V>31H7''B1GM''&4>LA)3BeQJ0JG:B0JG:<4q0V0@Q.^Z+?V>31H7''B1G_3(4>LA)@Qkns0JG:B0JG:>4q0V0@Q.d\+?V>31H7''B1Gq?*4>LA)A3M+u0JG:B0JG:@4q0V0@Q.j^+?V>31H7''B1H.K,4>LA)Aj.>"0JG:B0JG:B4q0V0@Q6&*+?V>31H7''B1H@W.4>LA*0g6^B0JG:C0JG::4q0V0@Q6,,+?V>31H@-C1GM''&4>LA*1HlpD0JG:C0JG:<4q0V0@Q62.+?V>31H@-C1G_3(4>LA*2*N-F0JG:C0JG:>4q0V0@Q680+?V>31H@-C1Gq?*4>LA*2a/?H0JG:C0JG:@4q0V0@Q6>2+?V>31H@-C1H.K,4>LA*3BeQJ0JG:C0JG:B4q0V0@Q7d[+?V>31H@-C1H@W.4>LA*@Qkns0JG:;0JG::0JG::4q0V0@Uh)U+?VG61bq6(4>LAU0g6^B1GCXB4q0V0@Uh/W+?VG61c@N,4>LAU1HlpD1GCXF4q0V0@Uh;[+?VG61h8cZ4>LAU2a/?H1GCXt4q0V0@UhA]+?VG62).9(4>LAU3BeQJ1GC[B4q0V0@Uih1+?VG62)RQ,4>LAU@Qkns1GC[F4q0V0@Uin3+?VG62*!i04>LAUA3M+u1GC[q4q0V0@Uit5+?VG62.Sl[4>LAUAj.>"1GC[u4q0V0@Uq/V+?VG62DIB)4>LAV0g6^B1GC^D4q0V0@Uq5X+?VG62E!`.4>LAV1HlpD1GC^H4q0V0@Urn2+?VG62_mQ+4>LAV@Qkns1GCaF4q0V0@Urt4+?VG62`Nu14>LAVA3M+u1GCas4q0V0@V%>Z+?VG63&Ef.4>LAW1d3$E1GCdH4q0V0@V.;X+?VG6@5:"U4>LAX0g6^B1GE5o4q0V0@V.AZ+?VG6@5^:Y4>LAX1HlpD1GE5s4q0V0@V.M^+?VG6@:VP24>LAX2a/?H1GE6L4q0V0@V.S`+?VG6@PL%U4>LAX3BeQJ1GE8o4q0V0@V0%4+?VG6@Pp=Y4>LAX@Qkns1GE8s4q0V0@V0+6+?VG6@Q?U]4>LAXA3M+u1GE9I4q0V0@V018+?VG6@UqY34>LAXAj.>"1GE9M4q0V0@k]T#+?VG6@kg.V4>LD#0g6^B1GE;q4q0V0@k]Z%+?VG6@l?L[4>LD#1HlpD1GE;u4q0V0@k_=T+?VG6A26=X4>LD#@Qkns1GE>s4q0V0@k_CV+?VG6A2la^4>LD#A3M+u1GE?K4q0V0@kfc''+?VG6AMcR[4>LD$1d3$E1GEAu4q0V0@ko`%+?VP>AMlX\4>LD%0g6^B2E*<L4q0V0@kof''+?VS:2I\iZ4>LD%1HlpD2IeO"4q0V0@kol)+?VP@1,qH,4>LD%2*N-F3AG&!4q0V0@kor++?VM?0kNTY4>LD%2a/?H2)R4&4q0V0@kp#-+?VSl2)IK+4>LD%3BeQJ1hJ^V4q0V0@kqIV+?VD:@5''kS4>LD%@Qkns0JG::4q0V0@kqOX+?V>31GCL:1GD!%4>LD%A3M+u0JG:;4q0V0@kqUZ+?V>31GCL:1GM''&4>LD%Aj.>"0JG:<4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QCU1GD!84>8HF0JG1:1-Q.011N*p4s2sA0JbLK%6QCU1GV-:4>8HF0JG1:1Hl7111N*r4s2sA0JbOL%6QCU1Gh9<4>8HF0JG1:1d2@211N*t4s2sA0JbRM%6QCU1H%E>4>8HF0JG1:2*MI311N+!4s2sA0JbUN%6QCU1H7Q@4>8HF0JG1:2EhR411N+#4s2sA0JbXO%6QCU1LWHi4>8HF0JG1:2a.[511N+L4s2sA0Jb[P%6QCU1LiTk4>8HF0JG1:3''Id611N+N4s2sA0Jb^Q%6QCU1M&`m4>8HF0JG1:3Bdm711N+P4s2sA0JbF;0JbCH%6QCU1b_*94>8HF0eb:;0g6%/11N-q4s2sA0JbF;0JbIJ%6QCU1bq6;4>8HF0eb:;1Hl7111N-s4s2sA0JbF;0JbOL%6QCU1c.B=4>8HF0eb:;2*MI311N-u4s2sA0JbF;0JbUN%6QCU1c@N?4>8HF0eb:;2a.[511N."4s2sA0JbF;0Jb[P%6QCU1cRZA4>8HF0eb:;3Bdm711N.$4s2sA0JbI<0JbCH%6QCU1grQj4>8HF1,(C<0g6%/11N.M4s2sA0JbI<0JbIJ%6QCU1h/]l4>8HF1,(C<1Hl7111N.O4s2sA0JbI<0JbOL%6QCU1hAin4>8HF1,(C<2*MI311N.Q4s2sA0JbI<0JbUN%6QCU2)%3:4>8HF1,(C<2a.[511N0r4s2sA0JbI<0Jb[P%6QCU2)7?<4>8HF1,(C<3Bdm711N0t4s2sA0JbL=0JbCH%6QCU2)IK>4>8HF1GCL=0g6%/11N1!4s2sA0JbL=0JbIJ%6QCU2)[W@4>8HF1GCL=1Hl7111N1#4s2sA0JbL=0JbOL%6QCU2)mcB4>8HF1GCL=2*MI311N1%4s2sA0JbL=0JbUN%6QCU2.8Zk4>8HF1GCL=2a.[511N1N4s2sA0JbL=0Jb[P%6QCU2.Jfm4>8HF1GCL=3Bdm711N1P4s2sA0JbO>0JbCH%6QCU2.\ro4>8HF1b^U>0g6%/11N1R4s2sA0JbO>0JbIJ%6QCU2D@<;4>8HF1b^U>1Hl7111N3s4s2sA0JbO>0JbOL%6QCU2DRH=4>8HF1b^U>2*MI311N3u4s2sA0JbO>0JbUN%6QCU2DdT?4>8HF1b^U>2a.[511N4"4s2sA0JbO>0Jb[P%6QCU2E!`A4>8HF1b^U>3Bdm711N4$4s2sA0JbR?0JbCH%6QCU2E3lC4>8HF2)$^?0g6%/11N4&4s2sA0JbR?0JbIJ%6QCU2IScl4>8HF2)$^?1Hl7111N4O4s2sA0JbR?0JbOL%6QCU2Ieon4>8HF2)$^?2*MI311N4Q4s2sA0JbR?0JbUN%6QCU2J#&p4>8HF2)$^?2a.[511N4S4s2sA0JbR?0Jb[P%6QCU2_[E<4>8HF2)$^?3Bdm711N6t4s2sA0JbU@0JbCH%6QCU2_mQ>4>8HF2D?g@0g6%/11N7!4s2sA0JbU@0JbIJ%6QCU2`*]@4>8HF2D?g@1Hl7111N7#4s2sA0JbU@0JbOL%6QCU2`<iB4>8HF2D?g@2*MI311N7%4s2sA0JbU@0JbUN%6QCU2`NuD4>8HF2D?g@2a.[511N7''4s2sA0JbU@0Jb[P%6QCU2dnlm4>8HF2D?g@3Bdm711N7P4s2sA0JbXA0JbCH%6QCU2e,#o4>8HF2_ZpA0g6%/11N7R4s2sA0JbXA0JbIJ%6QCU2e>/q4>8HF2_ZpA1Hl7111N7T4s2sA0JbXA0JbOL%6QCU3&!N=4>8HF2_ZpA2*MI311N9u4s2sA0JbXA0JbUN%6QCU3&3Z?4>8HF2_ZpA2a.[511N:"4s2sA0JbXA0Jb[P%6QCU3&EfA4>8HF2_ZpA3Bdm711N:$4s2sA0Jb[B0JbCH%6QCU3&WrC4>8HF3&!$B0g6%/11N:&4s2sA0Jb[B0JbIJ%6QCU3&j)E4>8HF3&!$B1Hl7111N:(4s2sA0Jb[B0JbOL%6QCU3+4un4>8HF3&!$B2*MI311N:Q4s2sA0Jb[B0JbUN%6QCU3+G,p4>8HF3&!$B2a.[511N:S4s2sA0Jb[B0Jb[P%6QCU3+Y8r4>8HF3&!$B3Bdm711N:U4s2sA0Jb^C0JbCH%6QCU3A<W>4>8HF3A<-C0g6%/11N=!4s2sA0Jb^C0JbIJ%6QCU3ANc@4>8HF3A<-C1Hl7111N=#4s2sA0Jb^C0JbOL%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>LD,1d3$E0JG:C0JG:?4q0V0@lZD1+?V>31H@-C1H%E+4>LD,2Ei6G0JG:C0JG:A4q0V0@lZJ3+?V>31H@-C1H7Q-4>LD,3''JHI0JG:C0JG:C4q0V0@lZP5+?V>31GLR;1GCL:1GD!%4>LDVANh5!1GCX@4q0V0@q0+7+?VG61c.B*4>LDW0KpUA1GCXD4q0V0@q7;X+?VG61cRZ.4>LDW1d3$E1GCXr4q0V0@q7G\+?VG61hJo\4>LDW2Ei6G1GC[@4q0V0@q7M^+?VG62)@E*4>LDW3''JHI1GC[D4q0V0@q7S`+?VG62)d].4>LDW@6Per1GC[H4q0V0@q9%4+?VG62.A`Y4>LDW@m2"t1GC[s4q0V0@q9+6+?VG62.f#]4>LDWANh5!1GC^A4q0V0@q918+?VG62DdT,4>LDX0KpUA1GC^F4q0V0@q@AY+?VG62E3l04>LDX3''JHI1GCaC4q0V0@q@Ya+?VG62`3c.4>LDX@6Per1GCaI4q0V0@qB+5+?VG62e"r[4>LDY0g6^B1GCdF4q0V0@qIJ[+?VG63&Wr04>LDYANh5!1GE5m4q0V0@qK=:+?VG6@5L.W4>LG$0KpUA1GE5q4q0V0A2#`%+?VG6@5pF[4>LG$1d3$E1GE6J4q0V0A2#l)+?VG6@:h\44>LG$2Ei6G1GE8m4q0V0A2#r++?VG6@P^1W4>LG$3''JHI1GE8q4q0V0A2$#-+?VG6@Q-I[4>LG$@6Per1GE8u4q0V0A2%IV+?VG6@U_M14>LG$@m2"t1GE9K4q0V0A2%OX+?VG6@V.e54>LG$ANh5!1GE;n4q0V0A2%UZ+?VG6@l-@Y4>LG%0KpUA1GE;s4q0V0A2,f&+?VG6@lQX]4>LG%3''JHI1GE>p4q0V0A2-).+?VG6A2QO[4>LG%@6Per1GE?!4q0V0A2.OW+?VG6A7@_34>LG&0g6^B1GEAs4q0V0A25o(+?VG6AMu^]4>LG&ANh5!2Do&''4q0V0A27a\+?VP@0K;6*4>LG''0KpUA2_[.!4q0V0A2>r(+?VPl1Gh9)4>LG''1-QgC2E*BN4q0V0A2?#*+?VY=A2-7W4>LG''1d3$E2)d7%4q0V0A2?),+?VM=1hJo\4>LG''2Ei6G2e"X$4q0V0A2?/.+?VJm3+>&\4>LG''3''JHI0JG::4q0V0A2?50+?V>31GCL:1GD!%4>LG''@6Per0JG:;4q0V0A2@[Y+?V>31GCL:1GM''&4>LG''@m2"t0JG:<4q0V0A2@a[+?V>31GCL:1GV-''4>LG''ANh5!0JG:=4q0V0A2@g]+?V>31GCL:1G_3(4>LG(0KpUA0JG:>4q0V0A2H#)+?V>31GCL:1Gh9)4>LG(1-QgC0JG:?4q0V0A2H)++?V>31GCL:1Gq?*4>LG(1d3$E0JG:@4q0V0A2H/-+?V>31GCL:1H%E+4>LG(2Ei6G0JG:A4q0V0A2H5/+?V>31GCL:1H.K,4>LG(3''JHI0JG:B4q0V0A2H;1+?V>31GCL:1H7Q-4>LG(@6Per0JG:C4q0V0A2IaZ+?V>31GCL:1H@W.4>LG(@m2"t0JG:;0JG::4q0V0A2Ig\+?V>31GLR;1GM''&4>LG(ANh5!0JG:;0JG:<4q0V0A2Im^+?V>31GLR;1G_3(4>LG)0KpUA0JG:;0JG:>4q0V0A2Q)*+?V>31GLR;1Gq?*4>LG)1-QgC0JG:;0JG:@4q0V0A2Q/,+?V>31GLR;1H.K,4>LG)1d3$E0JG:;0JG:B4q0V0A2Q5.+?V>31GLR;1H@W.4>LG)2Ei6G0JG:<0JG::4q0V0A2Q;0+?V>31GUX<1GM''&4>LG)3''JHI0JG:<0JG:<4q0V0A2QA2+?V>31GUX<1G_3(4>LG)@6Per0JG:<0JG:>4q0V0A2Rg[+?V>31GUX<1Gq?*ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>11W7P4s2sA0JbI<0JbUN%6QCV2.Sln4>8HF1,(C<2a.[511W7R4s2sA0JbI<0Jb[P%6QCV2.f#p4>8HF1,(C<3Bdm711W9s4s2sA0JbL=0JbCH%6QCV2DIB<4>8HF1GCL=0g6%/11W9u4s2sA0JbL=0JbIJ%6QCV2D[N>4>8HF1GCL=1Hl7111W:"4s2sA0JbL=0JbOL%6QCV2DmZ@4>8HF1GCL=2*MI311W:$4s2sA0JbL=0JbUN%6QCV2E*fB4>8HF1GCL=2a.[511W:&4s2sA0JbL=0Jb[P%6QCV2E<rD4>8HF1GCL=3Bdm711W:O4s2sA0JbO>0JbCH%6QCV2I\im4>8HF1b^U>0g6%/11W:Q4s2sA0JbO>0JbIJ%6QCV2Inuo4>8HF1b^U>1Hl7111W:S4s2sA0JbO>0JbOL%6QCV2J,,q4>8HF1b^U>2*MI311W<t4s2sA0JbO>0JbUN%6QCV2_dK=4>8HF1b^U>2a.[511W=!4s2sA0JbO>0Jb[P%6QCV2`!W?4>8HF1b^U>3Bdm711W=#4s2sA0JbR?0JbCH%6QCV2`3cA4>8HF2)$^?0g6%/11W=%4s2sA0JbR?0JbIJ%6QCV2`EoC4>8HF2)$^?1Hl7111W=''4s2sA0JbR?0JbOL%6QCV2`X&E4>8HF2)$^?2*MI311W=P4s2sA0JbR?0JbUN%6QCV2e"rn4>8HF2)$^?2a.[511W=R4s2sA0JbR?0Jb[P%6QCV2e5)p4>8HF2)$^?3Bdm711W=T4s2sA0JbU@0JbCH%6QCV2eG5r4>8HF2D?g@0g6%/11W?u4s2sA0JbU@0JbIJ%6QCV3&*T>4>8HF2D?g@1Hl7111W@"4s2sA0JbU@0JbOL%6QCV3&<`@4>8HF2D?g@2*MI311W@$4s2sA0JbU@0JbUN%6QCV3&NlB4>8HF2D?g@2a.[511W@&4s2sA0JbU@0Jb[P%6QCV3&a#D4>8HF2D?g@3Bdm711W@(4s2sA0JbXA0JbCH%6QCV3&s/F4>8HF2_ZpA0g6%/11W@Q4s2sA0JbXA0JbIJ%6QCV3+>&o4>8HF2_ZpA1Hl7111W@S4s2sA0JbXA0JbOL%6QCV3+P2q4>8HF2_ZpA2*MI311W@U4s2sA0JbXA0JbUN%6QCV3+b>s4>8HF2_ZpA2a.[511WC!4s2sA0JbXA0Jb[P%6QCV3AE]?4>8HF2_ZpA3Bdm711WC#4s2sA0Jb[B0JbCH%6QCV3AWiA4>8HF3&!$B0g6%/11WC%4s2sA0Jb[B0JbIJ%6QCV3AiuC4>8HF3&!$B1Hl7111WC''4s2sA0Jb[B0JbOL%6QCV3B'',E4>8HF3&!$B2*MI311WC)4s2sA0Jb[B0JbUN%6QCV3B98G4>8HF3&!$B2a.[511WCR4s2sA0Jb[B0Jb[P%6QCV3FY/p4>8HF3&!$B3Bdm711WCT4s2sA0Jb^C0JbCH%6QCV3Fk;r4>8HF3A<-C0g6%/11WCV4s2sA0Jb^C0JbIJ%6QCV3G(Gt4>8HF3A<-C1Hl7111XfI4s2sA0Jb^C0JbOL%6QCV@50qg4>8HF3A<-C2*MI311XfK4s2sA0Jb^C0JbUN%6QCV@5C(i4>8HF3A<-C2a.[511XfM4s2sA0Jb^C0Jb[P%6QCV@5U4k4>8HF3A<-C3Bdm711XfO4s2sA0JbF;0JbC:0JbCH%6QCVA7@_F4>SZJ1-Q.011Xp*4s2sD0JkUM%6QCVA7RkH4>SZJ2EhR411Xp,4s2sD0JkaQ%6QCVAMH@k4>SZJA3LGb11XrO4s2sD0JmB*%6QCVAMZLm4>SZK0g6%/11XrQ4s2sD0JtXM%6QCVAMlXo4>SZK2*MI311XrS4s2sD0JtdQ%6QCVAN)dq4>SZK3Bdm711XrU4s2sD0K!<''%6QCVAN;ps4>SZKA3LGb11Xs)4s2sD0K!H+%6QCVAR[hG4>SZL0g6%/11Xs+4s2sD0K(aO%6QCVARmtI4>SZL2EhR411Xs-4s2sD0K(mS%6QCVAi2ap4>SZM1-Q.011XuT4s2sD0K1jQ%6QCVAiDmr4>SZM3''Id611XuV4s2sD0K3H)%6QCVAn=.K4>SZN1d2@211Y!/4s2sD0K:sS%6QCW0Od3g4>S["1-Q.YDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,dAM@UX+?VG6@5L.W4>LJ%A3M+u1GE5q4q0V0AM@[Z+?VG6@5pF[4>LJ&0g6^B1GE6J4q0V0AMGr(+?VG6@:h\44>LJ&1HlpD1GE8m4q0V0AMH#*+?VG6@P^1W4>LJ&2*N-F1GE8q4q0V0AMH),+?VG6@Q-I[4>LJ&2a/?H1GE8u4q0V0AMH/.+?VG6@U_M14>LJ&3BeQJ1GE9K4q0V0AMIUW+?VG6@V.e54>LJ&@Qkns1GE;n4q0V0AMI[Y+?VG6@l-@Y4>LJ&A3M+u1GE;s4q0V0AMIa[+?VG6@lQX]4>LJ''2*N-F1GE>p4q0V0AMQ/-+?VG6A2QO[4>LJ''2a/?H1GE?!4q0V0AMQ5/+?VG6A7@_34>LJ''ANh5!1GEAs4q0V0AMRj]+?VG6AMu^]4>LJ(@Qkns2Do&''4q0V0AM[g[+?VP@0K;6*4>LJ(A3M+u2_[.!4q0V0AM[m]+?VPl1Gh9)4>LJ(Aj.>"2E*BN4q0V0AMc))+?VY=A2-7W4>LJ)0g6^B2)d7%4q0V0AMc/++?VM=1hJo\4>LJ)1HlpD2e"X$4q0V0AMc5-+?VJm3+>&\4>LJ)2*N-F1,WJo4q0V0AMc;/+?VG9@kp4W4>LJ)2a/?H1G`NO4q0V0AMcA1+?VD60fD3)4>LJ)3BeQJ0JG@<0JG=C4q0V0AMdgZ+?VG9A2la^4>LJ)@Qkns1G`QM4q0V0AMds^+?V>32)[-B2)@E*4>LJ)Aj.>"1,1I:4q0V0AMl/*+?VG9@kp4W4>LJ*0g6^B0JGC@0JG7o0JGC@4q0V0AMl5,+?VG9@l-@Y4>LJ*1HlpD1,1I?4q0V0AMl;.+?VG93B'',24>LJ*2*N-F1G^sE4q0V0AMlA0+?VG93B0234>LJ*2a/?H1,1L>4q0V0AMlG2+?VG93+P2^4>LJ*3BeQJ1G_%#4q0V0AMmm[+?VG93As&14>LJ*@Qkns0JGCq0JG7o0JGCq4q0V0AMms]+?V>32J"Qr11i3o2Inu\4>LJ*Aj.>"1GC[D1GC[G4q0V0AMu5++?VG62)R0D2)mc/4>LJ+0g6^B1GE5m1GE;u4q0V0AMuA/+?VG90Jks&4>LJ+2*N-F1G^^C4q0V0AMuG1+?VG6@5]nqAR[GL@Q-I[4>LJ+2a/?H1G^^E4q0V0AMuM3+?VG6@5p%s@:h;L@Pp=Y4>LJ+3BeQJ1G^^D4q0V0AN!s\+?VG90O[-S4>LJ+@Qkns1GE6G1GEDs1GE8l1GE8u1GE;u1GEBN1GEEN1GEAo4q0V0AN"$^+?VG90KD<+4>LJ+A3M+u1GE6G1GEDs1GE;u1GEBN4q0V0AN"*`+?VG90Od3T4>LJ+Aj.>"1GE6H1GE;p1GE>u4q0V0AN);,+?VG90Om9U4>LJ,2a/?H1GE6J1GEBN1GEBK1GE;p1GE;u1GEBL4q0V0AN)S4+?VG90fM9*4>LJ,3BeQJ1GE8l1GE8u1GEEN1GEAo4q0V0AN+$]+?VG90f_E,4>LJ,@Qkns1GE6L1GEBL1GE8r1GEEN1GE<!4q0V0AN2J0+?VG91,M0(4>LJ-1d3$E1GE;t1GE6H4q0V0AN2P2+?VG91,V6)4>LJ-2Ei6G1GE;s1GEB#4q0V0AN2V4+?VG6@lZ>!AN;P#@:h;LA7[q64>LJ-@6Per1GE>n1GEEN1GE;q4q0V0AN4-_+?VG911WQX4>LJ-@m2"t1GE>o1GE8u1GE6H1GEBL4q0V0AN43a+?VG6A2#enARdMMAR[h44>LJ.0g6^B1G^gB4q0V0AN;M0+?VG6A2Q.s@50PlAN;P#@lZ^^4>LJ.1HlpD1GE>s1GE5r1GEAo1GE;u4q0V0AN;Y4+?VG91LiTX4>LJ.2a/?H1GE?!1GE6L1GE;u4q0V0AN;_6+?VG6A2lA!@:h;L@lQ7uA2,ko@Q?4u@:D#HAR[h44>LJ.3BeQJ1GE?J1GE9I1GE9M4q0V0AN=0_+?VG91H.K,4>LJ.@Qkns1GE?J1GE9M4q0V0AN=6a+?VG91H7Q-4>LJ.A3M+u1G^gq4q0V0AN=<c+?VG91LrZY4>LJ.Aj.>"1G^jB4q0V0ARRM]+?VG91cRZ.4>LJV@m2"t1GEAu1GEEN1GEBN4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QCW@:VPE4>S[&3AW@!3Bdm711am*4s2sD1GppO%6QCW@:h\G4>ScN1d2@211aoK4s2sD0P+]L0O\QL0Od%+%6QCW@PL%h4>S[&@P]]K1c$go1-Q.011aoM4s2sD1GpsP%6QCW@Pp=l4>S["1,CUo3''Id611aoS4s2sD1GCXL%6QCW@Q?Up4>ScI2EhR411ap''4s2sD0OZjq0P+]L0Oct)%6QCW@U_MD4>ScI3''Id611ap)4s2sD0OZps0O\QL0Ocn''%6QCW@UqYF4>ScI2a.[511ap+4s2sD1GE6$%6QCW@V.eH4>S["@5BTL1G^^o0JbCl3AW@!3&<7"A2>oO@l#fM0Koq.11arL4s2sD1GCgQ%6QCW@kg.i4>S["@5BTL1G^^p3&<7"A3LGb11arN4s2sD1GE9%%6QCW@l$:k4>S["@P]]J1G^^q2a.[511arP4s2sD1GE<&%6QCW@q%VE4>S["A2>oNA2>oN@5BTI1c$gq3&<7"@Qk5`11as*4s2sD1GLgP%6QCW@q7bG4>S[#0JbCl3AW@$@l#fM0Koq.11as,4s2sD1GLmR%6QCW@qInI4>S["Ahu,P@P]]I2D[$sAhu,N3Bdm711auT4s2sD1GUdN%6QCWA2laq4>S[$2`!-r@Qk5`11auV4s2sD1GUgO%6QCWA77YE4>S[$2D[$u3Bdm711b!*4s2sD0Om+!0P*7#0O\QL0P"`Y%6QCWA7[qI4>S[%0JbCp@l#fK1d2@211b!.4s2sD1GWK)%6QCWAM?:j4>S[%0f(Lm3AW?t@P]]L@Qk5`11b#O4s2sD0Oujn0P+`M0P+]W%6QCWAMlXo4>ScL1-Q.011b#T4s2sD0P!$s0OZ[l0P*7#0Om+,%6QCWAN)dq4>S[%2)?pp2`!.!0JbCm3''Id611b$*4s2sD1G`N)%6QCWAR[hG4>S[%3&<6sAhu,N3''Id611b$,4s2sD0P!.!0O\QL0Om''u0Oumo0Od$u0O\EH0P+]W%6QCWARmtI4>S[%@5BTH@P]]IAj-Yd11b$.4s2sD1G^sR%6QCWAS++K4>S[%@5BTHAj-Yd11b&O4s2sD1G_!S%6QCWAhcIl4>ScL@6P,_11b&Q4s2sD1G`Q*%6QCWAhuUn4>ScM0g6%/11b'',4s2sD1Gh''T%6QCX0JG[54>S[&2D[%!@l#fMA3LGb11i3p4s2sD0P*7#0Om+,%6QCX0JYg74>ScN1-Q.011i3r4s2sD1Gq!Q%6QCX0Jks94>S[&@P]]HAhu,M3Bdm711i3t4s2sD0P+]L0P!!r0OZ_#%6QCX0K)*;4>ScN1Hl7111i4#4s2sD1H/l/%6QCX0O[-f4>ScPA3LGb11i4L4s2sD1H/f-%6QCX0Om9h4>ScP@Qk5`11i4N4s2sF1G`K!2Dd0I@q7GRAR](3%6QCX0P*Ej4>gS+2E!NM0fENP2)JlR@6P,_11i4P4s2sF0fLgE1b`DuA2H,#1b^mQ%6QCX0ebd64>eoP1c7*D@lIpT1c7*D3''Id611i6q4s2sF1b^mK@q.GSAhd^Q3AY51%6QCX0etp84>erL3&NNHA2ImQ@5g2&ANgPc11i6s4s2sH3AY5(2J"[&@q7GRAR](3%6QCX0f2'':4>gS.2`<NN3AtAX2)JlR@6P,_11i6u4s2sJ0P31!An#@22)\l#1M/R0%6QCX0fD3<4>eoN@Q-2%1,`WQ2)JlR@6P,_11i7"4s2sF@Q$,&3&33H@q7GRAR](3%6QCX0fV?>4>eiP0f:dA@lIpT1c7*D3''Id611i7$4s2sF1Gq!H1b`DuA2H,#1b^mQ%6QCX0k!6g4>erL3&kDX2`,,$@5g2&ANgPc11i7M4s2sF1b^mH1b`GsAhd^Q3AY51%6QCX0k3Bi4?#8VAMlAW1H&`R2)JlR@6P,_11i7O4s2sF@Q?A*2)RBP@q7GRAR](3%6QCX0kENk4?5*-2)JoSAiDS*@5TiQ2a.[511i7Q4s2sA0J[0&%6QCX1,(m74>8HFA3LGb11i9r4s2sC0ebCI%6QCX1,;$94>JfO0Koq.11i9t4s2sC2Dd0Q%6QCX1,M0;4>SZG1Hl7111i:!4s2sD0JP=H%6QCX1H%E>4>8HE2a.[511i=$4s2sA0JYCI%6QCX1H7Q@4>8HG@5''Al0eb:=1Hl7111i=&4s2sC0f([N%6QCX1LWHi4>8R%0Koq.11i=O4s2sC1,*-#%6QCX1LiTk4>JWFAj-Yd11i=Q4s2sA0Ocn''%6QCX1M&`m4>8R%2*MI311i=S4s2sA1LsrY%6QCX1b_*94>8R%0g6%/11i?t4s2sJ0k4cR1b^^L%6QCX1c.B=4>JfQ@m1>a11i@#4s2t"Ahd^X%6QCX1c@N?4>8Ht3Bdm711i@%4s2sA0OZt*%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>LM*3''JHI0JHpH4q0V0Ai)M3+?V>3@:_V34>LM*@6Per1GCUo4q0V0Ai*s\+?VG61L`NW4>LM*Aj.>"1,(Lo4q0V0Ai28++?VD51c[`/4>LM+0g6^B0JG7:4q0V0Ai2>-+?VD51LiTX4>LM+1HlpD1,(OF4q0V0Ai2D/+?VD91grQW4>LM+2*N-F0JG@o0JG@o4q0V0Ai2J1+?VD70f)!&4>LM+2a/?H1,:aA4q0V0Ai2P3+?VD71c%<)4>LM,Aj.>"1,Cq"4q0V0AiDJ/+?VD8@5''kS4>LM-1HlpD1,Cq$4q0V0AiDP1+?VD83FY/]4>LM-2*N-F1,E>m4q0V0AiDV3+?VD83FtA`4>LM-2a/?H1,E>n4q0V0AiF-^+?VD8@5^:Y4>LM-@Qkns1,E>p4q0V0AiF3`+?VD8@50qT4>LM-A3M+u1,E>s4q0V0AiF9b+?VD8@5L.W4>LM-Aj.>"1,E>n4q0V0AiMP0+?VD8@5^:Y4>LM.1HlpD1,E>p4q0V0AiMV2+?VD8@50qT4>LM.2*N-F1,E>s4q0V0AiM\4+?VD8@5L.W4>LM.2a/?HAnEo14q0V0AiMb6+?VD50f;-(4>LM.Aj.>"1,gmB4q0V0AiVP/+?VD<0JYg$4>LM/0g6^B1,gmB4q0V0AiVV1+?VD<0JYg$4>LM/1HlpD1GCUq4q0V0AiV\3+?VG60etp%4>LM/2*N-F1GCh$4q0V0AiVb5+?VM;1h8cZ4>LM/2a/?H1,:OB4q0V0AiVh7+?VD70Ju$''4>LM/3BeQJ1,<8l4q0V0AiX9`+?VD73As&14>LM/@Qkns1,:jL4q0V0AiX?b+?VD73Aiu04>LM/A3M+u1,:jK4q0V0AiXEd+?VD73FtA`4>LM/Aj.>"1,:jI4q0V0AmmAW+?VD;@5''kS4>LMW0g6^B1,WMs4q0V0AmmGY+?VD:@k^(U4>LMW1HlpD1,WN!4q0V0AmmM[+?VD6AMu^]4>LMW2*N-F1,3?"4q0V0AmmS]+?VD6AN)d^4>LMW2a/?H1,3?#4q0V0AmmY_+?VD6A2$1V4>LMW3BeQJ1,1dG4q0V0Amo77+?VD6@q.\34>LMWAj.>"1,39J4q0V0An!MZ+?VD63A<W+4>LMX1HlpD1,1dE4q0V0An!S\+?VD63AE],4>LMX3''JHI1,UaB4q0V0An!ba+?VD:0K)*(4>LMX@6Per1GCU=4q0V0An#45+?VD80K20)4>LMX@m2"t1GCU=4q0V0An#:7+?VD80K20)4>LMXANh5!1GCU=4q0V0An#@9+?VD80K20)4>LMY0KpUA1GCU=4q0V0An*PZ+?VD80K20)4>LMY1-QgC1GCU=4q0V0An*V\+?VD80K20)4>LMY1d3$E1,h$D4q0V0An*\^+?VD<1M/f[4>LMY2Ei6G1,WJp4q0V0An*hb+?VD:@50qT4>LMY@6Per1,WJp4q0V0An,:6+?VD:@50qT4>LMY@m2"t1,WJp4q0V0An,@8+?VD:@:DD04>LMYANh5!1,WJo4q0V0An,F:+?VD:@:;>/4>LMZ0KpUA1,gpr4q0V0An3V[+?VD<0k!6T4>LMZ1-QgC1,WQ#4q0V0An3b_+?VD:@lHR\4>LMZ2Ei6G1,WQ#4q0V0An3ha+?VD:@lHR\4>LMZ3''JHI1,WQ#4q0V0An3nc+?VD:@l?L[4>LMZ@6Per1,WQ"4q0V0An5@7+?VD:@q@h54>LMZ@m2"t1,WQ%4q0V0An5F9+?VD:@q%V2ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>11k''.4s2sC2.\[0%6QCXA7e"J4>Jd(Aj-Yd11k)O4s2sC0JYCI%6QCXAMH@k4>JiQ2EhR411k)Q4s2sC2`3KW%6QCXAMZLm4>JiQ2EhR411k)S4s2sC2`3KW%6QCXARmtI4>SZK1Hl7111k*/4s2sD0JtXM%6QCXAS++K4>S[#1Hl7111k,P4s2sD0Och%%6QCXAn4(J4>SZO2*MI31GCL>4s2sD0KD$T%6QF#1h/]l4>S[''@m1>a1GC[F4s2sD0P31+%6QF#2.\ro4>S[''2EhR41GE8p4s2sD0KD!S%6QF#@U_MD4>SZO2EhR41GLR;4s2sD0KCsR%6QF$0Jbm84>S[''@m1>a1GLRp4s2sD0P31+%6QF$0f;-;4>S[''2EhR41GLdB4s2sD0P4cX%6QF$2DRH=4D&1Z@6P,_1GLdD4s2sC0Jd0%%6QF$2DdT?4>Jd(@Qk5`1GLdF4s2sC2.L2]%6QF$2E!`A4>Jd(3Bdm71GLdH4s2sC2.A@*%6QF$2E3lC4>Jd''1-Q.01GLjt4s2sD0KD!S%6QF$3AE]?4>SZO2EhR41GNDt4s2sD0JkLJ%6QF$A2ZUo4>SZJ1Hl711GNE!4s2sD0JkXN%6QF$A2laq4>SZJ2a.[51GNE#4s2sD0JkdR%6QF$A77YE4>SZJ@Qk5`1GNEL4s2sD0JtRK%6QF$A7IeG4>SZL1Hl711GNEN4s2sD0K:jP%6QF$A7[qI4>SZN2*MI31GNEP4s2sD0K;!T%6QF$AM?:j4>SZNANgPc1GNHN4s2sD0P31+%6QF$AhuUn4>S[''2EhR41GUaF4s2sD0OZ\"%6QF%1H7Q@4>S["1Hl711GUaH4s2sD0OZh&%6QF%1LWHi4>S["2a.[51GUaq4s2sD0OZt*%6QF%1M&`m4>S[$1Hl711GUau4s2sD0P*%(%6QF%1b_*94>S[&2*MI31GUdA4s2sD0P*1,%6QF%1bq6;4>S[&ANgPc1GUdC4s2sD0P4fY%6QF%1c.B=4>S[''@m1>a1GUdE4s2sG@q@V`%6QF%1c@N?4>JU!@m1>a1GUdG4s2sC0etXN%6QF%1grQj4D&%V0Koq.1GUdt4s2sA0eb=G%6QF%1hAin4>8KF@Qk5`1GUe!4s2sA0fEK)%6QF%2)%3:4>8KE1Hl711GUgB4s2sA0f3E)%6QF%2)7?<4>8KD0Koq.1GUgD4s2sA0f!0$%6QF%2)IK>4>8KJ@6P,_1GUgF4s2sA0ekFI%6QF%2)[W@4>8KH@m1>a1GUgu4s2sC0K1[L%6QF%2J#&p4>8L"A3LGb1GUk#4s2sA0em*#%6QF%2_[E<4>8HG2)$g?@6P,_1GUmD4s2sBAR].5%6QF%2_mQ>4>8L"Aj-Yd1GUmF4s2sA0JkdD1GE6$%6QF%2`*]@4>8KF3''Id61GUmH4s2sA0k<"&%6QF%2`<iB4>8HGAhZ"p@6P,_1GUmJ4s2sA0k<((%6QF%2`NuD4>8KJANgPc1GUmL4s2sA0fD!T%6QF%2dnlm4>8L"ANgPc1GUmu4s2sA0em-$%6QF%2e,#o4>8HI2)$g?@6P,_1GUn"4s2sBAR]16%6QF%2e>/q4>8L#0Koq.1GUn$4s2sA0f(O<1GE6$%6QF%3&!N=4>8KF3Bdm71GUpE4s2sA0k<%''%6QF%3&3Z?4>8HIAhZ"p@6P,_1GUpG4s2sA0k<+)%6QF%3&EfA4>8KJAj-Yd1GUpI4s2sA0fD$U%6QF%3&WrC4>8NJ0g6%/1GUpK4s2sA1,UdM%6QF%3&j)E4>8NJ0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e1,q9X+?V>4An4(74>S`P@6Per0JI&r4q0V11,r`,+?V>52)IK+4>S`P@m2"t0JYLB4q0V11,rf.+?V>52)IK+4>S`PANh5!0JYLG4q0V11,rl0+?V>52*!i04>S`Q1-QgC0JYLo4q0V11-%3U+?V>52.A`Y4>S`Q2Ei6G0JYLp4q0V11-%9W+?V>32IScY4>S`Q3''JHI0JPCn4q0V11-%?Y+?V>52`3c.4>S`Q@6Per0JYUt4q0V11-&f-+?V>53+G,]4>S`Q@m2"t0JYUt4q0V11-&l/+?V>53ANc-4>S`QANh5!0JYUD4q0V11-&r1+?V>5A2$1V4>Sa''@m2"t0JHom4q0V111k#[+?V>3@5^:Y4>Sa)A3M+u0JGFr4q0V111k)]+?V>60Jbm%4>Sa)Aj.>"1,(FC4q0V11GCLH+?V>32.JfZ4>ScI0g6^B1,(FB4q0V11GCRJ+?V>32e,#\4>ScI1HlpD0JGFs4q0V11GCaO+?VD51c.B*4>ScI3''JHI0JPRC4q0V11GCgQ+?V>3@5g@Z4>ScI@6Per0JHol4q0V11GE9%+?VD50k3BV4>ScI@m2"t0JHpE4q0V11GLUJ+?VD50etp%4>ScJ1d3$E0JHrp4q0V11GLaN+?V>3@Q$CZ4>ScJ2Ei6G1,(I=4q0V11GLgP+?VD50k!6T4>ScJ3''JHI1,(Fo4q0V11GLmR+?VD50k<HW4>ScJ@6Per0JHsF4q0V11GN?&+?VD51,_<*4>ScJ@m2"t1,(L<4q0V11GNE(+?V>3@V.e54>ScK0KpUA0JHpI4q0V11GUdN+?V>60O[-S4>ScK2*N-F0JHrq4q0V11GUjP+?V>60Od3T4>ScK2a/?H0JbID4q0V11GUpR+?V>60Om9U4>ScK3BeQJ0JbLC4q0V11GWB&+?V>3@l?L[4>ScK@Qkns0JHpD4q0V11GWH(+?V>41bh0''4>ScKA3M+u0JI#s4q0V11GWN*+?V>42)7?)4>ScKAj.>"0JHsE4q0V11G^^K+?V>3AMu^]4>ScL0g6^B0JP@<4q0V11G^dM+?V>41bq6(4>ScL1HlpD0JI)u4q0V11G^jO+?V>42)@E*4>ScL2*N-F0JI$L4q0V11G^pQ+?V>311WQX4>ScL2a/?H0JHoq4q0V11G_!S+?V>3@:MJ14>ScL3BeQJ0JHpH4q0V11G`T++?V>3@Pp=Y4>ScLAj.>"0JHrr4q0V11H/l/+?V>42D@<(4>ScPAj.>"0JPLG4q0V11H7''P+?V>42e5)]4>ScQ0g6^B0JbC?4q0V11H7-R+?V>42DIB)4>ScQ1HlpD1,1O>4q0V11H73T+?V>42e>/^4>ScQ2*N-F0JG::4q0V11H79V+?VD5@:MJ14>ScQ2a/?H1,1OB4q0V11H8f,+?X7F0JG["4>ScQA3M+u0JP794q0V11H8r0+?V>411EEV4>ScQAj.>"0JPIp4q0V11H@-Q+?V>40f)!&4>ScR0g6^B0JPCp4q0V11H@3S+?V>40JG["4>ScR1HlpD0JP=k4q0V11H@9U+?V>42IScY4>ScR2*N-F0JP:;4q0V11H@?W+?V>41h/]Y4>ScRA3M+u1,(X@4q0V11LXiY+?V>4@q7b44>Sd%Aj.>"0JP:j4q0V11L`%%+?V>31c6sC0O[-S4>Sd&0g6^B0kFg(4q0V11L`+''+?V>4@qIn64>Sd&1HlpD0JG=D0JbCk4q0V11L`1)+?V>41,qH,4>Sd&2*N-F0JR)m4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QF&@Q$Cm4>8HGAhZ"p@6P,_1G`K!4s2sA0k<((%6QF&@Q6Oo4>8KJANgPc1G`K#4s2sA0fD!T%6QF&@UVGC4>8L"ANgPc1G`KL4s2sA0em-$%6QF&@UhSE4>8HI2)$g?@6P,_1G`KN4s2sBAR]16%6QF&@V%_G4>8L#0Koq.1G`KP4s2sA0f(O<1GE6$%6QF&@k^(h4>8KF3Bdm71G`Mq4s2sA0k<%''%6QF&@kp4j4>8HIAhZ"p@6P,_1G`Ms4s2sA0k<+)%6QF&@l-@l4>8KJAj-Yd1G`Mu4s2sA0fD$U%6QF&A2$1i4>8QI2EhR41G`Pr4s2sA0J[0&%6QF&A26=k4>8HFA3LGb1G`Pt4s2sA0J[-%%6QF&AMcRn4>8QI2EhR41G`T"4s2sA0J[0&%6QF&AMu^p4>8HFA3LGb1G`T$4s2sA0J[-%%6QF&AS"%J4>8Hu2a.[51G`TS4s2sA0J[0&%6QF&AhZCk4>8HFA3LGb1G`Vt4s2sC0ebCI%6QF&AhlOm4>JfO0Koq.1G`W!4s2sC2Dd0Q%6QF&Ai)[o4>SZG1Hl711G`W#4s2sD0JP=H%6QF''0K)*;4>8HE2a.[51GgdE4s2sA0JYCI%6QF''0K;6=4D&"[2a.[51GgdG4s2t"@5]l)%6QF''0O[-f4?$e^1Hl711Ggdp4s2sJARdM[%6QF''0Om9h4>pbZ@Qk5`1Ggdr4s2t"@5Tf(%6QF''0P*Ej4D&"XA3LGb1Ggdt4s2t"@5Ki*%6QF''0ebd64D&"XANgPc1Ggg@4s2sG3FuV_%6QF''0etp84>pb,1d2@21GggB4s2t"@5]f''%6QF''0f2'':4D&"Y2a.[51GggD4s2t"@5Bl,%6QF''0fD3<4D&"Y1-Q.01GggF4s2t"@5MOZ%6QF''0fV?>4?,5V@Qk5`1GggH4s2t"@5^,0%6QF''0k!6g4D&"X1d2@21Gggq4s2t"@5]o*%6QF''0k3Bi4>o!,A3LGb1Gggs4s2sG1h0rX%6QF''0kENk4?#5VAj-Yd1Gggu4s2t"@5Tl*%6QF''1,(m74D$T40Koq.1GgjA4s2t"@5MLY%6QF''1,;$94D&"[0g6%/1GgjC4s2t"@5Kr-%6QF''1,M0;4D&"Y@m1>a1GgjG4s2t"@5Tc''%6QF''1,qH?4D&"Y1Hl711GgjI4s2t"@5VIW%6QF''11<?h4>p_03Bdm71Ggjr4s2sH11N"%%6QF''11NKj4>noNANgPc1Ggjt4s2su3&bDZA2H/-%6QF''11`Wl4D&"Z2EhR41Ggk!4s2t"@5T`&%6QF''1GD!84D&"X0g6%/1GgmB4s2t"@5D@V%6QF''1GV-:4>gY\1-Q.01GgmD4s2t"@5DLZ%6QF''1Gh9<4D&"[2*MI31GgmF4s2sF1H/i.%6QF''1H%E>4D&"X2a.[51GgmH4s2t"@5VX\%6QF''1H7Q@4>g_[2*MI31GgmJ4s2t"@5KZ%%6QF''1LWHi4?53+ANgPc1Ggms4s2t"@5Ti)%6QF''1LiTk4?6k+A3LGb1Ggmu4s2t"@5To+%6QF''1M&`m4D&"[3''Id61Ggn"4s2t"@5Kf)%6QF''1b_*94D&"Z3Bdm71GgpC4s2sG2Dno,%6QF''1bq6;4D&"X2*MI31GgpE4s2t"@5MFW%6QF''1c.B=4D&"[1d2@21GgpG4s2t"@5K]&%6QF''1c@N?4D&"X0Koq.1GgpI4s2sEAiDS2%6QF''1cRZA4D&"X3Bdm71GgpK4s2t"@5B]''%6QF''1grQj4>pY,2*MI31Ggpt4s2t"@5D=U%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>SfN@m2"t2I^0.4q0V11c/`,+?X7E1GV-''4>SfNANh5!2DR("4q0V11c/f.+?X7E1hJo\4>SfO0KpUAAiVSV4q0V11c7!O+?X6rA7Ie44>SfO1-QgCAiVY*4q0V11c7''Q+?VPmA77Y24>SfO1d3$EAiXBU4q0V11c7-S+?VP?@l?L[4>SfO2Ei6G2I\U(4q0V11c73U+?X7E2)d].4>SfO3''JHI3AWL#4q0V11c79W+?VMm@pqP14>SfO@6Per3AW?G4q0V11c8`++?VPB3&3Z,4>SfO@m2"t2)/Ps4q0V11c8f-+?VP<1h/]Y4>SfOANh5!3&Y;V4q0V11c8l/+?VY<3&s/34>SfP0KpUA3A<3D4q0V11c@''P+?VM81c[`/4>SfP1-QgC2e6K34q0V11c@-R+?VY<2)RQ,4>SfP1d3$E2)AZ$4q0V11c@3T+?VYE0Om9U4>SfP2Ei6G3&id)4q0V11c@9V+?VMmAi;g^4>SfP3''JHI2Ig3.4q0V11c@?X+?VY>2.A`Y4>SfP@6Per2eHPS4q0V11cAf,+?VV=@UqY34>SfP@m2"t3AtA)4q0V11cAl.+?VMj@P^1W4>SfPANh5!2DI*L4q0V11cAr0+?VPB3&3Z,4>SfQ0KpUA2I^-)4q0V11cI-Q+?VP>2DRH*4>SfQ1-QgC3+HB+4q0V11cI3S+?VMl@q.\34>SfQ1d3$E3B/`J4q0V11cI9U+?VMm1GD!%4>SfQ2Ei6G3+ZT04q0V11cI?W+?VSk@:_V34>SfQ3''JHI2)d?N4q0V11cIEY+?VM83AE],4>SfQ@6Per2dnX%4q0V11cJl-+?VM82DmZ-4>SfQ@m2"t2.^B.4q0V11cJr/+?VY>1H.K,4>SfQANh5!2ISRV4q0V11cK#1+?VJl@5L.W4>SfR0KpUA2)."!4q0V11cR3R+?VP?Ai)[\4>SfR1-QgC2E3HH4q0V11cR9T+?VSB2Ieo[4>SfR1d3$E2e4dW4q0V11cR?V+?VV;0Jbm%4>SfR2Ei6G3+HQ14q0V11cREX+?VYB1h8cZ4>SfR3''JHI2DSl''4q0V11cRKZ+?VSp2IScY4>SfR@6Per1hJ[Y4q0V11cSr.+?VM;AhlOZ4>SfR@m2"t2*#/,4q0V11cT#0+?VVm0k<HW4>SfRANh5!3A=lM4q0V11cT)2+?VM;@q@h54>SfS0KpUA3+apX4q0V11c[9S+?VP@A2HIZ4>SfS1-QgC2`G/T4q0V11c[?U+?VV=0k3BV4>SfS1d3$E2E<[-4q0V11c[EW+?VP@2e>/^4>SfS2Ei6G3+4OR4q0V11c[KY+?VJl0K;6*4>SfS3''JHI2)f,(4q0V11c[Q[+?VPB0P!?V4>SfS@6Per3&!9M4q0V11c]#/+?VVD@:;>/4>SfS@m2"t3A<9F4q0V11c])1+?VP<2J#&]4>SfSANh5!2Dd6G4q0V11c]/3+?VV=1H@W.4>Sg&0KpUA2e6E14q0V11gr+&+?VV;2DIB)4>Sg&1-QgC2)&NP4q0V11gr1(+?VVl3Aiu04>Sg&1d3$E2D@$H4q0V11gr7*+?VM91c@N,4>Sg&2Ei6G2`EO$4q0V11gr=,+?VV;2`*]-4>Sg&3''JHI3+QVW4q0V11grC.+?VMm@:VP24>Sg&@6Per2.^AY4q0V11gsiW+?VV=1cIT-4>Sg&@m2"t2E3NL4q0V11gsoY+?VY<0Jbm%4>Sg&ANh5!2InUT4q0V11gsu[+?VP<3ANc-ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1GiPp4s2sIAhlA1%6QF''@PL%h4?#''-A3LGb1GiPr4s2sJ3&*0P%6QF''@P^1j4>nm&1-Q.01GiPt4s2sG1,M!T%6QF''@Pp=l4>o&W0Koq.1GiQ!4s2sHA7K(4%6QF''@Q-In4?-bY3Bdm71GiQ#4s2sI@pq;[%6QF''@Q?Up4?##O2EhR41GiQL4s2sI1cJi,%6QF''@U_MD4>elJ2EhR41GiQN4s2sF2E*HV%6QF''@UqYF4>np&1d2@21GiQP4s2sH@lQJ4%6QF''@V.eH4?$e*@Qk5`1GiSq4s2sJ2J+X,%6QF''@kg.i4?,2SA3LGb1GiSs4s2sEAn#@9%6QF''@l$:k4>nuR2a.[51GiSu4s2sH2IeX/%6QF''@l6Fm4>o/VA3LGb1GiT"4s2sI0ebRN%6QF''@lHRo4?,#N2EhR41GiT$4s2sHAnGO:%6QF''@lZ^q4>erLAj-Yd1GiTM4s2sJ2ISC*%6QF''@q%VE4?6t5Aj-Yd1GiTO4s2sJAN;\5%6QF''@q7bG4?,#QAj-Yd1GiTQ4s2sI0K3Q,%6QF''@qInI4>pb0ANgPc1GiVr4s2sF0K:pR%6QF''A2-7j4>eiR1Hl711GiVt4s2sF0k=`W%6QF''A2?Cl4CgE.11XoLANgPc1GiW!4s2sF1GgdL%6QF''A2QOn4?5<13Bdm71GiW#4s2sF2.8L/%6QF''A2c[p4>f$,0g6%/1GiW%4s2sF2_\c+%6QF''A2ugr4>f*,@Qk5`1GiWN4s2sF3FlP^%6QF''A7@_F4>gP''2EhR41GiWP4s2sF@:Ee3%6QF''A7RkH4>gY+ANgPc1GiWR4s2sFA2lM3%6QF''A7e"J4>gYZ3Bdm71GiYs4s2sFA7RJ[%6QF''AMH@k4>g_+A3LGb1GiYu4s2sFAiVh7%6QF''AMZLm4>nm(3''Id61GiZ"4s2sG0f*?(%6QF''AMlXo4>np+ANgPc1GiZ$4s2sG1,_*U%6QF''AN)dq4>ns)Aj-Yd1GiZ&4s2sG2)/W*%6QF''AN;ps4>o#MAj-Yd1GiZO4s2sG1hJL,%6QF''AR[hG4>o&SA3LGb1GiZQ4s2sG2Do)1%6QF''ARmtI4>o-,3Bdm71GiZS4s2sG2e=p3%6QF''AS++K4>o2X@Qk5`1Gi\t4s2sG3AW?Q%6QF''AhcIl4>o3.2a.[51Gi]!4s2sG@5Kf)%6QF''AhuUn4>pV.0Koq.1Gi]#4s2sG@k]l+%6QF''Ai2ap4>p\(1Hl711Gi]%4s2sGAMQ&*%6QF''AiDmr4>pe+0g6%/1Gi]''4s2sGAS,L;%6QF''AiW$t4>pe-ANgPc1Gi]P4s2sH0kP#]%6QF''An!qH4?#''-2*MI31Gi]R4s2sH1c$mN%6QF''An4(J4?#)SAj-Yd1Gi]T4s2sH1hA@)%6QF''AnF4L4?#,O@m1>a1Gpj?4s2sH2E*BT%6QF(0JPa64?#8U@6P,_1GpjA4s2sH3+Oj0%6QF(0Jbm84?#90@6P,_1GpjC4s2sH@50c+%6QF(0Ju$:4?$\/2*MI31GpjE4s2sH@qIJ[%6QF(0K20<4?$e01Hl711GpjG4s2sHA7T47%6QF(0KD<>4?$h-2*MI31Gpjp4s2sHAmo77%6QF(0Od3g4?$k`0g6%/1Gpjr4s2sI0K!9&%6QF(0P!?i4?,#PAj-Yd1Gpjt4s2sI0K1dO%6QF(0P3Kk4?,#R0Koq.1Gpm@4s2sI0K1mR%6QF(0ekj74?,&Q1Hl711GpmB4s2sI0fWT*%6QF(0f)!94?,'')2*MI\DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e2)-pO+?VV<@q7b44>SiL2*N-F3&>/%4q0V12).!Q+?VV@2)RQ,4>SiL2a/?H3&P5(4q0V12).''S+?VVB0k!6T4>SiL3BeQJ3&i]P4q0V12)/N''+?VVC3FtA`4>SiL@Qkns3&kG.4q0V12)/T)+?VVCAi)[\4>SiLA3M+u3&ra''4q0V12)/Z++?VVD1L`NW4>SiLAj.>"3&rm*4q0V12)6jL+?VVD2J,,^4>SiM0g6^B3+4OP4q0V12)6pN+?VVo0Ju$''4>SiM1HlpD3+O^T4q0V12)7!P+?VYr1hAi[4>SiM2*N-F3+Y*)4q0V12)7''R+?VVp@50qT4>SiM2a/?H3A<<G4q0V12)7-T+?VY<0P*EW4>SiM3BeQJ3AE<D4q0V12)8T(+?VY=2)[W-4>SiM@Qkns3AEBN4q0V12)8Z*+?VY=2DmZ-4>SiMA3M+u3AEHK4q0V12)8`,+?VY=2_mQ+4>SiMAj.>"3AFqt4q0V12)?pM+?VY=@:h\44>SiN0g6^B3AFrN4q0V12)@!O+?VY=@Pg7X4>SiN1HlpD3AFuO4q0V12)@''Q+?VY@2`Eo04>SiN2*N-F3ArlW4q0V12)@-S+?VYC1LrZY4>SiN2a/?H3B&iM4q0V12)@3U+?VYC2_dK*4>SiN3BeQJ3B/^&4q0V12)AZ)+?VYD2`!W,4>SiN@Qkns3B1M)4q0V12)A`++?VYm1c7H+4>SiNA3M+u3FXgU4q0V12)Af-+?VYn2)mc/4>SiNAj.>"3FZJV4q0V12)I!N+?VYnAMH@X4>SiO0g6^B3FZST4q0V12)I''P+?VYp1cRZ.4>SiO1HlpD3FlW34q0V12)I-R+?VYr0K;6*4>SiO2*N-F2DR3G4q0V12)I3T+?VP?3B'',24>SiO2a/?H2DHmt4q0V12)I9V+?VVC2D[N+4>SiO3BeQJ3A<<J4q0V12)J`*+?VY<2dnlZ4>SiO@Qkns2`PA\4q0V12)Jf,+?VVn3G(Ga4>SiOA3M+u11auT4q0V12)Jl.+?VDj@UqY34>SiOAj.>"2.^;P4q0V12)R''O+?VS>A7Ie44>SiP0g6^B3A<:!4q0V12)R-Q+?VYE0Om9U4>SiP1HlpD3&id,4q0V12)R3S+?VY>@P^1W4>SiP2*N-F3Ak8#4q0V12)R9U+?VMmAi;g^4>SiP2a/?H2D\r%4q0V12)R?W+?X0o2e?N0An+"64>SiP3BeQJ2_d0M4q0V12)Sf++?VY<2D@<(4>SiP@Qkns3ANI$4q0V12)Sl-+?VP>@UhS24>SiPA3M+u2.eg%4q0V12)Sr/+?VSp@kg.V4>SiPAj.>"2)@0N4q0V12)[-P+?VYCAhuU[4>SiQ0g6^B2)?sF4q0V12)[3R+?VV=@PL%U4>SiQ1HlpD3&>)$4q0V12)[9T+?VVn@5pF[4>SiQ2*N-F3A<:$4q0V12)[?V+?X0o2e?N13Aiu04>SiQ2a/?H3AtA)4q0V12)[EX+?VYE0f)!&4>SiQ3BeQJ2.^B/4q0V12)\l,+?VS:2_[E)4>SiQ@Qkns2.C#N4q0V12)\r.+?VP:2E3l04>SiQA3M+u2DI*L4q0V12)]#0+?VP:2E3l04>SiQAj.>"A2lMZA7K1Z4q0V12)d3Q+?VPB3&3Z,4>SiR0g6^B2E*O*4q0V12)d9S+?VDj@l?L[4>SiR1HlpD3ArlS4q0V12)d?U+?X0o2e?N01,;$&4>SiR2*N-F3+b!(4q0V12)dEW+?VY?3+G,]4>SiR2a/?H3&4u$4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QF(2`NuD4>gSY1-Q.01Gq*O4s2sH1h&.&%6QF(2dnlm4?$e^3Bdm71Gq+#4s2sHAhu>/%6QF(2e,#o4?5)T1d2@21Gq+%4s2sJ2*!EU%6QF(2e>/q4?5?21Hl711Gq+''4s2sI1,1aP%6QF(3&!N=4>eoR0g6%/1Gq-H4s2sD1b^[K%6QF(3&3Z?4>SfJ1-Q.01Gq-J4s2sD1b^[K%6QF(3&EfA4>g\/ANgPc1Gq-L4s2sG2.\R-%6QF(3&WrC4>o,QAj-Yd1Gq-N4s2sG@5VX\%6QF(3&j)E4?-k12a.[51Gq-P4s2sJ3+Xj/%6QF(3+4un4CgE.11Y!+2a.[51Gq.$4s2sF2.9rX%6QF(3+G,p4?,5V0Koq.1Gq.&4s2sJ0JGCK%6QF(3+Y8r4>ep)@6P,_1Gq.(4s2sF1c%*T%6QF(3A<W>4>nlK2*MI31Gq0I4s2sHA2.LV%6QF(3ANc@4>gY\3''Id61Gq0K4s2sG11W.(%6QF(3A`oB4?-k^A3LGb1Gq0M4s2su3&W^+A2IaZ%6QF(3As&D4CgE02e6GU@Qk5`1Gq0O4s2su3&bDZ@l#o)%6QF(3B02F4>g_,@6P,_1Gq0Q4s2sG0JtOJ%6QF(3FP)o4>o300g6%/1Gq1%4s2su3&G/VAM[aY%6QF(3Fb5q4CgE.A7T7-@6P,_1Gq1''4s2sJ0P37-%6QF(3FtAs4?5?4Aj-Yd1Gq1)4s2sJ3Ai`Z%6QF(@5''kf4>o)W0g6%/1GrSq4s2sCARRS_%6QF(@5:"h4?-q`0g6%/1GrSs4s2sEAnEb]%6QF(@5L.j4?#313Bdm71GrSu4s2sF0fM$T%6QF(@5^:l4?,5VANgPc1GrT"4s2sH@5hUY%6QF(@5pFn4?5)P2a.[51GrT$4s2sG@:Wh2%6QF(@:;>B4>euR1Hl711GrTM4s2t"3A<HW%6QF(@:MJD4>nlP2*MI31GrTO4s2sG0fCsS%6QF(@:_VF4?-q_ANgPc1GrTQ4s2sF0KCjO%6QF(@PBtg4>pe/1d2@21GrVr4s2sH@5g#,%6QF(@PU+i4>o,P3''Id61GrVt4s2sCAR].5%6QF(@Pg7k4>eiP@m1>a1GrW!4s2sF1,CmR%6QF(@Q$Cm4CgE1ARo:Z@m1>a1GrW#4s2sG2`*<S%6QF(@Q6Oo4?,$''3Bdm71GrW%4s2sI@PKl,%6QF(@UVGC4?5)R1Hl711GrWN4s2su3&EC$AMuA/%6QF(@UhSE4?-b''0g6%/1GrWP4s2sG1,CgP%6QF(@V%_G4?5<02a.[51GrWR4s2sJ3&W]Z%6QF(@k^(h4>erO1Hl711GrYs4s2sF@524T%6QF(@kp4j4?-bX1d2@21GrYu4s2sFA7[V^%6QF(@l-@l4>noN@m1>a1GrZ"4s2sG1,q-T%6QF(@l?Ln4>o!(2a.[51GrZ$4s2sG3FcM^%6QF(@lQXp4CgE1ARo=*1Hl711GrZ&4s2sGAMRj]%6QF(@pqPD4?,#L2*MI31GrZO4s2sI0f:dO%6QF(@q.\F4?,,S1-Q.01GrZQ4s2sI@PM=U%6QF(@q@hH4?-h_@m1>a1GrZS4s2sF1c&`-%6QF(A2$1i4?5,T2a.[51Gr\t4s2sI0fLdM%6QF(A26=k4?#,P0g6%/1Gr]!4s2sIAn#76%6QF(A2HIm4>^VZ@6P,_1Gr]#4s2sJ1H@?W%6QF(A2ZUo4>g\Y2a.[51Gr]%4s2sFAi;Y5%6QF(A2laq4>o!(0g6%/1Gr]''4s2sG@Q-&+%6QF(A77YE4?,--@m1>a1Gr]P4s2sF0k)t''%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>Sj*@m2"t2)Jbt4q0V12.U5]+?VM:1grQW4>Sj*ANh5!2`3?G4q0V12.U;_+?VJi1H7Q-4>Sj+0KpUA2*#8\4q0V12.\L++?VMAAnF494>Sj+1-QgC2.U<24q0V12.\R-+?VVlAS"%74>Sj+1d3$E3+6B04q0V12.\X/+?VVn@lHR\4>Sj+2Ei6G3+HGW4q0V12.\^1+?VPk1,1s%4>Sj+3''JHI2I\Er4q0V12.\d3+?X0o2e?N10Od3T4>Sj+@6Per2`"oO4q0V12.^5\+?X0o1brTR3G(Ga4>Sj+@m2"t2D[6N4q0V12.^;^+?VP>3Fb5^4>Sj+ANh5!3A=lM4q0V12.^A`+?X0o2e?N01,qH,4>Sj,0KpUA2_m0H4q0V12.eR,+?X0o2e?N11,1s%4>Sj,1-QgC3AE@#4q0V12.eX.+?VMn1GM''&4>Sj,1d3$E1hAIP4q0V12.e^0+?VM;A2c[]4>Sj,2Ei6G2D[<P4q0V12.ed2+?X0o2e?N01M/f[4>Sj,3''JHI2e4a#4q0V12.ej4+?VSpA26=X4>Sj,@6Per3&i`Q4q0V12.g;]+?VY<1GM''&4>Sj,@m2"t1hJRV4q0V12.gA_+?VVC2)@E*4>Sj,ANh5!3+cbV4q0V12.gGa+?VMlAMH@X4>SlL0KpUA3A<BL4q0V12D?jL+?VY<2`3c.4>SlL1-QgC2DR*C4q0V12D?pN+?VP?AiMs`4>SlL1d3$E2*!TO4q0V12D@!P+?VM:A7Rk54>SlL2Ei6G2)R3K4q0V12D@''R+?VMj@Pp=Y4>SlL3''JHIA2lMZA7IPS4q0V12DAT(+?VMk0f_E,4>SlL@m2"t2Ind,4q0V12DAZ*+?VSB2.Sl[4>SlLANh5!3&!?N4q0V12DA`,+?X0o1b`HM0Od3T4>SlM0KpUA2.AO#4q0V12DHpM+?X0o2e?N02)7?)4>SlM1-QgC2DAVu4q0V12DI!O+?VM?Ai)[\4>SlM1d3$E3B1V^4q0V12DI''Q+?VPB0P!?V4>SlM2Ei6G2I\[)4q0V12DI-S+?VDjA7Rk54>SlM3''JHI3B1S(4q0V12DI3U+?VDjA7[q64>SlM@6Per1H.:(4q0V12DJZ)+?VJm@Pp=Y4>SlM@m2"t11`I)4q0V12DJ`++?VPm2`Nu14>SlMANh5!A2lMZA7RMU4q0V12DJf-+?VY<1GV-''4>SlN0KpUA1hC-*4q0V12DR!N+?X0o1b`HN@5:"U4>SlN1-QgC2)6jA4q0V12DR''P+?VMk0Od3T4>SlN1d3$E3+4LL4q0V12DR-R+?VVl0O[-S4>SlN2Ei6G3+cYX4q0V12DR3T+?VVC2_[E)4>SlN3''JHI3A<9F4q0V12DR9V+?VG;0kNTY4>SlN@6Per2)8_u4q0V12DS`*+?X0o2e?N0@PU+V4>SlN@m2"t2`>2U4q0V12DSf,+?VV;2)[W-4>SlNANh5!3&rrP4q0V12DSl.+?VVl@5''kS4>SlO0KpUA3+6<+4q0V12D[''O+?VYC2.JfZ4>SlO1-QgC3B&g*4q0V12D[-Q+?VSk0Ju$''4>SlO1d3$E3&**F4q0V12D[3S+?VYB@U_M14>SlO2Ei6G2e+[T4q0V12D[9U+?VSl@k^(U4>SlO3''JHI3+66(4q0V12D[?W+?VYBARRb34>SlO@6Per2e4d''4q0V12D\f++?VP;1cIT-4>SlO@m2"t2J+s/4q0V12D\l-+?VSp@50qT4>SlOANh5!3&39M4q0V12D\r/+?VY<2`Nu14>SlP0KpUA3A<BN4q0V12Dd-P+?VM:1h8cZASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1H%''F4s2sF0fD!T%6QF)1c%<<4>nuT1Hl711H%''H4s2sG1M/R0%6QF)1c7H>4?#/R2EhR41H%''J4s2sIA2c2+%6QF)1cIT@4?5)L0g6%/1H%''L4s2sJ0K*H*%6QF)1c[`B4?5)N0Koq.1H%''u4s2sCARf.4%6QF)1h&Wk4?5)MAj-Yd1H%("4s2sI@q/q2%6QF)1h8cm4>gV&@6P,_1H%($4s2sF@k_=T%6QF)1hJoo4>f--2*MI31H%*E4s2su3&G5X@qK:9%6QF)2).9;4?5)L0Koq.1H%*G4s2sJ0J[3''%6QF)2)@E=4?5;Z@6P,_1H%*I4s2sJ@Urq3%6QF)2)RQ?4>f,S2a.[51H%*K4s2sD1bq!R%6QF)2)d]A4?"rL2a.[51H%*M4s2sJ0Jb^Q%6QF)2*!iC4?,&N@Qk5`1H%+!4s2sEAMZ>1%6QF)2.A`l4>pY*ANgPc1H%+#4s2su3&bDZA2.LV%6QF)2.Sln4?-b02*MI31H%+%4s2sG2E<ZZ%6QF)2.f#p4>efJ1d2@21H%-F4s2sHAi=3a%6QF)2DIB<4?$_Z3Bdm71H%-H4s2sCART.6%6QF)2D[N>4?$_,0g6%/1H%-J4s2sJ0JP7F%6QF)2DmZ@4>o-10g6%/1H%-L4s2sG@q@V`%6QF)2E*fB4?5E40Koq.1H%-N4s2su3&bDZ@l[s]%6QF)2E<rD4>g_[2*MI31H%."4s2sG0kN1)%6QF)2I\im4>o,QA3LGb1H%.$4s2su3&bDZA2%UZ%6QF)2Inuo4?-bYAj-Yd1H%.&4s2sH2J+d0%6QF)2J,,q4>o,Q2*MI31H%0G4s2sG2_d0R%6QF)2_dK=4>f)Y@m1>a1H%0I4s2sIAnGR;%6QF)2`!W?4?5)M@6P,_1H%0K4s2sF2`>).%6QF)2`3cA4?5--1Hl711H%0M4s2sF1c.0U%6QF)2`EoC4>g\)A3LGb1H%0O4s2sH@5).S%6QF)2`X&E4?#/X1d2@21H%1#4s2sJ0K(pT%6QF)2e"rn4?-qaA3LGb1H%1%4s2sGA7f:7%6QF)2e5)p4>eiMANgPc1H%1''4s2sJ0JPCJ%6QF)2eG5r4?#5U@6P,_1H%3H4s2sF2_m*O%6QF)3&*T>4CgE.1h:/RA3LGb1H%3J4s2su3&bDZ@khCU%6QF)3&<`@4>euN0Koq.1H%3L4s2t"@5''K$%6QF)3&NlB4?,301d2@21H%3N4s2sI@PBW&%6QF)3&a#D4?5)L1Hl711H%3P4s2sJ0JI*&%6QF)3&s/F4?6h+0Koq.1H%4$4s2sF@k_IX%6QF)3+>&o4?5)Q1Hl711H%4&4s2sF1biQ*%6QF)3+P2q4>UG+3''Id61H%4(4s2sF0fCsS%6QF)3+b>s4?,#S3Bdm71H%6I4s2sEAN)D/%6QF)3AE]?4>g_\A3LGb1H%6K4s2sI@5qd]%6QF)3AWiA4D$T2Aj-Yd1H%6M4s2sHA2%OX%6QF)3AiuC4?,>\2a.[51H%6O4s2sGA2@d\%6QF)3B'',E4?,$(@6P,_1H%6Q4s2sF1GrT)%6QF)3B98G4?,2X1d2@21H%7%4s2sIAn>F8%6QF)3FY/p4?$h+@Qk5`1H%7''4s2sI0K;!T%6QF)3Fk;r4>^V*2a.[51H%7)4s2sGAi2;,%6QF)3G(Gt4?5-*0g6%/1H&Yq4s2sEAhu8-%6QF)@50qg4>elL1d2@21H&Ys4s2sF1GiN(%6QF)@5C(i4>g\(2EhR41H&Yu4s2sH2)R3S%6QF)@5U4k4>o)U3Bdm`DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e2ISL-+?VV@1c%<)4>Sm(2a/?H3A<C(4q0V12ISR/+?VMn@:_V34>Sm(3BeQJ3G(''V4q0V12IU#X+?VM;1H@W.4>Sm(@Qkns11am&4q0V12IU)Z+?VMn2DmZ-4>Sm(A3M+u2*#5X4q0V12IU/\+?X0o2e?N02DRH*4>Sm(Aj.>"3+4[%4q0V12I\@(+?VMm3B9844>Sm)0g6^B2`5)&4q0V12I\F*+?VMi2E!`.4>Sm)1HlpD2DmEP4q0V12I\L,+?VPm2J#&]4>Sm)2*N-F3+HAN4q0V12I\R.+?VVn@5''kS4>Sm)2a/?H2E*=#4q0V12I\X0+?VVD3&Wr04>Sm)3BeQJ1hAC%4q0V12I^)Y+?VMm2D[N+4>Sm)@Qkns2.\^&4q0V12I^/[+?VMn0O[-S4>Sm)A3M+u3&NEF4q0V12I^5]+?VM81hJo\4>Sm)Aj.>"2e6JZ4q0V12IeF)+?VVqA2HIZ4>Sm*0g6^B3A<:#4q0V12IeL++?VSm1M/f[4>Sm*1HlpD2)?pD4q0V12IeR-+?VMl1-%N-4>Sm*2*N-F2DS_r4q0V12IeX/+?VP@0Od3T4>Sm*2a/?H2`NTK4q0V12Ie^1+?VSo11EEV4>Sm*3BeQJ3&"lS4q0V12Ig/Z+?VV?0Om9U4>Sm*@Qkns3A=l"4q0V12Ig5\+?VY<@5^:Y4>Sm*A3M+u3B1V]4q0V12Ig;^+?VYp2Ieo[4>Sm*Aj.>"1hC)M4q0V12InL*+?VMm1LrZY4>Sm+1HlpD2DR(#4q0V12InX.+?VP@0k*<U4>Sm+2*N-F2E*@"4q0V12In^0+?VM93ANc-4>Sm+2a/?H2Dd<P4q0V12Ind2+?VSpAn!q54>Sm+3BeQJ2)/Ys4q0V12Ip5[+?VSBAN2j_4>Sm+@Qkns3FXj&4q0V12Ip;]+?VYq@U_M14>Sm+A3M+u2E>;.4q0V12IpA_+?VPA2.Sl[4>Sm+Aj.>"1Gh!L4q0V12J"R++?VYr@Pg7X4>Sm,0g6^B2e=mX4q0V12J"X-+?VYq@V.e54>Sm,1HlpD3&**H4q0V12J"^/+?VP?0P*EW4>Sm,2*N-F2`>2Y4q0V12J"d1+?VVqAiDm_4>Sm,2a/?H2*!WQ4q0V12J"j3+?VM:A2$1V4>Sm,3BeQJ2`>8''4q0V12J$;\+?VV;0fM9*4>Sm,@Qkns2DR''t4q0V12J$A^+?VSn0Od3T4>Sm,A3M+u3AicM4q0V12J$G`+?VSn0Jks&4>Sm,Aj.>"3+Y''[4q0V12J+X,+?VPA2dnlZ4>Sm-0g6^B2E3X(4q0V12J+^.+?VPA0JPa#4>Sm-1HlpD2DHmG4q0V12J+d0+?X0o2e?N1A2$1V4>Sm-2*N-FA2lMZA7T4_4q0V12J+j2+?VM:@lHR\4>Sm-2a/?H2E*<M4q0V12J+p4+?VS=1H%E+4>Sm-@QknsA2lG(A7[]34q0V12J-G_+?VY<1grQW4>Sm-A3M+u2E#)U4q0V12J-Ma+?VDj@Q-I[4>Sm-Aj.>"3&rrQ4q0V12_ZpL+?VYE0O[-S4>SoM0g6^B2eHQ04q0V12_[!N+?VSpAn+"64>SoM1HlpD3+ZPW4q0V12_[''P+?X6r0kNTY4>SoM2*N-F2`!EP4q0V12_[-R+?VYr3+P2^4>SoM2a/?H3G(6]4q0V12_[3T+?X6r3&<`-4>SoM3BeQJ2E3ZN4q0V12_\Z(+?VS;A2$1V4>SoM@Qkns3At;%4q0V12_\`*+?VYo2)d].4>SoMA3M+u3Ft3_4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QF*0P*Ej4?$b/@Qk5`1H.""4s2t"3FO[,%6QF*0ebd64>noS0Koq.1H.$C4s2t"3B:M3%6QF*0etp84>o,Q2a.[51H.$E4s2sI0JG7G%6QF*0f2'':4CgE/3Fl]10Koq.1H.$G4s2sF0OnNT%6QF*0fD3<4>eiJ@6P,_1H.$I4s2sF0f:dO%6QF*0fV?>4>eiR2*MI31H.$K4s2sCAN2V4%6QF*0k!6g4>elRA3LGb1H.$t4s2sF11W=-%6QF*0k3Bi4CgE.0P"ZQ@6P,_1H.%!4s2su3&bDZ@kqOX%6QF*0kENk4>SiNANgPc1H.%#4s2sF1Lt)]%6QF*1,(m74>o*0@m1>a1H.''D4s2sF2)@$P%6QF*1,;$94>f!-1d2@21H.''F4s2sF1c7-S%6QF*1,M0;4>f$,0Koq.1H.''H4s2sF3AWZZ%6QF*1,_<=4>gP%@m1>a1H.''J4s2sF@:M&V%6QF*1,qH?4>gS,2EhR41H.''L4s2su3&bDZ@l@j]%6QF*11<?h4>gV''1d2@21H.''u4s2sD2e=a.%6QF*11NKj4>gV[2EhR41H.("4s2sFAMl;.%6QF*11`Wl4>^V+3''Id61H.($4s2sFAS!Y]%6QF*1GD!84>nlR2a.[51H.*E4s2su3&bDZ@q%>[%6QF*1GV-:4>ns)@m1>a1H.*G4s2sG1biK(%6QF*1Gh9<4>o!*2EhR41H.*I4s2sG1bq$S%6QF*1H%E>4CgE/@:Wn/3Bdm71H.*K4s2sG1GN?&%6QF*1H7Q@4>o)TAj-Yd1H.*M4s2sG2Do)1%6QF*1LWHi4>o)U1Hl711H.+!4s2sG2J+g1%6QF*1LiTk4CgE1ARo:]@Qk5`1H.+#4s2sG3&tM5%6QF*1M&`m4>o/YA3LGb1H.+%4s2sG3G(05%6QF*1b_*94>o2Z2EhR41H.-F4s2sF@V%M_%6QF*1bq6;4>gSZ3''Id61H.-H4s2sG3FZG]%6QF*1c.B=4>pYY@m1>a1H.-J4s2sGAhc#(%6QF*1c@N?4>pb*2a.[51H.-L4s2sGAiVh7%6QF*1cRZA4>p\X@6P,_1H.-N4s2sG@pre0%6QF*1grQj4?"rK@Qk5`1H.."4s2sH0fCdN%6QF*1h/]l4?##O@Qk5`1H..$4s2sEAMRaZ%6QF*1hAin4?#&N@m1>a1H..&4s2sH1h0rX%6QF*2)%3:4?#*.Aj-Yd1H.0G4s2sH2)dBV%6QF*2)7?<4?#-/@m1>a1H.0I4s2sH2Deu/%6QF*2)IK>4>USY0g6%/1H.0K4s2sH2`>).%6QF*2)[W@4?#3-3Bdm71H.0M4s2sH3A`ER%6QF*2)mcB4?#8X1Hl711H.0O4s2sH3AiTV%6QF*2.8Zk4?7"1@Qk5`1H.1#4s2sH3FQJ_%6QF*2.Jfm4?5)T1Hl711H.1%4s2sH@Por*%6QF*2.\ro4?$b)1d2@21H.1''4s2sH@kff(%6QF*2D@<;4>\fO1d2@21H.3H4s2sH@l5r(%6QF*2DRH=4?$b-3''Id61H.3J4s2sHA2H2.%6QF*2DdT?4CgE1ARo=0@m1>a1H.3L4s2sHAMQ#)%6QF*2E!`A4?$h,1-Q.01H.3N4s2sHAMcA1%6QF*2E3lC4?$h-2*MI31H.3P4s2sHAMc2,%6QF*2IScl4?$h2@m1>a1H.4&4s2sHAi2;,%6QF*2J#&p4CgE/3+QSZ0Koq.1H.6I4s2sHAn<td%6QF*2_mQ>4?,&P0g6%/1H.6K4s2sE1c7''Q%6QF*2`*]@4?,)R3''Id61H.6M4s2sI1,h3W%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>SoT3''JHI3&5&$4q0V12`E`\+?VM92`X&24>SoT@6Per3&<F#4q0V12`G20+?VV?1,(m$4>SoT@m2"t3&>#S4q0V12`G82+?VV?Ai)[\4>SoTANh5!1c7$G4q0V12`G>4+?VV@3&a#14>SoU0KpUA3&P;)4q0V12`NNU+?X0o1b`HM@PBtT4>SoU1-QgC3&`WP4q0V12`NTW+?VVB1L`NW4>SoU1d3$E3&iTL4q0V12`NZY+?VVB@UqY34>SoU2Ei6G3&W^+4q0V12`N`[+?VVC1H%E+4>SoU3''JHI1Ggju4q0V12`Nf]+?VVC@l?L[4>SoU@6Per3&tGY4q0V12`P81+?VVlA7@_34>SoU@m2"t3+=[T4q0V12`P>3+?VVm2.8ZX4>SoUANh5!3+Os(4q0V12`PD5+?VVo3B9844>SoV0KpUA1cJu(4q0V12`WTV+?VVp1Gh9)4>SoV1-QgC3+XpT4q0V12`WZX+?VVqAS++84>SoV1d3$E3A<EO4q0V12`W`Z+?VVqAmmk44>SoV2Ei6G3A<1!4q0V12`Wf\+?VY<1Gq?*4>SoV3''JHI3A<<E4q0V12`Wl^+?VVq@lQX]4>SoV@6Per3A<EI4q0V12`Y>2+?VY<3+4u[4>SoV@m2"t3A<F$4q0V12`YD4+?VY<3+4u[4>SoVANh5!3A<F$4q0V12`YJ6+?VY<3+4u[4>Sp)0KpUA3A<F$4q0V12dnF)+?VY<3&s/34>Sp)1-QgC3A<EQ4q0V12dnL++?VY<3&s/34>Sp)1d3$E3A<EQ4q0V12dnR-+?VY<3&s/34>Sp)2Ei6G3A<EQ4q0V12dnX/+?VY<3&s/34>Sp)3''JHI3A<EQ4q0V12dn^1+?VY<3&s/34>Sp)@6Per3A<EQ4q0V12dp/Z+?VY<3&s/34>Sp)@m2"t3A<EQ4q0V12dp5\+?X0o2DSfR3&a#14>Sp)ANh5!3AY2V4q0V12dp;^+?VYA@UhS24>Sp*0KpUAA2lJ''A7[JS4q0V12e"L*+?VYB@PU+V4>Sp*1-QgC3B&g*4q0V12e"R,+?VYD1H@W.4>Sp*1d3$E3B1SZ4q0V12e"X.+?VYE0Jbm%4>Sp*2Ei6G3B8cR4q0V12e"^0+?VYE1c7H+4>Sp*3''JHI3B8oR4q0V12e"d2+?VYE1h&WX4>Sp*@6Per3FOU$4q0V12e$5[+?VYm2.f#]4>Sp*@m2"t3FOg''4q0V12e$;]+?VYmAS++84>Sp*ANh5!3FX^&4q0V12e$A_+?VYnA7e"74>Sp+0KpUA3Fjg(4q0V12e+R++?VYp0K;6*4>Sp+1-QgC3FuVV4q0V12e+X-+?VYq@q.\34>Sp+1d3$E3G''s)4q0V12e+^/+?VYr1grQW4>Sp+2Ei6G3G(0*4q0V12e+d1+?VYr2E*f/4>Sp+3''JHIA2lJ-A7[K(4q0V12e+j3+?X0o2)&QPAS"%74>Sp+@6PerA2lG#A7]=`4q0V12e-;\+?VVD0k3BV4>Sp+@m2"t2E52+4q0V12e-A^+?VP?An!q54>Sp+ANh5!2.e[&4q0V12e-G`+?VM;0JG["4>Sp,0KpUA2)@3P4q0V12e4X,+?VMA2)@E*4>Sp,1-QgCAmmDK4q0V12e4^.+?X0o2e?N0AMH@X4>Sp,1d3$E2ISO#4q0V12e4d0+?X0o1hL9.@V%_44>Sp,2Ei6GA2lD#A7[JM4q0V12e4j2+?VVl0etp%4>Sp,@6Per1hACR4q0V12e6A]+?VJl11EEV4>Sp-0KpUA1hAL#4q0V12e=^-+?VJl2.8ZXASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1H/l#4s2sEAN+3b%6QF*AMZLm4>^V/A3LGb1H/l%4s2sEAN;Y4%6QF*AMlXo4>^VY3Bdm71H/l''4s2sEARmJY%6QF*AN)dq4>^V\0Koq.1H/l)4s2sEAS,I:%6QF*AN;ps4>^V]Aj-Yd1H/lR4s2sEAh[[X%6QF*AR[hG4>^Y)2*MI31H/lT4s2sEAi;>,%6QF*ARmtI4>^Y+@Qk5`1H/lV4s2sEAi)M3%6QF*AS++K4>^Y-1d2@21H/o"4s2sEAiF-^%6QF*AhuUn4>^Y12a.[51H/o&4s2sEAn#=8%6QF*Ai2ap4>^Y[Aj-Yd1H/o(4s2sEAnGR;%6QF*AiW$t4>efI0Koq.1H/oS4s2sF0JR$#%6QF*An!qH4>efJ2a.[51H/oU4s2sF0J[3''%6QF*An4(J4>efM2a.[51H/oW4s2sF0K(gQ%6QF*AnF4L4>efN@6P,_1H7''B4s2sF0Jd0%%6QF+0JPa64>efPAj-Yd1H7''D4s2sF0KD$T%6QF+0Jbm84>efQ@m1>a1H7''F4s2sF0OnTV%6QF+0Ju$:4>eg(2EhR41H7''H4s2sF0P*7.%6QF+0K20<4>eg(Aj-Yd1H7''J4s2sF0ebRN%6QF+0KD<>4>eiI@Qk5`1H7''s4s2sF0ek@G%6QF+0Od3g4>eiJ@Qk5`1H7''u4s2sF0em6''%6QF+0P!?i4>eiNAj-Yd1H7("4s2sF0jue#%6QF+0P3Kk4>ej&@m1>a1H7*C4s2sF0k=iZ%6QF+0ekj74>ej)ANgPc1H7*E4s2sF0kN7+%6QF+0f;-;4>elK1Hl711H7*I4s2sF1,M!T%6QF+0fM9=4>elP0g6%/1H7*K4s2sF1,_$S%6QF+0f_E?4>elS1Hl711H7*t4s2sF11N:-%6QF+0k*<h4>em+0Koq.1H7+#4s2sF1G`T+%6QF+0kNTl4>eoO@m1>a1H7-D4s2sF1GiQ)%6QF+1,1s84>eoQ0g6%/1H7-F4s2sF1H&`,%6QF+1,D*:4>ep''@Qk5`1H7-H4s2sF1LsoX%6QF+1,V6<4>ep+2EhR41H7-J4s2sF1M/L.%6QF+1,hB>4>erN2a.[51H7-L4s2sF1c/`,%6QF+1-%N@4>erR2EhR41H7-u4s2sF1cAf,%6QF+11EEi4>erS1d2@21H7."4s2sF1cT#0%6QF+11WQk4>erU2EhR41H7.$4s2sF1gr+&%6QF+11i]m4>es(A3LGb1H70E4s2sF1h&I/%6QF+1GM''94>es)Aj-Yd1H70G4s2sF1h/F-%6QF+1G_3;4>es*A3LGb1H70I4s2sF2)&T*%6QF+1Gq?=4>euO@Qk5`1H70K4s2sF2)@*R%6QF+1H.K?4>euQ@6P,_1H71!4s2sF2)mQZ%6QF+1L`Nj4>euUANgPc1H71#4s2sF2D@*S%6QF+1M/fn4>f#Q2a.[51H73F4s2sF2D\r/%6QF+1bh0:4>f#R3Bdm71H73H4s2sF2Del,%6QF+1c%<<4>f#RAj-Yd1H73J4s2sF2E!HW%6QF+1c7H>4>f#T3Bdm71H73L4s2sF2E#/2%6QF+1c[`B4>f#W2*MI31H74"4s2sF2E>20%6QF+1h8cm4>f$+0g6%/1H74&4s2sF2Iea2%6QF+1hJoo4>f$-A3LGb1H76G4s2sF2J"^/%6QF+2).9;4>f&O@6P,_1H76I4s2sF2_d0R%6QF+2)@E=4>f&Q1Hl711H76K4s2sF2_nu/%6QF+2)d]A4>f&S@m1?5DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e3&NZZ+?VM?2_[E)4>SrS3BeQJ2)dL)4q0V13&P,.+?VM?3Fb5^4>SrS@Qkns2)eu(4q0V13&P20+?VM?AMu^]4>SrSA3M+u2)f)W4q0V13&WHS+?VM?AnF494>SrT0g6^B2)m9M4q0V13&WNU+?VM@1,(m$4>SrT1HlpD2)mBI4q0V13&WTW+?VM@2e,#\4>SrT2*N-F2)mQL4q0V13&WZY+?VM@@6$L\4>SrT2a/?H2)o)W4q0V13&W`[+?VM@A2$1V4>SrT3BeQJ2)o,''4q0V13&Y2/+?VM@A77Y24>SrT@Qkns2)o/-4q0V13&Y81+?VMA0Om9U4>SrTA3M+u2*!EK4q0V13&Y>3+?VMA11i]Z4>SrTAj.>"2*!QL4q0V13&`NT+?VMA2Inu\4>SrU0g6^B2*#/T4q0V13&`TV+?VMAA26=X4>SrU1HlpD2*#2X4q0V13&``Z+?VMi0Jks&4>SrU2a/?H2.81K4q0V13&`f\+?VMi1,D*''4>SrU3BeQJ2.8=#4q0V13&b80+?VMi2)RQ,4>SrU@Qkns2.8C!4q0V13&b>2+?VMi2Inu\4>SrUA3M+u2.8FT4q0V13&bD4+?VMi3FtA`4>SrUAj.>"2.9oP4q0V13&iTU+?VMi@:MJ14>SrV0g6^B2.9rM4q0V13&iZW+?VMiAM?:W4>SrV1HlpD2.A6n4q0V13&i`Y+?VMj0f_E,4>SrV2*N-F2.A<u4q0V13&if[+?VMj11WQX4>SrV2a/?H2.ABs4q0V13&il]+?VMj2e,#\4>SrV@Qkns2.AOR4q0V13&kD3+?VMk1,D*''4>SrVA3M+u2.JCN4q0V13&kJ5+?VMk1GD!%4>SrVAj.>"2.JO#4q0V13&rZV+?VMk2E<r14>SrW0g6^B2.JRT4q0V13&r`X+?VMk@q%V24>SrW1HlpD2.L/P4q0V13&rfZ+?VMkAi)[\4>SrW2*N-F2.SI!4q0V13&rl\+?VMl1,_<*4>SrW2a/?H2.SO"4q0V13&rr^+?VMl1c@N,4>SrW3BeQJ2.SOP4q0V13&tD2+?VMl3ANc-4>SrW@Qkns2.S^(4q0V13&tJ4+?VMl3B9844>SrWA3M+u2.U,L4q0V13&tP6+?VMlA2la^4>SrWAj.>"2.U8P4q0V13+4L)+?VMlAiMs`4>Ss*0g6^B2.\Hq4q0V13+4R++?VMm0etp%4>Ss*2*N-F2.\L%4q0V13+4^/+?VMm11`WY4>Ss*2a/?H2.\X)4q0V13+65Z+?VMm@5pF[4>Ss*@Qkns2.^3)4q0V13+6A^+?VMm@q%V24>Ss*Aj.>"2.^;R4q0V13+=R*+?VMn0K20)4>Ss+0g6^B2.eOR4q0V13+=^.+?VMn1,;$&4>Ss+2*N-F2.eU''4q0V13+=d0+?VMn1H%E+4>Ss+2a/?H2.eXR4q0V13+=j2+?VMn1b_*&4>Ss+3BeQJ2.e^"4q0V13+?;[+?VMn2)mc/4>Ss+@Qkns2.ea''4q0V13+?A]+?VMn3&s/34>Ss+A3M+u2.ejY4q0V13+?G_+?VMn@5g@Z4>Ss+Aj.>"2.g8R4q0V13+FX++?VMn@:h\44>Ss,0g6^B2.g;W4q0V13+F^-+?VMn@l-@Y4>Ss,1HlpD2.g>Y4q0V13+Fd/+?VMnAMH@X4>Ss,2*N-F2.gD[4q0V13+Fj1+?VMnARmt64>Ss,2a/?H2.gH14q0V13+Fp3+?VP90fM9*4>Ss,3BeQJ2D?jo4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QF+@pqPD4>nlL1Hl711H8lR4s2sG0K(XL%6QF+@q.\F4>nlPAj-Yd1H8lT4s2sG0KE].%6QF+@q@hH4>nm%1d2@21H8lV4s2sG0Oc_"%6QF+A2$1i4>nm''@Qk5`1H8o"4s2sG0P"WV%6QF+A26=k4>nm*3''Id61H8o''4s2sG0em0%%6QF+A2c[p4>noQ@m1>a1H8o)4s2sG0fW]-%6QF+A2ugr4>noSAj-Yd1H8oR4s2sG0k!%*%6QF+A7@_F4>np(1-Q.01H8oT4s2sG0k=l[%6QF+A7RkH4>nrL2*MI31H8oV4s2sG1,:jR%6QF+A7e"J4>nrO1Hl711H8r"4s2sG1,LmQ%6QF+AMH@k4>nrO@m1>a1H8r$4s2sG1,UdM%6QF+AMZLm4>nrP2EhR41H8r&4s2sG11N.)%6QF+AMlXo4>ns,@m1>a1H8r(4s2sG1GE6$%6QF+AN)dq4>nuLA3LGb1H8r*4s2sG1GLjQ%6QF+AN;ps4>nuO3Bdm71H8rU4s2sG1H%*S%6QF+ARmtI4>nuS1d2@21H8rW4s2sG1H/i.%6QF+AS++K4>nuT1d2@21H8u#4s2sG1H7<W%6QF+AhcIl4>nuU0Koq.1H8u%4s2sG1HB#1%6QF+AhuUn4>o!+0g6%/1H8u''4s2sG1LsuZ%6QF+Ai2ap4>o#M3Bdm71H8u)4s2sG1bg[J%6QF+AiDmr4>o#O1-Q.01H8u+4s2sG1c7*R%6QF+AiW$t4>o#R@Qk5`1H8uT4s2sG1cAl.%6QF+An!qH4>o#T@Qk5`1H8uX4s2sG1hAO.%6QF+AnF4L4>o$.2a.[51H@-C4s2sG1hL2\%6QF,0JPa64>o&N1d2@21H@-E4s2sG2).!Q%6QF,0Jbm84>o&O3Bdm71H@-G4s2sG2)I6U%6QF,0Ju$:4>o&T2a.[51H@-I4s2sG2)m<S%6QF,0K20<4>o&V2*MI31H@-K4s2sG2.JC*%6QF,0KD<>4>o''/0Koq.1H@-t4s2sG2.eU-%6QF,0Od3g4>o)Q@m1>a1H@.!4s2sG2Deo-%6QF,0P3Kk4>o)U0g6%/1H@0D4s2sG2E##.%6QF,0ekj74>o)V2a.[51H@0F4s2sG2ISF+%6QF,0f)!94>o*-3''Id61H@0H4s2sG2J$A^%6QF,0f;-;4>o,P2*MI31H@0J4s2sG2_d*P%6QF,0fM9=4>o,S1Hl711H@0L4s2sG2`*KX%6QF,0f_E?4>o,T@m1>a1H@0u4s2sG2`EWY%6QF,0k*<h4>o,W@Qk5`1H@1"4s2sG2e"I)%6QF,0k<Hj4>o--1-Q.01H@1$4s2sG2eG''6%6QF,0kNTl4>o-/2a.[51H@3E4s2sG2e4p4%6QF,1,1s84>o-10Koq.1H@3G4s2sG3&4u-%6QF,1,V6<4>o/V@Qk5`1H@3K4s2sG3&`TV%6QF,1,hB>4>o/X2*MI31H@3M4s2sG3&b80%6QF,1-%N@4>o/Y1d2@21H@4!4s2sG3+4[.%6QF,11EEi4>o0.1-Q.01H@4#4s2sG3+O^,%6QF,11WQk4>o002EhR41H@4%4s2sG3+Y''5%6QF,11i]m4>o01A3LGb1H@6H4s2sG3+cYa%6QF,1G_3;4>o2S0g6%/1H@6J4s2sG3AE<R%6QF,1Gq?=4>o2U2*MI31H@6L4s2sG3AY,.%6QF,1H.K?4>o2W2a.[51H@6N4s2sG3ArZW%6QF,1H@WA4>o2Y1-Q.01H@7$4s2sG3FOg0%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>SuRA3M+u2E>2V4q0V13AY51+?VPB@Q-I[4>SuS0g6^B2IS9o4q0V13A`KT+?VPj0P3KX4>SuS1HlpD2IS<t4q0V13A`QV+?VPj1,qH,4>SuS2*N-F2ISBu4q0V13A`WX+?VPj1M&`Z4>SuS2a/?H2ISF"4q0V13Ab/.+?VPj2)[W-4>SuS@Qkns2ISIP4q0V13Ab50+?VPj3&<`-4>SuSA3M+u2ISR*4q0V13Ab;2+?VPj3AE],4>SuT1-QgC2IU-+4q0V13AiTV+?VPjAN)d^4>SuT1d3$E2IU0,4q0V13AiZX+?VPk0kENX4>SuT2Ei6G2I\Eu4q0V13Ai`Z+?VPk1Gq?*4>SuT3''JHI2I\L$4q0V13Aif\+?VPk2)[W-4>SuT@6Per2I\Qu4q0V13Ak80+?VPk3&3Z,4>SuT@m2"t2I^-,4q0V13Ak>2+?VPkAMH@X4>SuTANh5!2I^8Q4q0V13AkD4+?VPl0ebd#4>SuU0KpUA2IeO!4q0V13ArTU+?VPl1Gq?*4>SuU1-QgC2IeOO4q0V13ArZW+?VPl2*!i04>SuU1d3$E2Ie[(4q0V13Ar`Y+?VPl2e"r[4>SuU2Ei6G2Ie^(4q0V13Arf[+?VPl3Aiu04>SuU3''JHI2IeaW4q0V13Arl]+?VPlA2$1V4>SuU@6Per2Ig8S4q0V13At>1+?VPlA2ZU\4>SuU@m2"t2Ig;P4q0V13AtJ5+?VPlAS"%74>SuV0KpUA2InLM4q0V13B&ZV+?VPm0P*EW4>SuV1-QgC2InNs4q0V13B&`X+?VPm11`WY4>SuV1d3$E2In[(4q0V13B&fZ+?VPm2.\r\4>SuV2Ei6G2In^''4q0V13B&l\+?VPm3&3Z,4>SuV3''JHI2Ip9/4q0V13B&r^+?VPm@l-@Y4>SuV@6Per2Ip<+4q0V13B(D2+?VPmA2ZU\4>SuV@m2"t2IpAZ4q0V13B(J4+?VPn1,;$&4>SuVANh5!2J"a#4q0V13B(P6+?VPn@lHR\4>SuW0KpUA2J$B,4q0V13B/`W+?VPn@q@h54>SuW1-QgC2J$K24q0V13B/fY+?VPo0k!6T4>SuW1d3$E2J+^Q4q0V13B/l[+?VPo11i]Z4>SuW2Ei6G2J+a$4q0V13B/r]+?VPo2.8ZX4>SuW3''JHI2J+gX4q0V13B0#_+?VPo2DRH*4>SuW@6Per2J+mY4q0V13B1J3+?VPo3+>&\4>SuW@m2"t2J+pZ4q0V13B1P5+?VPo3ANc-4>SuWANh5!2J+s+4q0V13B1V7+?VPo3FP)\4>SuX1-QgC2J-DV4q0V13B8lZ+?VPoA77Y24>SuX1d3$E2J-K24q0V13B8r\+?VPoAiW$a4>SuX2Ei6G2_[$J4q0V13B9#^+?VS:1LiTX4>SuX3''JHI2_[''s4q0V13B9)`+?VS:2)IK+4>SuX@m2"t2_[-H4q0V13B:V6+?VS:2Ieo[4>SuXANh5!2_[1%4q0V13B:\8+?VS:3&*T+4>T!+0KpUA2_[6L4q0V13FOX++?VS:@Q-I[4>T!+1d3$E2_\c%4q0V13FOd/+?VS:A7Ie44>T!+2Ei6G2_d!F4q0V13FOj1+?VS;1,(m$4>T!+3''JHI2_d*C4q0V13FOp3+?VS;1grQW4>T!+@6Per2_d0F4q0V13FQA\+?VS;2D@<(4>T!+@m2"t2_d6O4q0V13FQG^+?VS;3ANc-4>T!+ANh5!2_ebt4q0V13FQM`+?VS;@q%V2ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1HAnu4s2sH0k<((%6QF,@PL%h4?#!*2EhR41HAo"4s2sH1,(CG%6QF,@P^1j4?##MA3LGb1HAo$4s2sH1,<<&%6QF,@Pp=l4?##O3''Id61HAo&4s2sH1,L^L%6QF,@Q-In4?##Q1Hl711HAoQ4s2sH1,WQ*%6QF,@U_MD4?##TA3LGb1HAoS4s2sH11=]W%6QF,@UqYF4?#$)1d2@21HAoU4s2sH11N7,%6QF,@V.eH4?#$-@Qk5`1HAr#4s2sH1GUpR%6QF,@l$:k4?#&P0g6%/1HAr%4s2sH1GgmO%6QF,@l6Fm4?#&S@m1>a1HAr''4s2sH1H/f-%6QF,@lHRo4?#&U1Hl711HArR4s2sH1H@<V%6QF,@q@hH4?#'')2EhR41HArW4s2sH1LX`V%6QF,A2$1i4?#''*2*MI31HAu#4s2sH1L`:,%6QF,A26=k4?#''*@m1>a1HAu%4s2sH1Lk#\%6QF,A2HIm4?#'',3Bdm71HAu''4s2sH1M&R1%6QF,A2ZUo4?#''.1d2@21HAu)4s2sH1M1/]%6QF,A2laq4?#)N1d2@21HAu+4s2sH1b`?%%6QF,A7IeG4?#)P1d2@21HAuV4s2sH1bq$S%6QF,A7[qI4?#)P@m1>a1HB#%4s2sH1c%-U%6QF,AMZLm4?#)R1d2@21HB#''4s2sH1c.-T%6QF,AMlXo4?#)R@Qk5`1HB#)4s2sH1c/`,%6QF,AN)dq4?#)S0g6%/1HB#+4s2sH1c73U%6QF,AN;ps4?#)T2EhR41HB#T4s2sH1cAf,%6QF,AR[hG4?#)U0g6%/1HB#V4s2sH1cR0Q%6QF,AhZCk4?#)W0Koq.1HB&%4s2sH1c[NZ%6QF,AhlOm4?#)W@m1>a1HB&''4s2sH1gr(%%6QF,Ai)[o4?#**1Hl711HB&)4s2sH1gr@-%6QF,Ai;gq4?#**@Qk5`1HB&+4s2sH1h&=+%6QF,AiMss4?#*+Aj-Yd1HB&-4s2sH1h/L/%6QF,AmmkG4?#*-@6P,_1HB&V4s2sH1h:/]%6QF,An+"I4?#,SANgPc1HB&X4s2sH2)dNZ%6QF,An=.K4?#,W0g6%/1HB&Z4s2sH2*!?S%6QFT0JYg74?#-,1d2@21LVsn4s2sH2.\U.%6QFT0Jks94?#-03Bdm71LVsp4s2sH2D?gK%6QFT0K)*;4?#/P@6P,_1LVst4s2sH2DI3U%6QFT0O[-f4?#/QANgPc1LVtH4s2sH2DSf,%6QFT0Om9h4?#/S2*MI31LVtJ4s2sH2Dd3R%6QFT0P*Ej4?#/T@Qk5`1LVtL4s2sH2E!EV%6QFT0ebd64?#/VA3LGb1LW!m4s2sH2E#/2%6QFT0etp84?#/W0g6%/1LW!o4s2sH2E*HV%6QFT0fD3<4?#0.2*MI31LW!s4s2sH2Ig5\%6QFT0fV?>4?#00@m1>a1LW!u4s2sH2J-G_%6QFT0k!6g4?#2T1d2@21LW"I4s2sH2`!?U%6QFT0k3Bi4?#2V@m1>a1LW"M4s2sH2`EKU%6QFT1,(m74?#2XA3LGb1LW$n4s2sH2`W`Z%6QFT1,;$94?#3-@6P,_1LW$p4s2sH2e=m2%6QFT1,M0;4?#320Koq.1LW$r4s2sH2eFm1%6QFT1,_<=4?#5R2EhR41LW$t4s2sH3&36Q%6QFT11<?h4?#5U0Koq.1LW%J4s2sH3&<EU%6QFT11NKj4?#5X3''Id61LW%L4s2sH3&tP6%6QFT11`Wl4?#603''Id_DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e@5;FY+?VSB@q.\34>UD%0KpUA2`P;Y4q0V1@5BW%+?VSBAMcR[4>UD%1d3$E2`PD)4q0V1@5Bc)+?VSBAiDm_4>UD%2Ei6G2`PDY4q0V1@5Bi++?VSC1GM''&4>UD%3''JHI2`WZN4q0V1@5Bo-+?VSC1L`NW4>UD%@6Per2`W[)4q0V1@5D@V+?VSC1c7H+4>UD%ANh5!2`Wj,4q0V1@5DLZ+?VSC3As&14>UD&0KpUA2`WlX4q0V1@5K]&+?VSC@Q6O\4>UD&1-QgC2`Y>V4q0V1@5Kc(+?VSC@pqP14>UD&1d3$E2`YDW4q0V1@5Ki*+?VSk0Jbm%4>UD&2Ei6G2dnC#4q0V1@5Ko,+?VSk0ekj$4>UD&3''JHI2dnFP4q0V1@5Ku.+?VSk11WQX4>UD&@6Per2dnL&4q0V1@5MFW+?VSk1c7H+4>UD&@m2"t2dnOQ4q0V1@5MLY+?VSk2.Sl[4>UD&ANh5!2dnTu4q0V1@5MR[+?VSk2Inu\4>UD''0KpUA2dnX)4q0V1@5Tc''+?VSk@5''kS4>UD''1-QgC2dp,N4q0V1@5Ti)+?VSk@P^1W4>UD''2Ei6G2dp2S4q0V1@5Tu-+?VSl0K20)4>UD''3''JHI2e"Ku4q0V1@5U&/+?VSl1,hB+4>UD''@6Per2e"Qt4q0V1@5VLX+?VSl1cIT-4>UD''@m2"t2e"UT4q0V1@5VRZ+?VSl2D@<(4>UD''ANh5!2e"[*4q0V1@5VX\+?VSl2Inu\4>UD(0KpUA2e"^$4q0V1@5]i(+?VSl3AE],4>UD(1-QgC2e$3-4q0V1@5]o*+?VSlA2c[]4>UD(1d3$E2e$;X4q0V1@5]u,+?VSm0Od3T4>UD(2Ei6G2e+OR4q0V1@5^&.+?VSm1,(m$4>UD(3''JHI2e+U$4q0V1@5^,0+?VSm1GM''&4>UD(@6Per2e+X%4q0V1@5_RY+?VSm2).9(4>UD(@m2"t2e+^*4q0V1@5_X[+?VSm2E*f/4>UD(ANh5!2e+aW4q0V1@5_^]+?VSm2_[E)4>UD)0KpUA2e-<,4q0V1@5fo)+?VSm@V.e54>UD)1d3$E2e-AW4q0V1@5g&-+?VSmA2ug_4>UD)2Ei6G2e-B/4q0V1@5g,/+?VSmAR[h44>UD)@Qkns2e4X!4q0V1@5h[[+?VSn0k<HW4>UD)A3M+u2e4["4q0V1@5ha]+?VSn1bh0''4>UD)Aj.>"2e4d%4q0V1@5or)+?VSn2*!i04>UD*0g6^B2e4dV4q0V1@5p#++?VSn2dnlZ4>UD*1HlpD2e4m+4q0V1@5p//+?VSn@q.\34>UD*2a/?H2e6K/4q0V1@5p51+?VSnAhcIY4>UD*3BeQJ2e6M\4q0V1@5q[Z+?VSo0K;6*4>UD*@Qkns2e=]u4q0V1@5qa\+?VSo0f;-(4>UD*A3M+u2e=`u4q0V1@5qg^+?VSo1cIT-4>UD*Aj.>"2e=m&4q0V1@6$#*+?VSo2J#&]4>UD+0g6^B2e=p(4q0V1@6$),+?VSo3+P2^4>UD+1HlpD2e>!(4q0V1@6$/.+?VSo3B0234>UD+2*N-F2eFm''4q0V1@6$50+?VSp1hJo\4>UD+3BeQJ2eFs&4q0V1@6%a[+?VSp3AE],4>UD+@Qkns2eHN24q0V1@6%g]+?VSp@q@h54>UD+A3M+u2eHT44q0V1@6%m_+?VSpAMlX\4>UD+Aj.>"2eHW24q0V1@::oT+?VSpAmmk44>UDS1HlpD3&!$t4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QFT@5L.j4?,#L0g6%/1LX]L4s2sI0JPCJ%6QFT@5^:l4?,#M1d2@21LX]N4s2sI0JYOM%6QFT@5pFn4?,#N@6P,_1LX]P4s2sI0Jd3&%6QFT@:;>B4?,#Q0Koq.1LX^$4s2sI0K1^M%6QFT@:MJD4?,#R2*MI31LX^&4s2sI0KE].%6QFT@:_VF4?,$''2EhR41LX^(4s2sI0O\ES%6QFT@PU+i4?,&M2EhR41LX`K4s2sI0ekXO%6QFT@Pg7k4?,&O@6P,_1LX`M4s2sI0f3<&%6QFT@Q$Cm4?,&P@m1>a1LX`O4s2sI0fUmO%6QFT@Q6Oo4?,&T1d2@21LX`Q4s2sI0k)t''%6QFT@UVGC4?,''*Aj-Yd1LXa%4s2sI0kNF0%6QFT@UhSE4?,)M1Hl711LXa''4s2sI1,:RJ%6QFT@V%_G4?,)P1-Q.01LXa)4s2sI1,CaN%6QFT@k^(h4?,)Q2EhR41LXcJ4s2sI1,NH(%6QFT@kp4j4?,)QAj-Yd1LXcL4s2sI1,ri/%6QFT@l-@l4?,*)ANgPc1LXcN4s2sI11E1+%6QFT@l?Ln4?,**ANgPc1LXcP4s2sI11N4+%6QFT@lQXp4?,*.ANgPc1LXcR4s2sI1GgmO%6QFT@pqPD4?,,S0g6%/1LXd&4s2sI1Gq$R%6QFT@q.\F4?,,V2EhR41LXd(4s2sI1H8o/%6QFT@q@hH4?,,W1-Q.01LXd*4s2sI1H@EY%6QFTA2$1i4?,-*3Bdm71LXfM4s2sI1M''uY%6QFTA2HIm4?,/OAj-Yd1LXfO4s2sI1bg^K%6QFTA2ZUo4?,/S@6P,_1LXfQ4s2sI1cI<V%6QFTA2laq4?,0+3''Id61LXfS4s2sI1gsu[%6QFTA77YE4?,0-0Koq.1LXg''4s2sI1h/:)%6QFTA7IeG4?,000Koq.1LXg)4s2sI1hL8^%6QFTA7[qI4?,2P@m1>a1LXg+4s2sI2)@''Q%6QFTAM?:j4?,2UANgPc1LXiL4s2sI2)o23%6QFTAMQFl4?,3-2a.[51LXiN4s2sI2.L2]%6QFTAMcRn4?,3,A3LGb1LXiP4s2sI2DHsN%6QFTAMu^p4?,5S3Bdm71LXiR4s2sI2Dm6R%6QFTAN2jr4?,5W1Hl711LXiT4s2sI2E#&/%6QFTARRbF4?,5WAj-Yd1LXj(4s2sI2E,&.%6QFTARdnH4?,5YA3LGb1LXj*4s2sI2E<KU%6QFTAS"%J4?,5Z3''Id61LXlM4s2sI2J-A]%6QFTAhlOm4?,62A3LGb1LXlO4s2sI2_\])%6QFTAi)[o4?,8S1Hl711LXlQ4s2sI2_d<V%6QFTAi;gq4?,8SANgPc1LXlS4s2sI2_m?V%6QFTAiMss4?,8UANgPc1LXlU4s2sI2`EHT%6QFTAmmkG4?,8Z3''Id61LXm)4s2sI2`Wl^%6QFTAn=.K4?,9/2*MI31LXm-4s2sI2e4g1%6QFU0JG[54?,92@Qk5`1L`$m4s2sI2e?M`%6QFU0JYg74?,;S0g6%/1L`$o4s2sI3&!-P%6QFU0Jks94?,;S2EhR41L`$q4s2sI3&"f*%6QFU0K)*;4?,;T1d2@21L`$s4s2sI3&+o,%6QFU0K;6=4?,;X2EhR41L`$u4s2sI3&P;3%6QFU0O[-f4?,;Y1d2@21L`%I4s2sI3&rr^%6QFU0Om9h4?,</@6P,_1L`%M4s2sI3+HA\%6QFU0ebd64?,<21-Q.01L`''n4s2sI3+QJ^%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>UG$1d3$E3&rZN4q0V1@PKi++?VVD1,hB+4>UG$3BeQJ3&rcK4q0V1@PM:T+?VVD1M&`Z4>UG$@Qkns3&rp,4q0V1@PM@V+?VVDA2HIZ4>UG$A3M+u3&tM-4q0V1@PMFX+?VVDAMlX\4>UG$Aj.>"3&tS*4q0V1@PTW$+?VVl0K20)4>UG%0g6^B3+4LQ4q0V1@PT]&+?VVl0f;-(4>UG%1HlpD3+4Qt4q0V1@PTc(+?VVl1hAi[4>UG%2*N-F3+4aX4q0V1@PTi*+?VVlAi)[\4>UG%2a/?H3+=US4q0V1@PTo,+?VVm1H.K,4>UG%@Qkns3+=a%4q0V1@PVFW+?VVm3Fb5^4>UG%A3M+u3+=mZ4q0V1@PVLY+?VVn1cIT-4>UG%Aj.>"3+Fg&4q0V1@P]]%+?VVn2`!W,4>UG&0g6^B3+HAR4q0V1@P]c''+?VVnA2ug_4>UG&1HlpD3+HMS4q0V1@P]i)+?VVnAiMs`4>UG&2*N-F3+HQ34q0V1@P]o++?VVo0k*<U4>UG&2a/?H3+Op-4q0V1@P]u-+?VVo2Ieo[4>UG&3BeQJ3+P!*4q0V1@P_FV+?VVo3+P2^4>UG&@Qkns3+P$,4q0V1@P_LX+?VVo@5^:Y4>UG&A3M+u3+QMW4q0V1@P_RZ+?VVo@q@h54>UG&Aj.>"3+QSW4q0V1@Pfc&+?VVoARdn54>UG''0g6^B3+Xj!4q0V1@Pfi(+?VVp1h&WX4>UG''1HlpD3+Y!X4q0V1@Pfo*+?VVp2_[E)4>UG''2*N-F3+Y$W4q0V1@Pfu,+?VVp3ANc-4>UG''2a/?H3+ZN04q0V1@Pg&.+?VVp@P^1W4>UG''3BeQJ3+ZVT4q0V1@PhLW+?VVpA2HIZ4>UG''@Qkns3+Z\^4q0V1@PhRY+?VVq0fM9*4>UG''A3M+u3+as)4q0V1@PhX[+?VVq@5^:Y4>UG(0g6^B3+cYY4q0V1@Poo)+?VVqAM?:W4>UG(1HlpD3+c_Y4q0V1@Pou++?VVqAi;g^4>UG(2*N-F3A<-B4q0V1@Pp&-+?VY<11NKW4>UG(2a/?H3A<9H4q0V1@Pp,/+?VY<3&j)24>UG(3BeQJ3A<HN4q0V1@PqRX+?VY<3B9844>UG(@Qkns3A<I&4q0V1@PqXZ+?VY<@5:"U4>UG(A3M+u3A=o!4q0V1@Pq^\+?VY<A2c[]4>UG(Aj.>"3A=uS4q0V1@Q#o(+?VY<Ai)[\4>UG)0g6^B3AE6I4q0V1@Q#u*+?VY=0k3BV4>UG)1HlpD3AE<E4q0V1@Q$&,+?VY=1LWHV4>UG)2*N-F3AE=#4q0V1@Q$,.+?VY=1cRZ.4>UG)2a/?H3AEC#4q0V1@Q$20+?VY=2DIB)4>UG)3BeQJ3AEEK4q0V1@Q%XY+?VY=3+Y8_4>UG)@Qkns3AEO*4q0V1@Q%^[+?VY=@5pF[4>UG)Aj.>"3AFtu4q0V1@Q,u)+?VY=@UhS24>UG*0g6^B3AG,"4q0V1@Q-&++?VY=AiDm_4>UG*1HlpD3AG,T4q0V1@Q-,-+?VY>0K20)4>UG*2*N-F3AN?L4q0V1@Q-2/+?VY>1G_3(4>UG*2a/?H3ANBM4q0V1@Q-81+?VY>1c%<)4>UG*3BeQJ3ANEM4q0V1@Q.^Z+?VY>1hJo\4>UG*@Qkns3ANKH4q0V1@Q.d\+?VY>@kp4W4>UG*Aj.>"3AP,W4q0V1@Q6&*+?VY?0P!?V4>UG+0g6^B3AWBI4q0V1@Q6,,+?VY?0kNTYASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1L`="4s2sJ1GUmQ%6QFU3&EfA4?52S2a.[51L`=$4s2sJ1GppO%6QFU3&WrC4?52U2*MI31L`=&4s2sJ1H&Z*%6QFU3&j)E4?52UA3LGb1L`=(4s2sJ1HAo.%6QFU3+4un4?53,@6P,_1L`=Q4s2sJ1LW:-%6QFU3+G,p4?53-0g6%/1L`=S4s2sJ1LjiW%6QFU3+Y8r4?53/1-Q.01L`=U4s2sJ1M1&Z%6QFU3A<W>4?530A3LGb1L`@!4s2sJ1b`N*%6QFU3ANc@4?55S1d2@21L`@#4s2sJ1c&`-%6QFU3A`oB4?55U2*MI31L`@%4s2sJ1cAf,%6QFU3As&D4?55W1-Q.01L`@''4s2sJ2)dKY%6QFU3B02F4?59-2EhR41L`@)4s2sJ2.8L/%6QFU3FP)o4?59-@Qk5`1L`@R4s2sJ2.AC+%6QFU3Fb5q4?59.A3LGb1L`@T4s2sJ2.U,Z%6QFU3FtAs4?5;SA3LGb1L`@V4s2sJ2Dd-P%6QFU@5''kf4?5;W3''Id61LacI4s2sJ2E3NW%6QFU@5:"h4?5<.1d2@21LacK4s2sJ2ISU0%6QFU@5L.j4?5<11-Q.01LacM4s2su3&bDZA7dY^%6QFU@5^:l4?5<1ANgPc1LacO4s2sJ2J"m4%6QFU@5pFn4?5<30g6%/1LacQ4s2sJ2_[!N%6QFU@:;>B4?5>S3Bdm71Lad%4s2sJ2`5#-%6QFU@:MJD4?5>Y1Hl711Lad''4s2sJ2`>52%6QFU@:_VF4?5>Z1Hl711Lad)4s2sJ2`Y;1%6QFU@PBtg4?5?/1-Q.01LafL4s2sJ2e4p4%6QFU@Pg7k4?5?2ANgPc1LafN4s2sJ2eFm1%6QFU@Q$Cm4?5AT@6P,_1LafP4s2sJ3&"o-%6QFU@Q6Oo4?5AUANgPc1LafR4s2sJ3&39R%6QFU@UVGC4?5AV@Qk5`1Lag&4s2sJ3&>,0%6QFU@V%_G4?5AY3Bdm71Lag*4s2sJ3&Y81%6QFU@k^(h4?5B13''Id61LaiK4s2sJ3+?;[%6QFU@kp4j4?5B1Aj-Yd1LaiM4s2sJ3+Fp3%6QFU@l-@l4?5B42*MI31LaiQ4s2sJ3A`ER%6QFU@lQXp4?5DYA3LGb1LaiS4s2sJ3Ak;1%6QFU@pqPD4?5DZAj-Yd1Laj''4s2sJ3FX^,%6QFU@q@hH4?5E33Bdm71Laj+4s2sJ@5''H#%6QFUA2$1i4?6h)2EhR41LalL4s2sJ@59Z''%6QFUA26=k4?6h*2a.[51LalP4s2sJ@5Bf*%6QFUA2ZUo4?6h+3''Id61LalR4s2sJ@5MCV%6QFUA2laq4?6h-2EhR41Lam(4s2sJ@:hM`%6QFUA7IeG4?6k)1Hl711Lam*4s2sJ@PTW$%6QFUAM?:j4?6k01Hl711LaoM4s2sJ@Q-;2%6QFUAMQFl4?6kZ2a.[51LaoO4s2sJ@Uh,V%6QFUAMcRn4?6k\2a.[51LaoQ4s2sJ@UqD]%6QFUAMu^p4?6k^2a.[51LaoS4s2sJ@V''"4%6QFUAN2jr4?6k_2a.[51LaoU4s2sJ@V0%4%6QFUARRbF4?6k_A3LGb1Lap)4s2sJ@k_@U%6QFUARdnH4?6n,2a.[51Lap+4s2sJ@kqIV%6QFUAS"%J4?6n-2EhR41Lap-4s2sJ@l,o(%6QFUAhZCk4?6n/1Hl711LarN4s2sJ@l?,,%6QFUAhlOm4?6n10Koq.1LarP4s2sJ@lH>1%6QFUAi)[o4?6q+1-Q.YDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e@V.J]+?VYp1bq6(4>UGY2Ei6G3Fjs*4q0V1@V.P_+?VYp2D[N+4>UGY3''JHI3Fk$.4q0V1@V.Va+?VYp2e,#\4>UGY@6Per3Fk''[4q0V1@V0(5+?VYp3+P2^4>UGY@m2"t3FlSR4q0V1@V0.7+?VYp@l$:X4>UGYANh5!3FlVY4q0V1@V049+?VYpA2ZU\4>UJ$0KpUA3FlZ44q0V1@k]W$+?VYpAR[h44>UJ$1-QgC3Fl_Y4q0V1@k]]&+?VYq0f;-(4>UJ$1d3$E3FspU4q0V1@k]c(+?VYq@5L.W4>UJ$2Ei6G3FuVY4q0V1@k]i*+?VYq@:MJ14>UJ$3''JHI3Fub\4q0V1@k]o,+?VYqAS"%74>UJ$@6Per3G(!"4q0V1@k_@U+?VYr0etp%4>UJ$@m2"t3G(!)4q0V1@k_FW+?VYr0f_E,4>UJ$ANh5!3G($Y4q0V1@k_LY+?VYr1H.K,4>UJ%0KpUA3G(''-4q0V1@kf]%+?VYr1bh0''4>UJ%1-QgC3G(**4q0V1@kfc''+?VYr2)d].4>UJ%1d3$E3G(0/4q0V1@kfi)+?VYr2_dK*4>UJ%2Ei6G3G(3-4q0V1@kfo++?VYr3A<W+4>UJ%3''JHI3G(9.4q0V1@kfu-+?VYr@5:"U4>UJ%@6Per1hAHs4q0V1@khFV+?VG:0Ju$''4>UJ%@m2"tA2lMZA7I;M4q0V1@khLX+?VM>1,(m$4>UJ%ANh5!2.^9,4q0V1@khRZ+?VDj3Aiu04>UJ&0KpUA2DAPr4q0V1@koc&+?X0o1h:-.1LWHV4>UJ&1-QgC2I\Eu4q0V1@koi(+?VPoAiW$a4>UJ&1d3$E2J$GX4q0V1@koo*+?VS;@P^1W4>UJ&2Ei6G11alN4q0V1@kou,+?VSk@l?L[4>UJ&3''JHI2eFs&4q0V1@kp&.+?VV;2_dK*4>UJ&@6Per3&!@(4q0V1@kqLW+?VDj@q.\34>UJ&@m2"t3AG,U4q0V1@kqRY+?VMl@PU+V4>UJ&ANh5!3B(J[4q0V1@kqX[+?VJmA2?CY4>UJ''0KpUA2)&Q$4q0V1@l#i''+?VM8AhZCX4>UJ''1-QgC2)/Ss4q0V1@l#o)+?VM>2`<i/4>UJ''1d3$E2ISI"4q0V1@l#u++?VPm0JPa#4>UJ''2Ei6G2Ip>P4q0V1@l$&-+?VPn1bq6(4>UJ''3''JHI2J$DZ4q0V1@l$,/+?VS=AMcR[4>UJ''@6Per2`*9E4q0V1@l%RX+?VS?2Ieo[4>UJ''@m2"t2`NZL4q0V1@l%XZ+?VVBAi2a]4>UJ''ANh5!A2lDUA7fFb4q0V1@l%^\+?VS=@5pF[4>UJ(0KpUA1LXlO4q0V1@l,o(+?VG:A7@_34>UJ(1-QgC1c-mr4q0V1@l,u*+?VGk3+4u[4>UJ(1d3$EA2lDVA7T1,4q0V1@l-&,+?X7JAn4(74>UJ(2Ei6G1h(#U4q0V1@l-,.+?X7JAn4(74>UJ(3''JHI1M(**4q0V1@l-20+?VGh1,;$&4>UJ(@6PerAnGXc4q0V1@l.XY+?VJ<2dnlZ4>UJ(@m2"t1b^pG4q0V1@l.^[+?X0o2E,/X1LrZY4>UJ(ANh5!1c@6L4q0V1@l.d]+?VJ80Jbm%4>UJ)0KpUA1bq''I4q0V1@l5u)+?VJ=@:_V34>UJ)1-QgC1Gh''N4q0V1@l6&++?X0o1c])X0KD<+4>UJ)2a/?HAiM_X4q0V1@l650+?X6q2eG5_4>UJ)A3M+u1GCL=4q0V1@l7g]+?VG60K)*(4>UJ)Aj.>"1GEEN4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QFV2D@<;4>JZM0Koq.1Li=!4s2sC1,3?(%6QFV2DdT?4>JZJ1d2@21Li=#4s2sC0ebCI%6QFV2E!`A4>S[''Aj-Yd1Li=%4s2sD0KE`/%6QFV2E3lC4>JZG3''Id61Li=''4s2sC1,*0$%6QFV2J#&p4>JZI@6P,_1Li=T4s2sC1,:jR%6QFV2`*]@4>JZG3Bdm71Li@$4s2sC1,(RL%6QFV2dnlm4>JX%1-Q.01Li@Q4s2sC0k<+)%6QFV2e,#o4>JZG0Koq.1Li@S4s2sC1,(LJ%6QFV3&<`@4>JZI0Koq.1LiC$4s2sC11<%(%6QFV3&NlB4>JZG1-Q.01LiC&4s2sC1,(XN%6QFV3&a#D4>JZM0g6%/1LiC(4s2sC1,UgN%6QFV3+>&o4>JZH@6P,_1LiCS4s2sC1,EH)%6QFV3+P2q4>JZHA3LGb1LiCU4s2sC1,CdO%6QFV3AE]?4>JZM1-Q.01LiF#4s2sC1,LdN%6QFV3AWiA4>JZK2*MI31LiF%4s2sC1,LsS%6QFV3B'',E4>JWO1d2@21LiF)4s2sC1,1RK%6QFV3B98G4>JWI2*MI31LiFR4s2sC0ed3''%6QFV3FY/p4>JWH2a.[51LiFT4s2sD0OZY!%6QFVAhuUn4>SZJ@P]\u@6P,_1Lk#R4s2sD0Jm;r0KEQ*%6QFVAi2ap4>SZJAhu,$@6P,_1Lk#T4s2sD0JtR@0KEQ*%6QFVAiDmr4>SZK1G^^F@6P,_1Lr=R4s2sD0O\EH0KEQ*%6QFW1hJoo4>S["A2>o"@6P,_1Lr?s4s2sD0O\QL0KEQ*%6QFW2).9;4>S[#0f(LD@6P,_1Lr?u4s2sD0Ocgo0KEQ*%6QFW2)@E=4>S[#@P]\u@6P,_1Lr@"4s2sD0Olpq0KEQ*%6QFW2)RQ?4>S[$3&<6K@6P,_1LrBt4s2sD0kN@#0KEQ*%6QFW2I\im4>SZK1Hl711LrCR4s2sD0Och%%6QFW2J,,q4>JWK2*MI31LrEu4s2sC1GLjQ%6QFW2`3cA4>8L#2EhR41LrF&4s2sA0k<7-%6QFW2`EoC4>8L#@6P,_1LrF(4s2sA0k=cX%6QFW2`X&E4>8KD1d2@21LrFQ4s2sA11W@.%6QFW2e"rn4>8KGA3LGb1LrFS4s2sA0f<B''%6QFW2e5)p4>8KIANgPc1LrFU4s2sA0fCjP%6QFW2eG5r4>8KK3Bdm71LrI!4s2sA0fNQ*%6QFW3&*T>4>8KD2*MI31LrI#4s2sA11XiX%6QFW3&<`@4>8KGANgPc1LrI%4s2sA0f<E(%6QFW3&NlB4>8O#2a.[51LrI''4s2sA0f<Q,%6QFW3&a#D4>8KJ2*MI31LrI)4s2sA0fNN)%6QFW3&s/F4>8O$A3LGb1LrIR4s2sA0fNT+%6QFW3+>&o4>8KI1d2@21LrIT4s2sA0eb@H%6QFW3+P2q4>8KG3Bdm71LrIV4s2sA0ebLL%6QFW3+b>s4>8KD@m1>a1LrL"4s2sA0ekXO%6QFW3AE]?4>8KDANgPc1LrL$4s2sA0f1[M%6QFW3AWiA4>8KH2a.[51LrL&4s2sA0f:XK%6QFW3AiuC4>8KI3''Id61LrL(4s2sA0fLdM%6QFW3B'',E4>8KJ1-Q.01LrL*4s2sA0f:gP%6QFW3B98G4>8KD1Hl711LrLS4s2sA0f*6%%6QFW3FY/p4>8KD2a.[51LrLU4s2sA0ed-%%6QFW3Fk;r4>8KE3Bdm71LrLW4s2sA0ed3''%6QFW3G(Gt4>8KE0g6%/1LsoJ4s2sA0f1^N%6QFW@50qg4>8KH3''Id61LsoL4s2sA0f:[L%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>UMV1HlpD0JPFF4q0V1A77;Y+?V>42_dK*4>UMV2*N-F0JPIA4q0V1A77A[+?V>5A2ug_4>UMV2a/?H0JP7@4q0V1A77G]+?V>40k3BV4>UMV3BeQJ0JP=>4q0V1A78n1+?V>41Gh9)4>UMV@Qkns0JPFp4q0V1A78t3+?V>42Ieo[4>UMVA3M+u0JP7A4q0V1A79%5+?V>40k<HW4>UMVAj.>"0JP=?4q0V1A7@5V+?V>41Gq?*4>UMW0g6^B0JPFq4q0V1A7@;X+?V>42Inu\4>UMW1HlpD0JYRA4q0V1A7@AZ+?V>53+>&\4>UMW2*N-F0JYRu4q0V1A7@G\+?V>52Ieo[4>UMW2a/?H0JYOt4q0V1A7@M^+?V>52`X&24>UMW3BeQJ0JYUI4q0V1A7At2+?V>52)[W-4>UMW@Qkns0JYRC4q0V1A7B%4+?V>52e5)]4>UMWA3M+u0JYUC4q0V1A7B+6+?V>53A<W+4>UMWAj.>"0JYRr4q0V1A7I;W+?V>52Inu\4>UMX0g6^B0JYLt4q0V1A7IAY+?V>52_mQ+4>UMX1HlpD0JYY!4q0V1A7IG[+?V>53+Y8_4>UMX2*N-F0JYO@4q0V1A7IM]+?V>52_[E)4>UMX2a/?H0JYUB4q0V1A7IS_+?V>41,hB+4>UMX3BeQJ0JYXG4q0V1A7K%3+?V>53A`o/4>UMX@Qkns0JYOE4q0V1A7K+5+?V>53B0234>UMXA3M+u0JR&m4q0V1A7K17+?V>52)@E*4>UMXAj.>"0JYLE4q0V1A7RAX+?V>53&Ef.4>UMY0g6^B0JYO?4q0V1A7RGZ+?V>43AWi.4>UMY1HlpD0JYOG4q0V1A7RM\+?V>53&s/34>UMY2*N-F0JYLF4q0V1A7RS^+?V>52.JfZ4>UMY2a/?H0JYLs4q0V1A7RY`+?V>52)%3''4>UMY3BeQJ0JYOu4q0V1A7T+4+?V>53+4u[4>UMY@Qkns0JYOC4q0V1A7T16+?V>52)7?)4>UMYA3M+u0JYUu4q0V1A7T78+?V>52DmZ-4>UMYAj.>"0J[&l4q0V1A7[GY+?V>5@50qT4>UMZ0g6^B0JYLC4q0V1A7[M[+?V>53AE],4>UMZ1HlpD0JYRq4q0V1A7[S]+?V>52E*f/4>UMZ2*N-F0JbUA4q0V1A7[Y_+?V>5@lQX]4>UMZ2a/?H0J[-J4q0V1A7[_a+?V>5A2-7W4>UMZ3BeQJ1,(Lr4q0V1A7]15+?V>60P3KX4>UM[0KpUA0J[3"0J[2s4q0V1A7dP[+?V>5AMl.sAN;p`4>UM[1-QgC0JbIA4q0V1A7dV]+?V>611NKW4>UM[1d3$E0JbLF4q0V1A7d\_+?V>60k3BV4>UM[3''JHI0JbLq4q0V1A7dhc+?V>61-%N-4>UM[@6Per0JbIr4q0V1A7f:7+?V>5A7[q64>UM[@m2"t0JbI@4q0V1A7f@9+?V>61GD!%4>UM[ANh5!0JbLp4q0V1A7fF;+?V>61Gh9)4>UP&1d3$E0JbIm4q0V1AM?&,+?V>60k!6T4>UP&3''JHI1,:Ur4q0V1AM?,.+?VD70kNTY4>UP&@6Per1,<<N4q0V1AM@XY+?V>52IScY4>UP&ANh5!0JYRD4q0V1AM@^[+?V>52`<i/4>UP''0KpUA0JYRH4q0V1AMGo''+?V>53&!N*4>UP''1-QgC0JYV"4q0V1AMGu)+?V>53B9844>UP''1d3$E0JYXu4q0V1AMH&++?V>53G(GaASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1M&:!4s2sA11Dq$%6QFX0fM9=4>8O"1-Q.01M&:#4s2sA11E1+%6QFX0f_E?4>8O#0g6%/1M&:N4s2sC1,*-#%6QFX0k<Hj4>JZH0g6%/1M&:P4s2sC1,<B(%6QFX1,1s84>JZP3''Id61M&<s4s2sC1-&o0%6QFX1,D*:4>J[#0Koq.1M&<u4s2sA0K*K+%6QFX1,V6<4>8R#1-Q.01M&="4s2sA1L`=-%6QFX1,hB>4>8R$2a.[51M&=$4s2sC0et[O%6QFX1-%N@4>S["0Koq.1M&=M4s2sC0f:gP%6QFX11i]m4>8L#2EhR41M&?r4s2sA0k<7-%6QFX1GM''94>8L#@6P,_1M&?t4s2sA0k=cX%6QFX1G_3;4>8KD1d2@21M&@!4s2sA0f*?(%6QFX1Gq?=4>8KI@6P,_1M&@#4s2sA0f<N+%6QFX1H.K?4>8KJ1d2@21M&@%4s2sA0fM*V%6QFX1H@WA4>8KK@Qk5`1M&@N4s2sA0ebIK%6QFX1L`Nj4>8KGANgPc1M&@P4s2sA0f<E(%6QFX1LrZl4>8KIAj-Yd1M&@R4s2sA0fCmQ%6QFX1M/fn4>8KK@6P,_1M&Bs4s2sA0fNT+%6QFX1bh0:4>8KI1d2@21M&Bu4s2sA0eb@H%6QFX1c%<<4>8KG3Bdm71M&C"4s2sA0ebLL%6QFX1c7H>4>8KD@m1>a1M&C$4s2sA0ekXO%6QFX1cIT@4>8KDANgPc1M&C&4s2sA0f1[M%6QFX1c[`B4>8KH2a.[51M&CO4s2sA0f:XK%6QFX1h&Wk4>8KI3''Id61M&CQ4s2sA0fLdM%6QFX1h8cm4>8KJ1-Q.01M&CS4s2sA0f:gP%6QFX1hJoo4>8KD1Hl711M&Et4s2sA0f*6%%6QFX2).9;4>8KD2a.[51M&F!4s2sA0ed-%%6QFX2)@E=4>8KE3Bdm71M&F#4s2sA0ed3''%6QFX2)RQ?4>8KE0g6%/1M&F%4s2sA0f1^N%6QFX2)d]A4>8KH3''Id61M&F''4s2sA0f:[L%6QFX2*!iC4>8KI3Bdm71M&FP4s2sA0fLgN%6QFX2.A`l4>8KJ1Hl711M&FR4s2sA0ebRN%6QFX2.Sln4>8KE@m1>a1M&FT4s2sA0etRL%6QFX2.f#p4>8KG1d2@21M&Hu4s2sA0f<H)%6QFX2DIB<4>8KJ@m1>a1M&I"4s2sA0ebUO%6QFX2D[N>4>8KEA3LGb1M&I$4s2sA0etUM%6QFX2DmZ@4>8KG2*MI31M&I&4s2sA0f<K*%6QFX2E*fB4>8KJA3LGb1M&IS4s2sD0JG:H%6QFX2Inuo4>SZF2EhR41M&IU4s2sD0P4fY%6QFX2J,,q4>S[''Aj-Yd1M&L!4s2sD0KE`/%6QFX@lHRo4>SZJ@P]\u@6P,_1M(&U4s2sD0Jm;r0KEQ*%6QFX@lZ^q4>SZJAhu,$@6P,_1M('')4s2sD0JtR@0KEQ*%6QFX@q%VE4>SZK1G^^F@6P,_1M/Bt4s2sD0O\EH0KEQ*%6QFY1,D*:4>S["A2>o"@6P,_1M/C!4s2sD0O\QL0KEQ*%6QFY1,V6<4>S[#0f(LD@6P,_1M/C#4s2sD0Ocgo0KEQ*%6QFY1,hB>4>S[#@P]\u@6P,_1M/C%4s2sD0Olpq0KEQ*%6QFY1-%N@4>S[$3&<6K@6P,_1M/F"4s2sD0kN@#0KEQ*%6QFY1M/fn4>SZK1Hl711M/Ht4s2sD0Och%%6QFY1bh0:4>S[''A3LGb1M/I!4s2sD0Jd3&%6QFY1c%<<4>S[''Aj-Yd1M/I#4s2sC1,:^N%6QFY1cIT@4>JfQANgQ7DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,eAi)J2+?VD;2I\iZ4>US+@Qkns1-&fU4q0V1Ai+!]+?VD61,hB+4>US+A3M+u1GE5k4q0V1Ai+''_+?VD50f)!&4>US,0g6^B1GCXp1GCgt4q0V1Ai2>-+?VG61h8Br3FP)\4>US,1HlpD1GCXt1GCgt4q0V1Ai2D/+?VG62)-m@3FP)\4>US,2*N-F1GC[B1GCgt4q0V1Ai2J1+?VG6@:D#H3FP)\4>US,2a/?H1GE6J1GCgt4q0V1Ai2P3+?VG6@:h;L3FP)\4>US,3BeQJ1GE8m1GCgt4q0V1Ai4!\+?VG6@P]eo3FP)\4>US,@Qkns1GE9I1GCgt4q0V1Ai4''^+?VG6@l,tq3FP)\4>US,A3M+u1GE;u1GCgt4q0V1Ai4-`+?V>6@kp4W4>US-@Qkns1,WMq4q0V1AiDV3+?VG7AiDM"3FP)\4>US/@m2"t1,(Lq4q0V1AiO<b+?X7J1M/f[4>US/ANh5!1,gpD4q0V1AiOBd+?VD80fV?+4>US00KpUA1,LaB4q0V1AiVS0+?VD8@q@h54>US03''JHI0JHol4q0V1AiVk8+?VD52).9(4>US0@6Per1,(O?4q0V1Amo.4+?VD70KD<+4>USX@m2"t1,:UC4q0V1Amo46+?VD71c7H+4>USXANh5!1,:[G4q0V1Amo:8+?VD72DRH*4>USZ3''JHI1,*6L4q0V1An,:6+?VG6@5''kS4>USZ@m2"t1,(F=4q0V1An3ha+?VG7AiDM"3FP)\4>US\0KpUA1GCXp1GCgt4q0V1An<\\+?VG61h8Br3FP)\4>US\1-QgC1GCXt1GCgt4q0V1An<b^+?VG62)-m@3FP)\4>US\1d3$E1GC[B1GCgt4q0V1An<h`+?VG6@:D#H3FP)\4>US\2Ei6G1GE6J1GCgt4q0V1An<nb+?VG6@:h;L3FP)\4>US\3''JHI1GE8m1GCgt4q0V1An<td+?VG6@P]eo3FP)\4>US\@6Per1GE9I1GCgt4q0V1An>F8+?VG6@l,tq3FP)\4>US\@m2"t1GE;u1GCgt4q0V1AnEtc+?VG7AiDM"3FP)\4>US]ANh5!1GCXp1GCgt4q0V1AnGX=+?VG61h8Br3FP)\4>\`G0KpUA1GCXt1GCgt4q0V20JG4F+?VG62)-m@3FP)\4>\`G1-QgC1GC[B1GCgt4q0V20JG:H+?VG6@:D#H3FP)\4>\`G1d3$E1GE6J1GCgt4q0V20JG@J+?VG6@:h;L3FP)\4>\`G2Ei6G1GE8m1GCgt4q0V20JGFL+?VG6@P]eo3FP)\4>\`G3''JHI1GE9I1GCgt4q0V20JGLN+?VG6@l,tq3FP)\4>\`G@6Per1GE;u1GCgt4q0V20JPFK+?VG7AiDM"3FP)\4>\`H@m2"t1-&fU4q0V20JR*%+?VD:AMu^]4>\`HANh5!1GCXp1GCgt4q0V20JR0''+?VG61h8Br3FP)\4>\`I0KpUA1GCXt1GCgt4q0V20JY@H+?VG62)-m@3FP)\4>\`I1-QgC1GC[B1GCgt4q0V20JYFJ+?VG6@:D#H3FP)\4>\`I1d3$E1GE6J1GCgt4q0V20JYLL+?VG6@:h;L3FP)\4>\`I2Ei6G1GE8m1GCgt4q0V20JYRN+?VG6@P]eo3FP)\4>\`I3''JHI1GE9I1GCgt4q0V20JYXP+?VG6@l,tq3FP)\4>\`I@6Per1GE;u1GCgt4q0V20JbRM+?VG7AiDM"3FP)\4>\`K0KpUA1GC[B4q0V20JkLJ+?VG6@P^1W4>\`K@m2"t1GNK#1GCgt4q0V20JtXM+?VG62)@E*4>\`L1d3$E1GE8o4q0V20Jt^O+?VD72D@<(4>\`L3''JHI1,:Rq4q0V20JtjS+?VD71Gh9)4>\`L@6Per1,1I=4q0V20K!<''+?VD70K;6*4>\`L@m2"t1,:Om4q0V20K(XL+?VD711<?U4>\`M1-QgC1,:UF4q0V20K(jR+?VD70KD<+4>\`M3''JHI1,:O@4q0V20K*H*+?VD6A26=X4>\`MANh5!1,3;r4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI$2J,,q4>JZG0Koq.1b^jB4s2sC1,(LJ%6QI$2`<iB4>JZI0Koq.1b^jI4s2sC11<%(%6QI$2`NuD4>JZG1-Q.01b^jK4s2sC1,(XN%6QI$2dnlm4>JZM0g6%/1b^jt4s2sC1,UgN%6QI$2e>/q4>JZH@6P,_1b^k#4s2sC1,EH)%6QI$3&!N=4>JZHA3LGb1b^mD4s2sC1,CdO%6QI$3&EfA4>JZM1-Q.01b^mH4s2sC1,LdN%6QI$3&WrC4>JZK2*MI31b^mJ4s2sC1,LsS%6QI$3+4un4>JWO1d2@21b^mu4s2sC1,1RK%6QI$3+G,p4>JWI2*MI31b^n"4s2sC0ed3''%6QI$3+Y8r4>JWH2a.[51b^n$4s2sD0OZY!%6QI$3ANc@4>JWK2*MI31b^pG4s2sC1GLjQ%6QI$3B02F4>8L#2EhR41b^pM4s2sA0k<7-%6QI$3FP)o4>8L#@6P,_1b^q!4s2sA0k=cX%6QI$3Fb5q4>8KD1d2@21b^q#4s2sA11W@.%6QI$3FtAs4>8KGA3LGb1b^q%4s2sA0f<B''%6QI$@5''kf4>8KIANgPc1b`>m4s2sA0fCjP%6QI$@5:"h4>8KK3Bdm71b`>o4s2sA0fNQ*%6QI$@5L.j4>8KD2*MI31b`>q4s2sA11XiX%6QI$@5^:l4>8KGANgPc1b`>s4s2sA0f<E(%6QI$@5pFn4>8O#2a.[51b`>u4s2sA0f<Q,%6QI$@:;>B4>8KJ2*MI31b`?I4s2sA0fNN)%6QI$@:MJD4>8O$A3LGb1b`?K4s2sA0fNT+%6QI$@:_VF4>8KI1d2@21b`?M4s2sA0eb@H%6QI$@PBtg4>8KG3Bdm71b`An4s2sA0ebLL%6QI$@PU+i4>8KD@m1>a1b`Ap4s2sA0ekXO%6QI$@Pg7k4>8KDANgPc1b`Ar4s2sA0f1[M%6QI$@Q$Cm4>8KH2a.[51b`At4s2sA0f:XK%6QI$@Q6Oo4>8KI3''Id61b`B!4s2sA0fLdM%6QI$@UVGC4>8KJ1-Q.01b`BJ4s2sA0f:gP%6QI$@UhSE4>8KD1Hl711b`BL4s2sA0f*6%%6QI$@V%_G4>8KD2a.[51b`BN4s2sA0ed-%%6QI$@k^(h4>8KE3Bdm71b`Do4s2sA0ed3''%6QI$@kp4j4>8KE0g6%/1b`Dq4s2sA0f1^N%6QI$@l-@l4>8KH3''Id61b`Ds4s2sA0f:[L%6QI$@l?Ln4>8KI3Bdm71b`Du4s2sA0fLgN%6QI$@lQXp4>8KJ1Hl711b`E"4s2sA11WC/%6QI$@pqPD4>8KD3''Id61b`EK4s2sA0em0%%6QI$@q.\F4>8KF1d2@21b`EM4s2sA0f(XM%6QI$@q@hH4>8KI@m1>a1b`EO4s2sA0fEN*%6QI$A2$1i4>8KD3Bdm71b`Gp4s2sA0em3&%6QI$A26=k4>8KF2*MI31b`Gr4s2sA0f([N%6QI$A2HIm4>8KIA3LGb1b`Gt4s2sA0fEQ+%6QI$A2ZUo4>8NL0g6%/1b`H!4s2sA1,r`,%6QI$A2laq4>8NLANgPc1b`H#4s2sA1,`W+%6QI$A77YE4>8NKANgPc1b`HL4s2sA1,h3W%6QI$A7IeG4>8NM3''Id61b`HN4s2sA1,UsR%6QI$A7[qI4>8NL1Hl711b`HP4s2sA1,i`-%6QI$AM?:j4>8NM1-Q.01b`Jq4s2sA1-%$P%6QI$AMQFl4>8NL@Qk5`1b`Js4s2sA1,`Z,%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>\a''1d3$E0JYLt4q0V20P*+*+?V>52_mQ+4>\a''2Ei6G0JYY!4q0V20P*1,+?V>53+Y8_4>\a''3''JHI0JYO@4q0V20P*7.+?V>52_[E)4>\a''@6Per0JYUB4q0V20P+]W+?V>41,hB+4>\a''@m2"t0JYXG4q0V20P+cY+?V>53A`o/4>\a''ANh5!0JYOE4q0V20P+i[+?V>53B0234>\a(0KpUA0JR&m4q0V20P3%''+?V>52)@E*4>\a(1-QgC0JYLE4q0V20P3+)+?V>53&Ef.4>\a(1d3$E0JYO?4q0V20P31++?V>43AWi.4>\a(2Ei6G0JYOG4q0V20P37-+?V>53&s/34>\a(3''JHI0JYLF4q0V20P3=/+?V>52.JfZ4>\a(@6Per0JYLs4q0V20P4cX+?V>52)%3''4>\a(@m2"t0JYOu4q0V20P4iZ+?V>53+4u[4>\a(ANh5!0JYOC4q0V20P4o\+?V>52)7?)4>\cH0KpUA0JYUu4q0V20eb=G+?V>52DmZ-4>\cH1-QgC0J[&l4q0V20ebCI+?V>5@50qT4>\cH1d3$E0JYLC4q0V20ebIK+?V>53AE],4>\cH2Ei6G0JYRq4q0V20ebOM+?V>52E*f/4>\cH3''JHI0JbUA4q0V20ebUO+?V>5@lQX]4>\cH@6Per0J[-J4q0V20ed''#+?V>5A2-7W4>\cH@m2"t1,(Lr4q0V20ed-%+?V>60P3KX4>\cI1HlpD0J[3"0J[2s4q0V20ekLK+?V>5AMl.sAN;p`4>\cI2*N-F0JbIA4q0V20ekRM+?V>611NKW4>\cI2a/?H0JbLF4q0V20ekXO+?V>60k3BV4>\cI@Qkns0JbLq4q0V20em0%+?V>61-%N-4>\cIA3M+u0JbIr4q0V20em6''+?V>5A7[q64>\cIAj.>"0JbI@4q0V20etFH+?V>61GD!%4>\cJ0g6^B0JbLp4q0V20etLJ+?V>61Gh9)4>\cJ2a/?H0JbIm4q0V20f!0$+?V>60k!6T4>\cJ@Qkns1,:Ur4q0V20f!6&+?VD70kNTY4>\cJA3M+u1,<<N4q0V20f(LI+?V>52IScY4>\cK0g6^B0JYRD4q0V20f(RK+?V>52`<i/4>\cK1HlpD0JYRH4q0V20f(XM+?V>53&!N*4>\cK2*N-F0JYV"4q0V20f(^O+?V>53B9844>\cK2a/?H0JYXu4q0V20f(dQ+?V>53G(Ga4>\cK3BeQJ0J[)k4q0V20f*6%+?V>5@PU+V4>\cK@Qkns0J[)r4q0V20f*<''+?V>5@k^(U4>\cKAj.>"1,:Ol4q0V20f1RJ+?VD70ekj$4>\cL0g6^B1,:Uq4q0V20f1^N+?VD73B0234>\cL2*N-F1,:k$4q0V20f1dP+?VD7@5''kS4>\cL2a/?H0JGCr4q0V20f1jR+?V>6@PU+V4>\cL3BeQJ0Jd/t4q0V20f3<&+?V>6@lHR\4>\cL@Qkns1,1OC4q0V20f3B(+?VG6@5''kS4>\cLA3M+u1,1XD4q0V20f:^M+?V>4A2ZU\4>\cM1HlpD0JR)t4q0V20f:dO+?V>4A77Y24>\cM2*N-F0JR*J4q0V20f:jQ+?V>40Jks&4>\cM2a/?H0JP@o4q0V20f:pS+?V>42.8ZX4>\cM3BeQJ0JPFr4q0V20f<B''+?V>42DdT,4>\cM@Qkns0JPLH4q0V20f<H)+?V>42e"r[4>\cMA3M+u0JP7=4q0V20f<N++?V>41M&`ZASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1bgk"4s2sA0f<E(%6QI%2D@<;4>8KIAj-Yd1bgmC4s2sA0fCmQ%6QI%2DRH=4>8KK@6P,_1bgmE4s2sA0fNT+%6QI%2DdT?4>8KI1d2@21bgmG4s2sA0eb@H%6QI%2E!`A4>8KG3Bdm71bgmI4s2sA0ebLL%6QI%2E3lC4>8KD@m1>a1bgmK4s2sA0ekXO%6QI%2IScl4>8KDANgPc1bgmt4s2sA0f1[M%6QI%2Ieon4>8KH2a.[51bgn!4s2sA0f:XK%6QI%2J#&p4>8KI3''Id61bgn#4s2sA0fLdM%6QI%2_[E<4>8KJ1-Q.01bgpD4s2sA0f:gP%6QI%2_mQ>4>8KD1Hl711bgpF4s2sA0f*6%%6QI%2`*]@4>8KD2a.[51bgpH4s2sA0ed-%%6QI%2`<iB4>8KE3Bdm71bgpJ4s2sA0ed3''%6QI%2`NuD4>8KE0g6%/1bgpL4s2sA0f1^N%6QI%2dnlm4>8KH3''Id61bgpu4s2sA0f:[L%6QI%2e,#o4>8KI3Bdm71bgq"4s2sA0fLgN%6QI%2e>/q4>8KJ1Hl711bgq$4s2sA0ebRN%6QI%3&!N=4>8KE@m1>a1bgsE4s2sA0etRL%6QI%3&3Z?4>8KG1d2@21bgsG4s2sA0f<H)%6QI%3&EfA4>8KJ@m1>a1bgsI4s2sA0ebUO%6QI%3&WrC4>8KEA3LGb1bgsK4s2sA0etUM%6QI%3&j)E4>8KG2*MI31bgsM4s2sA0f<K*%6QI%3+4un4>8KJA3LGb1bgt!4s2sEAi)J2%6QI%3+G,p4>^Y-Aj-Yd1bgt#4s2sEAi='']%6QI%3+Y8r4>^Y.@m1>a1bgt%4s2sF0JI''%%6QI%3A<W>4>efI3''Id61bh!F4s2sF0JkLJ%6QI%3ANc@4>eg)1-Q.01bh!H4s2sF0Ouk$%6QI%3A`oB4>eiI2EhR41bh!J4s2sF0ebCI%6QI%3As&D4>eiL2*MI31bh!L4s2sF0f:gP%6QI%3B02F4>eiN2a.[51bh!N4s2sD1h&=+%6QI%3FP)o4>ej''@6P,_1bh""4s2sF0kE+(%6QI%3Fb5q4>elO2a.[51bh"$4s2sF11OfX%6QI%3FtAs4>em)2EhR41bh"&4s2sF11juZ%6QI%@5''kf4>eoL@m1>a1biDn4s2sF1H%$Q%6QI%@5:"h4>eoTA3LGb1biDp4s2sF1bgaL%6QI%@5L.j4>erSAj-Yd1biDr4s2sF1cRHY%6QI%@5^:l4>euR0Koq.1biDt4s2sF2)m<S%6QI%@5pFn4>f!)A3LGb1biE!4s2sF2.L2]%6QI%@:;>B4>f#Q@Qk5`1biEJ4s2sF2E>>4%6QI%@:MJD4>f$*3Bdm71biEL4s2sF2I\I+%6QI%@:_VF4>f&V2a.[51biEN4s2sF2`G51%6QI%@PBtg4CgE.1h:2Q@Qk5`1biGo4s2sF2e-G`%6QI%@PU+i4>f''/1d2@21biGq4s2sF3&WTW%6QI%@Pg7k4>f)X3Bdm71biGs4s2su3&EL''@l@m^%6QI%@Q$Cm4>f*/1-Q.01biGu4s2sF3+Xd-%6QI%@Q6Oo4?,5U0g6%/1biH"4s2sF3B1J3%6QI%@UVGC4>f,Z1-Q.01biHK4s2sF3Faj/%6QI%@UhSE4>gP%1Hl711biHM4s2sF@5^&.%6QI%@V%_G4>gP+2a.[51biHO4s2sF@5p)-%6QI%@k^(h4>gPW1d2@21biJp4s2su3&EO(@q&t4%6QI%@kp4j4>gS,A3LH6DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f0k3"''+?VMj3AWi.4>\d&1d3$E2.J?r4q0V20k3()+?X7E1LiTX4>\d&2Ei6GA2lD''A7]4,4q0V20k3.++?VMk2dnlZ4>\d&3''JHI2.JUX4q0V20k34-+?VMk3G(Ga4>\d&@6Per2.L&N4q0V20k4ZV+?VMk@:;>/4>\d&@m2"t2.L/N4q0V20k4`X+?X0o1cJrV1Gh9)4>\d&ANh5!2.SCO4q0V20k4fZ+?VMl1cIT-4>\d''0KpUA2.S[$4q0V20k<"&+?VMl@5L.W4>\d''1-QgC2.U,S4q0V20k<((+?VMl@q%V24>\d''1d3$E2.\XV4q0V20k<.*+?VMmAiW$a4>\d''2Ei6G2.eNr4q0V20k<4,+?VMn0JYg$4>\d''3''JHI2.eU"4q0V20k<:.+?VMn1LrZY4>\d''@6Per2.e^&4q0V20k=`W+?VMn2e5)]4>\d''@m2"t2D?gq4q0V20k=fY+?VP90f2''''4>\d''ANh5!2D?jF4q0V20k=l[+?VP91Gq?*4>\d(0KpUA2D?sH4q0V20kE(''+?VP93Fk;_4>\d(1-QgC2DAYu4q0V20kE.)+?VP9A7Rk54>\d(1d3$E2DHsr4q0V20kE4++?VP:@UhS24>\d(2Ei6G2DJZ$4q0V20kE:-+?VP;1,;$&4>\d(3''JHI2DR-u4q0V20kE@/+?VP;2J,,^4>\d(@6Per2DSf$4q0V20kFfX+?VP<2e,#\4>\d(@m2"t2D\o%4q0V20kFlZ+?VP=2`X&24>\d(ANh5!2Deo#4q0V20kFr\+?VP=A2$1V4>\d)0KpUA2Dm6M4q0V20kN.(+?VP>3Fk;_4>\d)1-QgC2E!@"4q0V20kN4*+?VP?1,;$&4>\d)1d3$E2E!="4q0V20kN:,+?VP?1GD!%4>\d)2Ei6G2E!?I4q0V20kN@.+?VP?1cRZ.4>\d)3''JHIA2lDUA7T1,4q0V20kOlY+?VP?3+P2^4>\d)@m2"t2E##R4q0V20kOr[+?VP?A7@_34>\d)ANh5!2E#,+4q0V20kP#]+?VP@1cIT-4>\fI0KpUA2E*TM4q0V21,(FH+?VP@3AWi.4>\fI1-QgC2E*WU4q0V21,(LJ+?VP@3FY/]4>\fI1d3$E2E,5X4q0V21,(RL+?VPA0k<HW4>\fI2Ei6G2E5,$4q0V21,(XN+?VPB0O[-S4>\fI3''JHI2E<TS4q0V21,(^P+?X0o1h:--@l-@Y4>\fI@6Per2E<TL4q0V21,*0$+?VPB2DdT,4>\fI@m2"t2E>2''4q0V21,*6&+?VPB@qIn64>\fIANh5!1LafO4q0V21,*<(+?VGh@l$:X4>\fJ0KpUA2E>>/4q0V21,1LI+?VPBAi2a]4>\fJ1-QgCA2lDVA7dW04q0V21,1RK+?VPj1L`NW4>\fJ1d3$EA2lDVA7d_U4q0V21,1XM+?VPj3A`o/4>\fJ2Ei6G2IU#O4q0V21,1^O+?VGi0P3KX4>\fJ3''JHI2I\CM4q0V21,1dQ+?VPk11NKW4>\fJ@6Per2I\R''4q0V21,36%+?VPk@6$L\4>\fJ@m2"t2I^**4q0V21,3<''+?VPkA2c[]4>\fJANh5!2I^914q0V21,3B)+?VPl0Ju$''4>\fK0KpUA2Ie[&4q0V21,:RJ+?VPl3B0234>\fK1-QgC2Ig?.4q0V21,:XL+?VPl@l?L[4>\fK1d3$E2InTu4q0V21,:^N+?VPm1H@W.4>\fK2Ei6G2InUU4q0V21,:dP+?VPm2)mc/4>\fK3''JHI2Ing)4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI&1-%N@4>p_Y@6P,_1bpgp4s2sGA7T.5%6QI&11EEi4>p_\A3LGb1bpgr4s2sGAMc5-%6QI&11WQk4>pb.ANgPc1bpgt4s2sGAR[AX%6QI&11i]m4>pb\0g6%/1bpj@4s2sGAhbu''%6QI&1GM''94>pe/3Bdm71bpjB4s2sGAi;A-%6QI&1G_3;4>pe1ANgPc1bpjD4s2sGAiO9a%6QI&1Gq?=4>pe[0Koq.1bpjF4s2sGAn#76%6QI&1H.K?4>pe]2a.[51bpjH4s2sGAn,75%6QI&1H@WA4>pe`0Koq.1bpjq4s2sH0Jm?)%6QI&1L`Nj4?"rQ2*MI31bpjs4s2sH0OZe%%6QI&1LrZl4?"s*1d2@21bpju4s2sH0f!3%%6QI&1M/fn4?"uLANgPc1bpmA4s2sH0f!<(%6QI&1bh0:4?"uP0g6%/1bpmC4s2sH0fD!T%6QI&1c%<<4?"uS2*MI31bpmE4s2sH0fV*U%6QI&1c7H>4?#!(@6P,_1bpmG4s2sH0k3%(%6QI&1cIT@4?##M2*MI31bpmI4s2sDAM[p^%6QI&1c[`B4?##U@Qk5`1bpmr4s2su3&NF$AnEb]%6QI&1h&Wk4?#&O2a.[51bpmt4s2sH1GpjM%6QI&1h8cm4?#&S2EhR41bpn!4s2sH1LW%&%6QI&1hJoo4?#)P@Qk5`1bppB4s2sH1c.*S%6QI&2).9;4?#)T1-Q.01bppD4s2sH1cAl.%6QI&2)@E=4?#**2EhR41bppF4s2sH1grC.%6QI&2)RQ?4?#*,3Bdm71bppH4s2sH1hL>`%6QI&2)d]A4?#,P2a.[51bppJ4s2sDAiDJ/%6QI&2*!iC4?#--ANgPc1bpps4s2sH2D?mM%6QI&2.A`l4?#/P3''Id61bppu4s2sH2E!BU%6QI&2.Sln4?#/X0g6%/1bpq"4s2sH2E>;3%6QI&2.f#p4?#0,@6P,_1bpsC4s2sH2I\R.%6QI&2DIB<4?#0.ANgPc1bpsE4s2sH2InX.%6QI&2D[N>4?#002EhR41bpsG4s2sH2J+[-%6QI&2DmZ@4?#2Q@6P,_1bpsI4s2sH2_d<V%6QI&2E<rD4?#2X@6P,_1bpst4s2sH2`NKT%6QI&2I\im4?#2Z1d2@21bpt!4s2sH2e=[,%6QI&2Inuo4CgE/2.U2VANgPc1bpt#4s2sH3&EET%6QI&2J,,q4?#5XANgPc1bq!D4s2sH3+=R*%6QI&2_dK=4CgE/2.U5OANgPc1bq!F4s2sH3+6>]%6QI&2`!W?4?#8S0Koq.1bq!H4s2sH3AG#-%6QI&2`3cA4?#8UANgPc1bq!J4s2sH3AWKU%6QI&2`EoC4?#8W2EhR41bq!L4s2sH3B&r^%6QI&2`X&E4?#913''Id61bq!u4s2su3&NR(AiDG.%6QI&2e"rn4?#921d2@21bq""4s2sH3Fl\b%6QI&2e5)p4?#93@Qk5`1bq"$4s2sH3Fu_b%6QI&2eG5r4?$\.2*MI31bq$E4s2su3&NU)A7IG[%6QI&3&*T>4?$\YANgPc1bq$G4s2sH@:j%6%6QI&3&<`@4?$_(1-Q.01bq$I4s2sH@PVIX%6QI&3&NlB4?$_*@Qk5`1bq$K4s2sH@Q%g^%6QI&3&a#D4?$b(0g6%/1bq$M4s2sH@l#o)%6QI&3&s/F4CgE/2e6H-0g6%/1bq%!4s2sH@l@j]%6QI&3+>&o4?$b/3Bdm71bq%#4s2sH@lS''a%6QI&3+P2q4?$b11d2@21bq%%4s2sH@pq&T%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>\fQAj.>"2e-AU4q0V21-%$P+?VSn1GM''&4>\fR0g6^B2e4dU4q0V21-%*R+?VSn3&<`-4>\fR1HlpD2e6>T4q0V21-%0T+?VSn@kp4W4>\fR2*N-F2e=a(4q0V21-%6V+?VSp3B'',24>\fR2a/?H2eHT04q0V21-%<X+?VV;1Gq?*4>\fR3BeQJ3&!-I4q0V21-&c,+?VV;@pqP14>\fR@Qkns3&"nt4q0V21-&i.+?VV;AhuU[4>\fRA3M+u3&*<F4q0V211;k#+?VV<2Inu\4>\g%0g6^B3&+lO4q0V211;q%+?VV<@pqP14>\g%1HlpD3&+r&4q0V211<"''+?VJ;2.A`Y4>\g%2*N-F3&3BG4q0V211<()+?VV=2`*]-4>\g%2a/?HA2lGTA7]@b4q0V211<.++?VV=@50qT4>\g%@Qkns3&4o&4q0V211=ZV+?VV=@V.e54>\g%A3M+u3&5#%4q0V211=`X+?VV=An4(74>\g%Aj.>"3&<6B4q0V211Dq$+?VV>1,;$&4>\g&0g6^B3&<=#4q0V211E"&+?VV>1LWHV4>\g&1HlpD3&<BM4q0V211E((+?VV>2e5)]4>\g&2*N-F3&=u%4q0V211E.*+?VV>@qIn64>\g&2a/?H3&>)"4q0V211E4,+?VV>AMH@X4>\g&3BeQJ3&E<D4q0V211FZU+?VV?0K)*(4>\g&@Qkns3&EL)4q0V211F`W+?VV?2_[E)4>\g&A3M+u3&EQM4q0V211FfY+?VV?3&Nl/4>\g&Aj.>"3&EX,4q0V211N"%+?VV?@UVG04>\g''0g6^BA2lGUA7[SO4q0V211N(''+?VV@1GV-''4>\g''1HlpD3&NF%4q0V211N.)+?VV@11i]Z4>\g''2*N-F3&NTN4q0V211N4++?VV@2dnlZ4>\g''2a/?H3&N[*4q0V211N:-+?VV@@5:"U4>\g''3BeQJ3&P2T4q0V211O`V+?VV@ARmt64>\g''@Qkns3&P;[4q0V211OlZ+?VVA0ebd#4>\g''Aj.>"A2lGVA7K4.4q0V211W(&+?VVA0fV?+4>\g(0g6^B3&WQP4q0V211W.(+?VVA2)d].4>\g(1HlpD3&WZM4q0V211W4*+?VJ<3Fk;_4>\g(2*N-F3&W]Q4q0V211W:,+?VVA@Q6O\4>\g(2a/?H3&YAY4q0V211W@.+?VVB3&a#14>\g(3BeQJ1c8iQ4q0V211XfW+?VVC0O[-S4>\g(@Qkns3&iWH4q0V211XlY+?VVC@q@h54>\g(A3M+uA2lGWA7[_W4q0V211Xr[+?VVD1GV-''4>\g(Aj.>"3&rcT4q0V211`.''+?VVD1b_*&4>\g)0g6^B3&ruU4q0V211`4)+?VVDAi;g^4>\g)1HlpD3+4X&4q0V211`:++?VVl2.Sl[4>\g)2*N-F3+4^"4q0V211`@-+?VVl2`3c.4>\g)2a/?H3+6>O4q0V211`F/+?VVm1c@N,4>\g)3BeQJ3+=a*4q0V211alX+?VVm2E<r14>\g)@Qkns3+=mY4q0V211arZ+?VVn1c[`/4>\g)A3M+u3+Fj+4q0V211b#\+?VVo@:h\44>\g)Aj.>"3+QPS4q0V211i4(+?VVoA2c[]4>\g*0g6^B3+Xj$4q0V211i:*+?VVp1LrZY4>\g*1HlpD3+Y$X4q0V211i@,+?X0o2DAZQ2`Eo04>\g*2*N-F1cR<K4q0V211iF.+?VVpAmmk44>\g*2a/?H3+amV4q0V211iL0+?VVq11WQXASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1brZ''4s2sIAi2D/%6QI&AmmkG4CgE00P"d*A3LGb1brZP4s2sIAn<qc%6QI&An+"I4?-qaANgPc1brZR4s2sJ0JGIM%6QI&An=.K4?5)NA3LGb1brZT4s2sJ0KD''U%6QI''0JG[54?5*)1Hl711c$g?4s2sJ0OeTW%6QI''0Jks94?5**2a.[51c$gC4s2sJ0P+i[%6QI''0K)*;4?5,N1d2@21c$gE4s2sJ0ekRM%6QI''0O[-f4?5,OAj-Yd1c$gp4s2sJ0f(XM%6QI''0Om9h4?5,U1Hl711c$gr4s2sJ0kN.(%6QI''0P*Ej4?52S3Bdm71c$j@4s2sJ1LW(''%6QI''0etp84?53.Aj-Yd1c$jB4s2sJ1b^aM%6QI''0f2'':4?55S1Hl711c$jD4s2sJ1c/W)%6QI''0fD3<4?55V1Hl711c$jF4s2sJ1cI-Q%6QI''0fV?>4?58YANgPc1c$jH4s2sJ2*#84%6QI''0k!6g4?59-@m1>a1c$jq4s2sJ2.AI-%6QI''0k3Bi4?59/@Qk5`1c$js4s2sJ2.SC)%6QI''0kENk4?5901Hl711c$ju4s2sE3FX[+%6QI''1,(m74?590ANgPc1c$mA4s2sJ2ISI,%6QI''1,;$94?5<2Aj-Yd1c$mC4s2sJ2`,)0%6QI''1,M0;4?5>\2*MI31c$mE4s2sJ2dp8]%6QI''1,_<=4?5?0@6P,_1c$mG4s2sJ2e+R+%6QI''1,qH?4?5?13Bdm71c$mI4s2sJ2e6A]%6QI''11<?h4?5AY2EhR41c$mr4s2sJ3+Y$4%6QI''11NKj4?5DZ3''Id61c$mt4s2sJ@5''K$%6QI''11`Wl4?6h[0g6%/1c$n!4s2sJ@:M)W%6QI''1GD!84?6h[ANgPc1c$pB4s2sJ@:V8[%6QI''1GV-:4?6k)1-Q.01c$pD4s2sJ@PBc*%6QI''1Gh9<4>^P&2a.[51c$pF4s2sJ@PVIX%6QI''1H%E>4?6k.ANgPc1c$pH4s2sJ@Q$,.%6QI''1H7Q@4?6k11d2@21c$pJ4s2sJ@Q7d[%6QI''1LWHi4?6k2ANgPc1c$ps4s2sJ@Uit5%6QI''1LiTk4?6k^2*MI31c$pu4s2sJ@V.S`%6QI''1M&`m4?6n,1Hl711c$sC4s2sJ@l?2.%6QI''1c.B=4?6q/1Hl711c$sG4s2sJA2Q,+%6QI''1c@N?4?6q3@6P,_1c$sI4s2sJA2uP3%6QI''1cRZA4?6q^0Koq.1c$sK4s2sJA78t3%6QI''1grQj4?6q]@m1>a1c$st4s2su3&Wa,A2u>-%6QI''1h/]l4?6q`2a.[51c$t!4s2sJAM?&,%6QI''1hAin4?6t5ANgPc1c$t#4s2sJART17%6QI''2)%3:4?7"62a.[51c%!D4s2su3&E="@lQJ4%6QI''2)7?<4>^V''1-Q.01c%!F4s2sEAM@^[%6QI''2)IK>4>^V(1-Q.01c%!H4s2sEAMQ80%6QI''2)[W@4>^V)ANgPc1c%!J4s2sEAMc>0%6QI''2)mcB4CgE.0P"[%1-Q.01c%!L4s2sEAMl2+%6QI''2.8Zk4>SfJ2EhR41c%!u4s2su3&E="@pq2X%6QI''2.Jfm4>^V-3Bdm71c%""4s2sEAN=9b%6QI''2.\ro4>SfL@m1>a1c%"$4s2sEAR].5%6QI''2D@<;4>^VZ1Hl711c%$E4s2sEARd\`%6QI''2DRH=4>^V\@Qk5`1c%$G4s2sEARo45%6QI''2DdT?4>^V]0g6%/1c%$I4s2sEAS*e`%6QI''2E!`A4>^Y)2EhR]DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f1H%0U+?VJm2DdT,4>\iP3''JHI1hJO&4q0V21H%6W+?VJm1M&`Z4>\iP@6Per1hJU)4q0V21H&]++?X0o1b`HO0f)!&4>\iPANh5!1hJ^&4q0V21H&i/+?VJm3&Nl/4>\iQ0KpUA1hL;W4q0V21H.$P+?VJm@PU+V4>\iQ1-QgC1hL5T4q0V21H.*R+?VJm@q%V24>\iQ1d3$E1hL8R4q0V21H.0T+?VG:2IScY4>\iQ2Ei6G1hL>T4q0V21H.6V+?VM80f)!&4>\iQ3''JHI2)$ap4q0V21H.<X+?VM81hAi[4>\iQ@6Per2)$mD4q0V21H/c,+?VM82D[N+4>\iQ@m2"t2)&Gp4q0V21H/i.+?VM83&j)24>\iR0KpUA2)%$J4q0V21H7*Q+?VM8@:;>/4>\iR1-QgCA2lD"A7dT+4q0V21H70S+?VM8@PL%U4>\iR2Ei6G2)&Ms4q0V21H7<W+?VM8@lHR\4>\iR3''JHI2)&Vu4q0V21H7BY+?X0o1b`HP3&*T+4>\iR@6Per2)&NO4q0V21H8i-+?X0o1b`HP2_dK*4>\iR@m2"t2)&Pt4q0V21H8o/+?VM8AMH@X4>\iRANh5!1Gh*I4q0V21H8u1+?X0o1b`HPAiW$a4>\iS0KpUA2)-gE4q0V21H@0R+?X0o1biNN1grQW4>\iS1-QgC2).!C4q0V21H@6T+?X0o1biNO0KD<+4>\iS1d3$E2).$G4q0V21H@<V+?VM93&<`-4>\iS2Ei6G2).("4q0V21H@BX+?VG:@UhS24>\iS3''JHI2).*N4q0V21H@HZ+?VM9@5C(V4>\iS@6Per2)/NM4q0V21HAo.+?VG:@lHR\4>\iS@m2"tA2lD#A7T4/4q0V21HAu0+?VM9AhuU[4>\iSANh5!2)6mA4q0V21HB&2+?VM:0fD3)4>\j&0KpUAA2lD#A7dZ14q0V21LW"%+?VM:2)RQ,4>\j&1-QgC2)7%!4q0V21LW(''+?VM:2Ieo[4>\j&1d3$E2)7*L4q0V21LW.)+?VM:3&Ef.4>\j&2Ei6G2)7-H4q0V21LW4++?X0o1brTO0K20)4>\j&3''JHI2)70O4q0V21LW:-+?X0o1brTO1LWHV4>\j&@6Per2)8Ss4q0V21LXfX+?VM:@pqP14>\j&ANh5!2)8\s4q0V21LXlZ+?X0o1brTO@Q?U]4>\j''0KpUA2)8c&4q0V21L`(&+?VM;1Gq?*4>\j''1-QgC2)@''E4q0V21L`.(+?X0o1brTP2e,#\4>\j''1d3$EA2lD$A7R]24q0V21L`4*+?VM;2E*f/4>\j''2Ei6G2)@1"4q0V21L`:,+?VM;@5L.W4>\j''3''JHI2)A\u4q0V21L`@.+?X0o1brTQA2?CY4>\j''@6Per2)A]#4q0V21LafW+?VM;@k^(U4>\j''@m2"tA2lD$A7dQ,4q0V21Lar[+?VM;A2QO[4>\j(0KpUA1Gq''H4q0V21Li.''+?VM;Ai)[\4>\j(1-QgC2)I''F4q0V21Li4)+?VM<1,qH,4>\j(1d3$E1Gq(%4q0V21Li:++?VM<1c%<)4>\j(2Ei6G2)I3H4q0V21Li@-+?VM<2Ieo[4>\j(3''JHI2)I<N4q0V21LiF/+?VM<@5''kS4>\j(@6Per2)J`"4q0V21LjlX+?VM<@:_V34>\j(@m2"t2)Jc$4q0V21LjrZ+?VM<@UVG04>\j(ANh5!2)Jf!4q0V21Lk#\+?X0o1c&ZQ1c7H+4>\j)0KpUA2)JlS4q0V21Lr4(+?VM<AS++84>\j)1-QgC2)Jo"4q0V21Lr:*+?VM<AhuU[4>\j)2Ei6G2)R''J4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI''A2c[p4>euP@m1>a1c&Z%4s2sF2)I$O%6QI''A2ugr4>Sj''2EhR41c&ZN4s2sF2)I6U%6QI''A7@_F4>Sj''3''Id61c&ZP4s2sF2)[9T%6QI''A7RkH4CgE.1Lt$-0g6%/1c&ZR4s2sF2)f&0%6QI''A7e"J4>euU1-Q.01c&\s4s2sF2*!BT%6QI''AMH@k4>Sj)2*MI31c&\u4s2sF2.SI+%6QI''AMZLm4CgE.1Lt&W2*MI31c&]"4s2su3&EF%AN"''_%6QI''AMlXo4>f!*Aj-Yd1c&]$4s2sF2.JX1%6QI''AN)dq4>f!+@m1>a1c&]&4s2sF2.SF*%6QI''AN;ps4>f!,A3LGb1c&]O4s2sD2.U,Z%6QI''AR[hG4>f!-1-Q.01c&]Q4s2su3&EF%AMuA/%6QI''ARmtI4>f!-3Bdm71c&]S4s2sF2DR6U%6QI''AS++K4CgE.1Lt)TAj-Yd1c&_t4s2sF2D@''R%6QI''AhcIl4>f#O0Koq.1c&`!4s2sF2D[$N%6QI''AhuUn4>Sj,1d2@21c&`#4s2sF2D\l-%6QI''Ai2ap4>f#R0Koq.1c&`%4s2sF2Dd?V%6QI''AiDmr4>f#SANgPc1c&`''4s2sF2E!6Q%6QI''AiW$t4>f#TA3LGb1c&`P4s2sD2D@!P%6QI''An!qH4>f#V3''Id61c&`R4s2sF2E521%6QI''An4(J4>f#WA3LGb1c&`T4s2sF2ISR/%6QI''AnF4L4>f$+1-Q.01c-m?4s2sF2IeU.%6QI(0JPa64>f$,A3LGb1c-mA4s2sF2IpD`%6QI(0Jbm84>f$.3''Id61c-mE4s2su3&EI&AM>i&%6QI(0K20<4CgE.1h:/T2*MI31c-mG4s2sF2_mBW%6QI(0KD<>4CgE.1h:/V@Qk5`1c-mr4s2sF2`,&/%6QI(0P!?i4CgE.1h:/V1d2@21c-mt4s2sF2`<WZ%6QI(0P3Kk4>f&UAj-Yd1c-pC4s2sF2`G20%6QI(0f2'':4CgE.1h:0/1d2@21c-pE4s2su3&EI&ARm_`%6QI(0fD3<4>f&X@6P,_1c-pI4s2sF2dn[0%6QI(0k!6g4>f''.2a.[51c-pr4s2su3&EI&AS,I:%6QI(0k3Bi4>f''-@m1>a1c-pt4s2su3&EI&Ahu>/%6QI(0kENk4CgE.1h:2T1d2@21c-q!4s2sF2e6J`%6QI(1,(m74>f''00Koq.1c-sB4s2sD2Dei+%6QI(1,;$94>f''03''Id61c-sD4s2sF2eHM_%6QI(1,M0;4>f''0A3LGb1c-sF4s2sF3&!0Q%6QI(1,_<=4>f)QANgPc1c-sH4s2sF3&3EV%6QI(1,qH?4>f)S3Bdm71c-sJ4s2su3&EI&An*Y]%6QI(11<?h4>f)T3Bdm71c-ss4s2sF3&G,/%6QI(11NKj4>f)V2a.[51c-t"4s2sF3&kG4%6QI(1GV-:4>f)Y1d2@21c.!E4s2sF3&tM5%6QI(1Gh9<4>f*,@6P,_1c.!G4s2sF3+=U+%6QI(1H%E>4CgE.2.U2TA3LGb1c.!I4s2sF3+Fa.%6QI(1H7Q@4>f*.A3LGb1c.!K4s2sF3+Xj/%6QI(1M&`m4>f,QA3LGb1c."#4s2sF3AE?S%6QI(1b_*94CgE.2.U6.2a.[51c.$D4s2sD2E<KU%6QI(1bq6;4>f,TA3LGb1c.$F4s2sD2E<c]%6QI(1c.B=4>f,U2EhR41c.$H4s2sD2E<ZZ%6QI(1c@N?4CgE/@Urt(3Bdm71c.$J4s2sF3AkD4%6QI(1cRZA4CgE.2.U8T2a.[51c.$u4s2sF3B(G3%6QI(1h/]l4>f,ZAj-Yd1c.%"4s2sF3FQJ_%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>\lOANh5!2*#,U4q0V21c/f.+?VMA@lQX]4>\lP0KpUA2*#/W4q0V21c7!O+?VMAA7[q64>\lP1-QgC2*#5,4q0V21c7''Q+?VMAAS"%74>\lP1d3$EA2lD''A7dMR4q0V21c7-S+?X0o1c8fU1bq6(4>\lP2Ei6G1H&`T4q0V21c73U+?VMi0P!?V4>\lP3''JHI2.83u4q0V21c79W+?VMi1,hB+4>\lP@6Per2.87N4q0V21c8`++?VMi2DmZ-4>\lP@m2"t2.8FP4q0V21c8f-+?VMi3+>&\4>\lPANh5!2.8LT4q0V21c@''P+?VMi@5:"U4>\lQ1-QgC2.9rK4q0V21c@-R+?VMi@Pp=Y4>\lQ1d3$E2.9s&4q0V21c@3T+?VMi@V.e54>\lQ2Ei6G2.:$(4q0V21c@9V+?VMiA7Ie44>\lQ3''JHI2.:&R4q0V21c@?X+?VMiAhZCX4>\lQ@6Per2.:''-4q0V21cAf,+?VMiAi2a]4>\lQ@m2"t2.A7!4q0V21cAl.+?VMj0fM9*4>\lQANh5!2.A?u4q0V21cAr0+?VMj1h/]Y4>\lR0KpUA2.AEu4q0V21cI-Q+?VMj2E3l04>\lR1-QgC2.AIU4q0V21cI3S+?VMj3&*T+4>\lR1d3$E2.AO%4q0V21cI9U+?X0o1cAlT@l$:X4>\lR2Ei6G2.AR(4q0V21cI?W+?VMj@:MJ14>\lR@6Per2.C'',4q0V21cJl-+?VMjA2ZU\4>\lR@m2"t1H.4%4q0V21cJr/+?VG=2I\iZ4>\lRANh5!2.C/P4q0V21cK#1+?VMjAn4(74>\lS0KpUA1H.6M4q0V21cR3R+?VMk0Jbm%4>\lS1-QgC2.JC%4q0V21cR9T+?X0o1cJrT2)[W-4>\lS1d3$E2.JLU4q0V21cREX+?VMk2_[E)4>\lS3''JHIA2lD)A7RH+4q0V21cRKZ+?X0o1cJrU1c7H+4>\lS@6PerA2lD)A7RVY4q0V21cSr.+?X0o1cJrU2DRH*4>\lS@m2"t2.JU*4q0V21cT#0+?VMk3+4u[4>\lSANh5!1H/eu4q0V21cT)2+?X0o1cJrU@50qT4>\lT0KpUAA2lD)A7R]14q0V21c[9S+?VMk@5''kS4>\lT1-QgC2.L&M4q0V21c[?U+?VMk@5g@Z4>\lT1d3$EA2lD)A7R\U4q0V21c[EW+?VMk@:VP24>\lT2Ei6G2.L)Q4q0V21c[KY+?X0o1cJrU@Q-I[4>\lT3''JHI2.L,V4q0V21c[Q[+?X0o1cJrUAM?:W4>\lT@6PerA2lD)A7[PQ4q0V21c]#/+?VMl0K)*(4>\lT@m2"t2.SEq4q0V21c])1+?VMl11EEV4>\lTANh5!2.SFP4q0V21c]/3+?VMl1,(m$4>\m''0KpUA2.SKt4q0V21gr+&+?VMl1H@W.4>\m''1-QgC1H/l)4q0V21gr1(+?VMl2DIB)4>\m''1d3$E2.SUR4q0V21gr7*+?VG=Ai)[\4>\m''2Ei6G2.SX"4q0V21gr=,+?X0o1cJrW0kENX4>\m''3''JHI1H/oV4q0V21grC.+?VMl3&j)24>\m''@6Per1H7''B4q0V21gsiW+?VMl3B'',24>\m''@m2"t2.U/M4q0V21gsoY+?VMl@Pg7X4>\m''ANh5!A2lD)A7dbY4q0V21gsu[+?VMlA2-7W4>\m(0KpUA2.U5V4q0V21h&1''+?X0o1cJrWAmmk44>\m(1-QgC2.U8T4q0V21h&7)+?VMlAN;p`4>\m(1d3$E1H7.%4q0V21h&=++?VG>1H%E+4>\m(2Ei6G1H73F4q0V21h&C-+?VMm0kNTYASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1c/Z$4s2sFAM[m]%6QI(@Q?Up4>g\,3Bdm71c/ZM4s2sD3&P20%6QI(@U_MD4>g\-2EhR41c/ZO4s2sD3&WKT%6QI(@V.eH4CgE.3+QPY@Qk5`1c/\r4s2sFARRG[%6QI(@kg.i4>g\Y@m1>a1c/\t4s2sFAR[Y`%6QI(@l$:k4>g\[2EhR41c/]!4s2sFARmeb%6QI(@l6Fm4CgE.3+QVUANgPc1c/]#4s2sFAS,I:%6QI(@lHRo4>g_)3''Id61c/]%4s2su3&EU*Amo46%6QI(@lZ^q4>g_*ANgPc1c/]N4s2sFAi)G1%6QI(@q%VE4>g_/1Hl711c/]P4s2sFAiDJ/%6QI(@q7bG4>g_0ANgPc1c/]R4s2sFAiOBd%6QI(@qInI4>g_Z1-Q.01c/_s4s2sFAn*b`%6QI(A2-7j4>g_\@Qk5`1c/`#4s2sFAn<_]%6QI(A2laq4>g__1Hl711c/`''4s2sD3AEHV%6QI(A77YE4>nlK1-Q.01c/`P4s2sG0JYIK%6QI(A7IeG4>SuP@6P,_1c/`R4s2sG0Jm9''%6QI(A7[qI4>nlR2*MI31c/`T4s2sG0OZq)%6QI(AM?:j4CgE.3Fl]51Hl711c/bu4s2sG0Ocb#%6QI(AMQFl4>nm&ANgPc1c/c"4s2sG0Om(+%6QI(AMcRn4>nm(3Bdm71c/c$4s2sG0P+fZ%6QI(AMu^p4>nm*2*MI31c/c&4s2sG0ek@G%6QI(AN2jr4>noK3Bdm71c/c(4s2sG0em6''%6QI(ARRbF4>noM@6P,_1c/cQ4s2sD3AtJ5%6QI(ARdnH4>noN0g6%/1c/cS4s2sG0f1dP%6QI(AS"%J4>noP0Koq.1c/cU4s2su3&G&S@l7^Z%6QI(AhlOm4>noS2a.[51c/f#4s2sG0juq''%6QI(Ai)[o4>np&A3LGb1c/f%4s2su3&G&S@prh1%6QI(Ai;gq4>np)2*MI31c/f''4s2sG0k=fY%6QI(AiMss4>np+2*MI31c/f)4s2su3&G&SA2n0b%6QI(AmmkG4>nrM1Hl711c/fR4s2sG1,UgN%6QI(An+"I4>nrQ0g6%/1c/fT4s2sG1,^sQ%6QI(An=.K4>nrR@Qk5`1c/fV4s2sG1,`Z,%6QI)0JG[54>nrR1Hl711c6sA4s2sG1-%?Y%6QI)0JYg74>ns*2*MI31c6sC4s2su3&G&SAR[V_%6QI)0Jks94>ns,A3LGb1c6sE4s2sG1GCUK%6QI)0K)*;4>nuM0Koq.1c6sI4s2sG1G^dM%6QI)0O[-f4>nuO2*MI31c6st4s2sG1GggM%6QI)0P*Ej4>nuP1d2@21c6t!4s2sG1GiZ,%6QI)0ebd64CgE.@:Wt,2EhR41c7!B4s2sG1Gq0V%6QI)0etp84CgE.@Urt''A3LGb1c7!D4s2su3&G&SAmmS]%6QI)0f2'':4>nuR@m1>a1c7!F4s2sG1H@HZ%6QI)0fD3<4CgE.@Urt(1d2@21c7!H4s2sG1H@9U%6QI)0fV?>4>o!)A3LGb1c7!s4s2sG1M&7(%6QI)0kENk4>o!-1-Q.01c7""4s2sG1biQ*%6QI)1,(m74>o#O2*MI31c7$C4s2sG1bq''T%6QI)1,;$94>o#OAj-Yd1c7$E4s2sG1c8]*%6QI)1,M0;4>o#RA3LGb1c7$G4s2sG1cI3S%6QI)1,_<=4>o#TA3LGb1c7$I4s2sG1cREX%6QI)1,qH?4>o#V0g6%/1c7$K4s2sG1c]/3%6QI)11NKj4>o$,2*MI31c7%!4s2sG1h8O/%6QI)11`Wl4CgE.@Us"\0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f2)8c-+?VP=AMcR[4>\oO0KpUA2Df#X4q0V22)?sN+?VGg2J#&]4>\oO1-QgC2Dm1#4q0V22)@$P+?VP>0f2''''4>\oO1d3$E1LW3u4q0V22)@*R+?VP>0kENX4>\oO2Ei6G2Dm9G4q0V22)@0T+?VP>1c.B*4>\oO3''JHI2Dm?K4q0V22)@6V+?VP>2I\iZ4>\oO@6Per2DmF%4q0V22)A]*+?VP>3&Ef.4>\oO@m2"t2DmI&4q0V22)Ac,+?VP>@PU+V4>\oOANh5!2Dnr$4q0V22)Ai.+?VP>@Q6O\4>\oP0KpUA2DnrU4q0V22)I$O+?VP>@lZ^^4>\oP1-QgC2Do#%4q0V22)I*Q+?VGgA2ZU\4>\oP1d3$E2Do),4q0V22)I0S+?VP>An+"64>\oP2Ei6G2E!6G4q0V22)I6U+?VP?0K;6*4>\oP3''JHI2E!<F4q0V22)I<W+?VP?11<?U4>\oP@6Per2E!BL4q0V22)Jc++?VP?2).9(4>\oP@m2"t2E!C''4q0V22)Ji-+?VGgARRb34>\oPANh5!A2lDUA7T1+4q0V22)Jo/+?X0o1h1'',Ai2a]4>\oQ0KpUAA2lDUA7T.-4q0V22)R*P+?VP?2IScY4>\oQ1d3$E2E!L''4q0V22)R6T+?VP?3&!N*4>\oQ2Ei6G2E!QL4q0V22)R<V+?VP?3ANc-4>\oQ3''JHI1L`%L4q0V22)RBX+?VP?@:VP24>\oQ@6Per2E##!4q0V22)Si,+?VP?@Pp=Y4>\oQ@m2"t1L`(I4q0V22)So.+?VGh0k3BV4>\oQANh5!1LXfQ4q0V22)Su0+?VP@0JPa#4>\oR0KpUA2E*?G4q0V22)[0Q+?X0o1h1''.2_mQ+4>\oR1-QgC2E*?N4q0V22)[6S+?X0o1h1''.A2?CY4>\oR1d3$EA2lDUA7f@-4q0V22)[<U+?VP@1h8cZ4>\oR2Ei6G2E*KM4q0V22)[BW+?VP@2.Sl[4>\oR3''JHIA2lDUA7f@+4q0V22)[HY+?X0o1h1''.AMcR[4>\oR@6PerA2lDUA7f@04q0V22)\o-+?VP@2`*]-4>\oR@m2"tA2lDUA7f@\4q0V22)\u/+?VP@3ANc-4>\oRANh5!A2lDUA7f@a4q0V22)]&1+?VV>2D[N+4>\oS0KpUA2E3EF4q0V22)d6R+?VP@@l$:X4>\oS1-QgC2E,,*4q0V22)d<T+?VP@A26=X4>\oS1d3$E2E,/U4q0V22)dBV+?VP@AiDm_4>\oS2Ei6GA2lDVA7IH)4q0V22)dHX+?X0o1h:-,2).9(4>\oS3''JHIA2lDVA7IH*4q0V22)dNZ+?VPA0fV?+4>\oS@6Per2E3F''4q0V22)eu.+?VPA11WQX4>\oS@m2"tA2lDVA7IMT4q0V22)f&0+?VPA1G_3(4>\oSANh5!2E3L%4q0V22)f,2+?VPA1M&`Z4>\oT0KpUA2E3NN4q0V22)m<S+?VPA1c[`/4>\oT1-QgC2E3O''4q0V22)mBU+?VPA2)RQ,4>\oT1d3$E2E3QQ4q0V22)mHW+?VGh2`Eo04>\oT2Ei6G2E3U(4q0V22)mNY+?VPA2J#&]4>\oT3''JHI2E3X*4q0V22)mT[+?VPA3&3Z,4>\oT@6Per2E3]N4q0V22)o&/+?VPA3As&14>\oT@m2"t1L`7Q4q0V22*!?S+?VPA3Fb5^4>\oU1HlpD2E5/&4q0V22*!KW+?VPA@U_M14>\oU2*N-F2E5;X4q0V22*!QY+?X0o1h:-,AMcR[4>\oU2a/?HA2lDVA7RQ+4q0V22*!W[+?VPA@l$:X4>\oU3BeQJ2E52(4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI)3FP)o4>o0/@m1>a1c7:&4s2sG3+P$5%6QI)3FtAs4>o01@m1>a1c7:*4s2sG3+b*5%6QI)@5''kf4>o2R1Hl711c8\r4s2sG3A<BU%6QI)@5:"h4>UG+2a.[51c8\t4s2su3&G/VA2uJ1%6QI)@5L.j4>UG+A3LGb1c8]!4s2sG3A`WX%6QI)@5^:l4>o2X3Bdm71c8]#4s2sG3AtA2%6QI)@5pFn4>o2Y@6P,_1c8]%4s2sG3B8iY%6QI)@:;>B4>UGT1d2@21c8]N4s2sG3B8u]%6QI)@:MJD4>o3/0Koq.1c8]P4s2sG3FZD\%6QI)@:_VF4>o3/@m1>a1c8]R4s2sG3Faa,%6QI)@PBtg4>o310g6%/1c8_s4s2su3&G/VAMZ>1%6QI)@PU+i4CgE.A7T7.2a.[51c8_u4s2su3&G/VAMZ;0%6QI)@Pg7k4>o321Hl711c8`$4s2sG3G(''2%6QI)@Q6Oo4>UGVA3LGb1c8`&4s2sG3G(*3%6QI)@UVGC4>o33ANgPc1c8`O4s2sG@50K#%6QI)@UhSE4>pV&@6P,_1c8`Q4s2sG@52:V%6QI)@V%_G4CgE.A7T:,@m1>a1c8bt4s2sG@5DLZ%6QI)@kp4j4>pV)3Bdm71c8c!4s2sG@5hUY%6QI)@l-@l4>pV)ANgPc1c8c#4s2sG@5Tf(%6QI)@l?Ln4>pV+1d2@21c8c%4s2su3&G/VAh[^Y%6QI)@lQXp4>pV-@Qk5`1c8c''4s2sD@V.;X%6QI)@pqPD4>pVV0g6%/1c8cP4s2su3&G/VAi;J0%6QI)@q.\F4>pVV@Qk5`1c8cR4s2sG@:Eb2%6QI)@q@hH4>pVX2EhR41c8cT4s2sG@:V2Y%6QI)A2$1i4>pVY0Koq.1c8eu4s2sG@:Wn4%6QI)A26=k4CgE.A7T:aAj-Yd1c8f"4s2su3&G/VAn<nb%6QI)A2c[p4>pV[A3LGb1c8f''4s2su3&G2W@kol)%6QI)A2ugr4>pY&@Qk5`1c8fS4s2su3&G2W@l%XZ%6QI)A7[qI4>pY''2a.[51c8fU4s2sD@kor+%6QI)AM?:j4>pY(Aj-Yd1c8i!4s2sG@PhLW%6QI)AMQFl4>pY+3''Id61c8i#4s2sG@Q%^[%6QI)AMcRn4>pY-2*MI31c8i%4s2sG@Q.^Z%6QI)AMu^p4>pY.0g6%/1c8i''4s2sG@Q@m]%6QI)AN2jr4>pYWANgPc1c8i)4s2su3&G2WAN;_6%6QI)ARRbF4>pYXA3LGb1c8iU4s2sG@Urn2%6QI)AhcIl4>pY[ANgPc1c8l#4s2sG@k]Z%%6QI)AhuUn4>p\''@6P,_1c8l%4s2sG@k_IX%6QI)Ai2ap4>p\*2EhR41c8l''4s2su3&G5X@lJ!`%6QI)AiDmr4>p\+A3LGb1c8l)4s2sG@l7^Z%6QI)AiW$t4>p\-A3LGb1c8lR4s2sG@lQ;/%6QI)An!qH4>p\/3Bdm71c8lT4s2sD@q.;Y%6QI)An4(J4>p\01d2@21c8lV4s2sG@lZJ3%6QI)AnF4L4>p\XA3LGb1c@$A4s2sG@q.8X%6QI*0JPa64>UJX1-Q.01c@$C4s2sG@q9(5%6QI*0Jbm84>p\\3Bdm71c@$E4s2sG@qB17%6QI*0Ju$:4CgE.An5F+0Koq.1c@$G4s2sGA2#]$%6QI*0K20<4>p_*1d2@21c@$r4s2sG@l?80%6QI*0Od3g4>p_*Aj-Yd1c@$t4s2sGA2@^Z%6QI*0P!?i4>p_-@Qk5`1c@%!4s2sGA2Z,*%6QI*0P3Kk4>p_/0Koq.1c@''D4s2sGA2n!]%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>\rN1HlpD2IndX4q0V22DI$P+?VPm3AE],4>\rN2*N-F2Ing-4q0V22DI*R+?X0o1hL9/1b_*&4>\rN2a/?HA2lDXA7T:\4q0V22DI0T+?X0o1hL9/AiW$a4>\rN3BeQJA2lDXA7T4,4q0V22DJW(+?VPm@:DD04>\rN@Qkns2Ip6-4q0V22DJ]*+?VPm@Pg7X4>\rNA3M+u2Ip;Q4q0V22DJc,+?VPm1Gh9)4>\rNAj.>"2Ip;W4q0V22DQsM+?VPm@q@h54>\rO0g6^B2Ip?14q0V22DR$O+?VPmAi;g^4>\rO1HlpD2J"[&4q0V22DR*Q+?VPn0kENX4>\rO2*N-F1Lr3p4q0V22DR0S+?VPn1GV-''4>\rO@Qkns2J"^W4q0V22DSi-+?VPn2)d].4>\rOAj.>"2J"d&4q0V22D[$N+?VGj0kENX4>\rP0g6^B2J"m)4q0V22D[*P+?VPn@5g@Z4>\rP1HlpD2J$>S4q0V22D[0R+?VPn@l$:X4>\rP2*N-F2J+a&4q0V22D[6T+?VPnAR[h44>\rP2a/?H2J$J\4q0V22D[<V+?VPnAn!q54>\rP3BeQJ2J+XO4q0V22D\c*+?VPo0Om9U4>\rP@Qkns2J+[''4q0V22D\i,+?VPo1,V6)4>\rPA3M+u2J+a''4q0V22D\o.+?VPo1LiTX4>\rPAj.>"A2lDXA7dc34q0V22Dd*O+?VPo2)7?)4>\rQ0g6^B2J+g*4q0V22Dd0Q+?VPo2D@<(4>\rQ1HlpD2J+j,4q0V22Dd6S+?VPo3A<W+4>\rQ2*N-F2J+s-4q0V22Dd<U+?VPo@V%_44>\rQ2a/?H2J+s]4q0V22DdBW+?VPo@5U4X4>\rQ3BeQJ2J-B04q0V22Dei++?VGj2DdT,4>\rQA3M+u2J-M\4q0V22Deu/+?X0o2)&QN3As&14>\rQAj.>"2J-Q24q0V22Dm0P+?VS:0JG["4>\rR0g6^B2_Zpo4q0V22Dm6R+?VS:1,D*''4>\rR1HlpDA2lG#A7RAM4q0V22Dm<T+?VS:1LWHV4>\rR2*N-F2_[''E4q0V22DmBV+?VS:1cIT-4>\rR2a/?H2_[''t4q0V22DmHX+?VGj3FP)\4>\rR3BeQJ2_[-I4q0V22Dno,+?VS:2E<r14>\rR@Qkns2_[.$4q0V22Dnu.+?VS:2`<i/4>\rRA3M+u2_[3L4q0V22Do&0+?VS:3B'',24>\rRAj.>"A2lG#A7T1.4q0V22E!6Q+?VS:3G(Ga4>\rS0g6^B2_\\q4q0V22E!<S+?X0o2)&QOAn=.84>\rS1HlpD2_\fQ4q0V22E!BU+?VS:@pqP14>\rS2*N-F2_\bs4q0V22E!HW+?VS;0Jbm%4>\rS2a/?H2_d!E4q0V22E!NY+?VS;0K;6*4>\rS3BeQJ2_d!r4q0V22E"u-+?VGj@k^(U4>\rS@Qkns2_d("4q0V22E#&/+?VS;2)%3''4>\rSA3M+u2_d0G4q0V22E#,1+?VS;2.\r\4>\rSAj.>"1Lt#Q4q0V22E*<R+?VS;3As&14>\rT0g6^B2_d9G4q0V22E*BT+?VS;3FY/]4>\rT1HlpD2_e_p4q0V22E*HV+?VS;@5:"U4>\rT2a/?HA2lG#A7f:\4q0V22E*TZ+?VS;A2ug_4>\rT3BeQJ2_eiQ4q0V22E,&.+?VS<0K20)4>\rT@Qkns1M&6t4q0V22E,,0+?VS<1Gh9)4>\rTA3M+u2_m0L4q0V22E,22+?VS<1bq6(4>\rTAj.>"2_m6L4q0V22E3BS+?VS<2D[N+ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1c@<J4s2su3&NF$AMQ80%6QI*3&EfA4?##S3''Id61c@<N4s2sH1,if/%6QI*3&WrC4?##TANgPc1c@<P4s2su3&NF$ARRG[%6QI*3&j)E4?#$(ANgPc1c@<R4s2sH11Dq$%6QI*3+4un4?#$*0g6%/1c@=&4s2sDAMu5+%6QI*3+G,p4?#$*@m1>a1c@=(4s2sDAMuG1%6QI*3+Y8r4>UP,3''Id61c@=*4s2sH11i=+%6QI*3A<W>4?#$-@6P,_1c@?K4s2sH1GCaO%6QI*3ANc@4?#&N1-Q.01c@?O4s2sDAN2J0%6QI*3As&D4?#&P3Bdm71c@?Q4s2sH1GWH(%6QI*3B02F4?#&P1Hl711c@?S4s2sH1G`Q*%6QI*3FP)o4?#&R1-Q.01c@@''4s2sDAN;S2%6QI*3Fb5q4?#&S@Qk5`1c@@)4s2su3&NI%@lZG2%6QI*@5''kf4?#&T0g6%/1cAbs4s2sH1H7*Q%6QI*@5:"h4?#&U@6P,_1cAbu4s2sH1H@9U%6QI*@5L.j4?#&V3''Id61cAc"4s2sH1HAr/%6QI*@5^:l4?#'')2*MI31cAc$4s2sH1L`@.%6QI*@5pFn4?#''*Aj-Yd1cAc&4s2sH1Li:+%6QI*@:;>B4?#''+@Qk5`1cAcO4s2sH1M&:)%6QI*@:MJD4?#''-2a.[51cAcQ4s2sH1M/X2%6QI*@:_VF4?#)O1Hl711cAcS4s2sH1M1&Z%6QI*@PBtg4?#)N0g6%/1cAet4s2sH1c7''Q%6QI*@PU+i4?#)R0Koq.1cAf!4s2sH1c.!P%6QI*@Pg7k4?#)S1-Q.01cAf#4s2sH1c8f-%6QI*@Q$Cm4?#)V0g6%/1cAf%4s2sH1cRHY%6QI*@Q6Oo4CgE/11XrQA3LGb1cAf''4s2sH1c[<T%6QI*@UVGC4?#)W2a.[51cAfP4s2sH1c[Q[%6QI*@UhSE4?#**0g6%/1cAfR4s2sH1gr7*%6QI*@V%_G4?#**@6P,_1cAfT4s2sH1h&I/%6QI*@k^(h4?#*+@Qk5`1cAhu4s2sH1h''lW%6QI*@kp4j4?#*-2EhR41cAi"4s2sH1h8R0%6QI*@l-@l4?#*.@Qk5`1cAi$4s2su3&NI%Ai2J1%6QI*@l?Ln4?#*/@6P,_1cAi&4s2su3&NI%Ai=6b%6QI*@lQXp4?#,Q0Koq.1cAi(4s2sH2)7!P%6QI*@pqPD4?#,Q@6P,_1cAiQ4s2sDAi2M2%6QI*@q.\F4CgE/1LsuM2EhR41cAiU4s2sH2)I!N%6QI*A2$1i4?#,S3''Id61cAl!4s2sH2)R''O%6QI*A26=k4?#,T1-Q.01cAl#4s2sH2)d9S%6QI*A2HIm4?#,V0g6%/1cAl%4s2sH2)er-%6QI*A2laq4?#,W@m1>a1cAl)4s2sDAiDS2%6QI*A77YE4?#-+1-Q.01cAlR4s2sDAiDY4%6QI*A7IeG4?#-,0Koq.1cAlT4s2sH2.AL.%6QI*AM?:j4?#--2EhR41cAo"4s2sH2.L5^%6QI*AMQFl4?#-.1Hl711cAo$4s2sH2.U5]%6QI*AMu^p4?#-/2a.[51cAo(4s2sH2.^>_%6QI*AN2jr4?#-00g6%/1cAo*4s2sH2D?pN%6QI*ARRbF4?#/Q3''Id61cAoS4s2sH2D@''R%6QI*ARdnH4?#/PAj-Yd1cAoU4s2sDAmo77%6QI*AS"%J4CgE/1Lt&NANgPc1cAoW4s2sH2DI!O%6QI*AhlOm4CgE/1Lt&Q2a.[51cAr%4s2sH2DR-R%6QI*Ai)[o4?#/R3''Id_DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f2J+g1+?VS@1LiTX4>\s.2Ei6G2`<HJ4q0V22J+m3+?X0o2)AcS2IScY4>\s.3''JHI1M1,W4q0V22J+s5+?VS@1bh0''4>\s.@6PerA2lG&A7[`04q0V22J-D^+?VS@1c[`/4>\s.@m2"t2`<NN4q0V22J-J`+?VGlA2c[]4>\s.ANh5!2`<R*4q0V22J-Pb+?VS@3Aiu04>\uN0KpUA2`>)!4q0V22_ZsM+?VS@@5''kS4>\uN1d3$E2`>)V4q0V22_[*Q+?X0o2)JiR1grQW4>\uN2Ei6G2`>/+4q0V22_[0S+?X0o2)JiR2)RQ,4>\uN3''JHI2`>5,4q0V22_[6U+?X0o2)JiS1,;$&4>\uN@6Per2`EHM4q0V22_\])+?VSA0k!6T4>\uN@m2"t2`EL&4q0V22_\c++?VSA1Gq?*4>\uNANh5!A2lG''A7T+/4q0V22_\i-+?VJ71H@W.4>\uO0KpUAA2lG''A7T7/4q0V22_d$N+?X0o2)JiS@q7b44>\uO1-QgC2`ETR4q0V22_d*P+?X0o2)JiT0kENX4>\uO1d3$E2`E[*4q0V22_d0R+?X0o2)JiT1h/]Y4>\uO2Ei6G1b^dH4q0V22_d6T+?VSA3FP)\4>\uO3''JHI2`Ea/4q0V22_d<V+?VSA@5:"U4>\uO@6Per2`G/%4q0V22_ei,+?VSAAMcR[4>\uOANh5!2`G;V4q0V22_eo.+?VSAARdn54>\uP0KpUA2`G>X4q0V22_m*O+?X0o2)SoS11`WY4>\uP1-QgC2`NKK4q0V22_m0Q+?VSB0KD<+4>\uP1d3$E2`NL%4q0V22_m6S+?VSB0f_E,4>\uP2Ei6G2`NR&4q0V22_m<U+?VSB1cIT-4>\uP3''JHI2`N^(4q0V22_mBW+?X0o2)SoSA2ug_4>\uP@6Per2`Nd*4q0V22_ni++?VSB3A`o/4>\uP@m2"t2`P5&4q0V22_no-+?VSB3Fk;_4>\uPANh5!2`Ng04q0V22_nu/+?VSB@U_M14>\uQ0KpUA2`P>*4q0V22`!0P+?VSBAMu^]4>\uQ1d3$E2`PD\4q0V22`!<T+?X0o2)SoT@5g@Z4>\uQ2Ei6G2`WTH4q0V22`!BV+?VSC0k*<U4>\uQ3''JHI2`WWN4q0V22`!HX+?VSC1grQW4>\uQ@6Per2`W`T4q0V22`"o,+?VJ80Ju$''4>\uQ@m2"t2`WcT4q0V22`"u.+?VSC2_mQ+4>\uQANh5!2`WlU4q0V22`#&0+?VSC@50qT4>\uR0KpUA2`Y;,4q0V22`*6Q+?VSC@Pg7X4>\uR1-QgC2`YA''4q0V22`*<S+?VSC@lHR\4>\uR2Ei6G2`YD,4q0V22`*HW+?VJ81cRZ.4>\uR3''JHIA2lG(A7f714q0V22`*NY+?X0o2)SoV@Pg7X4>\uR@6Per1bgh!4q0V22`+u-+?VSk0O[-S4>\uR@m2"t2dnEu4q0V22`,&/+?VSk0k*<U4>\uRANh5!1bgmE4q0V22`,,1+?VSk1H7Q-4>\uS0KpUA2dnO%4q0V22`3<R+?VSk2)[W-4>\uS1-QgC2dnR(4q0V22`3BT+?VSk2.JfZ4>\uS1d3$E2dnRU4q0V22`3HV+?VSk2E*f/4>\uS2Ei6G2dnUQ4q0V22`3NX+?VSk2`3c.4>\uS3''JHI2dn[$4q0V22`3TZ+?VSk3+4u[4>\uS@6Per2dn^#4q0V22`5&.+?VSk@:MJ14>\uS@m2"tA2lG)A7T4-4q0V22`5,0+?VJ8@Pg7X4>\uSANh5!2dp/U4q0V22`522+?VSk@V%_44>\uT0KpUA1biHO4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI+2DIB<4?$\Y@m1>a1cI<J4s2sH@:_D^%6QI+2D[N>4?$\\1d2@21cI<L4s2su3&NU)AS!\^%6QI+2DmZ@4CgE/2IpB11Hl711cI<N4s2su3&NU)AS*Y\%6QI+2E*fB4?$_*A3LGb1cI<P4s2sH@PV@U%6QI+2I\im4>\d(2EhR41cI=&4s2sE0kN4*%6QI+2Inuo4?$_.Aj-Yd1cI=(4s2sH@Pff''%6QI+2J,,q4>\d(ANgPc1cI?I4s2sH@Pp#,%6QI+2_dK=4?$_.3Bdm71cI?K4s2sH@Q$&,%6QI+2`!W?4?$_-2EhR41cI?M4s2sH@Q-),%6QI+2`3cA4CgE/2IpE/1-Q.01cI?O4s2sE1,(XN%6QI+2`EoC4?$_00Koq.1cI?Q4s2sH@Q@m]%6QI+2`X&E4>\fIANgPc1cI@%4s2sH@U_2Y%6QI+2e"rn4?$_Y@m1>a1cI@''4s2sH@Uh8Z%6QI+2e5)p4?$_Z@6P,_1cI@)4s2su3&NX*@l.XY%6QI+2eG5r4CgE/2e6DV1d2@21cIBJ4s2sH@Uq;Z%6QI+3&*T>4?$_[2EhR41cIBL4s2sH@Urn2%6QI+3&<`@4?$_\@6P,_1cIBN4s2sH@V.;X%6QI+3&NlB4?$b(1Hl711cIBP4s2sH@k_IX%6QI+3&a#D4?$b,2*MI31cIBR4s2sH@l.UX%6QI+3&s/F4?$b-2a.[51cIC&4s2sH@l7g]%6QI+3+>&o4?$b.0g6%/1cIC(4s2sH@l?>2%6QI+3+P2q4?$b.Aj-Yd1cIC*4s2su3&NX*AMRg\%6QI+3+b>s4CgE/2e6JW2EhR41cIEK4s2su3&NX*AMuD0%6QI+3AE]?4?$bY2EhR41cIEM4s2su3&NX*AMu;-%6QI+3AiuC4CgE/2e6K13''Id61cIEQ4s2sH@q.>Z%6QI+3B'',E4CgE/2e6K01-Q.01cIES4s2sH@q0%5%6QI+3B98G4CgE/2e6K23''Id61cIF''4s2su3&NX*Ahl/+%6QI+3FY/p4?$b]2EhR41cIF)4s2su3&NX*Ai4''^%6QI+3Fk;r4?$b^2*MI31cIF+4s2sHA2#f''%6QI+3G(Gt4>\g''2EhR41cJhs4s2sHA2,i''%6QI+@50qg4?$e*ANgPc1cJhu4s2su3&NX*An<Y[%6QI+@5C(i4CgE/2e6N21d2@21cJi$4s2sHA2Gu(%6QI+@5g@m4?$e-2a.[51cJi&4s2su3&N[+@k_CV%6QI+@6$Lo4CgE/2e6N4@Qk5`1cJiO4s2sE11W:,%6QI+@:DDC4?$e.@6P,_1cJiQ4s2sHA2[j[%6QI+@:VPE4?$e00Koq.1cJiS4s2sE11XoZ%6QI+@:h\G4?$e0Aj-Yd1cJkt4s2su3&N[+@kfo+%6QI+@PL%h4?$e13''Id61cJl!4s2sHA2uS4%6QI+@P^1j4CgE/3+QMW0Koq.1cJl#4s2sHA3"0a%6QI+@Pp=l4?$eZ2a.[51cJl%4s2sHA78n1%6QI+@Q-In4?$e[2EhR41cJl''4s2sHA7I;W%6QI+@Q?Up4?$e]2a.[51cJlP4s2sHA7R\a%6QI+@U_MD4?$e^2EhR41cJlR4s2sE1GCRJ%6QI+@UqYF4CgE/3+QN1A3LGb1cJlT4s2t"@5U#.%6QI+@V.eH4?$h+0Koq.1cJnu4s2sHAMH,-%6QI+@kg.i4?$h+A3LGb1cJo"4s2sHAMQ2.%6QI+@l$:k4?$h,@m1>a1cJo$4s2sHAMc8.%6QI+@l6Fm4?$h12*MI31cJo&4s2sHAN+0a%6QI+@lZ^q4>\iL@Qk5`1cJoQ4s2sHAN=0_%6QI+@q%VE4>\iN1Hl711cJoS4s2sHAi!p\%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>]!,A3M+u2eFjT4q0V22e-D_+?VSp1M&`Z4>]!,Aj.>"2eFm&4q0V22e4U++?VG:@kg.V4>]!-0g6^BA2lG+A7[\R4q0V22e4[-+?X0o2)o,X3&Wr04>]!-2*N-F2eFsY4q0V22e4m3+?VSp3A<W+4>]!-3BeQJ2).%!4q0V22e6>\+?X0o1hL9/0P*EW4>]!-@Qkns2eG''.4q0V22e6D^+?VSp3Fb5^4>]!-A3M+u2eHK/4q0V22e6J`+?X0o2*#2W0JYg$4>]!-Aj.>"2eHPU4q0V22e=[,+?VSp@qIn64>]!.0g6^B2eHVW4q0V22e=a.+?VSpAhlOZ4>]!.1HlpD3&!$p4q0V22e=g0+?VV;0K;6*4>]!.2*N-F3&!''F4q0V22e=m2+?VV;11NKW4>]!.2a/?H3&!-B4q0V22e=s4+?VV;1c%<)4>]!.3BeQJ3&!6K4q0V22e?D]+?VV;2e"r[4>]!.@Qkns3&!?Q4q0V22e?J_+?VV;3Fb5^4>]!.A3M+u3&"bt4q0V22e?Pa+?VV;@5g@Z4>]!.Aj.>"3&"f$4q0V22eFa-+?X0o2*#2Y2e>/^4>]!/0g6^B3&"i"4q0V22eFg/+?VV;A2QO[4>]!/1HlpD3&"o%4q0V22eFm1+?VV<0P!?V4>]!/2*N-F3&"r%4q0V22eFs3+?VV;An!q54>]!/2a/?H1c&]S4q0V22eG$5+?VV<1Gq?*4>]!/3BeQJ3&*.!4q0V22eHJ^+?VJ:AhZCX4>]!/@Qkns3&*0F4q0V22eHP`+?VV<1,hB+4>]!/A3M+u3&*0u4q0V22eHVb+?X0o2*#2Z0k<HW4>]!/Aj.>"3&*4"4q0V23&!$M+?VJ;0K;6*4>]#O0g6^B3&*<O4q0V23&!*O+?VJ;0fM9*4>]#O1HlpD1c-ps4q0V23&!0Q+?VV<3&Nl/4>]#O2*N-F1c-sC4q0V23&!6S+?VV<3B0234>]#O2a/?H3&+kt4q0V23&!<U+?VV<@kg.V4>]#O3BeQJ3&+o!4q0V23&"c)+?VV<A2ZU\4>]#O@Qkns3&+rQ4q0V23&"i++?X0o2.:$*A7Rk54>]#OA3M+u3&+u$4q0V23&"o-+?X0o2.:$*ARRb34>]#OAj.>"3&+uS4q0V23&**N+?VV<An4(74>]#P0g6^B3&,#W4q0V23&*0P+?X0o2.:$+2J,,^4>]#P1HlpD3&30E4q0V23&*6R+?X0o2.:$+A7Rk54>]#P2*N-F3&33K4q0V23&*<T+?VV=1,;$&4>]#P2a/?HA2lGTA7[K,4q0V23&*BV+?VV=1LiTX4>]#P3BeQJ3&3<N4q0V23&+i*+?VV=1c7H+4>]#P@QknsA2lGTA7[VX4q0V23&+o,+?VJ;2`<i/4>]#PA3M+u1c.."4q0V23&+u.+?VV=2)d].4>]#PAj.>"A2lGTA7[`14q0V23&30O+?VV=2.JfZ4>]#Q0g6^B3&3BJ4q0V23&36Q+?X0o2.:$,@Q-I[4>]#Q1HlpD1c.3I4q0V23&3<S+?VV=2e5)]4>]#Q2*N-F3&3F)4q0V23&3BU+?VV=3&<`-4>]#Q2a/?H3&3I%4q0V23&3HW+?VV=3AWi.4>]#Q@Qkns3&4qu4q0V23&4u-+?VV=@Pg7X4>]#QA3M+u3&4rO4q0V23&5&/+?VV=@UhS24>]#QAj.>"3&5&#4q0V23&<6P+?VV=AN2j_4>]#R0g6^B3&5))4q0V23&<BT+?VV>0Om9U4>]#R2*N-F3&<EK4q0V23&<HV+?VV>0k*<U4>]#R2a/?H3&<:"4q0V23&<NX+?VV>1GD!%ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1cR9O4s2sI1G`N)%6QI,1LWHi4?,,R1d2@21cR:#4s2sI1Gq*T%6QI,1LiTk4>\m(ANgPc1cR:%4s2sE1h8F,%6QI,1M&`m4>\m(1Hl711cR<H4s2sI1HAo.%6QI,1bq6;4?,,WA3LGb1cR<J4s2sI1LiF/%6QI,1c.B=4?,--0Koq.1cR<L4s2sI1Lr=+%6QI,1c@N?4?,--A3LGb1cR<N4s2sI1M&F-%6QI,1cRZA4?,-/3Bdm71cR<P4s2sI1bgjO%6QI,1grQj4CgE/@Urt-1Hl711cR=$4s2sI1bgpQ%6QI,1h/]l4?,/R3Bdm71cR=&4s2sI1c/f.%6QI,2)7?<4?,/T@m1>a1cR?K4s2su3&P/U@q9+6%6QI,2)IK>4?,/U2*MI31cR?M4s2sI1cIBX%6QI,2)[W@4?,/V@m1>a1cR?O4s2sI1cR3R%6QI,2)mcB4>\oLA3LGb1cR?Q4s2sI1c[KY%6QI,2.8Zk4?,0+2EhR41cR@%4s2sI1h(#[%6QI,2.Jfm4>\oL3''Id61cR@)4s2sI1h8C+%6QI,2D@<;4CgE/@Us%.2*MI31cRBJ4s2sI1hAU0%6QI,2DRH=4?,0/@6P,_1cRBL4s2sI1hC8_%6QI,2DdT?4?,000g6%/1cRBN4s2sI1hL/[%6QI,2E!`A4?,2Q@Qk5`1cRBR4s2sI2)8W)%6QI,2IScl4?,2TAj-Yd1cRC&4s2sI2)]&1%6QI,2Ieon4>\oP1Hl711cRC(4s2sI2)R*P%6QI,2_[E<4CgE/@Us(21d2@21cREK4s2sI2)eu.%6QI,2_mQ>4?,2WA3LGb1cREM4s2sI2)f,2%6QI,2`*]@4?,2X0g6%/1cREO4s2sI2)mKX%6QI,2`<iB4?,2Y1Hl711cREQ4s2sI2*#22%6QI,2`NuD4?,2YAj-Yd1cRES4s2su3&P/UAnF"d%6QI,2e,#o4?,3-@m1>a1cRF)4s2sI2.JR/%6QI,2e>/q4?,3.@6P,_1cRHL4s2sI2.U;_%6QI,3&3Z?4?,300g6%/1cRHN4s2sI2.\[0%6QI,3&EfA4?,312EhR41cRHP4s2sI2D?gK%6QI,3&WrC4?,5R0g6%/1cRHR4s2sI2DJc,%6QI,3&j)E4?,5S0g6%/1cRHT4s2sI2DR*Q%6QI,3+4un4?,5S2a.[51cRI(4s2su3&P2VA2%OX%6QI,3+G,p4?,5T3Bdm71cRI*4s2sI2D\i,%6QI,3+Y8r4CgE/@q9++3Bdm71cRI,4s2sI2Dd*O%6QI,3A<W>4?,5V1Hl711cRKM4s2sI2DmBV%6QI,3ANc@4?,5X2a.[51cRKO4s2sI2E3WZ%6QI,3A`oB4?,5Y3Bdm71cRKS4s2sI2I\C)%6QI,3B02F4?,6.1Hl711cRKU4s2sI2IeI*%6QI,3FP)o4?,6/1Hl711cRL)4s2sI2InO+%6QI,3Fb5q4?,602*MI31cRL+4s2sI2Ina1%6QI,3FtAs4?,611Hl711cRL-4s2sI2J"d1%6QI,@5''kf4>\p)3''Id61cSnu4s2sI2_[*Q%6QI,@5:"h4?,8R2a.[51cSo"4s2sI2_\f,%6QI,@5L.j4?,8S0Koq.1cSo$4s2sI2_eo.%6QI,@5^:l4?,8T0g6%/1cSo&4s2sI2_m0Q%6QI,@5pFn4?,8U0g6%/1cSo(4s2sI2`"l+%6QI,@:;>B4?,8V0Koq.1cSoQ4s2sI2`*<S%6QI,@:MJD4?,8W0g6%/1cSoS4s2sI2`3QY%6QI,@PBtg4?,8Y1-Q.YDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f3+=U++?VVB2e,#\4>]$,1-QgCA2lGVA7f@]4q0V23+=[-+?X0o2.L0/A77Y24>]$,1d3$E3&b8)4q0V23+=a/+?VVB3&s/34>]$,2Ei6G3&`g+4q0V23+=g1+?VVB3AWi.4>]$,3''JHI3&b8"4q0V23+=m3+?X0o2.L0/An=.84>]$,@6Per1c8i%4q0V23+?>\+?VVB@V%_44>]$,@m2"tA2lGWA7I>J4q0V23+?D^+?VVB@kg.V4>]$,ANh5!3&b>Y4q0V23+?J`+?VVBA7e"74>]$-0KpUAA2lGWA7IGV4q0V23+F[,+?VVBAMZLZ4>]$-1d3$E3&bDW4q0V23+Fg0+?VVC0f)!&4>]$-2Ei6G3&iZQ4q0V23+Fm2+?VVC11`WY4>]$-3''JHI3&i]L4q0V23+Fs4+?VVC1LiTX4>]$-@6Per1c@%"4q0V23+HD]+?VVC1grQW4>]$-@m2"t3&icT4q0V23+HJ_+?X0o2.U6/0f;-(4>]$-ANh5!A2lGWA7[JP4q0V23+HPa+?VVC2E<r14>]$.0KpUAA2lGWA7[PO4q0V23+Oa-+?VVC2J,,^4>]$.1-QgC3&k>#4q0V23+Og/+?VVC@UhS24>]$.1d3$E3&kD%4q0V23+Om1+?X0o2.U6/3AWi.4>]$.2Ei6G3&kG''4q0V23+Os3+?VVCA2?CY4>]$.3''JHI1c@0F4q0V23+P$5+?VVD0JPa#4>]$.@6PerA2lGWA7dN,4q0V23+QJ^+?VVD1H.K,4>]$.@m2"tA2lGWA7dSQ4q0V23+QP`+?VVD1bq6(4>]$.ANh5!3&rfQ4q0V23+QVb+?VVD1c[`/4>]$/0KpUAA2lGWA7d\S4q0V23+Xg.+?VVD2DRH*4>]$/1-QgC3&rrY4q0V23+Xm0+?VVD3A<W+4>]$/1d3$E3&s!24q0V23+Xs2+?VVD@PBtT4>]$/2Ei6G3&tG,4q0V23+Y$4+?VVDA2la^4>]$/3''JHI3&tPZ4q0V23+Y*6+?VJ=@50qT4>]$/@6Per3&tS,4q0V23+ZP_+?VVDAn4(74>]$/@m2"t3&tS_4q0V23+ZVa+?VJ=@:h\44>]$/ANh5!3+4Nr4q0V23+Z\c+?VVl0f2''''4>]$00KpUAA2lGXA7RYW4q0V23+am/+?VVl1,1s%4>]$01-QgC3+4U#4q0V23+as1+?VVl1M&`Z4>]$01d3$E3+4X$4q0V23+b$3+?VVl1h8cZ4>]$02Ei6G3+4[(4q0V23+b*5+?VVl@:_V34>]$03''JHI3+4g$4q0V23+b07+?VVl@Q-I[4>]$0@6Per3+6>V4q0V23+cV`+?VVlAn+"64>]$0@m2"tA2lGXA7[_W4q0V23+c\b+?VVm0O[-S4>]$0ANh5!3+=R!4q0V23+cbd+?VVm0P!?V4>]&P0KpUA3+=UP4q0V23A<0O+?VVm11WQX4>]&P1-QgC1cI*u4q0V23A<6Q+?VVm2).9(4>]&P1d3$E3+=aV4q0V23A<<S+?VVm2`<i/4>]&P2Ei6G3+=j%4q0V23A<BU+?VVm3+>&\4>]&P@6Per3+Fa)4q0V23A=o++?X0o2.^<1@P^1W4>]&P@m2"t3+FaT4q0V23A=u-+?X0o2.^<1@V%_44>]&PANh5!A2lGXA7f=14q0V23A>&/+?VVn1c7H+4>]&Q0KpUA3+FdW4q0V23AE6P+?VVn2)d].4>]&Q1-QgC3+Fj,4q0V23AE<R+?VVn2Inu\4>]&Q1d3$EA2lGYA7K(.4q0V23AEBT+?VVn3AWi.4>]&Q2Ei6G3+Fs(4q0V23AEHV+?VVn3B9844>]&Q3''JHI1cI<L4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI-0f_E?4?-h2@Qk5`1c[:!4s2sI@q7J]%6QI-0k*<h4?-h]2*MI31c[:#4s2su3&P;YA77/U%6QI-0k<Hj4?-h_0g6%/1c[:%4s2su3&P;YAMGl&%6QI-0kNTl4?-k*3Bdm71c[<F4s2sIA2%RY%6QI-1,1s84?-k]3''Id61c[<H4s2sIA7R\a%6QI-1,D*:4?-n+@m1>a1c[<J4s2sE2eHSa%6QI-1,V6<4?-k`A3LGb1c[<L4s2sIAM?#+%6QI-1,hB>4CgE00P"ZQ@6P,_1c[<N4s2sIAMH#*%6QI-1-%N@4?-n,2EhR41c[=$4s2sIAMQ2.%6QI-11WQk4CgE00P"[&@Qk5`1c[=&4s2sE3&*<T%6QI-11i]m4?-n.2EhR41c[?G4s2sIAMZ>1%6QI-1GM''94?-n01d2@21c[?I4s2sIAMu;-%6QI-1G_3;4?-n1A3LGb1c[?K4s2sIAN"-a%6QI-1Gq?=4?-n43''Id61c[?M4s2sIAN=<c%6QI-1H.K?4?-n]2*MI31c[?O4s2sIAR]+4%6QI-1H@WA4CgE00P"`S1-Q.01c[@#4s2sE3&G21%6QI-1L`Nj4CgE00P"a,1Hl711c[@%4s2sIAhYo&%6QI-1LrZl4?-q,3''Id61c[@''4s2sIAhmgZ%6QI-1M/fn4?-q00Koq.1c[BH4s2sIAi*p[%6QI-1bh0:4?-q13''Id61c[BJ4s2su3&WL%@k_CV%6QI-1c%<<4?-q]1d2@21c[BL4s2sIAn!S\%6QI-1c7H>4CgE00k=cO2*MI31c[BN4s2sIAn*PZ%6QI-1cIT@4?-q_2EhR41c[BP4s2t"@59Z''%6QI-1c[`B4?-q_@6P,_1c[C$4s2sIAn,@8%6QI-1h&Wk4?-q`1Hl711c[C&4s2sIAn3b_%6QI-1h8cm4?-qb0g6%/1c[C(4s2sIAnEna%6QI-1hJoo4?-qb@Qk5`1c[EI4s2sJ0JI!#%6QI-2).9;4?5)O2a.[51c[EK4s2su3&WL%A2[m\%6QI-2)@E=4?5)P1Hl711c[EM4s2sJ0K!B)%6QI-2)d]A4?5)T2*MI31c[EQ4s2sJ0K<Q+%6QI-2*!iC4?5)U0Koq.1c[F%4s2sJ0OZ\"%6QI-2.A`l4>]$,2*MI31c[F''4s2sJ0Oc_"%6QI-2.Sln4?5*)2EhR41c[F)4s2sJ0Oln&%6QI-2.f#p4?5**3''Id61c[HJ4s2su3&WL%ARm_`%6QI-2DIB<4?5*+@m1>a1c[HL4s2sJ0P"cZ%6QI-2D[N>4CgE00k=j-@6P,_1c[HN4s2sJ0P34,%6QI-2DmZ@4?5*-1-Q.01c[HP4s2sJ0eb:F%6QI-2E*fB4?5*,@Qk5`1c[I&4s2sJ0ebFJ%6QI-2I\im4?5,M2EhR41c[I(4s2sJ0ekXO%6QI-2Inuo4?5,NANgPc1c[I*4s2sJ0f(aP%6QI-2J,,q4?5,P3Bdm71c[KM4s2sJ0f:mR%6QI-2`!W?4?5,R3Bdm71c[KO4s2sJ0fLpQ%6QI-2`3cA4?5,T3Bdm71c[KQ4s2sJ0fV$S%6QI-2`EoC4?5-*1Hl711c[KS4s2sJ0k*%)%6QI-2e"rn4CgE011XoP3Bdm71c[L)4s2su3&WO&A2H2.%6QI-2e5)p4?5--@m1>a1c[L+4s2sJ1,(FH%6QI-3&*T>4CgE011XoR@Qk5`1c[NN4s2sJ1,LaM%6QI-3&<`@4?5/R@6P,_1c[NP4s2sJ1,UsR%6QI-3&NlB4?5/T0g6%/1c[NR4s2sJ1,_!R%6QI-3&a#D4?5/T3''Id61c[NT4s2su3&WO&A2lP4%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>]&X@Qkns3ANO*4q0V23B1M4+?VY>3&s/34>]&XA3M+u3ANR)4q0V23B1S6+?VY>3B'',24>]&XAj.>"3ANTT4q0V23B8cW+?VY>3G(Ga4>]&Y0g6^B3AP#P4q0V23B8o[+?VY>@PU+V4>]&Y2a/?H3AP)&4q0V23B9&_+?VY>@q@h54>]&Y3BeQJ3AP/''4q0V23B:M3+?VY?0ekj$4>]&Y@QknsA2lJ&A7[K,4q0V23B:S5+?X0o2DSfS1-%N-4>]&YA3M+u3AP2*4q0V23B:Y7+?VY?1-%N-4>]&YAj.>"A2lJ&A7[\S4q0V23FOU*+?X0o2DSfS1c%<)4>]'',0g6^B3AWNI4q0V23FO[,+?VY?2.8ZX4>]'',1HlpD3AWR&4q0V23FOa.+?VY?2_dK*4>]'',2*N-F3AWTM4q0V23FOg0+?VY?@50qT4>]'',2a/?HA2lJ&A7[b]4q0V23FOm2+?X0o2DSfS@q7b44>]'',3BeQJ3AWWS4q0V23FQ>[+?VY?3+>&\4>]'',@Qkns3AWX,4q0V23FQD]+?VY?3FtA`4>]'',A3M+u3AY8)4q0V23FQJ_+?X0o2DSfSAMcR[4>]'',Aj.>"A2lJ&A7]:^4q0V23FX[++?VY?AhcIY4>]''-0g6^B3AY/(4q0V23FXa-+?VY?A7Ie44>]''-1HlpD3AY5*4q0V23FXg/+?VY@0KD<+4>]''-2a/?H3AY8V4q0V23FXs3+?VY@1GV-''4>]''-3BeQJ3A`O$4q0V23FZD\+?X0o2DSfT@kg.V4>]''-@QknsA2lJ&A7fCb4q0V23FZJ^+?VY@2Inu\4>]''-A3M+u3A`X+4q0V23FZP`+?VYA2`X&24>]''-Aj.>"3AicS4q0V23Fag.+?X0o2D\lS0ebd#4>]''.1HlpDA2lJ''A7RVR4q0V23Fam0+?VYA@lQX]4>]''.2*N-FA2lJ''A7T:]4q0V23Fas2+?X0o2D\lT0kNTY4>]''.2a/?H3ArX&4q0V23FcJ]+?X0o2D\lT1H%E+4>]''.@Qkns3Ar[''4q0V23FcP_+?VYB2DIB)4>]''.A3M+uA2lJ''A7[_\4q0V23FcVa+?VYB3&3Z,4>]''.Aj.>"A2lJ''A7]=]4q0V23Fjg-+?VYB3FP)\4>]''/0g6^BA2lJ''A7dVQ4q0V23Fjm/+?VJ@AN)d^4>]''/1HlpD3At>&4q0V23Fjs1+?VYB@UVG04>]''/2*N-F3At>W4q0V23Fk$3+?VJ@Ammk44>]''/2a/?HA2lJ''A7fF54q0V23Fk*5+?VYBA2la^4>]''/3BeQJ3AtDV4q0V23FlP^+?VYBA7Rk54>]''/@Qkns1gr''p4q0V23FlV`+?VYC0f2''''4>]''/A3M+u3B&]L4q0V23Fl\b+?VJh1-%N-4>]''/Aj.>"3B&`P4q0V23Fsm.+?VYC1bh0''4>]''00g6^B3B&cR4q0V23Fss0+?VYC2)d].4>]''01HlpD3B&g)4q0V23Ft$2+?VYC2IScY4>]''02*N-FA2lJ(A7]1''4q0V23Ft*4+?X0o2DerU@PL%U4>]''02a/?H3B&rV4q0V23Ft06+?VYC3FtA`4>]''0@Qkns3B(DY4q0V23Fu\a+?VYC@q.\34>]''0A3M+u3B(J''4q0V23Fubc+?VYCA2HIZ4>]''0Aj.>"3B(J.4q0V23G''s/+?VYCAMH@X4>]''10g6^B3B(P)4q0V23G($1+?VYD0Jks&4>]''11HlpD3B/^''4q0V23G(*3+?VYD0f2''''4>]''12*N-F3B/`O4q0V23G(05+?VJh@UhS24>]''12a/?HA2lJ)A7IVR4q0V23G)\`+?VYD1,V6)4>]''1@Qkns3B/iS4q0V23G)bb+?VYD2E!`.ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1c]/Y4s2sJ3+68[%6QI-An=.K4?5B0A3LGb1c]/[4s2sJ3+=R*%6QIU0JG[54CgE02.U6-Aj-Yd1gr''m4s2sJ3+=g1%6QIU0Jks94?5B21-Q.01gr''q4s2sJ3+Fm2%6QIU0K)*;4?5B2@Qk5`1gr''s4s2sJ3+Xg.%6QIU0K;6=4?5B41Hl711gr''u4s2sJ3+ZM^%6QIU0Om9h4?5B51Hl711gr(K4s2sJ3A<EV%6QIU0P*Ej4>^M''@Qk5`1gr(M4s2su3&WX)AS*V[%6QIU0etp84CgE02.U;R3Bdm71gr*s4s2su3&WX)Ai28+%6QIU0fM9=4?5DX0g6%/1gr+J4s2sJ3A`HS%6QIU0k3Bi4?5DY2EhR41gr+L4s2sJ3Ab;2%6QIU0kENk4?5D[0Koq.1gr+N4s2sJ3FO^-%6QIU1,(m74?5E12EhR41gr-o4s2sJ3FZM_%6QIU1,;$94?5E2Aj-Yd1gr-q4s2sJ3Faj/%6QIU1,M0;4?5E41d2@21gr-s4s2sJ3Fk-6%6QIU1,_<=4?5E4ANgPc1gr-u4s2su3&W[*@q.D\%6QIU1,qH?4?5E60Koq.1gr."4s2sJ3G(98%6QIU11<?h4?5E6@m1>a1gr.K4s2sJ@5)+R%6QIU11NKj4?6h)0g6%/1gr.M4s2sJ@521S%6QIU11`Wl4?6h*0Koq.1gr.O4s2sJ@5BW%%6QIU1GD!84?6h,1d2@21gr0p4s2sJ@5MIX%6QIU1GV-:4?6h-3''Id61gr0r4s2sE@Uh/W%6QIU1Gh9<4?6hYAj-Yd1gr0t4s2sE@Uih1%6QIU1H%E>4?6hZ2a.[51gr1!4s2sE@Uq5X%6QIU1H7Q@4?6hZ3Bdm71gr1#4s2su3&W[*AN)A.%6QIU1LWHi4?6h[2EhR41gr1L4s2sJ@:V&U%6QIU1LiTk4?6h\1-Q.01gr1N4s2sJ@:V5Z%6QIU1M&`m4?6h]0Koq.1gr1P4s2sJ@:_;[%6QIU1b_*94?6h]3Bdm71gr3q4s2sJ@PD:U%6QIU1bq6;4?6k*0Koq.1gr3s4s2sJ@PKW%%6QIU1c.B=4?6k*2EhR41gr3u4s2sJ@PM@V%6QIU1c@N?4?6k+@Qk5`1gr4"4s2sJ@P_OY%6QIU1cRZA4>^P''0Koq.1gr4$4s2sJ@PhOX%6QIU1grQj4?6k/1Hl711gr4M4s2sJ@Q$)-%6QIU2)%3:4?6kZ2EhR41gr6r4s2sJ@UWb1%6QIU2)7?<4CgE02e6H0@Qk5`1gr6t4s2sJ@U_)V%6QIU2)IK>4?6k[3''Id61gr7!4s2sJ@U`n4%6QIU2)[W@4?6k_1Hl711gr7#4s2sJ@UqG^%6QIU2)mcB4?6k]A3LGb1gr7%4s2sJ@V&t3%6QIU2.8Zk4?6k^Aj-Yd1gr7N4s2sJ@V''+7%6QIU2.Jfm4CgE02e6JS2*MI31gr7P4s2su3&W^+AN4*^%6QIU2.\ro4CgE02e6JV3Bdm71gr7R4s2sJ@kfl*%6QIU2D[N>4?6n+A3LGb1gr:!4s2sJ@kof''%6QIU2DmZ@4?6n,3Bdm71gr:#4s2su3&W^+ARdP\%6QIU2E*fB4?6n-0g6%/1gr:%4s2sJ@l$&-%6QIU2E<rD4?6n.2*MI31gr:N4s2sJ@l7a[%6QIU2I\im4CgE02e6K23Bdm71gr:R4s2su3&W^+ARo76%6QIU2J,,q4?6n/1d2@21gr<s4s2sJ@l650%6QIU2_dK=4?6n/@Qk5`1gr<u4s2sJ@l7d\%6QIU2`!W?4?6n/Aj-Yd1gr=''4s2sJ@lH/,%6QIU2dnlm4?6n12*MI\DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f@5hXZ+?VYo2dnlZ4>^J*@m2"t3FcVY4q0V2@5h^\+?VYoAhlOZ4>^J*ANh5!3FjgQ4q0V2@5hd^+?X0o2E,/YA2c[]4>^J+0KpUA3Fjj!4q0V2@5p&,+?X0o2E55W11i]Z4>^J+1d3$E1h1#P4q0V2@5p,.+?X0o2E55W0k!6T4>^J+2Ei6G3Fjp$4q0V2@5p20+?VJjA2-7W4>^J+3''JHI3FjsT4q0V2@5p82+?VYp2.f#]4>^J+@6Per3Fk$''4q0V2@5q^[+?X0o2E55WAiW$a4>^J+@m2"tA2lJ,A7ISS4q0V2@5qd]+?VYp2`!W,4>^J,0KpUA3Fk*+4q0V2@6$&++?VYp3B9844>^J,1-QgC3FlPQ4q0V2@6$,-+?VYp@V.e54>^J,1d3$E3FlSV4q0V2@6$2/+?VYp@Q?U]4>^J,2Ei6G3FlT04q0V2@6$81+?VYp@lZ^^4>^J,3''JHI3FlZ/4q0V2@6$>3+?VYpAM?:W4>^J,@6Per3Fl\W4q0V2@6%d\+?VJk0K20)4>^J,@m2"t3FsmQ4q0V2@6%j^+?VYq0JYg$4>^J,ANh5!3FsmT4q0V2@6%p`+?VYq0k3BV4>^JT0KpUA3Ft-Y4q0V2@::lS+?X0o1cT#W0fV?+4>^JT1-QgC3Ft0(4q0V2@::rU+?VYq3&Nl/4>^JT1d3$E3Ft3[4q0V2@:;#W+?X0o2E55Z3+G,]4>^JT2Ei6G3FuZ14q0V2@:;)Y+?X0o2E>;X1H.K,4>^JT3''JHI3Fu`54q0V2@:;/[+?VYqAnF494>^JT@6Per3G''s#4q0V2@:<V/+?VJk2`Eo04>^JT@m2"t3G''s$4q0V2@:<\1+?VYr1LWHV4>^JTANh5!3G(''X4q0V2@:<b3+?VYr1c@N,4>^JU0KpUA3G(-)4q0V2@:CrT+?VYr2)RQ,4>^JU1-QgC3G(-.4q0V2@:D#V+?X0o2E>;YAhcIY4>^JU1d3$E3G(-Z4q0V2@:D)X+?X0o2E>;Z0JYg$4>^JU2Ei6G3G(004q0V2@:D/Z+?VYr2Inu\4>^JU3''JHI3G(3(4q0V2@:D5\+?X0o2E>;Z@PU+V4>^JU@6Per11am(4q0V2@:E\0+?VG<0f2''''4>^JU@m2"t1H8fR4q0V2@:Eb2+?VGj@q.\34>^JUANh5!1M10-4q0V2@:Eh4+?VJ<@V%_44>^JV0KpUA1c@''B4q0V2@:M#U+?VJi2e>/^4>^JV1-QgC1h/=$4q0V2@:M)W+?VJjAMH@X4>^JV1d3$E1hA@N4q0V2@:M5[+?VJl2`X&24>^JV3''JHI1hC8T4q0V2@:M;]+?VJm0Om9U4>^JV@6Per1hJI&4q0V2@:Nb1+?VJm11EEV4>^JV@m2"t1hJLS4q0V2@:Nh3+?VJm1GM''&4>^JVANh5!1hJ^(4q0V2@:Nn5+?VJm3FtA`4>^JW0KpUA1hL2U4q0V2@:V)V+?VM80Jks&4>^JW1-QgC2)$^o4q0V2@:V/X+?VM81h/]Y4>^JW1d3$E2)$n"4q0V2@:V5Z+?VM82DRH*4>^JW2Ei6G2)$sJ4q0V2@:V;\+?VM83+Y8_4>^JW3''JHI2)%%%4q0V2@:VA^+?VM8@5:"U4>^JW@6Per2)&Mr4q0V2@:Wh2+?VM8AN2j_4>^JW@m2"t2)&Vs4q0V2@:Wn4+?VM8An=.84>^JWANh5!2)-dD4q0V2@:_2X+?VM91G_3(4>^JX1HlpD2)-mH4q0V2@:_8Z+?VM92`*]-4>^JX2*N-F2).''I4q0V2@:_>\+?VM9@Q6O\4>^JX2a/?H2)/QK4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QIUAN2jr4>ej''3''Id61gsrU4s2sF0k4fZ%6QIUARRbF4>ej(0g6%/1gss+4s2sF0k<7-%6QIUAS"%J4>ej(Aj-Yd1gss-4s2sF1,(RL%6QIUAhZCk4>elL2EhR41gsuN4s2sF1,:gQ%6QIUAhlOm4>elL@Qk5`1gsuR4s2sF1,CdO%6QIUAi;gq4>elM@m1>a1gsuT4s2sF1,WK(%6QIUAiMss4>elP0Koq.1gsuV4s2sF1,`]-%6QIUAn+"I4>elR@6P,_1gt!,4s2sF1,rc-%6QIUAn=.K4>em*0g6%/1gt!.4s2sF11`I0%6QIV0JG[54>em+0g6%/1h&-n4s2sF1GCUK%6QIV0JYg74>eoL0g6%/1h&-p4s2sF1GNK*%6QIV0Jks94>eoMA3LGb1h&-r4s2sF1G^dM%6QIV0K)*;4>eoNA3LGb1h&-t4s2sF1H%*S%6QIV0K;6=4>eoQA3LGb1h&.!4s2sF1H.<X%6QIV0O[-f4>eoRANgPc1h&.J4s2sF1H@9U%6QIV0Om9h4>eoT3Bdm71h&.L4s2sF1LX]U%6QIV0P*Ej4>ep''Aj-Yd1h&.N4s2sF1LacV%6QIV0ebd64>ep)0g6%/1h&0q4s2sF1M&7(%6QIV0f2'':4>erM1Hl711h&0s4s2sF1brK''%6QIV0fD3<4>erO0g6%/1h&1"4s2sF1c/]+%6QIV0k!6g4>es(2a.[51h&1K4s2sF1gsfV%6QIV0k3Bi4>es)0g6%/1h&1M4s2sF1h''oX%6QIV0kENk4>es*ANgPc1h&1O4s2sF1hC)Z%6QIV1,(m74>es-@m1>a1h&3p4s2sF2)$mO%6QIV1,;$94>euM3''Id61h&3r4s2sF2)-sP%6QIV1,M0;4>euO2a.[51h&3t4s2sF2)8T(%6QIV1,_<=4>euP2EhR41h&4!4s2sF2)R*P%6QIV1,qH?4>euS2EhR41h&4#4s2sF2)o23%6QIV11<?h4>euV1-Q.01h&4L4s2sF2*!KW%6QIV11NKj4>f!)1d2@21h&4N4s2sF2.A=)%6QIV11`Wl4>f!+1Hl711h&4P4s2sF2.JO.%6QIV1GD!84>f!,1Hl711h&6q4s2sF2.U/[%6QIV1GV-:4>f!-@m1>a1h&6s4s2sF2.^>_%6QIV1Gh9<4>f!.0g6%/1h&6u4s2sF2.ea1%6QIV1H%E>4>f!.3''Id61h&7"4s2sF2D@!P%6QIV1H7Q@4>f#NA3LGb1h&7M4s2sF2DSc+%6QIV1LiTk4>f#Q2*MI31h&7O4s2sF2D[?W%6QIV1M&`m4>f#RA3LGb1h&7Q4s2sF2Dm<T%6QIV1b_*94>f#V2*MI31h&9r4s2sF2E>A5%6QIV1bq6;4>f$*2EhR41h&9t4s2sF2I\U/%6QIV1c.B=4>f$,@m1>a1h&:!4s2sF2Ig>_%6QIV1c@N?4>f$-3Bdm71h&:#4s2sF2J"U,%6QIV1cRZA4>f$.@Qk5`1h&:%4s2sF2J$D_%6QIV1grQj4>f$/0g6%/1h&:N4s2sF2_[0S%6QIV1h/]l4>f&O@m1>a1h&:R4s2sF2_ei,%6QIV2)%3:4>f&Q@m1>a1h&<s4s2sF2_nr.%6QIV2)IK>4>f&TAj-Yd1h&="4s2sF2`>,/%6QIV2)[W@4>f&UA3LGb1h&=$4s2sF2`G//%6QIV2)mcB4>f&W1Hl711h&=&4s2sF2`Wf\%6QIV2.8Zk4>f''+ANgPc1h&=O4s2sF2e4d0%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>^M)@m2"t2)f)*4q0V2@Pq[[+?VM@0P!?V4>^M)ANh5!2)m?L4q0V2@Pqa]+?VM@1h8cZ4>^M*0KpUA2)mF)4q0V2@Q#r)+?VM@2.f#]4>^M*1-QgC2)mL)4q0V2@Q$#++?VM@2eG5_4>^M*1d3$E2)mQM4q0V2@Q$)-+?VM@3B0234>^M*2Ei6G2)o&T4q0V2@Q$//+?VMA0kNTY4>^M*3''JHI2*!EJ4q0V2@Q$51+?VMA2*!i04>^M*@6Per2*!TU4q0V2@Q%[Z+?VMA3B'',24>^M*@m2"t2*#)W4q0V2@Q%a\+?VMA@P^1W4>^M*ANh5!2*#2Z4q0V2@Q%g^+?VMAAhcIY4>^M+0KpUA2*#8.4q0V2@Q-#*+?VMi@PU+V4>^M+1-QgC2.9rR4q0V2@Q-),+?VMiARRb34>^M+1d3$E2.:)T4q0V2@Q-/.+?VMj0k*<U4>^M+2Ei6G2.A:N4q0V2@Q-50+?VMj1,1s%4>^M+3''JHI2.A@$4q0V2@Q-;2+?VMj@Q-I[4>^M+@6Per2.C)T4q0V2@Q.a[+?VMjAM?:W4>^M+@m2"t2.J@Q4q0V2@Q.g]+?VMk11<?U4>^M+ANh5!2.JCO4q0V2@Q.m_+?VMk1H%E+4>^M,0KpUA2.JL(4q0V2@Q6)++?VMk2.JfZ4>^M,1-QgC2.JOT4q0V2@Q6/-+?VMkA7Rk54>^M,1d3$E2.SBq4q0V2@Q65/+?VMl1Gh9)4>^M,2Ei6G2.SLR4q0V2@Q6;1+?VMl2*!i04>^M,3''JHI2.SXW4q0V2@Q6A3+?VMl3&<`-4>^M,@6Per2.U2U4q0V2@Q7g\+?VMlAiW$a4>^M,@m2"t2.\O&4q0V2@Q7m^+?VMm1GV-''4>^M,ANh5!2.\R$4q0V2@Q7s`+?VMm2.A`Y4>^M-0KpUA2.\[*4q0V2@Q?/,+?VMm2IScY4>^M-1-QgC2.\^*4q0V2@Q?5.+?VMm3&!N*4>^M-1d3$E2.\aV4q0V2@Q?;0+?VMm@P^1W4>^M-2Ei6G2.^6-4q0V2@Q?A2+?VMmA2-7W4>^M-@6Per2.e[U4q0V2@Q@m]+?VMn@:MJ14>^M-@m2"t2.gE.4q0V2@Q@s_+?VP90K20)4>^M-ANh5!2D?sJ4q0V2@QA$a+?VP92)IK+4>^MU0KpUA2D@$J4q0V2@UUuT+?VP9@U_M14>^MU1-QgC2DAVt4q0V2@UV&V+?VP9An4(74>^MU1d3$E2DHmo4q0V2@UV,X+?VP:0fD3)4>^MU2Ei6G2DHsq4q0V2@UV2Z+?VP:1H%E+4>^MU3''JHI2DI(#4q0V2@UV8\+?VP:2DdT,4>^MU@6Per2DI."4q0V2@UW_0+?VP:2e5)]4>^MU@m2"t2DI.&4q0V2@UWe2+?VP:3Fk;_4>^MUANh5!2DJZ#4q0V2@UWk4+?VP:A7Ie44>^MV0KpUA2DJbu4q0V2@U_&U+?VP:AMlX\4>^MV1-QgC2DJc&4q0V2@U_,W+?VP;0Jks&4>^MV1d3$E2DQsF4q0V2@U_2Y+?VP;1GM''&4>^MV2Ei6G2DR''K4q0V2@U_8[+?VP;1LrZY4>^MV3''JHI2DR4"4q0V2@U_>]+?VP;3A<W+4>^MV@6Per2DS]#4q0V2@U`e1+?VP;A77Y24>^MV@m2"t2DSl$4q0V2@U`k3+?VP<0fD3)4>^MVANh5!2D[*s4q0V2@U`q5+?VP<1H%E+4>^MW0KpUA2D[0J4q0V2@Uh,V+?VP<1h&WXASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1h''rM4s2sG1GpsP%6QIV@l$:k4>nuS0g6%/1h''rO4s2sG1H.0T%6QIV@l6Fm4>nuSAj-Yd1h''rQ4s2sG1H7-R%6QIV@lHRo4>nuT@6P,_1h''s''4s2sG1M''uY%6QIV@q7bG4>o#N1-Q.01h''s+4s2sG1bgsR%6QIV@qInI4>o#O0Koq.1h''uL4s2sG1bpmO%6QIVA2-7j4>o#O@6P,_1h''uN4s2sG1c%!Q%6QIVA2?Cl4>o#PA3LGb1h''uP4s2sG1c&`-%6QIVA2QOn4>o#R1-Q.01h''uR4s2sG1c8l/%6QIVA2c[p4>o#T1d2@21h''uT4s2sG1c[6R%6QIVA7@_F4>o$)@m1>a1h(!*4s2sG1h&7)%6QIVA7RkH4>o$-A3LGb1h(!,4s2sG1hJF*%6QIVA7e"J4>o&O@Qk5`1h(#M4s2sG2)/],%6QIVAMH@k4>o&PANgPc1h(#O4s2sG2)I<W%6QIVAMZLm4>o&T0Koq.1h(#Q4s2sG2*!EU%6QIVAMlXo4>o&W2*MI31h(#S4s2sG2.AC+%6QIVAN)dq4>o''+ANgPc1h(#U4s2sG2.JU0%6QIVAN;ps4>o'',ANgPc1h($)4s2sG2.SC)%6QIVAR[hG4>o''-Aj-Yd1h($+4s2sG2E,22%6QIVAS++K4>o*,1Hl711h(&N4s2sG2IeF)%6QIVAhcIl4>o*-Aj-Yd1h(&P4s2sG2_m6S%6QIVAhuUn4>o,S2*MI31h(&R4s2sG2`3HV%6QIVAi2ap4>o,X0Koq.1h(&T4s2sG2`PD5%6QIVAiDmr4>o,Y0g6%/1h(&V4s2sG2dnO,%6QIVAiW$t4>o--0g6%/1h(''*4s2sG2e"X.%6QIVAn!qH4>o--ANgPc1h('',4s2sG3&3HW%6QIVAn4(J4>o/Y2EhR41h(''.4s2sG3+ZP_%6QIVAnF4L4>o022*MI31h/3n4s2sG3AEHV%6QIW0JPa64>o2U1Hl711h/3p4s2sG3AWWY%6QIW0Jbm84>o2W@Qk5`1h/3r4s2sG3Ar`Y%6QIW0Ju$:4>o3.3''Id61h/3t4s2sG3FQA\%6QIW0K20<4>o3.Aj-Yd1h/4!4s2sG3Ft''3%6QIW0KD<>4>o330g6%/1h/4J4s2sG@5MCV%6QIW0Od3g4>pV*2*MI31h/4L4s2sG@5^&.%6QIW0P!?i4>pV,0g6%/1h/4N4s2sG@:<b3%6QIW0ekj74>pY&1Hl711h/6q4s2sG@P_IW%6QIW0f)!94>pY)Aj-Yd1h/6u4s2sG@U_#T%6QIW0fM9=4>pY\2a.[51h/7"4s2sG@V.Va%6QIW0f_E?4>p\''1d2@21h/7K4s2sG@k]o,%6QIW0k*<h4>p\''A3LGb1h/7M4s2sG@kqOX%6QIW0k<Hj4>p\+@6P,_1h/7O4s2sG@l6#*%6QIW0kNTl4>p\,1d2@21h/9p4s2sG@lHD3%6QIW1,1s84>p\X@m1>a1h/9r4s2sG@q%8Y%6QIW1,D*:4>p\[1-Q.01h/9t4s2sGA2Z/+%6QIW1,V6<4>p_/@m1>a1h/:!4s2sGA7@P_%6QIW1,hB>4>p_^0Koq.1h/:#4s2sGAMc8.%6QIW1-%N@4>pb01Hl711h/:L4s2sGAN+''^%6QIW11EEi4>pb0A3LGb1h/:N4s2sGAN2\6%6QIW11WQk4>pb[@m1>a1h/<q4s2sGAhl8.%6QIW1GM''94>pe,3Bdm71h/<s4s2sGAhu,)%6QIW1G_3;4>pe22a.[^DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f@l#r*+?VPo3Fk;_4>^P(2*N-F2J-B/4q0V2@l$#,+?VPo@Q-I[4>^P(2a/?H2_Zpr4q0V2@l$).+?VS:1,(m$4>^P(3BeQJ2_[''K4q0V2@l%OW+?VS:3B0234>^P(@Qkns2_\\p4q0V2@l%[[+?VS;1c7H+4>^P(Aj.>"2_ebs4q0V2@l,l''+?VS;Ai)[\4>^P)0g6^B2_m*H4q0V2@l,r)+?VS<0kNTY4>^P)1HlpD2_m3G4q0V2@l-)-+?VS<2.8ZX4>^P)2a/?H2_m9F4q0V2@l-//+?VS<2E3l04>^P)3BeQJ2_m<N4q0V2@l.UX+?VS<3&Ef.4>^P)@Qkns2_nl''4q0V2@l.[Z+?VS<AMlX\4>^P)A3M+u2_nu%4q0V2@l.a\+?VS=0JYg$4>^P)Aj.>"2`!-s4q0V2@l5r(+?VS=0kENX4>^P*0g6^B2`!3E4q0V2@l6),+?VS=1h8cZ4>^P*2*N-F2`!<N4q0V2@l6/.+?VS=2E*f/4>^P*2a/?H2`*HK4q0V2@l650+?VS>@:h\44>^P*3BeQJ2`,&W4q0V2@l7[Y+?VS>AMcR[4>^P*@Qkns2`,,''4q0V2@l7a[+?VS>An!q54>^P*A3M+u2`3<J4q0V2@l7g]+?VS?1,1s%4>^P*Aj.>"2`3C''4q0V2@l?#)+?VS?2.\r\4>^P+0g6^B2`3TU4q0V2@l?)++?VS?@5L.W4>^P+1HlpD2`5)"4q0V2@l?/-+?VS?@l-@Y4>^P+2*N-F2`5)T4q0V2@l?5/+?VS?A2c[]4>^P+2a/?H2`5,U4q0V2@l?;1+?VS?AMH@X4>^P+3BeQJ2`5/Y4q0V2@l@aZ+?VS@0Jks&4>^P+@Qkns2`<@"4q0V2@l@g\+?VS@0k<HW4>^P+A3M+u2`<HI4q0V2@l@m^+?VS@1H7Q-4>^P+Aj.>"2`<KM4q0V2@lH)*+?VS@1grQW4>^P,0g6^B2`<O*4q0V2@lH/,+?VS@@:VP24>^P,1HlpD2`>,U4q0V2@lH5.+?VS@A2ug_4>^P,2*N-F2`>5V4q0V2@lH;0+?VS@AhZCX4>^P,2a/?H2`>8.4q0V2@lHA2+?VSA0JG["4>^P,3BeQJ2`EF%4q0V2@lIg[+?VSA1,;$&4>^P,@Qkns2`EKO4q0V2@lIm]+?VSA11i]Z4>^P,A3M+u2`ENQ4q0V2@lIs_+?VSA1M&`Z4>^P,Aj.>"2`EQN4q0V2@lQ/++?VSA1grQW4>^P-0g6^B2`ER*4q0V2@lQ5-+?VSA2.\r\4>^P-1HlpD2`EWO4q0V2@lQ;/+?VSA2E*f/4>^P-2*N-F2`EX)4q0V2@lQA1+?VSA3&Ef.4>^P-3BeQJ2`E`T4q0V2@lRm\+?VSA@5g@Z4>^P-@Qkns2`G/W4q0V2@lRs^+?VSA@Q-I[4>^P-A3M+u2`G2W4q0V2@lS$`+?VSA@lZ^^4>^P-Aj.>"2`G8%4q0V2@lZ5,+?VSAA2ug_4>^P.0g6^B2`G>''4q0V2@lZ;.+?VSB1H.K,4>^P.1HlpD2`N[)4q0V2@lZA0+?VSB2e>/^4>^P.2*N-F2`NfW4q0V2@lZG2+?VSB@50qT4>^P.2a/?H2`P8$4q0V2@lZM4+?VSB@P^1W4>^P.3BeQJ2`P;-4q0V2@l[s]+?VSBA2?CY4>^P.@Qkns2`WR%4q0V2@l\$_+?VSC0kNTY4>^P.Aj.>"2`W[+4q0V2@pq&T+?VSC1bq6(4>^PV0g6^B2`W`P4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QIW@5:"h4?#8Y@Qk5`1h0rM4s2sH3B(G3%6QIW@5L.j4?#9/@Qk5`1h0rO4s2sH3Fam0%6QIW@5^:l4?#93@6P,_1h0rQ4s2sH@5''H#%6QIW@5pFn4?$\&@m1>a1h0rS4s2sH@5BT$%6QIW@:;>B4?$\)@6P,_1h0s''4s2sH@5Kf)%6QIW@:MJD4?$\.0Koq.1h0s)4s2sH@5p//%6QIW@:_VF4?$\/1d2@21h0s+4s2sH@:D)X%6QIW@PBtg4?$\XA3LGb1h0uL4s2sH@:j(7%6QIW@PU+i4?$_)@Qk5`1h0uN4s2sH@Q-50%6QIW@Pg7k4?$_X0Koq.1h0uP4s2sH@UWb1%6QIW@Q$Cm4?$_Y0Koq.1h0uR4s2sH@V%M_%6QIW@Q6Oo4?$_]1-Q.01h0uT4s2sH@V.S`%6QIW@UVGC4?$_]@m1>a1h1!(4s2sH@V018%6QIW@UhSE4?$b(3Bdm71h1!*4s2sH@kp#-%6QIW@V%_G4?$b*Aj-Yd1h1!,4s2sH@l,r)%6QIW@l6Fm4?$b/1-Q.01h1#R4s2sH@lIp^%6QIW@lHRo4?$b02a.[51h1#T4s2sH@l\*a%6QIW@lZ^q4?$bZ@6P,_1h1$(4s2sH@q.G]%6QIW@q%VE4?$b\1Hl711h1$*4s2sH@q9"3%6QIW@q7bG4?$e,@m1>a1h1$,4s2sHA2Ig\%6QIW@qInI4?$e11-Q.01h1&M4s2sHA2lG1%6QIWA2-7j4?$e1A3LGb1h1&O4s2sHA2uA.%6QIWA2?Cl4?$e2ANgPc1h1&Q4s2sHA7@>Y%6QIWA2QOn4?$e[3Bdm71h1&S4s2sHA7RAX%6QIWA2c[p4?$e^2*MI31h1'')4s2sHAMRj]%6QIWA7@_F4?$h-2EhR41h1''+4s2sHAMc5-%6QIWA7RkH4?$h0Aj-Yd1h1''-4s2sHAN)S4%6QIWA7e"J4?$h20g6%/1h1)N4s2sHAi!s]%6QIWAMH@k4?$k0@Qk5`1h1)P4s2sHAi4*_%6QIWAMZLm4?$k12*MI31h1)R4s2sHAiDG.%6QIWAN)dq4?$k3@Qk5`1h1)V4s2sHAmmGY%6QIWARdnH4?,#K2a.[51h1*-4s2sI0JI$$%6QIWAS"%J4?,#LANgPc1h1*/4s2sI0Jb^Q%6QIWAhZCk4?,#S3''Id61h1,P4s2sI0K<W-%6QIWAhlOm4?,$)Aj-Yd1h1,R4s2sI0P!"(%6QIWAi)[o4?,$+A3LGb1h1,T4s2sI0P3"&%6QIWAi;gq4?,$,2a.[51h1,V4s2sI0P4`W%6QIWAiMss4?,$,ANgPc1h1,X4s2sI0ebCI%6QIWAmmkG4?,&M2a.[51h1-,4s2sI0f(LI%6QIWAn+"I4?,&Q2a.[51h1-.4s2sI0fEW-%6QIWAn=.K4?,&S1Hl711h1-04s2sI0fWW+%6QIX0JG[54?,&U0Koq.1h89p4s2sI0f`],%6QIX0JYg74?,&UANgPc1h89r4s2sI0k4ZV%6QIX0Jks94?,''+2*MI31h8:!4s2sI0kE(''%6QIX0K;6=4?,'',Aj-Yd1h8:#4s2sI0kN=-%6QIX0O[-f4?,)M0Koq.1h8:L4s2sI1,*0$%6QIX0P*Ej4?,)N@6P,_1h8:P4s2sI1,E?&%6QIX0ebd64?,)Q1d2@21h8<q4s2sI1,`Z,%6QIX0etp84?,)U1d2@21h8<s4s2sI1,q9X%6QIX0f2'':4?,)V0g6%/1h8<u4s2sI11=TT%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>^S''2Ei6G3&4qs4q0V2A2-#,+?VV=A2$1V4>^S''3''JHI3&5&R4q0V2A2-).+?VV=AS++84>^S''@6Per3&5)(4q0V2A2.OW+?VV>2)[W-4>^S''@m2"t3&<KQ4q0V2A2.UY+?VV>AiMs`4>^S''ANh5!3&>/V4q0V2A2.[[+?VV?2)mc/4>^S(0KpUA3&EWO4q0V2A25l''+?VV?@PL%U4>^S(1-QgC3&G)T4q0V2A25r)+?VV?An!q54>^S(1d3$E3&NNN4q0V2A26#++?VV@2)[W-4>^S(2Ei6G3&NR(4q0V2A26)-+?VV@3&Nl/4>^S(3''JHI3&N]U4q0V2A26//+?VVA1bq6(4>^S(@6Per3&WTO4q0V2A27UX+?VVA@k^(U4>^S(@m2"t3&`QK4q0V2A27[Z+?VVB1,;$&4>^S(ANh5!3&`U(4q0V2A27a\+?VVB1H@W.4>^S)0KpUA3&`^*4q0V2A2>r(+?VVB2e"r[4>^S)1-QgC3&`g,4q0V2A2?#*+?VVB3+Y8_4>^S)2Ei6G3&`j/4q0V2A2?/.+?VVB@5C(V4>^S)3''JHI3&b8W4q0V2A2?50+?VVB@V.e54>^S)@6Per3&b>-4q0V2A2@[Y+?VVBA77Y24>^S)@m2"t3&iWP4q0V2A2@a[+?VVC0k*<U4>^S)ANh5!3&i[(4q0V2A2@g]+?VVC1LWHV4>^S*0KpUA3&i`P4q0V2A2H#)+?VVC1h&WX4>^S*1-QgC3&ia+4q0V2A2H)++?VVC2)RQ,4>^S*1d3$E3&id(4q0V2A2H/-+?VVC2J#&]4>^S*3BeQJ3&kDY4q0V2A2I^Y+?VVCAM?:W4>^S*@Qkns3&kJ]4q0V2A2Ij]+?VVD1,_<*4>^S*Aj.>"3&rcP4q0V2A2Q&)+?VVD2.8ZX4>^S+0g6^B3&rj+4q0V2A2Q,++?VVD2I\iZ4>^S+1HlpD3&roO4q0V2A2Q2-+?VVD2e,#\4>^S+2*N-F3&tD)4q0V2A2Q8/+?VVD@Pp=Y4>^S+2a/?H3&tGX4q0V2A2Q>1+?VVDA2QO[4>^S+3BeQJ3+4X(4q0V2A2RdZ+?VVl2)d].4>^S+@Qkns3+4^(4q0V2A2Rj\+?VVl2e>/^4>^S+A3M+u3+4d)4q0V2A2Rp^+?VVl3As&14>^S+Aj.>"3+68S4q0V2A2Z,*+?VVl@lZ^^4>^S,0g6^B3+6>P4q0V2A2Z2,+?VVlA7Rk54>^S,1HlpD3+6B.4q0V2A2Z8.+?VVlAi2a]4>^S,2*N-F3+=R"4q0V2A2Z>0+?VVm0P3KX4>^S,2a/?H3+=Ts4q0V2A2ZD2+?VVm1c7H+4>^S,3BeQJ3+=a#4q0V2A2[j[+?VVm2Inu\4>^S,@Qkns3+=g+4q0V2A2[p]+?VVm2e,#\4>^S,A3M+u3+=gX4q0V2A2\!_+?VVm3&Nl/4>^S,Aj.>"3+=m[4q0V2A2c2++?VVn1h&WX4>^S-0g6^B3+Fg%4q0V2A2c8-+?VVn2e"r[4>^S-1HlpD3+HE+4q0V2A2c>/+?VVn@l6FZ4>^S-2*N-F3+HGY4q0V2A2cD1+?VVnA26=X4>^S-2a/?H3+HN04q0V2A2cJ3+?VVnAi2a]4>^S-3BeQJ3+HPZ4q0V2A2dp\+?VVo0JPa#4>^S-@Qkns3+O^!4q0V2A2e!^+?VVo0fM9*4>^S-A3M+u3+OaR4q0V2A2e''`+?VVo2J#&]4>^S-Aj.>"3+P$(4q0V2A2l8,+?VVo3G(GaASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1h8R#4s2sIA78q2%6QIX3&3Z?4?-k\1-Q.01h8R%4s2sIA7RP]%6QIX3&EfA4?-k_2a.[51h8R)4s2sIA7dY^%6QIX3&j)E4?-n+0g6%/1h8R+4s2sIAM@RW%6QIX3+4un4?-n-2EhR41h8RT4s2sIAMZ&)%6QIX3+Y8r4?-n/A3LGb1h8RX4s2sIAMe!_%6QIX3A<W>4?-n0@m1>a1h8U$4s2sIAMu8,%6QIX3ANc@4?-n13Bdm71h8U&4s2sIAN)>-%6QIX3A`oB4?-n22*MI31h8U(4s2sIAN)P3%6QIX3As&D4?-n33Bdm71h8U*4s2sIAN;G.%6QIX3B02F4?-n42*MI31h8U,4s2sIAN=0_%6QIX3FP)o4?-n\2a.[51h8UU4s2sIARRS_%6QIX3Fb5q4?-n\A3LGb1h8UW4s2sIAS!hb%6QIX3FtAs4?-na0Koq.1h8UY4s2sIAhZ/-%6QIX@5''kf4?-q-3''Id61h:#L4s2sIAhl5-%6QIX@5:"h4?-q.2a.[51h:#N4s2sIAhmj[%6QIX@5L.j4?-q/2*MI31h:#P4s2sIAi!jZ%6QIX@5^:l4?-q01Hl711h:#R4s2sIAi)G1%6QIX@5pFn4?-q10g6%/1h:#T4s2sIAi2G0%6QIX@:VPE4?-q]2*MI31h:$+4s2sJ0JG=I%6QIX@:h\G4?5)M@Qk5`1h:&L4s2sJ0J[6(%6QIX@PL%h4?5)P@m1>a1h:&N4s2sJ0K!<''%6QIX@P^1j4?5)S0Koq.1h:&P4s2sJ0K1gP%6QIX@Pp=l4?5)S3Bdm71h:&R4s2sJ0K<N*%6QIX@Q-In4?5)U3''Id61h:&T4s2sJ0OZY!%6QIX@Q?Up4?5*)1-Q.01h:''(4s2sJ0OeQV%6QIX@U_MD4?5**3Bdm71h:''*4s2sJ0P3"&%6QIX@UqYF4?5,M2*MI31h:'',4s2sJ0etUM%6QIX@V.eH4?5,R@6P,_1h:)M4s2sJ0fCsS%6QIX@kg.i4?5,T@6P,_1h:)O4s2sJ0fWT*%6QIX@l$:k4?5,V0g6%/1h:)Q4s2sJ0f_*T%6QIX@l6Fm4?5-*0Koq.1h:)S4s2sJ0k+TU%6QIX@lHRo4?5-*A3LGb1h:)U4s2sJ0k2t&%6QIX@lZ^q4?5-+2*MI31h:*)4s2sJ1,(CG%6QIX@q%VE4?5/N3Bdm71h:*+4s2sJ1,:XL%6QIX@q7bG4?5/U2EhR41h:*-4s2sJ1,ri/%6QIX@qInI4?50*Aj-Yd1h:,P4s2sJ11N%&%6QIXA2?Cl4?50,1Hl711h:,R4s2sJ11N1*%6QIXA2QOn4?50,3''Id61h:,T4s2sJ1GL^M%6QIXA2c[p4?52R1Hl711h:,V4s2sJ1G^pQ%6QIXA2ugr4?52T3''Id61h:-*4s2sJ1H/o0%6QIXA7@_F4?52W1-Q.01h:-,4s2sJ1H8f,%6QIXA7RkH4?53,@Qk5`1h:-.4s2sJ1LjoY%6QIXA7e"J4?53/2EhR41h:/O4s2sJ1M/X2%6QIXAMH@k4?55P1-Q.01h:/S4s2sJ1brW+%6QIXAMlXo4?55T@m1>a1h:/U4s2sJ2)mQZ%6QIXAN)dq4?59-0g6%/1h:/W4s2sJ2.C/]%6QIXAN;ps4?59/2EhR41h:0+4s2sJ2.JX1%6QIXARmtI4?5910Koq.1h:0/4s2sJ2.\U.%6QIXAS++K4?5912EhR41h:2P4s2sJ2DR*Q%6QIXAhcIl4?5;U0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,fA7dS\+?VYB1H7Q-4>^S\1HlpD3Ar[(4q0V2A7dY^+?VYB2)IK+4>^S\2*N-F3ArfQ4q0V2A7d_`+?VYB2e"r[4>^S\2a/?H3Arg.4q0V2A7deb+?VYB3&*T+4>^S\3BeQJ3AriQ4q0V2A7f76+?VYB3&s/34>^S\@Qkns3ArlU4q0V2A7f=8+?VYB@:_V34>^S\A3M+u3B&WJ4q0V2A7fC:+?VYC0k*<U4>^S\Aj.>"3B&]J4q0V2AM>f%+?VYC1,;$&4>^V''0g6^B3B&]Q4q0V2AM>l''+?VYC1GM''&4>^V''1HlpD3B&iT4q0V2AM>r)+?VYC2`<i/4>^V''2*N-F3B&m-4q0V2AM?#++?VYC2eG5_4>^V''2a/?H3B&rY4q0V2AM?)-+?VYC3G(Ga4>^V''3BeQJ3B(AV4q0V2AM@OV+?VYC@Q?U]4>^V''@Qkns3B(GY4q0V2AM@UX+?VYCAM?:W4>^V''A3M+u3B(M]4q0V2AM@[Z+?VYD0K20)4>^V''Aj.>"3B/cP4q0V2AMGl&+?VYD11`WY4>^V(1HlpD3B1J)4q0V2AMH#*+?VYD@l6FZ4>^V(2*N-F3B8cK4q0V2AMH),+?VYE0ekj$4>^V(2a/?H3B8fO4q0V2AMH/.+?VYE1Gq?*4>^V(3BeQJ3B8oU4q0V2AMIUW+?VYE2)IK+4>^V(@Qkns3B8s.4q0V2AMI[Y+?VYEAMH@X4>^V(A3M+u3FOUO4q0V2AMIa[+?VYm0ebd#4>^V(Aj.>"3FO[!4q0V2AMPr''+?VYm1bh0''4>^V)0g6^B3FOd"4q0V2AMQ)++?VYn0JPa#4>^V)2*N-F3FX[&4q0V2AMQ/-+?VYn0Od3T4>^V)3BeQJ3FX^''4q0V2AMR[X+?VYn1Gq?*4>^V)@Qkns3FXg)4q0V2AMRaZ+?VYn2)RQ,4>^V)A3M+u3FXm+4q0V2AMRg\+?VYn3&!N*4>^V)Aj.>"3FXs+4q0V2AMZ#(+?VYn3A<W+4>^V*0g6^B3FY!Z4q0V2AMZ)*+?VYn@PBtT4>^V*1HlpD3FZH04q0V2AMZ/,+?VYn@lQX]4>^V*2*N-F3FZT44q0V2AMZ5.+?VYo0JYg$4>^V*2a/?H3FadR4q0V2AMZ;0+?VYo1Gq?*4>^V*3BeQJ3Fam&4q0V2AM[aY+?VYo2)[W-4>^V*@Qkns3Fas%4q0V2AM[g[+?VYo2E3l04>^V*A3M+u3Fjp"4q0V2AM[m]+?VYp1LrZY4>^V*Aj.>"3Fk$V4q0V2AMc))+?VYp2e"r[4>^V+0g6^B3Fl\Y4q0V2AMc/++?VYpAN;p`4>^V+1HlpD3Fl_X4q0V2AMc5-+?VYq2dnlZ4>^V+3''JHI3FuYR4q0V2AMcD2+?VYqAMcR[4>^V+@6Per3FueV4q0V2AMdj[+?VYqAhlOZ4>^V+@m2"t3G''s*4q0V2AMdp]+?VYr0P3KX4>^V+ANh5!3G(!&4q0V2AMe!_+?VYr0k*<U4>^V,0KpUA3G($%4q0V2AMl2++?VYr1,_<*4>^V,1d3$E3G(''(4q0V2AMl>/+?VYr2.8ZX4>^V,2Ei6G3G(0]4q0V2AMlD1+?VYr3FtA`4>^V,3''JHI3G)\W4q0V2AMlJ3+?X0o1b`HMAi2a]4>^V,@6PerA2lG&A7[GO4q0V2AMmp\+?X0o2)AcTAhlOZ4>^V,@m2"tA2lGYA7RVT4q0V2AMn!^+?X0o2e?N00f;-(4>^V,ANh5!A2lMZA7IGS4q0V2AMn''`+?X0o2e?N03B9844>^V-0KpUAA2lMZA7K%+4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QIY2DIB<4CgE1ARo:^2*MI31hAR#4s2su3&bDZA7T78%6QIY2D[N>4>Sj*ANgPc1hAR%4s2t"AnGR;%6QIY2DmZ@4D&2;A3LGb1hAR''4s2t"AnGR;%6QIY2E*fB4D&2;A3LGb1hAR)4s2su3&Wa,AR[DY%6QIY2E<rD4>^V''ANgPc1hARR4s2sEAMQ/-%6QIY2I\im4CgE.0P"]O3''Id61hART4s2sEAiDM0%6QIY2Inuo4>efM2EhR41hARV4s2sF0P+cY%6QIY2J,,q4>eiO@Qk5`1hAU"4s2su3&E@#A7@8W%6QIY2_dK=4>ej(ANgPc1hAU$4s2sF0kOr[%6QIY2`!W?4CgE.0k=j,@m1>a1hAU&4s2sF1,^sQ%6QIY2`EoC4>eoNAj-Yd1hAU*4s2sF1Gq!Q%6QIY2`X&E4>erP0Koq.1hAUS4s2su3&EF%A2Q>1%6QIY2e"rn4>euV@m1>a1hAUU4s2sF2.9rX%6QIY2e5)p4>f#N3Bdm71hAUW4s2sF2IU/\%6QIY2eG5r4>f$*ANgPc1hAX#4s2sF2IeF)%6QIY3&*T>4>f$,1Hl711hAX%4s2sF2Ig;^%6QIY3&<`@4>f$.ANgPc1hAX''4s2sF2e4g1%6QIY3&NlB4>f)SA3LGb1hAX)4s2sF3&N][%6QIY3&a#D4>f,UAj-Yd1hAX+4s2sF3AiNT%6QIY3&s/F4>f,W0Koq.1hAXT4s2sF3ArWV%6QIY3+>&o4>gPX@6P,_1hAXV4s2sF@PqRX%6QIY3+P2q4>gS,1Hl711hAXX4s2sF@Q.d\%6QIY3+b>s4>gSW1Hl711hA[$4s2su3&NU)A7K+5%6QIY3AE]?4>g\,1Hl711hA[&4s2sFARRM]%6QIY3AWiA4>g\]1Hl711hA[(4s2sFAhuD1%6QIY3AiuC4>g_Z0g6%/1hA[*4s2sFAn5F9%6QIY3B'',E4>noP1-Q.01hA[,4s2sG0k)n%%6QIY3B98G4>np+3''Id61hA[U4s2sD3FOa.%6QIY3FY/p4>T!,3''Id61hA[W4s2su3&G)TAMc/+%6QIY3Fk;r4>o$)2*MI31hA[Y4s2sG1hJX0%6QIY3G(Gt4>UD''@m1>a1hC)N4s2su3&G)TAn>F8%6QIY@5C(i4>o&V2a.[51hC)P4s2sG2)mT[%6QIY@5U4k4CgE/ARo=\1d2@21hC)R4s2sG2)o/2%6QIY@5g@m4>UDU1d2@21hC)T4s2sD@:Nb1%6QIY@6$Lo4>o''.0g6%/1hC*(4s2sG2E!KX%6QIY@:DDC4>o)UANgPc1hC**4s2sG2IeI*%6QIY@:VPE4>o*.@m1>a1hC*,4s2sD@5p,.%6QIY@:h\G4>o,P0Koq.1hC,M4s2sG2`<BS%6QIY@PL%h4>o-.1d2@21hC,O4s2sG3&!*O%6QIY@P^1j4>o2UA3LGb1hC,Q4s2sG3AkA3%6QIY@Pp=l4>pV%2*MI31hC,S4s2sG@6%g]%6QIY@Q-In4>UGY1Hl711hC,U4s2sG@:hJ_%6QIY@Q?Up4>pYX0g6%/1hC-)4s2sG@l$).%6QIY@U_MD4>p\X@6P,_1hC-+4s2sGA7B%4%6QIY@UqYF4>p_]1d2@21hC--4s2sDA2>r(%6QIY@V.eH4>pb)3''Id61hC/N4s2sGAN)A.%6QIY@kg.i4>pb\@Qk5`1hC/P4s2sGARmY^%6QIY@l$:k4>pb]@Qk5`1hC/R4s2sGAi4$]%6QIY@l6Fm4>pe/@Qk5`1hC/T4s2sGAi;J0%6QIY@lHRo4>pe11d2@21hC/V4s2su3&NC#@l.XY%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>^VZ3BeQJ2_m1#4q0V2ARf.4+?VGk1b_*&4>^VZ@Qkns1H8et4q0V2ARf46+?VS=@pqP14>^VZA3M+u2`+uS4q0V2ARf:8+?VS?2.Sl[4>^VZAj.>"2`5&S4q0V2ARmJY+?VS?A2ug_4>^V[0g6^B2`<?L4q0V2ARmP[+?VS@2DdT,4>^V[1HlpD2`<QS4q0V2ARmV]+?VS@@lQX]4>^V[2*N-F2`ENO4q0V2ARm\_+?VSA2e>/^4>^V[2a/?H2`Y;*4q0V2ARmba+?VSC@PL%U4>^V[3BeQJ2dp0,4q0V2ARo45+?VSlAM?:W4>^V[@Qkns2e+^!4q0V2ARo:7+?VSn0KD<+4>^V[A3M+u2e6AQ4q0V2ARo@9+?VSn@PU+V4>^V[Aj.>"2eFjW4q0V2AS!PZ+?VSpAMH@X4>^V\0g6^B3&!''B4q0V2AS!V\+?VV;2`Eo04>^V\1HlpD3&"l$4q0V2AS!\^+?VV<0KD<+4>^V\2*N-F3&*0K4q0V2AS!b`+?VV=0Om9U4>^V\2a/?H3&33t4q0V2AS!hb+?VV=1b_*&4>^V\3BeQJ3&>)W4q0V2AS#:6+?VV>A2HIZ4>^V\@Qkns3&E=$4q0V2AS#@8+?VV?1c[`/4>^V\A3M+u3&G2T4q0V2AS#F:+?X0o2.C*+3FtA`4>^V\Aj.>"3&NQJ4q0V2AS*V[+?VV@2D[N+4>^V]0g6^B3&P2X4q0V2AS*\]+?VVA1hAi[4>^V]1HlpD3&WZM4q0V2AS*b_+?VVA3+4u[4>^V]2*N-F3&i`M4q0V2AS*ha+?VVC2`Eo04>^V]2a/?H3&rfM4q0V2AS*nc+?VVm2)[W-4>^V]3BeQJ3+=a''4q0V2AS,@7+?VVm2.JfZ4>^V]@Qkns1cI.$4q0V2AS,F9+?X0o2.gB/1LiTX4>^V]A3M+u3+FjT4q0V2AS,L;+?VVn2`X&24>^V]Aj.>"3+HH,4q0V2AhYo&+?VVo2E*f/4>^Y(0g6^B1cR4$4q0V2AhYu(+?VVq0Jbm%4>^Y(1HlpD3+b!(4q0V2AhZ&*+?VVq@l6FZ4>^Y(2*N-F3+c\X4q0V2AhZ,,+?VVqAi;g^4>^Y(2a/?H3A<BN4q0V2AhZ2.+?VY<2`Eo04>^Y(@Qkns3A=l$4q0V2Ah[^Y+?VY=1h8cZ4>^Y(A3M+u3AP/+4q0V2Ah[d[+?VY?1Gq?*4>^Y(Aj.>"3AWX(4q0V2Ahbu''+?VY@1LWHV4>^Y)0g6^B3Ak;W4q0V2Ahc&)+?VYB11<?U4>^Y)1HlpD3ArlW4q0V2Ahc,++?VYB@5g@Z4>^Y)2*N-F3B(P^4q0V2Ahc2-+?VYCAnF494>^Y)2a/?H3B8d%4q0V2Ahc8/+?VYE1,1s%4>^Y)3BeQJ3B8rU4q0V2Ahd^X+?VYn@5pF[4>^Y)@Qkns3FZE.4q0V2AhddZ+?VYn@Q?U]4>^Y)A3M+u3Faa&4q0V2Ahdj\+?VYo1,M0(4>^Y)Aj.>"3FajS4q0V2Ahl&(+?VYo2`3c.4>^Y*0g6^B3FcVY4q0V2Ahl,*+?VYp@k^(U4>^Y*1HlpD3FlVT4q0V2Ahl2,+?VYq2`Nu14>^Y*2*N-F3B1S^4q0V2Ahl8.+?X0o1hC3-1LrZY4>^Y*2a/?H2e"I#4q0V2Ahl>0+?VP=2J,,^4>^Y*3BeQJ2e+XT4q0V2AhmdY+?VSl2`3c.4>^Y*@Qkns2`3<I4q0V2Ahmj[+?VVl0k<HW4>^Y*A3M+u2D@$E4q0V2Ahmp]+?VS:2`Nu1ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1hJLT4s2sFARmJY%6QIZ1GD!84?$b01-Q.01hJNu4s2sJ2E<c]%6QIZ1GV-:4?,5V1d2@21hJO"4s2sI0fLgN%6QIZ1Gh9<4?52V2*MI31hJO$4s2sF1gslX%6QIZ1H%E>4?#$,0g6%/1hJO&4s2sG3&ro]%6QIZ1H7Q@4?6kZ@Qk5`1hJO(4s2sF1LiF/%6QIZ1LWHi4>o,U2EhR41hJOQ4s2sH2)7''R%6QIZ1LiTk4?#,P0g6%/1hJOS4s2sH@:M8\%6QIZ1M&`m4>nuO@6P,_1hJOU4s2sJ0JkLJ%6QIZ1b_*94?5E30g6%/1hJR!4s2sG2.8F-%6QIZ1bq6;4?5--0g6%/1hJR#4s2sJ2dp5\%6QIZ1c.B=4?,)V1-Q.01hJR%4s2sH@lIs_%6QIZ1c@N?4?##O@6P,_1hJR''4s2sI3&!3R%6QIZ1cRZA4?,8R1Hl711hJR)4s2sJ@PMCW%6QIZ1grQj4?6k+@m1>a1hJRR4s2sF0JG7G%6QIZ1h/]l4>ej(ANgPc1hJRT4s2sF1GCaO%6QIZ1hAin4>gSZ@m1>a1hJRV4s2t"3ANQX%6QIZ2)%3:4>o)PANgPc1hJU"4s2t"3ANTY%6QIZ2)7?<4?"rN@6P,_1hJU$4s2t"@50W''%6QIZ2)IK>4>euS0g6%/1hJU&4s2sG@l%OW%6QIZ2)[W@4?$\,0Koq.1hJU(4s2su3&N[+Ai+!]%6QIZ2)mcB4?,;S1Hl711hJU*4s2sJ2.9rX%6QIZ2.8Zk4?5>X2*MI31hJUS4s2su3&W^+AM[j\%6QIZ2.Jfm4CgE03Fl\U@6P,_1hJUW4s2sA0OeHS%6QIZ2D@<;4>8Ht@6P,_1hJX#4s2sC0ekRM%6QIZ2DRH=4>8KE0Koq.1hJX%4s2sA0etXN%6QIZ2DdT?4>8KG1-Q.01hJX''4s2sA0f*E*%6QIZ2E!`A4>8KH@6P,_1hJX)4s2sA0fCpR%6QIZ2E3lC4>8KG1Hl711hJX+4s2sA0f(dQ%6QIZ2IScl4>8KH0Koq.1hJXT4s2sA0f1mS%6QIZ2Ieon4>8KJ2a.[51hJXV4s2sA0ed$"%6QIZ2J#&p4>8KE2EhR41hJXX4s2sA0em6''%6QIZ2_[E<4>8KF1-Q.01hJ[$4s2sA0etFH%6QIZ2_mQ>4>8KG0Koq.1hJ[&4s2sA0f!<(%6QIZ2`*]@4>8KG2EhR41hJ[(4s2sA0f*?(%6QIZ2`<iB4>8KG@Qk5`1hJ[*4s2sA0f1aO%6QIZ2`NuD4>8KI2EhR41hJ[,4s2sA0fLjO%6QIZ2dnlm4>8L#2a.[51hJ[U4s2sA0k=`W%6QIZ2e,#o4>8L#3Bdm71hJ[W4s2sA0k<.*%6QIZ2e>/q4>8KK1d2@21hJ[Y4s2sA0fM!S%6QIZ3&!N=4>8KD@Qk5`1hJ^%4s2sA0ekUN%6QIZ3&3Z?4>8L%2*MI31hJ^''4s2sA0em9(%6QIZ3&EfA4>8KF0g6%/1hJ^)4s2sA0f!?)%6QIZ3&WrC4>8KG2a.[51hJ^+4s2sA0f*B)%6QIZ3&j)E4>8KG@m1>a1hJ^-4s2sA0f1dP%6QIZ3+4un4>8KI2a.[51hJ^V4s2sA0fLmP%6QIZ3+G,p4>8KK2*MI31hJ^X4s2sA0fM$T%6QIZ3+Y8r4>JWHANgPc1hJ^Z4s2sC1,(UM%6QIZ3A<W>4>JZGAj-Yd1hJa(4s2sC2.L&Y%6QIZ3As&D4>8Hu@6P,_1hJa,4s2sA0O\BR%6QIZ3B02F4>JWG2EhR]DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,fAiVk8+?V>40ebd#4>^Y1@6Per0JP=@4q0V2AiX<a+?V>41GV-''4>^Y1@m2"t0JP@q4q0V2AiXBc+?V>41grQW4>^Y1ANh5!0JPID4q0V2AiXHe+?V>41G_3(4>^YY0KpUA0JP@C4q0V2AmmDX+?V>41b_*&4>^YY1-QgC0JPCE4q0V2AmmJZ+?V>42E*f/4>^YY1d3$E0JP7i4q0V2AmmP\+?V>40fD3)4>^YY2Ei6G0JP:n4q0V2AmmV^+?V>41,;$&4>^YY3''JHI0JP=:4q0V2Amm\`+?V>41GD!%4>^YY@6Per0JP=o4q0V2Amo.4+?V>41H%E+4>^YY@m2"t0JP@o4q0V2Amo46+?V>41L`NW4>^YYANh5!0JPCA4q0V2Amo:8+?V>42)[W-4>^YZ0KpUA0JPLA4q0V2An!JY+?V>4A2c[]4>^YZ1-QgC0JR*I4q0V2An!P[+?V>4A2ug_4>^YZ1d3$E0JR)q4q0V2An!V]+?V>42`*]-4>^YZ2Ei6G0JPLE4q0V2An!\_+?V>40Od3T4>^YZ3''JHI0JP:@4q0V2An!ba+?V>4Ai2a]4>^YZ@6Per0JP:o4q0V2An#45+?V>41,1s%4>^YZ@m2"t0JP=p4q0V2An#:7+?V>41H.K,4>^YZANh5!0JP@p4q0V2An#@9+?V>41LiTX4>^Y[0KpUA0JPCB4q0V2An*PZ+?V>42)d].4>^Y[1-QgC0JPLB4q0V2An*V\+?V>42`3c.4>^Y[1d3$E0JPLF4q0V2An*\^+?VD611`WY4>^Y[2Ei6G1,:OA4q0V2An*b`+?VD70P3KX4>^Y[@6Per1,WQM4q0V2An,:6+?V>63&Wr04>^Y[Aj.>"0Jd-G4q0V2An3SZ+?V>63+G,]4>^Y\0g6^B0Jb\"4q0V2An3Y\+?V>6@:DD04>^Y\1HlpD0Jb\#4q0V2An3kb+?V>6@pqP14>^Y\3BeQJ0Jb^C4q0V2An5C8+?V>6@q%V24>^Y\A3M+u0Jd/l4q0V2An5I:+?V>6@q@h54>^Y^@Qkns1GE>p4q0V2AnGO:+?VG6A2QO[4>^Y^A3M+u1GE?!4q0V2AnGU<+?VG6A7@_34>^Y^Aj.>"1GE?N4q0V30JG=I+?VG6AMcR[4>efH2*N-F1GEAu4q0V30JPLM+?VSn1bq6(4>efI3''JHI0JG=C4q0V30JPRO+?V>31c$g>1h/]Y4>efI@6Per0JG=m0JG=>0JG=n4q0V30JR$#+?V>31bpa=1c6s@1h/]Y4>efI@m2"t0JG=<0JG@?4q0V30JR*%+?V>31bg[<1h8cZ4>efIANh5!2I^,Q4q0V30JR0''+?VG6@Pg7X4>efJ0KpUA1GE?O4q0V30J[''#+?V>31GD!%4>efJ@Qkns0JG::0JI#r4q0V30J[-%+?V>31GLR;A2c[]4>efJA3M+u0JG:<0JI#r4q0V30J[3''+?V>31G^^=A2c[]4>efJAj.>"0JG:>0JI#r4q0V30JbCH+?V>31Gpj?A2c[]4>efK0g6^B0JG:@0JI#r4q0V30JbIJ+?V>31H.!AA2c[]4>efK1HlpD0JG:B0JI#r4q0V30JbOL+?V>31H@-CA2c[]4>efL3BeQJ2.\^''4q0V30Jm3%+?V>31hAi[4>efL@Qkns2*!EP4q0V30Jm9''+?VM93+P2^4>efLA3M+u2Dnqt4q0V30Jm?)+?VP?1,(m$4>efLAj.>"2)o2%4q0V30JtOJ+?VM:1h8cZ4>efM0g6^B2.egX4q0V30JtUL+?VSn1bq6(4>efM1HlpD2dp3*4q0V30Jt[N+?VJl@5L.W4>efM2*N-F1GCas1GCXp4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QL%2)[W@4>elR2a.[52)$mH4s2sF1M/U1%6QL%2)mcB4?,?41Hl712)$mJ4s2sG3&4o+%6QL%2.8Zk4>p\(2a.[52)$ms4s2sEAN40`%6QL%2.Jfm4>f,R@6P,_2)$mu4s2sG2)mNY%6QL%2.\ro4>nrO@Qk5`2)$n"4s2sA0JtO<0JtaP%6QL%2D@<;4>8HGA2#\p2EhR42)$pC4s2sF1LjoY%6QL%2DRH=4>8HH1GCL?1Hl712)$pE4s2sA0JtX?0JbFI%6QL%2DdT?4>8HH1GCL=1-Q.02)$pG4s2sA0JtX?0JbLK%6QL%2E!`A4>S[$2a.[52)$pI4s2sA0JkaC0JtaP%6QL%2E3lC4>JTF1d2@22)$pK4s2sC0JPCJ%6QL%2IScl4>JTF1d2@22)$q!4s2sA0JbC:0JbCH%6QL%2J#&p4>8HF0JG1:0g6%/2)$q#4s2sA0JbC:0JbIJ%6QL%2_[E<4>8HF0JG1:1Hl712)$sD4s2sA0JbC:0JbOL%6QL%2_mQ>4>8HF0JG1:2*MI32)$sF4s2sA0JbC:0JbUN%6QL%2`*]@4>8HF0JG1:2a.[52)$sH4s2sA0JbC:0Jb[P%6QL%2`<iB4>8HF0JG1:3Bdm72)$sJ4s2sA0JbF;0JbCH%6QL%2`NuD4>8HF0eb:;0g6%/2)$sL4s2sA0JbF;0JbIJ%6QL%2dnlm4>8HF0eb:;1Hl712)$su4s2sA0JbF;0JbOL%6QL%2e,#o4>8HF0eb:;2*MI32)$t"4s2sA0JbF;0JbUN%6QL%2e>/q4>8HF0eb:;2a.[52)$t$4s2sA0JbF;0Jb[P%6QL%3&!N=4>8HF0eb:;3Bdm72)%!E4s2sA0JbI<0JbCH%6QL%3&3Z?4>8HF1,(C<0g6%/2)%!G4s2sA0JbI<0JbIJ%6QL%3&EfA4>8HF1,(C<1Hl712)%!I4s2sA0JbI<0JbOL%6QL%3&WrC4>8HF1,(C<2*MI32)%!K4s2sA0JbI<0JbUN%6QL%3&j)E4>8HF1,(C<2a.[52)%!M4s2sA0JbI<0Jb[P%6QL%3+4un4>8HF1,(C<3Bdm72)%"!4s2sA0JbL=0JbCH%6QL%3+G,p4>8HF1GCL=0g6%/2)%"#4s2sA0JbL=0JbIJ%6QL%3+Y8r4>8HF1GCL=1Hl712)%"%4s2sA0JbL=0JbOL%6QL%3A<W>4>8HF1GCL=2*MI32)%$F4s2sA0JbL=0JbUN%6QL%3ANc@4>8HF1GCL=2a.[52)%$H4s2sA0JbL=0Jb[P%6QL%3A`oB4>8HF1GCL=3Bdm72)%$J4s2sA0JbO>0JbCH%6QL%3As&D4>8HF1b^U>0g6%/2)%$L4s2sA0JbO>0JbIJ%6QL%3B02F4>8HF1b^U>1Hl712)%$N4s2sA0JbO>0JbOL%6QL%3FP)o4>8HF1b^U>2*MI32)%%"4s2sA0JbO>0JbUN%6QL%3Fb5q4>8HF1b^U>2a.[52)%%$4s2sA0JbO>0Jb[P%6QL%3FtAs4>8HF1b^U>3Bdm72)%%&4s2sA0JbR?0JbCH%6QL%@5''kf4>8HF2)$^?0g6%/2)&Gn4s2sA0JbR?0JbIJ%6QL%@5:"h4>8HF2)$^?1Hl712)&Gp4s2sA0JbR?0JbOL%6QL%@5L.j4>8HF2)$^?2*MI32)&Gr4s2sA0JbR?0JbUN%6QL%@5^:l4>8HF2)$^?2a.[52)&Gt4s2sA0JbR?0Jb[P%6QL%@5pFn4>8HF2)$^?3Bdm72)&H!4s2sA0JYR@0JbC:0JbCH%6QL%@:;>B4>8HE2_ZpA0JG1:0g6%/2)&HJ4s2sA0JYR@0JbC:0JbIJ%6QL%@:MJD4>8HE2_ZpA0JG1:1Hl712)&HL4s2sA0JYR@0JbC:0JbOL%6QL%@:_VF4>8HE2_ZpA0JG1:2*MI32)&HN4s2sA0JYR@0JbC:0JbUN%6QL%@PBtg4>8HE2_ZpA0JG1:2a.[52)&Jo4s2sA0JYR@0JbC:0Jb[P%6QL%@PU+i4>8HE2_ZpA0JG1:3Bdm72)&Jq4s2sA0JYR@0JbF;0JbCH%6QL%@Pg7k4>8HE2_ZpA0eb:;0g6%/2)&Js4s2sA0JYR@0JbF;0JbIJ%6QL%@Q$Cm4>8HE2_ZpA0eb:;1Hl712)&Ju4s2sA0JYR@0JbF;0JbOL%6QL%@Q6Oo4>8HE2_ZpA0eb:;2*MI32)&K"4s2sA0JYR@0JbF;0JbUN%6QL%@UVGC4>8HE2_ZpA0eb:;2a.[52)&KK4s2sA0JYR@0JbF;0Jb[P%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>eg%@m2"t0JG7@0JG:;0JG:C4q0V30OeQV+?V>31,gm@1GUX<1GD!%4>eg%ANh5!0JG7@0JG:<0JG:;4q0V30OeWX+?V>31,gm@1GUX<1GV-''4>eg&0KpUA0JG7@0JG:<0JG:=4q0V30Olh$+?V>31,gm@1GUX<1Gh9)4>eg&1-QgC0JG7@0JG:<0JG:?4q0V30Oln&+?V>31,gm@1GUX<1H%E+4>eg&1d3$E0JG7@0JG:<0JG:A4q0V30Olt(+?V>31,gm@1GUX<1H7Q-4>eg&2Ei6G0JG7@0JG:<0JG:C4q0V30Om%*+?V>31,gm@1G^^=1GD!%4>eg&3''JHI0JG7@0JG:=0JG:;4q0V30Om+,+?V>31,gm@1G^^=1GV-''4>eg&@6Per0JG7@0JG:=0JG:=4q0V30OnQU+?V>31,gm@1G^^=1Gh9)4>eg&@m2"t0JG7@0JG:=0JG:?4q0V30OnWW+?V>31,gm@1G^^=1H%E+4>eg&ANh5!0JG7@0JG:=0JG:A4q0V30On]Y+?V>31,gm@1G^^=1H7Q-4>eg''0KpUA0JG7@0JG:=0JG:C4q0V30Oun%+?V>31,gm@1Ggd>1GD!%4>eg''1-QgC0JG7@0JG:>0JG:;4q0V30Out''+?V>31,gm@1Ggd>1GV-''4>eg''1d3$E0JG7@0JG:>0JG:=4q0V30P!%)+?V>31,gm@1Ggd>1Gh9)4>eg''2Ei6G0JG7@0JG:>0JG:?4q0V30P!+++?V>31,gm@1Ggd>1H%E+4>eg''3''JHI0JG7@0JG:>0JG:A4q0V30P!1-+?V>31,gm@1Ggd>1H7Q-4>eg''@6Per0JG7@0JG:>0JG:C4q0V30P"WV+?V>31,gm@1Gpj?1GD!%4>eg''@m2"t0JG7@0JG:?0JG:;4q0V30P"]X+?V>31,gm@1Gpj?1GV-''4>eg''ANh5!0JG7@0JG:?0JG:=4q0V30P"cZ+?V>31,gm@1Gpj?1Gh9)4>eg(0KpUA0JG7@0JG:?0JG:?4q0V30P)t&+?V>31,gm@1Gpj?1H%E+4>eg(1-QgC0JG7@0JG:?0JG:A4q0V30P*%(+?V>31,gm@1Gpj?1H7Q-4>eg(1d3$E0JG7@0JG:?0JG:C4q0V30P*+*+?V>31,gm@1H$p@1GD!%4>eg(2Ei6G0JG7@0JG:@0JG:;4q0V30P*1,+?V>31,gm@1H$p@1GV-''4>eg(3''JHI0JG7@0JG:@0JG:=4q0V30P*7.+?V>31,gm@1H$p@1Gh9)4>eg(@6Per0JG7@0JG:@0JG:?4q0V30P+]W+?V>31,gm@1H$p@1H%E+4>eg(@m2"t0JG7@0JG:@0JG:A4q0V30P+cY+?V>31,gm@1H$p@1H7Q-4>eg(ANh5!0JG7@0JG:@0JG:C4q0V30P+i[+?V>31,gm@1H.!A1GD!%4>eg)0KpUA0JG7@0JG:A0JG:;4q0V30P3%''+?V>31,gm@1H.!A1GV-''4>eg)1-QgC0JG7@0JG:A0JG:=4q0V30P3+)+?V>31,gm@1H.!A1Gh9)4>eg)1d3$E0JG7@0JG:A0JG:?4q0V30P31++?V>31,gm@1H.!A1H%E+4>eg)2Ei6G0JG7@0JG:A0JG:A4q0V30P37-+?V>31,gm@1H.!A1H7Q-4>eg)3''JHI0JG7@0JG:A0JG:C4q0V30P3=/+?V>31,gm@1H7''B1GD!%4>eg)@6Per0JG7@0JG:B0JG:;4q0V30P4cX+?V>31,gm@1H7''B1GV-''4>eg)@m2"t0JG7@0JG:B0JG:=4q0V30P4iZ+?V>31,gm@1H7''B1Gh9)4>eg)ANh5!0JG7@0JG:B0JG:?4q0V30P4o\+?V>31,gm@1H7''B1H%E+4>eiI0KpUA0JG7@0JG:B0JG:A4q0V30eb=G+?V>31,gm@1H7''B1H7Q-4>eiI1-QgC0JG7@0JG:B0JG:C4q0V30ebCI+?V>31,gm@1H@-C1GD!%4>eiI1d3$E0JG7@0JG:C0JG:;4q0V30ebIK+?V>31,gm@1H@-C1GV-''4>eiI2Ei6G0JG7@0JG:C0JG:=4q0V30ebOM+?V>31,gm@1H@-C1Gh9)4>eiI3''JHI0JG7@0JG:C0JG:?4q0V30ebUO+?V>31,gm@1H@-C1H%E+4>eiI@6Per0JG7@0JG:C0JG:A4q0V30ed''#+?V>31,gm@1H@-C1H7Q-4>eiI@m2"t0JG7@0JG:C0JG:C4q0V30ed-%+?V>31GCL:1GD!%4>eiIANh5!0JG::0JG:;4q0V30ed3''+?V>31GCL:1GV-''4>eiJ0KpUA0JG::0JG:=4q0V30ekCH+?V>31GCL:1Gh9)4>eiJ1-QgC0JG::0JG:?4q0V30ekIJ+?V>31GCL:1H%E+4>eiJ1d3$E0JG::0JG:A4q0V30ekOL+?V>31GCL:1H7Q-4>eiJ2Ei6G0JG::0JG:C4q0V30ekUN+?V>31GLR;1GD!%4>eiJ3''JHI0JG:;0JG:;4q0V30ek[P+?V>31GLR;1GV-''4>eiJ@6Per0JG:;0JG:=4q0V30em-$+?V>31GLR;1Gh9)4>eiJ@m2"t0JG:;0JG:?4q0V30em3&+?V>31GLR;1H%E+4>eiJANh5!0JG:;0JG:A4q0V30em9(+?V>31GLR;1H7Q-ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>2)-j?4s2sA0JbF;0Jb^Q%6QL&1,1s84>8HF1,(C<0Koq.2)-jA4s2sA0JbI<0JbFI%6QL&1,D*:4>8HF1,(C<1-Q.02)-jC4s2sA0JbI<0JbLK%6QL&1,V6<4>8HF1,(C<1d2@22)-jE4s2sA0JbI<0JbRM%6QL&1,hB>4>8HF1,(C<2EhR42)-jG4s2sA0JbI<0JbXO%6QL&1-%N@4>8HF1,(C<3''Id62)-jp4s2sA0JbI<0Jb^Q%6QL&11EEi4>8HF1GCL=0Koq.2)-jr4s2sA0JbL=0JbFI%6QL&11WQk4>8HF1GCL=1-Q.02)-jt4s2sA0JbL=0JbLK%6QL&11i]m4>8HF1GCL=1d2@22)-m@4s2sA0JbL=0JbRM%6QL&1GM''94>8HF1GCL=2EhR42)-mB4s2sA0JbL=0JbXO%6QL&1G_3;4>8HF1GCL=3''Id62)-mD4s2sA0JbL=0Jb^Q%6QL&1Gq?=4>8HF1b^U>0Koq.2)-mF4s2sA0JbO>0JbFI%6QL&1H.K?4>8HF1b^U>1-Q.02)-mH4s2sA0JbO>0JbLK%6QL&1H@WA4>8HF1b^U>1d2@22)-mq4s2sA0JbO>0JbRM%6QL&1L`Nj4>8HF1b^U>2EhR42)-ms4s2sA0JbO>0JbXO%6QL&1LrZl4>8HF1b^U>3''Id62)-mu4s2sA0JbO>0Jb^Q%6QL&1M/fn4>8HF2)$^?0Koq.2)-pA4s2sA0JbR?0JbFI%6QL&1bh0:4>8HF2)$^?1-Q.02)-pC4s2sA0JbR?0JbLK%6QL&1c%<<4>8HF2)$^?1d2@22)-pE4s2sA0JbR?0JbRM%6QL&1c7H>4>8HF2)$^?2EhR42)-pG4s2sA0JbR?0JbXO%6QL&1cIT@4>8HF2)$^?3''Id62)-pI4s2sA0JbR?0Jb^Q%6QL&1c[`B4>8HF2D?g@0Koq.2)-pr4s2sA0JbU@0JbFI%6QL&1h&Wk4>8HF2D?g@1-Q.02)-pt4s2sA0JbU@0JbLK%6QL&1h8cm4>8HF2D?g@1d2@22)-q!4s2sA0JbU@0JbRM%6QL&1hJoo4>8HF2D?g@2EhR42)-sB4s2sA0JbU@0JbXO%6QL&2).9;4>8HF2D?g@3''Id62)-sD4s2sA0JbU@0Jb^Q%6QL&2)@E=4>8HF2_ZpA0Koq.2)-sF4s2sA0JbXA0JbFI%6QL&2)RQ?4>8HF2_ZpA1-Q.02)-sH4s2sA0JbXA0JbLK%6QL&2)d]A4>8HF2_ZpA1d2@22)-sJ4s2sA0JbXA0JbRM%6QL&2*!iC4>8HF2_ZpA2EhR42)-ss4s2sA0JbXA0JbXO%6QL&2.A`l4>8HF2_ZpA3''Id62)-su4s2sA0JbXA0Jb^Q%6QL&2.Sln4>8HF3&!$B0Koq.2)-t"4s2sA0Jb[B0JbFI%6QL&2.f#p4>8HF3&!$B1-Q.02).!C4s2sA0Jb[B0JbLK%6QL&2DIB<4>8HF3&!$B1d2@22).!E4s2sA0Jb[B0JbRM%6QL&2D[N>4>8HF3&!$B2EhR42).!G4s2sA0Jb[B0JbXO%6QL&2DmZ@4>8HF3&!$B3''Id62).!I4s2sA0Jb[B0Jb^Q%6QL&2E*fB4>8HF3A<-C0Koq.2).!K4s2sA0Jb^C0JbFI%6QL&2E<rD4>8HF3A<-C1-Q.02).!t4s2sA0Jb^C0JbLK%6QL&2I\im4>8HF3A<-C1d2@22)."!4s2sA0Jb^C0JbRM%6QL&2Inuo4>8HF3A<-C2EhR42)."#4s2sA0Jb^C0JbXO%6QL&2J,,q4>8HF3A<-C3''Id62).$D4s2sA0Jb^C0Jb^Q%6QL&2_dK=4>8HF0eb:;0JG1:0Koq.2).$F4s2sA0JbF;0JbC:0JbFI%6QL&2`!W?4>8HF0eb:;0JG1:1-Q.02).$H4s2sA0JbF;0JbC:0JbLK%6QL&2`3cA4>8HF0eb:;0JG1:1d2@22).$J4s2sA0JbF;0JbC:0JbRM%6QL&2`EoC4>8HF0eb:;0JG1:2EhR42).$L4s2sA0JbF;0JbC:0JbXO%6QL&2`X&E4>8HF0eb:;0JG1:3''Id62).$u4s2sA0JbF;0JbC:0Jb^Q%6QL&2e"rn4>8HF0eb:;0eb:;0Koq.2).%"4s2sA0JbF;0JbF;0JbFI%6QL&2e5)p4>8HF0eb:;0eb:;1-Q.02).%$4s2sA0JbF;0JbF;0JbLK%6QL&2eG5r4>8HF0eb:;0eb:;1d2@22).''E4s2sA0JbF;0JbF;0JbRM%6QL&3&*T>4>8HF0eb:;0eb:;2EhR42).''G4s2sA0JbF;0JbF;0JbXO%6QL&3&<`@4>8HF0eb:;0eb:;3''Id_DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,g0fV!R+?V>31GLR;1GLR;1H@W.4>eiQ2*N-F0JG:;0JG:<0JG::4q0V30fV''T+?V>31GLR;1GUX<1GM''&4>eiQ2a/?H0JG:;0JG:<0JG:<4q0V30fV-V+?V>31GLR;1GUX<1G_3(4>eiQ3BeQJ0JG:;0JG:<0JG:>4q0V30fWT*+?V>31GLR;1GUX<1Gq?*4>eiQ@Qkns0JG:;0JG:<0JG:@4q0V30fWZ,+?V>31GLR;1GUX<1H.K,4>eiQA3M+u0JG:;0JG:<0JG:B4q0V30fW`.+?V>31GLR;1GUX<1H@W.4>eiQAj.>"0JG:;0JG:=0JG::4q0V30f^pO+?V>31GLR;1G^^=1GM''&4>eiR0g6^B0JG:;0JG:=0JG:<4q0V30f_!Q+?V>31GLR;1G^^=1G_3(4>eiR1HlpD0JG:;0JG:=0JG:>4q0V30f_''S+?V>31GLR;1G^^=1Gq?*4>eiR2*N-F0JG:;0JG:=0JG:@4q0V30f_-U+?V>31GLR;1G^^=1H.K,4>eiR2a/?H0JG:;0JG:=0JG:B4q0V30f_3W+?V>31GLR;1G^^=1H@W.4>eiR3BeQJ0JG:;0JG:>0JG::4q0V30f`Z++?V>31GLR;1Ggd>1GM''&4>eiR@Qkns0JG:;0JG:>0JG:<4q0V30f``-+?V>31GLR;1Ggd>1G_3(4>eiRA3M+u0JG:;0JG:>0JG:>4q0V30f`f/+?V>31GLR;1Ggd>1Gq?*4>eiRAj.>"0JG:;0JG:>0JG:@4q0V30jub"+?V>31GLR;1Ggd>1H.K,4>ej%0g6^B0JG:;0JG:>0JG:B4q0V30juh$+?V>31GLR;1Ggd>1H@W.4>ej%1HlpD0JG7n0JG::4q0V30jun&+?V>311`-n1GM''&4>ej%2*N-F0JG7n0JG:<4q0V30jut(+?V>311`-n1G_3(4>ej%2a/?H0JG7n0JG:>4q0V30k!%*+?V>311`-n1Gq?*4>ej%3BeQJ0JG7n0JG:@4q0V30k"KS+?V>311`-n1H.K,4>ej%@Qkns0JG7n0JG:B4q0V30k"QU+?V>311`-n1H@W.4>ej%A3M+u0JG7l0JG::4q0V30k"WW+?V>311N!l1GM''&4>ej%Aj.>"0JG7l0JG:<4q0V30k)h#+?V>311N!l1G_3(4>ej&0g6^B0JG7l0JG:>4q0V30k)n%+?V>311N!l1Gq?*4>ej&1HlpD0JG7l0JG:@4q0V30k)t''+?V>311N!l1H.K,4>ej&2*N-F0JG7l0JG:B4q0V30k*%)+?V>311N!l1H@W.4>ej&2a/?H0JGF>0JGF>0JGC?4q0V30k*+++?V>32_Zp>2_Zp>2Inu\4>ej&3BeQJ0JG7@0JG@?4q0V30k+QT+?V>31cR0C1GV-''4>ej&@Qkns0JG=q0JG:<4q0V30k+WV+?V>31hJEq2`Nu14>ej&A3M+u0JG=p0JGFF4q0V30k+]X+?V>32)-d=1GV-''4>ej&Aj.>"0JG=l0JGF@0JG7n4q0V30k2n$+?V>31c-m?2_m''@11`WY4>ej''0g6^B1GE6I1GEBL4q0V30k2t&+?VG6@PBSlARdMM@5L.W4>ej''1HlpD1GE6L1GEBN1GEEN1GE<I4q0V30k3%(+?VG6@Q-(sAn*VNA2uG"AR[GL@lQX]4>ej''2*N-F1GE8s1GE5r1GE8m1GEBL4q0V30k3+*+?VG6@Q6.tAMl7tAn*VNAR[h44>ej''2a/?H1GE;t1GE8s1GE?"1GEBL4q0V30k31,+?VG6@lZ>!@l#np@lQX]4>ej''3BeQJ1GE>n1GE5o1GE;u4q0V30k4WU+?VG6A2?"q@l#np@lQX]4>ej''@Qkns1GE?"1GE6L1GEBM1GEBL4q0V30k4]W+?VG6A7IDLAn+"64>ej''A3M+u1GEB#1GEDs1GE<!4q0V30k4cY+?VG6ARRAKAhu4s@:_5K@l#np@lQX]4>ej''Aj.>"1GE6I1GEBL4q0V30k;t%+?VG6@PBSlARdMM@5L.W4>ej(0g6^B1GE6L1GEBN1GEEN1GE<I4q0V30k<%''+?VG6@Q-(sAn*VNA2uG"AR[GL@lQX]4>ej(1HlpD1GE8s1GE5r1GE8m1GEBL4q0V30k<+)+?VG6@Q6.tAMl7tAn*VNAR[h44>ej(2*N-F1GE;t1GE8s1GE?"1GEBL4q0V30k<1++?VG6@lZ>!@l#np@lQX]4>ej(2a/?H1GE>n1GE5o1GE;u4q0V30k<7-+?VG6A2?"q@l#np@lQX]4>ej(3BeQJ1GE?"1GE6L1GEBM1GEBL4q0V30k=]V+?VG6A7IDLAn+"64>ej(@Qkns1GEB#1GEDs1GE<!4q0V30k=cX+?VG6ARRAKAhu4s@:_5K@l#np@lQX]4>ej(A3M+uAnGXc4q0V30k=iZ+?X7JAn4(74>ej(Aj.>"1GCL<1GCLn4q0V30kE%&+?VG60JYF<0P3KX4>ej)1HlpD0JHsE4q0V30kE1*+?V>3@:;>/4>ej)2*N-F1,1LA4q0V30kE7,+?V>40ebd#4>ej)2a/?H0JP=@4q0V30kE=.+?V>41GV-''4>ej)3BeQJ0JP@q4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QL&ARRbF4>8KH@6P,_2)/ZO4s2sA0fCpR%6QL&ARdnH4>8KG1Hl712)/ZQ4s2sA0f(dQ%6QL&AS"%J4>8KH0Koq.2)/ZS4s2sA0f1mS%6QL&AhZCk4>8KJ2a.[52)/\t4s2sA0ed$"%6QL&AhlOm4>8KE2EhR42)/]!4s2sA0em6''%6QL&Ai)[o4>8KF1-Q.02)/]#4s2sA0etFH%6QL&Ai;gq4>8KG0Koq.2)/]%4s2sA0f!<(%6QL&AiMss4>8KG2EhR42)/]''4s2sA0f*?(%6QL&AmmkG4>8KG@Qk5`2)/]P4s2sA0f1aO%6QL&An+"I4>8KI2EhR42)/]R4s2sA0fLjO%6QL&An=.K4>8L#2a.[52)/]T4s2sA0k=`W%6QL''0JG[54>8L#3Bdm72)6j?4s2sA0k<.*%6QL''0JYg74>8KK1d2@22)6jA4s2sA0fM!S%6QL''0Jks94>8KD@Qk5`2)6jC4s2sA0ekUN%6QL''0K)*;4>8L%2*MI32)6jE4s2sA0em9(%6QL''0K;6=4>8KF0g6%/2)6jG4s2sA0f!?)%6QL''0O[-f4>8KG2a.[52)6jp4s2sA0f*B)%6QL''0Om9h4>8KG@m1>a2)6jr4s2sA0f1dP%6QL''0P*Ej4>8KI2a.[52)6jt4s2sA0fLmP%6QL''0ebd64>8KK2*MI32)6m@4s2sA0fM$T%6QL''0etp84>JWHANgPc2)6mB4s2sC1,(UM%6QL''0f2'':4>JZGAj-Yd2)6mF4s2sC2.L&Y%6QL''0k!6g4>8Hu@6P,_2)6mq4s2sA0O\BR%6QL''0k3Bi4>JWG2EhR42)6ms4s2sA0ek@G%6QL''0kENk4>8KF2EhR42)6mu4s2sA0f(RK%6QL''1,(m74>8KGAj-Yd2)6pA4s2sA0f3<&%6QL''1,;$94>8KJ2EhR42)6pC4s2sA0f(UL%6QL''1,M0;4>8KG3''Id62)6pE4s2sA0f1RJ%6QL''1,_<=4>8KH3Bdm72)6pG4s2sA0fCsS%6QL''1,qH?4>8KD@6P,_2)6pI4s2sA0ekRM%6QL''11<?h4>8KEANgPc2)6pr4s2sA0etLJ%6QL''11NKj4>8KF0Koq.2)6pt4s2sA0f(LI%6QL''11`Wl4>8KFANgPc2)6q!4s2sA0f(^O%6QL''1GD!84>8KGA3LGb2)6sB4s2sA0f*9&%6QL''1GV-:4>8KH2*MI32)6sD4s2sA0f:jQ%6QL''1Gh9<4>8KK1-Q.02)6sF4s2sA0k<4,%6QL''1H%E>4>8L#@Qk5`2)6sH4s2sA0k<:.%6QL''1H7Q@4>8L#2*MI32)6sJ4s2sA0fLpQ%6QL''1LWHi4>8KK2EhR42)6ss4s2sA0ed''#%6QL''1LiTk4>8KE2a.[52)6su4s2sA0kN:,%6QL''1M&`m4>8KEAj-Yd2)6t"4s2sA0etII%6QL''1b_*94>8KFAj-Yd2)7!C4s2sA0f(aP%6QL''1bq6;4>8KGANgPc2)7!E4s2sA0f*<''%6QL''1c.B=4>8KH2EhR42)7!G4s2sA0f:mR%6QL''1c@N?4>8KK1Hl712)7!I4s2sA0fLsR%6QL''1cRZA4>8KK2a.[52)7!K4s2sC0f!<(%6QL''1grQj4>JZG2EhR42)7!t4s2sC1,*<(%6QL''1hAin4>Jd(@6P,_2)7"#4s2sGARR>X%6QL''2)%3:4D&"Y0Koq.2)7$D4s2t"@59N#%6QL''2)7?<4?-e/Aj-Yd2)7$F4s2sEAMZ2-%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>elO1d3$E1hAOS4q0V31,UpQ+?VJl2D[N+4>elO2Ei6G1hAR)4q0V31,V''U+?VJl3B'',24>elO@6Per1hC*-4q0V31,WN)+?VJlA7@_34>elO@m2"t1hC5R4q0V31,WT++?VJlAN2j_4>elOANh5!1hC614q0V31,WZ-+?VJlAn=.84>elP0KpUA1hJEs4q0V31,^jN+?VJm0K;6*4>elP1-QgC1hJHt4q0V31,^pP+?VJm0fM9*4>elP1d3$E1hJO"4q0V31,_!R+?VJm1Gq?*4>elP2Ei6G1hJQu4q0V31,_''T+?VJm1bq6(4>elP@6Per1hJU#4q0V31,`T*+?VJm2D[N+4>elP@m2"t1hJXW4q0V31,`Z,+?VJm2_dK*4>elPANh5!1hJ[,4q0V31,``.+?VJm3&*T+4>elQ0KpUA1hJ^-4q0V31,gpO+?VJm3+G,]4>elQ1-QgC1hJ^Y4q0V31,h!Q+?VJm3A<W+4>elQ1d3$E1hJa(4q0V31,h''S+?VJm3B9844>elQ2Ei6G1hJa[4q0V31,h-U+?VJm@Q?U]4>elQA3M+u1hL5U4q0V31,ic.+?VJm@lQX]4>elQAj.>"1hL6-4q0V31,psO+?VJmA7Ie44>elR0g6^B1hL;S4q0V31,q$Q+?VJmAhZCX4>elR1HlpD1hL?04q0V31,q*S+?VM80K20)4>elR2*N-F2)$^m4q0V31,q0U+?VM80fM9*4>elR2a/?H2)$aq4q0V31,q6W+?VM81GD!%4>elR@Qkns2)$gD4q0V31,rc-+?VM81c7H+4>elRA3M+u2)$jq4q0V31-%$P+?VM82*!i04>elS0g6^B2)$pB4q0V31-%*R+?VM82E*f/4>elS1HlpD2)$q!4q0V31-%0T+?VM82_dK*4>elS2*N-F2)%!E4q0V31-%<X+?VM83&Wr04>elS3BeQJ2)%!u4q0V31-&c,+?VM83A<W+4>elS@Qkns2)%%"4q0V311;n$+?VM8@Q?U]4>em&1-QgC2)&KM4q0V311;t&+?VM8@k^(U4>em&1d3$E2)&Ps4q0V311<+*+?VM8A7e"74>em&3''JHI2)&Ss4q0V311<1,+?VM8AMcR[4>em&@6Per2)&W#4q0V311=WU+?VM8Ammk44>em&@m2"t2)&Vt4q0V311=]W+?VM90f_E,4>em''0KpUA2)-jB4q0V311E+)+?VM911i]Z4>em''2Ei6G2)-mA4q0V311E1++?VM91Gh9)4>em''3''JHI2)-mI4q0V311E7-+?VM91bq6(4>em''@6Per2)-q"4q0V311F]V+?VM92)@E*4>em''@m2"t2)-sJ4q0V311FcX+?VM92E!`.4>em''ANh5!2).%$4q0V311FiZ+?VM93+Y8_4>em(0KpUA2)/QP4q0V311N%&+?VM9@kp4W4>em(1-QgC2)/Vs4q0V311N+(+?VM9A2QO[4>em(1d3$E2)/Z"4q0V311N1*+?VM9AhlOZ4>em(2Ei6G2)/]%4q0V311N7,+?VM:0fV?+4>em(3''JHI2)6pB4q0V311N=.+?VM:1c7H+4>em(@6Per2)7$K4q0V311OcW+?VM:2.f#]4>em(@m2"t2)7-F4q0V311OiY+?VM:3&Nl/4>em)0g6^B2)71#4q0V311W.(+?VM:@5U4X4>em)1HlpD2)8T!4q0V311W4*+?VM:@PBtT4>em)3''JHI2)8WO4q0V311WC/+?VM:@l-@YASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>2)8]N4s2sF11N4+%6QL''A7@_F4>em(Aj-Yd2)8]P4s2sF11W4*%6QL''A7RkH4>em)@m1>a2)8]R4s2sF11`=,%6QL''A7e"J4>em*3''Id62)8_s4s2sF11alX%6QL''AMH@k4>em*@m1>a2)8_u4s2sF11i@,%6QL''AMZLm4>em+2EhR42)8`"4s2sF1GE<&%6QL''AMlXo4>eoL1Hl712)8`$4s2sF1GLjQ%6QL''AN)dq4>eoL@Qk5`2)8`&4s2sF1GNH)%6QL''AN;ps4>eoM2*MI32)8`T4s2sF1G^^K%6QL''AhZCk4>eoN@m1>a2)8bu4s2sF1Gq0V%6QL''AhlOm4>eoP@Qk5`2)8c"4s2sF1H%*S%6QL''Ai)[o4>eoS1Hl712)8c&4s2sF1H8r0%6QL''AiMss4>ep''0g6%/2)8c(4s2sF1L`4*%6QL''AmmkG4>ep(3''Id62)8cQ4s2sF1LalY%6QL''An+"I4>ep)Aj-Yd2)8cU4s2sF1Lt&\%6QL(0JG[54>ep+0Koq.2)?p@4s2sF1M&L/%6QL(0JYg74>erL1-Q.02)?pB4s2sF1biE&%6QL(0Jks94>erN0g6%/2)?pD4s2sF1brZ,%6QL(0K)*;4>erP1d2@22)?pF4s2sF1c.-T%6QL(0K;6=4>erPAj-Yd2)?pH4s2sF1c8i.%6QL(0O[-f4>erR1d2@22)?pq4s2sF1c@9V%6QL(0Om9h4>erR3Bdm72)?pu4s2sF1cR3R%6QL(0ebd64>erT1Hl712)?sA4s2sF1cR?V%6QL(0etp84>erT3Bdm72)?sC4s2sF1c[9S%6QL(0f2'':4>erUAj-Yd2)?sE4s2sF1h0rX%6QL(0fD3<4>es,0Koq.2)?sG4s2sF1hJX0%6QL(0fV?>4>es-ANgPc2)?sr4s2sF2)@!O%6QL(0k3Bi4>euP@Qk5`2)?st4s2sF2)Ac,%6QL(0kENk4>euQ3Bdm72)?t!4s2sF2)Ji-%6QL(1,(m74>euR3''Id62)@!D4s2sF2)f,2%6QL(1,M0;4>euV1Hl712)@!F4s2sF2*!TZ%6QL(1,_<=4>f!)1Hl712)@!H4s2sF2.J@)%6QL(1,qH?4>f!+@Qk5`2)@!s4s2sF2.U8^%6QL(11NKj4>f!.Aj-Yd2)@!u4s2sF2D@!P%6QL(11`Wl4>f#N@6P,_2)@""4s2sF2DI3U%6QL(1GD!84>f#Q1Hl712)@$C4s2sF2D\i,%6QL(1GV-:4>f#R0g6%/2)@$G4s2sF2Dd<U%6QL(1H@WA4>f#U2*MI32)@$s4s2sF2E3NW%6QL(1L`Nj4>f#V@Qk5`2)@$u4s2sF2ISO.%6QL(1LrZl4>f$*@Qk5`2)@%"4s2sF2I^5]%6QL(1M/fn4>f$,@Qk5`2)@''C4s2sF2InL*%6QL(1bh0:4>f$-@m1>a2)@''J4s2sF2_d$N%6QL(1cRZA4>f&Q0Koq.2)@''L4s2sF2_m-P%6QL(1h/]l4>f&Q@6P,_2)@("4s2sF2`#&0%6QL(1hAin4>f&T1-Q.02)@($4s2sF2`<ET%6QL(2)%3:4>f&U2a.[52)@*E4s2sF2`>52%6QL(2)7?<4>f&V0g6%/2)@*G4s2sF2`E`\%6QL(2)IK>4>f&VANgPc2)@*I4s2sF2`NNU%6QL(2)[W@4>f&X1d2@22)@*K4s2sF2`Wl^%6QL(2)mcB4>f&XAj-Yd2)@*M4s2sF2dnF)%6QL(2.8Zk4>f&X2*MI\DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,g1GrW*+?VM?@5g@Z4>eoP@m2"t2)er(4q0V31Gr],+?VM?@UqY34>eoPANh5!2)f&V4q0V31Grc.+?VM?AN;p`4>eoQ0KpUA2)f,Y4q0V31H$sO+?VM@0Jbm%4>eoQ1-QgC2)m9L4q0V31H%$Q+?VM?AMH@X4>eoQ1d3$E2)m:"4q0V31H%*S+?VM@0k*<U4>eoQ2Ei6G2)m=&4q0V31H%0U+?VM@11WQX4>eoQ3''JHI2)mC(4q0V31H%6W+?VM@2)%3''4>eoQ@6Per2)mHN4q0V31H&]++?VM@2E3l04>eoQ@m2"t2)mNS4q0V31H&i/+?VM@3+G,]4>eoR0KpUA2)mTS4q0V31H.-S+?VM@@5^:Y4>eoR2*N-F2)o)&4q0V31H.3U+?VM@@kp4W4>eoR2a/?H2)o)*4q0V31H.9W+?VM@A2ZU\4>eoR3BeQJ2)o,W4q0V31H/`++?VM@AMH@X4>eoR@Qkns2*!?K4q0V31H/l/+?VMA0k<HW4>eoRAj.>"2*!EH4q0V31H7''P+?VMA1,qH,4>eoS0g6^B2*!HH4q0V31H7-R+?VMA1G_3(4>eoS2*N-F2*!I)4q0V31H79V+?VMA1c%<)4>eoS2a/?H2*!NL4q0V31H7?X+?VMA2.\r\4>eoS3BeQJ2*!R(4q0V31H8f,+?VMA2J,,^4>eoS@Qkns2*!TN4q0V31H8l.+?VMA2e"r[4>eoSA3M+u2*!X+4q0V31H8r0+?VMA3+Y8_4>eoSAj.>"2*!ZS4q0V31H@-Q+?VMA@5g@Z4>eoT0g6^B2*#)U4q0V31H@3S+?VMA@PBtT4>eoT1HlpD2*#,)4q0V31H@9U+?VMA@kg.V4>eoT2*N-F2*#/''4q0V31H@?W+?VMAAS++84>eoT2a/?H2*#8(4q0V31H@EY+?VMAAi)[\4>eoT3BeQJ2*#8-4q0V31HAl-+?VMi0JG["4>eoT@Qkns2.81M4q0V31HAr/+?VMi0etp%4>eoTA3M+u2.84N4q0V31HB#1+?VMi1,M0(4>eoTAj.>"2.87"4q0V31LVt$+?VMi11<?U4>ep''0g6^B2.89p4q0V31LW+(+?VMi1cRZ.4>ep''2*N-F2.8=O4q0V31LW1*+?VMi2)%3''4>ep''2a/?H2.8@R4q0V31LW7,+?VMi2e"r[4>ep''3BeQJ2.8L!4q0V31LX]U+?VMi3AWi.4>ep''@Qkns2.8L''4q0V31LXcW+?VMi3B9844>ep''A3M+u2.9s''4q0V31LXiY+?VMi@l?L[4>ep''Aj.>"2.9uS4q0V31L`%%+?VMi@qIn64>ep(0g6^B2.:*-4q0V31L`+''+?VMj0JPa#4>ep(1HlpD2.ACO4q0V31L`1)+?VMj2.\r\4>ep(2*N-F2.AIT4q0V31L`7++?VMj3&Wr04>ep(2a/?H2.AOV4q0V31LacV+?VMj3A`o/4>ep(A3M+u2.C!)4q0V31LaoZ+?VMj@:h\44>ep)0g6^B2.C$''4q0V31Li1(+?VMj@UhS24>ep)1HlpD2.C&M4q0V31Li7*+?VMj@q7b44>ep)2*N-F2.C''-4q0V31LiC.+?VMjAS++84>ep)3BeQJ2.C/S4q0V31LjiW+?VMk0Om9U4>ep)@Qkns2.J@"4q0V31LjoY+?VMk1,_<*4>ep)A3M+u2.JCQ4q0V31Lju[+?VMk1GV-''4>ep)Aj.>"2.JF"4q0V31Lr1''+?VMk2.8ZX4>ep*1HlpD2.JRS4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QL(A2HIm4>gV-A3LGb2)Ac#4s2sF@lQD2%6QL(A2ZUo4>gV/1-Q.02)Ac%4s2sF@l\''`%6QL(A2laq4>gVX1-Q.02)Ac''4s2sF@q%8Y%6QL(A77YE4>gVZ2a.[52)AcP4s2sF@qB48%6QL(A7[qI4>gY(1-Q.02)AcT4s2sFA25r)%6QL(AM?:j4>gY*Aj-Yd2)Aeu4s2sFA2H80%6QL(AMQFl4>gY,2*MI32)Af"4s2sFA2Q)*%6QL(AMu^p4>gY-1-Q.02)Af&4s2sFA2Z8.%6QL(ARRbF4>gY.Aj-Yd2)AfQ4s2sFA2n!]%6QL(ARdnH4>gY01Hl712)AfS4s2sFA2uM2%6QL(AS"%J4>gY0@Qk5`2)AfU4s2sFA3"6c%6QL(AhZCk4>gYX@Qk5`2)Ai!4s2sFA7IDZ%6QL(AhlOm4>gYZANgPc2)Ai#4s2sFA7R\a%6QL(Ai)[o4>g\(2a.[52)Ai%4s2sFAM@XY%6QL(Ai;gq4>g\*0Koq.2)Ai''4s2sFAMdj[%6QL(AmmkG4>g\-@m1>a2)AiR4s2sFAN);,%6QL(An+"I4>g\0ANgPc2)AiT4s2sFARR>X%6QL(An=.K4>g\Y1d2@22)AiV4s2sFAR[AX%6QL)0JG[54>g\[@m1>a2)I!A4s2sFARf:8%6QL)0JYg74>g\\@m1>a2)I!C4s2sFARo@9%6QL)0Jks94>g\]2*MI32)I!E4s2sFAS#=7%6QL)0K)*;4>g_)2EhR42)I!G4s2sFAhc;0%6QL)0K;6=4>g_+1d2@22)I!r4s2sFAhmp]%6QL)0Om9h4>g_,0Koq.2)I!t4s2sFAi"$_%6QL)0P*Ej4>g_-1d2@22)I"!4s2sFAi4$]%6QL)0ebd64>g_/0Koq.2)I$B4s2sFAi=6b%6QL)0f2'':4>g_03''Id62)I$F4s2sFAiF-^%6QL)0fD3<4>g_1A3LGb2)I$H4s2sFAiVb5%6QL)0fV?>4>g_2A3LGb2)I$J4s2sFAmo.4%6QL)0k3Bi4>g_\3''Id62)I%"4s2sFAn<qc%6QL)1,(m74>g_^@m1>a2)I''C4s2sFAnEe^%6QL)1,;$94>g__2EhR42)I''E4s2sFAnGI8%6QL)1,M0;4>nlI@6P,_2)I''G4s2sG0JP@I%6QL)1,_<=4>nlJAj-Yd2)I''I4s2sG0J[0&%6QL)1,qH?4>nlM0Koq.2)I''K4s2sG0JkaQ%6QL)11<?h4>nlN0g6%/2)I(!4s2sG0K1^M%6QL)11`Wl4>nlPANgPc2)I(#4s2sG0K:gO%6QL)1GD!84>nlQ2EhR42)I*D4s2sG0K;$U%6QL)1GV-:4>nlQANgPc2)I*F4s2sG0KCjO%6QL)1Gh9<4>nlR1Hl712)I*H4s2sG0KD*V%6QL)1H%E>4>o''-Aj-Yd2)I*J4s2sG0OZ_#%6QL)1H7Q@4>nm%2*MI32)I*L4s2sG0Oct)%6QL)1LWHi4>nm''1-Q.02)I+$4s2sG0P*"''%6QL)1b_*94>nm)2*MI32)I-E4s2sG0P4fY%6QL)1bq6;4>noJ1-Q.02)I-G4s2sG0ebOM%6QL)1c.B=4>noJ@m1>a2)I-I4s2sG0ekUN%6QL)1c@N?4>noL1-Q.02)I-K4s2sG0f(OJ%6QL)1cRZA4>noM2*MI32)I-M4s2sG0f(gR%6QL)1grQj4>noN2*MI32)I.!4s2sG0f1mS%6QL)1h/]l4>noP@m1>a2)I.#4s2sG0fLjO%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>erPANh5!2DI-M4q0V31c7''Q+?VP:3+>&\4>erQ1d3$E2DI4%4q0V31c7-S+?VP:@5''kS4>erQ2Ei6G2DJWK4q0V31c8`++?VP:A7[q64>erQ@m2"t2DJbt4q0V31c8f-+?VP:AN)d^4>erQANh5!2DJc''4q0V31c@''P+?VP:AS++84>erR1-QgC2DQs@4q0V31c@-R+?VP;0Jbm%4>erR1d3$E2DR!s4q0V31c@3T+?VP;1,(m$4>erR2Ei6G2DR$H4q0V31c@9V+?VP;11EEV4>erR3''JHI2DR*E4q0V31c@?X+?VP;1c.B*4>erR@6Per2DR-D4q0V31cAf,+?VP;2)IK+4>erR@m2"t2DR."4q0V31cAl.+?VP;2e5)]4>erS0g6^B2DS_t4q0V31cI6T+?VP;@UVG04>erS2a/?H2DScR4q0V31cIBX+?VP;ARRb34>erS3BeQJ2DSl"4q0V31cJi,+?VP<0Jks&4>erS@Qkns2D[$r4q0V31cJo.+?VP<0f)!&4>erSA3M+u2D[*K4q0V31cJu0+?VP<11WQX4>erSAj.>"2D[0u4q0V31cR0Q+?VP<2)7?)4>erT0g6^B2D[3I4q0V31cR6S+?VP<2)mc/4>erT1HlpD2D[4"4q0V31cR<U+?VP<2E!`.4>erT2*N-F2D[7%4q0V31cRBW+?VP<2`Nu14>erT2a/?H2D[?N4q0V31cRHY+?VP<3FP)\4>erT3BeQJ2D\bu4q0V31cSo-+?VP<@5^:Y4>erT@Qkns2D\cP4q0V31cSu/+?VP<@kg.V4>erTA3M+u2D\i#4q0V31cT&1+?VP<@lQX]4>erTAj.>"2D\iS4q0V31c[6R+?VP<A2?CY4>erU0g6^B2D\r$4q0V31c[<T+?VP=0O[-S4>erU1HlpD2Dd3D4q0V31c[BV+?VP=1h&WX4>erU2*N-F2Dd7&4q0V31c[HX+?VP=2)@E*4>erU2a/?H2Dd:$4q0V31c[NZ+?VP=2DIB)4>erU3BeQJ2Dd<J4q0V31c\u.+?VP=3&Nl/4>erU@Qkns2DdC*4q0V31c]&0+?VP=3FY/]4>erUA3M+u2Dehs4q0V31c],2+?VP=@5C(V4>erUAj.>"2Dei#4q0V31gr(%+?VP=@5pF[4>es(0g6^B2DelR4q0V31gr.''+?VP=@lZ^^4>es(1HlpD2Der!4q0V31gr:++?VP=Ai2a]4>es(2a/?H2Dm0C4q0V31gsiW+?VP>0f)!&4>es(@m2"t2Dm6J4q0V31gsoY+?VP>1GM''&4>es(ANh5!2Dm:!4q0V31h&1''+?VP>1c%<)4>es)1-QgC2Dm?G4q0V31h&7)+?VP>2)7?)4>es)1d3$E2Dm@(4q0V31h&=++?VP>2e5)]4>es)2Ei6G2DmKS4q0V31h&C-+?VP>@5''kS4>es)3''JHI2Dno!4q0V31h&I/+?VP>@5^:Y4>es)@6Per2DnoS4q0V31h''oX+?VP>@P^1W4>es)@m2"t2Do#''4q0V31h''uZ+?VP>A2la^4>es)ANh5!2Do#W4q0V31h/=*+?VP?0P!?V4>es*2Ei6G2E!9J4q0V31h/I.+?VP?0k<HW4>es*3''JHI2E!<H4q0V31h/O0+?VP?1,_<*4>es*@6Per2E!<N4q0V31h0uY+?VP?1H@W.4>es*@m2"t2E!?M4q0V31h1&[+?VP?1b_*&4>es*ANh5!2E!BM4q0V31h1,]+?VP?1grQWASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>2)Jht4s2sG2DmHX%6QL)A2-7j4>o)U0Koq.2)Ji!4s2sG2E*KW%6QL)A2?Cl4>o)VAj-Yd2)Ji#4s2sG2E*W[%6QL)A2QOn4>o)V@m1>a2)Ji(4s2sG2E>A5%6QL)A77YE4>o33ANgPc2)JiS4s2sG2Ig5\%6QL)A7[qI4>o*-ANgPc2)JiU4s2sG2InX.%6QL)AM?:j4>o*.Aj-Yd2)Jl!4s2sG2J$>]%6QL)AMQFl4>o*/ANgPc2)Jl#4s2sG2_[0S%6QL)AMcRn4>o,Q@m1>a2)Jl%4s2sG2_m''N%6QL)AMu^p4>o,R1-Q.02)Jl''4s2sG2`##/%6QL)AN2jr4>o,T2*MI32)Jl)4s2sG2`>/0%6QL)ARRbF4>o,X1d2@22)JlR4s2sG2`PA4%6QL)ARdnH4>o,Y2EhR42)JlT4s2sG2`Wl^%6QL)AhZCk4>o-.1-Q.02)Jo"4s2sG2e+^/%6QL)AhlOm4>o-.3Bdm72)Jo$4s2sG2e6D^%6QL)Ai)[o4>o-00g6%/2)Jo&4s2sG2e=m2%6QL)Ai;gq4>o-11-Q.02)Jo(4s2sG2eFs3%6QL)AiMss4>o/R1d2@22)Jo*4s2sG3&*EW%6QL)AmmkG4>o/S2a.[52)JoS4s2sG3&5)0%6QL)An+"I4>o/TAj-Yd2)JoU4s2sG3&G&-%6QL)An=.K4>o/V3''Id62)JoW4s2sG3&YA4%6QL*0JYg74>o/X3Bdm72)R''D4s2sG3&b;1%6QL*0Jks94>o/Y3''Id62)R''F4s2sG3+4O*%6QL*0K)*;4>o0-3Bdm72)R''H4s2sG3+6A^%6QL*0K;6=4>o000g6%/2)R''J4s2sG3+Og/%6QL*0Om9h4>o01@6P,_2)R''u4s2sG3+b''4%6QL*0P*Ej4>o02A3LGb2)R("4s2sG3A<?T%6QL*0ebd64>o2R3Bdm72)R*C4s2sG3AE3O%6QL*0etp84>o2S2EhR42)R*E4s2sG3AWBR%6QL*0f2'':4>o2V2*MI32)R*G4s2sG3Ab;2%6QL*0fD3<4>o2X2EhR42)R*K4s2sG3B(D2%6QL*0k!6g4>o2ZA3LGb2)R*t4s2sG3FOX+%6QL*0k3Bi4>o3/3''Id62)R+!4s2sG3Fap1%6QL*0kENk4>o303''Id62)R+#4s2sG3G)hd%6QL*1,(m74>pV%0Koq.2)R-D4s2sG@5''K$%6QL*1,;$94>pV''0Koq.2)R-F4s2sG@59Z''%6QL*1,M0;4>pV(2a.[52)R-H4s2sG@5To+%6QL*1,_<=4>pV+@6P,_2)R-J4s2sG@5ou*%6QL*11<?h4>pV.@Qk5`2)R."4s2sG@:D&W%6QL*1GD!84>pVX@m1>a2)R0G4s2sG@:h2W%6QL*1Gh9<4>pV[@m1>a2)R0I4s2sG@PBQ$%6QL*1H7Q@4>pY&3Bdm72)R0M4s2sG@PTo,%6QL*1LWHi4>pY(@Qk5`2)R1!4s2sG@P]o+%6QL*1LiTk4>pY*A3LGb2)R1#4s2sG@Poo)%6QL*1M&`m4>pY+A3LGb2)R1%4s2sG@Q%[Z%6QL*1b_*94>pY,ANgPc2)R3F4s2sG@Q,u)%6QL*1bq6;4>pY.2*MI32)R3H4s2sG@Q?A2%6QL*1cRZA4>pYW3''Id62)R3N4s2sG@UWb1%6QL*1hAin4>pY[1Hl712)R4&4s2sG@kf`&%6QL*2)%3:4>p\(3Bdm72)R6G4s2sG@khRZ%6QL*2)RQ?4>p\)ANgQ7DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,g2)R9U+?VPl1L`NW4>euR2a/?H2IeRQ4q0V32)R?W+?VPl1hJo\4>euR3BeQJ2IeXS4q0V32)Sf++?VPl2`Nu14>euR@Qkns2Ie^*4q0V32)Sl-+?VPl3G(Ga4>euRA3M+u2Ig2M4q0V32)Sr/+?VPl@PU+V4>euRAj.>"2Ig6-4q0V32)[-P+?VPl@qIn64>euS0g6^B2Ig8P4q0V32)[3R+?VPlAN)d^4>euS1HlpD2Ig>S4q0V32)[9T+?VPlAi)[\4>euS2*N-F2InL#4q0V32)[?V+?VPm0P3KX4>euS2a/?H2InNu4q0V32)[EX+?VPm0k!6T4>euS3BeQJ2InR&4q0V32)\l,+?VPm2.f#]4>euS@Qkns2In^)4q0V32)\r.+?VPm3ANc-4>euSA3M+u2Ing,4q0V32)]#0+?VPm@Q-I[4>euSAj.>"2Ip9-4q0V32)d3Q+?VPmAM?:W4>euT0g6^B2IpAS4q0V32)d9S+?VPmAMlX\4>euT1HlpD2IpB24q0V32)d?U+?VPmAi)[\4>euT2*N-F2J"Qr4q0V32)dEW+?VPn0Jks&4>euT2a/?H2J"[R4q0V32)dKY+?VPn2)7?)4>euT3BeQJ2J"aV4q0V32)er-+?VPn2DRH*4>euT@Qkns2J"d+4q0V32)f#/+?VPn3+P2^4>euTA3M+u2J"m/4q0V32)f)1+?VPn@5''kS4>euU0g6^B2J$>R4q0V32)m?T+?VPn@U_M14>euU1HlpD2J$AP4q0V32)mEV+?VPn@lQX]4>euU2*N-F2J$B/4q0V32)mKX+?VPn@qIn64>euU3BeQJ2J+X"4q0V32)o#.+?VPo0K;6*4>euU@Qkns2J+XR4q0V32)o)0+?VPo0fD3)4>euUA3M+u2J+[Q4q0V32)o/2+?VPo1L`NW4>euUAj.>"2J+^T4q0V32*!?S+?VPo1hJo\4>euV0g6^B2J+g&4q0V32*!EU+?VPo2.Sl[4>euV1HlpD2J+jW4q0V32*!KW+?VPo3&<`-4>euV2*N-F2J+s*4q0V32*!QY+?VPo@5^:Y4>euV2a/?H2J-DP4q0V32*!W[+?VPo@l6FZ4>euV3BeQJ2J-M[4q0V32*#)/+?VPoAn4(74>euV@Qkns2_ZsF4q0V32*#/1+?VS:11i]Z4>euVA3M+u2_[$E4q0V32*#53+?VS:1H.K,4>euVAj.>"2_[''F4q0V32.81&+?VS:1cRZ.4>f!)0g6^B2_[*H4q0V32.87(+?VS:3A`o/4>f!)1HlpD2_[6M4q0V32.8=*+?VS:3FY/]4>f!)2*N-F2_\\t4q0V32.8C,+?VS:Ammk44>f!)2a/?H2_d!D4q0V32.8I.+?VS;0Od3T4>f!)3BeQJ2_d''u4q0V32.9oW+?VS;1H7Q-4>f!)@Qkns2_d-D4q0V32.9uY+?VS;1h&WX4>f!)A3M+u2`,&)4q0V32.:&[+?VS;2)d].4>f!)Aj.>"2_d0u4q0V32.A7''+?VS;3+G,]4>f!*0g6^B2_d=$4q0V32.A=)+?VS;@PBtT4>f!*2*N-F2_efP4q0V32.AI-+?VS;A77Y24>f!*2a/?H2_eo(4q0V32.BuX+?VS<0f)!&4>f!*@Qkns2_m*r4q0V32.C&Z+?VS<1,M0(4>f!*A3M+u2_m.#4q0V32.C,\+?VS<1c7H+4>f!*Aj.>"2_m4$4q0V32.J=(+?VS<2.\r\4>f!+0g6^B2_m:#4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QL*@kp4j4?##S0g6%/2)Sl$4s2sH1,q9X%6QL*@l?Ln4?##U1Hl712)Sl&4s2sH11<.+%6QL*@pqPD4?#$+3''Id62)SlQ4s2sH11Xu\%6QL*@q.\F4?#$-ANgPc2)SlS4s2sH1GE?''%6QL*@q@hH4?#&N1Hl712)SlU4s2sH1G^dM%6QL*A2$1i4?#&P2*MI32)So!4s2sH1Gq''S%6QL*A2ZUo4?#&S3Bdm72)So''4s2sH1H.<X%6QL*A2laq4?#&U0Koq.2)So)4s2sH1H8r0%6QL*A77YE4?#&V0Koq.2)SoR4s2sH1H@6T%6QL*A7IeG4?#&V2a.[52)SoT4s2sH1LX]U%6QL*A7[qI4?#'')A3LGb2)SoV4s2sH1Li=,%6QL*AM?:j4?#''+@m1>a2)Sr"4s2sH1Lr:*%6QL*AMQFl4?#'',A3LGb2)Sr$4s2sH1M&I.%6QL*AMcRn4?#''.2a.[52)Sr&4s2sH1M1)[%6QL*AN2jr4?#)O0g6%/2)Sr*4s2sH1brT*%6QL*ARdnH4?#)TANgPc2)SrU4s2sH1cT)2%6QL*AS"%J4?#)W0g6%/2)SrW4s2sH1c\u.%6QL*AhZCk4?#**ANgPc2)Su%4s2sH1h1#Z%6QL*Ai)[o4?#*-0Koq.2)Su''4s2sH1h8C+%6QL*Ai;gq4?#*-3''Id62)Su)4s2sH1h:&Z%6QL*AiMss4?#*.3''Id62)Su+4s2sH1hC)Z%6QL*AmmkG4?#*.Aj-Yd2)SuT4s2sH1hL5]%6QL*An+"I4?#,O2EhR42)SuV4s2sH2)-jM%6QL*An=.K4?#,Q2a.[52)SuX4s2sH2)70U%6QL+0JG[54?#,R2EhR42)[-C4s2sH2)@6V%6QL+0JYg74?#,S1Hl712)[-E4s2sH2)I6U%6QL+0Jks94?#,T2a.[52)[-G4s2sH2)Su0%6QL+0K)*;4?#,U0g6%/2)[-K4s2sH2)mHW%6QL+0O[-f4?#,X2*MI32)[-t4s2sH2*#/1%6QL+0Om9h4?#-,@6P,_2)[.!4s2sH2DHsN%6QL+0P*Ej4?#/R1Hl712)[.#4s2sH2DR9V%6QL+0etp84?#/T0Koq.2)[0F4s2sH2Dd6S%6QL+0f2'':4?#/U3Bdm72)[0H4s2sH2E3QX%6QL+0fV?>4?#/YAj-Yd2)[0u4s2sH2IeI*%6QL+0k3Bi4?#0.@Qk5`2)[1"4s2sH2InX.%6QL+0kENk4?#000Koq.2)[1$4s2sH2J+j2%6QL+1,(m74?#2Q2EhR42)[3E4s2sH2_d''O%6QL+1,M0;4?#2R@m1>a2)[3I4s2sH2_nr.%6QL+1,_<=4?#2TA3LGb2)[3K4s2sH2`*9R%6QL+1,qH?4?#2V1-Q.02)[4!4s2sH2`EES%6QL+11`Wl4?#2YA3LGb2)[4%4s2sH2dnI*%6QL+1GD!84?#3-ANgPc2)[6F4s2sH2e"L*%6QL+1GV-:4?#3.2*MI32)[6H4s2sH2e+X-%6QL+1Gh9<4?#301-Q.02)[6J4s2sH2e4d0%6QL+1H%E>4?#323''Id62)[6L4s2sH3&"o-%6QL+1H7Q@4?#5S0g6%/2)[6N4s2sH3&+r-%6QL+1LWHi4?#5T1Hl712)[7"4s2sH3&EHU%6QL+1LiTk4?#5V3''Id62)[7$4s2sH3&G,/%6QL+1M&`m4?#5W1-Q.02)[7&4s2sH3&P82%6QL+1bq6;4?#5X1Hl712)[9I4s2sH3&kM6%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>f#R1d3$E2`P5*4q0V32Dd9T+?VSB@:MJ14>f#R2Ei6G2`P8%4q0V32Dd?V+?VSB@UqY34>f#R3''JHI2`P8Y4q0V32DdEX+?VSB@lHR\4>f#R@6Per2`P>''4q0V32Del,+?VSBA2ZU\4>f#R@m2"t2`P>W4q0V32Der.+?VSBA7e"74>f#RANh5!2`PAW4q0V32Df#0+?VSBAhuU[4>f#S0KpUA2`PD-4q0V32Dm3Q+?VSBAnF494>f#S1-QgC2`WQM4q0V32Dm9S+?VSC0k!6T4>f#S1d3$E2`WU(4q0V32Dm?U+?VSC1,(m$4>f#S2Ei6G2`WWR4q0V32DmEW+?VSC11WQX4>f#S3''JHI2`WZO4q0V32DmKY+?VSC1c.B*4>f#S@6Per2`W^(4q0V32Dnr-+?VSC1hJo\4>f#S@m2"t2`W`M4q0V32Do#/+?VSC2E<r14>f#SANh5!2`Wg+4q0V32Do)1+?VSC2e>/^4>f#T0KpUA2`Wj-4q0V32E!9R+?VSC3AE],4>f#T1-QgC2`WlS4q0V32E!?T+?VSC3Fb5^4>f#T1d3$E2`Y;+4q0V32E!EV+?VSC@:h\44>f#T2Ei6G2`YA[4q0V32E!KX+?VSCA7Rk54>f#T3''JHI2`YG''4q0V32E!QZ+?VSCAMQFY4>f#T@6Per2`YG,4q0V32E##.+?VSCAhcIY4>f#T@m2"t2`YJ04q0V32E#)0+?VSCAn+"64>f#TANh5!2dnC!4q0V32E#/2+?VSk1,1s%4>f#U0KpUA2dnI#4q0V32E*?S+?VSk11EEV4>f#U1-QgC2dnIR4q0V32E*KW+?VSk1cRZ.4>f#U2Ei6G2dnR$4q0V32E*QY+?VSk2DmZ-4>f#U3''JHI2dnXV4q0V32E*W[+?VSk3+>&\4>f#U@6Per2dn^$4q0V32E,)/+?VSk3FtA`4>f#U@m2"t2dp2V4q0V32E,/1+?VSkA7@_34>f#UANh5!2dp8X4q0V32E,53+?VSkARdn54>f#V0KpUA2dp;Q4q0V32E3ET+?VSkAn!q54>f#V1-QgC2e"LR4q0V32E3KV+?VSl1,D*''4>f#V1d3$E2e"O&4q0V32E3QX+?VSl1GD!%4>f#V2Ei6G2e"R"4q0V32E3]\+?VSl2IScY4>f#V@6Per2e"a''4q0V32E5/0+?VSl3&s/34>f#V@m2"t2e"aX4q0V32E552+?VSl3As&14>f#VANh5!2e$2Q4q0V32E5;4+?VSl@PU+V4>f#W0KpUA2e$5S4q0V32E<QW+?VSl@UqY34>f#W1d3$E2e$8P4q0V32E<WY+?VSl@lQX]4>f#W2Ei6G2e$<,4q0V32E>51+?VSm0JYg$4>f#W@m2"t2e+Nu4q0V32E>;3+?VSm0K)*(4>f#WANh5!2e+OO4q0V32E>A5+?VSm0f_E,4>f$*0KpUA2e+RO4q0V32IS=(+?VSm1,V6)4>f$*1-QgC2e+UQ4q0V32ISC*+?VSm1Gh9)4>f$*2Ei6G2e+[&4q0V32ISO.+?VSm2)RQ,4>f$*3''JHI2e+^R4q0V32ISU0+?VSm2D[N+4>f$*@6Per2e+a+4q0V32IU&Y+?VSm2e,#\4>f$*@m2"t2e+g*4q0V32IU,[+?VSm@PBtT4>f$*ANh5!2e-<+4q0V32IU2]+?VSm@qIn64>f$+0KpUA2e-AT4q0V32I\C)+?VSmAN;p`4>f$+1-QgC2e4US4q0V32I\I++?VSn0ekj$ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>2)\o#4s2sHA2,u+%6QL+@Pp=l4?$e+2EhR42)\o%4s2sHA27RW%6QL+@Q-In4?$e+A3LGb2)\o''4s2sHA2Q)*%6QL+@Q?Up4?$e.2a.[52)\oP4s2sHA2Z;/%6QL+@U_MD4?$e/2a.[52)\oR4s2sHA2cJ3%6QL+@UqYF4?$e0@Qk5`2)\oT4s2sHA2l;-%6QL+@V.eH4?$e22EhR42)\r&4s2sHAM>f%%6QL+@lHRo4?$e^1-Q.02)\r(4s2sHA7]15%6QL+@lZ^q4?$e^A3LGb2)\rQ4s2sHA7f76%6QL+@q%VE4?$h+@m1>a2)\rS4s2sHAMRd[%6QL+@q7bG4?$h-1Hl712)\rU4s2sHAM[p^%6QL+@qInI4?$h.ANgPc2)\u!4s2sHAMl/*%6QL+A2-7j4?$h/3''Id62)\u#4s2sHAMn''`%6QL+A2?Cl4?$h02*MI32)\u%4s2sHAN;V3%6QL+A2c[p4?$k.Aj-Yd2)\u)4s2sHAi4''^%6QL+A2ugr4?$k12EhR42)\uR4s2sHAiMJ.%6QL+A7@_F4?$k3A3LGb2)\uT4s2sHAiOBd%6QL+A7RkH4?$k\2EhR42)\uV4s2sHAmo+3%6QL+A7e"J4?$k]1d2@22)]#"4s2sHAn#76%6QL+AMH@k4?$k^0Koq.2)]#$4s2sHAn*ea%6QL+AMZLm4?$k`3''Id62)]#&4s2sI0JI*&%6QL+AMlXo4?,#L1Hl712)]#(4s2sI0JR*%%6QL+AN;ps4?,#MANgPc2)]#S4s2sI0JbOL%6QL+AR[hG4?,#NANgPc2)]#U4s2sI0JkII%6QL+ARmtI4?,#O1d2@22)]#W4s2sI0K(aO%6QL+AS++K4?,#QA3LGb2)]&#4s2sI0K:dN%6QL+AhcIl4?,$(3Bdm72)]&%4s2sI0Om(+%6QL+AhuUn4?,$)A3LGb2)]&''4s2sI0Ouq&%6QL+Ai2ap4?,$+ANgPc2)]&)4s2sI0P3((%6QL+AiDmr4?,$,2EhR42)]&+4s2sI0P3=/%6QL+AiW$t4?,&L@Qk5`2)]&T4s2sI0em0%%6QL+An!qH4?,&N0Koq.2)]&V4s2sI0f*<''%6QL+An4(J4?,&P2*MI32)]&X4s2sI0f1gQ%6QL+AnF4L4?,&Q1-Q.02)d3C4s2sI0fCaM%6QL,0JPa64?,&S2a.[52)d3E4s2sI0fV''T%6QL,0Jbm84?,&TANgPc2)d3G4s2sI0f_-U%6QL,0Ju$:4?,''(1-Q.02)d3I4s2sI0k"WW%6QL,0K20<4?,''*2*MI32)d3K4s2sI0k4cY%6QL,0KD<>4?,'',@Qk5`2)d4"4s2sI0kN:,%6QL,0P*Ej4?,''-3''Id62)d4$4s2sI1,(CG%6QL,0ebd64?,)MAj-Yd2)d6E4s2sI1,3<''%6QL,0etp84?,)O3''Id62)d6G4s2sI1,LdN%6QL,0f2'':4?,)QANgPc2)d6I4s2sI1,UdM%6QL,0fD3<4?,)R2EhR42)d6K4s2sI1,_''T%6QL,0fV?>4?,)T@Qk5`2)d7!4s2sI1,q3V%6QL,0k3Bi4?,)V1d2@22)d7#4s2sI1-%6V%6QL,0kENk4?,)V3''Id62)d9F4s2sI11;k#%6QL,1,;$94?,*,@6P,_2)d9H4s2sI11`.''%6QL,1,M0;4?,*-1d2@22)d9J4s2sI11au[%6QL,11<?h4?,,P0g6%/2)d:"4s2sI1GWH(%6QL,11NKj4?,,PANgQ7DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,g2_no-+?VV>1G_3(4>f&QANh5!3&<?L4q0V32_nu/+?VV>1LrZY4>f&R0KpUA3&<BH4q0V32`!6R+?VV>2_[E)4>f&R1d3$E3&<NJ4q0V32`!<T+?VV>3&3Z,4>f&R2Ei6G3&<NN4q0V32`!BV+?VV>3B9844>f&R3''JHI3&<R)4q0V32`!HX+?VV>@5^:Y4>f&R@6Per3&=uQ4q0V32`"o,+?VV>@V%_44>f&R@m2"t3&<EJ4q0V32`"u.+?VV>AN2j_4>f&RANh5!3&E?M4q0V32`#&0+?VV>@:VP24>f&S0KpUA3&EC&4q0V32`*6Q+?VV?1c7H+4>f&S1-QgC3&EHN4q0V32`*<S+?VV?1h8cZ4>f&S1d3$E3&EKN4q0V32`*BU+?VV?2.JfZ4>f&S2Ei6G3&ENI4q0V32`*HW+?VV?2DdT,4>f&S3''JHI3&ENP4q0V32`*NY+?VV?2IScY4>f&S@6Per3&EQN4q0V32`+u-+?VV?2e5)]4>f&S@m2"t3&EWN4q0V32`,&/+?VV?3Aiu04>f&T1-QgC3&G,T4q0V32`3BT+?VV?AhlOZ4>f&T1d3$E3&G5+4q0V32`3NX+?VV@0K20)4>f&T3''JHI3&NC$4q0V32`3TZ+?VV@0ebd#4>f&T@6Per3&NF#4q0V32`5&.+?VV@1,;$&4>f&T@m2"t3&NHM4q0V32`5,0+?VV@11<?U4>f&TANh5!3&NKJ4q0V32`522+?VV@1H%E+4>f&U0KpUA3&NL(4q0V32`<BS+?VV@2)%3''4>f&U1-QgC3&NQK4q0V32`<TY+?VV@2`X&24>f&U3''JHI3&NZU4q0V32`<Z[+?VV@3+>&\4>f&U@6Per3&P+u4q0V32`>,/+?VV@@5U4X4>f&U@m2"t3&P,''4q0V32`>21+?VV@@Pg7X4>f&UANh5!3&P/''4q0V32`>83+?VV@@Q6O\4>f&V1HlpD3&P2$4q0V32`EQW+?VV@A77Y24>f&V2*N-F3&P8$4q0V32`EWY+?VV@AN2j_4>f&V2a/?H3&P;(4q0V32`E][+?VV@An+"64>f&V@Qkns3&WKO4q0V32`G51+?VVA0k*<U4>f&VA3M+u3&WQN4q0V32`G;3+?VVA1LWHV4>f&VAj.>"3&WR''4q0V32`NQV+?VVA2.Sl[4>f&W2*N-F3&WZO4q0V32`N]Z+?VVA2E<r14>f&W2a/?H3&W]R4q0V32`Nc\+?VVA3As&14>f&W3BeQJ3&Wd*4q0V32`P50+?VVA@50qT4>f&W@Qkns3&Y2''4q0V32`P;2+?VVA@:VP24>f&WAj.>"3&Y5)4q0V32`WQU+?VVA@Q?U]4>f&X0g6^B3&Y5X4q0V32`WWW+?VVA@l6FZ4>f&X1HlpD3&Y;&4q0V32`W]Y+?VVAA77Y24>f&X2*N-F3&Y;W4q0V32`Wc[+?VVAAM?:W4>f&X2a/?H3&Y>*4q0V32`Wi]+?VVAAN)d^4>f&X3BeQJ3&W`U4q0V32`Y;1+?VVB0Jks&4>f&X@Qkns3&`O''4q0V32`YA3+?VVB11i]Z4>f&XA3M+u3&`WK4q0V32dnC(+?VVB1c7H+4>f''+0g6^B3&`[)4q0V32dnI*+?VVB2DIB)4>f''+1HlpD3&`a-4q0V32dn[0+?VVB3A<W+4>f''+3BeQJ3&`iT4q0V32dp,Y+?VVB@5C(V4>f''+@Qkns3&b;$4q0V32dp2[+?VVB@lQX]4>f''+A3M+u3&b>U4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QL,@:_VF4?,912*MI32)erU4s2sI2e4p4%6QL,@PBtg4?,91@m1>a2)eu!4s2sI2e=a.%6QL,@PU+i4?,921d2@22)eu#4s2sI2eFd.%6QL,@Pg7k4?,931Hl712)eu%4s2sI2eG$5%6QL,@Q$Cm4?,93@6P,_2)eu''4s2sI2eHYc%6QL,@Q6Oo4?,;S3Bdm72)eu)4s2sI3&*EW%6QL,@UVGC4?,;T1-Q.02)euR4s2sI3&+i*%6QL,@UhSE4?,;TANgPc2)euT4s2sI3&<6P%6QL,@V%_G4?,;V2*MI32)euV4s2sI3&E?R%6QL,@k^(h4?,;W1Hl712)f#$4s2sI3&G).%6QL,@l-@l4?,;X0g6%/2)f#&4s2sI3&P20%6QL,@l?Ln4?,;Y0Koq.2)f#(4s2sI3&`QU%6QL,@lQXp4?,;Z3Bdm72)f#*4s2sI3&b;1%6QL,@pqPD4?,;[0Koq.2)f#S4s2sI3&tS7%6QL,@q.\F4?,</3''Id62)f#U4s2sI3+?;[%6QL,A2$1i4?,<2ANgPc2)f&#4s2sI3+Y$4%6QL,A26=k4?,<42a.[52)f&%4s2sI3A=u-%6QL,A2ZUo4?,>V0Koq.2)f&)4s2sI3ANQX%6QL,A2laq4?,>W0g6%/2)f&+4s2sI3AY)-%6QL,A77YE4?,>X2EhR42)f&T4s2sI3Ab>3%6QL,A7IeG4?,>Y1-Q.02)f&V4s2sI3Ai`Z%6QL,A7[qI4?,>Y@Qk5`2)f&X4s2sI3ArTU%6QL,AM?:j4?,>Z1Hl712)f)$4s2sI3AtG4%6QL,AMQFl4?,>[1Hl712)f)&4s2sI3B&fZ%6QL,AMcRn4?,>[@6P,_2)f)(4s2sI3B(J4%6QL,AMu^p4?,>\A3LGb2)f)*4s2sI3B8r\%6QL,ARRbF4?,?00Koq.2)f)U4s2sI3FXg/%6QL,ARdnH4?,?12EhR42)f)W4s2sI3Fk''4%6QL,AS"%J4?,?43Bdm72)f)Y4s2sI3Fu_b%6QL,AhZCk4?,?53Bdm72)f,''4s2sI@52=W%6QL,Ai)[o4?-b)0Koq.2)f,)4s2sI@59Z''%6QL,Ai;gq4?-b)2EhR42)f,-4s2sI@5;FY%6QL,AmmkG4?-b*A3LGb2)f,V4s2sI@5KZ%%6QL,An+"I4?-b+1Hl712)f,X4s2sI@5Ti)%6QL,An=.K4?-b,2EhR42)f,Z4s2sI@5VOY%6QL-0JG[54?-b-2*MI32)m9I4s2sI@5or)%6QL-0K)*;4?-b/1Hl712)m9K4s2sI@5q^[%6QL-0K;6=4?-b/Aj-Yd2)m9M4s2sI@6$),%6QL-0O[-f4?-b02a.[52)m:!4s2sI@6$>3%6QL-0Om9h4?-b0Aj-Yd2)m:#4s2sI@:;/[%6QL-0P*Ej4?-bXAj-Yd2)m:%4s2sI@:D#V%6QL-0ebd64?-bY@Qk5`2)m<F4s2sI@:M)W%6QL-0etp84?-bZ2EhR42)m<H4s2sI@:M8\%6QL-0f2'':4?-bZ@6P,_2)m<M4s2sI@:h2W%6QL-0f_E?4?-b]Aj-Yd2)m=!4s2sI@PD7T%6QL-0k*<h4?-e)ANgPc2)m=#4s2sI@P]]%%6QL-0k<Hj4?-e+@m1>a2)m=%4s2sI@Pfi(%6QL-0kNTl4?-e,3''Id62)m?F4s2sI@PhUZ%6QL-1,1s84?-e.1Hl712)m?H4s2sI@Q-;2%6QL-1,D*:4?-e01d2@22)m?J4s2sI@Q7m^%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>f)R2*N-F3+=jZ4q0V33&3BU+?VVn1H7Q-4>f)R2a/?H3+FaU4q0V33&3HW+?VVn2).9(4>f)R3BeQJ3+Fg*4q0V33&4o++?VVn2.A`Y4>f)R@Qkns3+FgV4q0V33&4u-+?VVn2*!i04>f)RAj.>"3+Fj)4q0V33&<<R+?VVn2e>/^4>f)S2*N-F3+FpW4q0V33&<HV+?VVn3A<W+4>f)S3BeQJ3+HDX4q0V33&=u,+?VVn@l?L[4>f)S@Qkns3+HH-4q0V33&>&.+?VVn@qIn64>f)SA3M+u3+HK04q0V33&>,0+?VVnAN2j_4>f)SAj.>"3+HN34q0V33&E<Q+?VVnAhlOZ4>f)T0g6^B3+HQ44q0V33&EBS+?VVo2DmZ-4>f)T1HlpD3+Os[4q0V33&EHU+?VVo3&3Z,4>f)T2*N-F3+P!.4q0V33&ENW+?VVo3A<W+4>f)T2a/?H3+P$\4q0V33&ETY+?VVo@5''kS4>f)T3BeQJ3+QH-4q0V33&G&-+?VVo@Pp=Y4>f)T@Qkns3+QJW4q0V33&G,/+?VVo@Q?U]4>f)TA3M+u3+QK-4q0V33&G21+?VVo@k^(U4>f)TAj.>"3+QMV4q0V33&NBR+?VVo@lHR\4>f)U0g6^B3+QN-4q0V33&NHT+?VVoA2HIZ4>f)U1HlpD3+QSX4q0V33&NNV+?VVoAhZCX4>f)U2*N-F3+QK.4q0V33&NZZ+?VVp0ekj$4>f)U3BeQJ3+Xm%4q0V33&P20+?VVp1hAi[4>f)UA3M+u3+XsV4q0V33&WHS+?VVp2`X&24>f)V1HlpD3+Y*Z4q0V33&WTW+?VVp3Fk;_4>f)V2*N-F3+ZMR4q0V33&WZY+?VVp@UVG04>f)V2a/?H3+ZSS4q0V33&Y2/+?VVp@lHR\4>f)V@Qkns3+ZW14q0V33&Y81+?VVpAS"%74>f)VA3M+u3+Z\V4q0V33&Y>3+?VVpAiDm_4>f)VAj.>"3+ZZ34q0V33&`NT+?VVq0JYg$4>f)W1HlpD3+am''4q0V33&``Z+?VVq1,D*''4>f)W2a/?H3+ap*4q0V33&`f\+?VVq11`WY4>f)W3BeQJ3+as''4q0V33&b80+?VVq1H.K,4>f)W@Qkns3+b!%4q0V33&b>2+?VVq1hJo\4>f)X0g6^B3+b''+4q0V33&iZW+?VVq3Fk;_4>f)X1HlpD3+cVZ4q0V33&i`Y+?VVq@V%_44>f)X2*N-F3+cYS4q0V33&if[+?VVq@q%V24>f)X2a/?H3+c\T4q0V33&il]+?VVqA26=X4>f)X3BeQJ3+c_X4q0V33&k>1+?VVqAn=.84>f)X@Qkns3A<0I4q0V33&r]W+?VY<1M/f[4>f)Y1-QgC3A<?H4q0V33&rcY+?VY<2E!`.4>f)Y1d3$E3A<@$4q0V33&ri[+?VY<3+Y8_4>f)Y2Ei6G3A=l!4q0V33&ro]+?VY<@q.\34>f)Y3''JHI3A=u$4q0V33&tG3+?VY<AMlX\4>f)Y@m2"t3A=u!4q0V33&tM5+?VY=0K;6*4>f)YANh5!3AE3u4q0V33&tS7+?VY=0ebd#4>f*,0KpUA3AE6s4q0V33+4O*+?VY=1,(m$4>f*,1-QgC3AE9L4q0V33+4U,+?VY=11`WY4>f*,1d3$E3AE<J4q0V33+4[.+?VY=1LiTX4>f*,2Ei6G3AE?H4q0V33+4a0+?VY=1hJo\4>f*,3''JHI3AEBI4q0V33+4g2+?VY=2Inu\ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>2)o#Q4s2sJ0fNQ*%6QL-@:DDC4?5,U0g6%/2)o#S4s2sJ0fV''T%6QL-@:h\G4?5,V3''Id62)o&!4s2sJ0jue#%6QL-@PL%h4?5-)2EhR42)o&#4s2sJ0k+`Y%6QL-@Pp=l4?5-,3Bdm72)o&)4s2sJ0kFr\%6QL-@Q?Up4?5-.3Bdm72)o&R4s2sJ0kOr[%6QL-@UqYF4?5/N@m1>a2)o)"4s2sJ1,1aP%6QL-@q%VE4?5/QANgPc2)o)U4s2sJ1,LmQ%6QL-@q7bG4?5/RA3LGb2)o)W4s2sJ1,V$T%6QL-A2-7j4?5/T3Bdm72)o,(4s2sJ1,h''S%6QL-A2ZUo4?5/U3Bdm72)o,*4s2sJ1,iZ+%6QL-A2laq4?5/V@6P,_2)o,,4s2sJ1-%*R%6QL-A77YE4?50*0Koq.2)o,W4s2sJ11<.+%6QL-A7[qI4?50+2EhR42)o,Y4s2sJ11E4,%6QL-AM?:j4?50+@6P,_2)o/%4s2sJ11FcX%6QL-AMQFl4?50,2a.[52)o/''4s2sJ11OiY%6QL-AMcRn4?50-3''Id62)o/+4s2sJ11`1(%6QL-AN2jr4?50.1Hl712)o/-4s2sJ11`F/%6QL-ARRbF4?50.@m1>a2)o/V4s2sJ11b#\%6QL-ARdnH4?50/0Koq.2)o/X4s2sJ1GCLH%6QL-AS"%J4?52O3''Id62)o/Z4s2sJ1GNB''%6QL-AhZCk4?52Q1d2@22)o2&4s2sJ1GWB&%6QL-AhlOm4?52R1d2@22)o2(4s2sJ1G^sR%6QL-Ai)[o4?52T0Koq.2)o2*4s2sJ1Gq$R%6QL-Ai;gq4?52TANgPc2)o2,4s2sJ1H%0U%6QL-AiMss4?52U3Bdm72)o2.4s2sJ1H&i/%6QL-AmmkG4?52V1d2@22)o2W4s2sJ1H.3U%6QL-An+"I4?52V@6P,_2)o2Y4s2sJ1H/i.%6QL.0JG[54?52WA3LGb2*!?F4s2sJ1H@3S%6QL.0JYg74?52X2*MI32*!?H4s2sJ1H@EY%6QL.0Jks94?53+0g6%/2*!?J4s2sJ1LW1*%6QL.0K)*;4?53+3''Id62*!?L4s2sJ1LX`V%6QL.0P!?i4?53-3Bdm72*!@%4s2sJ1LjlX%6QL.0P3Kk4?53-A3LGb2*!BF4s2sJ1Lr:*%6QL.0ekj74?53.3Bdm72*!BH4s2sJ1M/R0%6QL.0f)!94?55P0g6%/2*!BJ4s2sJ1b^mQ%6QL.0f;-;4?55Q2*MI32*!BL4s2sJ1biT+%6QL.0fM9=4?55RAj-Yd2*!BN4s2sJ1c&Z+%6QL.0f_E?4?55T1Hl712*!C"4s2sJ1c79W%6QL.0k*<h4?55U@m1>a2*!C$4s2sJ1c8l/%6QL.0k<Hj4?55V0g6%/2*!C&4s2sJ1c@<W%6QL.0kNTl4?55VANgPc2*!EG4s2sJ1cR<U%6QL.1,1s84?55X1Hl712*!EI4s2sJ2)f)1%6QL.1,D*:4?58Y1d2@22*!EM4s2sJ2.BuX%6QL.1,hB>4?5903Bdm72*!EO4s2sJ2.U5]%6QL.1-%N@4?590Aj-Yd2*!F#4s2sJ2DJc,%6QL.11EEi4?5;T1-Q.02*!F''4s2sJ2D[9U%6QL.1GM''94?5;W1-Q.02*!HL4s2sJ2E#,1%6QL.1Gq?=4?5;Y@m1>a2*!HN4s2sJ2E,22%6QL.1H.K?4?5;[0g6%/2*!HP4s2sJ2E>A5%6QL.1H@WA4?5<.2EhR]DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,g3AY)-+?VYB@pqP14>f,T@Qkns3AtDV4q0V33AY//+?VYBA7e"74>f,TA3M+u3AtJX4q0V33AY51+?VYC0Ju$''4>f,TAj.>"3B&[$4q0V33A`ER+?VYC0k<HW4>f,U0g6^B3B&]J4q0V33A`KT+?VYC1grQW4>f,U1HlpD3B&fT4q0V33A`WX+?VYC2e"r[4>f,U2a/?H3B&oO4q0V33A`]Z+?VYC3&s/34>f,U3BeQJ3B&rW4q0V33Ab/.+?VYC@Q6O\4>f,U@Qkns3B(DW4q0V33Ab50+?VYC@V.e54>f,UAj.>"3B(G,4q0V33AiKS+?VYC@pqP14>f,V0g6^B3B(GZ4q0V33AiQU+?VYCA2$1V4>f,V1HlpD3B(J-4q0V33AiWW+?VYCA7Rk54>f,V2*N-F3B(M+4q0V33Aic[+?VYCAmmk44>f,V3BeQJ3B/`R4q0V33Ak5/+?VYD0k3BV4>f,V@Qkns3B/cJ4q0V33Ak;1+?VYD11i]Z4>f,VA3M+u3B/fP4q0V33AkA3+?VYD1c.B*4>f,VAj.>"3B/j(4q0V33ArQT+?VYD2).9(4>f,W0g6^B3B/p*4q0V33ArWV+?VYD@:_V34>f,W1HlpD3B1MY4q0V33Ar]X+?VYDAMu^]4>f,W2*N-F3B1V/4q0V33ArcZ+?VYE0K20)4>f,W2a/?H3B8g+4q0V33Ari\+?VYE1,;$&4>f,W3BeQJ3B8iQ4q0V33At;0+?VYE11EEV4>f,W@Qkns3B8lP4q0V33AtA2+?VYE1H@W.4>f,WA3M+u3B8oT4q0V33AtG4+?VYE2*!i04>f,WAj.>"3B8s+4q0V33B&WU+?VYE3FY/]4>f,X0g6^B3B9*14q0V33B&]W+?VYE3G(Ga4>f,X1HlpD3B:P&4q0V33B&cY+?VYE@PU+V4>f,X2*N-F3B:P+4q0V33B&i[+?VYEA2?CY4>f,X2a/?H3B:VY4q0V33B&o]+?VYEA7Ie44>f,X3BeQJ3B:Y04q0V33B/`W+?VYm0Jks&4>f,Y1-QgC3FOUN4q0V33B/fY+?VYm0kENX4>f,Y1d3$E3FOZu4q0V33B/l[+?VYm1G_3(4>f,Y2Ei6G3FO^$4q0V33B/r]+?VYm1cIT-4>f,Y@6Per3FOd%4q0V33B1J3+?VYm2.Sl[4>f,Y@m2"t3FQ?)4q0V33B1P5+?VYm@:MJ14>f,YANh5!3FQ?-4q0V33B1V7+?VYm@PU+V4>f,Z0KpUA3FQAR4q0V33B8fX+?VYm@U_M14>f,Z1-QgC3FQB/4q0V33B8lZ+?VYm@lQX]4>f,Z1d3$E3FQGW4q0V33B8r\+?VYmA7@_34>f,Z2Ei6G3FQJU4q0V33B9#^+?VYmAN)d^4>f,Z3''JHI3FQK/4q0V33B:P4+?VYmAi2a]4>f,Z@m2"t3FQN.4q0V33B:V6+?VYmAn4(74>f--1-QgC3FX^P4q0V33FO^-+?VYn1,_<*4>f--1d3$E3FXd%4q0V33FOd/+?VYn1H.K,4>f--3''JHI3FXgT4q0V33FQA\+?VYn2.A`Y4>f--@m2"t3FXm$4q0V33FQG^+?VYn2IScY4>f-.0KpUA3FXp,4q0V33FX^,+?VYn2eG5_4>f-.1-QgC3FXs*4q0V33FXd.+?VYn3&a#14>f-.1d3$E3FXs.4q0V33FXj0+?VYn3+>&\4>f-.2Ei6G3FXsY4q0V33FXp2+?VYn3A`o/4>f-.3''JHI3FY!W4q2(@A7B.\BOPoj%6#s`@V''1dDIR3fBOPoj4>f-.3BeQJ3FZDW4q0V33FZD\+?VYn@Q-I[4>f-.@Qkns3FZH-4q0V33FZJ^+?VYnA2$1V4>f-.A3M+u3FZS\4q0V33FZP`+?VYo0P3KX4>f-.Aj.>"3Facu4q0V33Faa,+?VYo0kENX4>f-/0g6^B3Fag&4q0V33Fag.+?VYo1,qH,4>f-/1HlpD3FajU4q0V33Fam0+?VYo1c%<)4>f-/2*N-F3FamW4q0V33Fas2+?VYo2.\r\4>f-/2a/?H3Fb!W4q0V33Fb$4+?VYoAiDm_4>f-/3BeQJ3FcY]4q0V33FcJ]+?VYp0k3BV4>f-/@Qkns3FjmW4q0V33FcVa+?VYp1LWHV4>f-/Aj.>"3FjpU4q0V33Fjg-+?VYp1c7H+4>f-01HlpD3Fk$*4q0V33Fjs1+?VYp3&<`-4>f-02*N-F3Fk*-4q0V33Fk$3+?VYp3+Y8_4>f-03BeQJ3Fk--4q0V33FlV`+?VYp@:;>/4>f-0A3M+u3FlQ04q0V33Fl\b+?VYp@V.e54>f-0Aj.>"3FlW.4q0V33Fss0+?VYpA7[q64>f-11HlpD3Fl]44q0V33Ft$2+?VYpAhZCX4>f-12*N-F3Fl`54q0V33Ft*4+?VYq0P*EW4>f-1@6Per3Fsp''4q0V33FuY`+?VYq3&a#14>f-1ANh5!3Ft3/4q0V33Fued+?VYq3B0234>f-20KpUA3FuW14q0V33G(!0+?VYq@P^1W4>f-21-QgC3Fu\Y4q0V33G(''2+?VYq@lQX]4>f-21d3$E3Fu]04q0V33G(-4+?VYqA2QO[4>f-23''JHI3FueW4q0V33G(98+?VYqAi2a]4>f-2@6Per3Fue^4q0V33G)_a+?VYr0ekj$4>f-2@m2"t3G(!(4q0V33G)ec+?VYr0k!6T4>f-2ANh5!3G(!X4q0V33G)ke+?VYr1GM''&4>gP$0KpUA3G(''&4q0V3@5''E"+?VYr1LiTX4>gP$1-QgC3G(''Z4q0V3@5''Q&+?VYr1cIT-4>gP$2Ei6G3G(-,4q0V3@5''W(+?VYr2.\r\4>gP$3''JHI3G(0\4q0V3@5'']*+?VYr2`!W,4>gP$@6Per3G(3Y4q0V3@5).S+?VYr2e5)]4>gP$@m2"t3G(6_4q0V3@5):W+?VYr3As&14>gP%0KpUA3G)\S4q0V3@50K#+?VYr@5C(V4>gP%1-QgC1GWQS4q0V3@50Q%+?VG8AnF49ASu$fAn,L_EX`I40JFVYAS5^p@V0XhDJ*Mi4>8HC0g6^B0JG:m4s2sA0JY=G%6Q<u1M&`m4>8HH@m2"t0JG@p4q0V.0K(dP+?V>32E*fB4>8Ht0g6%/0JGCr4s2sA0K*N,+?VD51H@W.4>8HJ0KpUA0JGF?4s2t"@PBN#%6Q<u2`!W?4>8HJ1d3$E1,(I;4q0V.0K3T-+?V>33&!N=4>8QF0g6%/0JGIA4s2sA0K:mQ+?V>60K)*(4>8HL@Qkns0JGLu4s2sA0Oc_"%6Q<u@50qg4>8Ht1HlpD0JHsG4q0V.0OZe%+?V>3@6$Lo4>8I!0Koq.0JHpD4s2sA0OeHS+?V>3@lHR\4>8Hu@Qkns0JHuj4s2sA0P!1-%6Q<u@kg.i4>8I!2Ei6G0JI&l4q0V.0Om%*+?V>3A2c[p4>8I#2a.[50JI#s4s2sA0P"`Y+?V>3AiW$a4>8I#2a/?H0JI*N4s2sA0JY=G%6Q=!0JG[54>8KF1-QgC0JG:C4q0V.0etRL+?V>41c.B=4>8HHA3LGb0JPCB4s2sA0fV$S+?X7J2D@<(4>8KL2a/?H0JPOH4s2sD0P3"&%6Q=!3Fb5q4>8KMA3M+u1GE>n4q0V.0f`f/+?V>43G(Gt4>S[%1Hl710JQui4s2sA0jue#+?VG6A2ZU\4>8Ku1-QgC0JQul4s2sD0P!1-%6Q=!@5L.j4>8Ku2*N-F1GE?L4q0V.0k!")+?V>4@5pFn4>SZGA3LGb0JQur4s2sA0kN7++?VD:0JG["4>8L%@6Per0JR0M4s2sD0JGIM%6Q=!An=.K4>8L%Aj.>"1GCLo4q0V.1,(CG+?V>50JPa64>SZG0Koq.0JY@<4s2sA1,1RK+?VG61grQW4>8NG1-QgC0JYCB4s2sD0K*?''%6Q="11NKj4>8NH0KpUA1GCb!4q0V.1,C^M+?V>51H7Q@4>SZN3''Id60JYFn4s2sA1,EE(+?VG63A<W+4>8NIA3M+u0JYIr4s2sD0K1[L%6Q="1hJoo4>8NJ0KpUA1GCaD4q0V.1,UdM+?V>52)7?<4>SZM2EhR40JYLA4s2sA1,UmP+?VG62`X&24>8NJ2*N-F0JYLD4s2sD0K3K*%6Q="2D@<;4>8NK0g6^B0JHoj4q0V.1,h3W+?V>52e"rn4>SZF0Koq.0JYS!4s2sA1,psO+?X7J0k!6T4>8NM1HlpD0JYUE4s2sD0KET+%6Q="3+>&o4>8NM@m2"t1GEEO4q0V.1,rf.+?V>53+Y8r4>SZOA3LGb0JYXC4s2sA1-%-S+?VG60Ju$''4>8NNANh5!0JYY#4s2sC0JPON%6Q="@5''kf4>8O!0g6^B1,(Fm4q0V.11;q%+?V>5@5C(i4D&1Z3''Id60J[&n4s2sA11<%(+?VG60f2''''4>8O!@6Per0J[)n4s2sD0JGIM%6Q="@UqYF4>8O"ANh5!1,:aG4q0V.11N.)+?V>5@l6Fm4>JTH1-Q.00J[,u4s2sA11O`V+?V>3@5:"U4>8O%0g6^B0J[2p4s2sC0f^pO%6Q="AN)dq4>8O%3''JHI1,:gI4q0V.11`I0+?V>5ARRbF4>JZO1-Q.00J[3M4s2sA11b#\+?VD71,hB+4>8O&@Qkns0J[6M4s2sC1,`Q)%6Q=#0JPa64>8QF1-QgC1,:Uo4q0V.1GCdP+?V>60KD<>4>JTG0Koq.0JbCm4s2sA1GLaN+?X7J0ebd#4>8QG2Ei6G0JbIr4s2t"Ahl))%6Q=#1GD!84>8QJ3BeQJAnEkS4q0V.1GiN(+?V>63Fb5q4>SZJ0g6%/0Jb_"4s2sA1M/C++?VG6@50qT4>8R''1HlpD0Jd<Q4s2sA1H@0R%6Q=$0JG[54>8TG1HlpD0Jb_#4q0V.1b^aM+?V>70O[-f4>8R"1Hl710JkIm4s2sA1biH''+?V>6@PL%U4>8TH@m2"t0JkO?4s2sA1Li4)%6Q=$1,D*:4>8TI3''JHI0JkL<4q0V.1brK''+?V>71c[`B4>8TH2EhR40JkUq4s2sA1c@0S+?V>71H%E+4>8X%3BeQJ0K!<J4s2sJ3&G/0%6Q=&3B'',E4>8ZR3''JHI1hC*)4q0V.AMuM3+?V>h2E<rD4>g_]3''Id60P3%K4s2sAAhddZ+?VS=1H%E+4>AND@m2"t0eb:m4s2sEAN=<c%6Q@!1H7Q@4>ANG3BeQJ1hL;U4q0V/0JtgR+?VA42*!iC4>eg&3Bdm70ebLC4s2sB0K(gQ+?VM90JPa#4>ANK0KpUA0ebO@4s2sF0f*E*%6Q@!2`EoC4>ANK3''JHI2).!L4q0V/0K:gO+?VA43&<`@4>eiR2*MI30ebRG4s2sB0K;''V+?VM9@6$L\4>ANL@Qkns0ebRs4s2sF0k)k$%6Q@!@5U4k4>ANu2Ei6G2)7!t4q0V/0Oct)+?VA4@Q6Oo4>em&@m1>a0ed)p4s2sB0Om")+?VM:AiMs`4>AO%2Ei6G0ed2u4s2sF1brQ)%6Q@"0k!6g4>AQF@Qkns2)Jl%4q0V/0f!0$+?VA511EEi4>euR2EhR40ekUr4s2sB0fNT++?VM?1H.K,4>AQN0KpUA0ek[C4s2sF2e4[-%6Q@"@Q-In4>AR"3BeQJ2)o2W4q0V/0k2n$+?VA5@kg.i4>f,S@m1>a0em3J4s2sB0k=cX+?VMAA2ug_ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6Q@"AMu^p4>AR%2a/?H2.89u4q0V/0kN:,+?VA5Ai;gq4>gPZ@6P,_0etF>4s2sB1,(RL+?VMj2.8ZX4>ATH0g6^B0etL>4s2sF@k]i*%6Q@#1,qH?4>ATH3BeQJ2.JF%4q0V/1,h''S+?VA62`<iB4>g\+2EhR40et^C4s2sB1,q$Q+?VMm2`3c.4>ATN2a/?H0et^J4s2sFARdGY%6Q@#3+b>s4>ATO0KpUA2.^<,4q0V/1-%-S+?VA63A`oB4>g\]3''Id60f!0I4s2sB11=]W+?VMn2)[W-4>AU&@m2"t0f!<N4s2sG0KD$T%6Q@#An=.K4>AU''Aj.>"2DA`$4q0V/1GCaO+?VA70K;6=4>noJA3LGb0f(OC4s2sB1GLmR+?VP:2)mc/4>AWK1-QgC0f(XB4s2sG1,([O%6Q@$1h8cm4>AWKANh5!2DR''D4q0V/1GrT)+?VA72.A`l4>nrT1-Q.00f*8m4s2sB1L`(&+?VP=AM?:W4>AX%1-QgC0f*;q4s2sG2)@''Q%6Q@$A2-7j4>AX&1-QgC2DmHL4q0V/1M&7(+?VA7AMH@k4>o''.0Koq.0f*B#4s2sB1M&R1+?VP?1Gq?*4>AX(1HlpD0f*Du4s2sG2E!KX%6Q@%0etp84>AZI1HlpD2E*BL4q0V/1biT++?VA81,(m74>o,V1Hl710f3?N4s2sB1h(&\+?VPj@5:"U4>A[(1d3$E0f3H!4s2sG@Q-81%6Q@%AMu^p4>A[(2a/?H2I\UW4q0V/1hC8_+?VA8AhZCk4>pYW@6P,_0f:X>4s2sB2)$dL+?VPl0f)!&4>A]O@6Per0f:ju4s2sGARmV]%6Q@&AMcRn4>A^)2*N-F2_m0u4q0V/2.\[0+?VA9AN)dq4?##OAj-Yd0f<QQ4s2sB2.gA_+?VS<AM?:W4>A`J@Qkns0fC^q4s2sH1GiZ,%6Q@''1M&`m4>A`MAj.>"2`,,#4q0V/2Dnu.+?VA:2.Sln4?#,W2EhR40fCsJ4s2sB2E*NX+?VS?An=.84>A`Q@Qkns0fCt#4s2sH2.eU-%6Q@''3&3Z?4>A`R1d3$E2`<EF4q0V/2E3]\+?VA:3+4un4?#/T2a.[50fD"&4s2sB2E5;4+?VS@2DIB)4>A`S0KpUA0fD$I4s2sH2E!NY%6Q@''@50qg4>Aa&1-QgC2`<ZV4q0V/2ISI,+?VA:@5g@m4?#0-3''Id60fEK$4s2sB2I^)Y+?VSA1,V6)4>Aa''@m2"t0fEKO4s2sH2`!BV%6Q@''A2$1i4>Aa)0g6^B2`G2U4q0V/2_\f,+?VA;0P3Kk4?#903Bdm70fLgH4s2sB2_d<V+?VSk0fV?+4>AcM1d3$E0fLjF4s2sH@5]i(%6Q@(1M&`m4>AcNAj.>"2dp5W4q0V/2`*6Q+?VA;1bq6;4?$\[0g6%/0fLpu4s2sB2`,#.+?VSl0fV?+4>AcP@m2"t0fLt#4s2sH@Q,u)%6Q@(Ai2ap4>Ad,2Ei6G2e=j,4q0V/3&!''N+?VA<0JYg74?$h23''Id60fUjF4s2sB3&!9T+?VSo3AWi.4>AfL@6Per0fUjr4s2sHAN=3`%6Q@)0P3Kk4>AfM0g6^B2eFmV4q0V/3&*0P+?VA<0f)!94?$k00Koq.0fUmH4s2sB3&*BV+?VSp2.f#]4>AfM3BeQJ0fUmr4s2sHAi;V4%6Q@)11i]m4>AfO0KpUA2eHPW4q0V/3&>,0+?VA<1M/fn4?,#L3''Id60fV*K4s2sB3&`]Y+?VV<2DmZ-4>AfU1-QgC0fV0L4s2sI0k=l[%6Q@)3AiuC4>AfU2Ei6G3&,#R4q0V/3&rr^+?VA<3B98G4?,)M0g6%/0fWTP4s2sB3+6A^+?VV=2IScY4>Ag)0g6^B0fWVt4s2sI1,h-U%6Q@)A2QOn4>Ag+2Ei6G3&<9J4q0V/3AG&.+?VA=0kENk4?,2Q2a.[50f_*M4s2sB3Aic[+?VVA@6$L\4>AiR3BeQJ0f_+"4s2sI2E5/0%6Q@*3G(Gt4>Aj)0KpUA3&bG-4q0V/3Fas2+?VA=@lHRo4?,<11Hl710f``(4s2sB3FcJ]+?VVCA2la^4>Aj,3BeQJ0f`cQ4s2sI3AP#,%6Q@*AiW$t4>Aj.@6Per3&tG[4q0V/3G)bb+?VA=An4(J4?,?3@m1>a0judr4s2sB@50c++?VVl@5U4X4>C8$@6Per0junJ4s2sI@Q?2-%6Q@R1h8cm4>C8$ANh5!3+=m.4q0V/@5VX\+?VAe2D@<;4?-h1A3LGb0jut"4s2sB@5^,0+?VVn@PU+V4>C8''1-QgC0k!!s4s2sI@qK.5%6Q@R2`*]@4>C8''2*N-F3+O^"4q0V/@5qj_+?VAe3A<W>4?-k_@6P,_0k!(!4s2sB@6$2/+?VVp0K;6*4>C8)2a/?H0k!(%4s2sIAMI^Z%6Q@RA7e"J4>C8U0g6^B3+b''(4q0V/@:h2W+?VAeAhcIl4?-qb3Bdm70k"[*4s2sB@:j+8+?VY<1hJo\4>C;!0KpUA0k)gk4s2sJ0JtRK%6Q@S1G_3;4>C;$1d3$E3AG"t4q0V/@P_OY+?VAf1M&`m4?5-.2*MI30k*%$4s2sB@Q%XY+?VY?@:MJ14>C;''A3M+u0k*%P4s2sJ1LrC-%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaV@Q?G4+?VAf3FP)o4?58Z3''Id60k+TH4s2sB@U_)V+?VYB11`WY4>C;T2*N-F0k+WN4s2sJ2I\C)%6Q@S@pqPD4>C;T@Qkns3At>+4q0V/@V%;Y+?VAfAMZLm4?5>VA3LGb0k+`S4s2sB@V.Va+?VYC3+b>`4>C;WANh5!0k+a,4s2sJ2e"R,%6Q@T0fD3<4>C>#3''JHI3B/p/4q0V/@kqIV+?VAg11EEi4?5DVA3LGb0k3!n4s2sB@l#i''+?VYE1LrZY4>C>%2a/?H0k3"!4s2sJ3AiNT%6Q@T1L`Nj4>C>%@m2"t3B9)Y4q0V/@l%[[+?VAg1M/fn4?5E1A3LGb0k3$u4s2sB@l-,.+?VYEARmt64>C>&3''JHI0k3%#4s2sJ3G(!0%6Q@T2E<rD4>C>(@6Per3FQGS4q0V/@l@d[+?VAg2Ieon4?6h\ANgPc0k3+P4s2sB@l@m^+?VYmAMQFY4>C>)@Qkns0k3.P4s2sJ@PT]&%6Q@T2e>/q4>C>*0g6^B3FXa&4q0V/@lQ5-+?VAg3&<`@4?6k+ANgPc0k31&4s2sB@lQJ4+?VYn1h8cZ4>C>+0KpUA0k33u4s2sJ@Q?>1%6Q@T3ANc@4>C>+1HlpD3FY!\4q0V/@l\!^+?VAg3Fb5q4?6k]0g6%/0k4`N4s2sB@q7G\+?VYp2.Sl[4>C>X1HlpD0k4fP4s2sJAMIUW%6Q@TAn!qH4>C>X@m2"t3Ft0Z4q0V/A2#u,+?VAh0O[-f4?6t_ANgPc0k<!q4s2sBA2,r*+?VYqAi;g^4>CA$2a/?H0k<"!4s2sJAS,C8%6Q@U0k!6g4>CA$@Qkns3G''s(4q0V/A26#++?VAh1,hB>4?7"2Aj-Yd0k<%!4s2sBA26//+?VYr2E!`.4>CA&2a/?H0k<7!4s2sC2)$^J%6Q@U3&<`@4>CA,2Ei6G1,LmC4q0V/A2uS4+?VAh@5''kf4>JWL0Koq.0k=`J4s2sBA7@>Y+?VG93Fb5^4>CAU1d3$E0k=`N4s2sD1H8r0%6Q@U@UqYF4>CAV0g6^B1GWAq4q0V/A7IAY+?VAh@l$:k4>S`K0g6%/0k=d+4s2sBA7RAX+?VD71-%N-4>CD,0g6^B0kE="4s2t"3B8iY%6Q@V@qInI4>CDX0KpUA1GCL;4q0V/ARo76+?VAiA7IeG4D&1Z3''Id60kFm+4s2sBARo@9+?VG60f2''''4>CDXAj.>"0kFoM4s2t"AMc>0%6Q@VAMZLm4>CDY@m2"t1GCLB4q0V/AhYu(+?VAj0Jbm84>S[''2*MI30kN-s4s2sBAhc/,+?VG60k<HW4>CG&2Ei6G0kN."4s2sD0KCsR%6Q@W2)[W@4>CG*2a/?H1G`Gr4q0V/Ai40a+?VAj2DIB<4>ScQ2*MI30kN@U4s2sBAiM\4+?VD93&j)24>CG-2a/?H0kNFS4s2sC1cI6T%6Q@W3Fb5q4>CGV2*N-F1,1^A4q0V/AmmS]+?VAj@:h\G4>S`M1-Q.00kOlK4s2sBAn*hb+?VD93Fb5^4>CGZANh5!0kP#O4s2sC1LX`V%6Q@WAhlOm4>CG[1d3$E1,E>t4q0V00JG1E+?VD50JPa64>ScQ3''Id61,(C?4s2sC0JHs"+?VG811<?U4>JTEAj.>"1,(F;4s2sC@PBZ''%6QC"0fM9=4>JTF@6Per1,^g?4q0V00JR''$+?VD50k<Hj4>JfL@m1>a1,(I<4s2sC0JYCI+?VD62IScY4>JTG2Ei6G1,(Io4s2sC2)m<S%6QC"1Gq?=4>JTH2Ei6G1,V''K4q0V00JbXO+?VD51H7Q@4>JcPA3LGb1,(Lr4s2sC0JkII+?VD:AMQFY4>JTI2*N-F1,(OD4s2sC2)d6R%6QC"1cRZA4>JTI3BeQJ1GCgH4q0V00JtXM+?VD52)IK>4>JTF3''Id61,(RC4s2sC0JtaP+?VD50k3BV4>JTJANh5!1,(UE4s2sC2`EWY%6QC"2IScl4>JTK@Qkns1,1^r4q0V00K1mR+?VD52`EoC4>JX$1d2@21,(XI4s2sC0K3K*+?VG6AiDm_4>JU&ANh5!1,*<P4s2sFA7@M^%6QC#2.Jfm4>JWKA3M+u2_d-I4q0V00fUsQ+?VD63&NlB4D&"V3''Id61,32o4s2sC0juq''+?X7E1,(m$4>JX#3''JHI1,35u4s2t"@59Z''%6QC#@kp4j4>JX$1HlpD3AG)U4q0V00k3%(+?VD6@l6Fm4?5--1d2@21,3;p4s2sC0k<((+?VY>2`Eo04>JX''@Qkns1,3BN4s2t"@5;7T%6QC$0ebd64>JZK@Qkns0JG794q0V01,NN*+?VD72I\im4>8HHA3LGb1,:dF4s2sC1,h*T+?V>3@50qT4>JZNA3M+u1,:e"4s2sC0Jb^Q%6QC$2eG5r4>JZO0KpUAAn!GK4q0V01,q$Q+?VD73&<`@4>JTG0Koq.1,:h#4s2sC1,rl0+?V>60JPa#4>JZP0g6^B1,:jG4s2sA1GC^N%6QC$@:;>B4>J[#A3M+u0JHri4q0V011Dq$+?VD7@PU+i4>8Hu@m1>a1,<;p4s2sC11E4,+?V>3@k^(U4>J[$3BeQJ1,<?"4s2sA0Om%*%6QC$@pqPD4>J[%Aj.>"0JI#t4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71,<Ao4s2sC11W7++?V>3AM?:W4>J[&2Ei6G1,<E!4s2sA0P*1,%6QC$AN)dq4>J[''A3M+u0JI*!4q0V011iI/+?VD7AnF4L4>8HE0g6%/1,CU<4s2sC1G^aL+?V>311<?U4>J]K1HlpD1,CdD4s2sA0K!B)%6QC%2DRH=4>J]N1HlpD0JHoj4q0V01H/f-+?VD8@U_MD4D&1`0Koq.1,EBL4s2sC1LalY+?VG6AhZCX4>J^''0g6^B1,EGr4s2sD0Ouk$%6QC%A2?Cl4>J^''1d3$E1GE>q4q0V01Lr@,+?VD8A2ZUo4>S[%2EhR41,EH"4s2sC1LrI/+?VG6A2ug_4>J^''3BeQJ1,EHL4s2sD0P"ZW%6QC%ARRbF4>J^(@Qkns1GCXo4q0V01M1&Z+?VD8AnF4L4>SZL@6P,_1,L[A4s2sC1b^mQ+?VG62e>/^4>J`I@Qkns1,L^>4s2sD0K;$U%6QC&0f)!94>J`J1d3$E1GCgC4q0V01bppP+?VD91,_<=4>SZM0Koq.1,LaF4s2sC1bq$S+?VG62`!W,4>J`K3BeQJ1,Lap4s2sD0K1mR%6QC&11EEi4>J`K@m2"t1GCaJ4q0V01brT*+?VD911`Wl4>SZM@m1>a1,Lau4s2sC1c$gL+?VG60k<HW4>J`L1HlpD1,LdF4s2sD0JGIM%6QC&1H.K?4>J`L@6Per1GCLo4q0V01c&Z++?VD93&j)E4>JcJ0Koq.1,Lt#4s2sC1cT#0+?VD51GV-''4>J`QAj.>"1,M!F4s2t"@PBT%%6QC&3FY/p4>J`RANh5!1,1Xq4q0V01c]/3+?VD9@5''kf4>JWK1Hl711,NDp4s2sC1gr=,+?VD52`*]-4>Ja%3''JHI1,NGp4s2sC0K:aM%6QC&A2HIm4>Ja(2*N-F0JYLG4q0V01h8O/+?VD9A2laq4>8NJ@6P,_1,NQ!4s2sC1hL>`+?V>31,(m$4>JcJ0KpUA1,Udu4s2sA0Jd3&%6QC''1,1s84>JcMAj.>"0JG@p4q0V02)I9V+?VD:1grQj4>8Ht0g6%/1,UpD4s2sC2)R-Q+?VD51H@W.4>JcO1HlpD1,UpG4s2t"@PBN#%6QC''2)[W@4>JcO2a/?H1,(I;4q0V02)[3R+?VD:2D[N>4>8QF0g6%/1,UsI4s2sC2)[BW+?V>60K)*(4>JcQANh5!1,V$G4s2sA0Oc_"%6QC''3&EfA4>JcR2Ei6G0JHsG4q0V02)mNY+?VD:3+G,p4>8I!0Koq.1,V%%4s2sC2*#22+?V>3@lHR\4>JcSANh5!1,WJr4s2sA0P!1-%6QC''@5L.j4>Jd&3BeQJ0JI&l4q0V02.9oW+?VD:@UVGC4>8I#2a.[51,WNM4s2sC2.J@)+?V>3AiW$a4>Jd(@m2"t1,WQP4s2sC0JbIJ%6QC''@qInI4>Jd)0KpUAAn!GM4q0V02.U/[+?VD:A7[qI4>JWK@Qk5`1,WTS4s2sC2.\I*+?VD62)@E*4>Jd*1-QgC1,WW%4s2sC0K1gP%6QC''AN2jr4>Jd+0g6^B1,([A4q0V02DAQ''+?VD;0f)!94>8HF0Koq.1,^jH4s2sC2DI3U+?V>31,qH,4>JfL@6Per1,^jr4s2sA0J[3''%6QC(0k3Bi4>JfLA3M+u0JG:k4q0V02DJc,+?VD;1,hB>4>8HF0Koq.1,^mt4s2sC2DSf,+?V>31,qH,4>JfMANh5!1,^n"4s2sA0J[3''%6QC(1GD!84>JfN0g6^B0JG:k4q0V02D[3S+?VD;1H%E>4>JWK1Hl711,^pJ4s2sC2D\l-+?VD62)RQ,4>JfO1d3$E1,^sJ4s2sC0f<E(%6QC(3A<W>4>JfT3BeQJ0JG::4q0V02J+j2+?VD;AnF4L4>JWM0Koq.1,gm@4s2sC2_ZsM+?VD62dnlZ4>JiL2*N-F1,gpA4s2sC0fC^L%6QC)0f2'':4>JiNA3M+u0JG=<4q0V02`!3Q+?VD<1G_3;4>SZJ@6P,_1,h$F4s2sC2`*HW+?VG62IScY4>JiP@m2"t1,h''E4s2sD0K3Q,%6QC)2)@E=4>JiQ3''JHI1GCdJ4q0V02`3TZ+?VD<2.Sln4>SZNAj-Yd1,h*H4s2sC2`<HU+?VG6@:;>/4>JiS1-QgC1,h-N4s2sD0OnNT%6QC)2e,#o4>JiT0KpUA1GE?N4q0V02`NTW+?VD<3&j)E4>S[&3''Id61,h0Q4s2sC2`P>3+?VG6AS++84>JiTANh5!1,h3P4s2sD1,:OI%6QC)@5pFn4>Jj)0g6^B0JG::4q0V02e"O++?VD<@U_MD4>8HF0Koq.1,ifS4s2sC2eHYc+?VD92D@<(4>JlM0KpUA1,psD4s2sC1c@3T%6QC*1c[`B4>JlS1-QgC1,NMq4q0V03&WQV+?VD=2e,#o4>Ja&2EhR41,q6J4s2sC3&iZW+?VG61grQW4>JlV0g6^B1,q9P4s2sD0K*?''%6QC*3FY/p4>JlVAj.>"1GCb!4q0V03+4R++?VD=@5g@m4>SZN3''Id61,r]%4s2sC3+6;\+?VG63+b>`4>Jm)A3M+u1,rfR4s2sD11W(&%6QC*A7RkH4>Jm-2Ei6G1GUpD4q0V03+Y''5+?VD=ARmtI4>S`P@6P-3DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>Jm.2Ei6G1,rl)4s2sD11;k#%6QC+2Inuo4>JoV2Ei6G0JGC>4q0V03B/r]+?VD>@5''kf4>8HG0g6%/1-&c#4s2sC3FOg0+?VG61grQW4>Jp+2*N-F1-&fP4s2sD0K*?''%6QC+@V.eH4>Jp,1HlpD1GCb!4q0V03Fas2+?VD>@q%VE4>SZN3''Id61-&iS4s2sC3Fjg-+?VG63+b>`4>Jp-2*N-F1-&l''4s2sD0O\BR%6QC+AMlXo4>Jp.@6Per1GE<I4q0V03Fued+?VD>AhuUn4>S[%ANgPc1-&r)4s2sC3G)_a+?VG6AN2j_4>Jp/@m2"t1-&rY4s2sD0P+i[%6QCS2e"rn4>L>*1d3$E0JGC>4q0V0@6$2/+?VDf@:_VF4>8HG0g6%/11=WJ4s2sC@:D&W+?VG61grQW4>L>T1HlpD11=ZP4s2sD0K*?''%6QCS@q7bG4>L>U0g6^B1GCb!4q0V0@:V2Y+?VDfA2ugr4>SZN3''Id611=^%4s2sC@:Wq5+?VG63+b>`4>L>V1HlpD11=`N4s2sD0O\BR%6QCSAhuUn4>L>W3''JHI1GE<I4q0V0@:j%6+?VDfAnF4L4>S[%ANgPc11Dpk4s2sC@PBN#+?VG6AMH@X4>LA"1d3$E11Dpt4s2sD0P*4-%6QCT0O[-f4>LA"ANh5!1GEBP4q0V0@Q7j]+?VDg@5U4k4>8HI0g6%/11FZM4s2sC@U`q5+?V>31bh0''4>LAU1d3$E11F`N4s2sD0Jm3%%6QCTA2HIm4>LAV3BeQJ1GC^q4q0V0@Us%6+?VDgAMQFl4>SZMANgPc11FfP4s2sC@V&t3+?VG63&j)24>LAW@Qkns11Fg,4s2sD0K<Z.%6QCTAi)[o4>LAX2*N-F1GE6G4q0V0@k]`''+?VDh0KD<>4>S[$@6P,_11N"L4s2sC@kf`&+?VG6A7[q64>LD$2*N-F11N%I4s2sD0P*4-%6QCU0k*<h4>LD$Aj.>"1GEBP4q0V0@l[s]+?VDh@P^1j4>8HI0g6%/11OcM4s2sC@q0%5+?V>31bh0''4>LDW1-QgC11OiN4s2sD0Jm3%%6QCUAMQFl4>LDX2a/?H1GC^q4q0V0@qB.6+?VDhAhZCk4>SZMANgPc11OoP4s2sC@qI\a+?VG63&j)24>LDY3BeQJ11Op,4s2sD0K<Z.%6QCV0JYg74>LG$1HlpD1GE6G4q0V0A2,i''+?VDi0fM9=4>S[$@6P,_11W+L4s2sCA25i&+?VG6A7[q64>LG&1HlpD11W."4s2sD0P*4-%6QCV1-%N@4>LG&A3M+u1GEBP4q0V0A77D\+?VDi@k^(h4>8HI0g6%/11XlL4s2sCA7T+4+?V>31bh0''4>LGXAj.>"11XrM4s2sD0Jm3%%6QCVAS++K4>LGZ1d3$E1GC^q4q0V0A7dhc+?VDiAn4(J4>SZMANgPc11`-n4s2sCAM>u*+?VG63&j)24>LJ%2Ei6G11`.J4s2sD0K<Z.%6QCW0P3Kk4>LJ&0KpUA1GE6G4q0V0AMId\+?VDj1,M0;4>S[$@6P,_11`4$4s2sCAMRd[+?VG6A7[q64>LJ(0KpUA11`7!4s2sD0P*4-%6QCW1H%E>4>LJ(@6Per1GEBP4q0V0AMdm\+?VDj1h8cm4>JWH0g6%/11`=R4s2sCAMn$_+?VG9A2c[]4>LJ+1-QgC11`@"4s2sD1GCOI%6QCW2_dK=4>LJ,2Ei6G1G^^r4q0V0AN+*_+?VDj2eG5r4>ScJ@6P,_11`F!4s2sCAN2G/+?VG90kNTY4>LJ-3''JHI11`F*4s2sD1GUpR%6QCW3+Y8r4>LJ.0KpUA1G^dt4q0V0AN;S2+?VDj3AiuC4>ScL1d2@211alJ4s2sCARR>X+?VG91M&`Z4>LJV1HlpD11alP4s2sD1GgmO%6QCW@5pFn4>LJV3BeQJ1G^js4q0V0ART"2+?VDj@:DDC4>ScMAj-Yd11aoN4s2sCAR[J[+?VG92)RQ,4>LJW2Ei6G11aoR4s2sD1GCOI%6QCW@l6Fm4>LJX@6Per1G^^r4q0V0ARmJY+?VDjA2?Cl4>ScJ@6P,_11auQ4s2sCARm\_+?VG90kNTY4>LJY@m2"t11b!,4s2sD1GUpR%6QCWAMQFl4>LJZ1d3$E1G^dt4q0V0AS!hb+?VDjAN;ps4>ScL1d2@211b&S4s2sCAS*ha+?VG91M&`Z4>LJ[2a/?H11b''+4s2sD1GgmO%6QCWAn+"I4>LJ[A3M+u1G^js4q0V0AS,L;+?VDjAnF4L4>ScMAj-Yd11i4!4s2sCAhZ2.+?VG92)RQ,4>LM(2Ei6G11i:%4s2sD0JI!#%6QCX11<?h4>LM(@Qkns1GCOl4q0V0Ahmj[+?VDk11WQk4>SZG3''Id611i:Q4s2sCAhms^+?X7J0K;6*4>LM)0KpUA11i<s4s2sD0JR*%%6QCX1GV-:4>LM)1HlpD1,(FB4q0V0Ahu8-+?VDk1Gq?=4>JTF@m1>a11i?u4s2sCAi);-+?VD;2E3l04>LM*@m2"t11i@S4s2sD0JbLK%6QCX2*!iC4>LM+@6Per1,:dD4q0V0Ai4$]+?VDk2.\ro4>SZF@m1>a11iCU4s2sCAi;>,+?VG60k!6TASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QCX2DIB<4>LM,1-QgC1GCOC4q0V0Ai;G/+?VDk2DdT?4D&1_Aj-Yd11iF%4s2sCAi;V4+?VG60Om9U4>LM,3BeQJ11iFQ4s2sD0JR!"%6QCX2I\im4>LM,@m2"t1GCOC4q0V0Ai=0`+?VDk2J#&p4D&1_Aj-Yd11iI!4s2sCAiDG.+?VD83Fk;_4>LM-3''JHI11iI*4s2sC1LW(''%6QCX3&!N=4>LM.0g6^B1,E>p4q0V0AiMe7+?VDk3+4un4>SZGA3LGb11iLT4s2sCAiO9a+?VD50fV?+4>LM.A3M+u11iLW4s2sC0JPON%6QCX@:;>B4>LMW@Qkns1,1dK4q0V0Amo15+?VDk@:VPE4>JWO2EhR411juL4s2sCAn!JY+?VD6@l-@Y4>LMX2*N-F11juS4s2sC0f_$R%6QCX@lHRo4>LMY3''JHI1,WJo4q0V0An3\]+?VDkA2HIm4>Jd(2EhR411k)T4s2sCAn<ka+?VG60K;6*4>LM[2a/?H11k*+4s2sD0JGIM%6QCXAR[hG4>LM[@m2"t1GCLk4q0V0AnEb]+?VDkAhlOm4>SZOA3LGb11k,S4s2sCAnGO:+?VG61bh0''4>LM\ANh5!11k-14s2sD0Jm6&%6QF#0JG[54>SZF1HlpD1GCXr4q0V10JG@J+?VG60K20<4>SZK0g6%/1GCLB4s2sD0JkdR+?VG62)@E*4>SZJ@6Per1GCXp4s2sD0P4iZ%6QF#1h8cm4>SZK2Ei6G1GE5l4q0V10JtgR+?VG62.Sln4>S["@Qk5`1GC[u4s2sD0K(XL+?VG6@PL%U4>SZL1-QgC1GE5n4s2sD0Och%%6QF#@5L.j4>S["2a/?H1GEE"4q0V10OZq)+?VG6@6$Lo4>SZOA3LGb1GE6G4s2sD0Och%+?VG61bh0''4>S[#2*N-F1GE9H4s2sD0Jm6&%6QF#@UhSE4>S[#ANh5!1GC[@4q0V10OeWX+?VG6AnF4L4>SZK1Hl711GLR<4s2sD0eb@H+?VG6An4(74>S]G1d3$E1GLRo4s2sD0OZ\"%6QF$0P3Kk4>S]H1d3$E1GE6H4q0V10ekRM+?VG70fV?>4>S[#0g6%/1GLUE4s2sD0f<B''+?VG6@P^1W4>S]L@Qkns1GLau4s2sD0P37-%6QF$2.f#p4>S]M0KpUAAn<eV4q0V10fD$U+?VG72IScl4>S[''A3LGb1GLds4s2sD0fEN*+?VG63Fk;_4>S]MA3M+u1GLe!4s2t"AhZ2.%6QF$2J,,q4>S]N0KpUA1GCO?4q0V10fLgN+?VG72_mQ>4D&1Z3''Id61GLgE4s2sD0fLpQ+?VG60f2''''4>S]N2*N-F1GLh"4s2sA0JbCH%6QF$2eG5r4>S]O3BeQJ1GCX?4q0V10fWW++?VG73A<W>4>SZJ@m1>a1GLmF4s2sD0k<+)+?VG62)7?)4>S^''0g6^B1GNHM4s2sD0OZ\"%6QF$ARmtI4>S^(1-QgC1GE6I4q0V10kN7++?VG7AnF4L4>S[#1-Q.01GUX<4s2sD1,CgP+?VG6@V%_44>S`K@m2"t1GUas4s2sD0P31+%6QF%1cRZA4>S`L3BeQJ1,(L>4q0V11,NH(+?VG81h/]l4D&%V1Hl711GUgH4s2sD1,WK(+?VD62.A`Y4>S`M@Qkns1GUgt4s2sC0f:aN%6QF%2.\ro4>S`N1HlpD1,(XD4q0V11,^sQ+?VG82Inuo4>JTM0Koq.1GUsE4s2sD1-%''Q+?V>52*!i04>S`Q1HlpD1GUsI4s2sA1,WK(%6QF%@5''kf4>Sa''@Qkns0JG794q0V111XoZ+?VG8An!qH4>8HHA3LGb1G^^A4s2sD1GC^N+?V>3@50qT4>ScIA3M+u1G^^r4s2sC0Jb^Q%6QF&0P3Kk4>ScJ0KpUAAn!GK4q0V11GLXK+?VG90f)!94>JTG0Koq.1G^as4s2sD1GNK*+?V>60JPa#4>ScK0g6^B1G^dB4s2sA1GC^N%6QF&1LWHi4>ScLA3M+u0JHri4q0V11GgdL+?VG91bq6;4>8Hu@m1>a1G^jD4s2sD1Gh''T+?V>3@k^(U4>ScM3BeQJ1G^mK4s2sA0Om%*%6QF&2.8Zk4>ScNAj.>"0JI#t4q0V11H$pN+?VG92DmZ@4>8I#0Koq.1G^pI4s2sD1H.3U+?V>3AN)d^4>ScP2a/?H1G^t#4s2sA0P3=/%6QF&3&j)E4>ScQ3BeQJ1,(L>4q0V11H8i-+?VG93+G,p4D&%V1Hl711G_$M4s2sD1HAl-+?VD62.A`Y4>ScR@Qkns1G_%$4s2sC0f:aN%6QF&3FtAs4>Sd%1HlpD1,(XD4q0V11LW+(+?VG9@:VPE4>JTM0Koq.1G`N!4s2sD1Lk#\+?V>31GD!%4>Sd(1d3$E1G`Q!4s2sA0JYUO%6QF&A2ZUo4>Sd(2a/?H0JG7n4q0V11LrI/+?VG9A2ugr4>8HF@6P,_1G`QM4s2sD1M&@++?V>31GD!%4>Sd)3''JHI1G`T&4s2sA0JYUO%6QF&ARRbF4>Sd)@Qkns0JG7n4q0V11M(&[+?VG9ARmtI4>8HF@6P,_1G`W$4s2sD1M/X2+?VG60Om9U4>Sd*@6Per1G`WP4s2sD0JR!"%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaX1M1,\+?VG9An4(J4>SZG3''Id61G`WS4s2sD1M15_+?X7J0K;6*4>SfJ0KpUA1Ggd?4s2sD0JR*%%6QF''0JYg74>SfJ1HlpD1,(FB4q0V11b^aM+?VG:0Ju$:4>JTF@m1>a1GgjE4s2sD1bpsQ+?X7E2.A`Y4>SlL3BeQJ1H$pq4s2sCAN40`%6QF)A2-7j4>Sm+1-QgC2.gAY4q0V12J+s5+?VG<AmmkG4?#&P2EhR41H.4$4s2sD2`>/0+?VSp2)%3''4>SoSAj.>"1H.6H4s2sHAn*\^%6QF*2`<iB4>SoT2a/?H11ap,4q0V12e4m3+?VG=A2ugr4>^V''1d2@21H/iS4s2sD2e6G_+?VJl11i]Z4>Sp,ANh5!1H/iV4s2sEAMc))%6QF*AhcIl4>Sp.1-QgC1hJ[W4q0V12eG!4+?VG=AiMss4>efH0Koq.1H7*F4s2sD3&*6R+?VM:0JPa#4>SrO@m2"t1H7+"4s2sF1GE6$%6QF+1H7Q@4>SrQ3BeQJ2)R9G4q0V13&>)/+?VG>1M&`m4>f#NANgPc1H73M4s2sD3&ETY+?VM>2_dK*4>SrR@Qkns1H74$4s2sF2IU)Z%6QF+2)RQ?4>SrS2Ei6G2)d<I4q0V13&P82+?VG>2.f#p4>f''02*MI31H7<M4s2sD3&`]Y+?VMAAMZLZ4>SrV3BeQJ1H7@&4s2sF@Q.j^%6QF+@5C(i4>Ss*1d3$E2.\L!4q0V13+4d1+?VG>@6$Lo4>g\.@Qk5`1H8fQ4s2sD3+6>]+?VMm@V%_44>Ss+1-QgC1H8i"4s2sFAhddZ%6QF+A2?Cl4>Ss-2*N-F2DHpA4q0V13+ZM^+?VG>AR[hG4>nuP1-Q.01H8uV4s2sD3+c\b+?VP=@V%_44>SuOA3M+u1H@.#4s2sG2Dnr-%6QF,1,D*:4>SuQ1d3$E2E3KH4q0V13AW?Q+?VG?1GM''94>o020Koq.1H@7"4s2sD3AY,.+?VPB2eG5_4>SuRAj.>"1H@9G4s2sG3Fk$3%6QF,1cRZA4>SuS3BeQJ2ISHs4q0V13Ab>3+?VG?2).9;4>pV.A3LGb1H@@(4s2sD3AtG4+?VPlAR[h44>SuX0KpUA1H@HM4s2sGAmmV^%6QF,3FP)o4>SuX@Qkns2_[+"4q0V13FO[,+?VG?@5C(i4?"s)1Hl711HAo(4s2sD3FY!4+?VS<2)RQ,4>T!-0KpUA1HAr"4s2sH1GCXL%6QF,@lQXp4>T!-3BeQJ2`!EN4q0V13FcM^+?VG?@q7bG4?#&VANgPc1HAuS4s2sD3FlS_+?VS>0k!6T4>T!.Aj.>"1HB#$4s2sH1brZ,%6QF,ARmtI4>T!/Aj.>"2`*KO4q0V1@5''B!+?VGg0JPa64?#,X1-Q.01LVsr4s2sD@5''Z)+?VS@0f;-(4>UD#1d3$E1LW!q4s2sH2ISF+%6QFT0k<Hj4>UD#ANh5!2`EU+4q0V1@59f++?VGg1-%N@4?#5TA3LGb1LW''p4s2sD@5B]''+?VSBAM?:W4>UD%@m2"t1LW(M4s2sH3Ak80%6QFT2)IK>4>UD''2*N-F2dp0)4q0V1@5fr*+?VGg2`!W?4?$b[3''Id61LW4%4s2sD@5hUY+?VSn0K20)4>UD*1d3$E1LW7#4s2sHA2n$^%6QFT3B'',E4>UD+3''JHI2eFp&4q0V1@::iR+?VGg@50qg4?$k`ANgPc1LX`H4s2sD@:CrT+?VV;A2c[]4>UDV0g6^B1LXfL4s2sI1Lar[%6QFTAS++K4>UDX0KpUA3&Y2(4q0V1@:j"5+?VGgAn4(J4?,9.@m1>a1L`%K4s2sD@PD@W+?VVC@UqY34>UG$1-QgC1L`''p4s2sI3+aj.%6QFU0f;-;4>UG$2a/?H3&r]Q4q0V1@PTr-+?VGh11<?h4?-e,1Hl711L`1Q4s2sD@Poi''+?VVq@Pp=Y4>UG)A3M+u1L`7R4s2sJ0k"TV%6QFU2e5)p4>UG*ANh5!3AP)R4q0V1@U_&U+?VGh@PU+i4?5?02*MI31Lag''4s2sD@U`k3+?VYD2)7?)4>UGV2*N-F1LaiP4s2sJ3AWES%6QFU@q.\F4>UGVA3M+u3B:P/4q0V1@Uq8Y+?VGhA2HIm4?6h*A3LGb1LalT4s2sD@Urn2+?VYm@Pp=Y4>UGWANh5!1Lam,4s2sJ@P]f(%6QFV2)IK>4>UJ)2Ei6GAiM\&4q0V1@l681+?VGi2.8Zk4>S[''A3LGb1Li:O4s2sD@l7a[+?VG63Fk;_4>UJ*0g6^B1Li<u4s2sC1,_$S%6QFV2IScl4>UJ*@Qkns1,:gI4q0V1@l@g\+?VGi2Inuo4>JZO1-Q.01Li?t4s2sD@lH,++?VD73&Ef.4>UJ+1-QgC1Li@"4s2sC1,r]+%6QFV2`<iB4>UJ+2a/?H1,CUA4q0V1@lHA2+?VGi2`X&E4>JZI2a.[51Li@T4s2sD@lQ/++?VD73Aiu04>UJ,0g6^B1LiC"4s2sC1,:^N%6QFV3&s/F4>UJ,@6Per1,:ar4q0V1@lS''a+?VGi3A<W>4>JZI@Qk5`1LiF&4s2sD@lZG2+?VD72`<i/4>UJ-A3M+u1Lk#P4s2sD0JkLJ%6QFVAiMss4>UJZAj.>"1GE5l4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71Lr0n4s2sDA2Ig\+?VG6@6$L\4>UM*2Ei6G1Lr@T4s2sD0kN+''%6QFW2DIB<4>UM+2Ei6G1GNKM4q0V1A2ZA1+?VGj2IScl4>S[''2a.[51LrCS4s2sDA2\!_+?VD7A77Y24>UM,0g6^B1LrF"4s2sBAM[m]%6QFW2`!W?4>UM,1d3$E0JR0!4q0V1A7]46+?VGjAS++K4>8O%2*MI31Lt)U4s2sDA7dba+?V>60kNTY4>UP&0KpUA1M&6p4s2sA1GNE(%6QFX0JYg74>UP&1HlpD0JbFC4q0V1AM>u*+?VGk0K)*;4>8QI@6P,_1M&7L4s2sDAM@UX+?V>52DRH*4>UP''@6Per1M&:M4s2sA11`.''%6QFX0kNTl4>UP(0KpUA1,:dD4q0V1AMR^Y+?VGk11NKj4>CD''ANgPc1M&=P4s2sDAMRg\+?V>4AiMs`4>UP,3''JHI1M&I)4s2sD0P4iZ%6QFX2IScl4>UP,@Qkns1GCh"4q0V1AN)>-+?VGk@l?Ln4>SZJ0g6%/1M(''+4s2sDAS,O<+?VG6@50qT4>US''0KpUA1M/Bs4s2sD0P!%)%6QFY11<?h4>US*1HlpD1GNJq4q0V1Ahu;.+?VGl1LWHi4>S^(@6P,_1M/FP4s2sDAi"!^+?VG6AiDm_4>US+2*N-F1M/I%4s2sD0JPIL%6QFY1c[`B4>US+@6Per1-%-I4q0V1Ai+*`+?VGl2)%3:4>Jp/@6P,_1M/LV4s2sDAi;V4+?VD9Ai2a]4>US-3BeQJ1M/OR4s2sC2DI*R%6QFY2Ieon4>US.2*N-F1GNJq4q0V1AiDY4+?VGl2e,#o4>S^(@6P,_1M/RV4s2sDAiO6`+?VD8@V%_44>US01-QgC1M/X)4s2sC2.SC)%6QFY3As&D4>US02a/?H1,(OD4q0V1AiX<a+?VGl@:;>B4>S]P0Koq.1M1)M4s2sDAn!JY+?VD72`<i/4>USY1-QgC1M1)P4s2sC1,q*S%6QFY@Pg7k4>USY2*N-F1,:gt4q0V1An!Y^+?VGl@Q-In4>J[&@6P,_1M1)U4s2sDAn!ba+?VD8@PBtT4>USY@6Per1M1,S4s2sC2E*BT%6QFY@l?Ln4>USZ2a/?H1GCgL4q0V1An*hb+?VGl@pqPD4>SZG2EhR41M1--4s2sDAn3e`+?VG7AhZCX4>US[3''JHI1M10.4s2sD0kOiX%6QFYA7[qI4>US[Aj.>"1,EAn4q0V1An>L:+?VGlAi;gq4>S^(0Koq.1M15Y4s2sDAnGR;+?VG7Ammk44>\`G@Qkns1b^X@4s2sD0kN+''%6QI$0fD3<4>\`H@Qkns1GNKM4q0V20J[*$+?VJ71Gh9<4>S^(0Koq.1b^^D4s2sE0Jd0%+?VG7Ammk44>\`J@m2"t1b^^t4s2sD0P37-%6QI$1bq6;4>\`K@Qkns1GNJq4q0V20Jm<(+?VJ72)7?<4>S^(@6P,_1b^dF4s2sE0JtdQ+?VD72E!`.4>\`LA3M+u1b^du4s2sC1,q0U%6QI$2.f#p4>\`M0KpUA1,:gE4q0V20K(^N+?VJ72DdT?4>JZO1d2@21b^gF4s2sE0K(gQ+?VD73+4u[4>\`M3BeQJ1b^gr4s2sC1GC[M%6QI$2I\im4>\`M@m2"t1,:UD4q0V20K1^M+?VJ72`!W?4>JZP2*MI31b^jF4s2sE0K1jQ+?VD71,V6)4>\`N@m2"t1b^k!4s2sC1,`Q)%6QI$3&3Z?4>\`O1HlpD1,:Uo4q0V20K;$U+?VJ73&s/F4>JZN2EhR41b^pD4s2sE0KCjO+?VD7A77Y24>\`P1d3$E1b^pI4s2sBAM[m]%6QI$3As&D4>\`P2a/?H0JR0!4q0V20ed0&+?VJ80etp84>8O%2*MI31bg^F4s2sE0em*#+?V>60kNTY4>\cJ1HlpD1bgaB4s2sA1GNE(%6QI%1,V6<4>\cJ2Ei6G0JbFC4q0V20et^P+?VJ81-%N@4>8QI@6P,_1bgas4s2sE0f!?)+?V>52DRH*4>\cKA3M+u1bgdt4s2sA11`.''%6QI%1bq6;4>\cL1HlpD1,:dD4q0V20f3H*+?VJ81hJoo4>CD''ANgPc1bgjA4s2sE0f:[L+?V>4AiMs`4>\d)3BeQJ1biTN4s2sG2E*QY%6QI&2E*fB4>\fO3''JHI2`ER(4q0V21-&o0+?VJ93G(Gt4?,&R2a.[51brK"4s2sE11=TT+?VV=@5C(V4>\g''@m2"t1brQO4s2sI2D?sO%6QI''0JYg74>\iJ1HlpD3A=r"4q0V21GCdP+?VJ:0KD<>4?5,O1-Q.01c$gt4s2sE1GLRI+?VY?2DdT,4>\iMAj.>"1c$sB4s2sJ@l.d]%6QI''1bq6;4>\iN1HlpD3FjjT4q0V21H&`,+?VJ:2Inuo4>^Y/2a.[51c%(%4s2sE1H/o0+?VM83ANc-4>\iR1d3$E1c%*K4s2sF0OeHS%6QI''@:DDC4>\j&@m2"t2)8WL4q0V21LalY+?VJ:@V%_G4>SiPA3LGb1c&Z!4s2sE1Lr@,+?VM=0JG["4>\lK1d3$E1c-mD4s2sF2J+j2%6QI(0O[-f4>\lK@Qkns2)d?L4q0V21bg[J+?VJ;0etp84>f&V1Hl7ZDId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>\lL2a/?H1c-pH4s2sF2`YD4%6QI(11WQk4>\lMANh5!2)mR(4q0V21c$gL+?VJ;1GM''94>f)XAj-Yd1c.!s4s2sE1c&T)+?VM@AhuU[4>\lN@m2"t1c."!4s2sF3A<<S%6QI(1c[`B4>\lO@6Per2*!TQ4q0V21c8l/+?VJ;2D@<;4>gP-Aj-Yd1c.-N4s2sE1cIEY+?VG=2DIB)4>\lS2*N-F1c.0M4s2sF@l?80%6QI(@UqYF4>\m(ANh5!2.\[V4q0V21h8@*+?VJ;A2HIm4>g_]1-Q.01c/`$4s2sE1h8O/+?VMnAS"%74>\m,0KpUA1c/f!4s2sG0f_!Q%6QI)0K20<4>\oL3''JHIA2lDSA7dZ14q0V22)&K''+?VJ<0Om9h4>nuO@Qk5`1c7!J4s2sE2)/N''+?VP<A2HIZ4>\oM@m2"t1c7!u4s2sG1M(#Z%6QI)11<?h4>\oN@Qkns2DeoQ4q0V22)R-Q+?VJ<2)@E=4>o)U@m1>a1c77''4s2sE2)o23+?VPA3B0234>\oU0g6^B1c79K4s2sG3+65Z%6QI)3Fb5q4>\oUA3M+u2E58)4q0V22.AF,+?VJ<@Q$Cm4>o32ANgPc1c8`S4s2sE2.J=(+?VPj1GV-''4>\p+1d3$E1c8f%4s2sG@:h5X%6QI)A77YE4>\p+@m2"t2I\@P4q0V22.^5\+?VJ<ARmtI4>pYY2a.[51c8iV4s2sE2.eO++?VPkAMu^]4>\rM3''JHI1c@$J4s2sGA26&,%6QI*0ebd64>\rN0g6^B2Ind$4q0V22DR3T+?VJ=1,qH?4>pb-3''Id61c@*L4s2sE2DS])+?VPn1h&WX4>\rO@m2"t1c@+"4s2sGAMl8-%6QI*1h&Wk4>\rQ@m2"t2J-GY4q0V22E*KW+?VJ=2`<iB4?#!''ANgPc1c@<K4s2sE2E3KV+?VS<2J#&]4>\rV1HlpD1c@?N4s2sH1GLjQ%6QI*3FtAs4>\rVAj.>"2`!@''4q0V22Ig8]+?VJ=@q@hH4?#,RA3LGb1cAl&4s2sE2Ina1+?VS?2e5)]4>\s,ANh5!1cAlV4s2sH2.C/]%6QI*AMcRn4>\s-2*N-F2`5,X4q0V22J+X,+?VJ=AhcIl4?#/Q@Qk5`1cI*D4s2sE2_[$O+?VS@@5g@Z4>\uO@Qkns1cI.!4s2sH2e6J`%6QI+1GV-:4>\uQ1HlpD2`PD04q0V22`*?T+?VJ>1c7H>4?#91@m1>a1cI<Q4s2sE2`>).+?VSl11`WY4>\uW1HlpD1cIEO4s2sH@q%>[%6QI+@5L.j4>]!*2*N-F2e4^T4q0V22e+d1+?VJ>@lQXp4?$h22EhR41cJr$4s2sE2e4a/+?VSp2D[N+4>]!-2Ei6G1cJr(4s2sHAiF6a%6QI,1-%N@4>]#Q@6Per3&4o$4q0V23&<<R+?VJ?1G_3;4?,,N2a.[51cR:''4s2sE3&E<Q+?VV>3A`o/4>]#SANh5!1cR=(4s2sI1c7!O%6QI,2)%3:4>]#T0g6^B3&EKQ4q0V23&P51+?VJ?2.\ro4?,0-ANgPc1cRBP4s2sE3&W`[+?VV@1,M0(4>]#UANh5!1cRC*4s2sI2)[0Q%6QI,2dnlm4>]#V@QknsA2lGUA7fF34q0V23&bG5+?VJ?3&!N=4?,3/3''Id61cRKQ4s2sE3&rl\+?VVA3Fb5^4>]$+ANh5!1cSoU4s2sI2`<KV%6QI,@kp4j4>]$-1HlpD3&bD+4q0V23A<EV+?VJ@0KD<>4?-e11d2@21c[="4s2sE3AP&-+?VVp1,1s%4>]&U2*N-F1c[EO4s2su3&WL%A7IS_%6QI-2E3lC4>]&V3BeQJ3A>&V4q0V23B&WU+?VJ@2_dK=4?5,Q2EhR41c[KT4s2sE3B(A1+?VY=@l$:X4>]&WAj.>"1c[NL4s2sJ1,1[N%6QI-3&s/F4>]&X@6Per3ANO''4q0V23B8iY+?VJ@3AWiA4CgE011Xp)@6P,_1c[QR4s2sE3B8u]+?VY>@V.e54>]''-2*N-F1c]#''4s2sJ1bgmP%6QI-@k^(h4>]''.0g6^B3Aid+4q0V23Fb$4+?VJ@@lZ^q4?5;U1Hl711c],-4s2sE3FuV_+?VYC@PL%U4>]''13''JHI1c]/.4s2sJ3&<<R%6QIU0JYg74>^J#1HlpD3B1JW4q0V2@5)+R+?VJh0Od3g4?5B50Koq.1gr*m4s2sE@50K#+?VYE0fD3)4>^J$1HlpD1gr*r4s2sJ3AFr+%6QIU0fV?>4>^J$@6Per3B8m(4q0V2@5MIX+?VJh1h8cm4?6k/@Qk5`1gr4P4s2sE@5MR[+?VYn2`<i/4>^J)0KpUA1gr9t4s2sJ@kfr,%6QIU2Ieon4>^J)A3M+u3Fam+4q0V2@5g#,+?VJh2`<iB4?6n03Bdm71gr=%4s2sE@5g/0+?VYo2Inu\4>^J+0g6^B1gr@!4s2sJA2-#,%6QIU3+Y8r4>^J+Aj.>"3Fk'',4q0V2@:M/Y+?VJh@l?Ln4>^V)1Hl711gsp,4s2sE@:_/W+?VM90Om9U4>^JX@Qkns1gss*4s2sF0k<((%6QIUAhuUn4>^JY1d3$E2)6sB4q0V2@:iq3+?VJhAn!qH4>elQ3''Id61h&0o4s2sE@PKW%+?VM;@l-@YASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QIV0fM9=4>^M%3''JHI2)I*G4q0V2@P^#.+?VJi1LWHi4>f#O0g6%/1h&:P4s2sE@PhX[+?VM?0k!6T4>^M)1-QgC1h&<u4s2sF2`"u.%6QIV3B02F4>^M-3BeQJ2.^;T4q0V2@UhA]+?VJi@lZ^q4>o!(ANgPc1h''s(4s2sE@Uin3+?VP<AiMs`4>^MX3BeQJ1h(!(4s2sG1c[NZ%6QIVARmtI4>^MYANh5!2E!O(4q0V2@k_LY+?VJj0ebd64>pVX3''Id61h/6s4s2sE@kfi)+?VPk2e5)]4>^P''ANh5!1h/:Q4s2sGARo45%6QIW1LiTk4>^P(A3M+u2_\c"4q0V2@l-#++?VJj1c7H>4?##PAj-Yd1h/Bu4s2sE@l6&++?VS=1LWHV4>^P-2a/?H1h/L)4s2sH2`P;2%6QIW3Fk;r4>^P.ANh5!2`WWP4q0V2@q.2V+?VJj@kg.i4?$b-1-Q.01h1#N4s2sE@q.>Z+?VSm2.A`Y4>^PY3''JHI1h1&V4s2sHA7d\_%6QIWAMlXo4>^PZ2Ei6G2eG!\4q0V2@q@Ya+?VJjAR[hG4?$kaA3LGb1h89t4s2sEA2#o*+?VV<A7Rk54>^S&@m2"t1h8:N4s2sI1,1RK%6QIX1Gh9<4>^S)2*N-F3&`iV4q0V2A2H2.+?VJk1cRZA4?,;\@6P,_1h8FQ4s2sEA2Ig\+?VVD0P*EW4>^S.2*N-F1h8R(4s2sIA7dP[%6QIX3+G,p4>^S.A3M+u3+Xp#4q0V2A78n1+?VJk@:MJD4?-q]0Koq.1h:,N4s2sEA7RDY+?VY>@U_M14>^S[1-QgC1h:/R4s2sJ1b`H(%6QIXAR[hG4>^S[@m2"t3Ak>%4q0V2AMGo''+?VJl0etp84?5AZ1-Q.01hAEt4s2sEAMQ&*+?VYm@UqY34>^V)2a/?H1hAF%4s2sJ@PD=V%6QIY1c7H>4>^V+2a/?H3Ft0*4q0V2AMl5,+?VJl2)@E=4?7"/@6P,_1hAU''4s2sEAN)M2+?VM:2_dK*4>^VX0KpUA1hC)M4s2sG2)So.%6QIZ0KD<>4>^Y(@6Per3A<EQ4q0V2Ai4*_+?VJm2.\ro4>8QN1d2@21hJa&4s2sEAiVV1+?VD72DdT,4>^Y11d3$E1hJa*4s2sA1H73T%6QIZ@lQXp4>^Y[3BeQJ1,:aE4q0V2An,=7+?VJm@q@hH4>8QN3''Id61hL8T4s2sEAn3ha+?V>6@:MJ14>^Y\@6Per1hL9-4s2sA1LjoY%6QIZA7e"J4>^Y]3BeQJ0JkI=4q0V2An>C7+?VJmAR[hG4>8TGANgPc1hL</4s2sEAnEqb+?V>72)7?)4>^Y^2a/?H1hL>Z4s2sA1c8i.%6QIZAiW$t4>^Y^@6Per1GE<M4q0V30JG1E+?VM80Jbm84>S[%Aj-Yd2)$^B4s2sF0JHs"+?VG6AN2j_4>efH@m2"t2)$a=4s2sD0P+i[%6QL%0ekj74>efI2Ei6G0JG=<4q0V30JY@H+?VM81-%N@4>8HF0g6%/2)$gD4s2sF0Jd9(+?V>31GD!%4>efKAj.>"2)$jH4s2sA0JbCH%6QL%2I\im4>efN@m2"t1,M!G4q0V30kE(''+?VM9AMQFl4>8QN1d2@22)6mD4s2sF1,1[N+?VD72DdT,4>elK3''JHI2)6mH4s2sA1H73T%6QL''1h/]l4>elNA3M+u1,:aE4q0V31,V!S+?VM:2)mcB4>^V.1d2@22)7''L4s2sF1,_-V+?VJm1h&WX4>elQ3''JHI2)7+!4s2sEAn#45%6QL''2e"rn4>elQ@m2"t1hL5O4q0V31,q9X+?VM:3+4un4>efK1-Q.02)7.&4s2sF1,rl0+?VM82).9(4>elS2Ei6G2)70N4s2sF0K:jP%6QL''3Fb5q4>elSANh5!2)%%&4q0V31-&r1+?VM:@5''kf4>eg$Aj-Yd2)8St4s2sF11<()+?VM8A7Ie44>em&ANh5!2)8TP4s2sF0em0%%6QL''@PL%h4>em''1-QgC2)-jF4q0V311E%''+?VM:@Pg7k4>eiK@m1>a2)8ZQ4s2sF11W(&+?VM:3Aiu04>em)2*N-F2)8]$4s2sF11E.*%6QL''ARRbF4>em*@m2"t2)@!H4q0V311au[+?VM:AS"%J4>eoM@Qk5`2)8c$4s2sF11iF.+?VM;3&a#14>em+A3M+u2)8cT4s2sF1Lr7)%6QL(0P!?i4>eoKANh5!2)I4%4q0V31GLmR+?VM;0k!6g4>euM@m1>a2)@!B4s2sF1GU^L+?VM=2.8ZX4>eoM3BeQJ2)@!r4s2sF2.SX0%6QL(1G_3;4>eoN1d3$E2)[9I4q0V31G^pQ+?VM;1H7Q@4>f#T0g6%/2)@''E4s2sF1GgpP+?VM>AMlX\4>eoO2*N-F2)@''I4s2sF2_ZsM%6QL(1grQj4>eoO@Qkns2)d9I4q0V31H&c-+?VM;2J#&p4>f)X2a.[52)@0G4s2sF1H.*R+?VM@@5''kS4>eoR@m2"t2)@1%4s2sF3AE9Q%6QL(3&<`@4>eoS1d3$E2*!HM4q0V31LW%&+?VM;@5C(i4>gP(1d2@22)A]$4s2sF1L`@.+?VMj3A<W+4>ep(@Qkns2)A]O4s2sF@UV5[%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaZ1Lar[+?VM;@k^(h4>gSW0g6%/2)A`#4s2sF1Li@-+?VMjA2ug_4>ep*0g6^B2)Abu4s2sF@lH5.%6QL(A7IeG4>ep*A3M+u2.L5Q4q0V31M&C,+?VM;AMlXo4>gY,Aj-Yd2)Af''4s2sF1M&R1+?VMl2`X&24>ep,3''JHI2)Ai)4s2sFAMl/*%6QL)0KD<>4>erL@6Per2.eUQ4q0V31bgaL+?VM<0f)!94>g_01d2@22)I$r4s2sF1biH''+?VMn@PBtT4>erMA3M+u2)I%!4s2sFAn3SZ%6QL)11EEi4>erN@m2"t2D@!H4q0V31c&T)+?VM<1LiTk4>nm''3Bdm72)I+"4s2sF1c&],+?VP9@q@h54>erPAj.>"2)I0E4s2sG0fUjN%6QL)2).9;4>erQ1-QgC2DI0I4q0V31c73U+?VM<2)mcB4>np(0Koq.2)I0N4s2sF1c8]*+?VP:@q@h54>erQAj.>"2)I3F4s2sG0kFiY%6QL)2J#&p4>erS0KpUA2DR7&4q0V31cI0R+?VM<2`!W?4>ns(2EhR42)I6L4s2sF1cI<V+?VP;@V%_44>es(1d3$E2)J`!4s2sG1hA[2%6QL)@5pFn4>es(@6Per2Dm0J4q0V31gsu[+?VM<@PBtg4>o&Q@m1>a2)JcS4s2sF1h/4''+?VP>Ai)[\4>es*0g6^B2)Jeu4s2sG2.gD`%6QL)@l-@l4>es*2*N-F2E!9E4q0V31h8L.+?VM<A2laq4>o)X@6P,_2)JiQ4s2sF1h:)[+?VP?@kp4W4>es,ANh5!2)JlV4s2sG2e$8\%6QL*0JG[54>euM0g6^B2E3WL4q0V32)&H&+?VM=0Od3g4>o00@m1>a2)R*I4s2sF2).''S+?VPB2_[E)4>euO3''JHI2)R-L4s2sG@5p//%6QL*11EEi4>euO@m2"t2IU&K4q0V32)8`,+?VM=11i]m4>pVWANgPc2)R0E4s2sF2)@!O+?VPjA2QO[4>euP2Ei6G2)R0K4s2sG@PB](%6QL*1c.B=4>euQ2*N-F2I\[Y4q0V32)I3T+?VM=1cIT@4>pYW1-Q.02)R4!4s2sF2)Jc++?VPk@Q6O\4>euQ@m2"t2)R4$4s2sG@Uh2X%6QL*2)7?<4>euR1d3$E2IeL#4q0V32)f,2+?VM=3&!N=4>pbZA3LGb2)R?P4s2sF2)mQZ+?VPnARmt64>f!*1HlpD2)Si"4s2sH0k+`Y%6QL*@Q6Oo4>f!*3BeQJ2_m''H4q0V32.JF++?VM=@l-@l4?##S@Qk5`2)Sl''4s2sF2.JX1+?VS<A2QO[4>f!,1-QgC2)So%4s2sH1Gr],%6QL*AMu^p4>f!-2a/?H2`#&X4q0V32.^2[+?VM=AR[hG4?#)T2a.[52)Su#4s2sF2.eU-+?VS>@PL%U4>f#N2a/?H2)[-J4s2sH2)eu.%6QL+0ebd64>f#O0g6^B2`<HP4q0V32DI*R+?VM>0fM9=4?#/X@m1>a2)[0L4s2sF2DJW(+?VS@@5:"U4>f#P1-QgC2)[3G4s2sH2_d-Q%6QL+1-%N@4>f#P@6Per2`ETP4q0V32DSc++?VM>11WQk4?#2X1Hl712)[9F4s2sF2Dd-P+?VSB2D@<(4>f#U1HlpD2)[BM4s2sH@5B`(%6QL+3&a#D4>f#V3''JHI2e"RT4q0V32E<KU+?VM>3ANc@4?$_Y@6P,_2)[HR4s2sF2E<`\+?VSlAi)[\4>f#W3BeQJ2)[I''4s2sH@V.Va%6QL+@5L.j4>f$*2*N-F2e+X(4q0V32IeF)+?VM>@l$:k4?$e\1Hl712)\r$4s2sF2IeU.+?VSn@q7b44>f$-2*N-F2)\u''4s2sHAN=9b%6QL+AN)dq4>f$.3''JHI3&!(!4q0V32_\Z(+?VM?0Om9h4?,''-0Koq.2)d6M4s2sF2_e`)+?VV=3&!N*4>f&PAj.>"2)d9E4s2sI1-&c,%6QL,1,_<=4>f&Q2a/?H3&<6s4q0V32_m?V+?VM?1-%N@4?,,OANgPc2)d<G4s2sF2`!3Q+?VV>1h8cZ4>f&SANh5!2)d@(4s2sI1grC.%6QL,2)%3:4>f&T0g6^B3&G,(4q0V32`3HV+?VM?2)[W@4?,2P1-Q.02)dEL4s2sF2`<KV+?VV@2.JfZ4>f&U2*N-F2)dEO4s2sI2)Su0%6QL,2_[E<4>f&V1-QgC3&P/U4q0V32`E`\+?VM?2dnlm4?,5QA3LGb2)dKK4s2sF2`NNU+?VVA2)mc/4>f&W1HlpD2)dKO4s2sI2E!6Q%6QL,3+P2q4>f&WANh5!3&Y5&4q0V32`YG5+?VM?3G(Gt4?,8U@m1>a2)er#4s2sF2dnX/+?VVB3&<`-4>f''-0g6^B2)f##4s2sI3&ETY%6QL,@q@hH4>f''-Aj.>"3&kDW4q0V32e4a/+?VM?A2QOn4?,>U2*MI32)f)+4s2sF2e>!5+?VVD3FY/]4>f''00g6^B2)f,&4s2sI@5''N%%6QL,AiDmr4>f''03''JHI3+4RO4q0V33&!''N+?VM@0JYg74?-b.2EhR42)m9G4s2sF3&!0Q+?VVl2dnlZ4>f)Q2*N-F2)m<L4s2sI@:V/X%6QL-11WQk4>f)RANh5!3+Fj&4q2(@A7B.k@;]^h%1P0S+C\npBl7BlEa`iuAIUaZ3&<6P+?VM@1GM''94?-h02*MI32)mBJ4s2sF3&<BT+?VVn3&Wr04>f)S2a/?H2)mBO4s2sI@l\!^%6QL-2)[W@4>f)U2a/?H3+Xd#4q0V33&P,.+?VM@2.A`l4?-n.2a.[52)mI)4s2sF3&P;3+?VVp2.Sl[4>f)V0g6^B2)mKL4s2sIAN2G/%6QL-2E3lC4>f)V3BeQJ3+ZSU4q0V33&`QU+?VM@2_mQ>4?-q,Aj-Yd2)mNO4s2sF3&`]Y+?VVq1,(m$4>f)WA3M+u2)mO+4s2sIAi2>-%6QL-2eG5r4>f)X0KpUA3+b$Y4q0V33&kD3+?VM@3+Y8r4?5)N3''Id62)mR-4s2sF3&rZV+?VY<1G_3(4>f)Y3BeQJ2)mU)4s2sJ0P!.,%6QL-@:VPE4>f*,ANh5!3AENM4q0V33+=[-+?VM@@Pg7k4?5-,1Hl712)o&''4s2sF3+=g1+?VY=AN;p`4>f*-@Qkns2)o&T4s2sJ1,(OK%6QL-@V%_G4>f*-Aj.>"3AN<E4q0V33+F[,+?VM@@kp4j4?5/O@m1>a2)o)%4s2sF3+Fg0+?VY>1,M0(4>f*.2Ei6G2)o)*4s2sJ1,<E)%6QL-@lZ^q4>f*.@6Per3ANBJ4q0V33+HPa+?VM@A2$1i4?5/S@m1>a2)o,%4s2sF3+Oj0+?VY>2J#&]4>f*/@Qkns2)o,V4s2sJ11<"''%6QL-AMlXo4>f*02Ei6G3AP,T4q0V33+c_c+?VM@AnF4L4?52W0Koq.2*!?M4s2sF3A=l*+?VY?@Pg7X4>f,Q@Qkns2*!@#4s2sJ1Li7*%6QL.1,M0;4>f,S2*N-F3Aig-4q0V33AP).+?VMA11WQk4?5;T2*MI32*!F(4s2sF3AW?Q+?VYB1H@W.4>f,T1-QgC2*!HK4s2sJ2DmBV%6QL.1c.B=4>f,U2*N-F3B&lU4q0V33Ab81+?VMA1hAin4?5?11d2@22*!NP4s2sF3Ai`Z+?VYCAiDm_4>f,X@6Per2*!U*4s2sJ3FuV_%6QL.2e5)p4>f,XANh5!3B:\.4q0V33B(P6+?VMA3&!N=4?5E6A3LGb2*!WU4s2sF3B0#_+?VYm1grQW4>f,Z3BeQJ2*![*4s2sJ@:h8Y%6QL.3FtAs4>f,ZAj.>"3FQN34q0V33FOU*+?VMA@50qg4?6k)1d2@22*#)''4s2sF3FOj1+?VYn1H@W.4>f--3BeQJ2*#)R4s2sJ@Pp&-%6QL.@:_VF4>f--Aj.>"3FXmW4q0V33FcP_+?VMA@q7bG4?6q.1Hl712*#2%4s2sF3Fjm/+?VYp2)@E*4>f-02a/?H2*#2,4s2sJA2uD/%6QL.A77YE4>f-0@Qkns3Fk-/4q0V33Fsm.+?VMAAMH@k4?6q_1d2@22*#5,4s2sF3Ft37+?VYq0ebd#4>f-1@m2"t2*#5Y4s2sJAN46b%6QL.Ai;gq4>f-22a/?H3Fuc34q0V3@5''K$+?VMi0Jks94?7"11Hl712.81L4s2sF@5)7V+?VYr3AE],ASu$fAo_<tB4VM]ASu$gD..Am6VV!.:18!N+CfP7Eb0-1A8,Oq+>6)V@;m?"AS,XoATD@''Dfp)1AKYr1E"-ArA.<*fA.8to,t2]^;IsofF`Lu''%4*;h:IYc~>'
%
classmethod: Category
cmapAdobe_Korea1_UCS2
	"Category class>>#recodeCMapUnicodeMethods generated this method at 17. Mai 2021 um 12:46:54"

	^String fromASCII85: ',p?)`/O<oc@V%,I/heDGATMd4EarZ46VV!.%4*;gDe!p,ASuTbAS#C`A5Zu[Dfp)1ATKmT:i^Ja;e:%n-ppQo8T&6a.1IRL8T&$SF_#&]ATMd4EarZA+Ad)s@oHr\+=KTK6qM91F=@YF,sl0UBl6g[F)Q2A@q@\D6VV!.+=KNdDdm9095ei^@50?66W5`h%4*<"Bln0&3Zoh:A8bpg/PC#&ARR;F<C9\?+@0OV@V$ZTDfTDt0d&5#%4*<$ATDj+Df.TY2(gR:2%:iX6Z6phEbT0"F?1Nr/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M.DX,suTiH#dV3BQQ9X6Z6phEbT0"F<E:u3A<$?0JPR16"FnCAM,)kCht57BkM+$F!,L7F(KB8ARmD&,pbosE-ZJ<B4uBJ%4*;fDfBuBBkM+$3Zq=3A8-+,EbT!*FD5Z2+CT.u+E_a:+DG^9F)Q2A@q?ckDIal!Bl7@"Gp$^;Ec#kK+EqOABHV56%4*;fDfBuBBkM+$3ZrW\FD,T8F<GF=A8,Xi@psInDf.*K@<,p%E+O'',BlnH.A0>i3Dg#i*ARlp*BOQ!*FD,4p,pbosE-ZJ<B4uBJ+D,P.Ci=N3DJ()%Df0*"FD5Z2F!+n3AKYi$F?0jW,suTiH#dV3BQQ9E,pbosE-ZJ<B4uBJ+Auc]BleB:Bju4,Bl@m1+E(j7F)Q2A@q?cmDe*E%D09oA+ED%8@;0U%FD,5.@:F.uAITq36Z6phEbT0"F?1OSDfBuBBkM+$+Du+>Bk(^*+EV:2F!,:5F*&OCAftT%DIdI''Bl@m1+CT.u+EV:.+D,P.Ci=N3DJ''D),suTiH#dV3BQQ9XA8-*pCgh$pATBC4,pbosE-ZJ<B4uBJ%4*;fDfBuBBkM+$3Zq=3A8-+,EbT!*FD5Z2F!,17+C]&&@<-W9AoD^,+Dl7BF<GU8E,ol-F^nu*FD,5.@:F.uAITq36Z6phEbT0"F?1OSDfBuBBkM+$+Du+>Bk(^*+EV:2F!,:5F*&OCAftT%DIdI''Bl@m1+CT.u+EV:.+D,P.Ci=N3DJ''D),suTiH#dV3BQQ9XA8-*pCgh$pATAo-DBO%7AKYN%@s)X"DKK</Bl@l3@;]U/DfQt=FD,6++DkP/ATDKnCi^%3,suTiH#dV3BQQ9XE,ol?Bk1dc+EqOABHVD1AKYMtF*)G:@Wcd,Df.0M%4*;fDfBuBBkM+$3XmA]6Z6phEbT0"F?1O>ASH7"ATAo8BOr<(@;TQuDe:+XA8bpg+Du+<+EV:.+DtV)ATJu4Aftf0F!+t2DKKo5@Wcd2EcV[9,suTiH#dV3BQQ9XD..]4@V$[)F(Jl)FDi:5DId[+F(HJ4EZf=ADf''E7AKYr4De+!#FE8R8ATDL.ARloqEc5e(,pbosE-ZJ<B4uBJ+EV:2F!,OBAor6*Eb-A;Bln$,F`\aIE+NNnAnb`tE,oZ2EZfRHBlnH.DBNn0Ec#N3F(oQ1/e''*Q6Z6phEbT0"F?0jW,suTiH#dV3BQQ9X<(KSZ+B)''*<*)@`73G0#+Abs3<_5\J6m+g!+B1m#+@Aq$=].g]85p^&:J=/F;H"](:.,O;,suTiH#dV3BQQ9X6VgHV;Fs2T<)6Cj+<j*M+A#KU+@/aj+@/b*+@TC/;FOM_+AYlX8PN#T8OZ#i=$]_^5u(BN78k`H,pbosE-ZJ<B4uBJ+A#<q9N=JP:.HiX6<-u-:/=h39M%rM<(01t<)5%f<(KG#8PN#T8OZ#i=$]_^5u(BN78k=)7L^Xi6Z6phEbT0"F?1O=78cKD5u(BF6:jjB<*:>0:.-3o8Q8GR;c=f.:Jr<$+Ab@%<(TGW9L2Q!:fUCi:K''\)5uL,\,pbosE-ZJ<B4uBJ+@Je"6VKd;9gqH&+A#<N:/<!$<^fb_+B(fs9M?R.84=Xg:Jb1l8Ol<N+@o:%6q''ur:JqWJ,suTiH#dV3BQQ9X6VgHV;Fs2T<)6Cj+@8L>9M%N:9LU''n:Jr<$:0A]-8Q%uE<%K.`:..ZO771$*+A#<q8OQ!B<''a2/%4*;fDfBuBBkM+$3Zq?t770X49Iq;T=@Gq\9L2QZ/0I_d+@Aq";ajP`78?fR5tiCh5tsX878k<W8PVWH<CBDR7k>cL<E''DR,suTiH#dV3BQQ9X:/=h39M%rM<(01t<)5%f:f:(V<Dl7[78?f):IZI*<C0V`8Q8\h73G)r:IJ,(:Jr<678d/X6Uap8%4*;fDfBuBBkM+$3Zq*l;c=f77Nb]074]QL5u^-$+AYlX:f:(Y8Q8VM+AYlX6<-rU:.8)[+A#=-78d#`:fL"^:+6Vu,suTiH#dV3BQQ9X85E;U<^fn/6U=^N7787a:.-4#:*;ht=Wg[778Hfa+AYHL9M%N:8PD]T=Y([s84?KK78b7":(8Kq6Z6phEbT0"F?1O3:JOke5snU&+B)6;8OHH"9M%N:8PD]T=Y([k;BSq7;H+be8PVWH<CBDR7j(Pq7ncKE78?3=+AYlE,pbosE-ZJ<B4uBJ+AYs-78d2Y;ai,X5uL9Q8PVbu8PUBo:0A]@6!5=+<E():7NbZ$73GT/73GAq+B1m'';[k$!6Z6phEbT0"F?1OC:I\;b5uL-&+@T=":*<+t+@/Cr8Q/&G+AYHL<(KG#:et"g8O?!B8Q8h8:IZI*<C9;"6pXO57n#$>,pbosE-ZJ<B4uBJ+>#/s/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+%4*;hDIc+QD/Ej%FE7m#01/<!8T&6a+>6Q3Ddu^WF<G10DIdd!F)Q2A@q?clAS5^p%1P$I+Co1rF<G%(B5)5m%:Wm]Bl7Et@;lYb01/<!;gEG+ASk"VAoAeJ+Co1rF<G+:E$/V$B5)5m+<W=8AS5^uFE2XL-p_B^@V$u2A7]?^+<W=5Eb&a%Bl7Q+-p_B^@V&n>DfTDt0jdpJ;_fdEA7]?^+<W=9F`;;9ASl!rF<E=]A7]?^ASu$$A7]?^%51(C@;ntMD.OhC6"FnCAM$PnEb/Z6/QG/:1*C+=Ado2&6VV!.<b6;mBl@l32(gR:2''?F@AdpC\9jr!?H#R=;1*C+=Ado2&=B.p\+BpQC0ea_*2)@$G+>GW+10l#5AS)A\03:kdA7Zl;+Co%q%1P$7@V''1dDI[TqATMg!@qB[hDJ*Mi+<Wd#0JG1E+?W+_7RfQNASu$gDe*F#E+*6fEa`iuAIT)''0JFVYAS5^p@V0+`@<)f>0JG174s2sW7Rfd0%6Q<u2D@<;4>JTV3Bdm70JGC>4s2sC0JP7F%6Q<u2DRH=4>8HT3Bdm70JGC@4s2sC0etLJ%6Q<u2DdT?4>JZ\7Qq8D0JGCE4s2sA0L@]^%6Q<u2F9SM4>8HT3''Id60JGCP4s2sD0JG:H%6Q<u2F]kQ4>JTF2EhR40JGF>4s2sW7PdCq%6Q<u2_dK=4>JZJ6TtrA0JGIA4s2sA0L@KX%6Q<u3&<`@4>8HW2a.[50JGIC4s2sA0Ldub%6Q<u3&NlB4>JZM0Koq.0JGIG4s2sC1,23]%6Q<u3&s/F4>JZJ1d2@20JGIP4s2sA0L@HW%6Q<u3(,qQ4>JWF1Hl710JGIT4s2sC0eu''Z%6Q<u3AE]?4@Ve/2*MI30JGLB4s2sC2Dd0Q%6Q<u3AWiA4>JfO0Koq.0JGLD4s2sC1,:OI%6Q<u3AiuC4>JZX2*MI30JGLF4s2sC1GLXK%6Q<u3B'',E4>JZG1-Q.00JGLH4s2sC1,(XN%6Q<u3B98G4>JZM0g6%/0JGLQ4s2sC1,UgN%6Q<u3C5nP4>8HT2a.[50JGLS4s2sC0Jc$Z%6Q<u3CH%R4>JfK2EhR40JGLU4s2sC2D@!P%6Q<u3CZ1T4>Jc]69Yi@0JGdH4s2sC2+''hs%6Q<u5qtPG4>Jc]76V/C0JGdJ4s2sC2+'';d%6Q<u5r1\I4>Jc]2EhR40JGdL4s2sC2*ir\%6Q<u5rChK4>Jc[0Koq.0JGdN4s2sC2*s)_%6Q<u5rUtM4>Jc\1-Q.00JGdP4s2sC2*s\p%6Q<u5rh+O4>Jc\6TtrA0JGdY4s2sC0f_!Q%6Q<u5t4$\4>SZG1Hl710JGgK4s2sC1,2''Y%6Q<u68LeJ4>JZJ6p;&B0JGgM4s2sC1,20\%6Q<u68^qL4>JZJ2*MI30JGgQ4s2sC1,([O%6Q<u69.4P4>JZG69Yi@0JGg^4s2sC1,;-Z%6Q<u6:O-]4>JZI3Bdm70JGjL4s2sW7R]''r%6Q<u6SgnK4>JWZ1-Q.00JGjN4s2sC0gmi^%6Q<u6T%%M4>JZG0Koq.0JGjP4s2sC1,(LJ%6Q<u6T71O4>8HU1d2@20JGjR4s2sA1.4Jn%6Q<u6TI=Q4>8NX2a.[50JGj[4s2sA1.4)c%6Q<u6UEsZ4>8NY6p;&B0JGj]4s2sA1.4Dl%6Q<u6UX*\4>8NY3Bdm70JGj_4s2sA0L@`_%6Q<u6Uj6^4>8NY69Yi@0JGmK4s2sA0L7EW%6Q<u6npkJ4>8HU7Qq8D0JGmM4s2sC1,CgP%6Q<u6o."L4>JZI76V/C0JGmO4s2sC1,1LI%6Q<u6o@.N4>JZG7Qq8D0JGmQ4s2sA0L7NZ%6Q<u6oR:P4>JWF3Bdm70JGmS4s2sC0JbCH%6Q<u6odFR4>Jc]0g6%/0JGm\4s2sC2+''&]%6Q<u6pa''[4>Jc\2a.[50JGm^4s2sC2*s2b%6Q<u6ps3]4>JfQ1d2@20JGpL4s2sC2E!EV%6Q<u756tK4>JfQ2a.[50JGpN4s2sC2E!?T%6Q<u75I+M4>JZP3Bdm70JGpP4s2sC2+''>e%6Q<u75[7O4>Jc[1Hl710JGpT4s2sC2*!EU%6Q<u77''0\4>Jc[3''Id60JGp_4s2sC2*j/b%6Q<u779<^4>Jc[2EhR40JGpa4s2sC2*j5d%6Q<u77KH`4>JfQ3''Id60JGsM4s2sC2D@Ta%6Q<u7PR(L4>JfK76V/C0JGsO4s2sC2DIQ_%6Q<u7Pd4N4>JfL76V/lDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b0Ldl_+?V>368h":4>8HY2a/?H1,1dH4q0V.0Le#c+?VD63B'',24>8HY3BeQJ1,1dL4q0V.0Le>l+?VD63As&14>8HY69ZMS1,1dK4q0V.0LeDn+?VD;2FK_<4>8HY7QqqW1,_$X4q0V.0eb:F+?VG82b#t?4>8KD0g6^B1GU[P4q0V.0eb@H+?VD60fD3)4>8KD1HlpD1G_BW4q0V.0ebFJ+?VD61,;$&4>8KD2*N-F1G_BR4q0V.0ebLL+?VG96o[@>4>8KD2a/?H1,1O=4q0V.0f1[M+?W+_75d==4>8KJ2*N-F7Rfg&4q0V.1,(XN+?VD:0JG["4>8NE3''JHI1,Ua@4q0V.1,(^P+?VD:0LJ#54>8NE5s?DR1,Ud?4q0V.1,)$Y+?VD:0fV?+4>8NE6TuVT1,UdC4q0V.1,)*[+?VD:0ge,64>8NE76VhV1,UgS4q0V.1,)0]+?VD:1,M0(4>8NF0KpUA1,UjE4q0V.1,1LI+?VD:1IF>84>8NF1-QgC1,Ua?4q0V.1,1RK+?VD:0Jbm%4>8NF1d3$E1,UaT4q0V.1,1XM+?VD:0f)!&4>8NF2Ei6G1,UdQ4q0V.1,1^O+?VD:0fM9*4>8NF3''JHI1,UgC4q0V.1,1dQ+?VD:1G_3(4>8NF5s?DR1,UgR4q0V.1,2*Z+?VD:1I=874>8NF6TuVT1,UmT4q0V.1,20\+?VD:1,(m$4>8NF76VhV1,UgV4q0V.1,26^+?VD:1,qH,4>8NG0KpUA1,UjH4q0V.1,:RJ+?VD:1IaP;4>8NG1-QgC1,UdS4q0V.1,:XL+?VD:1GD!%4>8NG1d3$E1,UgE4q0V.1,:^N+?VD:1H7Q-4>8NG2Ei6G1,UmD4q0V.1,:dP+?VD:0etp%4>8NG3''JHI1,Ud@4q0V.1,:jR+?VD:0gRu44>8NG5s?DR1,UdH4q0V.1,;0[+?VD:0fD3)4>8NG6TuVT1,UdD4q0V.1,;6]+?VD:0L\/74>8NG76VhV1,UaR4q0V.1,ME`+?VD60f)!&4>8NI7QqqW1G_$N4q0V.1,UaL+?VG96Spt94>8NJ7QqqW1G_Ba4q0V.1,^pP+?VG96Uj6K4>8NK2Ei6G1G_BX4q0V.1,q''R+?VD61,_<*4>8NM3BeQJ1G_EW4q0V.1,qQ`+?VG96T%%:4>8NM76VhV1G_Ec4q0V.1-%-S+?VG96ps3J4>8NN1d3$E1G_EQ4q0V.1-%3U+?VG96o."94>8NN2Ei6G1G_BS4q0V.1-%9W+?VG96TI=>4>8NN3''JHI1G_Ed4q0V.1-%?Y+?VG96T.+;4>8NN5s?DR0JGjP4q0V.1-%Zb+?V>36nge64>8NN6TuVT0JGdY4q0V.1-%`d+?V>41,_<*4>8NN76VhV0JP@=4q0V.1-%ff+?V>41IaP;4>8NV0KpUA0JPC=4q0V.1-mWY+?V>36o[@>4>8NV1-QgC0JPF?4q0V.1-m][+?V>36:!dE4>8NV1d3$E0JGm`4q0V.1-mc]+?V>42E!`.4>8NV2Ei6G0JPCM4q0V.1.=Po+?V>36:=!H4>8NZ7QqqW0JGg\4q0V.1.Er]+?V>36:F''I4>8N[2*N-F0JGpR4q0V.1.F/c+?V>40ekj$4>8N[2a/?H0JGsM4q0V.1.F5e+?V>41,hB+4>8N[3BeQJ0JP@<4q0V.1.FPn+?V>41G_3(4>8N[69ZMS0JP@C4q0V.1.FVp+?V>41b_*&4>8N[6p;_U0JPC>4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q="7R]K`4>8HY3''Id60JZ*e4s2sA0f:aN%6Q=#0JG[54>8HW7Qq8D0JbC;4s2sA0LeJp%6Q=#0JYg74>8KJ2a.[50JbC=4s2sA0f23\%6Q=#0Jks94>8KH3Bdm70JbOO4s2sA0L@c`%6Q=#1djMM4>JTL1d2@20JbOS4s2sC0K2Hb%6Q=$0JYg74>8TG0g6%/0JkO@4s2sA1c7!O%6Q=$1b_*94@)=g1d2@20JkXB4s2sR6S^>Z%6Q=$2)@E=4@)=i1d2@20JkXR4s2sR6Sh(n%6Q=$2+''PM4@)=k0Koq.0JkXT4s2sR6Sq+n%6Q=$2+9\O4@)=k6p;&B0JkXV4s2sR6T$\a%6Q=$2D@<;4@)=l3''Id60Jk[B4s2sR6T%4p%6Q=$2DdT?4@)=n1d2@20Jk[H4s2sR6T7:p%6Q=$2_mQ>4@)=p0Koq.0Jk^E4s2sR6THte%6Q=$2a]bO4@)>#6TtrA0JkaG4s2sR6UNRl%6Q=$3&NlB4@)>%1d2@20JkaI4s2sR6UNgs%6Q=$3&a#D4@)>%6TtrA0JkaK4s2sR6UWdq%6Q=$3&s/F4@)>&2a.[50JkaV4s2sR6U`gq%6Q=$3(?(S4@)>''5s>`?0JkdD4s2sR6Ua@+%6Q=$3A`oB4@)>(1Hl710JkdM4s2sR6ng;Y%6Q=$3C,hO4@)@h1d2@20JkdV4s2sR6ngM_%6Q=$3CQ+S4@)@h7Qq8D0JkdZ4s2sR6npD[%6Q=$5qkJF4@)@i3''Id60Jl''M4s2sR6nq%m%6Q=$5r(VH4@)@j0Koq.0Jl''O4s2sR6o$bd%6Q=$5r_%N4@)@k3''Id60Jl''U4s2sR6o.1o%6Q=$5smgY4@)@l2a.[50Jl''`4s2sR6o6nf%6Q=$5t*s[4@)@m0Koq.0Jl''b4s2sR6o?eb%6Q=$681SG4@)@m3''Id60Jl*N4s2sR6oHb`%6Q=$68C_I4@)@n1Hl710Jl*R4s2sR6oQe`%6Q=$6:=![4@)@o7Qq8D0Jl-P4s2sR6o[Ot%6Q=$6SgnK4@)@q0Koq.0Jl-T4s2sR6pWXn%6Q=$6T71O4@)A%2a.[50Jl-_4s2sR6pidp%6Q=$6UEsZ4@)A&3''Id60Jl-c4s2sR6prgp%6Q=$6Uj6^4@)A''6TtrA0Jl0O4s2sR6q&dn%6Q=$6npkJ4@)A(1d2@20Jl0S4s2sR6q0O-%6Q=$6pX!Z4@)Ci69Yi@0Jl0a4s2sR75.+n%6Q=$6pj-\4@)Cj1d2@20Jl0e4s2sR75Hba%6Q=$75@%L4@)Cl5s>`?0Jl3U4s2sR75Qea%6Q=$76!IR4@)Cm5s>`?0Jl3c4s2sR75Zb_%6Q=$779<^4@)Cn1d2@20Jl3e4s2sR75Zte%6Q=$7Pm:O4@)Co2*MI30Jl6X4s2sR75dLs%6Q=$7Q<RS4@)Cp0Koq.0JtO<4s2sR76!Xu%6Q=%0Jks94@)D''0Koq.0JtOA4s2sR77/mq%6Q=%0LS)I4@)D(6TtrA0JtOQ4s2sR77B1"%6Q=%0Le5K4@)D)69Yi@0JtR=4s2sR77BU.%6Q=%0ekj74@)D*1d2@20JtR?4s2sR77K7#%6Q=%0f)!94@)D*6TtrA0JtRC4s2sR7PI4o%6Q=%0fM9=4@)Fk0Koq.0JtRN4s2sR7Pc_^%6Q=%0g\&H4@)Fm1-Q.00JtRP4s2sR7Pckb%6Q=%0h+>L4@)Fm7Qq8D0JtUC4s2sR7Puk`%6Q=%1-n)H4@)Fq3Bdm70JtUP4s2sR7Q<(c%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8WJ6TuVT5t3gj4q0V.2)7Q`+?VqZ3&j)24>8WK0KpUA5t3jl4q0V.2)?sN+?VqZ3C>t>4>8WK1d3$E5t41.4q0V.2)@*R+?VqZ6SL\54>8WK3BeQJ5t44.4q0V.2)@T`+?VqZ6o7(:4>8WK6p;_U5t4704q0V.2)I''P+?VqZ7Pm:<4>8WL1HlpD5t4=''4q0V.2)I3T+?VtE0Jks&4>8WL2a/?H681)\4q0V.2)I9V+?VtE0ebd#4>8WL3BeQJ681,N4q0V.2)IZa+?VtE1,qH,4>8WL7QqqW6815U4q0V.2)R''O+?VtE1dO;74>8WM0g6^B6815`4q0V.2)R-Q+?VtE1dsS;4>8WM2Ei6G6818U4q0V.2)R<V+?VtE2*!i04>8WM3''JHI6818b4q0V.2)R]a+?VtE3&!N*4>8WM6TuVT681AU4q0V.2)Rie+?VtE3(?(@4>8WN0KpUA681DS4q0V.2)[9T+?VtE3C>t>4>8WO0KpUA681_\4q0V.2)d?U+?VtE69%.<4>8WO2*N-F681_n4q0V.2)doe+?VtE6o7(:4>8WO76VhV681ee4q0V.2)dug+?VtE75-n74>8WP0KpUA681hc4q0V.2)mHW+?VtF0ebd#4>8WQ0KpUA68:5T4q0V.2*!BT+?VtF1.+574>8WQ3BeQJ68:;R4q0V.2*!rd+?VtF1cRZ.4>8WQ7QqqW68:>W4q0V.2*io[+?VtF2+''P:4>8WY0g6^B68:AP4q0V.2*j&_+?VtF2a]b<4>8WY2*N-F68:GR4q0V.2*j,a+?VtF3&3Z,4>8WY3BeQJ68:Gd4q0V.2*jMl+?VtF3(,q>4>8WY76VhV68:J[4q0V.2*j\q+?VtF3C>t>4>8WZ0KpUA68:bc4q0V.2*s#]+?VtF6UO$H4>8WZ1-QgC68:k^4q0V.2*s)_+?VtF6o7(:4>8WZ2Ei6G68:kt4q0V.2*s;e+?VtF7706J4>8WZ5s?DR68:q`4q0V.2*sVn+?VtF7QEXA4>8WZ6TuVT68:qr4q0V.2*s\p+?VtF7RTEL4>8W[0KpUA68C5S4q0V.2+''5b+?VtG0fM9*4>8W[2Ei6G68C8U4q0V.2+'';d+?VtG1,(m$4>8W[3''JHI68C>R4q0V.2+''Af+?VtG1IF>84>8W[5s?DR68CDX4q0V.2+''\o+?VtG2+''P:4>8W[6TuVT68CGQ4q0V.2+0/_+?VtG2a]b<4>8W\1d3$E68CM\4q0V.2+0Ae+?VtG3A`o/4>8W\6p;_U68Ch_4q0V.2+92_+?VtG5s[[D4>8W]0g6^B68Cho4q0V.2+98a+?VtG681S44>8W]1HlpD68Cka4q0V.2+9De+?VtG6UO$H4>8W]2a/?H68Cq_4q0V.2+9Jg+?VtG6o$q84>8W]69ZMS68Cqq4q0V.2+9kr+?VtG6ps3J4>8W]6p;_U68Ctb4q0V.2+B;a+?VtG76!I?4>8W^7QqqW68D#"4q0V.2D?mM+?VtH0Jks&4>8ZI1HlpD68L;T4q0V.2D@-T+?VtH0ge,64>8ZI6p;_U68LJY4q0V.2DI$P+?VtH2E*f/4>8ZJ2*N-F68LM[4q0V.2DI*R+?VtH2F9S:4>8ZJ2a/?H68LMg4q0V.2DIK]+?VtH2`*]-4>8ZJ69ZMS68LP[4q0V.2DR!N+?VtH3(#k=4>8ZK1-QgC68LVU4q0V.2DR''P+?VtH3A`o/4>8ZK2Ei6G68Lne4q0V.2DR3T+?VtH5smgFASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0K([P4s2sS1IF,c%6Q=&1.4;K4@1hk76V/C0K([T4s2sS1INo\%6Q=&1GM''94@1hl2a.[50K(^B4s2sS1IO5e%6Q=&1G_3;4@1hl69Yi@0K(^D4s2sS1IOVp%6Q=&1Gq?=4@1hm0Koq.0K(^F4s2sS1IX,a%6Q=&1H.K?4@1hm3''Id60K(^H4s2sS1Ia_q%6Q=&1H@WA4@1kZ0Koq.0K(^Q4s2sS1bgsR%6Q=&1I=8J4@1kZ6TtrA0K(^S4s2sS1bpaK%6Q=&1IaPN4@1k[69Yi@0K(aA4s2sS1c$sP%6Q=&1c%<<4@1k^1d2@20K(aE4s2sS1c76V%6Q=&1cIT@4@1k_1Hl710K(aI4s2sS1c@3T%6Q=&1c[`B4@1k_6TtrA0K(aR4s2sS1cR0Q%6Q=&1dXAK4@1ka3''Id60K(aT4s2sS1c[rf%6Q=&1djMM4@1kj1d2@20K(aV4s2sS1dO)b%6Q=&1e''YO4@1kj6TtrA0K(dB4s2sS1dX&`%6Q=&2).9;4@1kk2a.[50K(dD4s2sS1dX2d%6Q=&2)@E=4@1kl0Koq.0K(dF4s2sS1da)`%6Q=&2)RQ?4@1kl3''Id60K(dH4s2sS1dj#]%6Q=&2)d]A4@1km2*MI30K(dS4s2sS1ds)^%6Q=&2+0VN4@1kn2EhR40K(gC4s2sS1dskt%6Q=&2DIB<4@1ko0g6%/0K(gE4s2sS1e''Gg%6Q=&2DmZ@4@1n[3''Id60K(jD4s2sS2)@''Q%6Q=&2_dK=4@1n]3''Id60K(jU4s2sS2)R''O%6Q=&2aT\N4@1n_1d2@20K(mH4s2sS2*j&_%6Q=&3&EfA4@1nk3''Id60K(m[4s2sS2+''&]%6Q=&3A<W>4@1nm1d2@20K(pL4s2sS2+0Df%6Q=&3B'',E4@1no6TtrA0K(pW4s2sS2DI$P%6Q=&3C5nP4@1q\3''Id60K(pY4s2sS2DR-R%6Q=&3CH%R4@1q]6TtrA0K(p[4s2sS2D[0R%6Q=&3CZ1T4@1q_3''Id60K)3N4s2sS2E!BU%6Q=&5qtPG4@1qa3''Id60K)3R4s2sS2F0#\%6Q=&5rChK4@1ql1d2@20K)3V4s2sS2F9,^%6Q=&5rh+O4@1qo1d2@20K)3_4s2sS2F]Aa%6Q=&5sdaX4@1qq1d2@20K)3a4s2sS2F]Yi%6Q=&5t4$\4@1t\2*MI30K)6Q4s2sS2_m`a%6Q=&68q(N4@1t_69Yi@0K)6W4s2sS2`*?T%6Q=&69.4P4@1t`3''Id60K)6`4s2sS2`*lc%6Q=&6:=![4@1tb0Koq.0K)6d4s2sS2`<KV%6Q=&6:O-]4@1tb3''Id60K)9R4s2sS2`ENV%6Q=&6SgnK4@1tc2*MI30K)9V4s2sS2`NKT%6Q=&6T71O4@1td1d2@20K)<S4s2sS2`X5h%6Q=&6o."L4@1tm0Koq.0K)<c4s2sS2aTJf%6Q=&6pj-\4@1to2a.[50K)<e4s2sS2a]Sh%6Q=&75-nJ4@1tr0Koq.0K)?S4s2sS2b#Vf%6Q=&76s*[4@2"]6TtrA0K)?d4s2sS3&**N%6Q=&77BB_4@2"^69Yi@0K)?h4s2sS3&*fb%6Q=&7P[.M4@2"_3''Id60K)BV4s2sS3&3ib%6Q=&7QEXT4@2"a0Koq.0K)Bd4s2sS3&EHU%6Q=&7RB9]4@2"b0g6%/0K)Bf4s2sS3&NKU%6Q=&7RfQa4@2"c0Koq.0K1[>4s2sS3&WTW%6Q=''0Jbm84@2"c7Qq8mDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b2_[''P+?VtM2_dK*4>8]J2*N-F69$n`4q0V.2_[-R+?VtM2a]b<4>8]J2a/?H69$qm4q0V.2_[3T+?VtM5r_%;4>8]J3BeQJ69%:c4q0V.2_[N]+?VtM68Uk84>8]J69ZMS69%:k4q0V.2_[Za+?VtM6Sgn84>8]J7QqqW69%=i4q0V.2_d!M+?VtM6UO$H4>8]K0g6^B69%@e4q0V.2_d''O+?VtM6o7(:4>8]K1HlpD69%A$4q0V.2_d-Q+?VtM6q0?L4>8]K2*N-F69%Cg4q0V.2_d9U+?VtM7706J4>8]K3BeQJ69%Fg4q0V.2_dZ`+?VtM7RB9J4>8]K6p;_U69%G&4q0V.2_d`b+?VtN0Jks&4>8]K7QqqW69-b[4q0V.2_m''N+?VtN1,(m$4>8]L1HlpD69-kV4q0V.2_m3R+?VtN1c.B*4>8]L2*N-F69-ki4q0V.2_m9T+?VtN1e''Y<4>8]L2a/?H69-nX4q0V.2_mZ_+?VtN2+''P:4>8]L69ZMS69-qX4q0V.2_mfc+?VtN2F9S:4>8]L7QqqW69-ql4q0V.2`!3Q+?VtN2`Nu14>8]M1HlpD69-tl4q0V.2`!?U+?VtN3&a#14>8]M6p;_U69.@d4q0V.2`!ld+?VtN68Uk84>8]N0g6^B69.A%4q0V.2`*9R+?VtN6SUb64>8]N2*N-F69.D#4q0V.2`*od+?VtN6pa''H4>8]O0KpUA69.Ih4q0V.2`3EU+?VtN76!I?4>8]O2*N-F69.J%4q0V.2`4#f+?VtV0K;6*4>8]O7QqqW6:!=`4q0V.2`<ET+?VtV1IF>84>8]P1HlpD6:!F^4q0V.2`<KV+?VtV1bq6(4>8]P2a/?H6:!Fp4q0V.2`=&f+?VtV2)mc/4>8]P76VhV6:!Ir4q0V.2`EWY+?VtV2`*]-4>8]Q2a/?H6:!Oi4q0V.2`F&e+?VtV3&a#14>8]Q6TuVT6:!Ru4q0V.2`NNU+?VtV681S44>8]R1-QgC6:!pn4q0V.2`NZY+?VtV6:*jF4>8]R2Ei6G6:!q+4q0V.2`N`[+?VtV6Spt94>8]R3''JHI6:!su4q0V.2`O,f+?VtV7RK?K4>8]R6TuVT6:*@[4q0V.2`O2h+?VtW0Jks&4>8]R76VhV6:*@o4q0V.2`O8j+?VtW0Le584>8]S0KpUA6:*C]4q0V.2`WTV+?VtW0fV?+4>8]S1-QgC6:*Co4q0V.2`WZX+?VtW1,(m$4>8]S1d3$E6:*Ff4q0V.2`W`Z+?VtW1."/64>8]S3BeQJ6:*If4q0V.2aK,]+?VtW1cIT-4>8][0g6^B6:*Lh4q0V.2aK2_+?VtW1djM:4>8][2*N-F6:*Od4q0V.2aK>c+?VtW2)mc/4>8][2a/?H6:*Rb4q0V.2aKDe+?VtW2D[N+4>8][3BeQJ6:*Rt4q0V.2aK_n+?VtW3&j)24>8][69ZMS6:*Y!4q0V.2aKep+?VtW3A<W+4>8][6p;_U6:*sp4q0V.2aKkr+?VtW5r_%;4>8][7QqqW6:*t*4q0V.2aT2^+?VtW68Uk84>8]\0g6^B6:+!t4q0V.2aT8`+?VtW6SL\54>8]\1HlpD6:+$r4q0V.2aT>b+?VtW6T@7=4>8]\2*N-F6:+''o4q0V.2aTDd+?VtW6o."94>8]\3BeQJ6:+./4q0V.2aTkq+?VtX0JYg$4>8]]1-QgC6:3Fr4q0V.2a]Ab+?VtX0ekj$4>8]^0KpUA6:3Le4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=''6npkJ4@2Cj3Bdm70K2BT4s2sS6S_%n%6Q=''6o@.N4@2Ck1d2@20K2BX4s2sS6Sg\c%6Q=''6pj-\4@2Cl3Bdm70K2Bh4s2sS6T$P]%6Q=''75-nJ4@2Cm6p;&B0K2EV4s2sS6T@%h%6Q=''75d=P4@2Cp76V/C0K2E\4s2sS6TI(h%6Q=''77BB_4@2D$1d2@20K2H\4s2sS6UNOk%6Q=''7QEXT4@2D&1d2@20K2He4s2sS6UO7*%6Q=''7R]K`4@2D''2*MI30K2Hj4s2sS6UWmt%6Q=(0JG[54@2D''6TtrA0K:aC4s2sS6Uj%!%6Q=(0Ju$:4@2D)6TtrA0K:aG4s2sS6ngP`%6Q=(0KD<>4@2Fi3Bdm70K:aP4s2sS6npAZ%6Q=(0L@rG4@2Fj1d2@20K:aR4s2sS6o$S_%6Q=(0LS)I4@2Fk6TtrA0K:aT4s2sS6o6S]%6Q=(0ekj74@2Fm6TtrA0K:dB4s2sS6o?Y^%6Q=(0f;-;4@2Fo1d2@20K:dF4s2sS6oI"g%6Q=(0f_E?4@2Fq1d2@20K:gA4s2sS6od%e%6Q=(1,1s84@2Fr2*MI30K:gE4s2sS6odUu%6Q=(1,V6<4@2G%1d2@20K:gG4s2sS6p`Rk%6Q=(1,hB>4@2G&3''Id60K:gR4s2sS6ps!u%6Q=(1."/I4@2G(6TtrA0K:gT4s2sS6q''+"%6Q=(1.4;K4@2G*0Koq.0K:gV4s2sS6q0!s%6Q=(1.FGM4@2G*3''Id60K:jB4s2sS75-DZ%6Q=(1GM''94@2Ij1Hl710K:jD4s2sS75-S_%6Q=(1Gq?=4@2Ik0Koq.0K:jH4s2sS756V_%6Q=(1H@WA4@2Ik7Qq8D0K:jU4s2sS75Qtf%6Q=(1IODL4@2In6TtrA0K:jW4s2sS75RFs%6Q=(1bh0:4@2Io2a.[50K:mJ4s2sS75ctd%6Q=(1cRZA4@2Ip3''Id60K:mL4s2sS75dFq%6Q=(2)7?<4@2Ir0Koq.0K:pG4s2sS76!+f%6Q=(2*sJL4@2J&3''Id60K:pY4s2sS778sr%6Q=(2DIB<4@2J*0Koq.0K:sJ4s2sS77BR-%6Q=(2E!`A4@2Lk0g6%/0K;!F4s2sS7Plqc%6Q=(2_dK=4@2Lo3''Id60K;!J4s2sS7Q!%e%6Q=(2`3cA4@2Lt1d2@20K;!L4s2sS7RAdm%6Q=(2`EoC4@2M)2*MI30K;!W4s2sS7RSpo%6Q=(2aT\N4@2M*1d2@20K;!Y4s2sS7RTU-%6Q=(2afhP4@2M*7Qq8D0K;![4s2sS7R]$q%6Q=(2b#tR4@:eY6TtrA0K;$G4s2sT0JtRK%6Q=(3&*T>4@:e[3''Id60K;$I4s2sT0Ju3]%6Q=(3&<`@4@:e\0Koq.0K;$O4s2sT0KCsR%6Q=(3&s/F4@:e_3''Id60K;$Z4s2sT0L7KY%6Q=(3(,qQ4@:eg2*MI30K;''Z4s2sT0LI]]%6Q=(3CQ+S4@:ei6TtrA0K;''^4s2sT0LRTY%6Q=(5rUtM4@:ek3''Id60K;?X4s2sT0L\>m%6Q=(5sdaX4@:el2a.[50K;?c4s2sT0Le&d%6Q=(5t!mZ4@:hW0Koq.0K;?e4s2sT0ebFJ%6Q=(5t4$\4@:hW3''Id60K;BQ4s2sT0ek@G%6Q=(68:YH4@:hX2*MI30K;ER4s2sT0f(^O%6Q=(6SgnK4@:hZ6TtrA0K;EV4s2sT0f1RJ%6Q=(6UO$[4@:h\3''Id60K;Ef4s2sT0f;<^%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8`_1HlpD6SUMR4q0V.3(,Se+?W"G2`*]-4>8`_2*N-F6SUMZ4q0V.3(,Yg+?W"G3&Nl/4>8`_5s?DR6SUST4q0V.3(-(s+?W"G3A`o/4>8`_6TuVT6SUSZ4q0V.3(-5"+?W"G3CZ1A4>8``0KpUA6SUk]4q0V.3(5Pc+?W"G5rCh84>8``1d3$E6SUko4q0V.3(5\g+?W"G681S44>8``2Ei6G6SUnq4q0V.3(5bi+?W"G6Spt94>8``3''JHI6SUqf4q0V.3(5hk+?W"G6UO$H4>8``5s?DR6SUtc4q0V.3(65!+?W"G75-n74>8``76VhV6SV"d4q0V.3(6;#+?W"G76!I?4>8`a1-QgC6SV%d4q0V.3(>bh+?W"H0JG["4>8`a2Ei6G6S^>P4q0V.3(>nl+?W"H0Le584>8`a5s?DR6S^AN4q0V.3(?;"+?W"H0ge,64>8cL1-QgC6S^D`4q0V.3A<6Q+?W"H1.4;84>8cL1d3$E6S^Dd4q0V.3A<BU+?W"H1Gh9)4>8cL3''JHI6S^JX4q0V.3A<c`+?W"H2)IK+4>8cL6TuVT6S^MY4q0V.3A<ib+?W"H2D@<(4>8cL76VhV6S^PW4q0V.3AE6P+?W"H2_[E)4>8cM1-QgC6S^SW4q0V.3AEBT+?W"H2b#t?4>8cM2Ei6G6S^VU4q0V.3AENX+?W"H3A<W+4>8cM5s?DR6S^Y]4q0V.3AEia+?W"H3C5n=4>8cM6TuVT6S^Yi4q0V.3AEue+?W"H5r_%;4>8cN1d3$E6S^te4q0V.3ANHU+?W"H69.4=4>8cN3''JHI6S_(a4q0V.3AO#e+?W"H77KHM4>8cN7QqqW6S_+c4q0V.3AW?Q+?W"H7Q*F>4>8cO2*N-F6SgDM4q0V.3AX&e+?W"I0fV?+4>8cO76VhV6SgGa4q0V.3A`NU+?W"I1c7H+4>8cP2Ei6G6SgVf4q0V.3A`ZY+?W"I2_[E)4>8cP3''JHI6SgYV4q0V.3Aa,f+?W"I3&Ef.4>8cP76VhV6Sg\]4q0V.3Aa2h+?W"I3(#k=4>8cQ0KpUA6Sh(`4q0V.3AiTV+?W"I6pj-I4>8cQ2Ei6G6Sh.d4q0V.3Aif\+?W"I779<K4>8cQ6TuVT6Sh1k4q0V.3Aj2g+?W"J0K;6*4>8cQ76VhV6SpMO4q0V.3Aj8i+?W"J1,M0(4>8cR0KpUA6SpPc4q0V.3ArTU+?W"J1GD!%4>8cR1-QgC6SpSU4q0V.3Ar`Y+?W"J1cRZ.4>8cR3''JHI6Sp\\4q0V.3Arl]+?W"J2FBY;4>8cR6TuVT6Sp_^4q0V.3As8h+?W"J3&!N*4>8cR76VhV6Spe[4q0V.3As>j+?W"J3C>t>4>8cS0KpUA6Sq+h4q0V.3B&ZV+?W"J6:3pG4>8cS1-QgC6Sq4l4q0V.3B&fZ+?W"J7Pm:<4>8cS2Ei6G6Sq7l4q0V.3B&l\+?W"J7R93I4>8cS69ZMS6T$Pb4q0V.3B'';h+?W"K0ebd#4>8cS6p;_U6T$ST4q0V.3B''Aj+?W"K0ge,64>8cT0g6^B6T$Vd4q0V.3B/cX+?W"K1GD!%4>8cT2*N-F6T$Yd4q0V.3B/o\+?W"K1IOD94>8cU3BeQJ6T$bY4q0V.3B9Ah+?W"K2E3l04>8c]1-QgC6T$hW4q0V.3C,Gb+?W"K3&Ef.4>8c]1d3$E6T$h^4q0V.3C,Sf+?W"K3(?(@4>8c]3''JHI6T$kY4q0V.3C,Yh+?W"K3Aiu0ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0KDEd4s2sT2*"#f%6Q=)5t!mZ4@:tl0Koq.0KDEf4s2sT2*j5d%6Q=)6:F''\4@:tn6TtrA0KDHh4s2sT2+''er%6Q=)6S^hJ4@:to1d2@20KDKV4s2sT2+0Df%6Q=)6T.+N4@:tp1Hl710KDKZ4s2sT2+9Ad%6Q=)6UEsZ4@:tq0Koq.0KDKf4s2sT2+BDd%6Q=)6odFR4@;"\6TtrA0KDNe4s2sT2DHmL%6Q=)756tK4@;"^3''Id60KDQZ4s2sT2D[$N%6Q=)76*OS4@;"_2a.[50KDQf4s2sT2D[?W%6Q=)77''0\4@;"_69Yi@0KDQj4s2sT2Dd6S%6Q=)77KH`4@;"`3''Id60KDT]4s2sT2E!6Q%6Q=)7Q<RS4@;"b6TtrA0KDT_4s2sT2E"#g%6Q=)7R93\4@;"c0g6%/0KDTj4s2sT2E*ue%6Q=)7R]K`4@;"d0Koq.0KDTl4s2sT2E3Z[%6Q=10JG[54@;"d3Bdm70L7BI4s2sT2E4#e%6Q=10JYg74@;"d6p;&B0L7BM4s2sT2E<`\%6Q=10K)*;4@;"e6TtrA0L7BQ4s2sT2F08c%6Q=10L7lF4@;"m3Bdm70L7B\4s2sT2F95a%6Q=10f)!94@;"o1Hl710L7EM4s2sT2FB>c%6Q=10fM9=4@;"p0Koq.0L7EQ4s2sT2FKAc%6Q=10h+>L4@;"q6TtrA0L7HJ4s2sT2F]Aa%6Q=11,D*:4@;"r6p;&B0L7HP4s2sT2_[3T%6Q=11,hB>4@;%]6TtrA0L7H[4s2sT2_d6T%6Q=11."/I4@;%^3Bdm70L7H_4s2sT2_m3R%6Q=11.FGM4@;%_3''Id60L7KM4s2sT2`!6R%6Q=11G_3;4@;%`2*MI30L7KO4s2sT2`!BV%6Q=11H.K?4@;%a0Koq.0L7KS4s2sT2`*?T%6Q=11H@WA4@;%a5s>`?0L7K^4s2sT2`*uf%6Q=11c7H>4@;%b6TtrA0L7NR4s2sT2`<?R%6Q=11cIT@4@;%c3''Id60L7NT4s2sT2`<ud%6Q=11dXAK4@;%d3''Id60L7QS4s2sT2`O5i%6Q=12*!iC4@;%f1d2@20L7Qa4s2sT2`X/f%6Q=12E!`A4@;%o0Koq.0L7TU4s2sT2aT>b%6Q=12F]kQ4@;%p6TtrA0L7WO4s2sT2a^"t%6Q=12_dK=4@;%q0Koq.0L7WQ4s2sT2afVh%6Q=12`!W?4@;%q6p;&B0L7WS4s2sT2aoPe%6Q=12`3cA4@;%r3''Id60L7WU4s2sT2ap(t%6Q=12`X&E4@;(^1d2@20L7W`4s2sT3&!<U%6Q=12aT\N4@;(^5s>`?0L7Wd4s2sT3&*3Q%6Q=13&<`@4@;(`0Koq.0L7ZT4s2sT3&3<S%6Q=13&a#D4@;(`7Qq8D0L7ZX4s2sT3&<9Q%6Q=13&s/F4@;(a3''Id60L7Za4s2sT3&<oc%6Q=13''oeO4@;(b0Koq.0L7]Q4s2sT3&NNV%6Q=13AWiA4@;(e1d2@20L7]U4s2sT3&`f\%6Q=13AiuC4@;(e5s>`?0L7]Y4s2sT3&i]X%6Q=13CZ1T4@;(g1d2@20L7uY4s2sT3&sAj%6Q=15qtPG4@;(g7Qq8D0L7u[4s2sT3''f8_%6Q=15r1\I4@;(o3''Id60L7u_4s2sT3(#Md%6Q=15rUtM4@;(q3''Id60L7ua4s2sT3($%s%6Q=15sdaX4@;(r2a.[50L7ul4s2sT3(,bj%6Q=15t4$\4@;(s1d2@[DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b5sd7h+?W"N7Q!@=4>9&f1HlpD6THhS4q0V.5sdRq+?W"O0Le584>9&f5s?DR6THkU4q0V.5sdn%+?W"O0fV?+4>9&f6TuVT6THnh4q0V.5sdt''+?W"O1Gh9)4>9&g0KpUA6TI"\4q0V.5sm@j+?W"O2)mc/4>9&g1d3$E6TI%\4q0V.5smLn+?W"O2FBY;4>9&g2Ei6G6TI(Z4q0V.5smRp+?W"O2`*]-4>9&g3''JHI6TI(m4q0V.5smt&+?W"O3(#k=4>9&g6TuVT6TI.\4q0V.5sn+*+?W"O3C5n=4>9&h0KpUA6TI.p4q0V.5t!Lm+?W"O6Spt94>9&h2Ei6G6TIM"4q0V.5t!^s+?W"O6o."94>9&i0KpUA6TIRh4q0V.5t*Ll+?W"O75@%94>9&i1-QgC6TIRl4q0V.5t*Rn+?W"O75mC>4>9&i69ZMS6TIV''4q0V.5t+.)+?W"W0JG["4>9&j1-QgC6U<F`4q0V.5t3Xo+?W"W0fV?+4>9&j1d3$E6U<If4q0V.5t3ds+?W"W2)%3''4>9&j3''JHI6U<Rd4q0V.5t4:,+?W"W2E3l04>9&j7QqqW6U<Y!4q0V.681)W+?W"W3&Ef.4>9)U0g6^B6U<^l4q0V.6815[+?W"W6SL\54>9)U2*N-F6U=''r4q0V.681A_+?W"W6Uj6K4>9)U3BeQJ6U=*p4q0V.681\h+?W"W6o."94>9)U6p;_U6U=-p4q0V.681hl+?W"W7706J4>9)U7QqqW6U=0u4q0V.68:/X+?W"X0K;6*4>9)V0g6^B6UEL]4q0V.68:5Z+?W"X0f2''''4>9)V1HlpD6UELe4q0V.68:A^+?W"X1bh0''4>9)V3BeQJ6UEUs4q0V.68:bi+?W"X2)%3''4>9)V6p;_U6UEXu4q0V.68:nm+?W"X2DdT,4>9)W0g6^B6UEe#4q0V.68C;[+?W"X69%.<4>9)W1HlpD6UF0t4q0V.68CA]+?W"X75R1;4>9)W2*N-F6UF4#4q0V.68CG_+?W"X76*O@4>9)W3BeQJ6UNR^4q0V.68Chj+?W"Y0f2''''4>9)X1-QgC6UNUr4q0V.68LD]+?W"Y1.=A94>9)X1d3$E6UNX`4q0V.68M"n+?W"Y1cRZ.4>9)X76VhV6UN[t4q0V.68UM_+?W"Y2D@<(4>9)Y2*N-F6UNag4q0V.68USa+?W"Y2E!`.4>9)Y2a/?H6UNak4q0V.68UYc+?W"Y2_[E)4>9)Y3BeQJ6UNdi4q0V.68V%n+?W"Y3C>t>4>9)Y6p;_U6UO-n4q0V.68^Va+?W"Y69%.<4>9)Z2Ei6G6UO1-4q0V.68^be+?W"Y6T71<4>9)Z5s?DR6UO4$4q0V.68_(n+?W"Y6nge64>9)Z6TuVT6UO6u4q0V.68_.p+?W"Y75R1;4>9)Z76VhV6UO:04q0V.68_4r+?W"Y7PI"84>9)[0KpUA6UWU_4q0V.68gV`+?W"Z0LJ#54>9)[1d3$E6UWX_4q0V.68gbd+?W"Z0g\&54>9)[3''JHI6UWXs4q0V.68ghf+?W"Z1,M0(4>9)[5s?DR6UW[h4q0V.68h.o+?W"Z1.+574>9)[6TuVT6UW^j4q0V.68h4q+?W"Z2+''P:4>9)[76VhV6UWgd4q0V.68h:s+?W"Z2DdT,4>9)\1-QgC6UWh%4q0V.68p\a+?W"Z2_dK*4>9)\1d3$E6UWjm4q0V.68pbc+?W"Z3&j)24>9)\3''JHI6UWpo4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=22`X&E4@;Ls6TtrA0L@]c4s2sT6pWaq%6Q=22afhP4@;M&3Bdm70L@]e4s2sT6p`Rk%6Q=22b#tR4@;M(1d2@20L@`Q4s2sT6pj=*%6Q=23&*T>4@;M)0Koq.0L@`S4s2sT6q''(!%6Q=23&<`@4@;M*6TtrA0L@`U4s2sT6q/jo%6Q=23&a#D4@;M+69Yi@0L@`Y4s2sT6q0R.%6Q=23&s/F4@;Ok1d2@20L@`b4s2sT75-\b%6Q=23''oeO4@;Ok6TtrA0L@`d4s2sT756V_%6Q=23(,qQ4@;Ol3Bdm70L@cR4s2sT75?\`%6Q=23AE]?4@;Om3''Id60L@cV4s2sT75H_`%6Q=23AiuC4@;On2*MI30L@cZ4s2sT75[Fr%6Q=23CQ+S4@;Oq69Yi@0L@ch4s2sT75dOt%6Q=25r(VH4@;Or3''Id60LA&]4s2sT75mRt%6Q=25rLnL4@;Os2a.[50LA&a4s2sT76!:k%6Q=25s[[W4@;Ot1d2@20LA&l4s2sT76*=k%6Q=268LeJ4@;P)0g6%/0LA)a4s2sT77B1"%6Q=26SL\H4@;Rl1d2@20LA,]4s2sT7PHec%6Q=26SptL4@;Rm1Hl710LA,a4s2sT7PQba%6Q=26T.+N4@;Rm6TtrA0LA,c4s2sT7PZY]%6Q=26T@7P4@;Rn1d2@20LA,q4s2sT7Pd"f%6Q=26npkJ4@;Rq3''Id60LA/_4s2sT7Q!Os%6Q=26o@.N4@;Rr2a.[50LA/c4s2sT7Q*7j%6Q=26odFR4@;Rs1d2@20LA/n4s2sT7Q3:j%6Q=26pa''[4@;Rt0Koq.0LA/p4s2sT7Q<7h%6Q=26ps3]4@;Rt6TtrA0LA/r4s2sT7R8am%6Q=26q0?_4@;S(3''Id60LA2^4s2sT7RAdm%6Q=2756tK4@;S*1d2@20LA2b4s2sT7R]-t%6Q=275[7O4@;S,3''Id60LA2f4s2sT7Rf0t%6Q=276*OS4@;S-2*MI30LA2o4s2sT7Rfa/%6Q=277''0\4@CkW0Koq.0LA2q4s2sU0JG=I%6Q=2779<^4@CkX0g6%/0LA2s4s2sU0JPON%6Q=277KH`4@CkY6p;&B0LA5a4s2sU0Jb[P%6Q=27Pd4N4@CkZ6TtrA0LA5e4s2sU0Jk^P%6Q=27Q3LR4@Ck[3Bdm70LA5g4s2sU0JtOJ%6Q=27QEXT4@Ck\1d2@20LA5p4s2sU0JtgR%6Q=27RB9]4@Ck]0Koq.0LA5t4s2sU0K1[L%6Q=27RfQa4@Ck^1d2@20LINL4s2sU0K:dN%6Q=30Ju$:4@Ckh3''Id60LINP4s2sU0L8&i%6Q=30KD<>4@Cki2a.[50LIN[4s2sU0L@c`%6Q=30LS)I4@Ckj1d2@20LIQR4s2sU0L[ZZ%6Q=30fV?>4@Ckl1d2@20LIQ`4s2sU0Le#c%6Q=30h+>L4@CnX6p;&B0LITN4s2sU0f(XM%6Q=31,D*:4@Cn[3''Id60LITP4s2sU0f)*Z%6Q=31.+5J4@Cn]0Koq.0LIT`4s2sU0f:dO%6Q=31GD!84@Cn]7Qq8D0LIWN4s2sU0fCaM%6Q=31GV-:4@Cn^3''Id60LIWP4s2sU0fDB_%6Q=31Gh9<4@Cn_6TtrA0LIWR4s2sU0fV!R%6Q=31H%E>4@Cn`3''Id60LIWV4s2sU0gRW[%6Q=31I42I4@Cni3''Id60LIWa4s2sU0g[Z[%6Q=31IXJM4@Cnj2*MI30LIWc4s2sU0g\/i%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>9,Z0KpUA6nq"q4q0V.6SpM]+?W%H6SL\54>9,Z1-QgC6nq(h4q0V.6SpS_+?W%H7Pm:<4>9,Z1d3$E6nq.j4q0V.6SpYa+?W%I0K20)4>9,Z2Ei6G6o$GV4q0V.6Sp_c+?W%I0ebd#4>9,Z5s?DR6o$PP4q0V.6Sq+n+?W%I1Gh9)4>9,Z76VhV6o$Pf4q0V.6Sq7r+?W%I1bh0''4>9,[0KpUA6o$SY4q0V.6T$S^+?W%I2+''P:4>9,[1-QgC6o$YW4q0V.6T$_b+?W%I3&Ef.4>9,[2Ei6G6o$_]4q0V.6T$kf+?W%I3Aiu04>9,[5s?DR6o$bi4q0V.6T%1o+?W%I5qkJ34>9,[6TuVT6o%%b4q0V.6T%7q+?W%I5smgF4>9,[76VhV6o%(`4q0V.6T-Y_+?W%I6:3pG4>9,\1d3$E6o%+b4q0V.6T-ke+?W%I6UEsG4>9,\3''JHI6o%.e4q0V.6T-qg+?W%I6o[@>4>9,\5s?DR6o%.t4q0V.6T.Ct+?W%I7Pm:<4>9,]0KpUA6o%4k4q0V.6T6eb+?W%J0Jbm%4>9,]1d3$E6o-MS4q0V.6T6tg+?W%J0ebd#4>9,]3BeQJ6o-PS4q0V.6T7:p+?W%J0fD3)4>9,^0KpUA6o-SU4q0V.6T?kc+?W%J1.+574>9,^1d3$E6o-VQ4q0V.6T@Lu+?W%J3&!N*4>9,^7QqqW6o-eZ4q0V.6TI(h+?W%J3C>t>4>9,_3''JHI6o.+_4q0V.6TIIs+?W%J5sdaE4>9,_6TuVT6o.+s4q0V.6TIOu+?W%J68Uk84>9,_76VhV6o..h4q0V.6TIV"+?W%J6:3pG4>9,g1d3$E6o.4b4q0V.6U<Rn+?W%J6o[@>4>9,g2Ei6G6o.7d4q0V.6U<Xp+?W%J75I+:4>9,g5s?DR6o.:d4q0V.6U=%&+?W%J7Pm:<4>9,g76VhV6o.;%4q0V.6U=1*+?W%K0JPa#4>9,h0KpUA6o6SW4q0V.6UELk+?W%K0gn274>9,h1-QgC6o6_S4q0V.6UERm+?W%K1c.B*4>9,h1d3$E6o6bg4q0V.6UEXo+?W%K2D@<(4>9,h2Ei6G6o6eY4q0V.6UE^q+?W%K2FK_<4>9,h3''JHI6o6ek4q0V.6UF+''+?W%K2a]b<4>9,h76VhV6o6kY4q0V.6UNRl+?W%K3''oe<4>9,i1-QgC6o6kk4q0V.6UNXn+?W%K3A`o/4>9,i1d3$E6o71i4q0V.6UN^p+?W%K6UO$H4>9,i2Ei6G6o7:c4q0V.6UNdr+?W%K6o7(:4>9,i3''JHI6o7;!4q0V.6UNjt+?W%K6q0?L4>9,i5s?DR6o7=l4q0V.6UO1(+?W%K7706J4>9,i6TuVT6o7@e4q0V.6UO7*+?W%K7Q<R@4>9,i76VhV6o7A"4q0V.6UO=,+?W%K7RTEL4>9,j0KpUA6o?YT4q0V.6UWXm+?W%L0K;6*4>9,j1-QgC6o?Yc4q0V.6UWdq+?W%L0fM9*4>9,j3''JHI6o?eT4q0V.6UWpu+?W%L1c.B*4>9,j6TuVT6o?ej4q0V.6UX=++?W%L2).9(4>9,k0KpUA6o?hh4q0V.6U`^n+?W%L2D@<(4>9,k1-QgC6o?k[4q0V.6U`jr+?W%L2F9S:4>9,k2Ei6G6o?kj4q0V.6Ua"!+?W%L2`Nu14>9,k5s?DR6o?nj4q0V.6Uian+?W%L3A<W+4>9,l0g6^B6o@7f4q0V.6Uimr+?W%L6UO$HASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0LJ;e4s2sU2+0,^%6Q=37Q*FQ4@D%p1-Q.00LJ;i4s2sU2+0bp%6Q=37R93\4@D%p6p;&B0LJ;t4s2sU2+9Jg%6Q=37R]K`4@D%q6TtrA0LJ<!4s2sU2+BDd%6Q=40JG[54@D%r2*MI30LRTL4s2sU2+BMg%6Q=40JYg74@D%r3Bdm70LRTP4s2sU2D?sO%6Q=40K)*;4@D(]3''Id60LRT^4s2sU2DIQ_%6Q=40LS)I4@D(_0Koq.0LRT`4s2sU2DR*Q%6Q=40Le5K4@D(_6p;&B0LRWN4s2sU2D[]a%6Q=40f)!94@D(a0Koq.0LRWP4s2sU2Dd9T%6Q=40fM9=4@D(a69Yi@0LRWT4s2sU2Ddfc%6Q=40f_E?4@D(b0g6%/0LRW_4s2sU2DmHX%6Q=40gn2J4@D(b6TtrA0LRWa4s2sU2E!KX%6Q=40h+>L4@D(c3Bdm70LRZO4s2sU2E*HV%6Q=41,D*:4@D(e1Hl710LRZQ4s2sU2E3QX%6Q=41,hB>4@D(f0Koq.0LRZU4s2sU2E<TX%6Q=41-%N@4@D(f6p;&B0LRZ^4s2sU2E=5j%6Q=41."/I4@D(n0g6%/0LRZ`4s2sU2F0;d%6Q=41.4;K4@D(n6TtrA0LRZb4s2sU2F9)]%6Q=41.FGM4@D(o3Bdm70LR]N4s2sU2F9_o%6Q=41G_3;4@D(p3''Id60LR]R4s2sU2FBhq%6Q=41Gq?=4@D(q0g6%/0LR]T4s2sU2FKAc%6Q=41H.K?4@D(q2a.[50LR]V4s2sU2FKPh%6Q=41H@WA4@D(r0Koq.0LR]_4s2sU2FTGd%6Q=41I=8J4@D(r3''Id60LR]a4s2sU2F]Aa%6Q=41IODL4@D(s2*MI30LR`O4s2sU2_ZpL%6Q=41bh0:4@D+^1d2@20LR`Q4s2sU2_d$N%6Q=41c7H>4@D+_6TtrA0LR`U4s2sU2_m''N%6Q=41c[`B4@D+`69Yi@0LR``4s2sU2_mcb%6Q=41djMM4@D+a3''Id60LR`d4s2sU2`!fb%6Q=41e''YO4@D+b1d2@20LRcP4s2sU2`*HW%6Q=42).9;4@D+b3Bdm70LRcT4s2sU2`3EU%6Q=42*sJL4@D+d1Hl710LRcc4s2sU2`<NW%6Q=42+0VN4@D+d3Bdm70LRce4s2sU2`=#e%6Q=42+BbP4@D+e0Koq.0LRfQ4s2sU2`EQW%6Q=42D[N>4@D+f0g6%/0LRfW4s2sU2`O/g%6Q=42E*fB4@D+g0Koq.0LRfb4s2sU2`X2g%6Q=42F9SM4@D+g6p;&B0LRfd4s2sE7PdFr%6Q=42FK_O4>]Md1Hl710LRff4s2sF0Jk^P%6Q=42F]kQ4>ef^3Bdm70LRiR4s2sF1-mTX%6Q=42_dK=4>eo`7Qq8D0LRiT4s2sF1cI9U%6Q=42`!W?4>era2*MI30LRiV4s2sF2D@-T%6Q=42`3cA4>fDl0g6%/0LRiX4s2sF6:*Ro%6Q=42`EoC4>o)W2a.[50LRic4s2sG2ap2"%6Q=42aT\N4>oM_6TtrA0LRie4s2sH1IEo]%6Q=42afhP4?#,b1-Q.00LRig4s2sH5r1kl%6Q=42b#tR4?,)a69Yi@0LRlS4s2sI1GCXL%6Q=43&*T>4?,;X2a.[50LRlU4s2sI3&il]%6Q=43&<`@4?,V_2EhR40LRlW4s2sI6UNgs%6Q=43&NlB4?,_r7Qq8D0LRlY4s2sI77KU-%6Q=43&a#D4?,f!2EhR]DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b6o[.i+?VYE6o@.;4>9/_3BeQJ2)6sS4q0V.6o[Ir+?VM;2`*]-4>9/_69ZMS2)I!D4q0V.6o[Ot+?VP92F0M94>9/_6p;_U2DI*H4q0V.6o[V!+?VPK6:3pG4>9/_7QqqW2`!fj4q0V.6ocqb+?VV<0gRu44>9/`0g6^B3&s;k4q0V.6od"d+?VVD6o$q84>9/`1HlpD3Aj)Y4q0V.6od(f+?VJM3&<`-4>9/`2*N-F2)6jO4q0V.6od.h+?VM@6:F''I4>9/`2a/?H2*!TT4q0V.6od4j+?VMA75d==4>9/`3BeQJ2+9GZ4q0V.6odOs+?VMM2`X&24>9/`69ZMS2DIQX4q0V.6odUu+?VP<6SL\54>9/`6p;_U2E*HN4q0V.6od\"+?VP@7706J4>9/`7QqqW2E3Wb4q0V.6pWLj+?VPO3B'',24>9/h0g6^B2`<K]4q0V.6pWRl+?VSA0L@r44>9/h1HlpD2`O8a4q0V.6pWXn+?VSK0K;6*4>9/h2*N-F2aKo&4q0V.6pW^p+?VSM1,1s%4>9/h2a/?H3&!?\4q0V.6pWdr+?VV=2FTe=4>9/h3BeQJ3&3EI4q0V.6pX+&+?VVL77''0I4>9/h69ZMS3AifQ4q0V.6pX1(+?VJL2F9S:4>9/h6p;_U2)RB^4q0V.6pX7*+?VP?7Q3L?4>9/h7QqqW2FTDY4q0V.6p`Rk+?VSB5r1\64>9/i0g6^B2aKl#4q0V.6p`Xm+?VV?2*sJ94>9/i1HlpD3&r]I4q0V.6p`^o+?VVB1dsS;4>9/i2*N-F3B''5`4q0V.6p`dq+?VM:6o[@>4>9/i2a/?H2)d?\4q0V.6p`js+?VM@1-n)54>9/i3BeQJ2+08g4q0V.6pa1''+?VP:0h+>94>9/i69ZMS2DINe4q0V.6pa7)+?VP;1,1s%4>9/i6p;_U2DmBJ4q0V.6pa=++?VP@6npk74>9/i7QqqW2F0/V4q0V.6piXl+?VPN0g\&54>9/j0g6^B2`3<L4q0V.6pi^n+?VS?68Le74>9/j1HlpD2`=)\4q0V.6pidp+?VSA681S44>9/j2*N-F2afGf4q0V.6pijr+?VY<5t4$I4>9/j3BeQJ3CZ"d4q0V.6pj7(+?VM;1,D*''4>9/j69ZMS2+''Ys4q0V.6pj=*+?VS?1GV-''4>9/j6p;_U3&!`e4q0V.6pjC,+?VY>1b_*&4>9/j7QqqW3AifV4q0V.6pr^m+?VM:2*sJ94>9/k0g6^B2)m9L4q0V.6prdo+?VMA6pj-I4>9/k1HlpD2+''Ya4q0V.6prjq+?VML0fM9*4>9/k2*N-F2+9hj4q0V.6prps+?VMN1I4264>9/k2a/?H2+BDg4q0V.6ps!u+?VP:2`Eo04>9/k3BeQJ2FB>k4q0V.6ps=)+?VS?2aKV:4>9/k69ZMS2`3QQ4q0V.6psC++?VSM75-n74>9/k6p;_U2afS\4q0V.6psI-+?VSN68:Y54>9/k7QqqW2b#bo4q0V.6q&dn+?VV<2)IK+4>9/l0g6^B3&36D4q0V.6q&jp+?VV@3AE],4>9/l1HlpD3&rfM4q0V.6q&pr+?VVM0g\&54>9/l2*N-F3AO&k4q0V.6q''!t+?VYB1djM:4>9/l2a/?H3C>V^4q0V.6q''(!+?VJL6UEsG4>9/l3BeQJ1dskm4q0V.6q''C*+?VM80L@r44>9/l69ZMS2).QT4q0V.6q''I,+?VM@1e''Y<4>9/l6p;_U2DI!H4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=477BB_4>noM76V/C0LS?!4s2sG0fD!T%6Q=47PI"K4>o&Q3Bdm70LSAb4s2sG3CQ4t%6Q=47P[.M4>oY`0g6%/0LSAd4s2sH2*j)`%6Q=47Pm:O4?#/X2EhR40LSAf4s2sH2FKGe%6Q=47Q*FQ4?#Sd2a.[50LSAh4s2sI1-mc]%6Q=47Q<RS4?,/b69Yi@0LSAj4s2sJ1I3r`%6Q=47R93\4?58Y69Yi@0LSAs4s2sF2)m9R%6Q=47RK?^4>fGk1-Q.00LSAu4s2sF2`3<R%6Q=47R]K`4?#Vo1Hl710LSB"4s2sH7RB+!%6Q=50JG[54?5,_2*MI30L[ZM4s2sF0JYUO%6Q=50JYg74>eo]69Yi@0L[ZO4s2sF6SpYa%6Q=50Jks94>fMq3''Id60L[ZQ4s2sG1.3l]%6Q=50K)*;4>nuR76V/C0L[ZS4s2sG1djVn%6Q=50K;6=4>o#b2a.[50L[ZU4s2sG75?P\%6Q=50L7lF4?"r[6TtrA0L[Z^4s2sH3Aj,e%6Q=50LJ#H4?,_s6p;&B0L[Z`4s2sI7574p%6Q=50L\/J4?5)S6p;&B0L[Zb4s2sJ1,LjP%6Q=50ebd64?5/d3''Id60L[]N4s2sE75mY!%6Q=50etp84>]Jr2EhR40L[]P4s2sF0K(dP%6Q=50f2'':4>fMr76V/C0L[]R4s2sF77KR,%6Q=50fD3<4>noJ2EhR40L[]T4s2sG3Ai`Z%6Q=50fV?>4?,&S0g6%/0L[]V4s2sI2Dm<T%6Q=50gRuG4?,bd2a.[50L[]_4s2sJ1H.0T%6Q=50ge,I4?5\_69Yi@0L[]a4s2sE75[Lt%6Q=50h"8K4>efQ0g6%/0L[]c4s2sG2`EES%6Q=51,(m74>o/U0Koq.0L[`O4s2sF0ebUO%6Q=51,;$94>elR6p;&B0L[`Q4s2sF1-%*R%6Q=51,M0;4>oJk1-Q.00L[`S4s2sH2aTkq%6Q=51,_<=4?5/O0Koq.0L[`U4s2sJ778sr%6Q=51,qH?4>el[69Yi@0L[`W4s2sG0JZ*]%6Q=51-n)H4?,f"1-Q.00L[``4s2sF0JkaQ%6Q=51.+5J4>no[3Bdm70L[`b4s2sG1IX\q%6Q=51.=AL4>o#`5s>`?0L[`d4s2sG3&<oc%6Q=51GD!84>oJb1d2@20L[cP4s2sG7RJjn%6Q=51GV-:4?,&T3''Id60L[cR4s2sI3C,A`%6Q=51Gh9<4?5;[1d2@20L[cT4s2sF3&!3R%6Q=51H%E>4?##S6p;&B0L[cV4s2sH1-n8k%6Q=51H7Q@4?#,O1d2@20L[cX4s2sH6oR+i%6Q=51I42I4?#\e6p;&B0L[ca4s2sI0L7]_%6Q=51IF>K4?,>\69Yi@0L[cc4s2sI68p_b%6Q=51IXJM4?5)R1Hl710L[ce4s2sJ6o?\_%6Q=51b_*94>nrS3Bdm70L[fQ4s2sG6T7:p%6Q=51bq6;4>oYd1d2@20L[fS4s2sH6o?Y^%6Q=51c.B=4?#_c5s>`?0L[fU4s2sI5r(5[%6Q=51c@N?4>eiP6TtrA0L[fW4s2sG0f20[%6Q=51cRZA4?#Se6p;&B0L[fY4s2sI68:Ja%6Q=51dO;J4?5/S2a.[50L[fb4s2sJ1H7`c%6Q=51daGL4>]Jm6TtrA0L[fd4s2sE7RT$r%6Q=51dsSN4>efI76V/C0L[ff4s2sF0LA2l%6Q=52)%3:4>eiI2EhR40L[iR4s2sF1.*c[%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>92]1-QgC2)7Ne4q0V.75Zkb+?VM;2b#t?4>92]1d3$E2)dHJ4q0V.75Zqd+?VM@3&<`-4>92]2Ei6G2+9Mk4q0V.75["f+?VMN3AE],4>92]3''JHI2DI-K4q0V.75[(h+?VP:5smgF4>92]5s?DR2Ddci4q0V.75[Cq+?VP>2FBY;4>92]6TuVT2E!H_4q0V.75[Is+?VP?6:*jF4>92]76VhV2E"#]4q0V.75[Ou+?VPA3B'',24>92^0KpUA2FKM`4q0V.75cka+?VS:3&Nl/4>92^1-QgC2_[]U4q0V.75cqc+?VS>3CZ1A4>92^1d3$E2`*fX4q0V.75d"e+?VS>6U<mF4>92^2Ei6G2`3u`4q0V.75d(g+?VSB2FBY;4>92^3''JHI2`O5n4q0V.75d.i+?VSK6q0?L4>92^5s?DR2aKnk4q0V.75dIr+?VSN1c7H+4>92^6TuVT2afY^4q0V.75dOt+?VV;0f;-(4>92^76VhV3&!-X4q0V.75dV!+?VV<0g\&54>92_0KpUA3&<QQ4q0V.75lqb+?VVM2E!`.4>92_1-QgC3(>V[4q0V.75m"d+?VY<0f;-(4>92_1d3$E3AX)Y4q0V.75m(f+?VYD0Jbm%4>92_2Ei6G3B/fS4q0V.75m.h+?VYM2*jD84>92_3''JHI3C6.o4q0V.75m4j+?VJM6S^h74>92_5s?DR2)R6I4q0V.75mOs+?VM@1I4264>92_6TuVT2*!NK4q0V.75mUu+?VMJ2D[N+4>92_76VhV2+''2Y4q0V.75m\"+?VP969%.<4>92`0KpUA2DR!B4q0V.76!"c+?VPA1bq6(4>92`1-QgC2E4#W4q0V.76!(e+?VPA76!I?4>92`1d3$E2FTnt4q0V.76!.g+?VS?1daG94>92`2Ei6G2`<TS4q0V.76!4i+?VSB6Ua0J4>92`3''JHI2aK5f4q0V.76!:k+?VSM7RB9J4>92`5s?DR2aoVk4q0V.76!Ut+?VSO2a]b<4>92`6TuVT3''f5X4q0V.76!\!+?VVL5qtP44>92`76VhV3(#Jk4q0V.76!b#+?VYB3(6"?4>92a0KpUA3CH4k4q0V.76*(d+?VM;75R1;4>92a1-QgC2)@Z]4q0V.76*.f+?VM<1dO;74>92a1d3$E2)I6H4q0V.76*4h+?VM>7R93I4>92a2Ei6G2*"&Z4q0V.76*:j+?VMJ2DdT,4>92a3''JHI2+''/d4q0V.76*@l+?VMM5sdaE4>92a5s?DR2DR`\4q0V.76*[u+?VP>1H.K,4>92a6TuVT2Dm<K4q0V.76*b"+?VP>2_mQ+4>92a76VhV2E!iT4q0V.76*h$+?VP@5t4$I4>92i0KpUA2E=,Z4q0V.76rXl+?VPL6:=!H4>92i1-QgC2`4&l4q0V.76r^n+?VS@3A<W+4>92i1d3$E2`EZa4q0V.76rdp+?VSK1IaP;4>92i2Ei6G2b#ea4q0V.76rjr+?VV;0Jbm%4>92i3''JHI3&!WQ4q0V.76rpt+?VV<3(?(@4>92i5s?DR3&3o\4q0V.76s7(+?VV=7RTEL4>92i6TuVT3&=#X4q0V.76s=*+?VV@6SUb64>92i76VhV3&i]K4q0V.76sC,+?VVC68Uk84>92j0KpUA3''fhf4q0V.77&^m+?VVQ3C>t>4>92j1-QgC3AWEZ4q0V.77&do+?VYB6T71<4>92j1d3$E3B/oU4q0V.77&jq+?VYM6o[@>ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0L\;d4s2sJ7PQ\_%6Q=568q(N4>era6p;&B0L\;f4s2sG2*!ue%6Q=569.4P4>o)e1-Q.00L\;o4s2sG3&jAk%6Q=56:*jY4?#P_0Koq.0L\;q4s2sI6SgYb%6Q=56:=![4?5ef0Koq.0L\;s4s2sF2F]Aa%6Q=56:O-]4>f&U1d2@20L\>_4s2sF6npD[%6Q=56SUbI4>o)O2EhR40L\>a4s2sG3''o>`%6Q=56SgnK4>o/d6p;&B0L\>c4s2sG77K^0%6Q=56T%%M4?#)P3''Id60L\>e4s2sI3&sDk%6Q=56T71O4?5_s1d2@20L\>g4s2sG6T-nf%6Q=56TI=Q4?5\n3''Id60L\>p4s2sE7QEe!%6Q=56UEsZ4>eiO6TtrA0L\>r4s2sF0fLgN%6Q=56UX*\4>elS7Qq8D0L\>t4s2sF68^S`%6Q=56Uj6^4>fMq2*MI30L\A`4s2sG0JtOJ%6Q=56npkJ4>nlO6p;&B0L\Ab4s2sG1.Eu^%6Q=56o."L4>nu]2a.[50L\Ad4s2sG2)@Q_%6Q=56o@.N4?#&a3Bdm70L\Af4s2sH5rV(n%6Q=56oR:P4?,5b1Hl710L\Ah4s2sI6U<Ik%6Q=56odFR4?5>[7Qq8D0L\Aq4s2sE75H\_%6Q=56pa''[4>fGo0g6%/0L\As4s2sG1,([O%6Q=56ps3]4>o,Y6TtrA0L\Au4s2sH1dj\p%6Q=56q0?_4?#8g0g6%/0L\Da4s2sI1IO#_%6Q=5756tK4?,Vd2a.[50L\Dc4s2sI5sd=j%6Q=575I+M4?,_t3''Id60L\De4s2sJ0Jl3^%6Q=575[7O4?52S69Yi@0L\Dg4s2sJ3&ENW%6Q=575mCQ4>fPq1Hl710L\Di4s2sG3CPnk%6Q=576*OS4?,2f7Qq8D0L\Dr4s2sJ0L\An%6Q=577''0\4>eiZ0Koq.0L\Dt4s2sF69."h%6Q=5779<^4>fGo6TtrA0L\E!4s2sG0fCgO%6Q=577KH`4>o/g5s>`?0L\Gb4s2sG68M%o%6Q=57PR(L4?"rN6TtrA0L\Gd4s2sH1bqNa%6Q=57Pd4N4?#)b3''Id60L\Gf4s2sH6:!=i%6Q=57Q!@P4?#_e0Koq.0L\Gh4s2sI1IF#`%6Q=57Q3LR4?,>g0Koq.0L\Gj4s2sI6U=%&%6Q=57QEXT4?58e6TtrA0L\Gs4s2sJ3ANQX%6Q=57RB9]4>elL76V/C0L\Gu4s2sG0Ju6^%6Q=57RTE_4>nr`6TtrA0L\H"4s2sJ0JG7G%6Q=57RfQa4>]Me5s>`?0Ld`M4s2sF0f1mS%6Q=60JPa64>eoM0g6%/0Ld`O4s2sF3(,bj%6Q=60Jbm84>fPr1Hl710Ld`Q4s2sG2FT;`%6Q=60Ju$:4>oS`3''Id60Ld`S4s2sH0KDE_%6Q=60K20<4?##_1-Q.00Ld`U4s2sH1IO,b%6Q=60KD<>4?#Sa0Koq.0Ld`^4s2sI0Ldc\%6Q=60L@rG4?55U69Yi@0Ld``4s2sF1H%-T%6Q=60LS)I4>nuU69Yi@0Ld`b4s2sH7Q*Rs%6Q=60Le5K4>]Ja2EhR40LdcN4s2sF0K:aM%6Q=60ekj74>f)T5s>`?0LdcP4s2sF3(-2!%6Q=60f)!94>nlK5s>`?0LdcR4s2sG0et[O%6Q=60f;-;4>nr_0Koq.0LdcT4s2sG3CGPb%6Q=60fM9=4?5_b0g6%/0LdcV4s2sF69%Fu%6Q=60f_E?4?#Y_3''Id_DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b7PR1m+?VV;68:Y54>95Z69ZMS3(>bp4q0V.7PR7o+?VJL5r:b74>95Z6p;_U2)%EQ4q0V.7PR=q+?VM<5smgF4>95Z7QqqW2)RZe4q0V.7PZY]+?VMJ0LJ#54>95[0g6^B2+0_a4q0V.7PZ__+?VML75mC>4>95[1HlpD2Dm6U4q0V.7PZea+?VP>1dsS;4>95[2*N-F2E3HH4q0V.7PZkc+?VPJ1dXA84>95[2a/?H2_mfV4q0V.7PZqe+?VS@3(6"?4>95[3BeQJ2`F/p4q0V.7P[7n+?VSN2+9\<4>95[69ZMS2b$7s4q0V.7P[=p+?VV<5qkJ34>95[6p;_U3&NN]4q0V.7P[Cr+?VVA6q0?L4>95[7QqqW3(>SX4q0V.7Pc_^+?VVQ1dsS;4>95\0g6^B3A<fd4q0V.7Pce`+?VYE0Jbm%4>95\1HlpD3C,M[4q0V.7Pckb+?VYN5sdaE4>95\2*N-F1ds,Y4q0V.7Pcqd+?VJL1c7H+4>95\2a/?H1ds8i4q0V.7Pd"f+?VJL6T71<4>95\3BeQJ1e''qh4q0V.7Pd=o+?VM92`Eo04>95\69ZMS2)7Wi4q0V.7PdCq+?VM;1b_*&4>95\6p;_U2)@ZW4q0V.7PdIs+?VM;75[7<4>95\7QqqW2)I9]4q0V.7Ple_+?VM>0f2''''4>95]0g6^B2)dHO4q0V.7Plka+?VM?5r(V54>95]1HlpD2*sYh4q0V.7Plqc+?VML3&a#14>95]2*N-F2+9ne4q0V.7Pm"e+?VP:7RK?K4>95]2a/?H2DRZ[4q0V.7Pm(g+?VP>2).9(4>95]3BeQJ2E*r^4q0V.7PmCp+?VP@76*O@4>95]69ZMS2E=,k4q0V.7PmIr+?VPK2)%3''4>95]6p;_U2F9bh4q0V.7PmOt+?VPK7706J4>95]7QqqW2FB;V4q0V.7Puk`+?VPN3CH%?4>95^0g6^B2_[0M4q0V.7Puqb+?VS<6oR:=4>95^1HlpD2`!HP4q0V.7Q!"d+?VS>0Jbm%4>95^2*N-F2`F&m4q0V.7Q!(f+?VSA76*O@4>95^2a/?H2aKA\4q0V.7Q!.h+?VSN2b#t?4>95^3BeQJ3&!$H4q0V.7Q!Iq+?VV<7RK?K4>95^69ZMS3&30F4q0V.7Q!Os+?VV=0L7l34>95^6p;_U3&3lk4q0V.7Q!Uu+?VVC2DRH*4>95^7QqqW3''oDW4q0V.7Q)qa+?VVN7RK?K4>95_0g6^B3(61g4q0V.7Q*"c+?VY<0ekj$4>95_1HlpD3A<cS4q0V.7Q*(e+?VY>2DdT,4>95_2*N-F3ANoZ4q0V.7Q*.g+?VYE6o$q84>95_2a/?H3C,JZ4q0V.7Q*4i+?VYO76*O@4>95_3BeQJ3CH7o4q0V.7Q*Or+?VYR3C>t>4>95_69ZMS2)d3U4q0V.7Q*Ut+?VMK1b_*&4>95_6p;_U3&<of4q0V.7Q*\!+?VYC5qkJ34>95_7QqqW3B''5j4q0V.7Q3"b+?VYQ68Uk84>95`0g6^B2)I$S4q0V.7Q3(d+?VSK3B0234>95`1HlpD2b$(i4q0V.7Q3.f+?VVC6odF?4>95`2*N-F3(62&4q0V.7Q34h+?VY<756t84>95`2a/?H2)m9D4q0V.7Q3:j+?VMK1cRZ.4>95`3BeQJ2D[?Q4q0V.7Q3Us+?VSK3CZ1A4>95`69ZMS2*sSt4q0V.7Q3[u+?VMN0f)!&4>95`6p;_U2aKA_4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=62aonQ4?#Pl76V/C0Lduj4s2sI1,q]d%6Q=63&!N=4?,bq6TtrA0Le#V4s2sF0JYOM%6Q=63&3Z?4>elM3''Id60Le#X4s2sF1.F5e%6Q=63&EfA4>eoR2a.[50Le#Z4s2sF2_[3T%6Q=63&WrC4>nra1Hl710Le#\4s2sG1H.''Q%6Q=63&j)E4>oM[5s>`?0Le#^4s2sG6piao%6Q=63''f_N4?#2T2a.[50Le#g4s2sF1I3l^%6Q=63(#kP4?#&R2a.[50Le#i4s2sI2)[EX%6Q=63(6"R4?,bg2EhR40Le#k4s2sJ2+0;c%6Q=63A<W>4>o,S5s>`?0Le&W4s2sG5smFl%6Q=63ANc@4>oYf0Koq.0Le&Y4s2sI5rM+p%6Q=63A`oB4?,bs6TtrA0Le&[4s2sJ3Aa&d%6Q=63As&D4>o)V2a.[50Le&]4s2sG68pkf%6Q=63B02F4?,\p1d2@20Le&_4s2sJ68Ltm%6Q=63C,hO4>eo`69Yi@0Le&h4s2sF2_mcb%6Q=63C>tQ4>f,U76V/C0Le&j4s2sG1IF&a%6Q=63CQ+S4>o2h69Yi@0Le&l4s2sH1IXSn%6Q=65qkJF4?#5V2*MI30Le>_4s2sH5sdk$%6Q=65r(VH4?#Pn2*MI30Le>a4s2sH6UjL.%6Q=65r:bJ4?,/V2*MI30Le>c4s2sI3B0Jl%6Q=65rLnL4?,_f1Hl710Le>e4s2sJ0JbRM%6Q=65r_%N4?58b3''Id60Le>g4s2sF1.FSo%6Q=65s[[W4>f&S2a.[50Le>p4s2sH2)I6U%6Q=65smgY4?#Sb0Koq.0Le>r4s2sI1IFMn%6Q=65t*s[4?5/O76V/C0Le>t4s2sG5rCVc%6Q=6681SG4>eiM69Yi@0LeA`4s2sF1,M<]%6Q=668C_I4>elR2a.[50LeAb4s2sG1,26^%6Q=668UkK4>o/e3''Id60LeAd4s2sG3B&fZ%6Q=668h"M4?5;[3Bdm70LeAf4s2sF0LI]]%6Q=669%.O4>el[1d2@20LeAh4s2sF1.=#`%6Q=66:!dX4>no]1Hl710LeAq4s2sG2*j&_%6Q=66:3pZ4>o/T3Bdm70LeAs4s2sG3CZJ%%6Q=66:F''\4?#)U76V/C0LeAu4s2sH68V"m%6Q=66SL\H4?,)_3Bdm70LeDa4s2sI1IXVo%6Q=66S^hJ4?,>f1-Q.00LeDc4s2sI68LVc%6Q=66SptL4?,eu0g6%/0LeDe4s2sJ3A``[%6Q=66T.+N4>]Jo5s>`?0LeDg4s2sF3B9#^%6Q=66T@7P4>o#a1-Q.00LeDi4s2sG2DHpM%6Q=66U<mY4>oJb76V/C0LeDr4s2sH1c$sP%6Q=66UO$[4?#8[0g6%/0LeDt4s2sH3C6+t%6Q=66Ua0]4?,)^3Bdm70LeGb4s2sI3Aj8i%6Q=66o$qK4?52Q2EhR40LeGd4s2sE7PI.m%6Q=66o7(M4>eo^5s>`?0LeGf4s2sG0JYLL%6Q=66oI4O4>nrR0g6%/0LeGh4s2sG6T6ba%6Q=66o[@Q4?#Y_5s>`?0LeGj4s2sH6oHqe%6Q=66pX!Z4>]Je3''Id60LeGs4s2sF0fCdN%6Q=66pj-\4?#2e6TtrA0LeGu4s2sI0L8/l%6Q=66q''9^4>]M]0g6%/0LeH"4s2sE7PI7p%6Q=675-nJ4>eiP2EhR40LeJc4s2sF0fUjN%6Q=675@%L4>eua6TtrA0LeJe4s2sF2E!NY%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>95n1d3$E2)d<X4q0V.7R]0u+?VM?7R93I4>95n2Ei6G2)dul4q0V.7R]7"+?VMA0f2''''4>95n3''JHI2*!KP4q0V.7R]=$+?VMA3AWi.4>95n5s?DR2*sYe4q0V.7R]X-+?VMK3A<W+4>95n6TuVT2+0,e4q0V.7R]^/+?VML7PR(94>95n76VhV2+9Gm4q0V.7R]d1+?VMN6UO$H4>95o0KpUA2DR6G4q0V.7Rf*r+?VP>6oR:=4>95o1-QgC2DmoZ4q0V.7Rf7!+?VP@2+9\<4>95o2Ei6G2E4&j4q0V.7Rf=#+?VPA6Spt94>95o3''JHI2F02i4q0V.7RfC%+?VPK1I4264>95o5s?DR2FB5U4q0V.7Rf^.+?VPL2afh=4>95o6TuVT2FBGZ4q0V.7Rfd0+?VPM6T71<4>95o76VhV2`!HR4q0V.7Rfj2+?VS>1,_<*4>AND0KpUA2`*9U4q0V/0JG4F+?VS>3&3Z,4>AND1-QgC2`*fV4q0V/0JG:H+?VS?2`Nu14>AND1d3$E2`3N`4q0V/0JG@J+?VSB3&*T+4>AND2Ei6G2`O5q4q0V/0JGFL+?VSC1bh0''4>AND5s?DR2`Wf_4q0V/0JGgW+?VSL3Aiu04>AND6TuVT2af>R4q0V/0JGmY+?VSN6:!dE4>AND76VhV2b#bd4q0V/0JGs[+?VV;0K)*(4>ANE0KpUA3&!*U4q0V/0JP:G+?VV;3(#k=4>ANE1-QgC3''f8Y4q0V/0JP@I+?VVM1e''Y<4>ANE1d3$E3(#M^4q0V/0JPFK+?VVO2`Eo04>ANE2Ei6G3AWEF4q0V/0JPLM+?VY?1,M0(4>ANE3''JHI3B0G_4q0V/0JPRO+?VYE2).9(4>ANE6TuVT3C,P\4q0V/0JPsZ+?VYQ3ANc-4>ANE76VhV2ag#!4q0V/0JQ$\+?VJM2`<i/4>ANF0KpUA2)I!I4q0V/0JY@H+?VP;77BBL4>ANF1-QgC2E3QN4q0V/0JYFJ+?VY=6npk74>ANF1d3$E2)RZd4q0V/0JYLL+?VM91I4264>ANF2Ei6G2*ira4q0V/0JYRN+?VP:75d==4>ANF3''JHI2DRWh4q0V/0JYXP+?VP;7RfQN4>ANF5s?DR3A<`T4q0V/0JYsY+?VVL7R]KM4>ANF6TuVT2E!QR4q0V/0JZ$[+?VS;2)[W-4>ANF76VhV3As;^4q0V/0JZ*]+?VP<1e''Y<4>ANG0KpUA2D[9X4q0V/0JbFI+?VM;2)d].4>ANG1-QgC2E*Tb4q0V/0JbLK+?VPB2D@<(4>ANG1d3$E2FTP\4q0V/0JbRM+?VS?1H.K,4>ANG2Ei6G2af>f4q0V/0JbXO+?VVC2_mQ+4>ANG3''JHI2)[ff4q0V/0Jb^Q+?VMI0fV?+4>ANG5s?DR1ds5W4q0V/0Jc$Z+?VM92E*f/4>ANG6TuVT2*!KQ4q0V/0Jc*\+?VP@7PI"84>ANG76VhV3&!''@4q0V/0Jc0^+?VMA2`!W,4>ANH0KpUA2+9G\4q0V/0JkLJ+?VP=3C,h<4>ANH1-QgC2`X5k4q0V/0JkRL+?VMN7Q!@=4>ANH1d3$E2D@$V4q0V/0JkXN+?VP;6T@7=4>ANH2Ei6G2D[9Y4q0V/0Jk^P+?VMJ75mC>4>ANH3''JHI2*s\i4q0V/0JkdR+?VM:5s[[D4>ANH5s?DR2*!TP4q0V/0Jl*[+?VMN1-%N-4>ANH6TuVT2D?j@4q0V/0Jl0]+?VS>2*!i0ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0ebFQ4s2sJ3CGSc%6Q@!1e''YO4>oYr1Hl710ebI=4s2sI0g\>n%6Q@!2).9;4?,es1-Q.00ebI?4s2sG0Ldc\%6Q@!2)@E=4?,&R2EhR40ebIA4s2sF6Sh1q%6Q@!2)RQ?4>fDn3Bdm70ebIC4s2sI5r(;]%6Q@!2)d]A4>o,W69Yi@0ebIE4s2sH6npAZ%6Q@!2*!iC4?,#a6p;&B0ebIN4s2sF6Sh(n%6Q@!2*sJL4>oPq2*MI30ebIP4s2sF1G_Ka%6Q@!2+0VN4>oVp5s>`?0ebIR4s2sF3AEf`%6Q@!2+BbP4?,,Q2EhR40ebL>4s2sE75Hqf%6Q@!2DIB<4>]Jn2EhR40ebL@4s2sE7Pm"e%6Q@!2D[N>4>eu^76V/C0ebLB4s2sF2_d9U%6Q@!2DmZ@4>f)c2a.[50ebLD4s2sF7Q!(f%6Q@!2E*fB4>o&`2a.[50ebLF4s2sG2+9De%6Q@!2E<rD4>oJb0Koq.0ebLO4s2sG6:*On%6Q@!2F9SM4>oVb6p;&B0ebLQ4s2sH2ap+u%6Q@!2FK_O4?#Pp7Qq8D0ebLS4s2sH6SV"n%6Q@!2F]kQ4?#Yr76V/C0ebO?4s2sI2FBep%6Q@!2_dK=4?,;\1-Q.00ebOA4s2sJ0f(RK%6Q@!2`!W?4?52T69Yi@0ebOC4s2sG1dXMm%6Q@!2`3cA4>oYq76V/C0ebOE4s2sH1H.T`%6Q@!2`EoC4?#,a3''Id60ebOG4s2sJ0Jt[N%6Q@!2`X&E4>euR2EhR40ebOP4s2sF2`*od%6Q@!2aT\N4>no\5s>`?0ebOR4s2sG1dj/a%6Q@!2afhP4>o)b2a.[50ebOT4s2sG6q&go%6Q@!2b#tR4>oVc69Yi@0ebR@4s2sG7Q*Xu%6Q@!3&*T>4>oYq3Bdm70ebRB4s2sH2+B8`%6Q@!3&<`@4?,#O1Hl710ebRD4s2sI0g\8l%6Q@!3&NlB4?,2T0g6%/0ebRF4s2sI3B/fY%6Q@!3&a#D4?,Vo2a.[50ebRH4s2sI68_%m%6Q@!3&s/F4?52P7Qq8D0ebRQ4s2sG6THqd%6Q@!3''oeO4?#,T1Hl710ebRS4s2sH68^S`%6Q@!3(,qQ4?,b`7Qq8D0ebRU4s2sJ0Ju6^%6Q@!3(?(S4>euN0Koq.0ebUA4s2sF3&!*O%6Q@!3AE]?4>f)U3''Id60ebUC4s2sF75cnb%6Q@!3AWiA4>nrK2a.[50ebUE4s2sG1c[ug%6Q@!3AiuC4>o/f0Koq.0ebUG4s2sH2)dEW%6Q@!3B'',E4?#Vq2EhR40ebUI4s2sI2aT;a%6Q@!3B98G4?5i!3''Id60ebUR4s2sE77B!r%6Q@!3C5nP4>f&W3''Id60ebUT4s2sF2`=)g%6Q@!3CH%R4>f,S2a.[50ebUV4s2sF6SLnl%6Q@!3CZ1T4>fJm0g6%/0ebmI4s2sF75Hhc%6Q@!5qtPG4>fSf2*MI30ebmK4s2sG1,CaN%6Q@!5r1\I4>o#b0g6%/0ebmM4s2sH1I<l]%6Q@!5rChK4?,&b5s>`?0ebmO4s2sI3&j5g%6Q@!5rUtM4?,\p3''Id60ebmQ4s2sJ2E3ud%6Q@!5rh+O4?5hu69Yi@0ebmZ4s2sF69$hd%6Q@!5sdaX4>fSp2a.[50ebm\4s2sG0L@QZ%6Q@!5t!mZ4>efI1-Q.00ebm^4s2sF1,(CG%6Q@!5t4$\4>elM0Koq.0ebpJ4s2sF2_d3S%6Q@!68:YH4>f)S2*MI\DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c0L@NY+?VM@2)d].4>ANV1HlpD2+''&d4q0V/0L@T[+?VMK2D@<(4>ANV2*N-F2+''hk4q0V/0L@Z]+?VML3''oe<4>ANV2a/?H2+9eh4q0V/0L@`_+?VMN3ANc-4>ANV3BeQJ2D@Hb4q0V/0LA&h+?VP<0ekj$4>ANV69ZMS2D[<Q4q0V/0LA,j+?VP=0fM9*4>ANV6p;_U2E3NL4q0V/0LA2l+?VPA7QEXA4>ANV7QqqW2F0\c4q0V/0LINX+?VPM6o[@>4>ANW0g6^B2FTAU4q0V/0LITZ+?VPN6o7(:4>ANW1HlpD2F^+l4q0V/0LIZ\+?VS;7R]KM4>ANW2*N-F2`=&k4q0V/0LI`^+?VSA2`X&24>ANW2a/?H2`X2Z4q0V/0LIf`+?VSK1I=874>ANW3BeQJ3&E<G4q0V/0LJ,i+?VVD5rh+<4>ANW69ZMS3($,&4q0V/0LJ2k+?VVO7Pd4;4>ANW6p;_U3(5Y`4q0V/0LJ8m+?VY<0Jbm%4>ANW7QqqW3A<0E4q0V/0LRTY+?VY<2)@E*4>ANX0g6^B3A<oj4q0V/0LRZ[+?VY?1djM:4>ANX1HlpD3ArfS4q0V/0LR`]+?VYC6pj-I4>ANX2*N-F2F9ee4q0V/0LRf_+?VS:0K)*(4>ANX2a/?H2_m6M4q0V/0LRla+?VS<5r(V54>ANX3BeQJ2`!?O4q0V/0LS2j+?VSA2D[N+4>ANX69ZMS2`X2o4q0V/0LS8l+?VSL75R1;4>ANX6p;_U2ao_n4q0V/0LS>n+?VVM3&!N*4>ANX7QqqW2)ml^4q0V/0L[ZZ+?VP96T71<4>ANY0g6^B2DmBN4q0V/0L[`\+?VP>7RTEL4>ANY1HlpD2E!lj4q0V/0L[f^+?VPL3(#k=4>ANY2*N-F2_d$U4q0V/0L[l`+?VS;6TI=>4>ANY2a/?H3(#Ph4q0V/0L[rb+?VYD0f)!&4>ANY3BeQJ1ds;j4q0V/0L\8k+?VSK3&*T+4>ANY69ZMS1dsf#4q0V/0L\>m+?VM95smgF4>ANY6p;_U2).Hd4q0V/0L\Do+?VM:6o@.;4>ANY7QqqW2)I!S4q0V/0Ld`[+?VP:5rUt:4>ANZ0g6^B2E*QL4q0V/0Ldf]+?VPA2)%3''4>ANZ1HlpD2E4)o4q0V/0Ldl_+?VPM0h"884>ANZ2*N-F2F]Vm4q0V/0Ldra+?VS?6:3pG4>ANZ2a/?H2`F&Z4q0V/0Le#c+?VSK75[7<4>ANZ3BeQJ3&!fY4q0V/0Le>l+?VV?2D[N+4>ANZ69ZMS3ANQO4q0V/0LeDn+?VM92+''P:4>ANZ6p;_U2DmKR4q0V/0LeJp+?VP@2+''P:4>ANZ7QqqW2E*WP4q0V/0eb:F+?VS?6o[@>4>AQE0g6^B2aKei4q0V/0eb@H+?VV>2`!W,4>AQE1HlpD3(#M\4q0V/0ebFJ+?VY<0fM9*4>AQE2*N-F3B/c^4q0V/0ebLL+?VMK2F]k>4>AQE2a/?H3&*cS4q0V/0ebRN+?VV=3C,h<4>AQE3BeQJ3A<9E4q0V/0ebmW+?VY<2F]k>4>AQE69ZMS3AN9V4q0V/0ebsY+?VMN3B'',24>AQE6p;_U2+0Gm4q0V/0ec$[+?VPJ2*!i04>AQE7QqqW2_dZZ4q0V/0ek@G+?VS@2aT\;4>AQF0g6^B2aT>]4q0V/0ekFI+?VV@75R1;4>AQF1HlpD3''o;U4q0V/0ekLK+?VY=1,hB+4>AQF2*N-F3C,GT4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@"0fD3<4>euU2a.[50ekCA4s2sG0h+&b%6Q@"0fV?>4?#/V3Bdm70ekCC4s2sH7Q<7h%6Q@"0gRuG4?,5T7Qq8D0ekCL4s2sI2aTeo%6Q@"0ge,I4?,;i3''Id60ekCN4s2sJ0K;Nc%6Q@"0h"8K4>oS^69Yi@0ekCP4s2sH0LRob%6Q@"1,(m74?#&a76V/C0ekF<4s2sH6oHb`%6Q@"1,;$94?,/R6p;&B0ekF>4s2sJ0fD<]%6Q@"1,M0;4?5Dk0g6%/0ekF@4s2sE76!%d%6Q@"1,_<=4>eoR2*MI30ekFB4s2sG6815[%6Q@"1,qH?4>oM\1-Q.00ekFD4s2sH0Jc-]%6Q@"1-n)H4?##M69Yi@0ekFM4s2sI2DRZa%6Q@"1.+5J4?5hb76V/C0ekFO4s2sF1,M?^%6Q@"1.=AL4?,er1Hl710ekFQ4s2sF6o?Y^%6Q@"1GD!84>o#b2*MI30ekI=4s2sG2)7N_%6Q@"1GV-:4>oM\2EhR40ekI?4s2sG7R]X-%6Q@"1Gh9<4?#Va1Hl710ekIA4s2sH76*_!%6Q@"1H%E>4?,2c6p;&B0ekIC4s2sI3Ar]X%6Q@"1H7Q@4?,>f6p;&B0ekIE4s2sG1.+&c%6Q@"1I42I4?,&`3''Id60ekIN4s2sI3&*ld%6Q@"1IF>K4>fPp5s>`?0ekIP4s2sG2_d6T%6Q@"1IXJM4>oSc5s>`?0ekIR4s2sH1.FVp%6Q@"1b_*94?#)N2*MI30ekL>4s2sH1c@fe%6Q@"1bq6;4?,8Z1-Q.00ekL@4s2sJ0LS>n%6Q@"1c.B=4>]Me2EhR40ekLB4s2sF6nh"m%6Q@"1c@N?4>fSo0Koq.0ekLD4s2sI1b_3Z%6Q@"1cRZA4>ei[2a.[50ekLF4s2sG1I3]Y%6Q@"1dO;J4?#,U2*MI30ekLO4s2sE76s@+%6Q@"1daGL4>efH2EhR40ekLQ4s2sF0fD$U%6Q@"1dsSN4>ei\3Bdm70ekLS4s2sG3&iWV%6Q@"2)%3:4>oJ[0g6%/0ekO?4s2sH6U=.)%6Q@"2)7?<4?#Vo0g6%/0ekOA4s2sH6U`pt%6Q@"2)IK>4?,)S7Qq8D0ekOC4s2sI5t!Il%6Q@"2)[W@4?,eb69Yi@0ekOE4s2sJ0geDo%6Q@"2)mcB4>]Mo2EhR40ekOG4s2sF0f(aP%6Q@"2*jDK4>el`2*MI30ekOP4s2sF1c-sO%6Q@"2+''PM4>fPr6TtrA0ekOR4s2sG0fDHa%6Q@"2+9\O4>nrN76V/C0ekOT4s2sG2+''5b%6Q@"2D@<;4>oJn5s>`?0ekR@4s2sG7Rfg1%6Q@"2DRH=4?#8U5s>`?0ekRB4s2sI2+0eq%6Q@"2DdT?4?,;U1Hl710ekRD4s2sJ2*jVo%6Q@"2E!`A4?5\c1-Q.00ekRF4s2sJ5rM"m%6Q@"2E3lC4?5hj2a.[50ekRH4s2sJ770L-%6Q@"2F0ML4>elS69Yi@0ekRQ4s2sG2FBAd%6Q@"2FBYN4>oMb2a.[50ekRS4s2sH0JPsZ%6Q@"2FTeP4?#8U69Yi@0ekRU4s2sI7Q*"c%6Q@"2_[E<4?5>W1-Q.00ekUA4s2sG0f^pO%6Q@"2_mQ>4>nrK0Koq.0ekUC4s2sG2)6sO%6Q@"2`*]@4>oYa1Hl710ekUE4s2sH0f1mS%6Q@"2`<iB4?#)V3Bdm70ekUG4s2sH6q0!s%6Q@"2`NuD4?,#Q7Qq8D0ekUI4s2sI1dshs%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AQL5s?DR3(>Y]4q0V/0fME_+?VY<1,D*''4>AQL6TuVT3AWKX4q0V/0fMKa+?VM96:=!H4>AQL76VhV2)6mF4q0V/0fMQc+?VM:5r1\64>AQM0KpUA2FK5d4q0V/0fUmO+?VS:6T@7=4>AQM1-QgC3&j8\4q0V/0fUsQ+?VMM6TI=>4>AQM1d3$E2DmHL4q0V/0fV$S+?VPK5t*sH4>AQM2Ei6G2F^%h4q0V/0fV*U+?VSM1IXJ:4>AQM3''JHI2`!BM4q0V/0fV0W+?VJL75R1;4>AQM5s?DR1e''8Z4q0V/0fVK`+?VM>7QEXA4>AQM6TuVT2+''\r4q0V/0fVQb+?VML6:!dE4>AQM76VhV2D?jQ4q0V/0fVWd+?VS=68C_64>AQN0KpUA2aT8f4q0V/0f^sP+?VSP3C,h<4>AQN1-QgC2b$/''4q0V/0f_$R+?VV;1c@N,4>AQN1d3$E3A<0V4q0V/0f_*T+?VY>1Gh9)4>AQN2Ei6G3As>b4q0V/0f_0V+?VYC1cRZ.4>AQN3''JHI3B/`Q4q0V/0f_6X+?VYR2DIB)4>AQN5s?DR1e''Gk4q0V/0f_Qa+?VPO5rUt:4>AQN6TuVT2`X/m4q0V/0f_Wc+?VY=68Uk84>AQN76VhV3As2_4q0V/0f_]e+?VM:6q''9K4>AQV0KpUA2DdBQ4q0V/0gRNX+?VP=6Spt94>AQV1-QgC2F0_e4q0V/0gRTZ+?VPO2+9\<4>AQV1d3$E2_ZsG4q0V/0gRZ\+?VS<0ebd#4>AQV2Ei6G2`=)`4q0V/0gR`^+?VV;0JPa#4>AQV3''JHI3&WHK4q0V/0gRf`+?VVA2+''P:4>AQV5s?DR3(-2)4q0V/0gS,i+?VVQ0Ju$''4>AQV6TuVT3B&`L4q0V/0gS2k+?VYN2F]k>4>AQV76VhV3CH>&4q0V/0gS8m+?VYQ2`3c.4>AQW0KpUA2`Nca4q0V/0g[TY+?VSC2b#t?4>AQW1-QgC2afqc4q0V/0g[Z[+?VV>6TI=>4>AQW1d3$E3AW?G4q0V/0g[`]+?VYQ2b#t?4>AQW2Ei6G3CPqa4q0V/0g[f_+?VVL6oI4<4>AQW3''JHI2)mun4q0V/0g[la+?VMN0Jks&4>AQW5s?DR2E*BM4q0V/0g\2j+?VS:1,hB+4>AQW6TuVT2`*lk4q0V/0g\8l+?VSM2D@<(4>AQW76VhV3&!9[4q0V/0g\>n+?VM91,1s%4>AQX0KpUA2_[!H4q0V/0gdZZ+?VS<2DRH*4>AQX1-QgC2`O/j4q0V/0gd`\+?VVN6S^h74>AQX1d3$E3($)"4q0V/0gdf^+?VVN7Pm:<4>AQX2Ei6G3As>c4q0V/0gdl`+?VJL3&Wr04>AQX3''JHI2)%Ea4q0V/0gdrb+?VMJ77BBL4>AQX5s?DR2+9nk4q0V/0ge8k+?VP>3B9844>AQX6TuVT2_dZg4q0V/0ge>m+?VS@1bq6(4>AQX76VhV2`F#j4q0V/0geDo+?VV;1dO;74>AQY0KpUA3&F)l4q0V/0gm`[+?VY<2a]b<4>AQY1-QgC3C5J[4q0V/0gmf]+?VYR3(,q>4>AQY1d3$E2)mu`4q0V/0gml_+?VMI1bh0''4>AQY2Ei6G2+''8W4q0V/0gmra+?VPJ0f)!&4>AQY3''JHI2FKr!4q0V/0gn#c+?VPO0Le584>AQY5s?DR2`<HY4q0V/0gn>l+?VSN1.FG:4>AQY6TuVT2aoM]4q0V/0gnDn+?VV@0h"88ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0el''b4s2sI3AWWY%6Q@"6q0?_4?52d1d2@20el*N4s2sJ2Dd`a%6Q@"756tK4>elR3Bdm70el*P4s2sG2+02`%6Q@"75I+M4>o,f1Hl710el*R4s2sG3C5Pd%6Q@"75[7O4>oSa0g6%/0el*T4s2sG76*_!%6Q@"75mCQ4?"rJ7Qq8D0el*V4s2sH1b^pR%6Q@"76*OS4?#)T0Koq.0el*_4s2sH2)RBX%6Q@"77''0\4?#/R1d2@20el*a4s2sH3&X)e%6Q@"779<^4?,Y_6TtrA0el*c4s2sJ3&O,g%6Q@"77KH`4>eiO6p;&B0el-O4s2sG1,;9^%6Q@"7PR(L4?5;Y3''Id60el-Q4s2sE7QE@j%6Q@"7Pd4N4>efJ69Yi@0el-S4s2sF6np\c%6Q@"7Q!@P4>oSr5s>`?0el-U4s2sH6p`js%6Q@"7Q3LR4?,ec5s>`?0el-W4s2sF7Q<^u%6Q@"7QEXT4>noN1d2@20el-`4s2sG3&*?U%6Q@"7RB9]4?5;Z2EhR40el-b4s2sF1.3l]%6Q@"7RTE_4?,#S69Yi@0el-d4s2sF0gnAm%6Q@"7RfQa4>ei\6TtrA0etF:4s2sG3Aj5h%6Q@#0JPa64?#P\6TtrA0etF<4s2sH6pa=+%6Q@#0Jbm84?,,d0g6%/0etF>4s2sJ2E*KW%6Q@#0Ju$:4>]Mq5s>`?0etF@4s2sF1,:jR%6Q@#0K20<4>eoT3''Id60etFB4s2sF1b_B_%6Q@#0KD<>4>euM76V/C0etFK4s2sF6T-ec%6Q@#0L@rG4>nlZ2a.[50etFM4s2sG2`*re%6Q@#0LS)I4>o/b3''Id60etFO4s2sG6oICr%6Q@#0Le5K4?##T0g6%/0etI;4s2sH1.F5e%6Q@#0ekj74?#)N2EhR40etI=4s2sH1cR9T%6Q@#0f)!94?#,d1-Q.00etI?4s2sH6T.:q%6Q@#0f;-;4?#_g3Bdm70etIA4s2sH7RB''u%6Q@#0fM9=4?,,V3Bdm70etIC4s2sI3($/!%6Q@#0f_E?4?,;h0g6%/0etIL4s2sJ0ge;l%6Q@#0g\&H4?5,a0Koq.0etIN4s2sJ2FTAb%6Q@#0gn2J4?5_q3Bdm70etIP4s2sF1bhB^%6Q@#0h+>L4>oYf76V/C0etL<4s2sH0gm]Z%6Q@#1,1s84?#)W3''Id60etL>4s2sI2+Bkq%6Q@#1,D*:4?,bq5s>`?0etL@4s2sJ2F0,_%6Q@#1,V6<4?5bd2a.[50etLB4s2sJ76*h$%6Q@#1,hB>4>o,Y2a.[50etLD4s2sG6pj:)%6Q@#1-%N@4?#)Q1Hl710etLM4s2sI0h"&c%6Q@#1."/I4?5>T2EhR40etLO4s2sH3&3ib%6Q@#1.4;K4?#Pn69Yi@0etLQ4s2sH68C5Y%6Q@#1.FGM4?#Vf1-Q.00etO=4s2sG1c@?X%6Q@#1GM''94?#)T5s>`?0etO?4s2sH2+B>b%6Q@#1G_3;4?#5d6TtrA0etOA4s2sH3(5ej%6Q@#1Gq?=4?5Df6TtrA0etOC4s2sJ68^S`%6Q@#1H.K?4?5hs69Yi@0etOE4s2sF6:=7+%6Q@#1H@WA4>fPb2*MI30etON4s2sG7PZY]%6Q@#1I=8J4?,&U6TtrA0etOP4s2sI1I4>k%6Q@#1IODL4?5)T3''Id60etOR4s2sE75-Ya%6Q@#1IaPN4>eoO6p;&B0etR>4s2sF5r(Ga%6Q@#1bh0:4>fMp1-Q.YDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c1,LaM+?VMN1dsS;4>ATJ1HlpD2DI*F4q0V/1,LgO+?VP<1IOD94>ATJ2*N-F2E!HR4q0V/1,LmQ+?VP?7RK?K4>ATJ2a/?H2FU))4q0V/1,LsS+?VPO1."/64>ATJ3BeQJ2_[-G4q0V/1,M9\+?VSA3CQ+@4>ATJ69ZMS3&EBX4q0V/1,M?^+?VV@0f)!&4>ATJ6p;_U3&i]\4q0V/1,ME`+?VVQ0f)!&4>ATJ7QqqW3B8oR4q0V/1,UaL+?VYO1I=874>ATK0g6^B2)R*U4q0V/1,UgN+?VP;69.4=4>ATK1HlpD2E*BX4q0V/1,UmP+?VPL5sdaE4>ATK2*N-F3&<6K4q0V/1,UsR+?VVD2F0M94>ATK2a/?H3B&l_4q0V/1,V$T+?VJL5qtP44>ATK3BeQJ2*!WQ4q0V/1,VE_+?VP@0g\&54>ATK6p;_U2aftf4q0V/1,VKa+?VSP2)IK+4>ATK7QqqW3&3KL4q0V/1,^gM+?VV>1."/64>ATL0g6^B3&<lh4q0V/1,^mO+?VVQ0h"884>ATL1HlpD3A<HR4q0V/1,^sQ+?VM?6UEsG4>ATL2*N-F2*!u`4q0V/1,_$S+?VMI3ANc-4>ATL2a/?H2*s\b4q0V/1,_*U+?VP?1,hB+4>ATL3BeQJ2E*W^4q0V/1,_E^+?VPA3&Nl/4>ATL69ZMS2F9c#4q0V/1,_K`+?VS;2DdT,4>ATL6p;_U2b#_`4q0V/1,_Qb+?VVN68q(;4>ATL7QqqW3($+j4q0V/1,gmN+?VY<3&*T+4>ATM0g6^B3C5P[4q0V/1,gsP+?VV<0K;6*4>ATM1HlpD3(#Yk4q0V/1,h$R+?VYB1daG94>ATM2*N-F3C,JU4q0V/1,h*T+?VYQ5rCh84>ATM2a/?H2*s/i4q0V/1,h0V+?VPL0f)!&4>ATM3BeQJ2`!0T4q0V/1,hK_+?VS@7P[.:4>ATM69ZMS2`=&n4q0V/1,hQa+?VV?0LJ#54>ATM6p;_U2).B_4q0V/1,hWc+?VVD3AWi.4>ATM7QqqW2)-pU4q0V/1,psO+?VM93Aiu04>ATN0g6^B2)7NZ4q0V/1,q$Q+?VPA6TI=>4>ATN1HlpD2FBJ]4q0V/1,q*S+?VSA0Jks&4>ATN2*N-F2`EKG4q0V/1,q0U+?VSN6:O-J4>ATN2a/?H2ag)%4q0V/1,q6W+?VYC2DRH*4>ATN3BeQJ3CQ7l4q0V/1,qQ`+?VPN6T%%:4>ATN69ZMS3&NEF4q0V/1,qWb+?VM95rCh84>ATN6p;_U2)I!T4q0V/1,q]d+?VM<2afh=4>ATN7QqqW2E!6X4q0V/1-%$P+?VP?3CH%?4>ATO0g6^B2E<NO4q0V/1-%*R+?VPN3CZ1A4>ATO1HlpD2`<ul4q0V/1-%0T+?VSA3AE],4>ATO2*N-F3&<9J4q0V/1-%6V+?VV?6S^h74>ATO2a/?H3&`ie4q0V/1-%<X+?VY=2E<r14>ATO3BeQJ3ANTS4q0V/1-%Wa+?VYO7Pm:<4>ATO69ZMS3&ilQ4q0V/1-%]c+?VJM5t*sH4>ATO6p;_U2).*H4q0V/1-%ce+?VM:6q0?L4>ATO7QqqW2*"#^4q0V/1-mTX+?VMM1IOD94>ATW0g6^B2DI''H4q0V/1-m`\+?VP?5t*sH4>ATW2*N-F2E+#X4q0V/1-mf^+?VPJ1,1s%4>ATW2a/?H2F9c!4q0V/1-ml`+?VPK6pa''H4>ATW3BeQJ2_m6[4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@#5s[[W4?##R0g6%/0eu$]4s2sH1c-pN%6Q@#5smgY4?#2T3''Id60eu$_4s2sH2aftr%6Q@#5t*s[4?,#L2a.[50eu$a4s2sI1.">l%6Q@#681SG4?,,N2*MI30eu''M4s2sI681)W%6Q@#68C_I4?,Y_3''Id60eu''O4s2sI6T@Fs%6Q@#68UkK4>o,R3''Id60eu''Q4s2sG6THha%6Q@#68h"M4?##R2a.[50eu''S4s2sH2FU%u%6Q@#69%.O4?#2W2EhR40eu''U4s2sH5r:J`%6Q@#6:!dX4?5eq3Bdm70eu''^4s2sG68q@t%6Q@#6:3pZ4>oPe1-Q.00eu''`4s2sF3AN?R%6Q@#6:F''\4>o,R2EhR40eu''b4s2sI1c[Q[%6Q@#6SL\H4>eoQ7Qq8D0eu*N4s2sF3&rcY%6Q@#6S^hJ4>f,Z3Bdm70eu*P4s2sF779U/%6Q@#6SptL4>nu_7Qq8D0eu*R4s2sG2D[0R%6Q@#6T.+N4>o,W1Hl710eu*T4s2sG75I4n%6Q@#6T@7P4?#&O69Yi@0eu*V4s2sH5t!Xq%6Q@#6U<mY4?,)a2a.[50eu*_4s2sJ1GUpR%6Q@#6UO$[4>el^3Bdm70eu*a4s2sF6q''F+%6Q@#6Ua0]4>no[76V/C0eu*c4s2sG0ge8k%6Q@#6ngeI4>nrK5s>`?0eu-O4s2sG1.*ua%6Q@#6o$qK4>o#^69Yi@0eu-Q4s2sG2+92_%6Q@#6o7(M4>o2W3Bdm70eu-S4s2sG68g_c%6Q@#6oI4O4>oMn69Yi@0eu-U4s2sH0etII%6Q@#6o[@Q4?#&c2a.[50eu-W4s2sH2)Rcc%6Q@#6pX!Z4?#\c2EhR40eu-`4s2sI1,23]%6Q@#6pj-\4?,,N1-Q.00eu-b4s2sI2)[`a%6Q@#6q''9^4?,Vm1Hl710eu-d4s2sI6UF7+%6Q@#75-nJ4?5>U2a.[50eu0P4s2sJ6oHb`%6Q@#75@%L4>f)a3''Id60eu0R4s2sJ779+!%6Q@#75R1N4>efI0g6%/0eu0T4s2sF1,)-\%6Q@#75d=P4>erO69Yi@0eu0V4s2sF2)Icd%6Q@#76!IR4>o&V2a.[50eu0X4s2sG6T6ne%6Q@#7706]4?,#P76V/C0eu0c4s2sI2E3ud%6Q@#77BB_4?58Y0Koq.0eu0e4s2sJ2FU)!%6Q@#7PI"K4>el`7Qq8D0eu3Q4s2sG6TI"f%6Q@#7P[.M4?##R3Bdm70eu3S4s2sF1cI3S%6Q@#7Pm:O4>fDb5s>`?0eu3U4s2sF6Sh.p%6Q@#7Q*FQ4>fM`69Yi@0eu3W4s2sF7PmIr%6Q@#7Q<RS4>fSo76V/C0eu3Y4s2sG2_mZ_%6Q@#7R93\4>o/c2EhR40eu3b4s2sG3ArZW%6Q@#7RK?^4>oVa6TtrA0eu3d4s2sG75Qhb%6Q@#7R]K`4?#2Q3Bdm70eu3f4s2sH6T6eb%6Q@$0JG[54?#_h76V/C0f(L<4s2sI2)mNY%6Q@$0JYg74?,Y]76V/C0f(L>4s2sI7Rf=#%6Q@$0Jks94?5>Y0g6%/0f(L@4s2sJ77K*t%6Q@$0K)*;4>fJm2a.[50f(LB4s2sG0L@Z]%6Q@$0K;6=4>noJ6p;&B0f(LD4s2sG0gS,i%6Q@$0L7lF4>o&R7Qq8D0f(LO4s2sG6SU;Z%6Q@$0L\/J4>oPq7Qq8D0f(LQ4s2sH1H@og%6Q@$0ebd64?#&`3Bdm70f(O=4s2sH6q&go%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AWH1-QgC3AifR4q0V/1GL[L+?VMJ6T.+;4>AWH1d3$E3&`QZ4q0V/1GLaN+?VVM0ebd#4>AWH2Ei6G2)7$W4q0V/1GLgP+?VM;2*jD84>AWH3''JHI2DRWf4q0V/1GLmR+?VP=0Le584>AWH5s?DR2Dd`U4q0V/1GM3[+?VP@1Gh9)4>AWH6TuVT2F0,Y4q0V/1GM9]+?VPL6U<mF4>AWH76VhV2`!fT4q0V/1GM?_+?VS>3CQ+@4>AWI0KpUA2aTM]4q0V/1GU[K+?VSM3Aiu04>AWI1-QgC2aoGf4q0V/1GUaM+?VV<3''f_;4>AWI1d3$E3&39J4q0V/1GUgO+?VV@3&Ef.4>AWI2Ei6G3(?>''4q0V/1GUmQ+?VYB7QEXA4>AWI3''JHI3B9G]4q0V/1GUsS+?VJM1Gh9)4>AWI5s?DR2)@''T4q0V/1GV9\+?VM;6UX*I4>AWI6TuVT2)@We4q0V/1GV?^+?VP;6UO$H4>AWI76VhV2Dd0V4q0V/1GVE`+?VP>0JG["4>AWJ0KpUA2DmKL4q0V/1G^aL+?VPB6Sgn84>AWJ1-QgC2FBo%4q0V/1G^gN+?VPO2)mc/4>AWJ1d3$E2`!lj4q0V/1G^mP+?VS?2)IK+4>AWJ2Ei6G2`<EH4q0V/1G^sR+?VS@75R1;4>AWJ3''JHI2`=,m4q0V/1G_$T+?VSB6nge64>AWJ5s?DR2`O8n4q0V/1G_?]+?VSC1.+574>AWJ6TuVT2afJ\4q0V/1G_E_+?VV=1.+574>AWJ76VhV3&a8[4q0V/1G_Ka+?VVQ6o7(:4>AWK0KpUA3B/`K4q0V/1GggM+?VYD77KHM4>AWK1-QgC2)7NT4q0V/1GgmO+?VP;6o7(:4>AWK1d3$E2Dd]W4q0V/1GgsQ+?VPN1,M0(4>AWK2Ei6G2F]PY4q0V/1Gh$S+?VS@2a]b<4>AWK3''JHI3(-,#4q0V/1Gh*U+?VY=68:Y54>AWK5s?DR3ANKJ4q0V/1GhE^+?VYM77BBL4>AWK6TuVT3C5PY4q0V/1GhK`+?VM81,D*''4>AWK76VhV2)%!X4q0V/1GhQb+?VM?1dO;74>AWL0KpUA2*!r^4q0V/1GpmN+?VMK1,qH,4>AWL1-QgC2+9>\4q0V/1GpsP+?VMN2`Eo04>AWL1d3$E2DR''X4q0V/1Gq$R+?VP>1IXJ:4>AWL2Ei6G2Dmf]4q0V/1Gq*T+?VP>6SUb64>AWL3''JHI2E!6L4q0V/1Gq0V+?VP@3''oe<4>AWL5s?DR2E<cb4q0V/1GqK_+?VPN6S^h74>AWL6TuVT2`O/^4q0V/1GqQa+?VSN1,1s%4>AWL76VhV3&!Wa4q0V/1GqWc+?VV<3&!N*4>AWM0KpUA3&36U4q0V/1H$sO+?VV=68Le74>AWM1-QgC3&EoU4q0V/1H%$Q+?VVA3(#k=4>AWM1d3$E3''f;c4q0V/1H%*S+?VVM0fM9*4>AWM2Ei6G3A<`W4q0V/1H%0U+?VYB1GV-''4>AWM3''JHI3CZ"_4q0V/1H%6W+?VM80LS)64>AWM5s?DR1e''qj4q0V/1H%Q`+?VM?7QEXA4>AWM6TuVT2+BSc4q0V/1H%Wb+?VP;6pj-I4>AWM76VhV2D[?K4q0V/1H%]d+?VP@2F]k>4>AWN0KpUA2FTGY4q0V/1H.$P+?VS;0f_E,4>AWN1-QgC2`=#Z4q0V/1H.*R+?VV;6UO$H4>AWN1d3$E3&!`d4q0V/1H.6V+?VVD0f_E,ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0f(aJ4s2sI6U`[m%6Q@$2`X&E4?,ec3Bdm70f(aS4s2sJ0f29^%6Q@$2aT\N4?5;X5s>`?0f(aU4s2sE7P[Fs%6Q@$2afhP4>]Md0Koq.0f(aW4s2sF757+m%6Q@$2b#tR4>o,c7Qq8D0f(dC4s2sG3&36Q%6Q@$3&<`@4?5_b1d2@20f(dG4s2sF75cka%6Q@$3&NlB4>oJZ5s>`?0f(dI4s2sH0fD$U%6Q@$3&a#D4?"u_1d2@20f(dK4s2sH2)[`a%6Q@$3&s/F4?#\c0g6%/0f(dT4s2sI2)I*Q%6Q@$3''oeO4?,2e3Bdm70f(dV4s2sJ3(-+t%6Q@$3(,qQ4>]M^0Koq.0f(dX4s2sH68V.q%6Q@$3(?(S4?#_g0Koq.0f(gD4s2sJ2*j)`%6Q@$3AE]?4>ei^0g6%/0f(gF4s2sF75-V`%6Q@$3AWiA4>o/c2*MI30f(gH4s2sG6Sh.p%6Q@$3AiuC4>oP`76V/C0f(gJ4s2sG6UX7)%6Q@$3B'',E4?##]7Qq8D0f(gL4s2sH6:3Rn%6Q@$3B98G4?,,N1Hl710f(gU4s2sG6UWdq%6Q@$3C5nP4?#)Q5s>`?0f(gW4s2sF0LeAm%6Q@$3CH%R4>elR3''Id60f(gY4s2sF3(#Da%6Q@$3CZ1T4>o#a3''Id60f)*L4s2sG5rgkf%6Q@$5qtPG4?#)_2a.[50f)*N4s2sH2DmBV%6Q@$5r1\I4?#5c2a.[50f)*P4s2sI2DI-S%6Q@$5rChK4?58f1-Q.00f)*R4s2sJ2`!HX%6Q@$5rUtM4>eoP76V/C0f)*T4s2sF7PHP\%6Q@$5rh+O4?,Ye5s>`?0f)*]4s2sI7R9!t%6Q@$5sdaX4?,er7Qq8D0f)*_4s2sJ0K;?^%6Q@$5t!mZ4>elL2*MI30f)*a4s2sH2aK;b%6Q@$5t4$\4?5bc3Bdm70f)-M4s2sJ7PHec%6Q@$68:YH4>]J]3Bdm70f)-O4s2sF0JG7G%6Q@$68LeJ4>eiP2*MI30f)-Q4s2sF6T%1o%6Q@$68^qL4>fPd2a.[50f)-S4s2sG2DIWa%6Q@$68q(N4>o)R5s>`?0f)-U4s2sG2a]Dc%6Q@$69.4P4>o/d2*MI30f)-^4s2sH0L@QZ%6Q@$6:*jY4?#,O0g6%/0f)-`4s2sH2+''5b%6Q@$6:=![4?#8f3Bdm70f)-b4s2sH5t"+)%6Q@$6:O-]4?,ec2a.[50f)0N4s2sJ3AN9P%6Q@$6SUbI4?5\]3''Id60f)0P4s2sE7RTX.%6Q@$6SgnK4>f)R0g6%/0f)0R4s2sF3&<9Q%6Q@$6T%%M4>fGp2EhR40f)0T4s2sG2E!uf%6Q@$6T71O4>oMa2*MI30f)0V4s2sG6npD[%6Q@$6TI=Q4>oVe5s>`?0f)0_4s2sG7Q3_!%6Q@$6UEsZ4?#&b1d2@20f)0a4s2sH2)7K^%6Q@$6UX*\4?,,c3Bdm70f)0c4s2sI3(-+t%6Q@$6Uj6^4?,>U1Hl710f)3O4s2sI68_+o%6Q@$6npkJ4?,eb1d2@20f)3Q4s2sE7PI:q%6Q@$6o."L4>ef\2*MI30f)3S4s2sF1GLRI%6Q@$6o@.N4>eoP6TtrA0f)3U4s2sF69-hc%6Q@$6oR:P4>fSo3Bdm70f)3W4s2sG2_[W`%6Q@$6odFR4?#8[7Qq8D0f)3`4s2sI0fM*V%6Q@$6pa''[4?,,P7Qq8D0f)3b4s2sI2)-pO%6Q@$6ps3]4?,>T2a.[^DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c1IOYq+?VVD3&Wr04>AW[7QqqW3(>\a4q0V/1IWu]+?VVQ1I=874>AW\0g6^B3B9A_4q0V/1IX&_+?VYO0etp%4>AW\1HlpD2E*BY4q0V/1IX,a+?VJL2`<i/4>AW\2*N-F1e''qo4q0V/1IX2c+?VMA1c[`/4>AW\2a/?H2+''&P4q0V/1IXSn+?VP<2E*f/4>AW\69ZMS2E4)[4q0V/1IXYp+?VS:7RTEL4>AW\6p;_U2_dTR4q0V/1IX_r+?VS>1."/64>AW\7QqqW2aoJg4q0V/1Ia&^+?VV?7706J4>AW]0g6^B3&`NH4q0V/1Ia,`+?VY<1,;$&4>AW]1HlpD3ANuX4q0V/1Ia2b+?VYO7Pd4;4>AW]2*N-F1ds)d4q0V/1Ia8d+?VJL6o[@>4>AW]2a/?H1e''o''4q0V/1Ia>f+?VM83&Nl/4>AW]3BeQJ2)7$I4q0V/1IaYo+?VM:2F]k>4>AW]69ZMS2)I''H4q0V/1Ia_q+?VM<3A<W+4>AW]6p;_U2)drX4q0V/1Iaes+?VMA1."/64>AW]7QqqW2*j,Y4q0V/1b^UI+?VMJ2*jD84>AZH0g6^B2*s5Z4q0V/1b^[K+?VMJ6UO$H4>AZH1HlpD2+9Mm4q0V/1b^aM+?VP;2`<i/4>AZH2*N-F2DmEP4q0V/1b^gO+?VP>5rUt:4>AZH2a/?H2FKGl4q0V/1b^mQ+?VPN5rCh84>AZH3BeQJ2_m0I4q0V/1b_3Z+?VSL1,_<*4>AZH69ZMS2a]Aj4q0V/1b_9\+?VSP1H%E+4>AZH7QqqW3&*EZ4q0V/1bg[J+?VV=1b_*&4>AZI0g6^B3&3KS4q0V/1bgaL+?VV>5rh+<4>AZI1HlpD3''f5S4q0V/1bggN+?VVN5qkJ34>AZI2*N-F3($+m4q0V/1bgmP+?VVN7RB9J4>AZI2a/?H3(,\^4q0V/1bgsR+?VVO6:!dE4>AZI3BeQJ3A<l]4q0V/1bh9[+?VY=6pj-I4>AZI69ZMS3ArTZ4q0V/1bh?]+?VYB1c.B*4>AZI6p;_U3B9Jf4q0V/1bhE_+?VYO75mC>4>AZI7QqqW2)?sG4q0V/1bpaK+?VM:0K)*(4>AZJ0g6^B2)I''K4q0V/1bpgM+?VM>2`*]-4>AZJ1HlpD2)moY4q0V/1bpmO+?VMA2)IK+4>AZJ2*N-F2*!Q`4q0V/1bpsQ+?VMN7RfQN4>AZJ2a/?H2DIKS4q0V/1bq$S+?VP;2FTe=4>AZJ3BeQJ2E!9D4q0V/1bq?\+?VPL2aon>4>AZJ69ZMS2_d$Q4q0V/1bqE^+?VS@6T.+;4>AZJ6p;_U2a]Pb4q0V/1bqK`+?VSM6q''9K4>AZJ7QqqW2afAe4q0V/1c$gL+?VV=5smgF4>AZK0g6^B3($%f4q0V/1c$mN+?VYB7PI"84>AZK1HlpD1e''>h4q0V/1c$sP+?VMN0fM9*4>AZK2*N-F2+BMo4q0V/1c%$R+?VP;6S^h74>AZK2a/?H2+02[4q0V/1c%*T+?VP@0L@r44>AZK3BeQJ2E4)j4q0V/1c%E]+?VSB2a]b<4>AZK69ZMS2aoPZ4q0V/1c%K_+?VYP2FBY;4>AZK6p;_U1ds,V4q0V/1c%Qa+?VM83B9844>AZK7QqqW2)?sE4q0V/1c-mM+?VM;1-n)54>AZL0g6^B2)@*E4q0V/1c-sO+?VMA3&<`-4>AZL1HlpD2*j,U4q0V/1c.$Q+?VMM3&a#14>AZL2*N-F2D@HQ4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@%1c@N?4>noR5s>`?0f1^G4s2sG1,M!T%6Q@%1cRZA4>nrR3Bdm70f1^I4s2sG2*!?S%6Q@%1dO;J4>o,X2a.[50f1^R4s2sG3C,Sf%6Q@%1daGL4>oMo1d2@20f1aA4s2sG6UEar%6Q@%2).9;4?#)Q2*MI30f1aC4s2sH2+Bkq%6Q@%2)@E=4?#5S1-Q.00f1aE4s2sH3&r]W%6Q@%2)RQ?4?#8g2*MI30f1aG4s2sH3CGhj%6Q@%2)d]A4?#Ve1Hl710f1aI4s2sH6pj:)%6Q@%2*!iC4?#_u0g6%/0f1aR4s2sI0L7Q[%6Q@%2*sJL4?,&O76V/C0f1aT4s2sI0gd][%6Q@%2+0VN4?,,d1-Q.00f1aV4s2sI2_dT^%6Q@%2+BbP4?,;h3''Id60f1dB4s2sI5sdRq%6Q@%2DIB<4?,Yc6TtrA0f1dD4s2sI6UF+''%6Q@%2D[N>4?5,N3Bdm70f1dF4s2sJ2`4#f%6Q@%2DmZ@4?5Ah69Yi@0f1dH4s2sJ7Pd@p%6Q@%2E*fB4>f#_6TtrA0f1dJ4s2sF68Chj%6Q@%2E<rD4>fSd6TtrA0f1dS4s2sG2)mre%6Q@%2F9SM4>oJl1Hl710f1dU4s2sG6:"()%6Q@%2FK_O4>oSb6TtrA0f1dW4s2sG7Rf*r%6Q@%2F]kQ4?"rK2*MI30f1gC4s2sH1,VH`%6Q@%2_dK=4?#&^6p;&B0f1gE4s2sI6U<Xp%6Q@%2`!W?4?,\r1Hl710f1gG4s2sJ3&<lb%6Q@%2`3cA4>noS0g6%/0f1gI4s2sG6SgYb%6Q@%2`EoC4?,#P3''Id60f1gK4s2sJ5qk#W%6Q@%2`X&E4>]J`6p;&B0f1gT4s2sE76!Ut%6Q@%2aT\N4>]Je69Yi@0f1gV4s2sE779!s%6Q@%2afhP4>]M`5s>`?0f1gX4s2sE7PdCq%6Q@%2b#tR4>]Md7Qq8D0f1jD4s2sE7RT^0%6Q@%3&*T>4>ef^7Qq8D0f1jF4s2sF1Ia,`%6Q@%3&<`@4>eoa3''Id60f1jH4s2sF2)$pP%6Q@%3&NlB4>eub1Hl710f1jJ4s2sF2FKkq%6Q@%3&a#D4>f)e69Yi@0f1jL4s2sF3ArWV%6Q@%3&s/F4>fDZ0g6%/0f1jU4s2sF6:F4)%6Q@%3''oeO4>fGp5s>`?0f1jW4s2sF6SL>\%6Q@%3(,qQ4>fMr1Hl710f1jY4s2sF75@1n%6Q@%3(?(S4>fSg3Bdm70f1mE4s2sG0JPsZ%6Q@%3AE]?4>nuR3''Id60f1mG4s2sG2*"#f%6Q@%3AWiA4>o&_7Qq8D0f1mI4s2sG2b#\h%6Q@%3AiuC4>o,f69Yi@0f1mK4s2sG3''fqr%6Q@%3B'',E4>oMb69Yi@0f1mM4s2sG6TI.j%6Q@%3B98G4>oPp2a.[50f1mV4s2sG75?Y_%6Q@%3C5nP4?"rJ3Bdm70f1mX4s2sH1GgsQ%6Q@%3CH%R4?#5R1-Q.00f1mZ4s2sH3AX)f%6Q@%3CZ1T4?#8W0Koq.0f20M4s2sH3ArQT%6Q@%5qtPG4?#8f0g6%/0f20O4s2sH6:Emu%6Q@%5r1\I4?#Y_2a.[50f20Q4s2sH6oQkb%6Q@%5rChK4?,#S2EhR40f20S4s2sI1,)*[%6Q@%5rUtM4?,,V76V/C0f20U4s2sI1dj&^%6Q@%5rh+O4?,5d2a.[50f20^4s2sI3(-5"%6Q@%5sdaX4?,Va0Koq.0f20`4s2sI5rD(p%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AZY6p;_U3''o>f4q0V/1dOPo+?VVN6pj-I4>AZY7QqqW3(,Y_4q0V/1dWl[+?VVQ5t!mG4>AZZ0g6^B3A<`b4q0V/1dWr]+?VYD7RK?K4>AZZ1HlpD3B9Js4q0V/1dX#_+?VYQ3CH%?4>AZZ2*N-F2)7!S4q0V/1dX)a+?VP@0f2''''4>AZZ2a/?H2)%$M4q0V/1dX/c+?VM:1-n)54>AZZ3BeQJ2+'';W4q0V/1dXJl+?VP>2D[N+4>AZZ69ZMS2FB>Z4q0V/1dXPn+?VS=6U<mF4>AZZ6p;_U2`3?H4q0V/1dXVp+?VS?3CH%?4>AZZ7QqqW2aTM`4q0V/1d`r\+?VV?3C>t>4>AZ[0g6^B3AEHP4q0V/1da#^+?VYC1GD!%4>AZ[1HlpD1ds>^4q0V/1da)`+?VP=3ANc-4>AZ[2*N-F2F9_r4q0V/1da/b+?VS;2+9\<4>AZ[2a/?H3&Nu^4q0V/1da5d+?VJL0KD<+4>AZ[3BeQJ2E*HQ4q0V/1daPm+?VPA77BBL4>AZ[69ZMS2FT>Z4q0V/1daVo+?VV=3CZ1A4>AZ[6p;_U3&NEM4q0V/1da\q+?VVC2F9S:4>AZ[7QqqW2D[f]4q0V/1dj#]+?VPO3&*T+4>AZ\0g6^B3AN<E4q0V/1dj)_+?VYD5t4$I4>AZ\1HlpD1ds)a4q0V/1dj/a+?VM868q(;4>AZ\2*N-F2)%Be4q0V/1dj5c+?VM90h+>94>AZ\2a/?H2)R3K4q0V/1dj;e+?VM=5s[[D4>AZ\3BeQJ2)[0J4q0V/1djVn+?VMJ1b_*&4>AZ\69ZMS2+'')Y4q0V/1dj\p+?VMK75-n74>AZ\6p;_U2+9;\4q0V/1djbr+?VMM3''f_;4>AZ\7QqqW2+9eb4q0V/1ds)^+?VMM6S^h74>AZ]0g6^B2D@TV4q0V/1ds/`+?VPA2).9(4>AZ]1HlpD2F05U4q0V/1ds5b+?VPN2)mc/4>AZ]2*N-F2_m0W4q0V/1ds;d+?VS<1b_*&4>AZ]2a/?H2_m`S4q0V/1dsAf+?VS@7Q<R@4>AZ]3BeQJ2`WcR4q0V/1ds\o+?VSL68:Y54>AZ]69ZMS2b$1l4q0V/1dsbq+?VVC7Pd4;4>AZ]6p;_U3&sGb4q0V/1dshs+?VVL2`!W,4>AZ]7QqqW3(#SY4q0V/1e''/_+?VVN6q''9K4>AZ^0g6^B3B&Z[4q0V/1e''5a+?VM@2+9\<4>AZ^1HlpD2`*ih4q0V/1e'';c+?VVN7RTEL4>AZ^2*N-F2)R`[4q0V/1e''Ae+?VSK2DIB)4>AZ^2a/?H2afDV4q0V/1e''Gg+?VV=2_mQ+4>AZ^3BeQJ2_m<I4q0V/1e''bp+?VS?0h+>94>AZ^69ZMS2`3?J4q0V/1e''hr+?VSL0f_E,4>AZ^6p;_U2)mQQ4q0V/1e''nt+?VM@7RB9J4>AZ^7QqqW2+0bu4q0V/2)$^J+?VMM3(?(@4>A]I0g6^B2+9hi4q0V/2)$dL+?VMN3A<W+4>A]I1HlpD2D@!G4q0V/2)$jN+?VP;3ANc-4>A]I2*N-F2D[9]4q0V/2)$pP+?VP>1djM:4>A]I2a/?H2E!QM4q0V/2)%!R+?VP?6odF?4>A]I3BeQJ2E"#a4q0V/2)%<[+?VPA0fD3)4>A]I69ZMS2E4/]4q0V/2)%B]+?VS<3&!N*4>A]I6p;_U2`*B\4q0V/2)%H_+?VSL2FTe=4>A]I7QqqW2afPm4q0V/2)-dK+?VSN6oI4<ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0f:[?4s2sH7Q3(d%6Q@&0etp84?,#`2*MI30f:[A4s2sI1,1OJ%6Q@&0f2'':4?,2a7Qq8D0f:[C4s2sI3B''Dk%6Q@&0fD3<4?,Ve1Hl710f:[E4s2sJ0JPsZ%6Q@&0fV?>4?5/c1d2@20f:[G4s2sJ770I,%6Q@&0gRuG4?5kd0Koq.0f:[P4s2sF3AEBT%6Q@&0ge,I4>f,W6p;&B0f:[R4s2sF75@7p%6Q@&0h"8K4>nl]6TtrA0f:[T4s2sG2DI$P%6Q@&1,(m74>o)V1Hl710f:^@4s2sG2`WQU%6Q@&1,;$94>oPa0Koq.0f:^B4s2sG6pigq%6Q@&1,M0;4>oYd7Qq8D0f:^D4s2sH2b#Se%6Q@&1,_<=4?#5c3Bdm70f:^F4s2sI1da/b%6Q@&1,qH?4?5,`69Yi@0f:^H4s2sJ1GV9\%6Q@&1-n)H4>]Jp3Bdm70f:^Q4s2sF0LJ,i%6Q@&1.+5J4>eiM3''Id60f:^S4s2sF2)mEV%6Q@&1.=AL4>fGZ69Yi@0f:^U4s2sF6:!Ck%6Q@&1GD!84>nrO2a.[50f:aA4s2sG2)drf%6Q@&1GV-:4>o&a69Yi@0f:aC4s2sG75H\_%6Q@&1Gh9<4?"uR6p;&B0f:aE4s2sH1b^XJ%6Q@&1H%E>4?#)R1d2@20f:aG4s2sH1cREX%6Q@&1H7Q@4?#)`7Qq8D0f:aI4s2sH2E!od%6Q@&1I42I4?#8d5s>`?0f:aR4s2sH6ps=)%6Q@&1IF>K4?#\d2*MI30f:aT4s2sH7R9!t%6Q@&1IXJM4?,&S5s>`?0f:aV4s2sI0g[Z[%6Q@&1b_*94?,)P3Bdm70f:dB4s2sI2DIK]%6Q@&1bq6;4?,8g6TtrA0f:dD4s2sI5rUYb%6Q@&1c.B=4?,_t1Hl710f:dF4s2sJ0K1sT%6Q@&1c@N?4?5/W0g6%/0f:dH4s2sJ1bppP%6Q@&1cRZA4?5DY6p;&B0f:dJ4s2sJ6:"%(%6Q@&1dO;J4>eoQ3''Id60f:dS4s2sF6T$S^%6Q@&1daGL4>o2W1d2@20f:dU4s2sG6UN[o%6Q@&1dsSN4>oS_3Bdm70f:dW4s2sG75@1n%6Q@&2)%3:4?,)M6TtrA0f:gC4s2sI2*!ue%6Q@&2)7?<4?,>W69Yi@0f:gE4s2sI5r(hl%6Q@&2)IK>4?,Vm5s>`?0f:gG4s2sJ2FTnq%6Q@&2)[W@4?5kh2a.[50f:gI4s2sF1,^jN%6Q@&2)mcB4>o)a3Bdm70f:gK4s2sG6:*Fk%6Q@&2*jDK4?#\h2EhR40f:gT4s2sI2b$5"%6Q@&2+''PM4?,__6p;&B0f:gV4s2sJ2)mBU%6Q@&2+9\O4?5;W6p;&B0f:gX4s2sG2).K_%6Q@&2D@<;4>oSe3Bdm70f:jD4s2sH0h"Mp%6Q@&2DRH=4>f&b76V/C0f:jF4s2sF3CGYe%6Q@&2DdT?4>fGk6TtrA0f:jH4s2sG0JYRN%6Q@&2E!`A4>nl_5s>`?0f:jJ4s2sG1,1IH%6Q@&2E3lC4>o)P7Qq8D0f:jL4s2sG2Dmrf%6Q@&2F0ML4?#&O3Bdm70f:jU4s2sH1IaAg%6Q@&2FBYN4?#/d69Yi@0f:jW4s2sH2_ZsM%6Q@&2FTeP4?#Sb6TtrA0f:jY4s2sI0JtaP%6Q@&2_[E<4?,#R1-Q.00f:mE4s2sI0fCmQ%6Q@&2_mQ>4?,Vm0Koq.0f:mG4s2sJ0f_!Q%6Q@&2`*]@4>]J]2EhR]DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c2)dBV+?VM:75@%94>A]P2Ei6G2F9>X4q0V/2)dHX+?VPM0fM9*4>A]P3''JHI2aK,T4q0V/2)dNZ+?VSL1H@W.4>A]P5s?DR2afGU4q0V/2)dic+?VVN681S44>A]P6TuVT2)@Zg4q0V/2)doe+?VM>1.FG:4>A]P76VhV2)mHJ4q0V/2)dug+?VMJ68^q94>A]Q0KpUA2+''&e4q0V/2)m<S+?VMK0ekj$4>A]Q1-QgC2+0kg4q0V/2)mBU+?VP;1b_*&4>A]Q1d3$E2D[<K4q0V/2)mHW+?VP=0f2''''4>A]Q2Ei6G2E!<Y4q0V/2)mNY+?VPA68Le74>A]Q3''JHI2FBeu4q0V/2)mT[+?VPM3&j)24>A]Q5s?DR2FTo$4q0V/2)mod+?VS:0h+>94>A]Q6TuVT2_[NS4q0V/2)muf+?VS;6o$q84>A]Q76VhV2`3?K4q0V/2)n&h+?VS?3(?(@4>A]R0KpUA2`3Q`4q0V/2*!BT+?VS@0f_E,4>A]R1-QgC2aT5R4q0V/2*!HV+?VSL75-n74>A]R1d3$E2a]>e4q0V/2*!NX+?VSN1,(m$4>A]R2Ei6G2afG^4q0V/2*!TZ+?VV@1.+574>A]R3''JHI3&NT^4q0V/2*!Z\+?VVA0K20)4>A]R5s?DR3''f>W4q0V/2*!ue+?VY<0LS)64>A]R6TuVT3A<?G4q0V/2*"&g+?VY<68^q94>A]R76VhV3ANo[4q0V/2*",i+?VYC7Q*F>4>A]Z0KpUA3C,G[4q0V/2*ir\+?VJM6oR:=4>A]Z1-QgC2+''8h4q0V/2*j#^+?VP@2+Bb=4>A]Z1d3$E2FKP[4q0V/2*j)`+?VSM3CZ1A4>A]Z2Ei6G2ao\n4q0V/2*j/b+?VVM0fD3)4>A]Z3''JHI3(,JZ4q0V/2*j5d+?VY<0h+>94>A]Z5s?DR2*s2f4q0V/2*jPm+?VML7RTEL4>A]Z6TuVT2Dd*U4q0V/2*jVo+?VV?6SL\54>A]Z76VhV3A<<X4q0V/2*j\q+?VYD756t84>A][0KpUA2`!EP4q0V/2*s#]+?VMJ3''oe<4>A][1-QgC2D@-W4q0V/2*s)_+?VP@2aon>4>A][1d3$E2FKr%4q0V/2*s/a+?VVL0h+>94>A][2Ei6G3''fhg4q0V/2*s5c+?VY<0JPa#4>A][3''JHI3B/][4q0V/2*s;e+?VM:1H.K,4>A][5s?DR2_[*D4q0V/2*sVn+?VSB3(6"?4>A][6TuVT3AWZR4q0V/2*s\p+?VVC2_[E)4>A][76VhV3AEo\4q0V/2*sbr+?VJM77BBL4>A]\0KpUA2)@WZ4q0V/2+'')^+?VM=7RTEL4>A]\1-QgC2)[ig4q0V/2+''/`+?VM?3&3Z,4>A]\1d3$E2)n&n4q0V/2+''5b+?VMI6S^h74>A]\2Ei6G2*s8^4q0V/2+'';d+?VMK5sdaE4>A]\3''JHI2+''_b4q0V/2+''Af+?VMM1,V6)4>A]\5s?DR2DHm?4q0V/2+''\o+?VP;0LS)64>A]\6TuVT2DR*U4q0V/2+''bq+?VP<3&j)24>A]\76VhV2Dd-U4q0V/2+''hs+?VP>1H%E+4>A]]0KpUA2DmEQ4q0V/2+0/_+?VPJ1H@W.4>A]]1-QgC2F9Ah4q0V/2+05a+?VPL1Gh9)4>A]]1d3$E2FK8[4q0V/2+0;c+?VPO1GM''&4>A]]2Ei6G2_d`[4q0V/2+0Ae+?VS<76*O@4>A]]3''JHI2`!BP4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@&6odFR4?#)N2a.[50f;?b4s2sH1dWr]%6Q@&6pa''[4?#/R2EhR40f;?d4s2sH2`<BS%6Q@&6ps3]4?#8f0Koq.0f;?f4s2sH5rCSb%6Q@&6q0?_4?#Pp5s>`?0f;BR4s2sH6UEds%6Q@&756tK4?#Yf7Qq8D0f;BT4s2sH6pX1(%6Q@&75I+M4?#\e0g6%/0f;BV4s2sH7QEn$%6Q@&75[7O4?,&N3Bdm70f;BX4s2sI1G^aL%6Q@&75mCQ4?,/X0Koq.0f;BZ4s2sI1djVn%6Q@&76*OS4?,2e5s>`?0f;Bc4s2sI3&rl\%6Q@&77''0\4?,Vn0Koq.0f;Be4s2sI69-_`%6Q@&779<^4?,ed3''Id60f;Bg4s2sJ0JkOK%6Q@&77KH`4?5)T1Hl710f;ES4s2sJ0fDB_%6Q@&7PR(L4?5/W2EhR40f;EU4s2sJ1.!ub%6Q@&7Pd4N4?5;Z69Yi@0f;EY4s2sJ2FKGe%6Q@&7Q3LR4?5>S0Koq.0f;E[4s2sJ3&!<U%6Q@&7QEXT4?5D^2EhR40f;Ed4s2sJ5t!Lm%6Q@&7RB9]4?5__5s>`?0f;Ef4s2sF1IO&`%6Q@&7RTE_4>f)W76V/C0f;Eh4s2sF3AENX%6Q@&7RfQa4>fGa0Koq.0fC^>4s2sF6:+.*%6Q@''0JPa64>oSq0g6%/0fC^@4s2sG7Q!Iq%6Q@''0Jbm84?"uT7Qq8D0fC^B4s2sH1bpdL%6Q@''0Ju$:4?#)`3Bdm70fC^D4s2sI0K:pR%6Q@''0K20<4?,,d6p;&B0fC^F4s2sF6q&go%6Q@''0KD<>4>fSf2a.[50fC^O4s2sF7R9=(%6Q@''0L@rG4>nlM1-Q.00fC^Q4s2sG2+9kr%6Q@''0LS)I4>o/R1-Q.00fC^S4s2sG3As>j%6Q@''0Le5K4>oJ_1Hl710fCa?4s2sG69$th%6Q@''0ekj74>oS`2*MI30fCaA4s2sG6q/sr%6Q@''0f)!94?#&b1Hl710fCaC4s2sH2F^,!%6Q@''0f;-;4?#2b6TtrA0fCaE4s2sH68V(o%6Q@''0fM9=4?#Y_1d2@20fCaG4s2sI0etOK%6Q@''0f_E?4?,)N6TtrA0fCaP4s2sI1GgdL%6Q@''0g\&H4?,/e1d2@20fCaR4s2sI2)[6S%6Q@''0gn2J4?,Vb1-Q.00fCaT4s2sI5smIm%6Q@''0h+>L4?5,U2a.[50fCd@4s2sJ1GM<^%6Q@''1,1s84?5AT2EhR40fCdB4s2sJ3C5Pd%6Q@''1,D*:4>nrK6TtrA0fCdD4s2sI3&NKU%6Q@''1,V6<4?,f"0Koq.0fCdF4s2sJ1,_!R%6Q@''1,hB>4>fM\2a.[50fCdH4s2sF6o$\b%6Q@''1-%N@4>fMb3Bdm70fCdQ4s2sH1c7`d%6Q@''1."/I4?,&U6p;&B0fCdS4s2sI2`<WZ%6Q@''1.4;K4>oYs2*MI30fCdU4s2sG1.F\r%6Q@''1.FGM4?#_t1-Q.00fCgA4s2sI3AWQW%6Q@''1GM''94?,>[1-Q.00fCgC4s2sE7574p%6Q@''1G_3;4>]Ja3''Id60fCgE4s2sF0L[oa%6Q@''1Gq?=4>el^6p;&B0fCgG4s2sF1Gh$S%6Q@''1H.K?4>nrR7Qq8D0fCgI4s2sG2D@''R%6Q@''1H@WA4?#\e3Bdm70fCgR4s2sI3&!3R%6Q@''1I=8J4?5;W76V/C0fCgT4s2sE7Q<e"%6Q@''1IODL4>eoL3Bdm70fCgV4s2sF2D[6T%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>A`M7QqqW2*"#j4q0V/2Dd*O+?VMI5r:b74>A`N0g6^B2+''/Z4q0V/2Dd0Q+?VMK1dsS;4>A`N1HlpD2+''2g4q0V/2Dd6S+?VMM0JYg$4>A`N2*N-F2+B;T4q0V/2Dd<U+?VP91c%<)4>A`N2a/?H2Dmfh4q0V/2DdBW+?VP?1.FG:4>A`N3BeQJ2E!BI4q0V/2Dd]`+?VP@6:F''I4>A`N69ZMS2E+)^4q0V/2Ddcb+?VS=0ge,64>A`N6p;_U2`F/\4q0V/2Ddid+?VSC1I4264>A`N7QqqW2b$.l4q0V/2Dm0P+?VV?3A`o/4>A`O0g6^B3&Euj4q0V/2Dm6R+?VVD3As&14>A`O1HlpD3''fG\4q0V/2Dm<T+?VVL2E<r14>A`O2*N-F3''ftf4q0V/2DmBV+?VVN2)RQ,4>A`O2a/?H3(#Vj4q0V/2DmHX+?VM?7Pm:<4>A`O3BeQJ2*s\f4q0V/2Dmca+?VMN0Le584>A`O69ZMS2D@$Y4q0V/2Dmic+?VP;779<K4>A`O6p;_U2E<HZ4q0V/2Dmoe+?VPK3As&14>A`O7QqqW2FTJj4q0V/2E!6Q+?VS;3&Ef.4>A`P0g6^B2aTnf4q0V/2E!<S+?VVB2)RQ,4>A`P1HlpD3''oJ^4q0V/2E!BU+?VVP7R]KM4>A`P2*N-F3B0Dr4q0V/2E!HW+?VYD7R]KM4>A`P2a/?H1e''8\4q0V/2E!NY+?VJM3&*T+4>A`P3BeQJ1e''ng4q0V/2E!ib+?VM<2aT\;4>A`P69ZMS2*iuO4q0V/2E!od+?VMJ69%.<4>A`P6p;_U2DI!T4q0V/2E!uf+?VP>681S44>A`P7QqqW2E!HQ4q0V/2E*<R+?VS;7RK?K4>A`Q0g6^B2`3BI4q0V/2E*BT+?VSC2+9\<4>A`Q1HlpD2afGX4q0V/2E*HV+?VV<1dsS;4>A`Q2*N-F3&*iX4q0V/2E*NX+?VV>3B0234>A`Q2a/?H3&Nuf4q0V/2E*TZ+?VV@6Ua0J4>A`Q3BeQJ3&`NI4q0V/2E*oc+?VVL0L7l34>A`Q69ZMS3(6,"4q0V/2E*ue+?VVQ3C5n=4>A`Q6p;_U3(?7m4q0V/2E+&g+?VMA1GM''&4>A`Q7QqqW2*sSc4q0V/2E3BS+?VMJ75d==4>A`R0g6^B2D@*N4q0V/2E3HU+?VMJ76*O@4>A`R1HlpD2+''&a4q0V/2E3NW+?VMN6Sgn84>A`R2*N-F2FBGY4q0V/2E3TY+?VPM7PR(94>A`R2a/?H2_ZpP4q0V/2E3Z[+?VS?0gRu44>A`R3BeQJ3&3ch4q0V/2E3ud+?VVL7Q*F>4>A`R69ZMS1dsbc4q0V/2E4&f+?VM;1bh0''4>A`R6p;_U3As8c4q0V/2E4,h+?VPL0Le584>A`R7QqqW1dsDn4q0V/2E<HT+?VJM6Spt94>A`S0g6^B2)-sD4q0V/2E<NV+?VM=2+9\<4>A`S1HlpD2*iuT4q0V/2E<TX+?VMK76!I?4>A`S2*N-F2DR!A4q0V/2E<ZZ+?VS<2*!i04>A`S2a/?H3&3fg4q0V/2E<`\+?VV>5s[[D4>A`S3BeQJ3&X5p4q0V/2E=&e+?VVC2*!i04>A`S69ZMS3''f8e4q0V/2E=,g+?VYB1IaP;4>A`S6p;_U3As5^4q0V/2E=2i+?VYE0f)!&4>A`S7QqqW3CGP]4q0V/2F0#\+?VYP2+0V;4>A`[0g6^B2)m9U4q0V/2F0)^+?VMK68Le7ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0fD<R4s2sF6pa:*%6Q@''5r:bJ4>fPa1d2@20fD<T4s2sG0L[][%6Q@''5rLnL4>noK2*MI30fD<V4s2sG1IX#^%6Q@''5r_%N4>oJZ1-Q.00fD<X4s2sG75?_a%6Q@''5s[[W4?5,M1-Q.00fD<a4s2sJ1Gq!Q%6Q@''5smgY4?5AX76V/C0fD<c4s2sJ6SU8Y%6Q@''5t*s[4?5ki2a.[50fD<e4s2sF69$th%6Q@''681SG4>fJm3''Id60fD?Q4s2sG1GCgQ%6Q@''68C_I4>o)S7Qq8D0fD?S4s2sG3&ETY%6Q@''68UkK4?#2T6TtrA0fD?U4s2sJ2FB2_%6Q@''68h"M4?5>[6p;&B0fD?W4s2sJ3&NNV%6Q@''69%.O4?5_g7Qq8D0fD?Y4s2sG2*ir\%6Q@''6:!dX4?,Y]0g6%/0fD?b4s2sI770C*%6Q@''6:3pZ4?58c6TtrA0fD?d4s2sF2)@*R%6Q@''6:F''\4>fJl3Bdm70fD?f4s2sF6prps%6Q@''6SL\H4>fPo2*MI30fDBR4s2sG2E<][%6Q@''6S^hJ4?#/T6TtrA0fDBT4s2sI1Ia2b%6Q@''6SptL4?58d2a.[50fDBV4s2sF3(,Pd%6Q@''6T.+N4>nr]6TtrA0fDBX4s2sH1.+Jo%6Q@''6T@7P4?5eb3''Id60fDBZ4s2sE77Jsp%6Q@''6U<mY4>f,S76V/C0fDBc4s2sG0JGs[%6Q@''6UO$[4>o)R69Yi@0fDBe4s2sG69$bb%6Q@''6Ua0]4?#8h2a.[50fDBg4s2sJ6o$Ya%6Q@''6ngeI4>eoT1Hl710fDES4s2sF1d`r\%6Q@''6o$qK4>f&b1Hl710fDEU4s2sF6npS`%6Q@''6o7(M4>noK69Yi@0fDEW4s2sG2FKGe%6Q@''6oI4O4>oSn7Qq8D0fDEY4s2sH3&j;i%6Q@''6o[@Q4?,)T76V/C0fDE[4s2sJ2E<`\%6Q@''6pX!Z4?5>W1d2@20fDEd4s2sF1H73T%6Q@''6pj-\4>nrR6TtrA0fDEf4s2sG1H@?W%6Q@''6q''9^4>oSo1-Q.00fDEh4s2sH75."k%6Q@''75-nJ4?,&P69Yi@0fDHT4s2sJ3&F#e%6Q@''75@%L4>oJp69Yi@0fDHV4s2sH7PmIr%6Q@''75R1N4?5eq7Qq8D0fDHX4s2sJ757(l%6Q@''75d=P4>]Ja7Qq8D0fDHZ4s2sF0Jc$Z%6Q@''76!IR4>ei[2EhR40fDH\4s2sF3AElb%6Q@''76s*[4>nl_3Bdm70fDHe4s2sG1Ia8d%6Q@''7706]4>o2U0Koq.0fDHg4s2sH1,D3[%6Q@''77BB_4?,#N2EhR40fDHi4s2sJ0geAn%6Q@''7PI"K4>fSa0g6%/0fDKU4s2sH6ngG]%6Q@''7P[.M4?,)b2*MI30fDKW4s2sI1c@fe%6Q@''7Pm:O4?,/a69Yi@0fDKY4s2sI2+9Ad%6Q@''7Q*FQ4?,bh6p;&B0fDK[4s2sE7Q*_"%6Q@''7Q<RS4>f)e1d2@20fDK]4s2sF68UJ^%6Q@''7R93\4>nlN3Bdm70fDKf4s2sG1IOMm%6Q@''7RK?^4>o&O3''Id60fDKh4s2sG2)[id%6Q@''7R]K`4>o)X3''Id60fDKj4s2sG3Aa#c%6Q@(0JG[54>oJ\1Hl710fLd@4s2sG6ngqk%6Q@(0JYg74?"rJ0g6%/0fLdB4s2sH0fDB_%6Q@(0Jks94?#,c1-Q.00fLdD4s2sH2D@N_%6Q@(0K)*;4?#8e1Hl7ZDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c2_[0S+?VSK2_[E)4>AcK3''JHI2b#bm4q0V/2_[6U+?VVD1c.B*4>AcK5s?DR3''oV]4q0V/2_[Q^+?VY=6SL\54>AcK6TuVT3Arfa4q0V/2_[W`+?VYE0L7l34>AcK76VhV2)d3G4q0V/2_[]b+?VMN5qtP44>AcL0KpUA2Dmfg4q0V/2_d$N+?VPO0JPa#4>AcL1-QgC2`<?D4q0V/2_d*P+?VSC5rLn94>AcL1d3$E3''fPn4q0V/2_d0R+?VYE5t!mG4>AcL2Ei6G3C5Sh4q0V/2_d6T+?VYR2FBY;4>AcL3''JHI2)-dA4q0V/2_d<V+?VP:68h":4>AcL5s?DR2DR9I4q0V/2_dW_+?VPJ3(,q>4>AcL6TuVT3&*cY4q0V/2_d]a+?VM81c%<)4>AcL76VhV2)mBG4q0V/2_dcc+?VMN2E!`.4>AcM0KpUA2_d!H4q0V/2_m*O+?VVL0JG["4>AcM1-QgC3''g#"4q0V/2_m0Q+?VMJ2a]b<4>AcM1d3$E3&WKL4q0V/2_m6S+?VJM7R93I4>AcM2Ei6G2)-mS4q0V/2_m<U+?VM>68Uk84>AcM3''JHI2*!KM4q0V/2_mBW+?VP<5rh+<4>AcM5s?DR2FL"p4q0V/2_m]`+?VML5s[[D4>AcM6TuVT2E<Z`4q0V/2_mcb+?VM93&Wr04>AcM76VhV1dsA`4q0V/2_mid+?VJM2*!i04>AcN0KpUA2*!WO4q0V/2`!0P+?VPK2+Bb=4>AcN1-QgC2FB>i4q0V/2`!6R+?VS>68^q94>AcN1d3$E2`WTN4q0V/2`!<T+?VV=0K20)4>AcN2Ei6G3&3<J4q0V/2`!BV+?VV>1H@W.4>AcN3''JHI3(>\n4q0V/2`!HX+?VVQ2+0V;4>AcN5s?DR3B8fR4q0V/2`!ca+?VJL5rLn94>AcN6TuVT2)dom4q0V/2`!ic+?VMN2`X&24>AcN76VhV2E!9G4q0V/2`!oe+?VS?5sdaE4>AcO0KpUA2aoYc4q0V/2`*6Q+?VVM2F]k>4>AcO1-QgC3A<-F4q0V/2`*<S+?VYM2*sJ94>AcO1d3$E2)[`X4q0V/2`*BU+?VM@1,hB+4>AcO2Ei6G2*",c4q0V/2`*HW+?VMI0h+>94>AcO3''JHI2*sVd4q0V/2`*NY+?VMM7Q*F>4>AcO5s?DR2D[3E4q0V/2`*ib+?VP<1I=874>AcO6TuVT2E<Q]4q0V/2`*od+?VPL3&a#14>AcO76VhV2FBf#4q0V/2`*uf+?VPM3(6"?4>AcP0KpUA2FKP]4q0V/2`3<R+?VPM7Q!@=4>AcP1-QgC2F]DX4q0V/2`3BT+?VS:6q0?L4>AcP1d3$E2_d*H4q0V/2`3HV+?VS;2*!i04>AcP2Ei6G2_dZU4q0V/2`3NX+?VS;6o@.;4>AcP3''JHI2`NW`4q0V/2`3TZ+?VSB2F]k>4>AcP5s?DR2aTG\4q0V/2`3oc+?VSN75I+:4>AcP6TuVT2aoJk4q0V/2`3ue+?VVC1djM:4>AcP76VhV3(65)4q0V/2`4&g+?VY>2*sJ94>AcQ0KpUA3C?7o4q0V/2`<BS+?VP93&Nl/4>AcQ1-QgC2FKM^4q0V/2`<HU+?VS;68:Y54>AcQ1d3$E3Aj,X4q0V/2`<NW+?VM;5t!mG4>AcQ2Ei6G2E+#[4q0V/2`<TY+?VS:3(6"?4>AcQ3''JHI2_d*B4q0V/2`<Z[+?VS>1GD!%4>AcQ5s?DR3&3EN4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@(2F9SM4?,)a1-Q.00fM!X4s2sJ2*sVn%6Q@(2FK_O4?5\r2*MI30fM!Z4s2sJ75mUu%6Q@(2F]kQ4>o)b1d2@20fM$F4s2sH0gdZZ%6Q@(2_dK=4?,/S3Bdm70fM$H4s2sF3&Erc%6Q@(2`!W?4>fMn3''Id60fM$J4s2sF7Q3%c%6Q@(2`3cA4>o)Q0Koq.0fM$L4s2sG2E4,h%6Q@(2`EoC4>o2Y3Bdm70fM$N4s2sG3C-(t%6Q@(2`X&E4>oP_3''Id60fM$W4s2sG6Uijq%6Q@(2aT\N4>oVa2EhR40fM$Y4s2sG7Plh`%6Q@(2afhP4>oYs5s>`?0fM$[4s2sH0JPmX%6Q@(2b#tR4?"rL7Qq8D0fM''G4s2sH0f:XK%6Q@(3&*T>4?"u_7Qq8D0fM''I4s2sH1H.!O%6Q@(3&<`@4?#)S69Yi@0fM''K4s2sH1dj/a%6Q@(3&NlB4?#/c3''Id60fM''M4s2sH5r;"o%6Q@(3&a#D4?#\h1Hl710fM''O4s2sI1.Eu^%6Q@(3&s/F4?,Vb0Koq.0fM''X4s2sI7RKU.%6Q@(3''oeO4?52S3''Id60fM''Z4s2sJ2_d<V%6Q@(3(,qQ4>]J`1-Q.00fM''\4s2sF0JYpX%6Q@(3(?(S4>elJ3''Id60fM*H4s2sF1IX#^%6Q@(3AE]?4>o)e1Hl710fM*J4s2sG6T.=r%6Q@(3AWiA4>oYr5s>`?0fM*L4s2sH1GD*Y%6Q@(3AiuC4?#2X7Qq8D0fM*N4s2sH5rLJ^%6Q@(3B'',E4?,)^76V/C0fM*P4s2sI2+0hr%6Q@(3B98G4?,5Q1-Q.00fM*Y4s2sI3(,Se%6Q@(3C5nP4?,Vb1Hl710fM*[4s2sI68q:r%6Q@(3CH%R4?,\d69Yi@0fM*]4s2sJ1.!c\%6Q@(3CZ1T4?5>T1Hl710fMBP4s2sJ3&**N%6Q@(5qtPG4>]Je1d2@20fMBR4s2sE7PI4o%6Q@(5r1\I4>]Mp3Bdm70fMBT4s2sF0L@NY%6Q@(5rChK4>eoO3''Id60fMBV4s2sF1c%Qa%6Q@(5rUtM4>erO1Hl710fMBX4s2sF2+0_o%6Q@(5rh+O4>f)V1-Q.00fMBa4s2sF3''onp%6Q@(5sdaX4>f,W2a.[50fMBc4s2sF5qt\i%6Q@(5t!mZ4>fGo1d2@20fMBe4s2sG0KDTd%6Q@(5t4$\4>no]5s>`?0fMEQ4s2sG2)R9U%6Q@(68:YH4>o&d7Qq8D0fMES4s2sG2E!BU%6Q@(68LeJ4>o/b2a.[50fMEU4s2sG6T%.n%6Q@(68^qL4>oYq1Hl710fMEW4s2sH0LJ;n%6Q@(68q(N4?"u\6TtrA0fMEY4s2sH1GppO%6Q@(69.4P4?#Sc6p;&B0fMEb4s2sI2_[3T%6Q@(6:*jY4?,Vm1d2@20fMEd4s2sJ6SgJ]%6Q@(6:=![4?5kb2a.[50fMEf4s2sF6Sq+n%6Q@(6:O-]4>oPd1Hl710fMHR4s2sH1GgpP%6Q@(6SUbI4?#&U3Bdm70fMHT4s2sJ1,D3[%6Q@(6SgnK4>oVo69Yi@0fMHV4s2sH1c@3T%6Q@(6T%%M4?#/Q7Qq8D0fMHX4s2sH5rL_e%6Q@(6T71O4?#\`2*MI30fMHZ4s2sI2D@E\%6Q@(6TI=Q4>eiM0Koq.0fMHc4s2sF3(#Pe%6Q@(6UEsZ4>o#`0g6%/0fMHe4s2sH1dshs%6Q@(6UX*\4?#,P2*MI30fMHg4s2sH2E*<R%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>Ac^7QqqW2b$.h4q0V/2af>`+?VY<3Aiu04>Ac_0g6^B3As5m4q0V/2afDb+?VYE2)IK+4>Ac_1HlpD2FTAZ4q0V/2afJd+?VS>75d==4>Ac_2a/?H3&*iZ4q0V/2afVh+?VVA6odF?4>Ac_3BeQJ3&`cU4q0V/2afqq+?VVL0g\&54>Ac_69ZMS2*j&Z4q0V/2ag"s+?VMJ3(#k=4>Ac_6p;_U2*s;i4q0V/2ag(u+?VPA5qtP44>Ac_7QqqW2E<HF4q0V/2aoDa+?VPM2D[N+4>Ac`0g6^B2`!`[4q0V/2aoJc+?VS>0f)!&4>Ac`1HlpD2`*9W4q0V/2aoPe+?VSB3B'',24>Ac`2*N-F2ag(p4q0V/2aoVg+?VSP77''0I4>Ac`2a/?H3&*-I4q0V/2ao\i+?VV<2)RQ,4>Ac`3BeQJ3&<Q`4q0V/2ap"r+?VVN1daG94>Ac`69ZMS3ArW]4q0V/2ap(t+?VYD0ekj$4>Ac`6p;_U2E"#Y4q0V/2ap/!+?VMN3&!N*4>Ac`7QqqW2Dmri4q0V/2b#Jb+?VP@3&s/34>Aca0g6^B2FBAg4q0V/2b#Pd+?VS=3''oe<4>Aca1HlpD2)$dR4q0V/2b#Vf+?VMI0Jbm%4>Aca2*N-F2F9;f4q0V/2b#\h+?VSA77BBL4>Aca2a/?H2*!BL4q0V/2b#bj+?VML2FBY;4>Aca3BeQJ2+0f"4q0V/2b$(s+?VS=1,V6)4>Aca69ZMS2`3E]4q0V/2b$.u+?VM875[7<4>Aca6p;_U2).Q\4q0V/2b$5"+?VM@1.FG:4>Aca7QqqW2*!E[4q0V/3&!$M+?VMA3As&14>AfL0g6^B2*"&j4q0V/3&!*O+?VMJ75[7<4>AfL1HlpD2+0_c4q0V/3&!0Q+?VP;6oR:=4>AfL2*N-F2Dd-H4q0V/3&!6S+?VP=3AWi.4>AfL2a/?H2Ddll4q0V/3&!<U+?VP?6pj-I4>AfL3BeQJ2F0/Z4q0V/3&!W^+?VS;7RfQN4>AfL69ZMS2`*EL4q0V/3&!]`+?VSK3&j)24>AfL6p;_U2aK`!4q0V/3&!cb+?VSO1cIT-4>AfL7QqqW2aoSm4q0V/3&**N+?VV;0JG["4>AfM0g6^B3&*?G4q0V/3&*0P+?VVB77KHM4>AfM1HlpD3&rrQ4q0V/3&*6R+?VVM1,(m$4>AfM2*N-F3A<<N4q0V/3&*<T+?VY<3&!N*4>AfM2a/?H3B8rP4q0V/3&*BV+?VP:2aon>4>AfM3BeQJ2F92T4q0V/3&*]_+?VPM2`*]-4>AfM69ZMS2aoGj4q0V/3&*ca+?VVD1,V6)4>AfM6p;_U3(?4h4q0V/3&*ic+?VJM6npk74>AfM7QqqW2)%<a4q0V/3&30O+?VM93B'',24>AfN0g6^B2)7NX4q0V/3&36Q+?VM?6T71<4>AfN1HlpD2)mQU4q0V/3&3<S+?VMJ69.4=4>AfN2*N-F2+9hk4q0V/3&3BU+?VP:1bq6(4>AfN2a/?H2E<cT4q0V/3&3HW+?VPM3(#k=4>AfN3BeQJ2FTM_4q0V/3&3c`+?VPN68h":4>AfN69ZMS2_d<L4q0V/3&3ib+?VS>2DRH*4>AfN6p;_U2`3?M4q0V/3&3od+?VS?1.+574>AfN7QqqW3&!9I4q0V/3&<6P+?VV>1H7Q-4>AfO0g6^B3&Eu_4q0V/3&<<R+?VVP0L7l34>AfO1HlpD3AWZP4q0V/3&<BT+?VY?6q''9KASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0fUsH4s2sE76!_"%6Q@)1H%E>4>]Mb0g6%/0fUsJ4s2sF0K1mR%6Q@)1H7Q@4>eiK5s>`?0fUsL4s2sF1IF,c%6Q@)1I42I4>eo^69Yi@0fUsU4s2sF1Ia/a%6Q@)1IF>K4>fGb2a.[50fUsW4s2sF6:<Un%6Q@)1IXJM4>fJ]1d2@20fUsY4s2sG0eksX%6Q@)1b_*94>noR1-Q.00fV!E4s2sG2+BDd%6Q@)1bq6;4?##Q69Yi@0fV!G4s2sH1H@BX%6Q@)1c.B=4?#)R0Koq.0fV!I4s2sH2FB5`%6Q@)1c@N?4?#8X0Koq.0fV!K4s2sH3B8fX%6Q@)1cRZA4?#8e3Bdm70fV!M4s2sH6ngM_%6Q@)1dO;J4?#_r6p;&B0fV!V4s2sI1,qTa%6Q@)1daGL4?,2d2*MI30fV!X4s2sI2Dmoe%6Q@)1dsSN4?,et1-Q.00fV!Z4s2sJ0Jk^P%6Q@)2)%3:4?5)b2*MI30fV$F4s2sJ0h"Al%6Q@)2)7?<4?5;Z2*MI30fV$J4s2sF1.4#a%6Q@)2)[W@4>fSd2a.[50fV$L4s2sG2+9ns%6Q@)2)mcB4>o)R0g6%/0fV$N4s2sG3&3re%6Q@)2*jDK4?"uP6TtrA0fV$W4s2sH5r1D_%6Q@)2+''PM4?5)_0g6%/0fV$Y4s2sJ3&!W^%6Q@)2+9\O4>]Je0g6%/0fV$[4s2sG5rCD]%6Q@)2D@<;4>oMd76V/C0fV''G4s2sG7QE.d%6Q@)2DRH=4?"uS3Bdm70fV''I4s2sI0JPON%6Q@)2DdT?4?,)_3''Id60fV''K4s2sI2)R0R%6Q@)2E!`A4?5)P69Yi@0fV''M4s2sJ2E<WY%6Q@)2E3lC4?5;h1-Q.00fV''O4s2sJ2b$+t%6Q@)2F0ML4?,2Q5s>`?0fV''X4s2sJ68L>[%6Q@)2FBYN4>]Je0Koq.0fV''Z4s2sH0fVH_%6Q@)2FTeP4?5;e1d2@20fV''\4s2sF0f1[M%6Q@)2_[E<4>eoT7Qq8D0fV*H4s2sF1ds,_%6Q@)2_mQ>4>f&P1Hl710fV*J4s2sF2_d''O%6Q@)2`*]@4>f&`1Hl710fV*L4s2sF5rh7q%6Q@)2`<iB4>fDl1d2@20fV*N4s2sF6:3Om%6Q@)2`NuD4>nlK3''Id60fV*P4s2sG0f)9_%6Q@)2aKVM4>nub1d2@20fV*Y4s2sG6T?qe%6Q@)2a]bO4>oS`3Bdm70fV*[4s2sG75ltc%6Q@)2aonQ4>oVg0Koq.0fV*]4s2sH1,CUJ%6Q@)3&!N=4?#&P7Qq8D0fV-I4s2sH1c73U%6Q@)3&3Z?4?,)a0g6%/0fV-K4s2sI3&iWV%6Q@)3&EfA4?,ee2*MI30fV-M4s2sJ0K(UK%6Q@)3&WrC4?5;X1-Q.00fV-O4s2sJ3&NZZ%6Q@)3&j)E4?5ea69Yi@0fV-Q4s2sG2_[3T%6Q@)3''f_N4?,_g5s>`?0fV-Z4s2sJ1,VKa%6Q@)3(#kP4>]Ma6p;&B0fV-\4s2sF0JkdR%6Q@)3(6"R4>ef\76V/C0fV-^4s2sF1H.$P%6Q@)3A<W>4>f&O6p;&B0fV0J4s2sF3CG\f%6Q@)3ANc@4>fDY0g6%/0fV0L4s2sF6SLMa%6Q@)3A`oB4>noQ0Koq.0fV0N4s2sG2E<HT%6Q@)3As&D4>oV`6p;&B0fV0P4s2sH1,C[L%6Q@)3B02F4?#)R69Yi@0fV0R4s2sH6q''R/%6Q@)3C,hO4?,#^1Hl7ZDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c3&s;h+?VV?0L\/74>AfU6TuVT3&ENO4q0V/3&sAj+?VV@1IaP;4>AfU76VhV3&`]a4q0V/3&sGl+?VVC2*sJ94>Af]0KpUA3&r]Q4q0V/3''f8_+?VVM0JYg$4>Af]1-QgC3A<<J4q0V/3''f>a+?VYC6UEsG4>Af]1d3$E3C5Pl4q0V/3''fDc+?VJL2`!W,4>Af]2Ei6G1e''J[4q0V/3''fJe+?VM90etp%4>Af]3''JHI2).!T4q0V/3''fPg+?VM=1.FG:4>Af]5s?DR2)RZ[4q0V/3''fkp+?VMJ2aKV:4>Af]6TuVT2*sSd4q0V/3''g"t+?VMM6:F''I4>Af^0KpUA2D@EN4q0V/3''o>`+?VP96q0?L4>Af^1d3$E2D[]W4q0V/3''oJd+?VP>1H7Q-4>Af^2Ei6G2E*<M4q0V/3''oPf+?VP@6o7(:4>Af^3''JHI2E+#i4q0V/3''oqq+?VPL69.4=4>Af^6TuVT2FK;Z4q0V/3''p"s+?VPN1H7Q-4>Af^76VhV2F^+i4q0V/3(#Da+?VS>2+''P:4>Af_1-QgC2`3BG4q0V/3(#Jc+?VS@2)7?)4>Af_1d3$E2afr"4q0V/3(#Pe+?VV<7R]KM4>Af_2Ei6G3&EEN4q0V/3(#Vg+?VVC6o@.;4>Af_3''JHI3''fPa4q0V/3(#\i+?VVL6pa''H4>Af_5s?DR3''fu$4q0V/3($"r+?VVP1GD!%4>Af_6TuVT3(5YZ4q0V/3($(t+?VY<1dO;74>Af_76VhV3A<6X4q0V/3($/!+?VY<2aKV:4>Af`0KpUA3AE?N4q0V/3(,Jb+?VY=6TI=>4>Af`1-QgC3AWQ^4q0V/3(,Pd+?VM@0KD<+4>Af`1d3$E2F9ef4q0V/3(,Vf+?VV;3&s/34>Af`2Ei6G3&!ZS4q0V/3(,\h+?VM91bh0''4>Af`3''JHI2*!Q]4q0V/3(,bj+?VMK1H@W.4>Af`5s?DR2F]S]4q0V/3(-(s+?VS=5rUt:4>Af`6TuVT3&!cX4q0V/3(-.u+?VVO0K20)4>Af`76VhV3AN<J4q0V/3(-5"+?VYA3(?(@4>Afa0KpUA3&!9\4q0V/3(5Pc+?VP;0L\/74>Afa1-QgC2_ZsR4q0V/3(5Ve+?VSN2E3l04>Afa1d3$E3&`fb4q0V/3(5\g+?VM?5qkJ34>Afa2Ei6G2D@$L4q0V/3(5bi+?VP:1cIT-4>Afa3''JHI2F9_h4q0V/3(5hk+?VVL6:F''I4>Afa5s?DR3ANQJ4q0V/3(6.t+?VYB68:Y54>Afa6TuVT1ds8^4q0V/3(65!+?VM<0h+>94>Afa76VhV2FKu#4q0V/3(6;#+?VV@1.4;84>Afb0KpUA3ArfM4q0V/3(>Vd+?VYC7Pd4;4>Afb1-QgC3B0Gr4q0V/3(>\f+?VP<6oI4<4>Afb1d3$E2FBnh4q0V/3(>bh+?VY<3AE],4>Afb2Ei6G2).Ke4q0V/3(>hj+?VP:6TI=>4>Afb3''JHI3&*`c4q0V/3(>nl+?VYP7QEXA4>Afb5s?DR1e''Jn4q0V/3(?4u+?VM80gRu44>Afb6TuVT2)-d=4q0V/3(?;"+?VMJ3C>t>4>Afb76VhV2DHmT4q0V/3(?A$+?VP:7RfQN4>AiM0KpUA2Ddii4q0V/3A<0O+?VPB0Ju$''4>AiM1-QgC2F9bg4q0V/3A<6Q+?VS?3AE],4>AiM1d3$E2`F/]4q0V/3A<<S+?VSP5rh+<4>AiM2Ei6G3&3BK4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@*0K20<4?,2X7Qq8D0f^pI4s2sI2b$+t%6Q@*0KD<>4?,;Y1Hl710f^pR4s2sI5sdq&%6Q@*0L@rG4?,Yd0Koq.0f^pT4s2sJ0gS,i%6Q@*0LS)I4>]Jd6TtrA0f^pV4s2sE77B''t%6Q@*0Le5K4>]M]5s>`?0f^sB4s2sF3AWTX%6Q@*0ekj74>f,f3''Id60f^sD4s2sF6q/pq%6Q@*0f)!94>fS_69Yi@0f^sF4s2sF7Q!Lr%6Q@*0f;-;4>nlK0g6%/0f^sH4s2sH1,D?_%6Q@*0fM9=4?#&b2*MI30f^sJ4s2sH2)d3Q%6Q@*0f_E?4?#,b6p;&B0f^sS4s2sH3CZ>!%6Q@*0g\&H4?,#K6TtrA0f^sU4s2sI0JbLK%6Q@*0gn2J4?,#S1d2@20f^sW4s2sI1.<o]%6Q@*0h+>L4?,,S0g6%/0f_!C4s2sI6UF1)%6Q@*1,1s84?,\p1Hl710f_!E4s2sJ0K;!T%6Q@*1,D*:4?5Aj1d2@20f_!G4s2sJ3A<fa%6Q@*1,V6<4?"rM2a.[50f_!I4s2sH2FBbo%6Q@*1,hB>4?#_s5s>`?0f_!K4s2sH7RKO,%6Q@*1-%N@4?#`!6TtrA0f_!T4s2sI68:bi%6Q@*1."/I4>]Jn5s>`?0f_!V4s2sE77/dn%6Q@*1.4;K4>elJ1Hl710f_!X4s2sF1H.!O%6Q@*1.FGM4>er^6p;&B0f_$D4s2sF2FT;`%6Q@*1GM''94>f,g69Yi@0f_$F4s2sF6:3Uo%6Q@*1G_3;4>fS_2*MI30f_$H4s2sF7RKR-%6Q@*1Gq?=4>oVd76V/C0f_$J4s2sH6oI=p%6Q@*1H.K?4?,,Q2*MI30f_$L4s2sI2E<QW%6Q@*1H@WA4?,Vd6p;&B0f_$U4s2sJ2`=&f%6Q@*1I=8J4?5>Z2a.[50f_$W4s2sE75-DZ%6Q@*1IODL4>]Mb5s>`?0f_$Y4s2sE7Q3b"%6Q@*1IaPN4>f)f3Bdm70f_''E4s2sG2+9Ad%6Q@*1bh0:4>oVo1-Q.00f_''G4s2sJ0Jb[P%6Q@*1c%<<4?52a0Koq.0f_''I4s2sJ3C5_i%6Q@*1c7H>4>]Jr69Yi@0f_''K4s2sF3(61u%6Q@*1cIT@4>f,Y5s>`?0f_''M4s2sF3CGkk%6Q@*1c[`B4>nlM0g6%/0f_''V4s2sH5qt2[%6Q@*1dXAK4?,,R7Qq8D0f_''X4s2sI6UNXn%6Q@*1djMM4>eiO2*MI30f_''Z4s2sF1GgpP%6Q@*1e''YO4>]Jo6p;&B0f_*F4s2sF1,_-V%6Q@*2).9;4>fG_2*MI30f_*H4s2sI1."Go%6Q@*2)@E=4>]Jp1d2@20f_*J4s2sF1,D3[%6Q@*2)RQ?4>er]3''Id60f_*L4s2sF3C>ej%6Q@*2)d]A4>f,g7Qq8D0f_*N4s2sF68^G\%6Q@*2*!iC4>fG_2a.[50f_*W4s2sF68_+o%6Q@*2*sJL4>nlO1Hl710f_*Y4s2sG0f1jR%6Q@*2+0VN4>oVq69Yi@0f_*[4s2sH0KD-W%6Q@*2+BbP4?"uQ76V/C0f_-G4s2sH1H79V%6Q@*2DIB<4?#)d2a.[50f_-I4s2sH2*s/a%6Q@*2D[N>4?#5e0g6%/0f_-K4s2sH6o%(m%6Q@*2DmZ@4?,#K2*MI30f_-M4s2sI0h"Al%6Q@*2E*fB4?,,P3''Id60f_-O4s2sI2).$R%6Q@*2E<rD4?,2c3Bdm70f_-X4s2sI5t+4+%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AiS69ZMS3($%l4q0V/3As5g+?VYB6UO$H4>AiS6p;_U1e''>i4q0V/3As;i+?VM:7R93I4>AiS7QqqW2)[cg4q0V/3B&WU+?VP>5sdaE4>AiT0g6^B2E!<M4q0V/3B&]W+?VS:2a]b<4>AiT1HlpD2_[QX4q0V/3B&cY+?VS<1Gq?*4>AiT2*N-F2afu#4q0V/3B&i[+?VV=3(,q>4>AiT2a/?H3AE?X4q0V/3B&o]+?VYB6SL\54>AiT3BeQJ3CGe]4q0V/3B''5f+?VMJ2_dK*4>AiT69ZMS2E4,a4q0V/3B'';h+?VPK3B0234>AiT6p;_U2F]Vk4q0V/3B''Aj+?VS@6q''9K4>AiT7QqqW2+''AY4q0V/3B/]V+?VP?5sdaE4>AiU0g6^B2F]Pj4q0V/3B/cX+?VSL68Uk84>AiU1HlpD2a]>d4q0V/3B/iZ+?VVC1H%E+4>AiU2*N-F3As8m4q0V/3B/o\+?VJL0K;6*4>AiU2a/?H1dsek4q0V/3B/u^+?VM;1,(m$4>AiU3BeQJ2)mBK4q0V/3B0;g+?VM@6:*jF4>AiU69ZMS2)n#o4q0V/3B0Ai+?VMA2FBY;4>AiU6p;_U2+''&V4q0V/3B0Gk+?VMM1G_3(4>AiU7QqqW2+9J]4q0V/3B8cW+?VMN1Gq?*4>AiV0g6^B2D[<[4q0V/3B8iY+?VP?68C_64>AiV1HlpD2E*KO4q0V/3B8o[+?VPJ0h+>94>AiV2*N-F2F0Vb4q0V/3B8u]+?VPK0LJ#54>AiV2a/?H2F]Jl4q0V/3B9&_+?VS<1c@N,4>AiV3BeQJ2`!<F4q0V/3B9Ah+?VS>3''oe<4>AiV69ZMS2aKkd4q0V/3B9Gj+?VSM5rUt:4>AiV6p;_U3&*?O4q0V/3B9Ml+?VV<6q0?L4>AiV7QqqW3&*i\4q0V/3C,>_+?VV>3''f_;4>Ai^0g6^B3&EN\4q0V/3C,Da+?VV@1,D*''4>Ai^1HlpD3&N]Q4q0V/3C,Jc+?VV@6Uj6K4>Ai^2*N-F3&j;o4q0V/3C,Pe+?VVO0f)!&4>Ai^2a/?H3AEfe4q0V/3C,Vg+?VYA2`Eo04>Ai^3BeQJ3Arlb4q0V/3C,qp+?VM93(,q>4>Ai^69ZMS2)IZ\4q0V/3C-"r+?VM?1,qH,4>Ai^6p;_U2*sV`4q0V/3C-(t+?VP;1djM:4>Ai^7QqqW2E*KI4q0V/3C5D`+?VPA1IOD94>Ai_0g6^B2E3]Q4q0V/3C5Jb+?VPN1IOD94>Ai_1HlpD2FU"i4q0V/3C5Pd+?VS:2afh=4>Ai_2*N-F2aoJV4q0V/3C5Vf+?VVC6SUb64>Ai_2a/?H3(#td4q0V/3C5\h+?VVQ0KD<+4>Ai_3BeQJ3CYhl4q0V/3C6"q+?VYR1dsS;4>Ai_69ZMS2_m-V4q0V/3C6(s+?VSL3(?(@4>Ai_6p;_U3''fo"4q0V/3C6.u+?VY?0gRu44>Ai_7QqqW1e'';\4q0V/3C>Ja+?VJM1dsS;4>Ai`0g6^B2)-mB4q0V/3C>Pc+?VM<3&!N*4>Ai`1HlpD2*"&Y4q0V/3C>Ve+?VMM3Aiu04>Ai`2*N-F2DRTV4q0V/3C>\g+?VP@2`3c.4>Ai`2a/?H2E<Za4q0V/3C>bi+?VPJ0fM9*4>Ai`3BeQJ2FBc!4q0V/3C?(r+?VPN0gRu44>Ai`69ZMS2_mc]4q0V/3C?.t+?VS=1-n)54>Ai`6p;_U2`3oi4q0V/3C?5!+?VSL69%.<ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0f_Tj4s2sH6o-\a%6Q@*6ngeI4?,)b2a.[50f_WV4s2sI1IaAg%6Q@*6o$qK4?,/T2a.[50f_WX4s2sI2+BMg%6Q@*6o7(M4?,Va69Yi@0f_WZ4s2sI6U=1*%6Q@*6oI4O4?,bh2a.[50f_W\4s2sJ0JPRO%6Q@*6o[@Q4?5)^3''Id60f_W^4s2sJ2FBns%6Q@*6pX!Z4?5kg7Qq8D0f_Wg4s2sF1.<u_%6Q@*6pj-\4>erL5s>`?0f_Wi4s2sF5t*Ll%6Q@*6q''9^4>fGm1-Q.00f_Wk4s2sG1c76V%6Q@*75-nJ4>o&U2*MI30f_ZW4s2sG77K*t%6Q@*75@%L4?##_1d2@20f_ZY4s2sH2E3NW%6Q@*75R1N4?#P_6p;&B0f_Z[4s2sH68:ej%6Q@*75d=P4?#Va6p;&B0f_Z]4s2sH75I@r%6Q@*76!IR4?#_t7Qq8D0f_Z_4s2sI1H.Wa%6Q@*76s*[4?,Y_69Yi@0f_Zh4s2sI6UO.''%6Q@*7706]4?,_e1d2@20f_Zj4s2sI6q&go%6Q@*77BB_4?,be7Qq8D0f_Zl4s2sI7R]U,%6Q@*7PI"K4?,f"3Bdm70f_]X4s2sJ0K(pT%6Q@*7P[.M4?52c0g6%/0f_]Z4s2sE7Plnb%6Q@*7Pm:O4>]Md5s>`?0f_]\4s2sF0L@QZ%6Q@*7Q*FQ4>eiO3''Id60f_]^4s2sF0fM''U%6Q@*7Q<RS4>elN6p;&B0f_]`4s2sF1,_E^%6Q@*7R93\4>f)V0g6%/0f_]i4s2sF3&a2g%6Q@*7RK?^4>f,W0Koq.0f_]k4s2sF6SLJ`%6Q@*7R]K`4>fJ`2*MI30f_]m4s2sF779I+%6Q@20JG[54>nlR69Yi@0gRKJ4s2sG1,CUJ%6Q@20JYg74>o/R1Hl710gRKL4s2sG6:+.*%6Q@20Jks94>oP\3''Id60gRKN4s2sG7RAgn%6Q@20K)*;4?"uO76V/C0gRKP4s2sH1bpaK%6Q@20K;6=4?#,R0Koq.0gRKR4s2sH2)@3U%6Q@20L7lF4?#,T0g6%/0gRK[4s2sH2E*BT%6Q@20LJ#H4?#S`6TtrA0gRK]4s2sH69%:q%6Q@20L\/J4?#Sm6p;&B0gRK_4s2sH6:3Xp%6Q@20ebd64?#\g7Qq8D0gRNK4s2sI5rM.q%6Q@20etp84?,ed76V/C0gRNM4s2sI7Pm+h%6Q@20f2'':4?5/Q7Qq8D0gRNO4s2sJ1-%-S%6Q@20fD3<4?52Q1-Q.00gRNQ4s2sJ1bqB]%6Q@20fV?>4?5;h69Yi@0gRNS4s2sJ3&Nuc%6Q@20gRuG4?5AZ69Yi@0gRN\4s2sJ3AErd%6Q@20ge,I4>elJ2a.[50gRN^4s2sG1,;-Z%6Q@20h"8K4>nrT3''Id60gRN`4s2sG6o?tg%6Q@21,(m74?#/V1d2@20gRQL4s2sH5smq%%6Q@21,;$94?#So0Koq.0gRQN4s2sH6oR"f%6Q@21,M0;4>eoQ0Koq.0gRQP4s2sF6UF4*%6Q@21,_<=4>fPf2a.[50gRQR4s2sG7Pd"f%6Q@21,qH?4?"r\3Bdm70gRQT4s2sH6TI+i%6Q@21-n)H4?5>T0g6%/0gRQ]4s2sJ69%Ct%6Q@21.+5J4?5hu76V/C0gRQ_4s2sG1I3l^%6Q@21.=AL4>o#T5s>`?0gRQa4s2sI2`EWY%6Q@21GD!84>]J\0g6%/0gRTM4s2sE76*4h%6Q@21GV-:4>]Jm6p;&kDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c5r1;\+?VM82+''P:4>B,X1d3$E2)$sH4q0V/5r1A^+?VM<1cRZ.4>B,X2Ei6G2*"#[4q0V/5r1G`+?VMJ3C,h<4>B,X3''JHI2+9>U4q0V/5r1Mb+?VMM5t!mG4>B,X5s?DR2+9tn4q0V/5r1hk+?VMN3&*T+4>B,X6TuVT2D@KU4q0V/5r1nm+?VP<1I4264>B,X76VhV2Dm9[4q0V/5r1to+?VP>2`*]-4>B,Y0KpUA2Dmih4q0V/5r:;[+?VP?2`<i/4>B,Y1-QgC2E!KR4q0V/5r:A]+?VP@7R]KM4>B,Y1d3$E2E<ZT4q0V/5r:G_+?VPJ3&s/34>B,Y2Ei6G2F9;X4q0V/5r:Ma+?VPL1b_*&4>B,Y3''JHI2FKnd4q0V/5r:Sc+?VPM76!I?4>B,Y5s?DR2FT>i4q0V/5r:nl+?VPN2+9\<4>B,Y6TuVT2_ZsT4q0V/5r:tn+?VS:5qtP44>B,Y76VhV2`!E^4q0V/5r;%p+?VS=7RTEL4>B,Z0KpUA2`3BW4q0V/5rCA\+?VSA2*sJ94>B,Z1-QgC2`NcU4q0V/5rCG^+?VSC3(6"?4>B,Z1d3$E2aK,a4q0V/5rCM`+?VSK2afh=4>B,Z2Ei6G2a]o#4q0V/5rCSb+?VSN3(6"?4>B,Z3''JHI3&3<L4q0V/5rCYd+?VVL0JYg$4>B,Z5s?DR3''fu!4q0V/5rCtm+?VVN3CQ+@4>B,Z6TuVT3AE9W4q0V/5rD%o+?VY=1dO;74>B,Z76VhV3AEo]4q0V/5rD+q+?VY>2E!`.4>B,[0KpUA3ANrh4q0V/5rLG]+?VY?1,(m$4>B,[1-QgC3B&WM4q0V/5rLM_+?VYC2)[W-4>B,[1d3$E3B&f_4q0V/5rLSa+?VYD0JYg$4>B,[2Ei6G3CY\k4q0V/5rLYc+?VM:1H%E+4>B,[3''JHI2)70H4q0V/5rL_e+?VM=2a]b<4>B,[5s?DR2)m?J4q0V/5rM%n+?VMM0gn274>B,[6TuVT2+B;i4q0V/5rM+p+?VP93(#k=4>B,[76VhV2D[`T4q0V/5rM1r+?VPA5t4$I4>B,\0KpUA2F^)(4q0V/5rUM^+?VSC2FK_<4>B,\1-QgC2aT8e4q0V/5rUS`+?VV<6UX*I4>B,\1d3$E3&O#g4q0V/5rUYb+?VVC7RTEL4>B,\2Ei6G3''g"n4q0V/5rU_d+?VVP1c.B*4>B,\3''JHI3AEK]4q0V/5rUef+?VYB2DdT,4>B,\5s?DR3Arla4q0V/5rV+o+?VYC1IOD94>B,\6TuVT3B/i_4q0V/5rV1q+?VYR1dO;74>B,\76VhV1e''i$4q0V/5rV7s+?VM91c@N,4>B,]0KpUA2).Hb4q0V/5r^S_+?VM:5rh+<4>B,]1-QgC2)[6G4q0V/5r^Ya+?VMN0f2''''4>B,]1d3$E2+BJj4q0V/5r^_c+?VP<5s[[D4>B,]2Ei6G2Ddch4q0V/5r^ee+?VP>76*O@4>B,]3''JHI2E!BH4q0V/5r^kg+?VP?7R93I4>B,]5s?DR2E"#b4q0V/5r_1p+?VP@0gn274>B,]6TuVT2E3]b4q0V/5r_7r+?VPA6oR:=4>B,]76VhV2E=5p4q0V/5r_=t+?VPO0f;-(4>B,^0KpUA2F]Sn4q0V/5rgY`+?VS;2E*f/4>B,^1-QgC2_d`Y4q0V/5rg_b+?VS<1-n)54>B,^1d3$E2`*fd4q0V/5rged+?VSA1I4264>B,^2Ei6G2`W`R4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@23B'',E4?#8X5s>`?0gRfZ4s2sH3CH>#%6Q@23B98G4?#P]0Koq.0gRfc4s2sH5rged%6Q@23C5nP4?#Vf2a.[50gRfe4s2sH6UXC-%6Q@23CH%R4?#Yb1d2@20gRfg4s2sH75lna%6Q@23CZ1T4?,#S2a.[50gS)Z4s2sI2+Bnr%6Q@25qtPG4?,5b1d2@20gS)\4s2sI5rCJ_%6Q@25r1\I4?,Vn7Qq8D0gS)^4s2sI6od7k%6Q@25rChK4?,bh0g6%/0gS)`4s2sJ0JY=G%6Q@25rUtM4?5)R6p;&B0gS)b4s2sJ0h!l^%6Q@25rh+O4?5;U69Yi@0gS)k4s2sJ2FKDd%6Q@25sdaX4?5bt2*MI30gS)m4s2sG2+''hs%6Q@25t!mZ4?#V]2a.[50gS)o4s2sI6p`[n%6Q@25t4$\4?52b1Hl710gS,[4s2sF68^_d%6Q@268:YH4>fJ[5s>`?0gS,]4s2sF1GppO%6Q@268LeJ4>nr_3Bdm70gS,_4s2sH1GM9]%6Q@268^qL4>efJ2a.[50gS,a4s2sF69-tg%6Q@268q(N4>fSg76V/C0gS,c4s2sG0L@HW%6Q@269.4P4>noP69Yi@0gS,l4s2sG3(,Vf%6Q@26:*jY4>oSq3Bdm70gS,n4s2sH1bqK`%6Q@26:=![4?#P]76V/C0gS,p4s2sH6o6Y_%6Q@26:O-]4?#Yg6TtrA0gS/\4s2sH75HY^%6Q@26SUbI4?,&R69Yi@0gS/^4s2sI75@.m%6Q@26SgnK4?,bc2*MI30gS/`4s2sJ1H.`d%6Q@26T%%M4?55Q3''Id60gS/b4s2sE7Puk`%6Q@26T71O4>f&T0Koq.0gS/d4s2sF6q''!t%6Q@26TI=Q4>fPn2a.[50gS/m4s2sG1GV9\%6Q@26UEsZ4?#_f5s>`?0gS/o4s2sE75I7o%6Q@26UX*\4>]Ma7Qq8D0gS/q4s2sE7Q<k$%6Q@26Uj6^4>efM5s>`?0gS2]4s2sF3CH8!%6Q@26npkJ4?,#^1d2@20gS2_4s2sF1c@W`%6Q@26o."L4>erR3''Id60gS2a4s2sF2+C"u%6Q@26o@.N4>f,U7Qq8D0gS2c4s2sF69.%i%6Q@26oR:P4>fMp76V/C0gS2e4s2sF779F*%6Q@26odFR4>o)T6p;&B0gS2n4s2sG2`!0P%6Q@26pa''[4>o,f0g6%/0gS2p4s2sG3&3c`%6Q@26ps3]4>oPq3''Id60gS2r4s2sG6o-S^%6Q@26q0?_4>oVb5s>`?0gS5^4s2sG7Q<e"%6Q@2756tK4?"r\2a.[50gS5`4s2sH1IWu]%6Q@275I+M4?#,W2a.[50gS5b4s2sH6Sq.o%6Q@275[7O4?#Y^1-Q.00gS5d4s2sH6o%+n%6Q@275mCQ4?#Yo1-Q.00gS5f4s2sI1,26^%6Q@276*OS4?,5e69Yi@0gS5o4s2sI5r1hk%6Q@277''0\4?,Vd2*MI30gS5q4s2sI6oQe`%6Q@2779<^4?,bh5s>`?0gS5s4s2sI7Pcha%6Q@277KH`4?5)O0g6%/0gS8_4s2sJ0f2<_%6Q@27PR(L4?5,R1-Q.00gS8a4s2sJ1c.$Q%6Q@27Pd4N4?5Di0Koq.0gS8c4s2sH5t3ju%6Q@27Q!@P4?#Vn2*MI30gS8e4s2sE7RKI*%6Q@27Q3LR4>eiI0g6%/0gS8g4s2sF0gdi_%6Q@27QEXT4>f&b3''Id60gS8p4s2sF6:F@-%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>B,k69ZMS2+''i"4q0V/5t44*+?VP?2*!i04>B,k6p;_U2F0,e4q0V/5t4:,+?VPM2*jD84>B,k7QqqW2FTVa4q0V/681)W+?VPO7706J4>B/V0g6^B2_d!R4q0V/681/Y+?VS?2F]k>4>B/V1HlpD2aKkg4q0V/6815[+?VVC1,;$&4>B/V2*N-F3A<3C4q0V/681;]+?VY<2`3c.4>B/V2a/?H3As5k4q0V/681A_+?VYE7RfQN4>B/V3BeQJ3&<6C4q0V/681\h+?VJL1.4;84>B/V69ZMS1dskh4q0V/681bj+?VVC1c@N,4>B/V6p;_U3AElh4q0V/681hl+?VM;2afh=4>B/V7QqqW2F0_t4q0V/68:/X+?VPB2F9S:4>B/W0g6^B2FB;U4q0V/68:5Z+?VV?2aKV:4>B/W1HlpD2)mTb4q0V/68:;\+?VP:3(6"?4>B/W2*N-F2E"#n4q0V/68:A^+?VP;77KHM4>B/W2a/?H2_[Wf4q0V/68:G`+?VS?0ekj$4>B/W3BeQJ2`3r]4q0V/68:bi+?VSO2)7?)4>B/W69ZMS3&Er]4q0V/68:hk+?VVM1c[`/4>B/W6p;_U3(,G[4q0V/68:nm+?VJL1dXA84>B/W7QqqW2)@Ze4q0V/68C5Y+?VM<5sdaE4>B/X0g6^B2)d<F4q0V/68C;[+?VM?1b_*&4>B/X1HlpD2+Btm4q0V/68CA]+?VP<0JPa#4>B/X2*N-F2D[$G4q0V/68CG_+?VP=2F]k>4>B/X2a/?H2Dm6Z4q0V/68CMa+?VP>76!I?4>B/X3BeQJ2E!K[4q0V/68Chj+?VP@3CH%?4>B/X69ZMS2E*rY4q0V/68Cnl+?VPK2DRH*4>B/X6p;_U2FBAV4q0V/68Ctn+?VPL3C,h<4>B/X7QqqW2F]Gh4q0V/68L;Z+?VSA75[7<4>B/Y0g6^B2`NQM4q0V/68LA\+?VSC1c[`/4>B/Y1HlpD2`W`S4q0V/68LG^+?VSN0f_E,4>B/Y2*N-F3&!WR4q0V/68LM`+?VV<0JYg$4>B/Y2a/?H3&*lY4q0V/68LSb+?VV=3CH%?4>B/Y3BeQJ3&3fZ4q0V/68Lnk+?VVB0fV?+4>B/Y69ZMS3''fMk4q0V/68Ltm+?VVO0Jks&4>B/Y6p;_U3(-)%4q0V/68M%o+?VY<2_mQ+4>B/Y7QqqW2`=,^4q0V/68UA[+?VSK0f_E,4>B/Z0g6^B2aK5Y4q0V/68UG]+?VSO2)IK+4>B/Z1HlpD3&!9M4q0V/68UM_+?VM=0K20)4>B/Z2*N-F2)RcY4q0V/68USa+?VM@2`3c.4>B/Z2a/?H2D[*X4q0V/68UYc+?VP=1,;$&4>B/Z3BeQJ2E!BP4q0V/68Utl+?VP?1dXA84>B/Z69ZMS2E3T_4q0V/68V%n+?VPB3C5n=4>B/Z6p;_U2F9A[4q0V/68V+p+?VPM1,V6)4>B/Z7QqqW2FTqe4q0V/68^G\+?VS=6UX*I4>B/[0g6^B2`*EP4q0V/68^M^+?VS>5qtP44>B/[1HlpD2`3HZ4q0V/68^S`+?VS?69.4=4>B/[2*N-F2`=)Z4q0V/68^Yb+?VSA0h"884>B/[2a/?H2`E]_4q0V/68^_d+?VSC75d==4>B/[3BeQJ2aoD\4q0V/68_%m+?VSO0gn274>B/[69ZMS3&*lh4q0V/68_+o+?VV@1.FG:4>B/[6p;_U3&ioW4q0V/68_1q+?VVL1I426ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0g[`e4s2sI6UWXm%6Q@32D@<;4?,bu69Yi@0g[cQ4s2sI7RAdm%6Q@32DRH=4?5)O1-Q.00g[cS4s2sJ1I4Dm%6Q@32DdT?4?5;X1Hl710g[cU4s2sJ2E*EU%6Q@32E!`A4?5>S2a.[50g[cW4s2sE7Q<4g%6Q@32E3lC4>eoa0g6%/0g[cY4s2sF3CQ4t%6Q@32F0ML4>fDl3Bdm70g[cb4s2sF756ed%6Q@32FBYN4>o/U76V/C0g[cd4s2sH1da/b%6Q@32FTeP4?#,a76V/C0g[cf4s2sH3CPql%6Q@32_[E<4?#Pd1-Q.00g[fR4s2sI0gRTZ%6Q@32_mQ>4?,5f6p;&B0g[fT4s2sI6Ua:)%6Q@32`*]@4?,_r6TtrA0g[fV4s2sI7R]^/%6Q@32`<iB4>o&W7Qq8D0g[fX4s2sG2_d0R%6Q@32`NuD4>f&e2a.[50g[fZ4s2sG7Q!+g%6Q@32aKVM4?#Yr6p;&B0g[fc4s2sI7P[Fs%6Q@32a]bO4?52e2EhR40g[fe4s2sJ2FBAd%6Q@32aonQ4>fSp2*MI30g[fg4s2sG0h*o^%6Q@33&!N=4>oYg1d2@20g[iS4s2sE756V_%6Q@33&3Z?4>]Mf3''Id60g[iU4s2sF0JQ$\%6Q@33&EfA4>eo^3Bdm70g[iW4s2sF2+0nt%6Q@33&WrC4>fMb7Qq8D0g[iY4s2sF6q''O.%6Q@33&j)E4>oM]0g6%/0g[i[4s2sG68gYa%6Q@33''f_N4?#5e69Yi@0g[id4s2sH69.=q%6Q@33(#kP4?,bd3Bdm70g[if4s2sI770@)%6Q@33(6"R4?5)R76V/C0g[ih4s2sG1Gh*U%6Q@33A<W>4>o#P76V/C0g[lT4s2sH2`*3P%6Q@33ANc@4?#Pc1d2@20g[lV4s2sJ1GVE`%6Q@33A`oB4?55W7Qq8D0g[lX4s2sJ7Q*Or%6Q@33As&D4>o#_0Koq.0g[lZ4s2sG7R9L-%6Q@33B02F4?"u`2EhR40g[l\4s2sH1dO)b%6Q@33C,hO4?#)b5s>`?0g[le4s2sH5smIm%6Q@33C>tQ4?#V^1-Q.00g[lg4s2sH76!%d%6Q@33CQ+S4?#Vo1-Q.00g[li4s2sH76*=k%6Q@35qkJF4?,Yf5s>`?0g\/\4s2sI6ngnj%6Q@35r(VH4?55W6p;&B0g\/^4s2sJ3AE3O%6Q@35r:bJ4?5DY6TtrA0g\/`4s2sF1,CpS%6Q@35rLnL4>fGn7Qq8D0g\/b4s2sG1ds;d%6Q@35r_%N4>o,R6p;&B0g\/d4s2sH6o%1p%6Q@35s[[W4>ef]6p;&B0g\/m4s2sF1IEr^%6Q@35smgY4>f)W3Bdm70g\/q4s2sG0h+Gm%6Q@3681SG4>o&_6TtrA0g\2]4s2sH5t!^s%6Q@368C_I4?,Yf1-Q.00g\2_4s2sI69-qf%6Q@368UkK4>efH3Bdm70g\2a4s2sF0JY@H%6Q@368h"M4>elQ2*MI30g\2c4s2sF2)?sN%6Q@369%.O4>fD\6TtrA0g\2e4s2sF77Amo%6Q@36:!dX4>fSe0Koq.0g\2n4s2sG0f(XM%6Q@36:3pZ4>o&S76V/C0g\2p4s2sG2D@K^%6Q@36:F''\4>o)R2EhR40g\2r4s2sG2F0)^%6Q@36SL\H4>o2e6p;&B0g\5^4s2sG77/mq%6Q@36S^hJ4>oYb1-Q.00g\5`4s2sH1GLdO%6Q@36SptL4?#/R0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c6:3Uo+?VSK3AWi.4>B/i2Ei6G3&*3L4q0V/6:3[q+?VV=2*!i04>B/i3''JHI3&<r\4q0V/6:3as+?VV?6:3pG4>B/i5s?DR2)%?S4q0V/6:4(''+?VM?7PI"84>B/i6TuVT2*sYa4q0V/6:4.)+?VMJ76!I?4>B/i76VhV2+BJa4q0V/6:44++?VP<5qtP44>B/j0KpUA2`NQN4q0V/6:<Ol+?VSN68^q94>B/j1-QgC3&<ri4q0V/6:<Un+?VV@1,1s%4>B/j1d3$E3AEl[4q0V/6:<[p+?VY=7Q!@=4>B/j2Ei6G2).''V4q0V/6:<ar+?VP@7Q!@=4>B/j3''JHI2aTA[4q0V/6:<gt+?VVN5smgF4>B/j5s?DR2).HT4q0V/6:=.(+?VMA6:*jF4>B/j6TuVT2D@Hc4q0V/6:=4*+?VVA2)RQ,4>B/j76VhV2)$aP4q0V/6:=:,+?VM:2)IK+4>B/k0KpUA2+''/c4q0V/6:EUm+?VP:2afh=4>B/k1-QgC2DR!Q4q0V/6:E[o+?VP;6o."94>B/k1d3$E2DdlY4q0V/6:Eaq+?VP>5rCh84>B/k2Ei6G2FTu#4q0V/6:Egs+?VS@1,(m$4>B/k3''JHI3&**Q4q0V/6:Emu+?VVP2D@<(4>B/k5s?DR3Ar`a4q0V/6:F4)+?VYB6:*jF4>B/k6TuVT1dsf%4q0V/6:F:++?VM;1c%<)4>B/k76VhV2)RBR4q0V/6:F@-+?VMA1-%N-4>B/l0KpUA2+0i#4q0V/6:N[n+?VP=6T%%:4>B/l1-QgC2FBhl4q0V/6:Nap+?VPM7R93I4>B/l1d3$E2`!HN4q0V/6:Ngr+?VSK2b#t?4>B/l2Ei6G3&33T4q0V/6:Nmt+?VV@5rLn94>B/l3''JHI3($+k4q0V/6:Nt!+?VVP0ebd#4>B/l5s?DR3A<BN4q0V/6:O:*+?VY=75mC>4>B/l6TuVT3Aj5[4q0V/6:O@,+?VYB1,1s%4>B/l76VhV3B'';`4q0V/6:OF.+?VM97Q<R@4>B2W0KpUA2)IcX4q0V/6SL5Y+?VM=3&Wr04>B2W1-QgC2+Bnm4q0V/6SL;[+?VP=5r:b74>B2W1d3$E2F]Yc4q0V/6SLA]+?VSN68Uk84>B2W2Ei6G3(>Vl4q0V/6SLG_+?VVQ1djM:4>B2W3''JHI3A`NL4q0V/6SLMa+?VM86TI=>4>B2W5s?DR2+'')V4q0V/6SLhj+?VPL6:F''I4>B2W6TuVT2FL#$4q0V/6SLnl+?VS?0g\&54>B2W76VhV2`F&i4q0V/6SLtn+?VSM1IOD94>B2X0KpUA2a]J[4q0V/6SU;Z+?VVL2`X&24>B2X1-QgC3''fne4q0V/6SUA\+?VM@0h"884>B2X1d3$E2*!ul4q0V/6SUG^+?VMM0fD3)4>B2X2Ei6G2D[9N4q0V/6SUM`+?VS<2)7?)4>B2X3''JHI2`3Q\4q0V/6SUSb+?VSA2F9S:4>B2X5s?DR3''fr"4q0V/6SUnk+?VVN6:3pG4>B2X6TuVT3(>VX4q0V/6SUtm+?VMM7Pd4;4>B2X76VhV2E!KN4q0V/6SV%o+?VPM7Q<R@4>B2Y0KpUA3&!9Z4q0V/6S^A[+?VV>6SUb64>B2Y1-QgC3''fnu4q0V/6S^G]+?VYC2).9(4>B2Y1d3$E3C6+l4q0V/6S^M_+?VM:1c%<)4>B2Y2Ei6G2E"#o4q0V/6S^Sa+?VPM3Aiu04>B2Y3''JHI2FU&(4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@41-%N@4?#Ys0Koq.0gd]^4s2sI5t*[q%6Q@41."/I4?5)N76V/C0gd]`4s2sJ0Ju9_%6Q@41.4;K4?5\q1d2@20gd]b4s2sF1,20\%6Q@41.FGM4>elQ7Qq8D0gd`N4s2sF1dsAf%6Q@41GM''94>noS1d2@20gd`P4s2sG1,q*S%6Q@41G_3;4>nr_69Yi@0gd`R4s2sG3''f;`%6Q@41Gq?=4>o2S1-Q.00gd`T4s2sG3Aj)d%6Q@41H.K?4>oJ]2*MI30gd`V4s2sH0KCmP%6Q@41H@WA4?"uM2EhR40gd`_4s2sH3&O)f%6Q@41I=8J4?#8S0g6%/0gd`a4s2sH3A<lc%6Q@41IODL4?#8g1-Q.00gd`c4s2sH5qk\j%6Q@41IaPN4?,#T2EhR40gdcO4s2sI1,h0V%6Q@41bh0:4?,)a2*MI30gdcQ4s2sI1Gh*U%6Q@41c%<<4?,2T3Bdm70gdcS4s2sI6T?hb%6Q@41c7H>4?,_g2*MI30gdcU4s2sJ0fCdN%6Q@41cIT@4?5,U69Yi@0gdcW4s2sJ0gS5l%6Q@41c[`B4>]Mp1Hl710gdc`4s2sF2FK8`%6Q@41dXAK4?"u`6p;&B0gdcb4s2sH2afSg%6Q@41djMM4?,8R0Koq.0gdcd4s2sI3CYtl%6Q@41e''YO4>fGp3''Id60gdfP4s2sF7RT-u%6Q@42).9;4>o,U0g6%/0gdfR4s2sJ0L7Z^%6Q@42)@E=4>eo`1-Q.00gdfT4s2sF3&Nuc%6Q@42)RQ?4>fGp2*MI30gdfV4s2sG0L7NZ%6Q@42)d]A4>noR0g6%/0gdfX4s2sG1c@$O%6Q@42*!iC4?#\b6p;&B0gdfa4s2sI0K1[L%6Q@42*sJL4?,2R2*MI30gdfc4s2sJ1,q''R%6Q@42+0VN4>o#^76V/C0gdfe4s2sF0L8&i%6Q@42+BbP4>fM]1d2@20gdiQ4s2sG2_ZpL%6Q@42DIB<4>f)Y6TtrA0gdiS4s2sG1."Am%6Q@42D[N>4>nu]3''Id60gdiU4s2sG3A<lc%6Q@42DmZ@4>o2Y3''Id60gdiW4s2sG5qtel%6Q@42E*fB4>oVd69Yi@0gdiY4s2sH2F9\n%6Q@42E<rD4?#8f69Yi@0gdib4s2sI1.";k%6Q@42F9SM4?,/Q3Bdm70gdid4s2sI5sn+*%6Q@42FK_O4?,_p3''Id60gdif4s2sI7Rfd0%6Q@42F]kQ4?5,N1-Q.00gdlR4s2sJ0f23\%6Q@42_dK=4?5,V6TtrA0gdlT4s2sJ1GLRI%6Q@42`!W?4?52P3''Id60gdlV4s2sJ1H@`b%6Q@42`3cA4?5;f69Yi@0gdlX4s2sJ5r1D_%6Q@42`EoC4?5b_6p;&B0gdlZ4s2sE756M\%6Q@42`X&E4?#,T6TtrA0gdlc4s2sH3Aj2g%6Q@42aT\N4?#Pq5s>`?0gdle4s2sH68^J]%6Q@42afhP4?#So3Bdm70gdlg4s2sH75@:q%6Q@42b#tR4?,/b1d2@20gdoS4s2sI75[(h%6Q@43&*T>4?,bg1d2@20gdoU4s2sI77K7#%6Q@43&<`@4?5)M0Koq.0gdoW4s2sG2DR-R%6Q@43&NlB4>o2U7Qq8D0gdoY4s2sH1c.!P%6Q@43&a#D4>ei_5s>`?0gdo[4s2sG2_mfc%6Q@43&s/F4?5hu6TtrA0gdod4s2sF0f1aO%6Q@43''oeO4>fSs0Koq.0gdof4s2sG6TI%g%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>B2_6p;_U3&a;^4q0V/6T@Lu+?VVC2+0V;4>B2_7QqqW3&iiU4q0V/6THha+?VP968Uk84>B2`0g6^B3&*`W4q0V/6THnc+?VV?0Jbm%4>B2`1HlpD3(,GX4q0V/6THte+?VM;6oI4<4>B2`2*N-F2)I*L4q0V/6TI%g+?VM>1Gh9)4>B2`2a/?H2*j#V4q0V/6TI+i+?VMK1GM''&4>B2`3BeQJ2_[3W4q0V/6TIFr+?VSP75-n74>B2`69ZMS3&!3U4q0V/6TILt+?VV<0K)*(4>B2`6p;_U3&*ii4q0V/6TIS!+?VVO5r1\64>B2`7QqqW3AEKR4q0V/6U<Ci+?VYM2+Bb=4>B2h0g6^B3CH=l4q0V/6U<Ik+?VM82`*]-4>B2h1HlpD1dsbg4q0V/6U<Om+?VM;5qkJ34>B2h2*N-F2D@Te4q0V/6U<Uo+?VPN1.+574>B2h2a/?H2+''8Y4q0V/6U<[q+?VJM3&j)24>B2h3BeQJ2)$dB4q0V/6U="%+?VM=75R1;4>B2h69ZMS2+''bl4q0V/6U=(''+?VMM2+Bb=4>B2h6p;_U2D@$H4q0V/6U=.)+?VPA3A`o/4>B2h7QqqW2FBet4q0V/6UEIj+?VPM6Spt94>B2i0g6^B2_dWf4q0V/6UEOl+?VS?6o7(:4>B2i1HlpD2`4&]4q0V/6UEUn+?VS@2DIB)4>B2i2*N-F2aK/a4q0V/6UE[p+?VSK1c[`/4>B2i2a/?H2ag"l4q0V/6UEar+?VSN7RB9J4>B2i3BeQJ2b#\o4q0V/6UF(&+?VV<7Pm:<4>B2i69ZMS3&X&_4q0V/6UF.(+?VVQ0ge,64>B2i6p;_U3As5b4q0V/6UF4*+?VYE68Le74>B2i7QqqW3CYk]4q0V/6UNOk+?VM:1cIT-4>B2j0g6^B2)7NV4q0V/6UNUm+?VYD779<K4>B2j1HlpD3&s8j4q0V/6UN[o+?VJL0Jbm%4>B2j2*N-F2E+#Z4q0V/6UNaq+?VPO0K)*(4>B2j2a/?H1e''eh4q0V/6UNgs+?VMJ75@%94>B2j3BeQJ2E*WR4q0V/6UO.''+?VPL3&j)24>B2j69ZMS2FKJ`4q0V/6UO4)+?VS>0g\&54>B2j6p;_U2`NQO4q0V/6UO:++?VY=6ps3J4>B2j7QqqW3AWT]4q0V/6UWUl+?VVB6Spt94>B2k0g6^B2`X;`4q0V/6UW[n+?VSK1GM''&4>B2k1HlpD2+C#$4q0V/6UWap+?VJL6oI4<4>B2k2*N-F2)ITU4q0V/6UWgr+?VM=1IXJ:4>B2k2a/?H2)mlj4q0V/6UWmt+?VMA5rCh84>B2k3BeQJ2D@TS4q0V/6UX4(+?VP;2)@E*4>B2k69ZMS2DRZY4q0V/6UX:*+?VP@1H%E+4>B2k6p;_U2E<WP4q0V/6UX@,+?VV=1Gq?*4>B2k7QqqW3Ar]J4q0V/6U`[m+?VYE68:Y54>B2l0g6^B3B9Jq4q0V/6U`ao+?VM81.+574>B2l1HlpD2)@*G4q0V/6U`gq+?VM=1c.B*4>B2l2*N-F2)dH]4q0V/6U`ms+?VP;2)mc/4>B2l2a/?H2DdiX4q0V/6U`su+?VP?2F9S:4>B2l3BeQJ2E+#l4q0V/6Ua:)+?VPO6SUb64>B2l69ZMS2F^,)4q0V/6Ua@++?VS>1,;$&4>B2l6p;_U2`*<M4q0V/6UaF-+?VVL0fM9*4>B2l7QqqW3A`NO4q0V/6Uian+?VM<2).9(ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0geDb4s2sF2D@$Q%6Q@47P[.M4>f&U2EhR40geDd4s2sF7Pm(g%6Q@47Pm:O4>noS5s>`?0geDf4s2sG68V+p%6Q@47Q*FQ4?"rO3''Id60geDh4s2sH0L8)j%6Q@47Q<RS4?#Yp69Yi@0geDj4s2sI5rged%6Q@47R93\4>f,W5s>`?0geDs4s2sI0eu''Z%6Q@47RK?^4>nu]1-Q.00geDu4s2sH2_[3T%6Q@47R]K`4?,#N6p;&B0geE"4s2sI6U="%%6Q@50JG[54>f)U1d2@20gm]M4s2sG1bqH_%6Q@50JYg74>o2d69Yi@0gm]O4s2sF69-ne%6Q@50Jks94>fP^0g6%/0gm]Q4s2sG75dV!%6Q@50K)*;4?,2V3Bdm70gm]S4s2sF0f26]%6Q@50K;6=4>eoa0Koq.0gm]U4s2sF3ANla%6Q@50L7lF4>nlK0Koq.0gm]^4s2sG0f23\%6Q@50LJ#H4>oMc2EhR40gm]`4s2sG6T6\_%6Q@50L\/J4>oPr0Koq.0gm]b4s2sH68:nm%6Q@50ebd64?,#^76V/C0gm`N4s2sI1.3r_%6Q@50etp84?,_r2EhR40gm`P4s2sJ0L@HW%6Q@50f2'':4?5Af0g6%/0gm`R4s2sG1da2c%6Q@50fD3<4>oYp1d2@20gm`T4s2sG1c[9S%6Q@50fV?>4>o&N1d2@20gm`V4s2sF0f2<_%6Q@50gRuG4>erM0Koq.0gm`_4s2sF2_dcc%6Q@50ge,I4?,V\76V/C0gm`a4s2sG0f;Ea%6Q@50h"8K4>o/X2EhR40gm`c4s2sH2+0bp%6Q@51,(m74?#Sa1-Q.00gmcO4s2sH6oQha%6Q@51,;$94?5)M5s>`?0gmcQ4s2sF3&!6S%6Q@51,M0;4>o2e6TtrA0gmcS4s2sI0fMQc%6Q@51,_<=4?,>V5s>`?0gmcU4s2sJ0JG1E%6Q@51,qH?4?5AW3Bdm70gmcW4s2sF0K1sT%6Q@51-n)H4>f,V2a.[50gmc`4s2sF3C-"r%6Q@51.+5J4>nrT2*MI30gmcb4s2sJ0JGs[%6Q@51.=AL4?5_`5s>`?0gmcd4s2sG0f;?_%6Q@51GD!84?##S3Bdm70gmfP4s2sJ2+0>d%6Q@51GV-:4>f&U0g6%/0gmfR4s2sF5r:J`%6Q@51Gh9<4>fMr1d2@20gmfT4s2sG1,qQ`%6Q@51H%E>4>o#^6p;&B0gmfV4s2sG1e''bp%6Q@51H7Q@4>o,W2a.[50gmfX4s2sG6U`ao%6Q@51I42I4>oS`76V/C0gmfa4s2sH1,;3\%6Q@51IF>K4?#)Q2EhR40gmfc4s2sH3&<BT%6Q@51IXJM4?#_g2a.[50gmfe4s2sI1-n;l%6Q@51b_*94?,_s69Yi@0gmiQ4s2sJ3&*?U%6Q@51bq6;4>elL1d2@20gmiS4s2sF2`*9R%6Q@51c.B=4>o,W7Qq8D0gmiU4s2sH1,LsS%6Q@51c@N?4?#)c1Hl710gmiW4s2sI6U<^r%6Q@51cRZA4?,er2EhR40gmiY4s2sJ1,1LI%6Q@51dO;J4?5;T5s>`?0gmib4s2sF0fD?^%6Q@51daGL4>eo`6p;&B0gmid4s2sG1GhH_%6Q@51dsSN4>]Mc3Bdm70gmif4s2sF2)$jN%6Q@52)%3:4>nlR2EhR40gmlR4s2sG2)R<V%6Q@52)7?<4>oPe69Yi@0gmlT4s2sG6oRS!%6Q@52)IK>4?##P6TtrjDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c6o?hc+?VS<7RTEL4>B5]2Ei6G2aK/W4q0V/6o?ne+?VVD3&a#14>B5]3''JHI3(#\o4q0V/6o?tg+?VMN2FK_<4>B5]5s?DR2F]Yp4q0V/6o@:p+?VS:7QEXA4>B5]6TuVT3&*]Y4q0V/6o@@r+?VP:0L\/74>B5]76VhV1e''f$4q0V/6o@Ft+?VM81e''Y<4>B5^0KpUA2DR*D4q0V/6oHb`+?VS<1cIT-4>B5^1-QgC2aTkj4q0V/6oHhb+?VSN76!I?4>B5^1d3$E2b$4r4q0V/6oHnd+?VY<1djM:4>B5^2Ei6G3B''5l4q0V/6oHtf+?VYM0f_E,4>B5^3''JHI3($"j4q0V/6oI%h+?VM?2F0M94>B5^5s?DR2+9G[4q0V/6oI@q+?VP@681S44>B5^6TuVT3&E<W4q0V/6oIFs+?VVL2)RQ,4>B5^76VhV2)I''B4q0V/6oILu+?VMJ0fD3)4>B5_0KpUA2+9DZ4q0V/6oQha+?VMM75@%94>B5_1-QgC2+B8c4q0V/6oQnc+?VP>3&<`-4>B5_1d3$E3&!Zb4q0V/6oQte+?VV@1IOD94>B5_2Ei6G3AicV4q0V/6oR%g+?VYB2*sJ94>B5_3''JHI1e'';]4q0V/6oR+i+?VM;0Ju$''4>B5_5s?DR2)?pS4q0V/6oRFr+?VM;0Le584>B5_6TuVT2)I9N4q0V/6oRLt+?VM<7R93I4>B5_76VhV2)d3F4q0V/6oRS!+?VMM0Jbm%4>B5`0KpUA2D?jD4q0V/6oZnb+?VP;3C5n=4>B5`1-QgC2DRTR4q0V/6oZtd+?VP<2)RQ,4>B5`1d3$E2FBnf4q0V/6o[%f+?VPM2E!`.4>B5`2Ei6G2`3oV4q0V/6o[+h+?VSB1GV-''4>B5`3''JHI3&!`h4q0V/6o[1j+?VV<1.FG:4>B5`5s?DR3&3lj4q0V/6o[Ls+?VV?2DIB)4>B5`6TuVT3&ErW4q0V/6o[Ru+?VVC3(,q>4>B5`76VhV3&r]K4q0V/6o[Y"+?VY<0L@r44>B5a0KpUA3AO#h4q0V/6octc+?VYD7RTEL4>B5a1-QgC3C5_\4q0V/6od%e+?VMM1c7H+4>B5a1d3$E2E!lY4q0V/6od+g+?VP?6ps3J4>B5a2Ei6G2_Zs@4q0V/6od1i+?VS<0K)*(4>B5a3''JHI1e''ql4q0V/6od7k+?VM:2afh=4>B5a5s?DR2+BJi4q0V/6odRt+?VP:2)@E*4>B5a6TuVT2E*KL4q0V/6odY!+?VPJ0f_E,4>B5a76VhV2F]AU4q0V/6od_#+?VS>75@%94>B5i0KpUA2`WcU4q0V/6pWOk+?VVC2E3l04>B5i1-QgC3(#Vb4q0V/6pWUm+?VYD6T71<4>B5i1d3$E3B0A_4q0V/6pW[o+?VYM1c%<)4>B5i2Ei6G2)IZT4q0V/6pWaq+?VSK0h+>94>B5i3''JHI2E<WN4q0V/6pWgs+?VVL7Q3L?4>B5i5s?DR3(#Mg4q0V/6pX.''+?VYD5r_%;4>B5i6TuVT3B9Ao4q0V/6pX4)+?VMN2a]b<4>B5i76VhV2DRQb4q0V/6pX:++?VS?68C_64>B5j0KpUA2`<rj4q0V/6p`Ul+?VVC5sdaE4>B5j1-QgC3A<B]4q0V/6p`[n+?VYB1bq6(4>B5j1d3$E2)@$K4q0V/6p`ap+?VMN1IF>84>B5j2Ei6G2+Bqj4q0V/6p`gr+?VPL6UO$H4>B5j3''JHI2`!fg4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@569.4P4?#,U1-Q.00gn>o4s2sH2)mod%6Q@56:*jY4?#S`2EhR40gn>q4s2sI1.F\r%6Q@56:=![4?5D^6p;&B0gn>s4s2sE75RIt%6Q@56:O-]4?5)O6TtrA0gnA_4s2sE75.%l%6Q@56SUbI4>]Mb2*MI30gnAa4s2sF1I3o_%6Q@56SgnK4>f,Q7Qq8D0gnAc4s2sF770$u%6Q@56T%%M4>o)R0Koq.0gnAe4s2sG6UERm%6Q@56T71O4?#)S2*MI30gnAg4s2sI1H.6V%6Q@56TI=Q4?,8X2EhR40gnAp4s2sI6UNOk%6Q@56UEsZ4?5)Q0Koq.0gnAr4s2sJ2_d`b%6Q@56UX*\4?5b`2*MI30gnAt4s2sF3(,Jb%6Q@56Uj6^4>fGa3''Id60gnD`4s2sI2Dm0P%6Q@56npkJ4?,Y^1d2@20gnDb4s2sJ6p`^o%6Q@56o."L4>fGn1-Q.00gnDd4s2sG0K(mS%6Q@56o@.N4>nlQ6p;&B0gnDf4s2sG2+B;a%6Q@56oR:P4>oPa2a.[50gnDh4s2sG7PZ__%6Q@56odFR4>oYp1Hl710gnDq4s2sH0JPjW%6Q@56pa''[4?#_e2*MI30gnDs4s2sH7Rf''q%6Q@56q0?_4?5;W0Koq.0gnGa4s2sJ2afGc%6Q@5756tK4>elQ1-Q.00gnGc4s2sI7Plqc%6Q@575I+M4>ei_6p;&B0gnGe4s2sF1bqB]%6Q@575[7O4>er^3''Id60gnGg4s2sF2)[6S%6Q@575mCQ4>euU5s>`?0gnGi4s2sG5sdn%%6Q@576*OS4>oSo2*MI30gnGr4s2sH6ps!u%6Q@577''0\4?,)S2EhR40gnGt4s2sJ1-%]c%6Q@5779<^4?5;Y2a.[50gnH!4s2sJ75m4j%6Q@577KH`4>erL3''Id60gnJb4s2sF1da5d%6Q@57PR(L4?#/d1-Q.00gnJd4s2sI2FTGd%6Q@57Pd4N4?58b1d2@20gnJf4s2sJ2+08b%6Q@57Q!@P4?5;W6TtrA0gnJh4s2sE76r[m%6Q@57Q3LR4>]M]3Bdm70gnJj4s2sF3CQA#%6Q@57QEXT4>fDn2EhR40gnJs4s2sF6q0+!%6Q@57RB9]4>nlN1-Q.00gnJu4s2sG1-%9W%6Q@57RTE_4>o,V6p;&B0gnK"4s2sG3&E?R%6Q@57RfQa4>oPd2EhR40h!cM4s2sG75@=r%6Q@60JPa64?#_c3''Id60h!cO4s2sI0KDH`%6Q@60Jbm84?,)O5s>`?0h!cQ4s2sJ3&!3R%6Q@60Ju$:4>]Jm2*MI30h!cS4s2sF0Jt^O%6Q@60K20<4>er^1Hl710h!cU4s2sF2`WZX%6Q@60KD<>4>f,V5s>`?0h!c^4s2sF68ghf%6Q@60L@rG4>fGl1Hl710h!c`4s2sG0gdoa%6Q@60LS)I4>o2Y2a.[50h!cb4s2sG6oR%g%6Q@60Le5K4?"rL1Hl710h!fN4s2sI2b#ek%6Q@60ekj74?,>i1Hl710h!fP4s2sI5rUP_%6Q@60f)!94?,Vq2a.[50h!fR4s2sJ0K:gO%6Q@60f;-;4?5Dj6p;&B0h!fT4s2sJ5sdOp%6Q@60fM9=4>el\76V/C0h!fV4s2sG3&<NX%6Q@60f_E?4>efI2EhR40h!f_4s2sF75m1i%6Q@60g\&H4>o,T7Qq8D0h!fa4s2sI1Gh$S%6Q@60gn2J4?,;W6TtrA0h!fc4s2sE76s7(%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>B8Z7QqqW2)I$B4q0V/75?P\+?VM>5t*sH4>B8[0g6^B2`!l\4q0V/75?V^+?VY=0f;-(4>B8[1HlpD3B''Ds4q0V/75?\`+?VYE0KD<+4>B8[2*N-F3B8rU4q0V/75?bb+?VYE3B9844>B8[2a/?H2)[<J4q0V/75?hd+?VM@3CZ1A4>B8[3BeQJ3&WW\4q0V/75@.m+?VVL1GM''&4>B8[69ZMS2DINR4q0V/75@4o+?VPJ7Q*F>4>B8[6p;_U2`!BZ4q0V/75@:q+?VVP6o$q84>B8[7QqqW2F95Z4q0V/75HV]+?VYB5s[[D4>B8\0g6^B3C,M]4q0V/75H\_+?VMA2)RQ,4>B8\1HlpD2_m''@4q0V/75Hba+?VVO2F9S:4>B8\2*N-F3B&iV4q0V/75Hhc+?VJM6o7(:4>B8\2a/?H2+''hi4q0V/75Hne+?VMN1,_<*4>B8\3BeQJ2DIZ\4q0V/75I4n+?VP?2*sJ94>B8\69ZMS2FBo"4q0V/75I:p+?VS:5sdaE4>B8\6p;_U2`!EM4q0V/75I@r+?VS=69.4=4>B8\7QqqW2`!ol4q0V/75Q\^+?VSA1-%N-4>B8]0g6^B2`EQ]4q0V/75Qb`+?VSN1c%<)4>B8]1HlpD2afPZ4q0V/75Qhb+?VSO1,D*''4>B8]2*N-F3&39K4q0V/75Qnd+?VVC2)7?)4>B8]2a/?H3($+i4q0V/75Qtf+?VY>1c[`/4>B8]3BeQJ3B/od4q0V/75R:o+?VMJ2).9(4>B8]69ZMS2aKAZ4q0V/75R@q+?VVC1b_*&4>B8]6p;_U3B/]I4q0V/75RFs+?VMI6UO$H4>B8]7QqqW1e''nf4q0V/75Zb_+?VM;2)IK+4>B8^0g6^B2*!H]4q0V/75Zha+?VMK7RTEL4>B8^1HlpD2D[-X4q0V/75Znc+?VPM2`X&24>B8^2*N-F2_mi_4q0V/75Zte+?VV<0Ju$''4>B8^2a/?H3&**G4q0V/75[%g+?VV>5r(V54>B8^3BeQJ3ANrk4q0V/75[@p+?VYD1GD!%4>B8^69ZMS1ds\i4q0V/75[Fr+?VM91c.B*4>B8^6p;_U2)6m@4q0V/75[Lt+?VM?3''oe<4>B8^7QqqW2+BJZ4q0V/75ch`+?VPL6S^h74>B8_0g6^B2FTu%4q0V/75cnb+?VS:0Ju$''4>B8_1HlpD2_[*C4q0V/75ctd+?VS:5t4$I4>B8_2*N-F2_d<J4q0V/75d%f+?VS=76*O@4>B8_2a/?H2`*EQ4q0V/75d+h+?VV>1dO;74>B8_3BeQJ3&a,Y4q0V/75dFq+?VVC2DIB)4>B8_69ZMS3A<-H4q0V/75dLs+?VY<5r(V54>B8_6p;_U3AWrW4q0V/75dRu+?VYE5r_%;4>B8_7QqqW2).!X4q0V/75lna+?VMN2)d].4>B8`0g6^B2D@QR4q0V/75ltc+?VP:2E*f/4>B8`1HlpD2E!lX4q0V/75m%e+?VV@2*!i04>B8`2*N-F3(5Yi4q0V/75m+g+?VY=5t4$I4>B8`2a/?H3B&oa4q0V/75m1i+?VJL1dsS;4>B8`3BeQJ1dsD[4q0V/75mLr+?VM<2a]b<4>B8`69ZMS2)mu]4q0V/75mRt+?VM@7R93I4>B8`6p;_U2*!T`4q0V/75mY!+?VMK68^q94>B8`7QqqW2+B>[4q0V/75utb+?VP;1H%E+4>B8a0g6^B2DR*K4q0V/76!%d+?VP?0L7l3ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0h"&X4s2sG2E!KX%6Q@63&EfA4>oMp69Yi@0h"&Z4s2sG6oI%h%6Q@63&WrC4>oSp7Qq8D0h"&\4s2sG75Zte%6Q@63&j)E4>oVt3''Id60h"&^4s2sG7QE:h%6Q@63''f_N4>oYt0Koq.0h"&g4s2sG7R]=$%6Q@63(#kP4?"rO6p;&B0h"&i4s2sH1.3f[%6Q@63(6"R4?#)P2*MI30h"&k4s2sH1c7Q_%6Q@63A<W>4?#)c0Koq.0h")W4s2sH2E<QW%6Q@63ANc@4?#8X6TtrA0h")Y4s2sH6UO.''%6Q@63A`oB4?#\`76V/C0h")[4s2sI0L[][%6Q@63As&D4?,)^2EhR40h")]4s2sI1c@Za%6Q@63B02F4?,/a7Qq8D0h")_4s2sI2Ddid%6Q@63C,hO4?,5V7Qq8D0h")h4s2sI2`EQW%6Q@63C>tQ4?,Yd2a.[50h")j4s2sI6T.4o%6Q@63CQ+S4?52`6TtrA0h")l4s2sJ3&!$M%6Q@65qkJF4?5AZ2*MI30h"A_4s2sG0LRWZ%6Q@65r(VH4>nrL2EhR40h"Aa4s2sJ0fM$T%6Q@65r:bJ4>fD^5s>`?0h"Ac4s2sG2D@Ta%6Q@65rLnL4>oSs2a.[50h"Ae4s2sG75I@r%6Q@65r_%N4?#)Q7Qq8D0h"Ag4s2sJ68UG]%6Q@65s[[W4>fSt6p;&B0h"Ap4s2sG0LS2j%6Q@65smgY4?#S\7Qq8D0h"Ar4s2sF1da)`%6Q@65t*s[4>fS_3''Id60h"At4s2sG6T%:r%6Q@6681SG4>oPp1Hl710h"D`4s2sG6o%%l%6Q@668C_I4?"r^3''Id60h"Db4s2sH6ngJ^%6Q@668UkK4?,5X3Bdm70h"Dd4s2sI5qkYi%6Q@668h"M4?5ec69Yi@0h"Df4s2sF1GLdO%6Q@669%.O4>erT6TtrA0h"Dh4s2sF6818\%6Q@66:!dX4>oJ]5s>`?0h"Dq4s2sH0K)6]%6Q@66:3pZ4?#,V2*MI30h"Ds4s2sH3B0Dj%6Q@66:F''\4?#8e76V/C0h"Du4s2sI1.!]Z%6Q@66SL\H4?,,c7Qq8D0h"Ga4s2sI5rUM^%6Q@66S^hJ4?,Ya0g6%/0h"Gc4s2sI6U<[q%6Q@66SptL4?5>Z1d2@20h"Ge4s2sG1e'';c%6Q@66T.+N4>o&P69Yi@0h"Gi4s2sH5rM%n%6Q@66U<mY4>]J_3''Id60h"Gr4s2sF2*!rd%6Q@66UO$[4>f,V0Koq.0h"Gt4s2sF6:!Ln%6Q@66Ua0]4>fPd69Yi@0h"H!4s2sG0L7KY%6Q@66ngeI4>nu`69Yi@0h"Jb4s2sG68gP^%6Q@66o$qK4>o)U2*MI30h"Jd4s2sG3&NKU%6Q@66o7(M4>oV_3Bdm70h"Jf4s2sH0fCmQ%6Q@66oI4O4?#)`0Koq.0h"Jh4s2sH6ngSa%6Q@66o[@Q4?5)T1d2@20h"Jj4s2sJ5rL_e%6Q@66pX!Z4?5ba2*MI30h"Js4s2sG6o..n%6Q@66pj-\4>oVr0g6%/0h"Ju4s2sH1G_H`%6Q@66q''9^4?,\b0g6%/0h"K"4s2sJ2+''Yn%6Q@675-nJ4>ei_0Koq.0h"Mc4s2sF75R@q%6Q@675@%L4>fSo3''Id60h"Me4s2sG0Jl0]%6Q@675R1N4>nl_2EhR40h"Mg4s2sG0f(LI%6Q@675d=P4>noN6TtrA0h"Mk4s2sG3C,Md%6Q@676s*[4>oPo0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c77BO,+?VPN2+Bb=4>B8n6TuVT2FTtn4q0V/77BU.+?VPO2DRH*4>B8n76VhV2_d-V4q0V/77B[0+?VS>3C>t>4>B8o0KpUA2`<WS4q0V/77K!q+?VSL6SUb64>B8o1-QgC2a]>Z4q0V/77K''s+?VV>2)7?)4>B8o1d3$E3&`]R4q0V/77K-u+?VY<2).9(4>B8o2Ei6G3Arib4q0V/77K4"+?VYQ6Sgn84>B8o3''JHI2)@!W4q0V/77K:$+?VM>6q''9K4>B8o5s?DR2+9u$4q0V/77KU-+?VMN3''f_;4>B8o6TuVT2D@$E4q0V/77K[/+?VP93A`o/4>B8o76VhV2DIZ[4q0V/77Ka1+?VP?2E!`.4>B;Z0KpUA2E*<G4q0V/7PHP\+?VPJ3C>t>4>B;Z1-QgC2FKu&4q0V/7PHV^+?VPO5t*sH4>B;Z1d3$E2_[0E4q0V/7PH\`+?VS=2F0M94>B;Z2Ei6G2aoVj4q0V/7PHbb+?VV<6:F''I4>B;Z3''JHI3&<?I4q0V/7PHhd+?VVA6o7(:4>B;Z5s?DR3''fhi4q0V/7PI.m+?VVN6Spt94>B;Z6TuVT2)7-I4q0V/7PI4o+?VS=2_mQ+4>B;Z76VhV2*s;]4q0V/7PI:q+?VPJ2F9S:4>B;[0KpUA3A`EH4q0V/7PQV]+?VM<77BBL4>B;[1-QgC2)[EP4q0V/7PQ\_+?VMJ2+0V;4>B;[1d3$E2Dm<N4q0V/7PQba+?VP>3&Nl/4>B;[2Ei6G2E!o_4q0V/7PQhc+?VPA3CZ1A4>B;[3''JHI2FKMm4q0V/7PQne+?VPM6T.+;4>B;[5s?DR2_m0U4q0V/7PR4n+?VV;68Uk84>B;[6TuVT3AEHM4q0V/7PR:p+?VYM1djM:4>B;[76VhV1e''c#4q0V/7PR@r+?VM80f_E,4>B;\0KpUA2)@6Y4q0V/7PZ\^+?VM<0L\/74>B;\1-QgC2)I*V4q0V/7PZb`+?VM=3&s/34>B;\1d3$E2)R`Y4q0V/7PZhb+?VMM1IaP;4>B;\2Ei6G2+BPm4q0V/7PZnd+?VP@1IOD94>B;\3''JHI2_d3K4q0V/7PZtf+?VS=6ps3J4>B;\5s?DR3A<-E4q0V/7P[:o+?VM:6pa''H4>B;\6TuVT2)7WW4q0V/7P[@q+?VM@2DdT,4>B;\76VhV2)mrl4q0V/7P[Fs+?VS;0Jks&4>B;]0KpUA2_d9]4q0V/7Pcb_+?VS;7RB9J4>B;]1-QgC3&O#V4q0V/7Pcha+?VVL0f)!&4>B;]1d3$E2E!NS4q0V/7Pcnc+?VV@5r_%;4>B;]2Ei6G2)RZY4q0V/7Pcte+?VP?3&Ef.4>B;]3''JHI2_d-T4q0V/7Pd%g+?VV?1GM''&4>B;]5s?DR2)@''L4q0V/7Pd@p+?VM=3B9844>B;]6TuVT2F9bc4q0V/7PdFr+?VMN2*!i04>B;]76VhV2+Bo#4q0V/7PdLt+?VP<77BBL4>B;^0KpUA2E!NT4q0V/7Plh`+?VS;1cIT-4>B;^1-QgC3''g"g4q0V/7Plnb+?VVQ0gn274>B;^1d3$E3CQ8''4q0V/7Pltd+?VJM0ekj$4>B;^2Ei6G2Dd3U4q0V/7Pm%f+?VS:6UEsG4>B;^3''JHI2`3KO4q0V/7Pm+h+?VVA2E*f/4>B;^5s?DR2D@$G4q0V/7PmFq+?VVM1dsS;4>B;^6TuVT3CH=r4q0V/7PmLs+?VM91cIT-4>B;^76VhV2).QY4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@71e''YO4>eoK3''Id60h+#S4s2sG6o-_b%6Q@72).9;4?,#a3''Id60h+#U4s2sJ778jo%6Q@72)@E=4>o)P2*MI30h+#W4s2sG68C>\%6Q@72)RQ?4?"rS3''Id60h+#Y4s2sH2+0;c%6Q@72)d]A4>erL1Hl710h+#[4s2sF6T7"h%6Q@72*!iC4?#Y^2a.[50h+#d4s2sI5qt8]%6Q@72*sJL4>oM]0Koq.0h+#f4s2sG68M"n%6Q@72+0VN4>oM_2EhR40h+#h4s2sF1c%*T%6Q@72+BbP4>nlP0Koq.0h+&T4s2sG6o.4p%6Q@72DIB<4?#_t2*MI30h+&V4s2sI1,([O%6Q@72D[N>4>ef\2EhR40h+&X4s2sF0gnGo%6Q@72DmZ@4>euV6TtrA0h+&Z4s2sF2E!lc%6Q@72E*fB4>f#a6p;&B0h+&\4s2sF3CQ;!%6Q@72E<rD4>fGZ3Bdm70h+&e4s2sF75.(m%6Q@72F9SM4>noS3Bdm70h+&g4s2sG0f_3W%6Q@72FK_O4>nrN0g6%/0h+&i4s2sG2Dmoe%6Q@72F]kQ4>o)d2EhR40h+)U4s2sH0f_6X%6Q@72`!W?4?##]2a.[50h+)Y4s2sH3C,Sf%6Q@72`3cA4?#P[0Koq.0h+)[4s2sH7RAjo%6Q@72`EoC4?,Vc0Koq.0h+)f4s2sC0JYLL%6Q@72aT\N4>8HT6p;&B0h+)h4s2sC0JPFK%6Q@72afhP4>JZI2*MI30h+)j4s2sW7Q!Uu%6Q@73''oeO4>SZG1Hl710h+,i4s2sW7PHP\%6Q@73(?(S4@Vdo6TtrA0h+/W4s2sW7PI7p%6Q@73B'',E4@Vdr69Yi@0h+/_4s2sW7PdFr%6Q@73B98G4@Vdr7Qq8D0h+W"4s2sC0Jc-]%6Q@77RTE_4>8HJ76V/C0h+W$4s2sA0Ju3]%6Q@77RfQa4>J]I6TtrA1,(C94s2sC1GM?_%6QC"0Le5K4>8HE3&!$A3''Id61,(F:4s2sA0JYXB0JYXP%6QC"0ekj74>8HE3&!$A3''Id61,(F<4s2sA0JYXB0JYXP%6QC"0h+>L4>8HH69Yi@1,(I;4s2sA0Ju6^%6QC"1,D*:4>JfN76V/C1,(I?4s2sC2D[`b%6QC"1,V6<4>JTG0g6%/1,(IA4s2sC0JY@H%6QC"1-n)H4>JZH2a.[51,(IO4s2sC0JQ$\%6QC"1.=AL4>JTF69Yi@1,(L=4s2sA0LRi`%6QC"1GV-:4>JZH76V/C1,(L@4s2sA0L@KX%6QC"1Gq?=4>JZH1Hl711,(LB4s2sA0Jc-]%6QC"1H@WA4>JZM0Koq.1,(LO4s2sA0K2<^%6QC"1IODL4>8HJ6p;&B1,(O?4s2sC1,q$Q%6QC"1c%<<4>JZG3''Id61,(OA4s2sA1I3f\%6QC"1c7H>4>8HE0g6%/1,(OQ4s2sE75-M]%6QC"2)%3:4>eoO0g6%/1,(RA4s2sA0JYRN%6QC"2)[W@4>8HE5s>`?1,(RF4s2sC1,1^O%6QC"2*!iC4>8HE5s>`?1,(RO4s2sW7Rfd0%6QC"2+0VN4>8HE3&!$A3''Id61,(RS4s2sA0JYXB0JYXP%6QC"2+BbP4>8HE3&!$A3''Id61,(U?4s2sA0JYXB0JYXP%6QC"2E<rD4>8HF0etFN76V/C1,(UP4s2sA0JbI>0LS>n%6QC"2F9SM4>8HF1GUXP76V/C1,(UR4s2sA0JbO@0LS>n%6QC"2FK_O4>8HF2)6jR76V/C1,(UT4s2sA0JbUB0LS>n%6QC"2F]kQ4>8HF2_m''T76V/C1,(X@4s2sA0Jb[D0LS>n%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>JTL0g6^B0JG:C1,)*b4q0V00K1aN+?V>32*ruN1GLR;1GCL:2+0V;4>JTL1HlpD0JG@N0JG:;0JG:;0JG@P4q0V00K1gP+?V>32*ruN1GLR;1GUX<2+0V;4>JTL2*N-F0JG@N0JG:;0JG:=0JG@P4q0V00K1mR+?V>32*ruN1GLR;1Ggd>2+0V;4>JTL2a/?H0JG@N0JG:;0JG:?0JG@P4q0V00K1sT+?V>32*ruN1GLR;1H$p@2+0V;4>JTL3BeQJ0JG@N0JG:;0JG:A0JG@P4q0V00K29]+?V>32*ruN1GLR;1H7''B2+0V;4>JTL69ZMS0JG@N0JG:;0JG:C0JG@P4q0V00K2?_+?V>32*ruN1GUX<1GCL:2+0V;4>JTL6p;_U0JGgO4q0V00K:aM+?VD777KHM4>JTM0g6^B1,:XE4q0V00K:gO+?V>31GLX=6q''9K4>JTM1HlpD0JG:<1,)*b4q0V00K:mQ+?V>31G^d?6q''9K4>JTM2*N-F0JG:>1,)*b4q0V00K:sS+?V>31GppA6q''9K4>JTM2a/?H0JG:@1,)*b4q0V00K;$U+?V>31H.''C6q''9K4>JTM3BeQJ0JG:B1,)*b4q0V00K;?^+?V>31H@3E6q''9K4>JTM69ZMS0JG@N0JG:;0JG::0JG@P4q0V00K;E`+?V>32*ruN1GLR;1GLR;2+0V;4>JTM6p;_U0JG@N0JG:;0JG:<0JG@P4q0V00K;Kb+?V>32*ruN1GLR;1G^^=2+0V;4>JTM7QqqW0JG@N0JG:;0JG:>0JG@P4q0V00KCgN+?V>32*ruN1GLR;1Gpj?2+0V;4>JTN0g6^B0JG@N0JG:;0JG:@0JG@P4q0V00KCmP+?V>32*ruN1GLR;1H.!A2+0V;4>JTN1HlpD0JG@N0JG:;0JG:B0JG@P4q0V00KCsR+?V>32*ruN1GLR;1H@-C2+0V;4>JTN2*N-F0JG@N0JG:<0JG::0JG@P4q0V00L7ug+?V>31,psA1bg[<1-%N-4>JTV69ZMS0JG7A0JG==0JG7B4q0V00L8&i+?V>31,psA1c$g>1-%N-4>JTV6p;_U0JG7A0JG=?0JG7B4q0V00L8,k+?V>31,psA1c6s@1-%N-4>JTV7QqqW0JG7A0JG=A0JG7B4q0V00L@HW+?V>31,psA1cI*B1-%N-4>JTW0g6^B0JG7A0JG=C0JG7B4q0V00L@NY+?V>31,psA1c[6D1-%N-4>JTW1HlpD0JG7A0JG=L0JG7B4q0V00L@T[+?V>31,psA1dWlM1-%N-4>JTW2*N-F0JG7A0JG=N0JG7B4q0V00L@Z]+?V>31,psA1dj#O1-%N-4>JTW2a/?H0JG7A0JG=P0JG7B4q0V00L@`_+?V>31,psA1e''/Q1-%N-4>JTW3BeQJ0JG7A0JG@<0JG7B4q0V00LA&h+?V>31,psA2)-d=1-%N-4>JTW69ZMS0JG7A0JG@>0JG7B4q0V00LA,j+?V>31,psA2)?p?1-%N-4>JTW6p;_U0JG7A0JG@@0JG7B4q0V00LA2l+?V>31,psA2)R''A1-%N-4>JTW7QqqW0JG7A0JG@B0JG7B4q0V00LINX+?V>31,psA2)d3C1-%N-4>JTX0g6^B0JG7A0JG@D0JG7B4q0V00LITZ+?V>31,psA2*!?E1-%N-4>JTX1HlpD0JG7A0JG@M0JG7B4q0V00LS>n+?V>31GLX=6q''9K4>JTY7QqqW0JG:<1,)*b4q0V00L[ZZ+?V>31G^d?6q''9K4>JTZ0g6^B0JG:>1,)*b4q0V00L[`\+?V>31GppA6q''9K4>JTZ1HlpD0JG:@1,)*b4q0V00L[f^+?V>31H.''C6q''9K4>JTZ2*N-F0JG:B1,)*b4q0V00L[l`+?V>31H@3E6q''9K4>JTZ2a/?H0JG@N0JG:;0JG::0JG@P4q0V00L[rb+?V>32*ruN1GLR;1GLR;2+0V;4>JTZ3BeQJ0JG@N0JG:;0JG:<0JG@P4q0V00L\8k+?V>32*ruN1GLR;1G^^=2+0V;4>JTZ69ZMS0JG@N0JG:;0JG:>0JG@P4q0V00L\>m+?V>32*ruN1GLR;1Gpj?2+0V;4>JTZ6p;_U0JG@N0JG:;0JG:@0JG@P4q0V00L\Do+?V>32*ruN1GLR;1H.!A2+0V;4>JTZ7QqqW0JG@N0JG:;0JG:B0JG@P4q0V00Ld`[+?V>32*ruN1GLR;1H@-C2+0V;4>JT[0g6^B0JG@N0JG:<0JG::0JG@P4q0V00Ldf]+?V>31GLX=6q''9K4>JT[1HlpD0JG:<1,)*b4q0V00Ldl_+?V>31G^d?6q''9K4>JT[2*N-F0JG:>1,)*b4q0V00Ldra+?V>31GppA6q''9K4>JT[2a/?H0JG:@1,)*b4q0V00Le#c+?V>31H.''C6q''9K4>JT[3BeQJ0JG:B1,)*b4q0V00Le>l+?V>31H@3E6q''9K4>JT[69ZMS0JG@N0JG:;0JG::0JG@P4q0V00LeDn+?V>32*ruN1GLR;1GLR;2+0V;4>JT[6p;_U0JG@N0JG:;0JG:<0JG@P4q0V00LeJp+?V>32*ruN1GLR;1G^^=2+0V;4>JT[7QqqW0JG@N0JG:;0JG:>0JG@P4q0V00eb:F+?V>32*ruN1GLR;1Gpj?2+0V;4>JWF0g6^B0JG@N0JG:;0JG:@0JG@P4q0V00eb@H+?V>32*ruN1GLR;1H.!A2+0V;4>JWF1HlpD0JG@N0JG:;0JG:B0JG@P4q0V00ebFJ+?V>32*ruN1GLR;1H@-C2+0V;ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,1I?4s2sA0Ju0N0JbI<0JbC:0Ju6^%6QC#0g\&H4>JZZ7Qq8D1,1LP4s2sC1.+Jo%6QC#1,_<=4>JZO5s>`?1,1OD4s2sC1,qTa%6QC#1."/I4>JZN3Bdm71,1R?4s2sC1,:RJ%6QC#1G_3;4>JZK2*MI31,1RA4s2sC1,LdN%6QC#1Gq?=4>JZK3''Id61,1RD4s2sC1-m`\%6QC#1H7Q@4>JZX69Yi@1,1RN4s2sA0JbC<0LS>n%6QC#1I=8J4>8HF0etFN76V/C1,1RP4s2sA0JbI>0LS>n%6QC#1IODL4>8HF1GUXP76V/C1,1RR4s2sA0JbO@0LS>n%6QC#1IaPN4>8HF2)6jR76V/C1,1U>4s2sA0JbUB0LS>n%6QC#1bh0:4>8HF2_m''T76V/C1,1U@4s2sA0Jb[D0LS>n%6QC#1c%<<4>8HF3AN9V76V/C1,1US4s2sA0JkL<0JYXP%6QC#1e''YO4>8HG1,(C;3Bdm71,1X?4s2sA0JkR>0JYXP%6QC#2).9;4>8HG1b^U=3Bdm71,1XA4s2sA0JkX@0JYXP%6QC#2)@E=4>8HG2D?g?3Bdm71,1XC4s2sA0Jk^B0JYXP%6QC#2)RQ?4>8HG3&!$A3Bdm71,1XE4s2sA0JkdD0JYXP%6QC#2)d]A4>8HG5qjuJ3Bdm71,1XG4s2sA0Jl*M0JYXP%6QC#2*!iC4>8HG6SL2L3Bdm71,1XP4s2sA0Jl0O0JYXP%6QC#2*sJL4>8HG75-DN3Bdm71,1XR4s2sA0Jl6Q0JYXP%6QC#2+0VN4>8HH0JG193Bdm71,1XT4s2sA0JtR=0JYXP%6QC#2+BbP4>8HH1,(C;3Bdm71,1[@4s2sA0JtX?0JYXP%6QC#2DIB<4>8HH1b^U=3Bdm71,1[B4s2sA0Jt^A0JYXP%6QC#2D[N>4>8HH2D?g?3Bdm71,1[D4s2sA0JtdC0JYXP%6QC#2DmZ@4>8HH3&!$A3Bdm71,1[F4s2sA0JtjE0JYXP%6QC#2E*fB4>8HH5qjuJ3Bdm71,1[H4s2sA0K(X>0JYXP%6QC#2E<rD4>8HI1,(C;3Bdm71,1[Q4s2sA0K(^@0JYXP%6QC#2F9SM4>8HI1b^U=3Bdm71,1[S4s2sA0K(dB0JYXP%6QC#2FK_O4>8HI2D?g?3Bdm71,1[U4s2sA0K(jD0JYXP%6QC#2F]kQ4>8HI3&!$A3Bdm71,1^A4s2sA0K(pF0JYXP%6QC#2_dK=4>8HI5qjuJ3Bdm71,1^C4s2sA0K)6O0JYXP%6QC#2`!W?4>8HI6SL2L3Bdm71,1^E4s2sA0K)<Q0JYXP%6QC#2`3cA4>8HI75-DN3Bdm71,1^G4s2sA0K)BS0JYXP%6QC#2`EoC4>8HJ0JG193Bdm71,1^I4s2sA0K1^?0JYXP%6QC#2`X&E4>8HJ1,(C;3Bdm71,1^R4s2sA0K1dA0JYXP%6QC#2aT\N4>8HJ1b^U=3Bdm71,1^T4s2sA0K1jC0JYXP%6QC#2afhP4>8HJ2D?g?3Bdm71,1^V4s2sA0K1pE0JYXP%6QC#2b#tR4>8HJ3&!$A3Bdm71,1aB4s2sA0K2!G0JYXP%6QC#3&*T>4>8HJ5qjuJ3Bdm71,1aD4s2sA0JY@H%6QC#3&<`@4>8HU0Koq.1,1aF4s2sA0JYRN%6QC#3&NlB4>8HE1-Q.01,1aH4s2sC0JbOL%6QC#3&a#D4>8HE3&!$B1,(C<2_Zp@3Bdm71,1aJ4s2sA0JYUA0JbI<0Jb[B0JYXP%6QC#3&s/F4>8HE3&!$B1,(C<3A<-B3Bdm71,1aS4s2sA0JYUA0JbL=0JbC:0JYXP%6QC#3(,qQ4>JTG0Koq.1,1aW4s2sC0JY=;0JY=G%6QC#3(?(S4>JTG0etF<0g6%/1,1dC4s2sC0JY=;0JY=;0JY=G%6QC#3AE]?4>8HT2a.[51,1dE4s2sA0JYFJ%6QC#3AWiA4>8HE5s>`?1,1dG4s2sA0JYpX%6QC#3B'',E4>JTI1-Q.01,1dK4s2sA0JYpX%6QC#3C5nP4>JTI1-Q.01,1dV4s2sA0JYpX%6QC#3CZ1T4>JTG1-Q.01,2''K4s2sC2*ioO0LSAo%6QC#5qtPG4>Jc]2_m''T7Qq8D1,2''N4s2sC2*irP0LSAo%6QC#5r_%N4>JfL6TtrjDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d0gRf`+?VD;0h"884>JWW6TuVT1,VEX1,)*b4q0V00gS5l+?VD:5qt,K6q''9K4>JWW7QqqW1,VEW1,)*b4q0V00g[]\+?VD:68LAN6ps3J4>JWX2*N-F1,VBR1,)*a4q0V00g[c^+?VD<0gRu44>JWX2a/?H1,gpG4q0V00g[la+?VD:77KHM4>JWX7QqqW1,VEd4q0V00gml_+?VD55rh+<4>JWZ3''JHI1,^mW4q0V00gn;k+?VD;1.FG:4>JWZ69ZMS1,^mW4q0V00gnJp+?VG61,(m$4>JW\2*N-F0JG7A0JG:<0JG:;0JG7B4q0V00h+&b+?V>31,psA1GUX<1GUX<1-%N-4>JW\2a/?H0JG7A0JG:<0JG:=0JG7B4q0V00h+,d+?V>31,psA1GUX<1Ggd>1-%N-4>JW\3BeQJ0JG7A0JG:<0JG:?0JG7B4q0V00h+Gm+?V>31,psA1GUX<1H$p@1-%N-4>JW\69ZMS1,^sE4q0V00h+Mo+?VD75rh+<4>JW\6p;_U1GCUC4q0V00h+Sq+?VD:6UEsG4>JW\7QqqW1,VHU4q0V01,(CG+?VD:5qtP44>JZG0g6^B1,CU>4q0V01,(LJ+?VD:5t!mG4>JZG1d3$E1,V?c4q0V01,([O+?VD:6T71<4>JZG69ZMS1,:OA4q0V01,)''Z+?VD76:O-J4>JZG6p;_U1,CXR4q0V01,1OJ+?VD72)@E*4>JZH1HlpD1,:^A4q0V01,1[N+?VD70f)!&4>JZH5s?DR0JGsT1,)*a4q0V01,2*Z+?VD80f2''''4>JZH76VhV1,:aC4q0V01,:OI+?VD:68:Y54>JZI1-QgC1,:U?4q0V01,:XL+?VD72)%3''4>JZI1d3$E0JGmS4q0V01,:^N+?VD81dO;74>JZI2Ei6G1,;-O4q0V01,:dP+?VD75rC>P1H7Q-4>JZI69ZMS1,:gH4q0V01,;3\+?VD73&Ef.4>JZI6p;_U1,:OD4q0V01,;9^+?VD70LJ#54>JZI7QqqW1,;0_4q0V01,CUJ+?V>30fD3)4>JZJ0g6^B1,:^Q4q0V01,C[L+?VD80K)*(4>JZJ1HlpD0JG7=4q0V01,CpS+?VG83CQ+@4>JZJ69ZMS1,(LO4q0V01,D9]+?V>31,1I:1IaP;4>JZJ76VhV0JG:P0JG:P4q0V01,DB`+?VD76Spt94>JZK0KpUA1,VEX4q0V01,L^L+?VD76Spt94>JZK1-QgC1,VEW4q0V01,LdN+?VD:5sdaE4>JZK1d3$E1,V?P4q0V01,LjP+?VD:5sdaE4>JZK2Ei6G1,V?O4q0V01,LpR+?VD:75d==4>JZK3''JHI1,VEc4q0V01,M!T+?VD:75d==4>JZK5s?DR1,VEg4q0V01,M<]+?VD:6:=!H4>JZK6TuVT1,VBS4q0V01,MB_+?VD:68q(;4>JZK76VhV1,VER4q0V01,MHa+?VD<1,_<*4>JZL0KpUA1,VEg4q0V01,UdM+?VD:5qkJ34>JZL1HlpD1,VEb4q0V01,UmP+?VG81GM''&4>JZL2*N-F1GUaH4q0V01,UsR+?VG96UEsG4>JZL2a/?H1,LsH4q0V01,VE_+?V>31,psA1GUX<1GLR;1-%N-4>JZL6p;_U0JG7A0JG:<0JG:<0JG7B4q0V01,VKa+?V>31,psA1GUX<1G^^=1-%N-4>JZL7QqqW0JG7A0JG:<0JG:>0JG7B4q0V01,^gM+?V>31,psA1GUX<1Gpj?1-%N-4>JZM0g6^B0JG7A0JG:<0JG:@0JG7B4q0V01,^mO+?V>31,psA1GUX<1H.!A1-%N-4>JZM1HlpD0JG7A0JG:<0JG:B0JG7B4q0V01,^sQ+?V>31,psA1GUX<1H@-C1-%N-4>JZM2*N-F0JG7A0JG:=0JG::0JG7B4q0V01,_$S+?VD63ANc-4>JZM3BeQJ1,1dF4q0V01,_Qb+?VD66nge64>JZM7QqqW1,2-c4q0V01,gmN+?VD66UX*I4>JZN0g6^B1,20R4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC$2`X&E4>JiU1d2@21,:gH4s2sC2`X5h%6QC$3AE]?4>Ji^5s>`?1,:jJ4s2sC0gm`[%6QC$3B'',E4>JWZ1Hl711,:jM4s2sC2`X;j%6QC$3CH%R4>JiU76V/C1,;-L4s2sC0g[`]%6QC$5qtPG4>JWX0g6%/1,;-O4s2sC0g[]\%6QC$5r:bJ4>JWX0Koq.1,;-Q4s2sC0g[Z[%6QC$681SG4>JW[2EhR41,;0N4s2sC0h"&c%6QC$68C_I4>JW[2a.[51,;0P4s2sC0h")d%6QC$68UkK4>JWX6TtrA1,;0R4s2sC0gdWY%6QC$6:!dX4>JWY0Koq.1,;0_4s2sC0g\5k%6QC$6S^hJ4>8HG0eb::76V/C1,;3Q4s2sA0JkO=0JZ''\%6QC$6SptL4>8HG1GCL<76V/C1,;3S4s2sA0JkU?0JZ''\%6QC$6T.+N4>8HG2)$^>76V/C1,;3U4s2sA0Jk[A0JZ''\%6QC$6T@7P4>8HG2_Zp@76V/C1,;3W4s2sA0JkaC0JZ''\%6QC$6U<mY4>8HG3A<-B76V/C1,;3`4s2sA0Jl''L0JZ''\%6QC$6UO$[4>8HG681)K76V/C1,;3b4s2sA0Jl-N0JZ''\%6QC$6Ua0]4>8HG6ng;M76V/C1,;3d4s2sA0Jl3P0JZ''\%6QC$6ngeI4>8HG7PHMO76V/C1,;6P4s2sA0JtO<0JZ''\%6QC$6o$qK4>8HH0eb::76V/C1,;6R4s2sA0JtU>0JZ''\%6QC$6o7(M4>8HH1GCL<76V/C1,;6T4s2sA0Jt[@0JZ''\%6QC$6oI4O4>8HH2)$^>76V/C1,;6V4s2sA0JtaB0JZ''\%6QC$6o[@Q4>8HH2_Zp@76V/C1,;6X4s2sA0JtgD0JZ''\%6QC$6pX!Z4>8HH3A<-B76V/C1,;6a4s2sA0Ju-M0JZ''\%6QC$6pj-\4>8HI0eb::76V/C1,;6c4s2sA0K([?0JZ''\%6QC$6q''9^4>8HI1GCL<76V/C1,;6e4s2sA0K(aA0JZ''\%6QC$75-nJ4>8HI2)$^>76V/C1,;9Q4s2sA0K(gC0JZ''\%6QC$75@%L4>8HI2_Zp@76V/C1,;9S4s2sA0K(mE0JZ''\%6QC$75R1N4>8HI3A<-B76V/C1,;9U4s2sA0K)3N0JZ''\%6QC$75d=P4>8HI681)K76V/C1,;9W4s2sA0K)9P0JZ''\%6QC$76!IR4>8HI6ng;M76V/C1,;9Y4s2sA0K)?R0JZ''\%6QC$76s*[4>8HI7PHMO76V/C1,;9b4s2sA0K1[>0JZ''\%6QC$7706]4>8HJ0eb::76V/C1,;9d4s2sA0K1a@0JZ''\%6QC$77BB_4>8HJ1GCL<76V/C1,;9f4s2sA0K1gB0JZ''\%6QC$7PI"K4>8HJ2)$^>76V/C1,;<R4s2sA0K1mD0JZ''\%6QC$7P[.M4>8HJ2_Zp@76V/C1,;<T4s2sA0K1sF0JZ''\%6QC$7Pm:O4>8HJ3A<-B76V/C1,;<V4s2sA0K29O0JZ''\%6QC$7Q*FQ4@;"n1bpaQ76V/C1,;<X4s2sS1.F,V0LS>n%6QC$7Q<RS4@;(t6S^>`76V/C1,;<Z4s2sS5r^_W0LS>n%6QC$7R93\4@1hX0JY=M76V/C1,;<c4s2sU2DI''E0LS>n%6QC$7RK?^4@2Fq0JY=M76V/C1,;<e4s2sT3&!0E0LS>n%6QC$7R]K`4@;(_0etFN76V/C1,;<g4s2sT1,1aD0LS>n%6QC%0JG[54@1hl3AN9V76V/C1,CU=4s2sS75QhV0LS>n%6QC%0JYg74@2Ci3&30U76V/C1,CU?4s2sT2`WQI0LS>n%6QC%0Jks94@Ckj0JY=M76V/C1,CUA4s2sR6SU8M0LS>n%6QC%0K)*;4@:tb6o$Ga76V/C1,CUC4s2sT2`E]O0LS>n%6QC%0K;6=4@1t_68C5_76V/C1,CUE4s2sF1H.!C0LS>n%6QC%0L7lF4?,V_68C5_76V/C1,CUN4s2sT2D@*G0LS>n%6QC%0LJ#H4>noK7PZYc76V/C1,CUP4s2sF0gRKK0LS>n%6QC%0L\/J4?#Sa1bpaQ76V/C1,CUR4s2sE77B!f0LS>n%6QC%0ebd64?5AV6o$Ga76V/C1,CX>4s2sF1.3uT0LS>n%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>J]I1-QgC2)I!T1,)*b4q0V01GL[L+?VS@77Asc6q''9K4>J]I1d3$E2)@Tf1,)*b4q0V01GLaN+?VVC6pi^`6q''9K4>J]I2Ei6G2E*BY1,)*b4q0V01GLgP+?VM:2F]GU6q''9K4>J]I3''JHI2+9Jo1,)*b4q0V01GLmR+?VY<1,C[>6q''9K4>J]I5s?DR2+BMZ1,)*b4q0V01GM3[+?VJM3''oAS6q''9K4>J]I6TuVT2FTV[1,)*b4q0V01GM9]+?VMJ2)$d>6q''9K4>J]I76VhV2)7!V1,)*b4q0V01GM?_+?VSL6SL8L6q''9K4>J]J0KpUA2D[WV1,)*b4q0V01GU[K+?VM:5rg\S6q''9K4>J]J1-QgC2D[$G1,)*b4q0V01GUaM+?VJL6oHeS6q''9K4>J]J1d3$E2FK>i1,)*b4q0V01GUgO+?VMN2DR$A6q''9K4>J]J2Ei6G6T@"Y1,)*b4q0V01GUmQ+?VtW1H7-D6q''9K4>J]J3''JHI68D"f1,)*b4q0V01GUsS+?W"N7RJpb6q''9K4>J]J5s?DR68p\e1,)*b4q0V01GV9\+?VVL1I<iN6q''9K4>J]J6TuVT5t!Ra1,)*b4q0V01GV?^+?W"K778mb6q''9K4>J]J76VhV6T6hh1,)*b4q0V01GVE`+?W"N0f:^?6q''9K4>J]K0KpUA6o?n[1,)*b4q0V01G^aL+?W"L0K:gA6q''9K4>J]K1-QgC6T@"]1,)*a4q0V01G^gN+?VtL2a]>S6ps3J4>J]K1d3$E69.Cm1,)*a4q0V01G^mP+?VtX0f1X>6ps3J4>J]K2Ei6G6SLen1,)*a4q0V01G^sR+?W"K1c-sA6ps3J4>J]K3''JHI6T7"Z1,)*a4q0V01G_$T+?W"Y1,q$C6ps3J4>J]K5s?DR6U`pj1,)*a4q0V01G_?]+?W%G6SL8L6ps3J4>J]K6TuVT6o-Ma1,)*a4q0V01G_E_+?VtF3AN?D6ps3J4>J]K76VhV681\o1,)*a4q0V01G_Ka+?VtV3&NHF6ps3J4>J]L0KpUA68L;L1,)*a4q0V01GggM+?W%M0f:^?6ps3J4>J]L1-QgC6:<de1,)*a4q0V01GgmO+?W"N0JkO=6ps3J4>J]L1d3$E6T?eT1,)*a4q0V01GgsQ+?W"H0fUpB6ps3J4>J]L2Ei6G68M"i1,)*a4q0V01Gh$S+?VtZ1c-sA6ps3J4>J]L3''JHI5smV!1,)*a4q0V01Gh*U+?VtX0fUpB6ps3J4>J]L5s?DR6SUPg1,)*a4q0V01GhE^+?W"M2`NQH6ps3J4>J]L6TuVT6:44%1,)*a4q0V01GhK`+?W"K2afDT6ps3J4>J]L76VhV6S^AV1,)*a4q0V01GhQb+?W"M1,(I;6ps3J4>J]M0KpUA5t!C\1,)*a4q0V01GpmN+?VM95qk&J6ps3J4>J]M2a/?H0JG7A0JG:<0JG:;0JG7B4q0V01Gq-U+?V>31,psA1GUX<1GUX<1-%N-4>J]M3BeQJ0JG7A0JG:<0JG:=0JG7B4q0V01GqH^+?V>31,psA1GUX<1Ggd>1-%N-4>J]M69ZMS0JG7A0JG:<0JG:?0JG7B4q0V01GqN`+?V>31,psA1GUX<1H$p@1-%N-4>J]M6p;_U6T@"Y1,)*a4q0V01GqTb+?VqX2FK;S6ps3J4>J]M7QqqW5sm@\1,)*a4q0V01H$pN+?VM;2_[!@6ps3J4>J]N0g6^B3&ifP1,)*a4q0V01H%!P+?VP@1.!`M6ps3J4>J]N1HlpD5smRb1,)*a4q0V01H%''R+?VtG7PuqT6ps3J4>J]N2*N-F6:4*o1,)*a4q0V01H%-T+?W"F6SU>M6ps3J4>J]N2a/?H6SUAa1,)*a4q0V01H%3V+?W"H75-JN6ps3J4>J]N3BeQJ6T%;"1,)*a4q0V01H%N_+?W"L0K:gA6ps3J4>J]N69ZMS6T.=d1,)*a4q0V01H%Ta+?W"M3AE9C6ps3J4>J]N6p;_U6THhS1,)*a4q0V01H%Zc+?W%G69-eT6ps3J4>J]N7QqqW6T-k_1,)*a4q0V01H.!O+?W%M2+'',Q6ps3J4>J]O0g6^B5sm=_1,)*a4q0V01H.''Q+?VqW0f_!C6ps3J4>J]O1HlpD6S_(e1,)*a4q0V01H.-S+?VP:0h*oP6ps3J4>J]O2*N-F2DI*G1,)*a4q0V01H.3U+?VJL75H\Q6ps3J4>J]O2a/?H2)7QW1,)*a4q0V01H.9W+?VG83A`o/4>J]O3BeQJ2)@Tf1,)*a4q0V01H.T`+?VM:2F]GU6ps3JASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,CjU4s2sI0h"A`0LS;m%6QC%2a]bO4>elN6o$Ga6p;&B1,CjW4s2sJ2F^"g0LS;m%6QC%2aonQ4>nu]2)6jR6p;&B1,CjY4s2sF1-moU0LS;m%6QC%3&!N=4>oPq3&30U6p;&B1,CmE4s2sF1IErR0LS;m%6QC%3&3Z?4>o,R6S^>`6p;&B1,CmG4s2sG2*ruP0LS;m%6QC%3&EfA4?#&c75?Pb6p;&B1,CmI4s2sF7Q*"W0LS;m%6QC%3&WrC4?58Z1GUXP6p;&B1,CmK4s2sF2_[QR0LS;m%6QC%3&j)E4>S`Y2*MI31,CmM4s2sE779$h0LS;m%6QC%3''f_N4@2Ip0JY=M6p;&B1,CmV4s2sT1.4Jb0LS;m%6QC%3(#kP4@;%e2)6jR6p;&B1,CmX4s2sT2`!fV0LS;m%6QC%3(6"R4@;%a6S^>`6p;&B1,CmZ4s2sT3C>MV0LS;m%6QC%3A<W>4@D"`6S^>`6p;&B1,CpF4s2sR6SL2L0LS;m%6QC%3ANc@4@1_^3&30U6p;&B1,CpH4s2sS1.=#T0LS;m%6QC%3A`oB4@D%a3&30U6p;&B1,CpJ4s2sS3C>b]0LS;m%6QC%3As&D4@2Ci1bpaQ6p;&B1,CpL4s2sT0L8&]0LS;m%6QC%3B02F4@:t_1bpaQ6p;&B1,CpN4s2sT2`WQI0LS;m%6QC%3C,hO4@;Ik3&30U6p;&B1,CpW4s2sT75m%Y0LS;m%6QC%3C>tQ4@Ckj0JY=M6p;&B1,CpY4s2sU1GD0O0LS;m%6QC%3CQ+S4@D%a3&30U6p;&B1,Cp[4s2sS75QhV0LS;m%6QC%5qkJF4@1em2)6jR6p;&B1,D3N4s2sS75chT0LS;m%6QC%5r(VH4@2D)3&30U6p;&B1,D3P4s2sS1.=/X0LS;m%6QC%5r:bJ4@:hZ6S^>`6p;&B1,D3R4s2sT1.4Jb0LS;m%6QC%5rLnL4@:tp6S^>`6p;&B1,D3T4s2sT2D@*G0LS;m%6QC%5r_%N4@;%`6S^>`6p;&B1,D3V4s2sT2`*lW0LS;m%6QC%5s[[W4@;%e2)6jR6p;&B1,D3_4s2sT3&*cU0LS;m%6QC%5smgY4@;(e1bpaQ6p;&B1,D3a4s2sT3A<-B0LS;m%6QC%5t*s[4@D"`6S^>`6p;&B1,D3c4s2sU2)d?I0LS;m%6QC%681SG4@1e`0JY=M6p;&B1,D6O4s2sS0f_!E0LS;m%6QC%68C_I4@1_f75?Pb6p;&B1,D6Q4s2sS6SUPU0LS;m%6QC%68UkK4@)=g0JY=M6p;&B1,D6S4s2sS0KD*J0LS;m%6QC%68h"M4@1el1bpaQ6p;&B1,D6U4s2sS2`F)Z0LS;m%6QC%69%.O4@;"c3&30U6p;&B1,D6W4s2sA0JYUA0JbI<0JbXA0JYXP%6QC%6:!dX4>8HE3&!$B1,(C<3&!$A3Bdm71,D6`4s2sA0JYUA0JbI<0Jb^C0JYXP%6QC%6:3pZ4>8HE3&!$B1GCL=0JG193Bdm71,D<a4s2sC2`W]Y%6QC%77''0\4>Ji]0g6%/1,D?f4s2sC0h!ua%6QC%77KH`4>JW[3''Id61,DBR4s2sC0h"#b%6QC%7PR(L4>JW[3Bdm71,L[C4s2sC2DIT`%6QC&0K20<4>JfL7Qq8D1,L[N4s2sS1.=/X0LS;m%6QC&0L@rG4@;Il3&30U6p;&B1,L[P4s2sT0fVNU0LS;m%6QC&0LS)I4@;+`0etFN6p;&B1,L[R4s2sT2`F)Z0LS;m%6QC&0Le5K4@;%d1bpaQ6p;&B1,L^>4s2sU2`!9G0LS;m%6QC&0ekj74>8HF0etFN76V/C1,L^@4s2sA0JbI>0LS>n%6QC&0f)!94>8HF1GUXP76V/C1,L^B4s2sA0JbO@0LS>n%6QC&0f;-;4>8HF2)6jR76V/C1,L^D4s2sA0JbUB0LS>n%6QC&0fM9=4>8HF2_m''T76V/C1,L^F4s2sA0Jb[D0LS>n%6QC&0f_E?4>8HF3AN9V76V/C1,L^O4s2sA0Ju0N0JbF;0JbC:0Ju6^%6QC&0g\&H4>8HH681)L0eb:;0eb:=6p;&B1,L^Q4s2sA0Ju0N0JbF;0JbI<0Ju6^%6QC&0gn2J4>8HH681)L0eb:;1GCL?6p;&B1,L^S4s2sA0Ju0N0JbF;0JbO>0Ju6^%6QC&0h+>L4>8HH681)L0eb:;2)$^A6p;&B1,La?4s2sA0Ju0N0JbF;0JbU@0Ju6^%6QC&1,1s84>8HH681)L0eb:;2_ZpC6p;&B1,LaA4s2sA0Ju0N0JbF;0Jb[B0Ju6^%6QC&1,D*:4>8HH681)L0eb:;3A<-E6p;&kDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d1bpmO+?V>32*ruN1GUX<1GCL:2+0V;4>J`K2*N-F1ds)P1,)*b4q0V01bpsQ+?VJL3(#GT6q''9K4>J`K2a/?H1ds)Y1,)*b4q0V01bq$S+?VM>6p`X_6q''9K4>J`K3BeQJ1dsD]1,)*b4q0V01bq?\+?VM92FK;S6q''9K4>J`K69ZMS1ds)S1,)*b4q0V01bqE^+?VM92F9/Q6q''9K4>J`K6p;_U1ds8i1,)*b4q0V01bqK`+?VM;1bga>6q''9K4>J`K7QqqW0JG@N2)@''D1ds)P0JG@P4q0V01c$gL+?V>32*s/V1bggU3(#AR2+0V;4>J`L0g6^B0JG@N2)@''D1ds)Y0JG@P4q0V01c$mN+?V>32*s/V1bgjG6p`R]2+0V;4>J`L1HlpD0JG@N2)@''D1dsD]0JG@P4q0V01c$sP+?V>32*s/V1bgjB2FK5Q2+0V;4>J`L2*N-F0JG@N2)@''D1ds)S0JG@P4q0V01c%$R+?V>32*s/V1bgjB2F9)O2+0V;4>J`L2a/?H0JG@N2)@''D1ds8i0JG@P4q0V01c%*T+?V>32*s,g3(#PZ1bg[<2+0V;4>J`L3BeQJ1ds)P1,)*b4q0V01c%E]+?VJL3(#GT6q''9K4>J`L69ZMS1ds)Y1,)*b4q0V01c%K_+?VM>6p`X_6q''9K4>J`L6p;_U1dsD]1,)*b4q0V01c%Qa+?VM92FK;S6q''9K4>J`L7QqqW1ds)S1,)*b4q0V01c-mM+?VM92F9/Q6q''9K4>J`M0g6^B1ds8i1,)*b4q0V01c-sO+?VM;1bga>6q''9K4>J`M1HlpD0JG@N2)@''D1ds)P0JG@P4q0V01c.$Q+?V>32*s/V1bggU3(#AR2+0V;4>J`M2*N-F0JG@N2)@''D1ds)Y0JG@P4q0V01c.*S+?V>32*s/V1bgjG6p`R]2+0V;4>J`M2a/?H0JG@N2)@''D1dsD]0JG@P4q0V01c.0U+?V>32*s/V1bgjB2FK5Q2+0V;4>J`M3BeQJ0JG@N2)@''D1ds)S0JG@P4q0V01c.K^+?V>32*s/V1bgjB2F9)O2+0V;4>J`M69ZMS0JG@N2)@''D1ds8i0JG@P4q0V01c.Q`+?V>32*s,g3(#PZ1bg[<2+0V;4>J`M6p;_U2Dmo\1,)*b4q0V01c.Wb+?VP@0K:gA6q''9K4>J`M7QqqW2_[-V1,)*b4q0V01c6sN+?VPL1Ggj@6q''9K4>J`N0g6^B2E*BN1,)*b4q0V01c7$P+?VY=6npGN6q''9K4>J`N1HlpD2)d6Z1,)*b4q0V01c7*R+?VG83A<W+4>J`N69ZMS2Dmo\1,)*b4q0V01c7Wa+?VP@0K:gA6q''9K4>J`N6p;_U2_[-V1,)*b4q0V01c7]c+?VPL1Ggj@6q''9K4>J`N7QqqW2E*BN1,)*b4q0V01c@$O+?VY=6npGN6q''9K4>J`O0g6^B2)d6Z1,)*b4q0V01c@6U+?VD676!I?4>J`O3BeQJ1,23X4q0V01c@W`+?V>31,;$&4>J`O69ZMS1GCOQ4q0V01c@]b+?VG60gn274>J`O6p;_U1,(LB4q0V01c@cd+?V>32D@<(4>J`O7QqqW1GCL;4q0V01cI-Q+?V>31,1s%4>J`P1-QgC1GCR=4q0V01cI3S+?V>31.+574>J`P1d3$E1GCL<4q0V01cIie+?VqW0fV?+4>J`Q69ZMS5smCr4q0V01dNi[+?VqW1daG94>J`\2*N-F5smRk4q0V01daSn+?VqW3&3Z,4>J`]69ZMS5smY$4q0V01ds/`+?VqW5sdaE4>J`^6TuVT5smt)4q0V02)$^J+?VqW6oI4<4>JcJ6p;_U5sn($4q0V02)%H_+?VqW77''0I4>JcK0g6^B5sn*s4q0V02)-jM+?VqW7Pm:<4>JcK6p;_U5t!Ca4q0V02)6sO+?VqX0L\/74>JcL1d3$E5t!F]4q0V02)I]b+?VqX1c@N,4>JcN76VhV5t!Oh4q0V02)[6S+?VqX2DRH*4>JcQ1d3$E5t!Y#4q0V02)dBV+?VqX3&!N*4>Jc\2a/?H5t"*r4q0V02+9;b+?VqY0L7l34>Jc_1d3$E5t*Ip4q0V02D@E\+?VqY1H@W.4>JfL0KpUA5t*Uc4q0V02DHpM+?VqY1c.B*4>JfL2*N-F5t*Us4q0V02DI*R+?VqY1e''Y<4>JfL5s?DR5t*Xg4q0V02DQsM+?VqY2+9\<4>JfN1-QgC5t*^u4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC(2FTeP4@)D&7Qq8D1,_''O4s2sR770L-%6QC(3(?(S4@)D)6TtrA1,_K[4s2sR7Pcb_%6QC(6U<mY4@)Fm1Hl711,_NU4s2sR7PdIs%6QC(6o."L4@)Fn0Koq.1,h$H4s2sR7RKI*%6QC)1c7H>4@)G(6TtrA1,hKd4s2sS0JkdR%6QC)5t!mZ4@1_Y69Yi@1,hKf4s2sS0Jl0]%6QC)68LeJ4@1_Z2EhR41,hNV4s2sS0JtgR%6QC)75@%L4@1_]76V/C1,hWX4s2sS0KCgN%6QC)76s*[4@1_^69Yi@1,hZX4s2sS0L7ug%6QC)7Pd4N4@1_g0Koq.1,hZZ4s2sS0L@NY%6QC*0JG[54@1_h1Hl711,psB4s2sS0LI`^%6QC*1I42I4@1bV5s>`?1,q''Y4s2sS0ekCH%6QC*1c%<<4@1bW5s>`?1,q-K4s2sS0f(^O%6QC*3(6"R4@1b^0g6%/1,q9N4s2sS0fVH_%6QC*3AiuC4@1b^6TtrA1,qZg4s2sS0gnGo%6QC*7PR(L4@1bl5s>`?1,q`Y4s2sS0h+Mo%6QC+0Jks94@1eX2EhR41-%$G4s2sS1,1aP%6QC+2`NuD4@1eh1-Q.01-%9R4s2sS1-m`\%6QC+2afhP4@1eh69Yi@1-%?^4s2sS1.3i\%6QC+5r(VH4@1ek5s>`?1-%WV4s2sS1.4Jn%6QC+5r_%N4@1el1Hl711-%W\4s2sS1.=,c%6QC+5t4$\4@1em2EhR41-%Zj4s2sS1GLXK%6QC+7RTE_4@1h]2a.[51-mTJ4s2sS1GqQa%6QC30Ju$:4@1h^2EhR41-mTP4s2sS1H%3V%6QC30K20<4@1h^5s>`?1-mT[4s2sS1H%]d%6QC30fM9=4@1h`1-Q.01-mcR4s2sS1IFPo%6QC32)IK>4@1hk7Qq8D1-mcW4s2sS1IO,b%6QC32*!iC4@1hl3''Id61-mc`4s2sS1IOMm%6QC32*sJL4@1hl6TtrA1-moh4s2sS1bq?\%6QC36Ua0]4@1k_1-Q.01-n8s4s2sS1c@0S%6QC40fV?>4@1kk2EhR41.!]U4s2sS1dX/c%6QC41I=8J4@1kn2*MI31.!fP4s2sS1dshs%6QC41bq6;4@1ko0Koq.1.!lg4s2sS2)7''R%6QC43&*T>4@1n^1-Q.01.!uW4s2sS2)Rfd%6QC46oR:P4@1nk3Bdm71."Ar4s2sS2*s&^%6QC477BB_4@1nm76V/C1.+N#4s2sS2F]\j%6QC61H%E>4@1t_5s>`?1.4#V4s2sS2`EKU%6QC62DdT?4@1tc1d2@21.4&[4s2sS2`O5i%6QC63&a#D4@1tm5s>`?1.4,k4s2sS2a]Pg%6QC66UX*\4@1tr76V/C1.4N"4s2sS3&*]_%6QC675-nJ4@2"^6TtrA1.4Sf4s2sS3&<HV%6QC70KD<>4@2"b1-Q.01.<od4s2sS3&X2h%6QC70h+>L4@2"d0Koq.1.=)[4s2sS3(#Gb%6QC72E3lC4@2"p1d2@21.=,i4s2sS3(-2!%6QC72aonQ4@2"r0Koq.1.=2X4s2sS3(?1t%6QC73ANc@4@2"s6TtrA1.=Su4s2sS3AiKS%6QC777KH`4@2%d5s>`?1.=Yd4s2sS3As5g%6QC80Jbm84@2%f2EhR41.ErS4s2sS3B/u^%6QC81GD!84@2%p76V/C1.F&S4s2sS3C>Ja%6QC81I42I4@2%q6p;&B1.F)S4s2sS3CH.s%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>KA_0g6^B69.G$4q0V07Plqc+?VtN75@%94>KA`0g6^B69.Ln4q0V07QE.d+?VtV1bh0''4>KAd2Ei6G6:!Fo4q0V07QECk+?VtV1daG94>KAl3''JHI6:!Lf4q0V07RBO-+?VtV3&Wr04>KAo76VhV6:!n''4q0V07R]''r+?VtV68:Y54>KAp3''JHI6:!q(4q0V07R]=$+?VtV6:3pG4>SZI1-QgC6:*@p4q0V10JbLK+?VtW0ebd#4>SZJ3''JHI6:*Fn4q0V10JtRK+?VtW1H.K,4>SZK3BeQJ6:*Le4q0V10Ju-[+?VtW1cRZ.4>SZK76VhV6:*Lt4q0V10K)<_+?VtW2DRH*4>SZ\3''JHI6:3F]4q0V10LeJp+?VtX0L7l34>SZ\7QqqW6:3Fq4q0V10eb:F+?VtX0ebd#4>S]G3BeQJ6:3Ld4q0V10ebmW+?VtX1,qH,4>S]H6TuVT6:3Rb4q0V10f;6\+?VtX3(,q>4>S]M0KpUA6:3ak4q0V10fCaM+?VtX3B0234>S]N1-QgC6:4''p4q0V10fV''T+?VtX6Ua0J4>S]X2Ei6G6:44$4q0V10g[TY+?VtY0K)*(4>S]Y1-QgC6:<Le4q0V11,:^N+?VtY3ANc-4>S`J2Ei6G6:<gj4q0V11,;-Z+?VtY3C5n=4>S`P2*N-F6:ERb4q0V11-%<X+?VtZ0h"884>S`[1-QgC6:E_!4q0V11.+#b+?VtZ2)[W-4>S`[3BeQJ6:Eak4q0V11.3o^+?VtZ2E<r14>S`\3BeQJ6:Egg4q0V11.=Mn+?VtZ3(6"?4>ScO1-QgC6:N[q4q0V11b^UI+?Vt[6Spt94>SfK2*N-F6:OBt4q0V11da8e+?W"F5r(V54>Sf]5s?DR6SLe_4q0V11dj&^+?W"F5t*sH4>Sf^3BeQJ6SLhq4q0V11ds_p+?W"F6pX!G4>Sf`76VhV6SLtf4q0V11e''qu+?W"F7Q<R@4>SiL7QqqW6SU>R4q0V12)7!P+?W"G1.=A94>SiM3BeQJ6SUAU4q0V12)@-S+?W"G1dO;74>SiO3BeQJ6SUJW4q0V12)[EX+?W"G3(?(@4>SiQ6TuVT6SUSY4q0V12)d9S+?W"G3CQ+@4>SiR1HlpD6SUk\4q0V12*s)_+?W"G7P[.:4>Si^3''JHI6S^>a4q0V12+''Af+?W"H0ebd#4>Si_69ZMS6S^D_4q0V12+0eq+?W"H1.+574>Si_6p;_U6S^Dc4q0V12+0ks+?W"H1GD!%4>Si_7QqqW6S^GR4q0V12+C&!+?W"H2*!i04>SlM6TuVT6S^Sh4q0V12DIT`+?W"H3&!N*4>SlO1HlpD6S^Yh4q0V12Dd9T+?W"H68h":4>SlP2Ei6G6S^tf4q0V12E*EU+?W"H77BBL4>SlS1d3$E6S_+b4q0V12E*W[+?W"H7Q3L?4>SlS5s?DR6S_+s4q0V12FKnr+?W"I2_dK*4>SoP76VhV6Sh.c4q0V13&<EU+?W"J7QEXA4>SrT3''JHI6T$Yc4q0V13&Wc\+?W"K1IF>84>SrU1-QgC6T$\e4q0V13&`c[+?W"K2)[W-4>SrU69ZMS6T$_j4q0V13&il]+?W"K2_mQ+4>SrW5s?DR6T$hl4q0V13&s;h+?W"K3A<W+4>SrW7QqqW6T$k^4q0V13''onp+?W"K6:!dE4>Sra0KpUA6T%4t4q0V13(#Da+?W"K6UX*I4>Sra1-QgC6T%5#4q0V13($/!+?W"K75@%9ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1H7cV4s2sT2+9>c%6QF+6oR:P4@:tp7Qq8D1H7ch4s2sT2+BGe%6QF+7PI"K4@;"]5s>`?1H7il4s2sT2DR`c%6QF,0JG[54@;"_2EhR41H@-D4s2sT2D[<V%6QF,0JYg74@;"_5s>`?1H@0G4s2sT2Dm6R%6QF,1-%N@4@;"c0Koq.1H@6Y4s2sT2E3ud%6QF,1IODL4@;"d6TtrA1H@<H4s2sT2F05b%6QF,2).9;4@;"m3''Id61H@?K4s2sT2FB5`%6QF,2D[N>4@;"o1d2@21H@Hb4s2sT2_d3S%6QF,5qkJF4@;%^3''Id61H@cX4s2sT2`!3Q%6QF,68UkK4@;%`1d2@21H@cZ4s2sT2`!?U%6QF,6SptL4@;%a69Yi@1H@f[4s2sT2`*re%6QF,6T.+N4@;%b0Koq.1H@l_4s2sT2`N]Z%6QF,77''0\4@;%e7Qq8D1H@lm4s2sT2`W`Z%6QF,77KH`4@;%f3Bdm71H@o^4s2sT2aK2_%6QF40K20<4@;%o76V/C1I3`L4s2sT2a]ts%6QF40ekj74@;%p7Qq8D1I3iP4s2sT3&!?V%6QF41cIT@4@;(_1-Q.01I3iW4s2sT3&*6R%6QF42*jDK4@;(`76V/C1I3lb4s2sT3&<6P%6QF43B'',E4@;(e3Bdm71I4#h4s2sT3&iZW%6QF43CQ+S4@;(f1d2@21I4>]4s2sT3&sDk%6QF468:YH4@;(o0Koq.1I4Dt4s2sT3(,Yg%6QF46q0?_4@;(r3''Id61I<cT4s2sT3A<lc%6QF50KD<>4@;+`0Koq.1I<rR4s2sT3ArWV%6QF52aonQ4@;+h5s>`?1I=#i4s2sT3B9Gj%6QF55rLnL4@;+r3Bdm71I=Ap4s2sT3CGVd%6QF55t!mZ4@;+s1d2@21I=D^4s2sT3CH1t%6QF568LeJ4@;+t0g6%/1I=Db4s2sT3CP_f%6QF56:*jY4@;+t76V/C1I=Gt4s2sT5qkSg%6QF60fD3<4@;Cl76V/C1IF)]4s2sT5sn()%6QF62aKVM4@;D&0Koq.1IF)f4s2sT5t!Il%6QF72`3cA4@;G(3''Id61IOMs4s2sT6S_%n%6QF75t*s[4@;Ik7Qq8D1IOPf4s2sT6Sh"l%6QF76T@7P4@;In2EhR41IOVd4s2sT6T-ec%6QF76o."L4@;Io2a.[51IWuO4s2sT6TI(h%6QF80LS)I4@;J%5s>`?1IX&Q4s2sT6UNaq%6QF81,1s84@;J''3''Id61IX2[4s2sT6nptk%6QF82E*fB4@;Lk6TtrA1IXT!4s2sT6oIIt%6QF8681SG4@;Lq0Koq.1IX]"4s2sT6pW^p%6QF86q''9^4@;M&3''Id61IXc&4s2sT6pj@+%6QF91,_<=4@;M+5s>`?1Ia,Y4s2sT6q0O-%6QF92).9;4@;On1-Q.01Ia5W4s2sT75Hba%6QF92b#tR4@;Oq5s>`?1Ia>X4s2sT75dLs%6QF93AWiA4@;Os2EhR41IaA]4s2sT76!7j%6QF95rUtM4@;P''1-Q.01Iaf%4s2sT77K1!%6QI$0JG[54@;Rl7Qq8D1b^U<4s2sT7PQY^%6QI$0JYg74@;Rm1d2@21b^XB4s2sT7P[Cr%6QI$1c.B=4@;Rr2EhR41b^aD4s2sT7Q*4i%6QI$6:=![4@;S-1-Q.01b_6b4s2sT7Rf3u%6QI%0Jbm84@Ck[2EhR41bg[@4s2sU0JkaQ%6QI%2D@<;4@Cki2EhR]DId3g@q]:k%1P3T+C\npBl7Bl@q]:k%6QI%2DIB<4@Cki3''Id61bgpF4s2sU0LRZ[%6QI%3&WrC4@Ckl76V/C1bh?W4s2sU0f(gR%6QI%6Ua0]4@Cn\1-Q.01bhER4s2sU0f;B`%6QI%75@%L4@Cn^0Koq.1bpgG4s2sU0g[WZ%6QI&1-%N@4@Cnj1d2@21bpgT4s2sU0g\2j%6QI&2`3cA4@CqY3''Id61bq?Q4s2sU1,D?_%6QI&5r:bJ4@Cq]0Koq.1c$j?4s2sU1.*c[%6QI''0fD3<4@Cql5s>`?1c$sD4s2sU1GCRJ%6QI''1c%<<4@CtZ1d2@21c$sS4s2sU1GD9^%6QI''1dsSN4@Ct[2*MI31c%!G4s2sU1GM<^%6QI''2E!`A4@Ct]5s>`?1c%Ee4s2sU1H7fe%6QI''6S^hJ4@Ctk5s>`?1c%KT4s2sU1I4Al%6QI''77BB_4@Cto1-Q.01c-mB4s2sU1Iaes%6QI(0Jks94@D"[0Koq.1c.*N4s2sU1c@cd%6QI(2`<iB4@D"c0g6%/1c.-Y4s2sU1cRcb%6QI(2afhP4@D"c6TtrA1c.WT4s2sU1e''hr%6QI(7Pm:O4@D%]2EhR41c7$G4s2sU2)I`c%6QI)1,_<=4@D%a0Koq.1c7''K4s2sU2)[`a%6QI)1H@WA4@D%b6TtrA1c7*W4s2sU2)mKX%6QI)3(6"R4@D%p0g6%/1c79M4s2sU2+0_o%6QI)3AiuC4@D%p6TtrA1c7QY4s2sU2+BJf%6QI)5rh+O4@D%r3''Id61c7Te4s2sU2DHsN%6QI)75d=P4@D(a5s>`?1c7]\4s2sU2Ddcb%6QI)7RK?^4@D(c3''Id61c@''E4s2sU2E3NW%6QI*1,hB>4@D(f76V/C1c@*K4s2sU2F0#\%6QI*1IODL4@D(o5s>`?1c@3I4s2sU2FKMg%6QI*3A`oB4@D+`5s>`?1c@?O4s2sU2_m`a%6QI*5s[[W4@D+b3''Id61c@ZV4s2sU2`3HV%6QI*6:!dX4@D+d1-Q.01c@Ze4s2sU2`<KV%6QI*75I+M4@D+g5s>`?1c@cZ4s2sU2`X5h%6QI+1dO;J4>JTV3Bdm71cI6X4s2sC0JP7F%6QI+1daGL4>8HT3Bdm71cI6Z4s2sC0etLJ%6QI+1dsSN4>JZ\7Qq8D1cI]g4s2sC0Jc-]%6QI+5t*s[4>8HJ76V/C1cI]i4s2sA0Ju3]%:sEf@V0+`@<)ed0eb:(@V''1dDIR3u@;]^h%6Q<u0JPa64>8HH7QqqW0JG794q0V.0K(dP+?V>32E*fB4>SZF0Koq.0JGCF4s2sA0K)3\+?VD51,V6)4>8HI6p;_U0JGCR4s2sC0JP@I%6Q<u2_mQ>4>8HJ1HlpD1,(FB4q0V.0K1gP+?V>32`3cA4>JTF6TtrA0JGFD4s2sA0K1pS+?VG60f2''''4>8HJ3''JHI0JGI@4s2sD0JGIM%6Q<u3&WrC4>8HK2a/?H1,:aE4q0V.0K;B_+?V>33(#kP4>JTH1-Q.00JGIU4s2sA0KCgN+?W+_75-n74>8HT69ZMS0JGd[4s2sC0f^pO%6Q<u5t!mZ4>8HT76VhV1,1dF4q0V.0L@HW+?V>368:YH4>JZM5s>`?0JGgO4s2sA0L@]^+?VD71."/64>8HU5s?DR0JGg[4s2sC1,q0U%6Q<u6:3pZ4>8HU6p;_U1,:gE4q0V.0LINX+?V>36SUbI4>JZI2a.[50JGm`4s2sA0LSAo+?VD;2D@<(4>8HX2Ei6G0JGpS4s2sC2+0,^%6Q<u76*OS4>8HX5s?DR1,V?S4q0V.0Ldo`+?V>37Q*FQ4>JTG0Koq.0JGsa4s2sA0LeJp+?VD;2E<r14>8KD3''JHI0JPC>4s2sW7PHP\%6Q=!1c.B=4>8KJ1d3$E7Rf1%4q0V.0fCpR+?V>43B02F4>S]J0g6%/0JPRJ4s2sA0gd][+?VG72DmZ-4>8KW1HlpD0JPp^4s2sC0fLdM%6Q=!6UX*\4>8KX2Ei6G1,1[@4q0V.0gmra+?V>475mCQ4>8QO0g6%/0JQ!U4s2sA0h"Mp+?V>65r1\64>8KY7QqqW0JQ$d4s2sA1I<f[%6Q="0JG[54>8NE2Ei6G0Jc''P4q0V.1,;<_+?V>51GD!84>JcK76V/C0JYF=4s2sA1,C[L+?VD:1,1s%4>8NH1HlpD0JYF@4s2sC2)7''R%6Q="1Gq?=4>8NH2Ei6G1,UgI4q0V.1,CjQ+?V>51H7Q@4>JcL6p;&B0JYFE4s2sA1,D3[+?VD:1GM''&4>8NH69ZMS0JYFO4s2sC2)@*R%6Q="1IODL4>8NH76VhV1,UjJ4q0V.1,DB`+?V>51b_*94>JcM6p;&B0JYI>4s2sA1,LaM+?VD:1b_*&4>8NI1HlpD0JYIN4s2sC2)I*Q%6Q="1dXAK4>8NI6p;_U1G_$K4q0V.1,UdM+?V>52)IK>4>ScZ1Hl710JYLC4s2sA1,VKa+?VG93B9844>8NK0KpUA0JYOA4s2sD1H7cd%6Q="2DdT?4>8NK2*N-F1G_!M4q0V.1,_''T+?V>52E3lC4>ScZ2a.[50JYOH4s2sA1,gsP+?VG9681S44>8NL1HlpD0JYRG4s2sD1H7''P%6Q="2`NuD4>8NL6p;_U1G_?`4q0V.1,hWc+?V>53&3Z?4>ScR0Koq.0JYUE4s2sA1,q-T+?VG96SL\54>8NM2Ei6G0JYUI4s2sD1H7Za%6Q="3''oeO4>8NM6p;_U1G_<b4q0V.1,q`e+?V>53ANc@4>ScZ3Bdm70JYpQ4s2sA1.*f\+?VG82D@<(4>8NX1HlpD0JZ$`4s2sC1dj#]%6Q="6ps3]4>8NZ69ZMS1,LmC4q0V.1.=Sp+?V>577BB_4>JWK1Hl710JZ*P4s2sA1.F)a+?VD62*sJ94>8QF2*N-F0JbI<4s2sD1,(CG%6Q=#1,1s84>8QI5s?DR1,M!Y4q0V.1G_?]+?V>61c[`B4>J`P1d2@20JbOP4s2sA1GhH_+?V>368C_64>8QJ7QqqW0JbRA4s2sC0K:dN%6Q=#2)@E=4>8QW2*N-F1GCX?4q0V.1I3o_+?V>67RB9]4>SZW0g6%/0Jc0c4s2sA1Iaht+?V>70ebd#4>8TG0KpUA0JkI<4s2sA1bggN%6Q=$0Jbm84>8TI1-QgC0JkLB4q0V.1bpmO+?V>71IODL4>8TJ2EhR40JkRS4s2sA1c%Tb+?VqW0JG["4>8TK0g6^B0JkUC4s2sR6SLG_%6Q=$1c7H>4>8TK6TuVT5sm@\4q0V.1c.Ta+?V>72).9;4@)=h3Bdm70JkXD4s2sA1c7-S+?VqW1.+574>8TL2Ei6G0JkXH4s2sR6S_+p%6Q=$2*!iC4>8TL5s?DR5smFf4q0V.1c@*Q+?V>72D[N>4@)=n0Koq.0Jk[F4s2sA1c@6U+?VqW2`Eo04>8TM3''JHI0Jk[J4s2sR6T?b`%6Q=$2F0ML4>8TM6p;_U5smUf4q0V.1c@cd+?V>72_dK=4@)=o3Bdm70Jk^F4s2sA1cI9U+?VqW3C>t>4>8TN2Ei6G0Jk^J4s2sR6TIV"%6Q=$2`X&E4>8TN69ZMS5smpt4q0V.1cIfd+?V>72aonQ4@)>#7Qq8D0Jk^X4s2sA1cR0Q+?VqW69%.<4>8TO0g6^B0JkaF4s2sR6UF+''%6Q=$3''f_N4>8TO69ZMS5sn''p4q0V.1cRle+?V>73(6"R4@)>''2a.[50JkdE4s2sA1c[?U+?VqW77KHM4>8TP2*N-F0JkdJ4s2sR6Uips%6Q=$3B'',E4>8TP3''JHI5sn+/4q0V.1c[oe+?V>73CH%R4@)@h6TtrA0Jl''P4s2sA1dNu_+?VqX1.+574>8TX2Ei6G0Jl''S4s2sR6o-Y`%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaU1dODk+?V>75sdaX4@)@l1d2@20Jl*P4s2sA1dX#_+?VqX2FBY;4>8TY2Ei6G0Jl*V4s2sR6oQnc%6Q=$6:!dX4>8TY6TuVT5t!Xu4q0V.1dXVp+?V>76:O-]4@)@p0g6%/0Jl-N4s2sA1d`u]+?VqX3&j)24>8TZ1d3$E0Jl-S4s2sR6odUu%6Q=$6T@7P4>8TZ3BeQJ5t"''o4q0V.1daVo+?V>76UX*\4@)A''0Koq.0Jl0Q4s2sA1dj,`+?VqX7Q<R@4>8T[2*N-F0Jl0V4s2sR6q0X0%6Q=$6o[@Q4>8T[3BeQJ5t*Ie4q0V.1dj_q+?V>76q''9^4@)Cl0Koq.0Jl3P4s2sA1ds,_+?VqY1H.K,4>8T\1HlpD0Jl3T4s2sR75Q\^%6Q=$75d=P4>8T\2a/?H5t*Uf4q0V.1dsDg+?V>777''0\4@)Cm6TtrA0Jl3f4s2sA1e''/_+?VqY2+''P:4>8T]0g6^B0Jl6T4s2sR75[Ou%6Q=$7Q!@P4>8T]2Ei6G5t*[k4q0V.1e''Jh+?V>77R93\4@)Cp3''Id60Jl6c4s2sA1e''ks+?VqY2aT\;4>8T]76VhV0Jl6g4s2sR76!+f%6Q=%0JPa64>8WH1HlpD5t++-4q0V.2)$pP+?V>80K20<4@)D''6TtrA0JtOD4s2sA2)%<[+?VqY6Uj6K4>8WH69ZMS0JtOO4s2sR779+!%6Q=%0f2'':4>8WI2*N-F5t3Oe4q0V.2).''S+?V>80f_E?4@)Fl6TtrA0JtRQ4s2sA2).N`+?VqZ1IF>84>8WJ0KpUA0JtU@4s2sR7Plh`%6Q=%1,D*:4>8WJ1d3$E5t3[j4q0V.2)7''R+?V>81,hB>4@)Fo6TtrA0JtUF4s2sA2)70U+?VqZ2DdT,4>8WJ76VhV0JtUT4s2sR7QE.d%6Q=%1GV-:4>8WK1HlpD5t41#4q0V.2)@-S+?V>81H7Q@4@)G(2a.[50JtXP4s2sA2)@Q_+?VqZ6UX*I4>8WK76VhV0JtXU4s2sR7R]:#%6Q=%1b_*94>8WL0g6^B5t4<t4q0V.2)I-R+?V>81c7H>4@1_U0Koq.0Jt[Q4s2sA2)IW`+?VtE0ge,64>8WL6p;_U0Jt[U4s2sS0JkUM%6Q=%2)@E=4>8WM2*N-F6818Q4q0V.2)RBX+?V>82*jDK4@1_\6TtrA0Jt^U4s2sA2)Rfd+?VtE3(#k=4>8WN0g6^B0JtaE4s2sS0KD*V%6Q=%2DmZ@4>8WN3''JHI681Dh4q0V.2)[HY+?V>82F0ML4@1_f3''Id60JtaT4s2sA2)[of+?VtE5sdaE4>8WO0g6^B0JtdF4s2sS0L@QZ%6Q=%2`<iB4>8WO2a/?H681b`4q0V.2)dKY+?V>82aKVM4@1_h2a.[50JtdU4s2sA2)dld+?VtE6nge64>8WP0g6^B0JtgF4s2sS0ebRN%6Q=%3&<`@4>8WP1d3$E68:/\4q0V.2)mKX+?V>83&a#D4@1bW1-Q.00JtgL4s2sA2)mT[+?VtF0fV?+4>8WP5s?DR0JtgW4s2sS0el!Y%6Q=%3(,qQ4>8WP7QqqW68:5O4q0V.2*!EU+?V>83AWiA4@1bY1d2@20JtjI4s2sA2*!QY+?VtF1H.K,4>8WQ2a/?H0JtjM4s2sS0f1RJ%6Q=%3C5nP4>8WQ6TuVT68:>O4q0V.2*"&g+?V>83CQ+S4@1b[1d2@20Ju-O4s2sA2*j#^+?VtF2`Nu14>8WY2a/?H0Ju-U4s2sS0fV-V%6Q=%5sdaX4>8WY6p;_U68:JU4q0V.2*s,`+?V>868^qL4@1bj6TtrA0Ju0U4s2sA2*s8d+?VtF76!I?4>8WZ76VhV0Ju0d4s2sS1,(OK%6Q=%6SUbI4>8W[1-QgC68C5]4q0V.2+''/`+?V>86SptL4@1eX1d2@20Ju3c4s2sA2+''er+?VtG2E3l04>8W[7QqqW0Ju6P4s2sS1,h$R%6Q=%6o$qK4>8W\1HlpD68CMW4q0V.2+0;c+?V>86oI4O4@1e`0Koq.0Ju6X4s2sA2+0_o+?VtG3B0234>8W\69ZMS0Ju6c4s2sS1-mTX%6Q=%6q''9^4>8W\7QqqW68Cha4q0V.2+9>c+?V>875[7O4@1ej3''Id60Ju9Z4s2sA2+9ep+?VtG6o[@>4>8W]76VhV0Ju<R4s2sS1.=#`%6Q=%7P[.M4>8W^2Ei6G68Ctr4q0V.2+BMg+?V>87QEXT4@1em1Hl710Ju<c4s2sA2+C"u+?VtG7Q3L?4>8ZI0KpUA0K(U>4s2sS1GCLH%6Q=&0Jks94>8ZI2*N-F68L>M4q0V.2D@$Q+?V>90K;6=4@1hY1Hl710K(UN4s2sA2D@K^+?VtH2)IK+4>8ZI76VhV0K(US4s2sS1GqK_%6Q=&0ebd64>8ZJ0g6^B68LJf4q0V.2DHsN+?V>90f)!94@1h^1d2@20K(XF4s2sA2DI3U+?VtH2_[E)4>8ZJ6TuVT0K(XR4s2sS1H7''P%6Q=&0h"8K4>8ZK0KpUA68LSW4q0V.2DR*Q+?V>91,V6<4@1hi0Koq.0K([G4s2sA2DR9V+?VtH6Spt94>8ZK69ZMS0K([R4s2sS1IFJm%6Q=&1.FGM4>8ZL0KpUA68M"d4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN70K(^T4s2sA2D[cc+?VtI1,qH,4>8ZM0g6^B0K(aC4s2sS1c6sN%6Q=&1c7H>4>8ZM2Ei6G68USS4q0V.2DmHX+?V>92*!iC4@1km6TtrA0K(dT4s2sA2Dmic+?VtI75I+:4>8ZN76VhV0K(dX4s2sS1dsbq%6Q=&2D[N>4>8ZO1d3$E68^JS4q0V.2E!HW+?V>92E*fB4@1n[69Yi@0K(gK4s2sA2E!QZ+?VtJ1,M0(4>8ZO5s?DR0K(gW4s2sS2)7*S%6Q=&2FTeP4>8ZO7QqqW68^PQ4q0V.2E*BT+?V>92`!W?4@1n^0Koq.0K(jH4s2sA2E*NX+?VtJ1c%<)4>8ZP2a/?H0K(jM4s2sS2)IW`%6Q=&2a]bO4>8ZP6p;_U68^Vf4q0V.2E+&g+?V>93&!N=4@1n_7Qq8D0K(mF4s2sA2E3HU+?VtJ5qkJ34>8ZQ2*N-F0K(mK4s2sS2*jMl%6Q=&3&a#D4>8ZQ3''JHI68_(`4q0V.2E3]\+?V>93''oeO4@1nl1Hl710K(mX4s2sA2E4,h+?VtJ6:*jF4>8ZR0g6^B0K(pH4s2sS2+''_p%6Q=&3AWiA4>8ZR2*N-F68_,"4q0V.2E<`\+?V>93B98G4@1q\0Koq.0K)3P4s2sA2F0,_+?VtK3C>t>4>8ZZ2Ei6G0K)3U4s2sS2F0Yn%6Q=&5t!mZ4>8ZZ76VhV68pSP4q0V.2F9)]+?V>968:YH4@1t^3''Id60K)6R4s2sA2F95a+?VtL1.FG:4>8Z[2*N-F0K)6U4s2sS2`!EW%6Q=&6:*jY4>8Z[6TuVT68pbY4q0V.2FB/^+?V>96SUbI4@1tc0Koq.0K)9T4s2sA2FB>c+?VtL2a]b<4>8Z\3''JHI0K)9Y4s2sS2`O/g%6Q=&6U<mY4>8Z\6p;_U68pkn4q0V.2FBns+?V>96npkJ4@1te2EhR40K)<U4s2sA2FKDd+?VtL5r_%;4>8Z]2Ei6G0K)<Y4s2sS2aKbo%6Q=&6odFR4>8Z]5s?DR68q4f4q0V.2FKtt+?V>96q0?_4@1tq6TtrA0K)?T4s2sA2FTDc+?VtL7RK?K4>8Z^1d3$E0K)?X4s2sS2b$8#%6Q=&75mCQ4>8Z^3BeQJ69$YX4q0V.2FTts+?V>9779<^4@2"^3''Id60K)BS4s2sA2F]Db+?VtM1,M0(4>8Z_1d3$E0K)BX4s2sS3&<BT%6Q=&7Q*FQ4>8Z_3''JHI69$b[4q0V.2F^(u+?V>97R]K`4@2"b6TtrA0K1[?4s2sA2_[!N+?VtM2FBY;4>8]J6TuVT0K1[R4s2sS3(#A`%6Q=''0fD3<4>8]K2a/?H69%Cn4q0V.2_dT^+?V>:0g\&H4@2"s3''Id60K1aA4s2sA2_m-P+?VtN1IF>84>8]L3''JHI0K1aI4s2sS3Aic[%6Q=''1.+5J4>8]L6p;_U69-q`4q0V.2`!-O+?V>:1GM''94@2%e1d2@20K1dE4s2sA2`!<T+?VtN3&Ef.4>8]M2a/?H0K1dI4s2sS3B0#_%6Q=''1H@WA4>8]M5s?DR69."n4q0V.2`!ca+?V>:1IF>K4@2%o6TtrA0K1dW4s2sA2`*3P+?VtN6:3pG4>8]N1HlpD0K1gF4s2sS3C>bi%6Q=''1c@N?4>8]N5s?DR69.D%4q0V.2`*ib+?V>:1daGL4@2%r3''Id60K1gW4s2sA2`*uf+?VtN6ps3J4>8]O0g6^B0K1jF4s2sS3CP_f%6Q=''2)[W@4>8]O2a/?H69.Ll4q0V.2`3QY+?V>:2*sJL4@2%t2a.[50K1jV4s2sA2`3ue+?VtV0JG["4>8]P0KpUA0K1mE4s2sS5r1Ja%6Q=''2DmZ@4>8]P2Ei6G6:!Ff4q0V.2`<WZ+?V>:2E<rD4@2=j6p;&B0K1mU4s2sA2`=#e+?VtV2)@E*4>8]P7QqqW0K1pE4s2sS5rLP`%6Q=''2_dK=4>8]Q1HlpD6:!Lg4q0V.2`EQW+?V>:2`3cA4@2=m0Koq.0K1pM4s2sA2`F#d+?VtV3&<`-4>8]Q6p;_U0K1pZ4s2sS5s[Io%6Q=''2b#tR4>8]R0KpUA6:!n(4q0V.2`NTW+?V>:3&EfA4@2>#3''Id60K1sO4s2sA2`O)e+?VtV6o[@>4>8]S2Ei6G0K2!O4s2sS68LG^%6Q=''3C,hO4>8]S6p;_U6:*Ip4q0V.2`X;j+?V>:3CZ1T4@2@k1d2@20K29R4s2sA2aK8a+?VtW1e''Y<4>8]\2a/?H0K2<X4s2sS6:Npu%6Q=''6:!dX4>8]\69ZMS6:+.24q0V.2aTnr+?V>:6:F''\4@2Ch3''Id60K2<f4s2sA2a];`+?VtX0L@r44>8]]1d3$E0K2?Y4s2sS6SUD]%6Q=''6TI=Q4>8]]6p;_U6:3Io4q0V.2a^"t+?V>:6Uj6^4@2Cj1d2@20K2BU4s2sA2afJd+?VtX1GD!%4>8]^2a/?H0K2BZ4s2sS6SpJ\%6Q=''6odFR4>8]^69ZMS6:3Rc4q0V.2ag%t+?V>:6q''9^4@2Cl6TtrA0K2ET4s2sA2aoJc+?VtX3&Ef.4>8]_1d3$E0K2EX4s2sS6T@Cr%6Q=''75mCQ4>8]_3''JHI6:3ai4q0V.2ap"r+?V>:77''0\4@2Cq3Bdm`DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>8]_6TuVT0K2Eg4s2sS6U<Ci%6Q=''77KH`4>8]`0KpUA6:4$t4q0V.2b#Mc+?V>:7P[.M4@2D%0Koq.0K2HW4s2sA2b#Yg+?VtX68Le74>8]`2Ei6G0K2H[4s2sS6UF.(%6Q=''7RB9]4>8]`6p;_U6:4+04q0V.3&!''N+?V>;0Jbm84@2D)1d2@20K:aE4s2sA3&!9T+?VtY0Jks&4>8`K7QqqW0K:d@4s2sS6o6ke%6Q=(0f)!94>8`L1d3$E6:<[j4q0V.3&*?U+?V>;0fV?>4@2Fq0Koq.0K:dQ4s2sA3&*fb+?VtY3&a#14>8`L76VhV0K:dV4s2sS6ocqb%6Q=(1,;$94>8`M1HlpD6:<go4q0V.3&3HW+?V>;1-%N@4@2G(1d2@20K:jE4s2sA3&<BT+?VtZ0LJ#54>8`N2a/?H0K:jJ4s2sS757.n%6Q=(1I42I4>8`N69ZMS6:E^f4q0V.3&=#f+?V>;1b_*94@2Io1d2@20K:mE4s2sA3&EHU+?VtZ2*!i04>8`O2*N-F0K:mI4s2sS75ch`%6Q=(1dO;J4>8`O69ZMS6:Ege4q0V.3&Eud+?V>;1dsSN4@2Iq1Hl710K:mY4s2sA3&NES+?VtZ2aT\;4>8`P1d3$E0K:pI4s2sS76!Xu%6Q=(2)[W@4>8`P3''JHI6:Ek''4q0V.3&N][+?V>;2*jDK4@2Is3''Id60K:pW4s2sA3&O)f+?VtZ6nge64>8`P7QqqW0K:sE4s2sS779''u%6Q=(2DRH=4>8`Q1d3$E6:F=!4q0V.3&W]Z+?V>;2E3lC4@2Lk3''Id60K:sN4s2sA3&X&d+?Vt[0fV?+4>8`Q69ZMS0K:sY4s2sS7PR4n%6Q=(2FTeP4>8`Q7QqqW6:Ndc4q0V.3&`TV+?V>;2`!W?4@2Lp0Koq.0K;!N4s2sA3&`i]+?Vt[6UO$H4>8`S1d3$E0K;$L4s2sT0K(mS%6Q=(3&WrC4>8`S2a/?H6SLMS4q0V.3&j2f+?V>;3''oeO4@:eg0Koq.0K;$\4s2sA3&jAk+?W"F5smgF4>8`T0KpUA0K;''I4s2sT0L8/l%6Q=(3ANc@4>8`T2*N-F6SLh_4q0V.3&rl\+?V>;3B'',E4@:eh6TtrA0K;''P4s2sA3&s8g+?W"F6:O-J4>8`T6TuVT0K;''\4s2sT0LIf`%6Q=(5qkJF4>8`\0g6^B6SLnf4q0V.3''f;`+?V>;5r:bJ4@:ej69Yi@0K;?U4s2sA3''fGd+?W"F75R1;4>8`\3BeQJ0K;?a4s2sT0Ldl_%6Q=(68C_I4>8`]2Ei6G6SU;_4q0V.3''oPf+?V>;69%.O4@:hY1Hl710K;BZ4s2sA3''onp+?W"G1,_<*4>8`]69ZMS0K;Bd4s2sT0eu*[%6Q=(6:=![4>8`]7QqqW6SU>c4q0V.3(#Da+?V>;6S^hJ4@:hZ3''Id60K;EW4s2sA3(#Sf+?W"G1cRZ.4>8`^2a/?H0K;E[4s2sT0f23\%6Q=(6U<mY4>8`^69ZMS6SUGT4q0V.3($+u+?V>;6Uj6^4@:h]1d2@20K;HS4s2sA3(,Mc+?W"G2E*f/4>8`_2a/?H0K;H\4s2sT0fVNa%6Q=(6ps3]4>8`_76VhV6SUSg4q0V.3(5Sd+?V>;75I+M4@:hh3''Id60K;Kf4s2sA3(61u+?W"G6oR:=4>8`a0KpUA0K;NV4s2sT0h*i\%6Q=(7Pd4N4>8`a1d3$E6SV%t4q0V.3(>hj+?V>;7Q<RS4@:kX6TtrA0K;Ng4s2sA3(?8!+?W"H0fV?+4>8`a76VhV0K;Nk4s2sT1,26^%6Q=)0JG[54>8cL0g6^B6S^DV4q0V.3A<<S+?V><0K)*;4@:k[0g6%/0KCgI4s2sA3A<`_+?W"H2)%3''4>8cL7QqqW0KCjA4s2sT1,_K`%6Q=)0f)!94>8cM1d3$E6S^Sf4q0V.3AEHV+?V><0fV?>4@:k`3''Id60KCjU4s2sA3AErd+?W"H5r:b74>8cN0KpUA0KCmC4s2sT1-n8k%6Q=)1,;$94>8cN1HlpD6S^tb4q0V.3ANKV+?V><1,hB>4@:kl6TtrA0KCmK4s2sA3ANla+?W"H75I+:4>8cN69ZMS0KCmV4s2sT1.=Mn%6Q=)1GM''94>8cO1-QgC6S_+j4q0V.3AWHT+?V><1Gh9<4@:kn69Yi@0KCpI4s2sA3AWTX+?W"I0K;6*4>8cO3''JHI0KCpL4s2sT1GD0[%6Q=)1I42I4>8cO6TuVT6SgGQ4q0V.3AX,g+?V><1b_*94@:n[1d2@20KCsE4s2sA3A`KT+?W"I1,qH,4>8cP1d3$E0KCsI4s2sT1H%3V%6Q=)1c[`B4>8cP5s?DR6SgY\4q0V.3Aa&d+?V><1daGL4@:n`6TtrA0KD!F4s2sA3AiQU+?W"I6o[@>4>8cQ1d3$E0KD!J4s2sT1IO\r%6Q=)2)d]A4>8cQ3''JHI6Sh.j4q0V.3Aj)d+?V><2*sJL4@:no1d2@20KD$I4s2sA3Ar]X+?W"J1IF>84>8cR2Ei6G0KD$M4s2sT1c@0S%6Q=)2F0ML4>8cR69ZMS6Sp_Y4q0V.3B&`X+?V><2`*]@4@:qp0Koq.0KD''O4s2sA3B''5f+?W"J7RfQNASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6Q=)2b#tR4>8cT0KpUA6T$VY4q0V.3B/fY+?V><3&EfA4@:t^3''Id60KD*O4s2sA3B/u^+?W"K1c.B*4>8cT3BeQJ0KD*Z4s2sT2)I9V%6Q=)3(#kP4>8cT76VhV6T$\f4q0V.3B0Jl+?V><3AE]?4@:t`1Hl710KD-K4s2sA3B8o[+?W"K2)d].4>8cU2*N-F0KD-O4s2sT2)Rcc%6Q=)3B'',E4>8cU3''JHI6T$bU4q0V.3B9Di+?V><3C>tQ4@:tb0Koq.0KD-]4s2sA3B9Pm+?W"K2`!W,4>8c]0KpUA0KDER4s2sT2)dld%6Q=)5rChK4>8c]2Ei6G6T$hj4q0V.3C,qp+?V><5sdaX4@:td2a.[50KDEg4s2sA3C5D`+?W"K68Uk84>8c^0g6^B0KDHT4s2sT2*s8d%6Q=)68LeJ4>8c^2Ei6G6T%1s4q0V.3C5Yg+?V><6:=![4@:tn1d2@20KDKS4s2sA3C>Mb+?W"K6nge64>8c_1d3$E0KDKX4s2sT2+92_%6Q=)6T@7P4>8c_5s?DR6T%;"4q0V.3C?1u+?V><6Ua0]4@:tq2EhR40KDKi4s2sA3CG\f+?W"K7RK?K4>8c`2*N-F0KDN\4s2sT2D@!P%6Q=)6pa''[4>8c`6TuVT6T-YY4q0V.3CH8!+?V><6q''9^4@;"]69Yi@0KDNj4s2sA3CPVc+?W"L1,M0(4>8ca1-QgC0KDQY4s2sT2DRW`%6Q=)75d=P4>8ca3''JHI6T-_V4q0V.3CQ;!+?V><779<^4@;"`0Koq.0KDTV4s2sA3CY_e+?W"L2)%3''4>8cb1-QgC0KDTZ4s2sT2Dm9S%6Q=)7Q!@P4>8cb2Ei6G6T-eh4q0V.3CZ>!+?V><7RK?^4@;"c3''Id60L7BK4s2sA5qk,Z+?W"L3A`o/4>9&T2a/?H0L7BP4s2sT2F0/`%6Q=10L@rG4>9&T6TuVT6T.7b4q0V.5qk_k+?V>D0ebd64@;"n3''Id60L7EJ4s2sA5qt,Y+?W"L6SL\54>9&U2*N-F0L7EO4s2sT2FBhq%6Q=10f_E?4>9&U5s?DR6T.>"4q0V.5qt\i+?V>D0ge,I4@;"q0Koq.0L7E]4s2sA5qtel+?W"L76!I?4>9&V0g6^B0L7HL4s2sT2F]Yi%6Q=11,M0;4>9&V2*N-F6T6\U4q0V.5r(D`+?V>D1-%N@4@;%^1d2@20L7H]4s2sA5r(hl+?W"M1,(m$4>9&W0KpUA0L7KL4s2sT2`!-O%6Q=11Gq?=4>9&W2Ei6G6T6eg4q0V.5r1ej+?V>D1I=8J4@;%a6TtrA0L7K_4s2sA5r:D^+?W"M2).9(4>9&X3BeQJ0L7N]4s2sT2`EQW%6Q=11daGL4>9&X76VhV6T6qk4q0V.5r;%p+?V>D2).9;4@;%e1Hl710L7QO4s2sA5rCM`+?W"M3&a#14>9&Y2a/?H0L7QU4s2sT2`WQU%6Q=12*jDK4>9&Y6TuVT6T7"`4q0V.5rD(p+?V>D2+BbP4@;%n0Koq.0L7TN4s2sA5rLM_+?W"M5r1\64>9&Z1d3$E0L7TS4s2sT2aKep%6Q=12E3lC4>9&Z3BeQJ6T7>!4q0V.5rM"m+?V>D2FBYN4@;%o7Qq8D0L7Tb4s2sA5rM.q+?W"M6T@7=4>9&[2a/?H0L7WW4s2sT3&!$M%6Q=12a]bO4>9&[6p;_U6T?eS4q0V.5rV7s+?V>D3&!N=4@;(_2*MI30L7ZQ4s2sA5r^V`+?W"N0ge,64>9&\2*N-F0L7ZV4s2sT3&3ib%6Q=13(#kP4>9&\6p;_U6T?n^4q0V.5r_:s+?V>D3(?(S4@;(b6TtrA0L7]R4s2sA5rg\a+?W"N2_[E)4>9&]2Ei6G0L7]X4s2sT3&iTU%6Q=13B98G4>9&]69ZMS6T@%_4q0V.5rh:r+?V>D3CQ+S4@;(f69Yi@0L7u]4s2sA5s[@l+?W"N6:3pG4>9&e3BeQJ0L7uj4s2sT3(,Se%6Q=15t!mZ4>9&e76VhV6T@Lg4q0V.5sd:i+?V>D68C_I4@;(t6TtrA0L8#^4s2sA5sdIn+?W"O0Jks&4>9&f2a/?H0L8#b4s2sT3A<fa%6Q=16:F''\4>9&f7QqqW6TI"X4q0V.5smCk+?V>D6SgnK4@;+e0Koq.0L8&d4s2sA5smq%+?W"O3&j)24>9&g6p;_U0L8&p4s2sT3B9&_%6Q=16npkJ4>9&h1-QgC6TILf4q0V.5t!On+?V>D6o@.N4@;+r2a.[50L8)c4s2sA5t![r+?W"O6nge64>9&h5s?DR0L8)n4s2sT3CG_g%6Q=16pj-\4>9&h6p;_U6TIOp4q0V.5t".*+?V>D6q0?_4@;+s6TtrA0L8,a4s2sA5t*Xp+?W"O7706J4>9&i2Ei6G0L8,e4s2sT3CQD$%6Q=176*OS4>9&i5s?DR6TIUq4q0V.5t+1*+?V>D77BB_4@;Cg3''Id60L8,s4s2sA5t3Rm+?W"W0L@r44>9&j2*N-F0L8/d4s2sT5r:qm%6Q=17QEXT4>9&j5s?DR6U<Rs4q0V.5t41)+?V>D7RTE_4@;Cl7Qq8D0L@HK4s2sA6812Z+?W"W6:3pG4>9)U2Ei6G0L@HP4s2sT5sn"''%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaU681_i+?V>E0LJ#H4@;D&3''Id60L@KN4s2sA68:>]+?W"X1,(m$4>9)V2a/?H0L@KR4s2sT68UYc%6Q=20g\&H4>9)V6TuVT6UEXi4q0V.68:qn+?V>E1,(m74@;Fo3''Id60L@NR4s2sA68CMa+?W"Y0LJ#54>9)W69ZMS0L@N^4s2sT6SUql%6Q=21.4;K4>9)W76VhV6UNU`4q0V.68D"o+?V>E1GM''94@;Ik2a.[50L@QQ4s2sA68LM`+?W"Y1H7Q-4>9)X2a/?H0L@Q]4s2sT6Sh%m%6Q=21I=8J4>9)X6TuVT6UN[e4q0V.68M(p+?V>E1b_*94@;In1d2@20L@TN4s2sA68UJ^+?W"Y2)d].4>9)Y5s?DR0L@T_4s2sT6TI+i%6Q=21dsSN4>9)Y7QqqW6UO.!4q0V.68^G\+?V>E2)7?<4@;J%69Yi@0L@WQ4s2sA68^S`+?W"Y68Uk84>9)Z2a/?H0L@WV4s2sT6UN[o%6Q=22DIB<4>9)[1-QgC6UWUf4q0V.68g\b+?V>E2E!`A4@;Lk3''Id60L@]P4s2sA68pV_+?W"Z2FBY;4>9)\2Ei6G0L@]W4s2sT6od(f%6Q=22aKVM4>9)\69ZMS6UX3s4q0V.69$hd+?V>E3&WrC4@;M+3''Id60L@`f4s2sA69%Fu+?W"[1,(m$4>9)^1-QgC0L@cU4s2sT75HV]%6Q=23As&D4>9)^2a/?H6U`jl4q0V.69.%i+?V>E3C5nP4@;Op7Qq8D0L@ce4s2sA69.Ft+?W"[2E3l04>9)f0KpUA0LA&[4s2sT75m%e%6Q=25r:bJ4>9)f2*N-F6U`sk4q0V.6:!Rp+?V>E5rh+O4@;Ot0Koq.0LA&m4s2sA6:""''+?W"[5qkJ34>9)f76VhV0LA)[4s2sT76r^n%6Q=268:YH4>9)g1-QgC6Ua:.4q0V.6:*Lm+?V>E68^qL4@;P+1d2@20LA)b4s2sA6:*Xq+?W"[77''0I4>9)g3BeQJ0LA)l4s2sT77K*t%6Q=26:*jY4>9)g6p;_U6UaI''4q0V.6:++)+?V>E6:O-]4@;Rl0Koq.0LA,^4s2sA6:3Om+?W"\0ebd#4>9)h3BeQJ0LA,m4s2sT7P[=p%6Q=26UEsZ4>9)h6p;_U6Uih#4q0V.6:44++?V>E6ngeI4@;Rq1d2@20LA/`4s2sA6:<Xo+?W"\2DdT,4>9)i2a/?H0LA/e4s2sT7Q3"b%6Q=275@%L4>9)j1HlpD6UjKu4q0V.6:Edr+?V>E75mCQ4@;S-0Koq.0LA5_4s2sA6:N[n+?W%G1Gh9)4>9)k1d3$E0LA5d4s2sU0JkUM%6Q=27RK?^4>9)k6p;_U6ngMd4q0V.6SL2X+?V>F0JPa64@Ck^6TtrA0LINM4s2sA6SL>\+?W%G5r:b74>9,V2a/?H0LINR4s2sU0L@T[%6Q=30L@rG4>9,V6TuVT6ngt^4q0V.6SLqm+?V>F0Le5K4@Ckj3''Id60LIQK4s2sA6SU;Z+?W%G6nge64>9,W1-QgC0LIQO4s2sU0LR]\%6Q=30f;-;4>9,W2Ei6G6nh"r4q0V.6SUSb+?V>F0gRuG4@Ckl6TtrA0LIQ]4s2sA6SUtm+?W%G77KHM4>9,X0KpUA0LITM4s2sU0f(LI%6Q=31,V6<4>9,X2Ei6G6npMP4q0V.6S^Sa+?V>F1-%N@4@Cn\1Hl710LIT]4s2sA6S^tl+?W%H1daG94>9,X76VhV0LITb4s2sU0f;<^%6Q=31H.K?4>9,Y3''JHI6npt]4q0V.6Sh%m+?V>F1IF>K4@Cnj0Koq.0LIZV4s2sA6Spee+?W%I1.+574>9,Z6TuVT0LIZb4s2sU1,D9]%6Q=32)@E=4>9,[1d3$E6o$_U4q0V.6T$ed+?V>F2)mcB4@Cqb0Koq.0LI]e4s2sA6T-V^+?W%I69%.<4>9,\1-QgC0LI`S4s2sU1."Go%6Q=32DmZ@4>9,\2Ei6G6o%+h4q0V.6T.7p+?V>F2FBYN4@Cqn1d2@20LI`d4s2sA6T.@s+?W%I7PI"84>9,]0g6^B0LIcS4s2sU1GCLH%6Q=32`3cA4>9,]2a/?H6o-Ma4q0V.6T7=q+?V>F2a]bO4@Ct[6TtrA0LIce4s2sA6T7Iu+?W%J0h+>94>9,^0g6^B0LIfT4s2sU1GUpR%6Q=33&NlB4>9,^2Ei6G6o-VY4q0V.6T@"g+?V>F3&s/F4@Ct]69Yi@0LIfc4s2sA6T@Cr+?W%J1c.B*4>9,^6TuVT0LIff4s2sU1H.Zb%6Q=33A<W>4>9,_0g6^B6o-ei4q0V.6THnc+?V>F3A`oB4@Ctb7Qq8D0LIiX4s2sA6TI%g+?W%J3B0234>9,_3BeQJ0LIid4s2sU1I3ua%6Q=35qkJF4>9,g0g6^B6o.1e4q0V.6U<Ik+?V>F5r1\I4@Ctm3''Id60LJ,c4s2sA6U<^r+?W%J7706J4>9,g6TuVT0LJ,o4s2sU1Ia_q%6Q=369.4P4>9,h5s?DR6o6h^4q0V.6UF.(+?V>F6:=![4@D"b7Qq8D0LJ/r4s2sA6UNOk+?W%K3&j)24>9,j1HlpD0LJ5b4s2sU2)-pO%6Q=36oI4O4>9,j2a/?H6o?bf4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN70LJ5o4s2sA6UX7)+?W%L1daG94>9,j76VhV0LJ5t4s2sU2)R?W%6Q=375I+M4>9,k1d3$E6o?k^4q0V.6U`pt+?V>F76!IR4@D%c1d2@20LJ8q4s2sA6Ua@++?W%L3&Ef.4>9,k6p;_U0LJ8u4s2sU2)mNY%6Q=37P[.M4>9,l1HlpD6o@=k4q0V.6Uj!u+?V>F7Q<RS4@D%p3''Id60LJ;r4s2sA6UjF,+?W%L75R1;4>9/W1HlpD0LRTO4s2sU2D?gK%6Q=40K20<4>9/W3''JHI6oHbR4q0V.6ngVb+?V>G0L@rG4@D(^1Hl710LRWL4s2sA6npD[+?W%M1H7Q-4>9/X2*N-F0LRWR4s2sU2DdBW%6Q=40gRuG4>9/X69ZMS6oHnZ4q0V.6o$G[+?V>G1,1s84@D(d0Koq.0LRZR4s2sA6o$Ya+?W%M3(#k=4>9/Z0g6^B0LR]P4s2sU2FB;b%6Q=41IXJM4>9/Z7QqqW6oIM%4q0V.6o6\`+?V>G1c.B=4@D+_3''Id60LR`V4s2sA6o6ke+?W%N1,qH,4>9/[69ZMS0LR`b4s2sU2`!9S%6Q=42)7?<4>9/\1HlpD6oQtW4q0V.6o?hc+?V>G2)mcB4@D+c2EhR40LRcY4s2sA6o@7o+?W%N2D@<(4>9/]0g6^B0LRfS4s2sU2`F)f%6Q=42DdT?4>9/]2*N-F6oR(b4q0V.6oI"g+?V>G2E<rD4@D+g3''Id60LRiZ4s2sA6oR+i+?VP@68h":4>9/j2a/?H0LS8f4s2sJ1c7!O%6Q=66Uj6^4>95m0KpUA3&iic4q0V.7Rf0t+?V>I7Pm:O4>o,Q76V/C0eb:@4s2sB0JGLN+?VSC1cIT-4>ANE5s?DR0eb=K4s2sJ5qk_k%6Q@#2*jDK4>ATK69ZMS2+Btn4q0V/1-mZZ+?VA65r1\I4>o#T3''Id60eu0`4s2sB1.=Mn+?VSN0L7l34>AWG69ZMS0f(LN4s2sG2+Bnr%6Q@$2`3cA4>AWN2Ei6G3&jAa4q0V/1H7*Q+?VA73&3Z?4?#/W6p;&B0f)6X4s2sB1IX;f+?VMK77KHM4>AZH6p;_U0f1RQ4s2sI0f:XK%6Q@%1djMM4>AZL7QqqW2F9ei4q0V/2+BDd+?VA97Q!@P4?5;c2a.[50fMKX4s2sB2afPf+?VSK5rh+<4>AfQ1HlpD0fV$I4s2sJ2FTSh%6Q@)5t!mZ4>Af]76VhV2+9Gk4q0V/3''oAa+?VA<68LeJ4>noJ3''Id60fVK[4s2sB3''onp+?VPB2DIB)4>Af^7QqqW0fVNS4s2sH1G^pQ%6Q@35t!mZ4>B/g76VhV2DI''K4q0V/6psF,+?VAH6q''9^4?58Z0g6%/0h"Gg4s2sB770$u+?VSB6:!dE4>B8n2a/?H0h"Mj4s2sG2Dd3R%6Q@72_dK=4>B;a1-QgC2_dWZ4q0V/7Q3:j+?VAJ2`X&E4>SZF0g6%/0h+)k4s2sB7Q<(c+?VG60f2''''4>B;b0g6^B0h+,g4s2sD0JGIM%6Q@73(,qQ4>B;b76VhV7Rf''k4q0V/7QE1e+?VAJ3As&D4@Vdp5s>`?0h+/h4s2sB7QEk#+?W+_2*sJ94>B;c76VhV0h+W!4s2sA0JY=G%6QC"0Ju$:4>JTE2Ei6G1GCLO4q0V00JGFL+?VD50K;6=4>SZF5s>`?1,(CB4s2sC0JGdV+?VG60K;6*4>JTE69ZMS1,(CL4s2sA0JYUO%6QC"0f;-;4>JTF2Ei6G0JG7A4q0V00JPRO+?VD50gRuG4>SZG2EhR41,(FL4s2sC0JQ![+?VG60fD3)4>JTG2a/?H1,(IC4s2sC0JY=G%6QC"1.FGM4>JTH0KpUA0JZ$S4q0V00JbXO+?VD51H7Q@4>8HF6TtrA1,(LM4s2sC0Jc$Z+?VD52afh=4>JTI0KpUA1,(O>4s2sC1,:jR%6QC"1cIT@4>JTI3BeQJ1GCR=4q0V00Jt[N+?VD52)RQ?4>SZG1d2@21,(RP4s2sC0Ju3]+?VG60JPa#4>JTK0g6^B1,(UA4s2sA0JYUO%6QC"2D[N>4>JTK1d3$E1GCOA4q0V00K(dP+?VD52E!`A4>SZG0Koq.1,(^H4s2sC0KDTd+?VD<3''f_;4>JTX1d3$E1,)*a4s2sC1dX)a%6QC#0ge,I4>JWG6p;_U1,;3c4q0V00el-]+?VD61,(m74>JZO0Koq.1,1O=4s2sC0etRL+?VD72_[E)4>JWH3BeQJ1,1OM4s2sC1,h*T%6QC#1.+5J4>JWH6p;_U1,;6`4q0V00f1aO+?VD61djMM4>J`O0Koq.1,2''O4s2sC0gR`^+?VG60K;6*4>JW[0g6^B1,23`4s2sC2`EWY%6QC$0Le5K4>JZH0KpUA1,:UB4q0V01,1UL+?VD70f;-;4>JZM2EhR41,:RC4s2sC1,1dQ+?VD73Aiu04>JZI3BeQJ1,:UN4s2sC1,_Qb%6QC$2)mcB4>JZL69ZMS1,M!J4q0V01,_''T+?VD72E3lC4>JWO0Koq.1,:aR4s2sC1,_Na+?VD63As&14>JZZ0KpUA1,;3O4s2sC0gdc]%6QC%2)7?<4>J]M2Ei6G1,LsH4q0V01IX2c+?VD876*OS4>JW[0KoqWDId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>J`N2*N-F1,LjS4s2sD1,qQ`%6QC&2DRH=4>J`O2*N-F1GCLM4q0V01c@9V+?VD92E3lC4>JW[2EhR41,LpI4s2sC1cI<V+?VqW0JYg$4>J`P2a/?H1,LpL4s2sR6SLA]%6QC&2`X&E4>J`P6p;_U5sm=m4q0V01cIlf+?VD93&!N=4@)=h76V/C1,LsF4s2sC1cR9T+?VqW1,1s%4>J`Q1d3$E1,LsV4s2sR6S^M_%6QC&3(#kP4>J`R0g6^B5smF`4q0V01c[<T+?VD93AWiA4@)=j5s>`?1,M!J4s2sC1c[HX+?VqW1IOD94>J`R2a/?H1,M9N4s2sR6SpM]%6QC&5r(VH4>J`Z2a/?H5smIt4q0V01dO)b+?VD95s[[W4@)=l2*MI31,M9`4s2sC1dOMn+?VqW2*!i04>J`Z76VhV1,M?P4s2sR6T%7q%6QC&6SUbI4>J`\1-QgC5smRd4q0V01da&_+?VD96SptL4@)=n2*MI31,M?V4s2sC1daPm+?VqW2aT\;4>J`\6TuVT1,M?d4s2sR6T@"g%6QC&6Ua0]4>J`]0KpUA5smV"4q0V01dj&^+?VD96o."L4@)=p0g6%/1,MBU4s2sC1djVn+?VqW3Aiu04>J`]6TuVT1,MES4s2sR6U<Ik%6QC&75I+M4>J`^1d3$E5smq+4q0V01ds8c+?VD977''0\4@)>$0g6%/1,MEf4s2sC1dskt+?VqW6:F''I4>J`_0KpUA1,MHT4s2sR6UNUm%6QC&7P[.M4>J`_1d3$E5sn!s4q0V01e''>d+?VD97Q3LR4@)>%3Bdm71,MH[4s2sC1e''qu+?VqW6UX*I4>JcJ0g6^B1,UaF4s2sR6UWmt%6QC''0KD<>4>JcJ5s?DR5sn''r4q0V02)%?\+?VD:0LJ#H4@)>''2*MI31,UaT4s2sC2)-dK+?VqW779<K4>JcK1HlpD1,UdF4s2sR6Uj!u%6QC''0fV?>4>JcK3BeQJ5sn+14q0V02).B\+?VD:0ge,I4@)@h0g6%/1,UdT4s2sC2)6pN+?VqX0K20)4>JcL2*N-F1,UgQ4s2sR6npG\%6QC''1."/I4>JcL6p;_U5t!Ff4q0V02)7Ta+?VD:1GD!84@)@i6p;&B1,UjB4s2sC2)@3U+?VqX1,1s%4>JcM3BeQJ1,UjR4s2sR6o%%l%6QC''1I=8J4>JcN0KpUA5t!Is4q0V02)I$O+?VD:1bq6;4@)@k2EhR41,UmE4s2sC2)I0S+?VqX1H@W.4>JcN2Ei6G1,UmU4s2sR6o.4p%6QC''1e''YO4>JcO1d3$E5t!Oq4q0V02)R6T+?VD:2)d]A4@)@m0g6%/1,UpK4s2sC2)RZ`+?VqX2)RQ,4>JcO69ZMS1,UsF4s2sR6o?tg%6QC''2DdT?4>JcP69ZMS5t!Uf4q0V02)[fc+?VD:2FK_O4@)@n76V/C1,UsY4s2sC2)[of+?VqX2_dK*4>JcQ0KpUA1,V!H4s2sR6oR%g%6QC''2`<iB4>JcQ5s?DR5t![g4q0V02)dic+?VD:2a]bO4@)@p5s>`?1,V!Y4s2sC2)dug+?VqX3(,q>4>JcR0KpUA1,V$W4s2sR6octc%6QC''3''oeO4>JcS0KpUA5t!_%4q0V02*!BT+?VD:5r(VH4@)A$2*MI31,V?R4s2sC2*jMl+?VqX69%.<4>Jc[69ZMS1,V?b4s2sR6pi^n%6QC''5t!mZ4>Jc[7QqqW5t"''t4q0V02*ru\+?VD:68h"M4@)A&3Bdm71,VBX4s2sC2*sbr+?VqX6o7(:4>Jc]0KpUA1,VES4s2sR6psF,%6QC''6SgnK4>Jc]2*N-F5t"-r4q0V02+''8c+?VD:6o[@Q4@)A(2*MI31,VH[4s2sC2+0_o+?VqX7R93I4>Jc^69ZMS1,VHe4s2sR6q0R.%6QC''6ps3]4>Jc_1-QgC5t*I_4q0V02+9Ad+?VD:76s*[4@)Ci76V/C1,VKe4s2sC2+C&!+?VqY0f;-(4>JfK0KpUA1,^gD4s2sR75@.m%6QC(0K)*;4>JfK2a/?H5t*Rb4q0V02D@*S+?VD;0KD<>4@)Cl2*MI31,^gQ4s2sC2D@Ta+?VqY1I=874>JfL1-QgC1,^jD4s2sR75Qqe%6QC(0fM9=4>JfL3BeQJ5t*Xc4q0V02DIN^+?VD;0h+>L4@)Cn2a.[51,^mB4s2sC2DR''P+?VqY2DRH*4>JfM1d3$E1,^mF4s2sR75d%f%6QC(1,_<=4>JfM2a/?H5t*[t4q0V02DR6U+?VD;1-n)H4@)Co6p;&B1,^mS4s2sC2D[''O+?VqY2_dK*4>JfN1HlpD1,^pJ4s2sR75mY!%6QC(1H@WA4>JfN76VhV5t*ak4q0V02D[fd+?VD;2FK_O4@)Cq6p;&B1,_$[4s2sC2E*?S+?VqY6SUb64>JfR1-QgC1,_''N4s2sR77/pr%6QC(2aKVM4>JfR7QqqW5t+0s4q0V02E3BS+?VD;3&*T>4@)D(5s>`?1,_*I4s2sC2E4&f+?VqY6ps3J4>JfS6p;_U1,_*\4s2sR77B4#%6QC(3A<W>4>JfT2*N-F5t+424q0V02E<ZZ+?VD;3B02F4@)D*2*MI31,_-Q4s2sC2E=)f+?VqY7QEXAASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QC(3C>tQ4>Jf\2*N-F5t+724q0V02F05b+?VD;5rh+O4@)Fj3Bdm71,_Ea4s2sC2F0Yn+?VqZ0L\/74>Jf\6TuVT1,_KX4s2sR7PQV]%6QC(6T71O4>Jf^3''JHI5t3Uu4q0V02FBep+?VD;6npkJ4@)Fm2*MI31,_NW4s2sC2FKJf+?VqZ1c.B*4>Jf_3''JHI1,_Ng4s2sR7PmCp%6QC(6q''9^4>Jf`3''JHI5t3^d4q0V02FTVi+?VD;77BB_4@)Fo76V/C1,_Qj4s2sC2F^/"+?VqZ2E!`.4>JiL0KpUA1,gmA4s2sR7Q37i%6QC)0JYg74>JiL2a/?H5t3e!4q0V02_[3T+?VD<0L7lF4@)Fr0g6%/1,gmR4s2sC2_[W`+?VqZ3&Nl/4>JiL76VhV1,gpE4s2sR7Q<Cl%6QC)0f;-;4>JiM2a/?H5t3ji4q0V02_d9U+?VD<0gn2J4@)Fs2EhR41,gpV4s2sC2`!EW+?VqZ3CH%?4>JiO3BeQJ1,h!T4s2sR7RBC)%6QC)1I=8J4>JiO6p;_U5t41/4q0V02`!ld+?VD<1c%<<4@)G(0g6%/1,h$J4s2sC2`*fa+?VqZ6Uj6K4>JiP69ZMS1,h''F4s2sR7RT*t%6QC)2)7?<4>JiQ6TuVT5t4714q0V02`3ue+?VD<2DRH=4@)G*5s>`?1,h*I4s2sC2`<KV+?VqZ7P[.:4>JiR2*N-F1,h*M4s2sR7Rf7!%6QC)2E3lC4>JiR76VhV5t4=(4q0V02`=,h+?VD<2_[E<4@1_U1-Q.01,h-H4s2sC2`EZZ+?VtE0Ju$''4>JiS3''JHI1,h-X4s2sS0JGmY%6QC)2aT\N4>JiS6p;_U681,K4q0V02`F/h+?VD<3&EfA4@1_V2*MI31,h0M4s2sC2`O5i+?VtE0h"884>JiT7QqqW1,hKZ4s2sS0JYXP%6QC)5s[[W4>Ji]69ZMS6815S4q0V02aKns+?VD<68C_I4@1_Y7Qq8D1,hNW4s2sC2aTGe+?VtE2*jD84>Ji^3''JHI1,hTY4s2sS0Ju9_%6QC)6oI4O4>Ji`2a/?H681>e4q0V02afVh+?VD<6pX!Z4@1_]0g6%/1,hTf4s2sC2aoGb+?VtE3&Nl/4>Jia1d3$E1,hW^4s2sS0KCmP%6QC)77''0\4>Jia6TuVT681Df4q0V02ap+u+?VD<7PR(L4@1_f1Hl711,hZ[4s2sC2b#\h+?VtE68h":4>Jib2a/?H1,hZ_4s2sS0L@c`%6QC)7R93\4>Jib7QqqW681_o4q0V03&!*O+?VD=0K20<4@1_h5s>`?1,psI4s2sC3&!?V+?VtE6o$q84>JlM5s?DR1,psT4s2sS0LRc^%6QC*0LS)I4>JlN1HlpD681ef4q0V03&*6R+?VD=0fM9=4@1_j0g6%/1,q!J4s2sC3&<QY+?VtE75d==4>JlP69ZMS1,q''X4s2sS0ec!Z%6QC*1IaPN4>JlQ1-QgC68:2O4q0V03&EHU+?VD=1cRZA4@1bW76V/C1,q*N4s2sC3&Eob+?VtF1,_<*4>JlQ69ZMS1,q*Y4s2sS0etaQ%6QC*1dsSN4>JlR1d3$E68:5`4q0V03&NTX+?VD=2*sJL4@1bY5s>`?1,q-Y4s2sC3&O)f+?VtF1bq6(4>JlR76VhV1,q0G4s2sS0f1aO%6QC*2DIB<4>JlS2a/?H68:;W4q0V03&W`[+?VD=2E<rD4@1b[1-Q.01,q0X4s2sC3&X)e+?VtF2)[W-4>JlS6TuVT1,q0\4s2sS0f:sT%6QC*2F]kQ4>JlT0g6^B68:>c4q0V03&`TV+?VD=3&j)E4@1b\0g6%/1,q6R4s2sC3&j2f+?VtF2aKV:4>JlU69ZMS1,q6]4s2sS0fMKa%6QC*3(?(S4>JlV1HlpD68:GU4q0V03&rl\+?VD=3B98G4@1b^76V/C1,q9[4s2sC3&s>i+?VtF3Aiu04>JlV6p;_U1,q9`4s2sS0f_6X%6QC*5qkJF4>Jl^5s?DR68:Jg4q0V03''fkp+?VD=6UX*\4@1bg3Bdm71,qWi4s2sC3(,Ga+?VtF6UX*I4>Jla0g6^B1,qZX4s2sS0gm`[%6QC*6o7(M4>Jla5s?DR68:kc4q0V03(-+t+?VD=75I+M4@1bk0Koq.1,q]Z4s2sC3(5\g+?VtF76s*H4>Jlb2Ei6G1,q]^4s2sS0h"Jo%6QC*76*OS4>Jlc0KpUA68:qa4q0V03(>\f+?VD=7Q<RS4@1bl76V/C1,q``4s2sC3(?1t+?VtG0K)*(4>Jlc69ZMS1,q`j4s2sS1,(^P%6QC*7RTE_4>Jlc7QqqW68C5_4q0V03A<-N+?VD>0Jbm84@1eX0Koq.1-%$H4s2sC3A<c`+?VtG0gRu44>JoN6TuVT1-%''X4s2sS1,:RJ%6QC+0h+>L4>JoP2*N-F68C>S4q0V03ANKV+?VD>1b_*94@1eZ6p;&B1-%0G4s2sC3A`NU+?VtG2*!i04>JoR1d3$E1-%0L4s2sS1,VH`%6QC+1cIT@4>JoR6p;_U68CGR4q0V03Aa/g+?VD>2)d]A4@1e]5s>`?1-%3O4s2sC3Aj2g+?VtG2`<i/4>JoS76VhV1-%6L4s2sS1,hTb%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaW3Ar`Y+?VD>2E*fB4@1e_2EhR41-%6P4s2sC3As8h+?VtG3''f_;4>JoT76VhV1-%6^4s2sS1-%*R%6QC+2_[E<4>JoU1-QgC68CPY4q0V03B&`X+?VD>2`EoC4@1e`69Yi@1-%9Z4s2sC3B'';h+?VtG5rUt:4>JoU76VhV1-%<J4s2sS1-n;l%6QC+3&*T>4>JoV1HlpD68Ck^4q0V03B/iZ+?VD>3As&D4@1ei2*MI31-%?R4s2sC3B9&_+?VtG6U<mF4>JoW3BeQJ1-%?]4s2sS1.+Gn%6QC+3CH%R4>Jo_0g6^B68Cqb4q0V03C,Jc+?VD>5rUtM4@1ek76V/C1-%Wd4s2sC3C,tq+?VtG76*O@4>Jo_6TuVT1-%Wh4s2sS1.Er]%6QC+681SG4>Jo`1-QgC68D"t4q0V03C5Mc+?VD>68UkK4@1hX1-Q.01-%ZY4s2sC3C5Yg+?VtH0Ju$''4>Jo`3''JHI1-%Zi4s2sS1GCgQ%6QC+6SL\H4>Joa2*N-F68L>S4q0V03C>\g+?VD>7RK?^4@1hY6p;&B1-%fm4s2sC3CZJ%+?VtH2*!i04>K2V0g6^B1-mTN4s2sS1H$pN%6QC30K;6=4>K2V3BeQJ68LMe4q0V05qkVh+?VDF0LJ#H4@1h_1-Q.01-mT^4s2sC5qkbl+?VtH2`3c.4>K2W0KpUA1-mWQ4s2sS1H.<X%6QC30fV?>4>K2W6p;_U68LSZ4q0V05qtel+?VDF1,(m74@1h`6p;&B1-mZM4s2sC5r(5[+?VtH3AE],4>K2X1d3$E1-mZa4s2sS1H@<V%6QC31.FGM4>K2Y1d3$E68Ln_4q0V05r1A^+?VDF1H.K?4@1hi3Bdm71-m]U4s2sC5r;"o+?VtH5t!mG4>K2Z7QqqW1-mcO4s2sS1IF&a%6QC32).9;4>K2[1-QgC68Lth4q0V05rCM`+?VDF2)d]A4@1hl0g6%/1-mcb4s2sC5rD%o+?VtH6q''9K4>K2[76VhV1-mfP4s2sS1IX#^%6QC32DIB<4>K2\1HlpD68M%f4q0V05rLP`+?VDF2`<iB4@1hm3Bdm71-miX4s2sC5r^kg+?VtH7RTEL4>K2^5s?DR1-moS4s2sS1bg^K%6QC33AE]?4>K2_1HlpD68UDW4q0V05rgbc+?VDF3As&D4@1kZ6p;&B1-moZ4s2sC5rh=s+?VtI1,1s%4>K2_7QqqW1-n2a4s2sS1bqE^%6QC35rUtM4>K2i0g6^B68UJU4q0V05smCk+?VDF6SgnK4@1k^1-Q.01-n8a4s2sC5smOo+?VtI2)RQ,4>K2i2a/?H1-n8q4s2sS1c79W%6QC36ngeI4>K2j2*N-F68USY4q0V05t!Up+?VDF76!IR4@1k_6p;&B1-n>h4s2sC5t+7,+?VtI3&*T+4>K2l0KpUA1-nB!4s2sS1cRKZ%6QC40JG[54>K5W1HlpD68U\_4q0V06815[+?VDG0KD<>4@1kb76V/C1.!Z\4s2sC681bj+?VtI5rCh84>K5W6p;_U1.!Za4s2sS1dO,c%6QC40ebd64>K5X2a/?H68Utr4q0V068:bi+?VDG0h+>L4@1kk5s>`?1.!`M4s2sC68C;[+?VtI6SUb64>K5Y1HlpD1.!`R4s2sS1da,a%6QC41,_<=4>K5Y6TuVT68V%i4q0V068Cqm+?VDG1GD!84@1km0g6%/1.!cO4s2sC68LM`+?VtI6oI4<4>K5Z2a/?H1.!cV4s2sS1djbr%6QC41H@WA4>K5Z5s?DR68V+c4q0V068Ltm+?VDG1b_*94@1kn2a.[51.!fR4s2sC68UYc+?VtI7P[.:4>K5[3BeQJ1.!lT4s2sS1e''Jh%6QC42DdT?4>K5]2*N-F68^JU4q0V068g_c+?VDG2E*fB4@1n[3Bdm71.!lY4s2sC68h7r+?VtJ0gn274>K5^0KpUA1.!oV4s2sS2)7K^%6QC42`3cA4>K5^2Ei6G68^PS4q0V068phe+?VDG2`X&E4@1n]2*MI31.!oc4s2sC69$Y_+?VtJ1H@W.4>K5_1-QgC1.!rY4s2sS2)I3T%6QC43&a#D4>K5_3''JHI68^Sg4q0V069$th+?VDG3''oeO4@1n_0g6%/1.!rf4s2sC69-eb+?VtJ2)RQ,4>K5`1d3$E1."A`4s2sS2)[3R%6QC46o$qK4>K5k1HlpD68_%a4q0V06:<Xo+?VDG6oI4O4@1nk2*MI31."Ag4s2sC6:=.(+?VtJ5smgF4>K5k6p;_U1."Da4s2sS2*s2b%6QC475@%L4>K5l1HlpD68_(u4q0V06:E^p+?VDG75d=P4@1nm0g6%/1."Dg4s2sC6:F:++?VtJ6T%%:4>K5l7QqqW1."Ge4s2sS2+02`%6QC47Q!@P4>K5m7QqqW68_.k4q0V06SL2X+?VDH0K20<4@1no1d2@21.*`T4s2sC6S^qk+?VtJ779<K4>K8Z69ZMS1.*fa4s2sS2DHsN%6QC51.4;K4>K8Z7QqqW68gPU4q0V06SgD[+?VDH1I=8J4@1q\3Bdm71.*ib4s2sC6SpM]+?VtK1,_<*4>K8\1-QgC1.*lX4s2sS2DRZa%6QC51c[`B4>K8]69ZMS68gVW4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71.*od4s2sC6T6ne+?VtK1c[`/4>K8_2a/?H1.*u\4s2sS2E!EV%6QC52aKVM4>K8i6TuVT68g_^4q0V06U=+(+?VDH5t*s[4@1qd76V/C1.+>s4s2sC6UELk+?VtK5qtP44>K8j1-QgC1.+Ae4s2sS2F02a%6QC569%.O4>K8j69ZMS68h+t4q0V06UF.(+?VDH6ps3]4@1qm1-Q.01.+Gu4s2sC6Uj%!+?VtK6o@.;4>K8n3BeQJ1.+Mt4s2sS2F]Db%6QC57RK?^4>K8n76VhV68h:j4q0V06ng;Y+?VDI0Ju$:4@1qq5s>`?1.3fS4s2sC6ngSa+?VtL0JYg$4>K;Y3BeQJ1.3l`4s2sS2_[-R%6QC61."/I4>K;[6TuVT68pYc4q0V06o%.o+?VDI1.=AL4@1t^6p;&B1.3le4s2sC6o-\a+?VtL1GM''&4>K;\2a/?H1.3oe4s2sS2`!fb%6QC61IaPN4>K;]0g6^B68p_Y4q0V06o6Y_+?VDI1c.B=4@1t`3Bdm71.3rV4s2sC6o74o+?VtL1djM:4>K;]6TuVT1.3uW4s2sS2`3KW%6QC62)[W@4>K;^3''JHI68peW4q0V06o?tg+?VDI2*sJL4@1tb2*MI31.3ue4s2sC6oHea+?VtL2E<r14>K;_2*N-F1.4#d4s2sS2`EWY%6QC62F9SM4>K;_6TuVT68phl4q0V06oIFs+?VDI2F]kQ4@1td0g6%/1.4&T4s2sC6oR"f+?VtL3&Nl/4>K;`3''JHI1.4&e4s2sS2`WZX%6QC62aT\N4>K;`6TuVT68pnj4q0V06oRLt+?VDI2b#tR4@1te6p;&B1.4)U4s2sC6o[(g+?VtL5qtP44>K;a3''JHI1.4)i4s2sS2aKkr%6QC63(6"R4>K;a7QqqW68q4h4q0V06ocqb+?VDI3CH%R4@1tn3Bdm71.4,l4s2sC6piXl+?VtL6U<mF4>K;l0g6^B1.4Jb4s2sS2ap/!%6QC66SgnK4>K;l2*N-F68q@g4q0V06pijr+?VDI6UO$[4@1tr2*MI31.4Ju4s2sC6prdo+?VtM0JYg$4>K;m1HlpD1.4Me4s2sS3&!W^%6QC66o@.N4>K;m2a/?H69$Ye4q0V06ps!u+?VDI6q''9^4@2"^0g6%/1.4Pc4s2sC6q''!t+?VtM0h"884>K;n2a/?H1.4Pj4s2sS3&3BU%6QC676*OS4>K;n69ZMS69$_\4q0V06q''I,+?VDI7P[.M4@2"_6p;&B1.4Sg4s2sC6q01#+?VtM1I4264>K;o5s?DR1.4T!4s2sS3&E?R%6QC67RTE_4>K;o7QqqW69$eZ4q0V075-DZ+?VDJ0K;6=4@2"a3''Id61.<l_4s2sC756M\+?VtM2)IK+4>K>[1-QgC1.<oR4s2sS3&O,g%6QC70f2'':4>K>[2Ei6G69$kX4q0V0756_b+?VDJ0gn2J4@2"c2*MI31.<rP4s2sC75?_a+?VtM2_mQ+4>K>\2Ei6G1.<rX4s2sS3&`i]%6QC71-%N@4>K>]3''JHI69$nl4q0V075Hqf+?VDJ2)7?<4@2"e76V/C1.=&V4s2sC75[(h+?VtM5rh+<4>K>_5s?DR1.=&f4s2sS3''o>`%6QC72+0VN4>K>_7QqqW69%:h4q0V075ch`+?VDJ2E!`A4@2"o3Bdm71.=)]4s2sC75dRu+?VtM6T.+;4>K>`7QqqW1.=,V4s2sS3($(t%6QC72_mQ>4>K>a1d3$E69%@f4q0V075m(f+?VDJ2a]bO4@2"q2*MI31.=,k4s2sC76!+f+?VtM75@%94>K>b2*N-F1.=/\4s2sS3(6+s%6QC73&a#D4>K>b3BeQJ69%D%4q0V076!Rs+?VDJ3A<W>4@2"s0g6%/1.=2Z4s2sC76*=k+?VtM7R]KM4>K>c3BeQJ1.=Jq4s2sS3A<<S%6QC75smgY4>K>l1-QgC69-b\4q0V077&do+?VDJ6UX*\4@2%`0g6%/1.=Q!4s2sC770O.+?VtN1IXJ:4>K>n0KpUA1.=Sd4s2sS3A`HS%6QC76o."L4>K>n3BeQJ69-k[4q0V0779F*+?VDJ6pa''[4@2%b6p;&B1.=T!4s2sC77Asq+?VtN2)7?)4>K>o1HlpD1.=Vg4s2sS3Aj)d%6QC775[7O4>K>o2a/?H69-nk4q0V077B1"+?VDJ77BB_4@2%d0g6%/1.=Ye4s2sC77K1!+?VtN2FTe=4>K>p2a/?H1.=Yl4s2sS3B&i[%6QC77QEXT4>K>p69ZMS69-tb4q0V077KX.+?VDJ7RfQa4@2%e6p;&B1.ErO4s2sC7PHS]+?VtN3&*T+4>KA[2*N-F1.ErU4s2sS3B0>h%6QC80K20<4>KA]1HlpD69."p4q0V07PZea+?VDK1,V6<4@2%o76V/C1.F#W4s2sC7PZqe+?VtN68:Y54>KA]3BeQJ1.F#g4s2sS3C5Se%6QC81GV-:4>KA^2a/?H69.Cg4q0V07Pd"f+?VDK1H@WA4@2%q5s>`?1.F&d4s2sC7PdLt+?VtN6o."94>KA_1-QgC1.F)V4s2sS3CH>#%6QC81c7H>4>KA_2Ei6G69.Im4q0V07Pm%f+?VDK1c[`B4@2%s3Bdm`DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>KA_5s?DR1.F,T4s2sS3CQ>"%6QC82)7?<4>KA`2Ei6G69.M%4q0V07Q!+g+?VDK2+''PM4@2=f1-Q.01.F,h4s2sC7Q*4i+?VtV0KD<+4>KAa3BeQJ1.F5h4s2sS5qt8]%6QC83''oeO4>KAc6TuVT6:!Cn4q0V07Q<e"+?VDK3(?(S4@2=i6p;&B1.F8Y4s2sC7QE=i+?VtV1c%<)4>KAd3''JHI1.F8j4s2sS5r;%p%6QC83C>tQ4>KAd6p;_U6:!Ie4q0V07QEn$+?VDK5qkJF4@2=k3Bdm71.FPa4s2sC7R8ss+?VtV2+0V;4>KAl3BeQJ1.FPu4s2sS5rM"m%6QC85t4$\4>KAm0KpUA6:!Oc4q0V07RAgn+?VDK68LeJ4@2=m2*MI31.FSe4s2sC7RBL,+?VtV2`X&24>KAm7QqqW1.FVd4s2sS5r^hf%6QC86SgnK4>KAo6p;_U6:!S!4q0V07RT^0+?VDK756tK4@2>"6p;&B1.F\g4s2sC7R]7"+?VtV68Le74>KAp5s?DR1.F]%4s2sS5se"(%6QC87PI"K4>KAq1-QgC6:!sr4q0V07Rf0t+?VDK7RfQa4@2>$3Bdm71GCL:4s2sD0JG4F+?VtV6oI4<4>SZF1-QgC1GCR?4s2sS5t""&%6QF#1,M0;4>SZH2Ei6G6:"(/4q0V10JYRN+?VG61-%N@4@2@g0g6%/1GCRM4s2sD0JbFI+?VtW0Ju$''4>SZI1d3$E1GCUF4s2sS68:5Z%6QF#1I42I4>SZI6TuVT6:*Ce4q0V10Jc*\+?VG61IaPN4@2@h6p;&B1GCX>4s2sD0Jk^P+?VtW1,1s%4>SZJ3BeQJ1GC[?4s2sS68Cnl%6QF#2)7?<4>SZK1HlpD6:*Ig4q0V10Jt[N+?VG62)mcB4@2@j7Qq8D1GC[Q4s2sD0Ju6^+?VtW1dO;74>SZK7QqqW1GC^A4s2sS68^J]%6QF#2DRH=4>SZL1d3$E6:*Oe4q0V10K(dP+?VG62FBYN4@2@l3Bdm71GC^U4s2sD0K1jQ+?VtW2DdT,4>SZM2Ei6G1GCgC4s2sS68h4q%6QF#3AE]?4>SZO1HlpD6:*Xl4q0V10KCsR+?VG63As&D4@2@o6p;&B1GCgJ4s2sD0L7]_+?VtW3AE],4>SZW5s?DR1GD*^4s2sS6:!Im%6QF#5t!mZ4>SZW7QqqW6:*su4q0V10L@HW+?VG668h"M4@2A#6p;&B1GD-S4s2sD0L@`_+?VtW68^q94>SZX3BeQJ1GD0M4s2sS6:*Xq%6QF#6SUbI4>SZY1HlpD6:+$o4q0V10LIZ\+?VG66T.+N4@2A%2*MI31GD0T4s2sD0LJ5l+?VtW6TI=>4>SZY76VhV1GD0c4s2sS6:<Ol%6QF#6ngeI4>SZ\1HlpD6:+''s4q0V10Ldl_+?VG67Q!@P4@2A(5s>`?1GD9V4s2sD0Ldub+?VtW7RTEL4>SZ\3BeQJ1GD9d4s2sS6SL;[%6QF$0JPa64>S]G1-QgC6:3I_4q0V10ebCI+?VG70Jks94@2Ci3Bdm71GLR@4s2sD0ebRN+?VtX1,(m$4>S]G69ZMS1GLRO4s2sS6S^qk%6QF$0L\/J4>S]G7QqqW6:3Ls4q0V10ek@G+?VG70ekj74@2Ck1-Q.01GLU>4s2sD0ekLK+?VtX1Gq?*4>S]H2*N-F1GLUN4s2sS6Sg_d%6QF$0gn2J4>S]H7QqqW6:3Rf4q0V10etFH+?VG71,1s84@2Cl5s>`?1GLX?4s2sD0etOK+?VtX1dsS;4>S]I1d3$E1GLXS4s2sS6T$S^%6QF$1GD!84>S]L2*N-F6:3V!4q0V10f:jQ+?VG72)d]A4@2Cp2EhR41GLaH4s2sD0f:sT+?VtX3&s/34>S]L69ZMS1GLaV4s2sS6T@P!%6QF$2DRH=4>S]M2Ei6G6:3b"4q0V10fCsS+?VG72E3lC4@2D$1-Q.01GLdJ4s2sD0fD<]+?VtX5rCh84>S]M69ZMS1GLgC4s2sS6U<^r%6QF$2`!W?4>S]N3''JHI6:4''t4q0V10fM*V+?VG72aKVM4@2D%76V/C1GLgT4s2sD0fMKa+?VtX6SUb64>S]N76VhV1GLjH4s2sS6UN^p%6QF$3&a#D4>S]O3BeQJ6:4-r4q0V10fVH_+?VG73''oeO4@2D''2EhR41GLjV4s2sD0fVTc+?VtX6odF?4>S]O7QqqW1GM0Q4s2sS6UX=+%6QF$5rUtM4>S]X3BeQJ6:44&4q0V10gS)h+?VG7681SG4@2D)6p;&B1GM3P4s2sD0g[i`+?VtY0L7l34>S]Y3BeQJ1GM3_4s2sS6npD[%6QF$6:3pZ4>S]Z5s?DR6:<Oc4q0V10ge8k+?VG76npkJ4@2Fk2*MI31GM9Q4s2sD0h!o_+?VtY1.4;84>S]\2*N-F1GM<b4s2sS6o6V^%6QF$7706]4>S]\6p;_U6:<Xr4q0V10h"Mp+?VG77PI"K4@2Fm6p;&B1GM?R4s2sD0h+)c+?VtY2).9(4>S]]3''JHI1GM?g4s2sS6o@7o%6QF%0JG[54>S`H0g6^B6:<^e4q0V11,(II+?VG80Jks94@2Fo2*MI31GUXA4s2sD1,2*Z+?VtY2E<r1ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QF%0ge,I4>S`I6p;_U6:<dg4q0V11,23]+?VG80h+>L4@2Fq2*MI31GU^>4s2sD1,:[M+?VtY3''oe<4>S`J2a/?H1GU^G4s2sS6od.h%6QF%1."/I4>S`K0g6^B6:<h%4q0V11,C[L+?VG81IF>K4@2G%2*MI31GUaS4s2sD1,LdN+?VtY68:Y54>S`L1d3$E1GUgV4s2sS6p`mt%6QF%2+BbP4>S`N0KpUA6:=4"4q0V11,^jN+?VG82D[N>4@2G(3Bdm71GUjF4s2sD1,_Tc+?VtY6ps3J4>S`O0KpUA1GUmH4s2sS6q''C*%6QF%2`<iB4>S`O3''JHI6:=9t4q0V11,h3W+?VG82aT\N4@2G*2*MI31GUmV4s2sD1,q$Q+?VtY7QEXA4>S`P1HlpD1GUpH4s2sS75-G[%6QF%3&WrC4>S`P69ZMS6:ERd4q0V11,qWb+?VG83(,qQ4@2Ij76V/C1GUpY4s2sD1-%$P+?VtZ0ekj$4>S`Q0g6^B1GUsL4s2sS756Y`%6QF%3B98G4>S`Z6TuVT6:EX`4q0V11."Am+?VG86:F''\4@2In2EhR41GV9d4s2sD1.*c[+?VtZ1c[`/4>S`[1HlpD1GV<V4s2sS75RIt%6QF%6U<mY4>S`[6p;_U6:Eb!4q0V11.+Jo+?VG86Uj6^4@2Ip1-Q.01GV?P4s2sD1.3l]+?VtZ2DmZ-4>S`\1d3$E1GV?X4s2sS75dIr%6QF%6pX!Z4>S`\76VhV6:Egk4q0V11.4Sq+?VG875-nJ4@2Iq76V/C1GVBR4s2sD1.<u_+?VtZ3&*T+4>S`]1d3$E1GVBb4s2sS76!.g%6QF%7706]4>S`^0g6^B6:Emi4q0V11.F#_+?VG87RfQa4@2Is5s>`?1G^^=4s2sD1GUjP+?VtZ5rh+<4>ScK2a/?H1G^dG4s2sS778mp%6QF&1-%N@4>ScK5s?DR6:F:"4q0V11GV9\+?VG91GM''94@2J)3Bdm71G^gB4s2sD1G^gN+?VtZ756t84>ScL1d3$E1G^gI4s2sS77B*u%6QF&1I42I4>ScM6p;_U6:F=24q0V11GhNa+?VG92)@E=4@2Lk1-Q.01G^mF4s2sD1H$sO+?Vt[0L7l34>ScO1HlpD1G_!I4s2sS7PR=q%6QF&3&NlB4>ScQ2Ei6G6:Nde4q0V11H7<W+?VG93&s/F4@2Lo2*MI31G_!V4s2sD1H@-Q+?Vt[1c[`/4>ScR0g6^B1G_$I4s2sS7Puqb%6QF&3A`oB4>Sc]0g6^B6:Ngj4q0V11INu^+?VG97706]4@2Lt2*MI31G_Hf4s2sD1Iaht+?Vt[68:Y54>SfJ0g6^B1GgdD4s2sS7RK''t%6QF''0K20<4>SfJ3''JHI6:O=24q0V11b^pR+?VG:0L@rG4@2M*0g6%/1GgdQ4s2sD1bgaL+?Vt[6o@.;4>SfK1HlpD1GggC4s2sS7RTX.%6QF''0fD3<4>SfP7QqqW6:OC!4q0V11cI*P+?VG:3&<`@4@:eY6p;&B1Gh''J4s2sD1cRKZ+?W"F2)7?)4>SfR5s?DR1Gh''Y4s2sT0JtjS%6QF''3(,qQ4>SfR7QqqW6SLAc4q0V11c[6R+?VG:3As&D4@:e\0g6%/1Gh*N4s2sD1dXPn+?W"F2F0M94>Sf\6p;_U1GhEe4s2sT0KCmP%6QF''6:O-]4>Sf]0g6^B6SLMX4q0V11da#^+?VG:6T@7P4@:e_3Bdm71GhHc4s2sD1dj#]+?W"F5rLn94>Sf^1-QgC1GhKU4s2sT0L@KX%6QF''6o7(M4>Sf^3''JHI6SLhc4q0V11djVn+?VG:6pj-\4@:ei1-Q.01GhKf4s2sD1djbr+?W"F6T.+;4>Sf^7QqqW1GhNS4s2sT0LJ,i%6QF''756tK4>Sf_1HlpD6SLkq4q0V11ds5b+?VG:76s*[4@:ej0g6%/1GhNf4s2sD1e''2`+?W"F6q''9K4>Sf`1-QgC1GhQW4s2sT0L[l`%6QF''7Pm:O4>Sf`2Ei6G6SLqh4q0V11e''Df+?VG:7RTE_4@:ek6p;&B1Gpj?4s2sD2)$mO+?W"F7R93I4>SiK2Ei6G1GpjG4s2sT0eb=G%6QF(0KD<>4>SiK69ZMS6SU8P4q0V12)%B]+?VG;0etp84@:hW3Bdm71GpmC4s2sD2).!Q+?W"G0ekj$4>SiL2a/?H1GpmS4s2sT0ekRM%6QF(0gn2J4>SiL76VhV6SU>N4q0V12)6jL+?VG;1,D*:4@:hY3''Id61GppF4s2sD2)7-T+?W"G1GV-''4>SiM5s?DR1GppS4s2sT0f)*Z%6QF(1.+5J4>SiM76VhV6SUAb4q0V12)7Wb+?VG;1Gq?=4@:h[0g6%/1GpsI4s2sD2)@T`+?W"G1dsS;4>SiN6p;_U1GpsW4s2sT0f:jQ%6QF(1IaPN4>SiO0g6^B6SUGY4q0V12)I''P+?VG;1cRZA4@:h\6p;&B1Gq!T4s2sD2)Icd+?W"G2F0M94>SiP0KpUA1Gq$F4s2sT0fLgN%6QF(2)@E=4>SiP2*N-F6SUMW4q0V12)R9U+?VG;2DIB<4@:h^3Bdm71Gq''G4s2sD2)[BW+?W"G3&Wr04>SiQ3BeQJ1Gq''W4s2sT0f^sP%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaX2)[id+?VG;2_dK=4@:h`2a.[51Gq*J4s2sD2)dEW+?W"G5r(V54>SiR2a/?H1Gq*N4s2sT0gR]]%6QF(2`X&E4>SiR5s?DR6SUkm4q0V12)dic+?VG;2afhP4@:hh6p;&B1Gq*[4s2sD2)mT[+?W"G68:Y54>SiS5s?DR1Gq-]4s2sT0g\;m%6QF(3A<W>4>SiT1-QgC6SUqc4q0V12*!HV+?VG;3AiuC4@:hj3Bdm71Gq0N4s2sD2*"#f+?W"G6UX*I4>SiT6p;_U1Gq0]4s2sT0gml_%6QF(3CZ1T4>Si\2*N-F6SUth4q0V12*j,a+?VG;5r_%N4@:hl0g6%/1GqHY4s2sD2*jPm+?W"G75[7<4>Si\6TuVT1GqKS4s2sT0h")d%6QF(68UkK4>Si]69ZMS6SV%e4q0V12*sYo+?VG;6:=![4@:hm76V/C1GqKf4s2sD2+''&]+?W"H0JPa#4>Si^0g6^B1GqNY4s2sT1,(RL%6QF(6U<mY4>Si^7QqqW6S^AO4q0V12+0,^+?VG;6npkJ4@:kY5s>`?1GqQU4s2sD2+05a+?W"H0gn274>Si_1d3$E1GqQd4s2sT1,:RJ%6QF(75-nJ4>Sia1-QgC6S^GT4q0V12+BAc+?VG;7QEXT4@:k\3Bdm71GqWf4s2sD2+Bnr+?W"H2)7?)4>Sia6TuVT1GqWj4s2sT1,UpQ%6QF)0JG[54>SlL2*N-F6S^Mb4q0V12D@$Q+?VG<0KD<>4@:k^0g6%/1H$pQ4s2sD2D@Ta+?W"H2E!`.4>SlM0KpUA1H$sB4s2sT1,_Qb%6QF)0etp84>SlM1d3$E6S^ST4q0V12DI''Q+?VG<0g\&H4@:k_2*MI31H$sV4s2sD2DR''P+?W"H3&3Z,4>SlN1d3$E1H%!K4s2sT1,qQ`%6QF)1-n)H4>SlO0KpUA6S^YV4q0V12D[''O+?VG<1GV-:4@:ka3Bdm71H%$G4s2sD2D[?W+?W"H3CQ+@4>SlO5s?DR1H%$U4s2sT1-mf^%6QF)1IF>K4>SlO76VhV6S^qf4q0V12D[fd+?VG<1c.B=4@:ki76V/C1H%''K4s2sD2E!NY+?W"H6:!dE4>SlR3BeQJ1H%-W4s2sT1.4Pp%6QF)2F9SM4>SlR6TuVT6S_(b4q0V12E!re+?VG<2_mQ>4@:km2*MI31H%0L4s2sD2E*TZ+?W"H7P[.:4>SlS69ZMS1H%0[4s2sT1.FYq%6QF)2aonQ4>SlT1d3$E6SgDN4q0V12E3QX+?VG<3&WrC4@:nY5s>`?1H%3O4s2sD2E4#e+?W"I0L\/74>SlT6TuVT1H%3\4s2sT1GLdO%6QF)3(6"R4>SlU0KpUA6SgGW4q0V12E<KU+?VG<3B'',E4@:nZ6p;&B1H%6Q4s2sD2E<c]+?W"I1,_<*4>SlU5s?DR1H%QV4s2sT1GV6[%6QF)68^qL4>Sl`2Ei6G6SgPW4q0V12FKJf+?VG<6o[@Q4@:n_5s>`?1H%W]4s2sD2FKkq+?W"I2FK_<4>Sl`6p;_U1H%ZV4s2sT1H.*R%6QF)75@%L4>Sla1HlpD6SgYe4q0V12FTGd+?VG<76*OS4@:n`76V/C1H%Zf4s2sD2FTts+?W"I3&Nl/4>Sla6p;_U1H%Zk4s2sT1H7BY%6QF)7PI"K4>Slb7QqqW6Sg\i4q0V12_ZpL+?VG=1,;$94@:nb6p;&B1H.''F4s2sD2`!HX+?W"I6SUb64>SoP5s?DR1H.*V4s2sT1IOMm%6QF*1IF>K4>SoP6p;_U6Sh+u4q0V12`!oe+?VG=1c%<<4@:nn1Hl711H.-I4s2sD2`*EV+?W"I76s*H4>SoQ2a/?H1H.-X4s2sT1IX_r%6QF*1djMM4>SoQ76VhV6Sh1i4q0V12`*uf+?VG=2+0VN4@:no3Bdm71H.0[4s2sD2`<KV+?W"J0KD<+4>SoS2*N-F1H.6O4s2sT1bg^K%6QF*2`NuD4>SoT76VhV6SpPU4q0V12`F2i+?VG=3&*T>4@:q\6p;&B1H.9K4s2sD2`NWX+?W"J1GM''&4>SoU2*N-F1H.9[4s2sT1c%!Q%6QF*3(#kP4>SoV2*N-F6SpSf4q0V12`Wc[+?VG=681SG4@:q^3Bdm71H.WT4s2sD2aT8`+?W"J2E!`.4>So_1HlpD1H.WX4s2sT1c@?X%6QF*68h"M4>So_6TuVT6Sp\h4q0V12aTnr+?VG=6:O-]4@:qa2EhR41H.ZT4s2sD2a]Gd+?W"J2aKV:4>So`2Ei6G1H.]]4s2sT1cR3R%6QF*6odFR4>Soa7QqqW6Spe\4q0V12aoDa+?VG=7R93\4@:qc6p;&B1H.ci4s2sD2b$2!+?W"J69.4=4>Soc76VhV1H.cm4s2sT1dXSo%6QF+0JG[54>SrP3BeQJ6Sq,!4q0V13&3c`+?VG>1.FGM4@:qo5s>`?1H70E4s2sD3&<9Q+?W"J7P[.:4>SrQ1-QgC1H70I4s2sT1e''>d%6QF+1H%E>4>SrQ3BeQJ6Sq8!4q0V13&<ia+?VG>1c%<<4@:t[1-Q.01H73J4s2sD3&ENW+?W"K0LS)64>SrR2a/?H1H73O4s2sT2)-gL%6QF+1dO;J4>SrS0KpUA6T$SU4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71H76H4s2sD3&O#d+?W"K0gn274>SrS6TuVT1H76[4s2sT2)7H]%6QF+2+9\O4>SrT0KpUA6T$Ve4q0V13&WKT+?VG>2E*fB4@:t^0g6%/1H79Y4s2sD3&X5i+?W"K1IXJ:4>SrU0KpUA1H7<J4s2sT2)I3T%6QF+2`!W?4>SrU2Ei6G6T$\i4q0V13&`f\+?VG>2aKVM4@:t`5s>`?1H7<\4s2sD3&a5h+?W"K2DRH*4>SrU76VhV1H7?J4s2sT2)[<U%6QF+3&*T>4>SrV2a/?H6T$b^4q0V13&io^+?VG>3(6"R4@:tb2EhR41H7?`4s2sD3&rZV+?W"K2aon>4>SrW0g6^B1H7BN4s2sT2)m<S%6QF+3A`oB4>SrW2*N-F6T$h\4q0V13&rl\+?VG>3B98G4@:tc3''Id61H7B^4s2sD3&sDk+?W"K3ANc-4>Sr_0KpUA1H7ZU4s2sT2*!Z\%6QF+5r1\I4>Sr_2*N-F6T$kl4q0V13''fGd+?VG>5t!mZ4@:tl0g6%/1H7Zh4s2sD3''oPf+?W"K5s[[D4>Sr`3''JHI1H7]]4s2sT2*s2b%6QF+6:*jY4>Sr`7QqqW6T%2"4q0V13(#Jc+?VG>6SptL4@:to1-Q.01H7`Z4s2sD3(#Vg+?W"K6o@.;4>Sra3''JHI1H7`j4s2sT2+0Gg%6QF+6npkJ4>Srb2Ei6G6T%:j4q0V13(,_i+?VG>6pX!Z4@:tq0g6%/1H7ci4s2sD3(-5"+?W"K7Q<R@4>Src0KpUA1H7fY4s2sT2D?mM%6QF+75I+M4>Src2*N-F6T-VY4q0V13(5_h+?VG>76!IR4@;"\6p;&B1H7f`4s2sD3(6;#+?W"L0ekj$4>Srd0g6^B1H7i_4s2sT2DIT`%6QF+7Q<RS4>Srd3BeQJ6T-\X4q0V13(?1t+?VG>7RK?^4@;"^3Bdm71H7im4s2sD3(?A$+?W"L1GM''&4>SuO1HlpD1H@-I4s2sT2D[]a%6QF,0K20<4>SuO3''JHI6T-bV4q0V13A<HW+?VG?0L@rG4@;"`2*MI31H@-V4s2sD3AE9Q+?W"L1c[`/4>SuP1d3$E1H@0M4s2sT2DmBV%6QF,0gRuG4>SuP69ZMS6T-ej4q0V13AElb+?VG?1,_<=4@;"b0g6%/1H@3L4s2sD3ANQX+?W"L2FK_<4>SuQ5s?DR1H@3[4s2sT2E*BT%6QF,1GD!84>SuR0g6^B6T-kh4q0V13AWES+?VG?1Gh9<4@;"c6p;&B1H@6K4s2sD3AWuc+?W"L3&*T+4>SuR76VhV1H@9J4s2sT2E4,h%6QF,1c.B=4>SuS2*N-F6T-q_4q0V13A`WX+?VG?1cRZA4@;"e3Bdm71H@9P4s2sD3Aa2h+?W"L3CH%?4>SuT1-QgC1H@<O4s2sT2F0Vm%6QF,2)mcB4>SuT3BeQJ6T.7d4q0V13Aj)d+?VG?2+''PM4@;"n2*MI31H@<\4s2sD3ArTU+?W"L6:*jF4>SuU1d3$E1H@?R4s2sT2FBAd%6QF,2F0ML4>SuU69ZMS6T.;#4q0V13As5g+?VG?2FTeP4@;"p0g6%/1H@?_4s2sD3B&fZ+?W"L6o@.;4>SuV2Ei6G1H@BQ4s2sT2FKtt%6QF,2`NuD4>SuV6p;_U6T.@g4q0V13B''Aj+?VG?2b#tR4@;"q5s>`?1H@EK4s2sD3B/cX+?W"L779<K4>SuW1HlpD1H@ET4s2sT2F]Db%6QF,3''f_N4>SuW6TuVT6T.D"4q0V13B0Dj+?VG?3ANc@4@;"r76V/C1H@HO4s2sD3B8o[+?W"M0K)*(4>SuX2*N-F1H@HS4s2sT2_[6U%6QF,3B02F4>SuX76VhV6T6\e4q0V13C,A`+?VG?5rLnL4@;%^5s>`?1H@`[4s2sD3C,Vg+?W"M1,;$&4>Su`3BeQJ1H@`f4s2sT2_m6S%6QF,5smgY4>Sua1-QgC6T6b\4q0V13C5Vf+?VG?69.4P4@;%`3''Id61H@cf4s2sD3C6%r+?W"M1IXJ:4>Sua6TuVT1H@cj4s2sT2`*6Q%6QF,6:O-]4>Sub1HlpD6T6hZ4q0V13C>_h+?VG?6TI=Q4@;%b3Bdm71H@fg4s2sD3C?.t+?W"M2+0V;4>Sub6p;_U1H@iZ4s2sT2`<BS%6QF,6o7(M4>Suc2*N-F6T6n`4q0V13CGbh+?VG?6ps3]4@;%c6TtrA1H@il4s2sD3CH>#+?W"M2`<i/4>Sud0KpUA1H@lZ4s2sT2`E`\%6QF,75I+M4>Sud2Ei6G6T6qn4q0V13CPnk+?VG?76s*[4@;%e69Yi@1H@lk4s2sD3CQ>"+?W"M3ANc-4>Sue0KpUA1H@o]4s2sT2`X2g%6QF,7Q*FQ4>Sue5s?DR6T7:i4q0V13CZ>!+?VG?7RK?^4@;%n76V/C1H@om4s2sD3CZJ%+?W"M68:Y54>T8W0KpUA1I3]Q4s2sT2aTAc%6QF40K;6=4>T8W6p;_U6T7@f4q0V15qk_k+?VGG0Le5K4@;%p5s>`?1I3`N4s2sD5qt>_+?W"M6npk74>T8X3BeQJ1I3`_4s2sT2afYi%6QF40gn2J4>T8Y1-QgC6T7D%4q0V15r(5[+?VGG1,V6<4@;%r2*MI\DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>T8Y2Ei6G1I3cU4s2sT2ao_j%6QF41-%N@4>T8Z69ZMS6T7G%4q0V15r1kl+?VGG1IODL4@;(^1-Q.01I3fc4s2sD5r:8Z+?W"N0Ju$''4>T8[1-QgC1I3iU4s2sT3&!Z_%6QF41c[`B4>T8[6p;_U6T?eZ4q0V15r;"o+?VGG1e''YO4@;(_76V/C1I3lP4s2sD5rCD]+?W"N1,1s%4>T8\1HlpD1I3lY4s2sT3&3?T%6QF42+''PM4>T8]0g6^B6T?kW4q0V15rLJ^+?VGG2DdT?4@;(a3Bdm71I3oV4s2sD5rLYc+?W"N1IOD94>T8]3''JHI1I3of4s2sT3&E?R%6QF42F]kQ4>T8^0KpUA6T?ng4q0V15rUM^+?VGG2`<iB4@;(b76V/C1I3rY4s2sD5rgY`+?W"N2)RQ,4>T8`1-QgC1I4#W4s2sT3&`TV%6QF43A`oB4>T8`2Ei6G6T@"^4q0V15rgng+?VGG3C>tQ4@;(e69Yi@1I4#j4s2sD5s[4h+?W"N3&j)24>T8h1-QgC1I4;c4s2sT3&j>j%6QF45r_%N4>T8h7QqqW6T@(`4q0V15sd=j+?VGG68q(N4@;(o1-Q.01I4>e4s2sD5smq%+?W"N5rh+<4>T8j69ZMS1I4D_4s2sT3''p%t%6QF46npkJ4>T8k1HlpD6T@Fj4q0V15t!On+?VGG6oI4O4@;(q3Bdm71I4Df4s2sD5t"+)+?W"N6UX*I4>T8l0KpUA1I4Ge4s2sT3(-%r%6QF475d=P4>T8l2a/?H6T@Li4q0V15t*as+?VGG7Q3LR4@;(s2*MI31I4Ji4s2sD5t47++?W"N7Q*F>4>T8m76VhV1I4K"4s2sT3(?>#%6QF50JG[54>T;X1-QgC6THhT4q0V16812Z+?VGH0K20<4@;+_2a.[51I<c]4s2sD681km+?W"O0etp%4>T;Y0KpUA1I<iP4s2sT3AENX%6QF51,D*:4>T;Z3BeQJ6THni4q0V168Chj+?VGH1c.B=4@;+b2*MI31I<oU4s2sD68USa+?W"O2)7?)4>T;\2a/?H1I<oY4s2sT3AiZX%6QF51dO;J4>T;]0KpUA6TI"a4q0V168^M^+?VGH2*!iC4@;+e1d2@21I<rb4s2sD68_+o+?W"O2FK_<4>T;]6p;_U1I<rg4s2sT3B&ZV%6QF52D@<;4>T;^2Ei6G6TI(_4q0V168gbd+?VGH2_dK=4@;+f6p;&B1I=#U4s2sD68p\a+?W"O3''f_;4>T;_1d3$E1I=#Y4s2sT3B0Dj%6QF52`EoC4>T;_6p;_U6TI.]4q0V169$Y_+?VGH5qtPG4@;+h76V/C1I=A_4s2sD6:!Ck+?W"O6S^h74>T;i1d3$E1I=Ab4s2sT3C>Yf%6QF55rUtM4>T;i69ZMS6TIM#4q0V16:"%(+?VGH5t4$\4@;+s2a.[51I=D_4s2sD6:*Fk+?W"O6q''9K4>T;j2*N-F1I=Dd4s2sT3CPeh%6QF568q(N4>T;j5s?DR6TIRp4q0V16:+%''+?VGH6SUbI4@;+u1-Q.01I=Ga4s2sD6:3Om+?W"O7R93I4>T;k1d3$E1I=Ge4s2sT3CZD#%6QF56T71O4>T;k6p;_U6U<C\4q0V16:44++?VGH6o7(M4@;Cg76V/C1I=Je4s2sD6:<ar+?W"W0f;-(4>T;l3''JHI1I=Mh4s2sT5qtA`%6QF576!IR4>T;n7QqqW6U<In4q0V16SL2X+?VGI0KD<>4@;Ck1-Q.01IEi^4s2sD6SLhj+?W"W1dsS;4>T>Y6TuVT1IEib4s2sT5rCA\%6QF60Le5K4>T>Z2*N-F6U<Re4q0V16SUM`+?VGI0ge,I4@;Cm1-Q.01IElb4s2sD6SgD[+?W"W2E<r14>T>\0g6^B1IErV4s2sT5rV4r%6QF61H.K?4>T>]3BeQJ6U<[h4q0V16Sq(m+?VGI2FBYN4@;Cp3Bdm71IF&g4s2sD6T.@s+?W"W6:F''I4>T>_7QqqW1IF)U4s2sT5sm@j%6QF62_mQ>4>T>`3''JHI6U=''s4q0V16T7@r+?VGI2b#tR4@;D&1d2@21IF,U4s2sD6T?qe+?W"W6pX!G4>T>a2Ei6G1IF/V4s2sT5t*Ll%6QF63AE]?4>T>b2a/?H6U=./4q0V16TI+i+?VGI5s[[W4@;D(2*MI31IFGp4s2sD6UELk+?W"X0KD<+4>T>k1-QgC1IFJc4s2sT68:2Y%6QF668^qL4>T>k2a/?H6UELb4q0V16UEar+?VGI6:F''\4@;Fi3Bdm71IFJu4s2sD6UX=++?W"X1,;$&4>T>m76VhV1IFSe4s2sT68UG]%6QF675R1N4>T>n2*N-F6UEUq4q0V16U`ms+?VGI76!IR4@;Fl6p;&B1IFSk4s2sD6UaI.+?W"X2).9(4>T>o0KpUA1IFVe4s2sT68_%m%6QF67Pd4N4>T>o3''JHI6UEY!4q0V16Uj("+?VGI7RfQa4@;Fn2*MI31INoN4s2sD6ngqk+?W"X2FBY;4>TAZ6TuVT1INud4s2sT68q1o%6QF71.=AL4>TA^3''JHI6UEe$4q0V16o6nf+?VGJ2D[N>4@;G%3Bdm71IO,X4s2sD6oQkb+?W"X6o@.;ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QF72`!W?4>TAa1d3$E6UF4!4q0V16oR"f+?VGJ3B'',E4@;G(5s>`?1IO5_4s2sD6od7k+?W"Y0L\/74>TAc5s?DR1IO5j4s2sT6SU;Z%6QF73CH%R4>TAk1HlpD6UNRc4q0V16pWXn+?VGJ5rLnL4@;Ij76V/C1IOMf4s2sD6pX+&+?W"Y1,D*''4>TAk69ZMS1IOMr4s2sT6S^qk%6QF75t4$\4>TAl2*N-F6UNXa4q0V16p`gr+?VGJ6:*jY4@;Il7Qq8D1IOPs4s2sD6pa:*+?W"Y1c@N,4>TAl76VhV1IOSa4s2sT6Spee%6QF76SUbI4>TAm2a/?H6UN[u4q0V16pisu+?VGJ6Ua0]4@;In5s>`?1IOT"4s2sD6pran+?W"Y2DIB)4>TAn1d3$E1IOVs4s2sT6T-qg%6QF76pa''[4>TAn76VhV6UNde4q0V16psL.+?VGJ7RfQa4@;Ip2EhR41IWuP4s2sD75-J\+?W"Y3C,h<4>TD[1HlpD1IWuT4s2sT6TIOu%6QF80K)*;4>TD[6TuVT6UO-o4q0V175..o+?VGK0f)!94@;J%76V/C1IX#T4s2sD756Y`+?W"Y68h":4>TD\2Ei6G1IX#X4s2sT6UEds%6QF80f_E?4>TD\7QqqW6UO1.4q0V175?V^+?VGK1,hB>4@;J''5s>`?1IX&Y4s2sD75@.m+?W"Y6npk74>TD]69ZMS1IX)[4s2sT6UWdq%6QF81I42I4>TD_0KpUA6UO:"4q0V175Q__+?VGK1c%<<4@;J)6p;&B1IX,W4s2sD75Zkb+?W"Y7PR(94>TD`1d3$E1IX/]4s2sT6ngA[%6QF82*jDK4>TD`69ZMS6UWUo4q0V175[Fr+?VGK2+9\O4@;Lj6p;&B1IX/j4s2sD75d"e+?W"Z0ekj$4>TDa3''JHI1IX2i4s2sT6nq+o%6QF82FTeP4>TDb0KpUA6UW[e4q0V175lqb+?VGK2`!W?4@;Ll3Bdm71IX5Z4s2sD75m\"+?W"Z1.4;84>TDc0KpUA1IXSa4s2sT6o.+m%6QF85r(VH4>TDl1d3$E6UWe"4q0V176rdp+?VGK5rUtM4@;Lp0g6%/1IXSh4s2sD76s@++?W"Z2DmZ-4>TDm0g6^B1IXVg4s2sT6oQkb%6QF868q(N4>TDn2*N-F6UWjn4q0V177/ss+?VGK6ngeI4@;Lr3Bdm71IX\d4s2sD778mp+?W"Z3As&14>TDo1HlpD1IX\h4s2sT6od7k%6QF86oI4O4>TDo6TuVT6UWq&4q0V1779U/+?VGK75R1N4@;M&5s>`?1IX_i4s2sD77K4"+?W"Z68:Y54>TDq3''JHI1IXc%4s2sT6pigq%6QF90JG[54>TG\0g6^B6UX:14q0V17PHS]+?VGL0fV?>4@;M)0g6%/1Ia)Z4s2sD7PR4n+?W"Z76*O@4>TG]6TuVT1Ia)f4s2sT6q''L-%6QF90h+>L4>TG^2*N-F6UXBu4q0V17PZqe+?VGL1.4;K4@;M+76V/C1Ia,g4s2sD7Pc_^+?W"[0Ju$''4>TG_0g6^B1Ia/V4s2sT75-_c%6QF91Gh9<4>TG_5s?DR6U`[s4q0V17Pd@p+?VGL1IXJM4@;Ol2*MI31Ia/i4s2sD7Plqc+?W"[0gRu44>TG`2*N-F1Ia2Z4s2sT75?V^%6QF91cIT@4>TG`3BeQJ6U`af4q0V17PmCp+?VGL2)%3:4@;Om3Bdm71Ia5X4s2sD7Q3.f+?W"[1H%E+4>TGc2*N-F1Ia;]4s2sT75[@p%6QF92`EoC4>TGc3''JHI6U`k#4q0V17Q3=k+?VGL2aonQ4@;Oq1-Q.01Ia>Y4s2sD7Q<:i+?W"[2FTe=4>TGd2a/?H1Ia>`4s2sT75m+g%6QF93&s/F4>TGd69ZMS6U`po4q0V17Q<b!+?VGL3ANc@4@;Or6p;&B1IaA^4s2sD7QEau+?W"[3''f_;4>TGe69ZMS1IaAl4s2sT76*+e%6QF93CH%R4>TGe7QqqW6Ua!m4q0V17R8^l+?VGL5rLnL4@;Ot3Bdm71IaYi4s2sD7R9F++?W"[5rLn94>TGm76VhV1Ia_c4s2sT76s@+%6QF96SUbI4>TGq1-QgC6Ua?t4q0V17R]*s+?VGL75R1N4@;P+2EhR41Iaej4s2sD7R]4!+?W"[76*O@4>TGq2a/?H1Iaf$4s2sT77BU.%6QF977KH`4>TGr1d3$E6UaI14q0V17Rf7!+?VGL7Q*FQ4@;Rl1-Q.01Iahm4s2sD7RfC%+?W"\0Ju$''4>TGr5s?DR1Iai''4s2sT7PHhd%6QI$0Jbm84>\`G3''JHI6Uidg4q0V20JGLN+?VJ70L@rG4@;Rm6p;&B1b^UN4s2sE0JGpZ+?W"\1,1s%4>\`G7QqqW1b^XA4s2sT7PZhb%6QI$0fM9=4>\`H6TuVT6Uije4q0V20JPsZ+?VJ71H.K?4@;Ro3Bdm71b^^F4s2sE0Jb^Q+?W"\2)[W-4>\`J5s?DR1b^^Q4s2sT7Q!1i%6QI$1IODL4>\`K1HlpD6Uiq$4q0V20Jk[O+?VJ71dXAK4@;Rr5s>`?1b^aR4s2sE0Jl0]+?W"\2_mQ+4>\`K76VhV1b^d@4s2sT7Q31g%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaY0JtRK+?VJ72)d]A4@;Rs3Bdm71b^dH4s2sE0Ju0\+?W"\3&*T+4>\`L6TuVT1b^gB4s2sT7Q<:i%6QI$2DRH=4>\`N2*N-F6Uj%''4q0V20K1mR+?VJ72aT\N4@;S(1-Q.01b^jU4s2sE0K:gO+?W"\5rh+<4>\`O1HlpD1b^pI4s2sT7RAgn%6QI$3As&D4>\`Y0KpUA6UjF#4q0V20L@KX+?VJ768C_I4@;S,1-Q.01b_6P4s2sE0L@W\+?W"\75[7<4>\`Y2Ei6G1b_6`4s2sT7R]=$%6QI$6:O-]4>\`Z1d3$E6UjO''4q0V20LI]]+?VJ76T71O4@;S-6p;&B1b_9V4s2sE0LJ,i+?W%G0JPa#4>\`Z69ZMS1b_<U4s2sU0JG@J%6QI$6oR:P4>\`[6TuVT6ng>N4q0V20LS;m+?VJ77PI"K4@CkX3Bdm71b_BR4s2sE0Ldra+?W%G1.=A94>\`]2a/?H1b_BY4s2sU0JbUN%6QI$7QEXT4>\`]69ZMS6ngDW4q0V20LeDn+?VJ77RfQa4@CkZ6p;&B1bg[<4s2sE0eb@H+?W%G1bh0''4>\cH2*N-F1bg[M4s2sU0Jl''Z%6QI%0L@rG4>\cH6p;_U6ngJQ4q0V20ec$[+?VJ80ebd64@Ck\2*MI31bg^>4s2sE0ekUN+?W%G2*!i04>\cI3''JHI1bga@4s2sU0K(XL%6QI%1,D*:4>\cJ1d3$E6ngMf4q0V20etUM+?VJ81,hB>4@Ck^0g6%/1bgaF4s2sE0eu0]+?W%G2`3c.4>\cJ7QqqW1bgd@4s2sU0K2Ea%6QI%1GV-:4>\cM1HlpD6ngSU4q0V20f:dO+?VJ82)RQ?4@Ckh2EhR41bgjG4s2sE0f:pS+?W%G5rh+<4>\cM3BeQJ1bgjW4s2sU0L8)j%6QI%2DRH=4>\cN2a/?H6ngqn4q0V20fD!T+?VJ82E<rD4@Ckj1-Q.01bgmS4s2sE0fDB_+?W%G6T%%:4>\cN6p;_U1bgpE4s2sU0LJ,i%6QI%2`*]@4>\cO3BeQJ6nh"e4q0V20fMB^+?VJ82aT\N4@Ckk76V/C1bgpV4s2sE0fMNb+?W%G756t84>\cO7QqqW1bgsI4s2sU0L[i_%6QI%3&a#D4>\cP6TuVT6nh(c4q0V20fVQb+?VJ85qkJF4@Ckm3Bdm71bh9N4s2sE0gd][+?W%H0L\/74>\c[1HlpD1bh?S4s2sU0f(RK%6QI%6T%%M4>\c[2a/?H6npJT4q0V20gdrb+?VJ86UX*\4@Cn[69Yi@1bh?e4s2sE0gmi^+?W%H1c@N,4>\c\2*N-F1bhBV4s2sU0f2<_%6QI%6oR:P4>\c\3BeQJ6npPR4q0V20gn;k+?VJ875-nJ4@Cn]2*MI31bhET4s2sE0h"&c+?W%H2DRH*4>\c]3BeQJ1bhEc4s2sU0fD$U%6QI%7706]4>\c^5s?DR6npSf4q0V20h+Jn+?VJ87RfQa4@Cn_6p;&B1bpa=4s2sE1,(FH+?W%H3&3Z,4>\fI1-QgC1bpaA4s2sU0fV$S%6QI&0Ju$:4>\fJ69ZMS6npY]4q0V21,2-[+?VJ90gn2J4@Cni1-Q.01bpdS4s2sE1,:OI+?W%H5rCh84>\fK0g6^B1bpgF4s2sU0gRf`%6QI&1-n)H4>\fK6p;_U6nq"d4q0V21,;<_+?VJ91GM''94@Cnj6p;&B1bpjB4s2sE1,LsS+?W%H6SUb64>\fM3BeQJ1bpsF4s2sU0gn#c%6QI&2DdT?4>\fO2Ei6G6nq.g4q0V21,_''T+?VJ92`*]@4@Cnn3Bdm71bq!J4s2sE1,hN`+?W%I0L7l34>\fP6TuVT1bq''L4s2sU1,1LI%6QI&3B'',E4>\fR3''JHI6o$Md4q0V21-%?Y+?VJ93C5nP4@Cq\0g6%/1bq''Y4s2sE1-mZZ+?W%I1Gq?*4>\fZ2*N-F1bq?_4s2sU1,LaM%6QI&5sdaX4>\f[6p;_U6o$SZ4q0V21."Dn+?VJ96SptL4@Cq^6p;&B1bqEU4s2sE1.4Sq+?W%I2DmZ-4>\f^0KpUA1bqKS4s2sU1,q$Q%6QI&75@%L4>\f^1d3$E6o$_Z4q0V21.=&a+?VJ977''0\4@Cqa3Bdm71bqKe4s2sE1.=Vq+?W%I3ANc-4>\f^7QqqW1bqNW4s2sU1-%6V%6QI&7Q!@P4>\f_2a/?H6o$bj4q0V21.F5e+?VJ97R93\4@Cqj0g6%/1bqNe4s2sE1.F_s+?W%I5rCh84>\iJ0KpUA1c$g?4s2sU1-n2i%6QI''0JYg74>\iJ2*N-F6o%%r4q0V21GC^N+?VJ:0L@rG4@Cqk1-Q.01c$gQ4s2sE1GD3\+?W%I6:!dE4>\iJ76VhV1c$gT4s2sU1."Am%6QI''0ekj74>\iK2*N-F6o%+c4q0V21GLgP+?VJ:0h"8K4@Cql6TtrA1c$jU4s2sE1GU[K+?W%I6o@.;4>\iL1-QgC1c$mD4s2sU1.4,d%6QI''1,V6<4>\iL69ZMS6o%.u4q0V21GV<]+?VJ:1Gq?=4@Cqn2EhR41c$pG4s2sE1G^sR+?W%I7P[.:4>\iM3''JHI1c$pR4s2sU1.F,b%6QI''1I=8J4>\iN0g6^B6o%4l4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71c$sF4s2sE1Gh*U+?W%J0K)*(4>\iN69ZMS1c$sV4s2sU1GLUJ%6QI''1e''YO4>\iO1HlpD6o-PV4q0V21Gq$R+?VJ:2)d]A4@Ct\1-Q.01c%!K4s2sE1Gq0V+?W%J1,_<*4>\iO5s?DR1c%!U4s2sU1GV6[%6QI''2+''PM4>\iO76VhV6o-Sd4q0V21GqWc+?VJ:2DmZ@4@Ct]0g6%/1c%$K4s2sE1H%Ta+?W%J1IXJ:4>\iP6p;_U1c%EQ4s2sU1Gh!R%6QI''5r1\I4>\i[1d3$E6o-bj4q0V21I3l^+?VJ:5rUtM4@Ctb0g6%/1c%EW4s2sE1I4Gn+?W%J3&Nl/4>\i\0KpUA1c%HU4s2sU1H@3S%6QI''68h"M4>\i\2a/?H6o-hh4q0V21I=&b+?VJ:6:!dX4@Ctc6p;&B1c%Hb4s2sE1IEl\+?W%J5qtP44>\i]1d3$E1c%KZ4s2sU1I4Gn%6QI''6U<mY4>\i]6TuVT6o..e4q0V21IFPo+?VJ:6Uj6^4@Ctl3Bdm71c%NR4s2sE1IO,b+?W%J6:=!H4>\i^2a/?H1c%NZ4s2sU1IF&a%6QI''6odFR4>\i^76VhV6o.1r4q0V21IO\r+?VJ:75[7O4@Ctn0g6%/1c%QY4s2sE1IX\q+?W%J6odF?4>\i_7QqqW1c%TZ4s2sU1IX,a%6QI''7Q3LR4>\i`3''JHI6o.8#4q0V21IaAg+?VJ:7RB9]4@Ctp0g6%/1c%Tg4s2sE1Iaht+?W%J7Q!@=4>\lK0KpUA1c-mA4s2sU1IaAg%6QI(0Ju$:4>\lK5s?DR6o6SQ4q0V21b_6[+?VJ;0h"8K4@D"[3Bdm71c-pV4s2sE1c-mM+?W%K0h"884>\lO0g6^B1c.$F4s2sU1c-pN%6QI(1c.B=4>\lP5s?DR6o6_X4q0V21c7T`+?VJ;2+0VN4@D"`6p;&B1c.''Y4s2sE1c@$O+?W%K2DIB)4>\lQ0g6^B1c.*M4s2sU1c@3T%6QI(2F0ML4>\lR0g6^B6o6hV4q0V21cI0R+?VJ;2`!W?4@D"b5s>`?1c.-J4s2sE1cI9U+?W%K2afh=4>\lR2a/?H1c.-X4s2sU1cR9T%6QI(2aonQ4>\lS1HlpD6o6kl4q0V21cR<U+?VJ;3B'',E4@D"d2*MI31c.3P4s2sE1dX2d+?W%K5s[[D4>\l]5s?DR1c.Nd4s2sU1daYp%6QI(6:=![4>\l]7QqqW6o7:d4q0V21d`r\+?VJ;6T.+N4@D"o2*MI31c.QY4s2sE1da5d+?W%K6ps3J4>\l^3BeQJ1c.TS4s2sU1ds)^%6QI(6npkJ4>\l_1HlpD6o7=m4q0V21dj/a+?VJ;6oI4O4@D"p6p;&B1c.TZ4s2sE1dj_q+?W%K7PR(94>\l_76VhV1c.Ti4s2sU1e''Jh%6QI(756tK4>\l`2Ei6G6o7A%4q0V21ds>e+?VJ;76*OS4@D%\2*MI31c.We4s2sE1dsbq+?W%L0KD<+4>\l`6p;_U1c.ZX4s2sU2)%E^%6QI(7Q!@P4>\la7QqqW6o?\Y4q0V22)$^J+?VJ<0fV?>4@D%^1Hl711c7!J4s2sE2).B\+?W%L1IXJ:4>\oM69ZMS1c7!U4s2sU2)I$O%6QI)0h"8K4>\oN1d3$E6o?eY4q0V22)7*S+?VJ<1.+5J4@D%a1-Q.01c7$V4s2sE2)7Ta+?W%L2*jD84>\oN7QqqW1c7''D4s2sU2)Rcc%6QI)1GV-:4>\oO2*N-F6o?kW4q0V22)@-S+?VJ<1H.K?4@D%b2EhR41c7''T4s2sE2)@]c+?W%L2FTe=4>\oP0KpUA1c7*E4s2sU2)dEW%6QI)1bq6;4>\oP1d3$E6o?n`4q0V22)I0S+?VJ<1dXAK4@D%c6p;&B1c7*X4s2sE2)R-Q+?W%L3''f_;4>\oQ1HlpD1c70L4s2sU2*!BT%6QI)2E*fB4>\oT3''JHI6o@7g4q0V22)mT[+?VJ<3''f_N4@D%o5s>`?1c76Z4s2sE2)muf+?W%L6UX*I4>\oT7QqqW1c79L4s2sU2+05a%6QI)3As&D4>\oU69ZMS6o@A$4q0V22*"#f+?VJ<3CH%R4@D%q2EhR41c79^4s2sE2*io[+?W%L76*O@4>\o]0g6^B1c7QX4s2sU2+9ns%6QI)5s[[W4>\o]7QqqW6o@G"4q0V22*ru\+?VJ<68:YH4@D(]1-Q.01c7TT4s2sE2*s,`+?W%M0Ju$''4>\o^2*N-F1c7Td4s2sU2D@-T%6QI)6:=![4>\o_1-QgC6oHbX4q0V22+''/`+?VJ<6T%%M4@D(^6p;&B1c7WY4s2sE2+''>e+?W%M1,1s%4>\o_3BeQJ1c7ZT4s2sU2DR-R%6QI)6npkJ4>\o`5s?DR6oHeh4q0V22+0bp+?VJ<6pj-\4@D(`5s>`?1c7Zh4s2sE2+0nt+?W%M1IOD94>\oa0KpUA1c7]X4s2sU2Dd-P%6QI)75R1N4>\oa2*N-F6oHk[4q0V22+9Jg+?VJ<76s*[4@D(a76V/C1c7]g4s2sE2+9kr+?W%M2)7?)4>\oa6p;_U1c7]j4s2sU2DmBV%6QI)77KH`4>\ob0g6^B6oHn_4q0V22+B>b+?VJ<7RB9]4@D(b6p;&kDId3gEa`iuAIT)+1E^.<B5)6mAo_<tB4VN71c7`j4s2sE2+C&!+?W%M2F0M94>\rM0KpUA1c@$C4s2sU2E!re%6QI*0Jbm84>\rM1d3$E6oHtZ4q0V22D@!P+?VJ=0etp84@D(d2*MI31c@''F4s2sE2DI3U+?W%M3&Wr04>\rN5s?DR1c@''T4s2sU2E4,h%6QI*0ge,I4>\rN76VhV6oI%[4q0V22DIZb+?VJ=1,_<=4@D(f2*MI31c@*L4s2sE2DR]b+?W%M5r(V54>\rO7QqqW1c@-E4s2sU2F0>e%6QI*1GV-:4>\rP1d3$E6oI>!4q0V22D[3S+?VJ=1IF>K4@D(o0g6%/1c@-Y4s2sE2Dd9T+?W%M6:3pG4>\rQ2Ei6G1c@0L4s2sU2FBAd%6QI*1cRZA4>\rQ5s?DR6oICm4q0V22Dd`a+?VJ=1dsSN4@D(p6p;&B1c@0[4s2sE2Dm0P+?W%M6o$q84>\rR0g6^B1c@3H4s2sU2FKDd%6QI*2)IK>4>\rR3BeQJ6oIG!4q0V22Dmca+?VJ=2+''PM4@D(r0g6%/1c@3Z4s2sE2Dmrf+?W%M75[7<4>\rS0KpUA1c@6M4s2sU2FTVi%6QI*2E*fB4>\rS5s?DR6oILh4q0V22E!lc+?VJ=2_[E<4@D(s2EhR41c@9I4s2sE2E*BT+?W%M7R]KM4>\rT1HlpD1c@9M4s2sU2_ZsM%6QI*2`<iB4>\rU0g6^B6oQeW4q0V22E3HU+?VJ=3&a#D4@D+_1-Q.01c@<Q4s2sE2E3]\+?W%N0gRu44>\rU5s?DR1c@<\4s2sU2_d]a%6QI*3(,qQ4>\rV1HlpD6oQkU4q0V22E<ZZ+?VJ=3C5nP4@D+`76V/C1c@?]4s2sE2E=/h+?W%N1H%E+4>\rV76VhV1c@WR4s2sU2`!HX%6QI*5qtPG4>\r^2a/?H6oQni4q0V22F0;d+?VJ=5rh+O4@D+b2*MI31c@Wd4s2sE2F9)]+?W%N1dO;74>\r_0g6^B1c@ZU4s2sU2`3?S%6QI*68UkK4>\r_3BeQJ6oQth4q0V22F9bp+?VJ=6:F''\4@D+d2EhR41c@Zi4s2sE2FB/^+?W%N2F0M94>\r`0g6^B1c@]W4s2sU2`=&f%6QI*6SptL4>\r`2Ei6G6oR%Z4q0V22FBDe+?VJ=6UX*\4@D+e2*MI31c@]i4s2sE2FK5_+?W%N2aon>4>\ra0g6^B1c@`[4s2sU2`NQV%6QI*6oR:P4>\ra3''JHI6oR(k4q0V22FKPh+?VJ=6pa''[4@D+f6p;&B1c@`h4s2sE2FTAb+?W%N3AE],4>\rb2*N-F1c@cg4s2sU2`X;j%6QI*77''0\4>\rc7QqqW0JG794q0V22_ZpL+?VJ>1c[`B4>8HF2*MI31cI6\4s2sE2aKep+?V>31,(m$ASu$fAo_<tB4VM]ASu$gD..Am6VV!.:18!N+CfP7Eb0-1A8,Oq+>6)V@;m?"AS,XoATD@''Dfp)1AKYr1E"-ArA.<*fA.8to,t2]^;IsofF`Lu''%4*;h:IYc~>'
%
classmethod: Category
cmapAdobe_KR_UCS2
	"Category class>>#recodeCMapUnicodeMethods generated this method at 17. Mai 2021 um 12:46:54"

	^String fromASCII85: ',p?)`/O<oc@V%,I/heDGATMd4EarZ46VV!.%4*;gDe!p,ASuTbAS#C`A5Zu[Dfp)1ATKmT:i^Ja;e:%n-ppQo8T&6a.1IRL8T&$SF_#&]ATMd4EarZA+Ad)s@oHr\+=KTK6qM91F=@YF,sl0UBl6g[F)Q2A@q@\D6VV!.+=KNdDdm9092[?A6W5`h%4*<"Bln0&3Zoh:A8bpg/PAtn<C9\?+@0OV@V$ZT;BRtK%4*<$ATDj+Df.TY0eP.60b#ET6Z6phEbT0"F?1Nr/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M.DX,suTiH#dV3BQQ9X6Z6phEbT0"F<E:u3A<$?0JPR16"FnCAM,)kCht57BkM+$F!,L7F(KB8ARmD&,pbosE-ZJ<B4uBJ%4*;fDfBuBBkM+$3Zq=3A8-+,EbT!*FD5Z2+CT.u+E_a:+DG^9F)Q2A@q?ckDIal!Bl7@"Gp$^;Ec#kK+EqOABHV56%4*;fDfBuBBkM+$3ZrW\FD,T8F<GF=A8,Xi@psInDf.*K@<,p%E+O'',BlnH.A0>i3Dg#i*ARlp*BOQ!*FD,4p,pbosE-ZJ<B4uBJ+D,P.Ci=N3DJ()%Df0*"FD5Z2F!+n3AKYi$F?0jW,suTiH#dV3BQQ9E,pbosE-ZJ<B4uBJ+Auc]BleB:Bju4,Bl@m1+E(j7F)Q2A@q?cmDe*E%D09oA+ED%8@;0U%FD,5.@:F.uAITq36Z6phEbT0"F?1OSDfBuBBkM+$+Du+>Bk(^*+EV:2F!,:5F*&OCAftT%DIdI''Bl@m1+CT.u+EV:.+D,P.Ci=N3DJ''D),suTiH#dV3BQQ9XA8-*pCgh$pATBC4,pbosE-ZJ<B4uBJ%4*;fDfBuBBkM+$3Zq=3A8-+,EbT!*FD5Z2F!,17+C]&&@<-W9AoD^,+Dl7BF<GU8E,ol-F^nu*FD,5.@:F.uAITq36Z6phEbT0"F?1OSDfBuBBkM+$+Du+>Bk(^*+EV:2F!,:5F*&OCAftT%DIdI''Bl@m1+CT.u+EV:.+D,P.Ci=N3DJ''D),suTiH#dV3BQQ9XA8-*pCgh$pATAo-DBO%7AKYN%@s)X"DKK</Bl@l3@;]U/DfQt=FD,6++DkP/ATDKnCi^%3,suTiH#dV3BQQ9XE,ol?Bk1dc+EqOABHVD1AKYMtF*)G:@Wcd,Df.0M%4*;fDfBuBBkM+$3XmA]6Z6phEbT0"F?1O>ASH7"ATAo8BOr<(@;TQuDe:+XA8bpg+Du+<+EV:.+DtV)ATJu4Aftf0F!+t2DKKo5@Wcd2EcV[9,suTiH#dV3BQQ9XD..]4@V$[)F(Jl)FDi:5DId[+F(HJ4EZf=ADf''E7AKYr4De+!#FE8R8ATDL.ARloqEc5e(,pbosE-ZJ<B4uBJ+EV:2F!,OBAor6*Eb-A;Bln$,F`\aIE+NNnAnb`tE,oZ2EZfRHBlnH.DBNn0Ec#N3F(oQ1/e''*Q6Z6phEbT0"F?0jW,suTiH#dV3BQQ9X<(KSZ+B)''*<*)@`73G0#+Abs3<_5\J6m+g!+B1m#+@Aq$=].g]85p^&:J=/F;H"](:.,O;,suTiH#dV3BQQ9X6VgHV;Fs2T<)6Cj+<j*M+A#KU+@/aj+@/b*+@TC/;FOM_+AYlX8PN#T8OZ#i=$]_^5u(BN78k`H,pbosE-ZJ<B4uBJ+A#<q9N=JP:.HiX6<-u-:/=h39M%rM<(01t<)5%f<(KG#8PN#T8OZ#i=$]_^5u(BN78k=)7L^Xi6Z6phEbT0"F?1O=78cKD5u(BF6:jjB<*:>0:.-3o8Q8GR;c=f.:Jr<$+Ab@%<(TGW9L2Q!:fUCi:K''\)5uL,\,pbosE-ZJ<B4uBJ+@Je"6VKd;9gqH&+A#<N:/<!$<^fb_+B(fs9M?R.84=Xg:Jb1l8Ol<N+@o:%6q''ur:JqWJ,suTiH#dV3BQQ9X6VgHV;Fs2T<)6Cj+@8L>9M%N:9LU''n:Jr<$:0A]-8Q%uE<%K.`:..ZO771$*+A#<q8OQ!B<''a2/%4*;fDfBuBBkM+$3Zq?t770X49Iq;T=@Gq\9L2QZ/0I_d+@Aq";ajP`78?fR5tiCh5tsX878k<W8PVWH<CBDR7k>cL<E''DR,suTiH#dV3BQQ9X:/=h39M%rM<(01t<)5%f:f:(V<Dl7[78?f):IZI*<C0V`8Q8\h73G)r:IJ,(:Jr<678d/X6Uap8%4*;fDfBuBBkM+$3Zq*l;c=f77Nb]074]QL5u^-$+AYlX:f:(Y8Q8VM+AYlX6<-rU:.8)[+A#=-78d#`:fL"^:+6Vu,suTiH#dV3BQQ9X85E;U<^fn/6U=^N7787a:.-4#:*;ht=Wg[778Hfa+AYHL9M%N:8PD]T=Y([s84?KK78b7":(8Kq6Z6phEbT0"F?1O3:JOke5snU&+B)6;8OHH"9M%N:8PD]T=Y([k;BSq7;H+be8PVWH<CBDR7j(Pq7ncKE78?3=+AYlE,pbosE-ZJ<B4uBJ+AYs-78d2Y;ai,X5uL9Q8PVbu8PUBo:0A]@6!5=+<E():7NbZ$73GT/73GAq+B1m'';[k$!6Z6phEbT0"F?1OC:I\;b5uL-&+@T=":*<+t+@/Cr8Q/&G+AYHL<(KG#:et"g8O?!B8Q8h8:IZI*<C9;"6pXO57n#$>,pbosE-ZJ<B4uBJ+>#/s/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+%4*;hDIc+QD/Ej%FE7m#01/<!8T&6a+>6Q3Ddu^WF<G10DIdd!F)Q2A@q?clAS5^p%1P$I+Co1rF<G%(B5)5m%:Wm]Bl7Et@;lYb01/<!;gEG+ASk"VAoAeJ+Co1rF<G+:E$/V$B5)5m+<W=8AS5^uFE2XL-p_B^@V$u2A7]?^+<W=5Eb&a%Bl7Q+-p_B^@V&n>;I<Ek;_fdEA7]?^+<W=9F`;;9ASl!rF<ERdA7]?^ASu$$A7]?^%51(C@;ntMD.OhC6"FnCAM$PQ/QG/:1*C+=AdpC\9jr!AATDj+Df-[P/het6+Co%q%51(C@;o1kE+L.I+Co%q%1Osl9lFQR+>=pKAS)A\0d''q:B5)6nDe*F#E+*6fEa`iuAITb)4>8HC0KpUA7Rfj:4q2(@A7KOgATMg!@qB[hDJ*Mi%5BOj+C\npBl7Bl@q]:k%6Q<u0JG[54D&2;A3LGb0JGCA4s2sA0OZt*%6Q<u2DmZ@4>8HtANgPc0JGCn4s2sA0P!++%6Q<u2I\im4>8I$2a.[50JGIC4s2sC0Jd0%%6Q<u3&NlB4>JU!3Bdm70JGIE4s2sC0O\HT%6Q<u3&a#D4>JWF1Hl710JGIG4s2sC0ebUO%6Q<u3&s/F4>JWH1-Q.00JGLD4s2sC1,1OJ%6Q<u3AiuC4>JZM0Koq.0JGLH4s2sC2.84''%6Q<u3B98G4>Jd(@Qk5`0JGLq4s2sC2.\[0%6Q<u3FY/p4>JiP@m1>a0JI$L4s2sr@k]`''%6Q<uAhlOm4CM_T0Koq.0JI*K4s2sr@l%UY%6Q<uAn4(J4CM_V0Koq.0JI*M4s2sr@l.XY%6Q<uAnF4L4CM_VA3LGb0JP784s2sr@l6),%6Q=!0JPa64CM_W3''Id60JP7:4s2sr@l7a[%6Q=!0Jbm84CM_X2*MI30JP7>4s2sr@lH5.%6Q=!0KD<>4CM_Y@6P,_0JP:?4s2sr@lZ5,%6Q=!0fM9=4CM_[1d2@20JP=:4s2sr@prk2%6Q=!1-%N@4CM`/Aj-Yd0JP=k4s2sr@q.5W%6Q=!11EEi4CM`01d2@20JP=m4s2sr@q.J^%6Q=!11WQk4CM`0@m1>a0JP=o4s2sr@q7G\%6Q=!1G_3;4CM`21d2@20JP@A4s2sr@qB(4%6Q=!1H.K?4CM`2@m1>a0JP@m4s2sr@qIM\%6Q=!1M&`m4CM`33Bdm70JPC=4s2srA2#]$%6Q=!1bq6;4CMbS1d2@20JPC?4s2srA2#o*%6Q=!1grQj4CMbT3''Id60JPCn4s2srA2.RX%6Q=!1h/]l4CMbU0Koq.0JPCp4s2srA25o(%6Q=!1hAin4CMbU3Bdm70JPF@4s2srA2?2/%6Q=!2)IK>4CMbV@m1>a0JPFD4s2srA2H5/%6Q=!2)mcB4CMbW3Bdm70JPFF4s2srA2Q&)%6Q=!2.8Zk4CMbX1d2@20JPFo4s2srA2Q>1%6Q=!2.\ro4CMbY1Hl710JPFs4s2srA2Z;/%6Q=!2DRH=4CMbZ0Koq.0JPIo4s2srA2e*a%6Q=!2_[E<4CMb[@m1>a0JPL@4s2srA2u>-%6Q=!2`*]@4CMc/1d2@20JPLH4s2srA7IG[%6Q=!2dnlm4CMc13''Id60JPLs4s2srA7RJ[%6Q=!2e>/q4CMc22*MI30JPLu4s2srA7T16%6Q=!3&!N=4CMc30Koq.0JPOA4s2srA7[S]%6Q=!3&WrC4CMc4@m1>a0JPOu4s2srAM@RW%6Q=!3+b>s4CMeTA3LGb0JPRA4s2srAM@^[%6Q=!3AE]?4CMeU0g6%/0JPRE4s2srAMH/.%6Q=!3AiuC4CMeV3Bdm70JPRI4s2srAMZ/,%6Q=!3FY/p4CMeW@6P,_0JQuk4s2srAMdgZ%6Q=!@5^:l4CMeY0Koq.0JQup4s2srAMl;.%6Q=!@5pFn4CMeY2EhR40JR!I4s2srAMuD0%6Q=!@PL%h4CMeZ@m1>a0JR$J4s2srARR8V%6Q=!@V.eH4CMf01d2@20JR&n4s2srARdDX%6Q=!@l-@l4CMf21d2@20JR''G4s2srARmS\%6Q=!@q%VE4CMf32*MI30JR''K4s2srARo:7%6Q=!@qInI4CMf43''Id60JR)l4s2srAS#=7%6Q=!A2-7j4CMf4A3LGb0JR)n4s2srAS*b_%6Q=!A2?Cl4CMf53''Id60JR)p4s2srAS,F9%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8L#3''JHI@:h3(4q0V.0k<:.+?X(E0ebd#4>8L#@m2"t@:h;L4q0V.0kE+(+?X(E1M/f[4>8L$2Ei6G@:h>R4q0V.0kE@/+?X(E1h/]Y4>8L$@6Per@:hAN4q0V.0kFr\+?X(E2E3l04>8L%1-QgC@:hJQ4q0V.0kN4*+?X(E3&Ef.4>8L%1d3$E@:hJY4q0V.0kN@.+?X(E3Aiu04>8L%3''JHI@:hN04q0V.0kOlY+?X(E@UhS24>8L%@m2"t@:j"''4q0V.1,(CG+?X(E@q%V24>8NE1d3$E@:j%,4q0V.1,(RL+?X(EA2la^4>8NE2Ei6G@:j%[4q0V.1,*0$+?X(EAi)[\4>8NE@m2"t@:j+24q0V.1,*<(+?X*e0Jks&4>8NF0KpUA@PBKG4q0V.1,1LI+?X*e0ebd#4>8NF1-QgC@PBMn4q0V.1,1XM+?X*e1,qH,4>8NF2Ei6G@PBSl4q0V.1,1^O+?X*e1LiTX4>8NF@6Per@PBVu4q0V.1,36%+?X*e1grQW4>8NF@m2"t@PBWK4q0V.1,3<''+?X*e1hAi[4>8NG0g6^B@PBYu4q0V.1,:UK+?X*e2*!i04>8NG1HlpD@PBZM4q0V.1,:[M+?X*e2D@<(4>8NG2*N-F@PB\s4q0V.1,:gQ+?X*e3&!N*4>8NG3BeQJ@PBbu4q0V.1,C[L+?X*e3Fb5^4>8NHANh5!@PD7G4q0V.1,LaM+?X*e@Q6O\4>8NI@m2"t@PD=L4q0V.1,UdM+?X*eAMZLZ4>8NJ1-QgC@PD@N4q0V.1,UjO+?X*eARdn54>8NK2Ei6G@PKVt4q0V.1,`]-+?X*f1M&`Z4>8NL0g6^B@PK\r4q0V.1,h0V+?X*f2)mc/4>8NL3BeQJ@PK`M4q0V.1,iW*+?X*f2D@<(4>8NL@Qkns@PKer4q0V.1,ic.+?X*f2e,#\4>8NM1d3$E@PKiO4q0V.1,q-T+?X*f3+P2^4>8NM@6Per@PKl&4q0V.1,r`,+?X*f3Fb5^4>8NM@m2"t@PM:K4q0V.1,rf.+?X*f@5pF[4>8NMANh5!@PM=G4q0V.1,rl0+?X*f@l-@Y4>8NN1-QgC@PMCI4q0V.1-%-S+?X*fA2HIZ4>8NN2Ei6G@PMD*4q0V.1-%9W+?X*fAMH@X4>8NN@6Per@PMG(4q0V.1-&f-+?X*fAhZCX4>8NNANh5!@PMJ(4q0V.1-&r1+?X*fAn4(74>8O!1-QgC@PTVs4q0V.11<.++?X*g0fM9*4>8O!3BeQJ@PTYu4q0V.11=TT+?X*g0k<HW4>8O!@Qkns@PT\m4q0V.11=ZV+?X*g1Gh9)4>8O!A3M+u@PT`L4q0V.11=`X+?X*g2)mc/4>8O!Aj.>"@PTfN4q0V.11Dq$+?X*g2D@<(4>8O"3BeQJ@PTo''4q0V.11F`W+?X*g3A`o/4>8O#1HlpD@PV@J4q0V.11O`V+?X*g@PBtT4>8O#@Qkns@PVCL4q0V.11OfX+?X*g@UhS24>8O#A3M+u@PVD)4q0V.11OlZ+?X*g@kg.V4>8O$0g6^B@PVG''4q0V.11W4*+?X*gA26=X4>8O$2a/?H@PVJ''4q0V.11XfW+?X*gAM?:W4>8O$@Qkns@PVLM4q0V.11Xu\+?X*gAN2j_4>8O%A3M+u@PVP+4q0V.11i7)+?X*h0Jks&4>8O&1-QgC@P]\t4q0V.11iO1+?X*h0k3BV4>8O&@6Per@P]bn4q0V.11juZ+?X*h1GM''&ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0J[6P4s2ss1Gq-U%6Q=#0K)*;4CU*)2a.[50JbCA4s2ss1H%6W%6Q=#0K;6=4CU*)@Qk5`0JbCn4s2ss1H.-S%6Q=#0P*Ej4CU**3''Id60JbF?4s2ss1H8l.%6Q=#0f;-;4CU*,0Koq.0JbFA4s2ss1H@9U%6Q=#0f_E?4CU*T3''Id60JbFl4s2ss1LXcW%6Q=#0k<Hj4CU*V3''Id60JbI<4s2ss1Lju[%6Q=#1,1s84CU*W0Koq.0JbI@4s2ss1LrF.%6Q=#1,V6<4CU*W3Bdm70JbIB4s2ss1LsrY%6Q=#1,hB>4CU*WA3LGb0JbID4s2ss1M&7(%6Q=#1-%N@4CU*X1d2@20JbIm4s2ss1M&O0%6Q=#11EEi4CU*Y@m1>a0JbIq4s2ss1bgsR%6Q=#11i]m4CU-%@m1>a0JbL=4s2ss1bpaK%6Q=#1H%E>4CU-''1d2@20JbLF4s2ss1c7*R%6Q=#1LiTk4CU-)@6P,_0JbLs4s2ss1c@-R%6Q=#1b_*94CU-*2*MI30JbO?4s2ss1cAi-%6Q=#1bq6;4CU-,0Koq.0JbOA4s2ss1cRHY%6Q=#1c.B=4CU--3Bdm70JbOC4s2ss1c])1%6Q=#1c@N?4CU-U1d2@20JbOE4s2ss1gr@-%6Q=#1cRZA4CU-U@m1>a0JbOG4s2ss1h&=+%6Q=#1h8cm4CU-W0Koq.0JbOs4s2ss1h/@+%6Q=#1hJoo4CU-W3''Id60JbR?4s2ss1h8:(%6Q=#2).9;4CU-X2*MI30JbRC4s2ss1hA@)%6Q=#2.Jfm4CU-YAj-Yd0JbRs4s2ss1hJI+%6Q=#2.\ro4CU-Z3''Id60JbRu4s2ss1hL5]%6Q=#2D@<;4CU0%0Koq.0JbUC4s2ss2).''S%6Q=#2Inuo4CU0''ANgPc0JbXB4s2ss2)@''Q%6Q=#2e,#o4CU0*0Koq.0JbXu4s2ss2)R3S%6Q=#3&<`@4CU0-1d2@20Jb[F4s2ss2)mQZ%6Q=#3&NlB4CU0.1d2@20Jb[H4s2ss2*!Z\%6Q=#3&s/F4CU0V1d2@20Jb[s4s2ss2.8I.%6Q=#3AiuC4CU0X0Koq.0Jb^I4s2ss2.JI,%6Q=#3Fb5q4CU0Y3''Id60Jb_"4s2ss2.^8]%6Q=#@5''kf4CU3''1d2@20Jd,l4s2ss2DI0T%6Q=#@5L.j4CU3(1Hl710Jd,p4s2ss2DR-R%6Q=#@5pFn4CU3)0Koq.0Jd,t4s2ss2D[0R%6Q=#@:MJD4CU3+@m1>a0Jd-J4s2ss2E!BU%6Q=#@:_VF4CU3,3''Id60Jd/m4s2ss2IS:''%6Q=#@PU+i4CU3W1d2@20Jd/o4s2ss2ISO.%6Q=#@Q$Cm4CU3WAj-Yd0Jd/s4s2ss2I\C)%6Q=#@Q6Oo4CU3X3''Id60Jd/u4s2ss2InX.%6Q=#@UVGC4CU3\0Koq.0Jd0I4s2ss2J+d0%6Q=#@UhSE4CU3\3''Id60Jd2n4s2ss2_\`*%6Q=#@l-@l4CU6)@m1>a0Jd2t4s2ss2`!6R%6Q=#@pqPD4CU6*@Qk5`0Jd3N4s2ss2`*KX%6Q=#A2$1i4CU6+@m1>a0Jd5s4s2ss2`<KV%6Q=#A2ZUo4CU6-3''Id60Jd6"4s2ss2`ENV%6Q=#A77YE4CU6.2*MI30Jd6M4s2ss2`NKT%6Q=#ARRbF4CU60@m1>a0Jd;r4s2ss2e"I)%6Q=#AhuUn4CU6Y1-Q.00Jd<!4s2ss2e"a1%6Q=#AiDmr4CU6Z2*MI\DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b1M/U1+?X*l@lHR\4>8R''3BeQJ@Q.dW4q0V.1M1&Z+?X*lA2$1V4>8R''@Qkns@Q.gS4q0V.1M12^+?X*lAhZCX4>8R''Aj.>"@Q.mS4q0V.1b`?%+?X*m0Om9U4>8TG@Qkns@Q6(r4q0V.1bgdM+?X*m1,qH,4>8TH@Qkns@Q61u4q0V.1biK(+?X*m1c.B*4>8THA3M+u@Q65"4q0V.1biQ*+?X*m2)@E*4>8TI0g6^B@Q68"4q0V.1bpsQ+?X*m2J,,^4>8TI2a/?H@Q6;$4q0V.1brK''+?X*m2e,#\4>8TI@Qkns@Q6>X4q0V.1brQ)+?X*m3A`o/4>8TIA3M+u@Q7dU4q0V.1brW++?X*m@PBtT4>8TIAj.>"@Q7gR4q0V.1c$gL+?X*m@Q6O\4>8TJ1HlpD@Q7jR4q0V.1c$sP+?X*m@l6FZ4>8TJ2*N-F@Q7k-4q0V.1c%$R+?X*mA2$1V4>8TJ2a/?H@Q7mT4q0V.1c%*T+?X*mA7Rk54>8TJ3BeQJ@Q7n14q0V.1c&Q(+?X*mAMH@X4>8TJA3M+u@Q7q/4q0V.1c&],+?X*mAhZCX4>8TK0g6^B@Q7t/4q0V.1c-sO+?X*mAn4(74>8TK1HlpD@Q?,!4q0V.1c.$Q+?X*n0K;6*4>8TK2*N-F@Q?/&4q0V.1c.*S+?X*n1,(m$4>8TK2a/?H@Q?2#4q0V.1c/W)+?X*n1b_*&4>8TK@Qkns@Q?8%4q0V.1c/]++?X*n1h/]Y4>8TKA3M+u@Q?8W4q0V.1c/c-+?X*n2).9(4>8TL0g6^B@Q?;U4q0V.1c7$P+?X*n2D@<(4>8TL2*N-F@Q?>U4q0V.1c70T+?X*n2Inu\4>8TL3BeQJ@Q?A,4q0V.1c8]*+?X*n2e,#\4>8TLA3M+u@Q?D,4q0V.1c@0S+?X*n3A`o/4>8TM2a/?H@Q@mO4q0V.1c@<W+?X*n@Pg7X4>8TMANh5!@Q@pV4q0V.1cI-Q+?X*n@q.\34>8TN2a/?H@Q@sU4q0V.1cR<U+?X*nAN2j_4>8TOANh5!@QA%24q0V.1c[9S+?X+A0Jks&4>8TP1-QgC@UUrM4q0V.1c[?U+?X+A0ebd#4>8TP1d3$E@UUuK4q0V.1c[KY+?X+A1LiTX4>8TP3''JHI@UV)I4q0V.1c[Q[+?X+A1bq6(4>8U#1HlpD@UV,R4q0V.1gsiW+?X+A2I\iZ4>8U#ANh5!@UV2P4q0V.1h&:*+?X+A3&a#14>8U$2*N-F@UV6+4q0V.1h&@,+?X+A3A<W+4>8U%0g6^B@UW_T4q0V.1h/:)+?X+A@UqY34>8U%1HlpD@UWb''4q0V.1h/@++?X+A@lQX]4>8U%2a/?H@UWh%4q0V.1h/L/+?X+AAi)[\4>8U%3BeQJ@UWkY4q0V.1h0rX+?X+B0JG["4>8U%@Qkns@U_#J4q0V.1h1)\+?X+B0P3KX4>8U%Aj.>"@U_&H4q0V.1h8:(+?X+B0fV?+4>8U&0g6^B@U_''%4q0V.1h8@*+?X+B1,(m$4>8U&1HlpD@U_)Q4q0V.1h8F,+?X+B11EEV4>8U&3''JHI@U_,Q4q0V.1h:2^+?X+B1cIT-4>8U''0KpUA@U_/S4q0V.1hAC*+?X+B1h8cZ4>8U''1d3$E@U_2O4q0V.1hAO.+?X+B2)mc/4>8U''2Ei6G@U_5M4q0V.1hC)Z+?X+B2Ieo[4>8U''@Qkns@U_;V4q0V.1hC/\+?X+B3+4u[4>8U''A3M+u@U_<,4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=$AS"%J4CVb[0Koq.0Jm?Q4s2ss@Q?G4%6Q=$AhZCk4CVb[@Qk5`0JmAr4s2ss@UV)W%6Q=$AhlOm4CVc.3''Id60JmAt4s2ss@UWb1%6Q=$Ai)[o4CVc/1d2@20JmB!4s2ss@U_8[%6Q=$Ai;gq4CVc/3Bdm70JmB%4s2ss@Uh5Y%6Q=$AmmkG4CVc03''Id60JmBP4s2ss@Uq8Y%6Q=$An=.K4CVc12*MI30JmBR4s2ss@Urt4%6Q=%0JG[54CVc20Koq.0JtO=4s2ss@V''(6%6Q=%0JYg74CVc30g6%/0JtOA4s2ss@V0+6%6Q=%0K;6=4CVeS1-Q.00JtOq4s2ss@k_LY%6Q=%0P3Kk4CVeT0g6%/0JtU>4s2ss@kqLW%6Q=%1,1s84CVeUA3LGb0JtUC4s2ss@l#r*%6Q=%11WQk4CVeW3Bdm70JtX?4s2ss@l5r(%6Q=%1G_3;4CVeXAj-Yd0JtXC4s2ss@l?&*%6Q=%1H.K?4CVe[3''Id60JtXp4s2ss@lS$`%6Q=%1bh0:4CVe\A3LGb0Jt[E4s2ss@pq2X%6Q=%1hJoo4CVf10Koq.0Jt^A4s2ss@q.>Z%6Q=%2)[W@4CVf21Hl710Jt^H4s2ss@q7G\%6Q=%2)mcB4CVf23''Id60Jt^J4s2ss@q9(5%6Q=%2.Sln4CVf43''Id60JtaG4s2ssA2#r+%6Q=%2E!`A4CVhT3Bdm70JtaI4s2ssA2,c%%6Q=%2E3lC4CVhU1d2@20Jtau4s2ssA27XY%6Q=%2Inuo4CVhX0Koq.0JtdC4s2ssA2Id[%6Q=%2_dK=4CVhY0Koq.0JtdG4s2ssA2Rj\%6Q=%2`3cA4CVhZ1d2@20JtdI4s2ssA2ZD2%6Q=%2`EoC4CVh[1d2@20Jtdt4s2ssA2lD0%6Q=%3&j)E4CVi00Koq.0JtgM4s2ssA77;Y%6Q=%3+4un4CVi0A3LGb0Jth!4s2ssA7@5V%6Q=%3+G,p4CVi11d2@20Jth#4s2ssA7@M^%6Q=%3+Y8r4CVi20g6%/0JtjF4s2ssA7RY`%6Q=%3ANc@4CVi3@m1>a0JtjH4s2ssA7[V^%6Q=%3A`oB4CVi43Bdm70JtjJ4s2ssA7dMZ%6Q=%3As&D4CVi51d2@20JtjL4s2ssA7deb%6Q=%3FP)o4CVkU1Hl710Jtk"4s2ssAM>u*%6Q=%3FtAs4CVkV0Koq.0K!8p4s2ssAMId\%6Q=%@5L.j4CVkW0g6%/0K!8t4s2ssAMZ#(%6Q=%@5pFn4CVkXA3LGb0K!9J4s2ssAMcA1%6Q=%@:_VF4CVkYANgPc0K!<!4s2ssAMuA/%6Q=%@l?Ln4CVk]0Koq.0K!?!4s2ssAN2M1%6Q=%@qInI4CVk^@m1>a0K!Ap4s2ssARRP^%6Q=%A2?Cl4CVl41d2@20K!B"4s2ssAS!PZ%6Q=%A7@_F4CVl5@m1>a0K!BN4s2ssAS*V[%6Q=%A7RkH4CVnV0g6%/0K!Dq4s2ssAh[^Y%6Q=%AN2jr4CVnZ1d2@20K!E%4s2ssAi)J2%6Q=%ARdnH4CVn[1Hl710K!EP4s2ssAi2G0%6Q=%AS"%J4CVn_1d2@20K!Gs4s2ssAn*\^%6Q=%Ai)[o4CVo50Koq.0K!H&4s2ssAn5L;%6Q=%AmmkG4CVo60g6%/0K!HO4s2st0JY=G%6Q=%An+"I4C^''$@m1>a0K!HQ4s2st0JtRK%6Q=%An=.K4C^''&3''Id60K!HS4s2st0K!?(%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>8ZI0KpUA@k]ep4q0V.2D?pN+?X-f2Inu\4>8ZI2Ei6G@k]o"4q0V.2D@''R+?X-f3B0234>8ZI@6Per@k_=I4q0V.2DAT(+?X-f@5U4X4>8ZJA3M+u@k_D&4q0V.2DR3T+?X-fAN2j_4>8ZK3''JHI@k_J(4q0V.2DS`*+?X-fAiDm_4>8ZK@m2"t@k_LT4q0V.2DSf,+?X-fAn=.84>8ZL0KpUA@kfYo4q0V.2D[''O+?X-g0K;6*4>8ZL1-QgC@kf\l4q0V.2D[-Q+?X-g0f;-(4>8ZM1-QgC@kfbt4q0V.2Dd9T+?X-g1LiTX4>8ZMA3M+u@kfhq4q0V.2Dm0P+?X-g2)mc/4>8ZN0g6^B@kfiN4q0V.2DmKY+?X-g2`*]-4>8ZN@6Per@kfo%4q0V.2Do#/+?X-g3&Nl/4>8ZO0g6^B@kftt4q0V.2E!BU+?X-g3As&14>8ZO2a/?H@kfuU4q0V.2E!NY+?X-g@50qT4>8ZO3BeQJ@khCL4q0V.2E#&/+?X-g@:MJ14>8ZOA3M+u@khFH4q0V.2E#,1+?X-g@UqY34>8ZOAj.>"@khIM4q0V.2E*<R+?X-g@lQX]4>8ZP0g6^B@khJ''4q0V.2E*BT+?X-gA2HIZ4>8ZP2*N-F@khOK4q0V.2E*NX+?X-gAMcR[4>8ZP2a/?H@khOS4q0V.2E,53+?X-h0JG["4>8ZQ0KpUA@ko_p4q0V.2E3KV+?X-h0P3KX4>8ZQ1d3$E@kobn4q0V.2E3QX+?X-h0fD3)4>8ZQ3''JHI@kocK4q0V.2E552+?X-h11EEV4>8ZQANh5!@kofM4q0V.2E5;4+?X-h11i]Z4>8ZR1-QgC@kohs4q0V.2E<QW+?X-h1cRZ.4>8ZR2Ei6G@konu4q0V.2E<][+?X-h2)mc/4>8ZR3''JHI@koqr4q0V.2E<c]+?X-h2DmZ-4>8ZR@m2"t@kots4q0V.2E>;3+?X-h2`*]-4>8[%0KpUA@kouT4q0V.2IS=(+?X-h3&*T+4>8[%1d3$E@kp#R4q0V.2ISI,+?X-h3A<W+4>8[%2Ei6G@kp&(4q0V.2ISO.+?X-h3FY/]4>8[%3''JHI@kp&T4q0V.2IU&Y+?X-h@5pF[4>8[%Aj.>"@kqLK4q0V.2I\F*+?X-h@Q-I[4>8[&1HlpD@kqLR4q0V.2I\X0+?X-hAM?:W4>8[''1-QgC@kqXP4q0V.2IeO,+?X-hAi;g^4>8[(0g6^B@l#i!4q0V.2InR,+?X-i0k3BV4>8[(3BeQJ@l#r!4q0V.2Ip;]+?X-i2Ieo[4>8[(A3M+u@l$%t4q0V.2IpA_+?X-i2_mQ+4>8[)1HlpD@l$)"4q0V.2J"d1+?X-i3&j)24>8[)2a/?H@l$)S4q0V.2J"j3+?X-i3A`o/4>8[)3BeQJ@l%OI4q0V.2J$;\+?X-i@5L.W4>8[)@Qkns@l%RO4q0V.2J$A^+?X-i@UhS24>8[)A3M+u@l%UK4q0V.2J+[-+?X-iA7Ie44>8[*1d3$E@l%[O4q0V.2J+m3+?X-iARmt64>8[*@6Per@l%^V4q0V.2J-D^+?X-iAn+"64>8[*@m2"t@l,l!4q0V.2J-J`+?X-j0Od3T4>8[*ANh5!@l,no4q0V.2J-Pb+?X-j1,M0(4>8]J0KpUA@l,rN4q0V.2_ZsM+?X-j1GD!%4>8]J1-QgC@l,tu4q0V.2_[*Q+?X-j1b_*&4>8]J2Ei6G@l-#%4q0V.2_[0S+?X-j2.Sl[ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0K1[o4s2st1c@<W%6Q=''0Od3g4C^3+@m1>a0K1[s4s2st1cIEY%6Q=''0P3Kk4C^3-0Koq.0K1^?4s2st1c[6R%6Q=''0ekj74C^3.1d2@20K1^A4s2st1c]&0%6Q=''0f)!94C^3V0Koq.0K1^C4s2st1gslX%6Q=''0f;-;4C^3W3''Id60K1^E4s2st1h''rY%6Q=''0fM9=4C^3Y1d2@20K1^G4s2st1hA[2%6Q=''0k*<h4C^3[1d2@20K1^r4s2st1hJ^2%6Q=''0k<Hj4C^3[@6P,_0K1aA4s2st2)$gM%6Q=''1,;$94C^6&@m1>a0K1aC4s2st2)-dK%6Q=''1,M0;4C^6''1d2@20K1aE4s2st2)/T)%6Q=''11<?h4C^6)0Koq.0K1dA4s2st2)Ai.%6Q=''1c@N?4C^6,1d2@20K1gI4s2st2)[EX%6Q=''1hJoo4C^6.0Koq.0K1jC4s2st2)mEV%6Q=''2).9;4C^6.2a.[50K1jJ4s2st2*!NX%6Q=''2.8Zk4C^6/@m1>a0K1ju4s2st2.81&%6Q=''2.Jfm4C^6W3Bdm70K1n%4s2st2.L,[%6Q=''2`*]@4C^6Z1d2@20K1pJ4s2st2.S[1%6Q=''2e>/q4C^6\0Koq.0K1q&4s2st2.e[/%6Q=''3+G,p4C^9''@m1>a0K2!N4s2st2DR6U%6Q=''@50qg4C^9*2a.[50K3Dq4s2st2D[?W%6Q=''@5C(i4C^9*@Qk5`0K3Du4s2st2Dd6S%6Q=''@5g@m4C^9+3''Id60K3E"4s2st2Deu/%6Q=''@:_VF4C^9,3''Id60K3Gq4s2st2E!6Q%6Q=''@Q?Up4C^9.@m1>a0K3HL4s2st2E3BS%6Q=''@kp4j4C^903''Id60K3Jt4s2st2E>82%6Q=''@l?Ln4C^9X2a.[50K3K#4s2st2ISU0%6Q=''@pqPD4C^9Y1d2@20K3Mu4s2st2IeU.%6Q=''A2HIm4C^9Z2a.[50K3N$4s2st2InL*%6Q=''A2laq4C^9[1d2@20K3Ps4s2st2J$A^%6Q=''AMH@k4C^9]0Koq.0K3Q"4s2st2J-D^%6Q=''AMlXo4C^9]A3LGb0K3Q&4s2st2_[3T%6Q=''AN;ps4C^<(@m1>a0K3Su4s2st2_m3R%6Q=''AhlOm4C^<*3''Id60K3T$4s2st2`!6R%6Q=''Ai;gq4C^<+2*MI30K3T&4s2st2`!BV%6Q=''An!qH4C^<,0Koq.0K3TT4s2st2`*HW%6Q=''AnF4L4C^<,@6P,_0K:ar4s2st2`5)/%6Q=(0P!?i4C^<.0Koq.0K:dE4s2st2`E][%6Q=(1,_<=4C^<11d2@20K:gr4s2st2`Y;1%6Q=(1G_3;4C^<Z0Koq.0K:jF4s2st2e"U-%6Q=(1LiTk4C^<[@m1>a0K:k!4s2st2e-D_%6Q=(1M&`m4C^<\0Koq.0K:k#4s2st2e4m3%6Q=(1b_*94C^<\A3LGb0K:mD4s2st2e=g0%6Q=(1bq6;4C^<]3''Id60K:mF4s2st2e?J_%6Q=(1c.B=4C^<^2*MI30K:mK4s2st3&!0Q%6Q=(2)[W@4C^?+0Koq.0K:pK4s2st3&3<S%6Q=(2.8Zk4C^?+Aj-Yd0K:q!4s2st3&<9Q%6Q=(2.\ro4C^?,@m1>a0K:q%4s2st3&E<Q%6Q=(2D@<;4C^?-1-Q.00K:sK4s2st3&NNV%6Q=(2E<rD4C^?01d2@20K:t!4s2st3&`f\%6Q=(2I\im4C^?0@6P-3DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b3&Y>3+?X-n3&<`-4>8`R2*N-F@lQJ&4q0V.3&``Z+?X-n3A`o/4>8`R2a/?H@lQJZ4q0V.3&`f\+?X-n3G(Ga4>8`R3BeQJ@lRmO4q0V.3&b80+?X-n@5^:Y4>8`R@Qkns@lRmV4q0V.3&b>2+?X-n@:MJ14>8`S0g6^B@lRsX4q0V.3&iZW+?X-n@q.\34>8`S2*N-F@lS!X4q0V.3&if[+?X-nA2ug_4>8`S3BeQJ@lS$V4q0V.3&k>1+?X-nAi2a]4>8`SA3M+u@lZ4s4q0V.3&rcY+?X-o0P3KX4>8`T1d3$E@lZ7u4q0V.3&ri[+?X-o0fV?+4>8`T2Ei6G@lZ;S4q0V.3&ro]+?X-o1Gh9)4>8`T@6Per@lZD''4q0V.3&tG3+?X-o2)mc/4>8`TANh5!@lZG''4q0V.3+4O*+?X-o2_[E)4>8a''1-QgC@lZJ)4q0V.3+4U,+?X-o2e,#\4>8a''1d3$E@lZM''4q0V.3+4a0+?X-o3+G,]4>8a''3''JHI@lZP''4q0V.3+4g2+?X-o3ANc-4>8a''@m2"t@lZPY4q0V.3+6>]+?X-o3Fk;_4>8a''ANh5!@l[sS4q0V.3+=U++?X-o@l-@Y4>8a(1d3$E@l\%-4q0V.3+FX++?X-oAM?:W4>8a)1d3$E@l\*Z4q0V.3+HJ_+?X-oAn+"64>8a)ANh5!@pq&F4q0V.3+Oj0+?X.B0f2''''4>8a*2*N-F@pq)O4q0V.3+Op2+?X.B1,M0(4>8a*2a/?H@pq,Q4q0V.3+P!4+?X.B1GD!%4>8a*@Qkns@pq5K4q0V.3+QM_+?X.B2)IK+4>8a+1-QgC@pq8T4q0V.3+Xm0+?X.B2_[E)4>8a+1d3$E@pq<,4q0V.3+Xs2+?X.B3&Ef.4>8a+2Ei6G@pqAW4q0V.3+Y*6+?X.B@k^(U4>8a+ANh5!@prkZ4q0V.3+b!2+?X.BA7Ie44>8a,2*N-F@prq&4q0V.3+b''4+?X.BARdn54>8a,2a/?H@prt+4q0V.3+b-6+?X.C0K;6*4>8a,3BeQJ@q%/H4q0V.3+cS_+?X.C0f2''''4>8a,@Qkns@q%/P4q0V.3+c_c+?X.C1,hB+4>8a,Aj.>"@q%3''4q0V.3A<-N+?X.C11WQX4>8cL0g6^B@q%5L4q0V.3A<3P+?X.C1bh0''4>8cL2*N-F@q%9)4q0V.3A<?T+?X.C2)%3''4>8cL3BeQJ@q%<)4q0V.3A=l*+?X.C2.Sl[4>8cL@Qkns@q%>Q4q0V.3A>#.+?X.C3&!N*4>8cLAj.>"@q%GS4q0V.3AE3O+?X.C3Fb5^4>8cM0g6^B@q&n,4q0V.3AE9Q+?X.C@q7b44>8cM2*N-F@q''"+4q0V.3AEEU+?X.CAN)d^4>8cM2a/?H@q''"04q0V.3AFr++?X.D0ebd#4>8cMAj.>"@q.6*4q0V.3ANKV+?X.D11NKW4>8cN2a/?H@q.9*4q0V.3ANQX+?X.D1GD!%4>8cO1-QgC@q.>T4q0V.3AWHT+?X.D1h/]Y4>8cO3BeQJ@q.DN4q0V.3AY)-+?X.D2DdT,4>8cO@Qkns@q.DT4q0V.3AY//+?X.D2E3l04>8cOA3M+u@q.GO4q0V.3AY51+?X.D2`3c.4>8cP0g6^B@q.N/4q0V.3A`KT+?X.D@5''kS4>8cP@6Per@q/t-4q0V.3Ab2/+?X.D@UhS24>8cPANh5!@q0"-4q0V.3AiNT+?X.DA2$1V4>8cQ1-QgC@q0%+4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=)2)@E=4C_l40g6%/0KD!K4s2st@qB.6%6Q=)2)d]A4C_l50Koq.0KD!M4s2stA2#`%%6Q=)2.A`l4C_nU@m1>a0KD"#4s2stA2,c%%6Q=)2.f#p4C_nV@Qk5`0KD$F4s2stA2.UY%6Q=)2DdT?4C_nW3''Id60KD$K4s2stA27XY%6Q=)2E!`A4C_nX2*MI30KD$M4s2stA2?50%6Q=)2E3lC4C_nY0Koq.0KD$O4s2stA2Rj\%6Q=)2IScl4C_n[0Koq.0KD%#4s2stA2Z8.%6Q=)2J#&p4C_n[Aj-Yd0KD%''4s2stA2c5,%6Q=)2_[E<4C_n\3''Id60KD''H4s2stA2lP4%6Q=)2`*]@4C_n^3''Id60KD''L4s2stA3"-`%6Q=)2`NuD4C_o12a.[50KD''P4s2stA77J^%6Q=)2dnlm4C_o20Koq.0KD($4s2stA7IG[%6Q=)2e>/q4C_o40Koq.0KD((4s2stA7RM\%6Q=)3&!N=4C_o53''Id60KD*I4s2stA7]77%6Q=)3&3Z?4C_o60Koq.0KD*M4s2stA7f:7%6Q=)3&WrC4C_o6A3LGb0KD*Q4s2stAM?)-%6Q=)3+4un4C_qV@m1>a0KD+%4s2stAMH#*%6Q=)3+G,p4C_qW3Bdm70KD+)4s2stAMQ)+%6Q=)3A`oB4C_qY1Hl710KD-N4s2stAMZ2-%6Q=)3As&D4C_qY@m1>a0KD-R4s2stAMms]%6Q=)@5L.j4C_q]0Koq.0KEQ#4s2stAN)S4%6Q=)@:MJD4C_q^2a.[50KEQP4s2stAN2\6%6Q=)@PBtg4C_q_1d2@20KESs4s2stAN;_6%6Q=)@Q-In4C_r23''Id60KETN4s2stAR[>W%6Q=)@U_MD4C_r40g6%/0KETP4s2stARdP\%6Q=)@V.eH4C_r63''Id60KEW%4s2stAS,I:%6Q=)@pqPD4C_tW1d2@20KEWP4s2stAhZ2.%6Q=)A2?Cl4C_tX@m1>a0KEZ#4s2stAhl&(%6Q=)A2QOn4C_tY1d2@20KEZQ4s2stAhuD1%6Q=)A7[qI4C_t\3''Id60KE]#4s2stAi;S3%6Q=)AMcRn4C_t]3Bdm70KE]''4s2stAiDP1%6Q=)AN2jr4C_t^3''Id60KE])4s2stAiMJ.%6Q=)ARRbF4C_t_1Hl710KE]R4s2stAiMY3%6Q=)ARdnH4C_t_@m1>a0KE]T4s2stAmmDX%6Q=)AS"%J4C_u33''Id60KE]V4s2stAn!GX%6Q=)AhZCk4C_u51d2@20KE`"4s2stAn*ea%6Q=)Ai)[o4C_u71d2@20KE`&4s2stAn<qc%6Q=)AiMss4C_u81Hl710KE`*4s2stAnEna%6Q=)An+"I4Cg-"0Koq.0KE`U4s2su0JG=I%6Q=)An=.K4Cg-"@m1>a0KE`W4s2su0JP:G%6Q=Q0JG[54Cg-#3''Id60OZXi4s2su0JR''$%6Q=Q0JYg74Cg-$0Koq.0OZXk4s2su0J[0&%6Q=Q0K)*;4Cg-%3''Id60OZXo4s2su0Jd3&%6Q=Q0O[-f4Cg-&2a.[50OZYE4s2su0JkdR%6Q=Q0Om9h4Cg-''0Koq.0OZYG4s2su0Jt[N%6Q=Q0P*Ej4Cg-''3''Id60OZYI4s2su0K(UK%6Q=Q0etp84Cg-)0Koq.0OZ[l4s2su0K1aN%6Q=Q0f2'':4Cg-)1d2@20OZ[p4s2su0K:dN%6Q=Q0fV?>4Cg-*1d2@20OZ[r4s2su0K;$U%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:1u@m2"tA2%FO4q0V.@52:V+?X0g@:MJ14>:2!2*N-FA2%LM4q0V.@5BT$+?X0gAM?:W4>:2"0g6^BA2%RO4q0V.@5Bi++?X0gAiMs`4>:2"3''JHIA2,cK4q0V.@5Bo-+?X0h0f2''''4>:2"@m2"tA2,ks4q0V.@5DFX+?X0h1H7Q-4>:2#2a/?HA2,qq4q0V.@5Kr-+?X0h2)IK+4>:2#@QknsA2,rR4q0V.@5MIX+?X0h2DIB)4>:2#A3M+uA2,u#4q0V.@5MOZ+?X0h2E3l04>:2#Aj.>"A2,uP4q0V.@5T`&+?X0h2_[E)4>:2$1HlpDA2-&#4q0V.@5Tl*+?X0h3&j)24>:2$2a/?HA2.LL4q0V.@5VOY+?X0h@P^1W4>:2$A3M+uA2.ON4q0V.@5VU[+?X0h@UVG04>:2$Aj.>"A2.P''4q0V.@5]f''+?X0h@k^(U4>:2%0g6^BA2.US4q0V.@5]l)+?X0hAi)[\4>:2%1HlpDA2.[U4q0V.@5]r++?X0hAn!q54>:2%2*N-FA25ht4q0V.@5^#-+?X0i0KD<+4>:2%2a/?HA25kn4q0V.@5^)/+?X0i1,V6)4>:2%@QknsA25qp4q0V.@5_UZ+?X0i1Gh9)4>:2%A3M+uA25r!4q0V.@5fl(+?X0i1M/f[4>:2&0g6^BA25tr4q0V.@5fr*+?X0i1cRZ.4>:2&1HlpDA26#P4q0V.@5g#,+?X0i2DdT,4>:2&2*N-FA26)&4q0V.@5g/0+?X0i3&Ef.4>:2&3BeQJA26,(4q0V.@5h[[+?X0i3Aiu04>:2&A3M+uA26/T4q0V.@5ha]+?X0i@5''kS4>:2&Aj.>"A27RM4q0V.@5or)+?X0i@:MJ14>:2''0g6^BA27UK4q0V.@5p)-+?X0i@UhS24>:2''2a/?HA27XM4q0V.@5q[Z+?X0i@q%V24>:2''@QknsA27Y*4q0V.@5qa\+?X0iA2-7W4>:2''A3M+uA27[P4q0V.@5qg^+?X0iA2la^4>:2''Aj.>"A27\*4q0V.@6$/.+?X0iAi)[\4>:2(2*N-FA27aV4q0V.@6$;2+?X0j0Jbm%4>:2(3BeQJA2>ns4q0V.@::lS+?X0j0fD3)4>:2P@QknsA2>uN4q0V.@:D)X+?X0j2.Sl[4>:2Q3''JHIA2?2!4q0V.@:D5\+?X0j3&Ef.4>:2QAj.>"A2?5(4q0V.@:M&V+?X0j3Fb5^4>:2R1HlpDA2@XJ4q0V.@:M2Z+?X0j@:DD04>:2R2a/?HA2@Y)4q0V.@:N_0+?X0j@Q6O\4>:2R@QknsA2@\)4q0V.@:V&U+?X0jA2$1V4>:2S0g6^BA2@aQ4q0V.@:V,W+?X0jA2la^4>:2S1HlpDA2@dO4q0V.@:V2Y+?X0jAMZLZ4>:2S2a/?HA2@gO4q0V.@:V>]+?X0jAi)[\4>:2S@QknsA2@h04q0V.@:Wk3+?X0k0JPa#4>:2SA3M+uA2Gtt4q0V.@:_,V+?X0k0k<HW4>:2T0g6^BA2H+s4q0V.@:_2X+?X0k1c.B*4>:2T1HlpDA2H/R4q0V.@:_8Z+?X0k2D@<(4>:2T2*N-FA2H2$4q0V.@:_>\+?X0k2Inu\4>:2T2a/?HA2H2V4q0V.@:`k2+?X0k2e,#\4>:2TA3M+uA2H8$4q0V.@:h2W+?X0k3+>&\4>:2U0g6^BA2H8V4q0V.@:h8Y+?X0k3A`o/4>:2U1HlpDA2I^T4q0V.@:h>[+?X0k@q.\3ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0O\QN4s2su1h8:(%6Q=QAi;gq4Cg9Z1d2@20O\QP4s2su1h:)[%6Q=QAiMss4Cg9ZAj-Yd0O\QR4s2su1hAX1%6Q=QAmmkG4Cg9[@m1>a0O\R&4s2su1hJF*%6Q=QAn+"I4Cg9\3''Id60O\R(4s2su1hL2\%6Q=QAn=.K4Cg9\A3LGb0O\R*4s2su2)$jN%6Q=R0JG[54Cg<''3''Id60Oc^j4s2su2)&N(%6Q=R0Jks94Cg<(2a.[50Oc^n4s2su2).*T%6Q=R0K)*;4Cg<)0Koq.0Oc^p4s2su2)@*R%6Q=R0O[-f4Cg<+0Koq.0Oc_F4s2su2)I-R%6Q=R0f)!94Cg<,@m1>a0Ocan4s2su2)[-P%6Q=R0f_E?4Cg<-@Qk5`0OcbF4s2su2)\u/%6Q=R0k*<h4Cg<.0Koq.0OcbK4s2su2)dKY%6Q=R1,hB>4Cg</@Qk5`0OceG4s2su2*!KW%6Q=R11EEi4Cg<X1Hl710OceI4s2su2.8@+%6Q=R11WQk4Cg<X@m1>a0OceK4s2su2.J=(%6Q=R1GM''94Cg<Z@m1>a0Ocgn4s2su2.SC)%6Q=R1G_3;4Cg<[1-Q.00Ocgs4s2su2.U/[%6Q=R1H7Q@4Cg<[A3LGb0OchL4s2su2.\a2%6Q=R1M/fn4Cg<\@m1>a0Ocju4s2su2D?sO%6Q=R1c[`B4Cg?(3''Id60OckN4s2su2DJ]*%6Q=R2)%3:4Cg?*0Koq.0Ocmo4s2su2DR*Q%6Q=R2)7?<4Cg?*A3LGb0Ocms4s2su2D\i,%6Q=R2)[W@4Cg?,0Koq.0Ocmu4s2su2Dd9T%6Q=R2.8Zk4Cg?,@Qk5`0OcnK4s2su2Der.%6Q=R2.Jfm4Cg?-0g6%/0OcnO4s2su2DmHX%6Q=R2D@<;4Cg?-@m1>a0Ocpp4s2su2E!EV%6Q=R2E*fB4Cg?/1d2@20Ocq"4s2su2E3KV%6Q=R2E<rD4Cg?02*MI30OcqM4s2su2E<HT%6Q=R2Inuo4Cg?11d2@20OcqO4s2su2E>;3%6Q=R2J,,q4Cg?1Aj-Yd0Ocsp4s2su2IS=(%6Q=R2_dK=4Cg?Y3''Id60Ocsr4s2su2IU)Z%6Q=R2`!W?4Cg?Z0Koq.0Ocst4s2su2I\[1%6Q=R2`3cA4Cg?Z@Qk5`0Oct!4s2su2I^2\%6Q=R2`X&E4Cg?[3''Id60Od!r4s2su2Ina1%6Q=R3&3Z?4Cg?\3Bdm70Od!t4s2su2J"R+%6Q=R3&EfA4Cg?]1d2@20Od"!4s2su2J"j3%6Q=R3&WrC4Cg?^0Koq.0Od"#4s2su2J+g1%6Q=R3+4un4CgB)0Koq.0Od"N4s2su2_[''P%6Q=R3+G,p4CgB*0g6%/0Od"R4s2su2_ef+%6Q=R3A<W>4CgB+0Koq.0Od$u4s2su2_ni+%6Q=R3A`oB4CgB+A3LGb0Od%$4s2su2`!EW%6Q=R3B02F4CgB,@m1>a0Od%&4s2su2`*?T%6Q=R3FP)o4CgB-2a.[50Od%O4s2su2`*NY%6Q=R3FtAs4CgB.1d2@20OeHH4s2su2`5,0%6Q=R@5^:l4CgB/1Hl710OeHL4s2su2`<NW%6Q=R@5pFn4CgB/3Bdm70OeHN4s2su2`>/0%6Q=R@:;>B4CgB00Koq.0OeI"4s2su2`EQW%6Q=R@:_VF4CgB10g6%/0OeKG4s2su2`P;2%6Q=R@PU+i4CgB20Koq.0OeKN4s2su2dnL+%6Q=RA2ZUo4>8HH@Qk64DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,b@UqD]+?V>32.Sl[4>:5T3''JHI0JGFp4q0V.@Urq3+?V>3@PL%U4>:5T@m2"t0JHrp4q0V.@Us"5+?V>3A2c[]4>:5TANh5!0JI)t4q0V.@V%M_+?VD51,_<*4>:5U3BeQJ1,:R>4q0V.@V&t3+?VD72D@<(4>:5UA3M+u1,WJp4q0V.@V''+7+?VD:@q%V24>:5UAj.>"1,WW$4q0V.@V.;X+?VD<1h/]Y4>:5V2*N-F@:M!$4q0V.@V.M^+?X(B1,;$&4>:5V2a/?H@:M)K4q0V.@V0%4+?X(B1M/f[4>:5V@Qkns@:M,K4q0V.@V049+?X(B1h/]Y4>:8!0KpUA@:M2P4q0V.@k]W$+?X(B2`!W,4>:8!1-QgC@:M5R4q0V.@k]]&+?X(B2`X&24>:8!1d3$E@:M8U4q0V.@k]c(+?X(B3AWi.4>:8!2Ei6G@:N_''4q0V.@k]i*+?X(B@5g@Z4>:8!3''JHI@:Nb$4q0V.@k]o,+?X(B@Pg7X4>:8!@6Per@:NbX4q0V.@k_@U+?X(B@kp4W4>:8!@m2"t@:Ne)4q0V.@k_FW+?X(B@q%V24>:8!ANh5!@:Nh)4q0V.@k_LY+?X(BA2ug_4>:8"0KpUA@:Nk/4q0V.@kf]%+?X(BAR[h44>:8"1-QgC@:Nk[4q0V.@kfc''+?X(BAiDm_4>:8"2Ei6G@:V&J4q0V.@kfo++?X(C0f_E,4>:8"3''JHI@:V*)4q0V.@kfu-+?X(C1,qH,4>:8"@6Per@:V-&4q0V.@khFV+?X(C1L`NW4>:8"@m2"t@:V0*4q0V.@khLX+?X(C1cRZ.4>:8"ANh5!@:V5M4q0V.@khRZ+?X(C2)d].4>:8#0KpUA@:V;V4q0V.@koc&+?X(C3&Wr04>:8#1-QgC@:V?04q0V.@koo*+?X(C3FY/]4>:8#2Ei6G@:We(4q0V.@kou,+?X(C@5pF[4>:8#@m2"t@:Wh-4q0V.@kqRY+?X(C@lHR\4>:8#ANh5!@:WkV4q0V.@kqX[+?X(CA2HIZ4>:8$0KpUA@:WnZ4q0V.@l#i''+?X(CAN2j_4>:8$1-QgC@:Wq]4q0V.@l#o)+?X(CAhcIY4>:8$1d3$E@:Wt]4q0V.@l$&-+?X(D0P*EW4>:8$3''JHI@:_/K4q0V.@l$,/+?X(D0f;-(4>:8$@6Per@:_0''4q0V.@l%RX+?X(D1,(m$4>:8$ANh5!@:_2Q4q0V.@l%^\+?X(D1H@W.4>:8%0KpUA@:_6)4q0V.@l,o(+?X(D1cIT-4>:8%1-QgC@:_8U4q0V.@l,u*+?X(D1h&WX4>:8%1d3$E@:_;P4q0V.@l-,.+?X(D2IScY4>:8%3''JHI@:_AR4q0V.@l-20+?X(D2`<i/4>:8%@6Per@:_DQ4q0V.@l.XY+?X(D3&j)24>:8%@m2"t@:_E-4q0V.@l.^[+?X(D3B'',24>:8%ANh5!@:_GZ4q0V.@l.d]+?X(D@Pp=Y4>:8&1-QgC@:`t)4q0V.@l6&++?X(DA77Y24>:8&2Ei6G@:a"14q0V.@l62/+?X(DARdn54>:8&3''JHI@:a%*4q0V.@l681+?X(DAi2a]4>:8&@6Per@:a%[4q0V.@l7d\+?X(E0fM9*4>:8&ANh5!@:h8P4q0V.@l7j^+?X(E1GM''&4>:8''0KpUA@:h;R4q0V.@l?&*+?X(E1H7Q-4>:8''1-QgC@:h<)4q0V.@l?,,+?X(E1cIT-4>:8''1d3$E@:h?.4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=S2E*fB4CMhZ@Qk5`0Om"N4s2srAiMM/%6Q=S2Inuo4CMh]2a.[50Om$q4s2srAmmAW%6Q=S2`3cA4CMi21-Q.00Om%"4s2srAn#@9%6Q=S2`EoC4CMi30g6%/0Om%$4s2srAn3b_%6Q=S2`X&E4CMi4@Qk5`0Om%O4s2srAn<nb%6Q=S2e5)p4CMi62a.[50Om%Q4s2ss0JG:H%6Q=S2eG5r4CTuu2*MI30Om''r4s2ss0JI$$%6Q=S3&*T>4CU!!1Hl710Om''t4s2ss0JR0''%6Q=S3&<`@4CU!"0g6%/0Om(!4s2ss0J[-%%6Q=S3&a#D4CU!$@Qk5`0Om(%4s2ss0Jm<(%6Q=S3&s/F4CU!%@Qk5`0Om(N4s2ss0K!H+%6Q=S3+>&o4CU!&0g6%/0Om(R4s2ss0K*B(%6Q=S3+b>s4CU!''1Hl710Om*s4s2ss0K1jQ%6Q=S3AE]?4CU!(1Hl710Om*u4s2ss0K<N*%6Q=S3AWiA4CU!)2*MI30Om+"4s2ss0KET+%6Q=S3AiuC4CU!Q1d2@20Om+$4s2ss0O\BR%6Q=S3B'',E4CU!R0Koq.0Om+&4s2ss0Oce$%6Q=S3B98G4CU!SANgPc0Om+O4s2ss0P*.+%6Q=S3FY/p4CU!U3Bdm70Om+Q4s2ss0eb=G%6Q=S3Fk;r4CU$!@6P,_0Om+S4s2ss0ekUN%6Q=S3G(Gt4CU$"ANgPc0OnNJ4s2ss0f*E*%6Q=S@5U4k4CU$%1Hl710OnNL4s2ss0f3?''%6Q=S@5g@m4CU$&1Hl710OnO#4s2ss0f<K*%6Q=S@PBtg4CU$''Aj-Yd0OnQL4s2ss0fW`.%6Q=S@Q$Cm4CU$*0Koq.0OnQN4s2ss0f_*T%6Q=S@Q6Oo4CU$*@Qk5`0OnQP4s2ss0jun&%6Q=S@UVGC4CU$R2a.[50OnR$4s2ss0k!(+%6Q=S@UhSE4CU$S1d2@20OnR&4s2ss0k*++%6Q=S@V%_G4CU$U1Hl710OnR(4s2ss0kE%&%6Q=S@k^(h4CU$V2EhR40OnTI4s2ss0kFr\%6Q=S@kp4j4CU''#0Koq.0OnTK4s2ss1,1RK%6Q=S@l-@l4CU''#@Qk5`0OnTM4s2ss1,3?(%6Q=S@l?Ln4CU''$0g6%/0OnTO4s2ss1,:[M%6Q=S@q.\F4CU''%1Hl710OnU''4s2ss1,CdO%6Q=S@q@hH4CU''%A3LGb0OnU)4s2ss1,L[K%6Q=SA2c[p4CU''''3Bdm70OnWQ4s2ss1,WZ-%6Q=SA2ugr4CU''(@Qk5`0OnX%4s2ss1,`Z,%6Q=SA7@_F4CU''(Aj-Yd0OnX''4s2ss1,h0V%6Q=SA7RkH4CU''*2a.[50OnZJ4s2ss1-&i.%6Q=SAMH@k4CU''SA3LGb0OnZL4s2ss11E%''%6Q=SAMZLm4CU''TA3LGb0OnZN4s2ss11N"%%6Q=SAMlXo4CU''V0g6%/0OnZR4s2ss11`7*%6Q=SAN;ps4CU''X0Koq.0On[&4s2ss11i:*%6Q=SAR[hG4CU''X2EhR40On[(4s2ss11k#[%6Q=SARmtI4CU''XANgPc0On[*4s2ss1GCaO%6Q=SAS++K4CU*$3Bdm70On]K4s2ss1GNE(%6Q=SAhcIl4CU*%1d2@20On]M4s2ss1GUmQ%6Q=SAi2ap4CU*%Aj-Yd0On]Q4s2ss1G_!S%6Q=SAiDmr4CU*&@m1>a0On]S4s2ss1GiW+%6Q=SAiW$t4CU*(3Bdm70On^''4s2ss1H%-T%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:8W@Qkns@P]o%4q0V.@qK47+?X*h2IScY4>:8WA3M+u@P]oQ4q0V.@qK:9+?X*h2`Eo04>:8WAj.>"@P]u%4q0V.A2#]$+?X*h3+4u[4>:;"0g6^B@P]uS4q0V.A2#c&+?X*h3+b>`4>:;"1HlpD@P^##4q0V.A2#i(+?X*h3B0234>:;"2a/?H@P^#V4q0V.A2#u,+?X*h@6$L\4>:;"3BeQJ@P_II4q0V.A2%LW+?X*h@U_M14>:;"A3M+u@P_J(4q0V.A2,c%+?X*h@qIn64>:;#0g6^B@P_ON4q0V.A2,i''+?X*hA77Y24>:;#1HlpD@P_P)4q0V.A2,u++?X*hAMH@X4>:;#@m2"t@Pfbm4q0V.A25l''+?X*i0f_E,4>:;$1-QgC@PffO4q0V.A25r)+?X*i1,M0(4>:;$1d3$E@Pfku4q0V.A26#++?X*i1H7Q-4>:;$@6Per@Pfo#4q0V.A27UX+?X*i1c[`/4>:;$@m2"t@PfoR4q0V.A27[Z+?X*i2*!i04>:;$ANh5!@PfrO4q0V.A27a\+?X*i2IScY4>:;%0KpUA@PfuR4q0V.A2>r(+?X*i2_[E)4>:;%2Ei6G@Pg#U4q0V.A2?/.+?X*i3&*T+4>:;%3''JHI@Pg&)4q0V.A2?50+?X*i3+G,]4>:;%@m2"t@Pg))4q0V.A2@g]+?X*i@5U4X4>:;&0KpUA@PhM&4q0V.A2H#)+?X*i@Pg7X4>:;&1-QgC@PhRL4q0V.A2H)++?X*iA2-7W4>:;&1d3$E@PhUO4q0V.A2H/-+?X*iAN2j_4>:;&2Ei6G@Ph[W4q0V.A2H5/+?X*iAnF494>:;&@6Per@PoiK4q0V.A2IaZ+?X*j0P!?V4>:;&@m2"t@PooO4q0V.A2Ig\+?X*j11i]Z4>:;''0g6^B@PorR4q0V.A2Q,++?X*j1hAi[4>:;''1HlpD@Pp#!4q0V.A2Q;0+?X*j2Ieo[4>:;''3''JHI@Pp(u4q0V.A2QA2+?X*j2e5)]4>:;''@6Per@PqRQ4q0V.A2Rg[+?X*j@:h\44>:;''@m2"t@PqXO4q0V.A2Rm]+?X*jA2ug_4>:;''ANh5!@Pq\+4q0V.A2Rs_+?X*jA7e"74>:;(1-QgC@Pq_+4q0V.A2Z5-+?X*jARmt64>:;(1d3$E@PqaS4q0V.A2Z;/+?X*jAiMs`4>:;(2Ei6G@Q#nt4q0V.A2ZA1+?X*k0KD<+4>:;(3''JHI@Q#qr4q0V.A2ZG3+?X*k0fM9*4>:;(@m2"t@Q#rQ4q0V.A2[s^+?X*k1bh0''4>:;(ANh5!@Q$&''4q0V.A2\$`+?X*k1h/]Y4>:;)1d3$E@Q$)Q4q0V.A2cA0+?X*k2DmZ-4>:;)Aj.>"@Q%XN4q0V.A2l8,+?X*k@5^:Y4>:;*0g6^B@Q%Y*4q0V.A2l>.+?X*k@Pp=Y4>:;*1HlpD@Q%\*4q0V.A2lD0+?X*k@V.e54>:;*2a/?H@Q%aV4q0V.A2n-a+?X*kAiDm_4>:;*Aj.>"@Q,ts4q0V.A2u>-+?X*l0P!?V4>:;+0g6^B@Q-"u4q0V.A2uD/+?X*l0k3BV4>:;+1HlpD@Q-%s4q0V.A2uJ1+?X*l1GV-''4>:;+2*N-F@Q-)%4q0V.A2uP3+?X*l1c7H+4>:;+2a/?H@Q-/)4q0V.A2uV5+?X*l2E*f/4>:;+3BeQJ@Q-5T4q0V.A3"''^+?X*l3&j)24>:;+ANh5!@Q.aN4q0V.A772V+?X*l@l-@YASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0P"TI4s2ss2e=d/%6Q=T@5C(i4CU6]ANgPc0P"TK4s2ss3&!*O%6Q=T@5U4k4CU9(1d2@20P"TM4s2ss3&!6S%6Q=T@5g@m4CU9(Aj-Yd0P"U$4s2ss3&<6P%6Q=T@:MJD4CU9+@m1>a0P"U&4s2ss3&>,0%6Q=T@:_VF4CU9,0g6%/0P"WI4s2ss3&NBR%6Q=T@PU+i4CU9-2*MI30P"WK4s2ss3&W`[%6Q=T@Pg7k4CU9.@Qk5`0P"WM4s2ss3&`ZX%6Q=T@Q6Oo4CU900Koq.0P"X''4s2ss3&rr^%6Q=T@k^(h4CU9Y2a.[50P"ZJ4s2ss3+=U+%6Q=T@kp4j4CU9Z2*MI30P"ZL4s2ss3+=g1%6Q=T@l-@l4CU9[1d2@20P"ZN4s2ss3+HJ_%6Q=T@l?Ln4CU9\1Hl710P"ZP4s2ss3+QM_%6Q=T@lQXp4CU9]Aj-Yd0P"ZR4s2ss3+as1%6Q=T@pqPD4CU<)0Koq.0P"[&4s2ss3A<3P%6Q=T@q.\F4CU<)2*MI30P"]K4s2ss3AEHV%6Q=TA26=k4CU<*3Bdm70P"]M4s2ss3AN<Q%6Q=TA2HIm4CU<+3''Id60P"^&4s2ss3A`NU%6Q=TA7@_F4CU<-A3LGb0P"^(4s2ss3AiKS%6Q=TA7RkH4CU<.Aj-Yd0P"^*4s2ss3B(D2%6Q=TA7e"J4CU<0A3LGb0P"`K4s2ss3B/]V%6Q=TAMH@k4CU<1@Qk5`0P"`M4s2ss3B8fX%6Q=TAMZLm4CU<23''Id60P"`O4s2ss3B:Y7%6Q=TAN)dq4CU<Z1Hl710P"`S4s2ss3FOd/%6Q=TAN;ps4CU<[1Hl710P"a''4s2ss3FZP`%6Q=TAR[hG4CU<\1d2@20P"a)4s2ss3FcJ]%6Q=TARmtI4CU<^0Koq.0P"a+4s2ss3Ft-5%6Q=TAS++K4CU<^A3LGb0P"cL4s2ss3G)hd%6Q=TAhcIl4CV_R0g6%/0P"cN4s2ss@50Q%%6Q=TAhuUn4CV_R3''Id60P"cP4s2ss@527U%6Q=TAi2ap4CV_T@Qk5`0P"cR4s2ss@5DLZ%6Q=TAiDmr4CV_U0g6%/0P"cT4s2ss@5MR[%6Q=TAiW$t4CV_W0Koq.0P"d(4s2ss@5_OX%6Q=TAn!qH4CV_WA3LGb0P"d*4s2ss@5hUY%6Q=TAnF4L4CV_Y3Bdm70P)pl4s2ss@5qd]%6Q=U0Ju$:4CV_ZAj-Yd0P)pr4s2ss@::lS%6Q=U0K20<4CV`-1Hl710P)qH4s2ss@:D&W%6Q=U0Od3g4CV`.Aj-Yd0P)qJ4s2ss@:M)W%6Q=U0P!?i4CV`/2*MI30P)so4s2ss@:V;\%6Q=U0f)!94CV`11d2@20P)sq4s2ss@:_D^%6Q=U0f;-;4CV`20g6%/0P)ss4s2ss@:j%6%6Q=U0fM9=4CVbR1Hl710P)su4s2ss@PKl,%6Q=U0f_E?4CVbSAj-Yd0P)tI4s2ss@PTo,%6Q=U0k*<h4CVbTA3LGb0P)tK4s2ss@P_FV%6Q=U0k<Hj4CVbV0Koq.0P)tM4s2ss@PhOX%6Q=U0kNTl4CVbW0g6%/0P*!n4s2ss@Pp).%6Q=U1,1s84CVbX0Koq.0P*!p4s2ss@Q%a\%6Q=U1,D*:4CVbY0Koq.0P*!r4s2ss@Q-,-%6Q=U11<?h4CVbZ3Bdm70P*"K4s2ss@Q?D3%6Q=U11`Wl4CVc.2*MI30P*"O4s2ss@UW_0%6Q=U1GD!84CVc/2*MI\DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,bAMZ&)+?X+B@l$:X4>:>&1-QgC@U`h+4q0V.AMZ,++?X+B@lZ^^4>:>&1d3$E@U`hW4q0V.AMZ2-+?X+B@qIn64>:>&2Ei6G@U`k.4q0V.AMZ8/+?X+BA7Rk54>:>&3''JHI@U`n*4q0V.AMZ>1+?X+BARdn54>:>&@6Per@U`n\4q0V.AM[dZ+?X+BAhlOZ4>:>&@m2"t@Uh)H4q0V.AM[j\+?X+C0Jks&4>:>&ANh5!@Uh*''4q0V.AM[p^+?X+C0ebd#4>:>''0KpUA@Uh/I4q0V.AMc,*+?X+C11NKW4>:>''1-QgC@Uh0*4q0V.AMc2,+?X+C1c@N,4>:>''1d3$E@Uh8P4q0V.AMc>0+?X+C2_[E)4>:>''3''JHI@Uh>U4q0V.AMcD2+?X+C2e5)]4>:>''@6Per@UhAU4q0V.AMdj[+?X+C3+P2^4>:>''@m2"t@UhDP4q0V.AMdp]+?X+C3Fb5^4>:>''ANh5!@Uih%4q0V.AMl2++?X+C@l$:X4>:>(1-QgC@Uin-4q0V.AMl8-+?X+CA26=X4>:>(1d3$E@Uiq*4q0V.AMl>/+?X+CA2ug_4>:>(2Ei6G@Uit''4q0V.AMlJ3+?X+CAR[h44>:>(@6Per@Uit[4q0V.AMmp\+?X+CAiDm_4>:>(ANh5!@Uq0''4q0V.AMn''`+?X+D0P3KX4>:>)0KpUA@Uq2J4q0V.AMuD0+?X+D1GD!%4>:>)3''JHI@Uq<(4q0V.AMuP4+?X+D1hJo\4>:>)@6Per@Uq?*4q0V.AN"!]+?X+D2.Sl[4>:>)@m2"t@UqAS4q0V.AN"''_+?X+D2Ieo[4>:>)ANh5!@UqDT4q0V.AN"-a+?X+D2`Eo04>:>*0KpUA@UqDX4q0V.AN)>-+?X+D3&3Z,4>:>*1-QgC@UqH-4q0V.AN)D/+?X+D3+Y8_4>:>*2a/?H@UqK.4q0V.AN)S4+?X+D@5C(V4>:>*3BeQJ@UrnW4q0V.AN+$]+?X+D@:h\44>:>*@Qkns@Urq&4q0V.AN+*_+?X+D@Q?U]4>:>*A3M+u@UrqX4q0V.AN2P2+?X+DA7@_34>:>+2Ei6G@Us%,4q0V.AN2V4+?X+DAN)d^4>:>+3''JHI@Us(*4q0V.AN2\6+?X+DAiDm_4>:>+@6Per@V%8M4q0V.AN43a+?X+E0k*<U4>:>+ANh5!@V%;N4q0V.AN49c+?X+E1,V6)4>:>,0KpUA@V%;R4q0V.AN;J/+?X+E11NKW4>:>,1d3$E@V%?)4q0V.AN;\5+?X+E2.f#]4>:>,3''JHI@V%GQ4q0V.AN;b7+?X+E2`<i/4>:>,@6Per@V%JY4q0V.AN=3`+?X+E3&<`-4>:>,@m2"t@V''"*4q0V.AN=9b+?X+E@Q6O\4>:>,ANh5!@V''+*4q0V.AN=?d+?X+EAMu^]4>:>T0KpUA@V''+]4q0V.ARRG[+?X+EAnF494>:>T3''JHI@V.?,4q0V.ARRS_+?X+F1,1s%4>:>T@6Per@V.AP4q0V.ART.6+?X+F1cIT-4>:>TAj.>"@V.JX4q0V.AR[DY+?X+F2D@<(4>:>U1HlpD@V.MS4q0V.AR[J[+?X+F2`Nu14>:>U2*N-F@V.Q24q0V.AR[V_+?X+F@:MJ14>:>U@Qkns@V0.,4q0V.AR].5+?X+FAMlX\4>:>UA3M+u@V0124q0V.AR]47+?X+FAS++84>:>UAj.>"@k]Sn4q0V.ARdDX+?X-f1,1s%4>:>V1HlpD@k]c#4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q=U@l-@l4C^''&Aj-Yd0P+`O4s2st0K*B(%6Q=U@l?Ln4C^''(1d2@20P+`Q4s2st0KD''U%6Q=U@lQXp4C^''R1d2@20P+a''4s2st0O\ES%6Q=U@q.\F4C^''RANgPc0P+cO4s2st0Om%*%6Q=UA2QOn4C^''T@Qk5`0P+cQ4s2st0P*%(%6Q=UA2c[p4C^''V@Qk5`0P+cS4s2st0P3:.%6Q=UA2ugr4C^''W@Qk5`0P+d''4s2st0P4o\%6Q=UA7@_F4C^*$2*MI30P+d)4s2st0et^P%6Q=UA7RkH4C^*$@6P,_0P+d+4s2st0f(XM%6Q=UA7e"J4C^*&ANgPc0P+fL4s2st0f:^M%6Q=UAMH@k4C^*''2a.[50P+fN4s2st0f<E(%6Q=UAMlXo4C^*)1Hl710P+fT4s2st0f_*T%6Q=UAR[hG4C^*S1Hl710P+g*4s2st0jut(%6Q=UAhcIl4C^*U2*MI30P+iO4s2st0k4ZV%6Q=UAhuUn4C^*V2*MI30P+iQ4s2st0k<:.%6Q=UAi2ap4C^*W0g6%/0P+iS4s2st0kE:-%6Q=UAiDmr4C^-#1Hl710P+iU4s2st1,:RJ%6Q=UAiW$t4C^-%1d2@20P+j)4s2st1,:dP%6Q=UAn!qH4C^-%ANgPc0P+j+4s2st1,C^M%6Q=UAn4(J4C^-&2*MI30P+j-4s2st1,CmR%6Q=UAnF4L4C^-&@Qk5`0P3!m4s2st1,EE(%6Q=V0Jbm84C^-''2a.[50P3!q4s2st1,M!T%6Q=V0Ju$:4C^-(2a.[50P3!s4s2st1,^jN%6Q=V0KD<>4C^-*1Hl710P3"I4s2st1,q0U%6Q=V0Od3g4C^-+Aj-Yd0P3"K4s2st1-%?Y%6Q=V0ebd64C^-U1Hl710P3$q4s2st11FfY%6Q=V0f2'':4C^-V1d2@20P3$s4s2st11N:-%6Q=V0fV?>4C^-W1Hl710P3%"4s2st11W7+%6Q=V0k!6g4C^-WANgPc0P3%K4s2st11`4)%6Q=V0k3Bi4C^-X2EhR40P3%M4s2st11`F/%6Q=V0kENk4C^-Y1d2@20P3''p4s2st1GE9%%6Q=V1,;$94C^0$ANgPc0P3''r4s2st1GLUJ%6Q=V1,M0;4C^0%@Qk5`0P3''t4s2st1GUmQ%6Q=V1,_<=4C^0&Aj-Yd0P3(!4s2st1G^jO%6Q=V11NKj4C^0(1Hl710P3(N4s2st1GiT*%6Q=V11`Wl4C^0)0Koq.0P3(P4s2st1Gq!Q%6Q=V1GD!84C^0)@m1>a0P3*q4s2st1H$sO%6Q=V1GV-:4C^0*@6P,_0P3*s4s2st1H&i/%6Q=V1Gh9<4C^0+@Qk5`0P3*u4s2st1H8i-%6Q=V1H%E>4C^0-2*MI30P3+L4s2st1HAu0%6Q=V1L`Nj4C^0U0g6%/0P3-s4s2st1LalY%6Q=V1cRZA4C^0Y@Qk5`0P3.%4s2st1M/@*%6Q=V1grQj4C^0Z@Qk5`0P3.P4s2st1b^jP%6Q=V1hAin4C^3%3Bdm70P3.R4s2st1bg^K%6Q=V2)%3:4C^3&1d2@20P30u4s2st1bpjN%6Q=V2)IK>4C^3''A3LGb0P31"4s2st1c$pO%6Q=V2)[W@4C^3(Aj-Yd0P31$4s2st1c-pN%6Q=V2)mcB4C^3)3Bdm70P31&4s2st1c/]+%6Q=V2.\ro4C^3*@Qk5`0P31S4s2st1cAf,%6Q=V2D@<;4C^3,2a.[50P33t4s2st1cJu0%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>:A*1-QgC@l-/"4q0V.Ai;G/+?X-j3&Ef.4>:A*2Ei6G@l-2#4q0V.Ai;S3+?X-j3AWi.4>:A*3''JHI@l-2''4q0V.Ai;Y5+?X-j3Fk;_4>:A*@m2"t@l.V)4q0V.AiDD-+?X-j@Q?U]4>:A+2*N-F@l.\)4q0V.AiDV3+?X-j@q7b44>:A+2a/?H@l.^P4q0V.AiD\5+?X-jA2QO[4>:A+3BeQJ@l.^U4q0V.AiF9b+?X-jAN)d^4>:A+Aj.>"@l.dV4q0V.AiMJ.+?X-k0Ju$''4>:A,0g6^B@l5rN4q0V.AiMP0+?X-k0k<HW4>:A,1HlpD@l5uQ4q0V.AiMV2+?X-k1,1s%4>:A,2*N-F@l6#R4q0V.AiM\4+?X-k1GM''&4>:A,2a/?H@l6(s4q0V.AiMb6+?X-k1c%<)4>:A,3BeQJ@l6,!4q0V.AiO3_+?X-k2)[W-4>:A,A3M+u@l6,U4q0V.AiO?c+?X-k2E*f/4>:A-0g6^B@l62V4q0V.AiVV1+?X-k3&<`-4>:A-1HlpD@l68%4q0V.AiV\3+?X-k3A`o/4>:A-2*N-F@l68,4q0V.AiVb5+?X-k3G(Ga4>:A-2a/?H@l7[S4q0V.AiVh7+?X-k@:DD04>:A-3BeQJ@l7^R4q0V.AiX9`+?X-k@V.e54>:A-@Qkns@l7dU4q0V.AiXEd+?X-kAhcIY4>:A-Aj.>"@l7jS4q0V.AmmAW+?X-kAiMs`4>:AU0g6^B@l?"t4q0V.AmmGY+?X-l0KD<+4>:AU1HlpD@l?(r4q0V.AmmM[+?X-l11<?U4>:AU2*N-F@l?+u4q0V.AmmS]+?X-l1LWHV4>:AU3BeQJ@l?/&4q0V.Amo+3+?X-l2*!i04>:AUA3M+u@l?8X4q0V.Amo77+?X-l3&3Z,4>:AUAj.>"@l?>&4q0V.An!GX+?X-l3FY/]4>:AV0g6^B@l?>X4q0V.An!MZ+?X-l@:MJ14>:AV1HlpD@l@e+4q0V.An!S\+?X-l@l?L[4>:AV2*N-F@l@gW4q0V.An!_`+?X-lA2la^4>:AV@Qkns@l@n14q0V.An#76+?X-lAn+"64>:AVA3M+u@lH(r4q0V.An#=8+?X-m0Od3T4>:AVAj.>"@lH)Q4q0V.An*MY+?X-m0f)!&4>:AW1HlpD@lH/%4q0V.An*Y]+?X-m1H%E+4>:AW3BeQJ@lH8*4q0V.An,75+?X-m2.f#]4>:AW@Qkns@lH;(4q0V.An,=7+?X-m3&!N*4>:AWA3M+u@lHA&4q0V.An,C9+?X-m3&Wr04>:AWAj.>"@lHAV4q0V.An3SZ+?X-m3+b>`4>:AX0g6^B@lHD(4q0V.An3Y\+?X-m3B9844>:AX1HlpD@lIgT4q0V.An3nc+?X-m@kp4W4>:AX@6Per@lIn04q0V.An5@7+?X-mA2ug_4>:AX@m2"t@lIq-4q0V.An5F9+?X-mAR[h44>:AXANh5!@lJ!V4q0V.An5L;+?X-mAiDm_4>:AY0KpUA@lJ![4q0V.An<\\+?X-n0K)*(4>:AY1-QgC@lQ2''4q0V.An<b^+?X-n0k*<U4>:AY1d3$E@lQ5"4q0V.An<h`+?X-n1GD!%4>:AY2Ei6G@lQ8"4q0V.An<nb+?X-n1H%E+4>:AY3''JHI@lQ8V4q0V.An<td+?X-n1bh0''4>:AY@6Per@lQ;$4q0V.An>F8+?X-n1cIT-4>:AY@m2"t@lQ;V4q0V.An>L:+?X-n2).9(ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0P4m-4s2st3&NKU%6Q=VAS++K4C^?.2*MI30P4oN4s2st3&NZZ%6Q=VAhcIl4C^?.@m1>a0P4oR4s2st3&W]Z%6Q=VAi2ap4C^?/3Bdm70P4oT4s2st3&`c[%6Q=VAiW$t4C^?22*MI30P4p*4s2st3&tJ4%6Q=VAn!qH4C^?Z0Koq.0P4p,4s2st3+4g2%6Q=VAnF4L4C^?[3''Id60eb:84s2st3+?>\%6Q@!0JPa64C^?\@Qk5`0eb::4s2st3+P!4%6Q@!0K20<4C^?_1Hl710eb:@4s2st3+cV`%6Q@!0KD<>4C^B*1Hl710eb:i4s2st3A<EV%6Q@!0Od3g4C^B+2a.[50eb:k4s2st3AENX%6Q@!0P!?i4C^B+@m1>a0eb=;4s2st3AP&-%6Q@!0f)!94C^B,A3LGb0eb==4s2st3AWNV%6Q@!0f;-;4C^B-3''Id60eb=m4s2st3Ai`Z%6Q@!0kENk4C^B02*MI30eb=o4s2st3B(J4%6Q@!1,(m74C^B1Aj-Yd0eb@;4s2st3B1V7%6Q@!1,;$94C^B30g6%/0eb@=4s2st3B8o[%6Q@!1,M0;4C^B3ANgPc0eb@?4s2st3FOd/%6Q@!1,_<=4C^B[3''Id60eb@A4s2st3FQD]%6Q@!11<?h4C^B\2a.[50eb@l4s2st3FY!4%6Q@!11NKj4C^B]Aj-Yd0eb@n4s2st3Fjm/%6Q@!11`Wl4C^B^@Qk5`0eb@p4s2st3Fl\b%6Q@!1GD!84C^B_3''Id60ebC<4s2st3G(36%6Q@!1GV-:4C^B`Aj-Yd0ebC>4s2st@50W''%6Q@!1Gh9<4C_eS@6P,_0ebC@4s2st@527U%6Q@!1H%E>4C_eT2*MI30ebCB4s2st@59c*%6Q@!1H7Q@4C_eTA3LGb0ebCD4s2st@5B`(%6Q@!1LWHi4C_eW1Hl710ebCo4s2st@5VLX%6Q@!1M&`m4C_eX2a.[50ebCq4s2st@5^,0%6Q@!1b_*94C_eX@m1>a0ebF=4s2st@5_^]%6Q@!1c@N?4C_eZ0g6%/0ebFC4s2st@5p,.%6Q@!1cRZA4C_eZ3''Id60ebFp4s2st@6$81%6Q@!1hAin4C_e[3Bdm70ebI>4s2st@::uV%6Q@!2)7?<4C_f.3''Id60ebIB4s2st@:D#V%6Q@!2)[W@4C_f/2*MI30ebID4s2st@:Ee3%6Q@!2)mcB4C_f02EhR40ebIF4s2st@:V;\%6Q@!2.8Zk4C_f1Aj-Yd0ebIq4s2st@:`n3%6Q@!2.\ro4C_f2A3LGb0ebIs4s2st@:hA\%6Q@!2D@<;4C_f33''Id60ebLA4s2st@PKT$%6Q@!2DdT?4C_hT2a.[50ebLF4s2st@P]]%%6Q@!2E<rD4C_hV1d2@20ebLq4s2st@P_U[%6Q@!2Inuo4C_hW@6P,_0ebLs4s2st@Ph[\%6Q@!2J,,q4C_hX1-Q.00ebO?4s2st@Q$)-%6Q@!2_dK=4C_hY3''Id60ebOE4s2st@Q-50%6Q@!2`EoC4C_h[0g6%/0ebOG4s2st@Q62.%6Q@!2eG5r4C_h\A3LGb0ebR@4s2st@UUrS%6Q@!3&NlB4C_i/Aj-Yd0ebRF4s2st@U_&U%6Q@!3&a#D4C_i03Bdm70ebRH4s2st@U`h2%6Q@!3&s/F4C_i10Koq.0ebRs4s2st@Uik2%6Q@!3+P2q4C_i23''Id60ebUA4s2st@V%D\%6Q@!3AE]?4C_i3@6P-3DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c0KCsR+?X.CAi)[\4>ANM2*N-F@q''%04q0V/0KD*V+?X.D0Jbm%4>ANM@Qkns@q.9+4q0V/0KEW,+?X.D1GM''&4>ANMA3M+u@q.>N4q0V/0KE].+?X.D1h&WX4>ANMAj.>"@q.B*4q0V/0OZY!+?X.D2.\r\4>ANu0g6^B@q.DO4q0V/0OZ_#+?X.D2_dK*4>ANu1HlpD@q.GR4q0V/0OZe%+?X.D2dnlZ4>ANu2*N-F@q.H-4q0V/0OZk''+?X.D3AE],4>ANu2a/?H@q.N24q0V/0OZq)+?X.D@5g@Z4>ANu3BeQJ@q/qY4q0V/0O\BR+?X.D@PU+V4>ANu@Qkns@q/tW4q0V/0O\HT+?X.D@l$:X4>ANuA3M+u@q0".4q0V/0O\NV+?X.DA2-7W4>AO!0g6^B@q0((4q0V/0Oce$+?X.DAMZLZ4>AO!1HlpD@q0(\4q0V/0Ock&+?X.DAi)[\4>AO!2a/?H@q0+_4q0V/0Od"*+?X.E0P3KX4>AO!3BeQJ@q7?(4q0V/0OeHS+?X.E1Gh9)4>AO!@Qkns@q7AS4q0V/0OeNU+?X.E1c.B*4>AO!Aj.>"@q7H-4q0V/0Ole#+?X.E2D[N+4>AO"0g6^B@q7MP4q0V/0Olk%+?X.E2`X&24>AO"1HlpD@q7N.4q0V/0Olq''+?X.E3&!N*4>AO"2*N-F@q7PZ4q0V/0Om")+?X.E3+>&\4>AO"2a/?H@q7Q04q0V/0Om(++?X.E3FY/]4>AO"3BeQJ@q9%''4q0V/0OnNT+?X.E@Pg7X4>AO"Aj.>"@q9(*4q0V/0Ouk$+?X.E@l6FZ4>AO#2Ei6G@q9.24q0V/0P!+++?X.EAS++84>AO#3''JHI@q@AP4q0V/0P!1-+?X.F0fM9*4>AO#@6Per@q@DS4q0V/0P"WV+?X.F11NKW4>AO#@m2"t@q@H,4q0V/0P"]X+?X.F1b_*&4>AO#ANh5!@q@JR4q0V/0P)t&+?X.F1hJo\4>AO$1-QgC@q@MP4q0V/0P*%(+?X.F2_mQ+4>AO$1d3$E@q@VZ4q0V/0P*1,+?X.F3B'',24>AO$@6Per@qB++4q0V/0P+cY+?X.F@V.e54>AO$ANh5!@qB.04q0V/0P+i[+?X.F@q.\34>AO%0KpUA@qB7]4q0V/0P3%''+?X.FAn=.84>AO%1-QgC@qIDR4q0V/0P3+)+?X.G0k!6T4>AO%1d3$E@qIH+4q0V/0P31++?X.G1,D*''4>AO%2Ei6G@qIMW4q0V/0P37-+?X.G1LiTX4>AO%3''JHI@qIPO4q0V/0P4l[+?X.G2IScY4>AO%Aj.>"@qIW14q0V/0eb:F+?X.G3&*T+4>AQE0g6^B@qI]24q0V/0eb@H+?X.G3A<W+4>AQE2a/?H@qI`54q0V/0ebRN+?X.G@6$L\4>AQE3BeQJ@qK.Z4q0V/0ed*$+?X.G@U_M14>AQEA3M+u@qK1\4q0V/0ed0&+?X.G@l6FZ4>AQEAj.>"@qK4\4q0V/0ekFI+?X.GA2c[]4>AQF1HlpD@qK734q0V/0ekLK+?X.GAN)d^4>AQF2*N-F@qK=]4q0V/0ekRM+?X0g0Jbm%4>AQF2a/?HA2#]J4q0V/0ekXO+?X0g0ebd#4>AQF3BeQJA2#_u4q0V/0em6''+?X0g1L`NW4>AQFAj.>"A2#kq4q0V/0etFH+?X0g2DIB)4>AQG0g6^BA2#nt4q0V/0etLJ+?X0g2DmZ-4>AQG1HlpDA2#o$4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@"1,M0;4Cg-)2EhR40ekF@4s2su0K3T-%6Q@"1,_<=4Cg-*3Bdm70ekFB4s2su0K<Q+%6Q@"1,qH?4Cg-+0Koq.0ekFm4s2su0KET+%6Q@"11NKj4Cg-+A3LGb0ekFo4s2su0O\ES%6Q@"11`Wl4Cg-TANgPc0ekFq4s2su0OnNT%6Q@"1GD!84Cg-UAj-Yd0ekI=4s2su0P"TU%6Q@"1Gh9<4Cg-W2*MI30ekIA4s2su0P34,%6Q@"1H%E>4Cg-X3Bdm70ekIC4s2su0P4fY%6Q@"1H7Q@4Cg0#0Koq.0ekIn4s2su0ed''#%6Q@"1LiTk4Cg0$3''Id60ekIp4s2su0em*#%6Q@"1M&`m4Cg0&2a.[50ekIr4s2su0f(gR%6Q@"1b_*94Cg0(1Hl710ekL>4s2su0fC^L%6Q@"1bq6;4Cg0)3Bdm70ekL@4s2su0fEW-%6Q@"1c@N?4Cg0*A3LGb0ekLD4s2su0fV$S%6Q@"1cRZA4Cg0+@m1>a0ekLF4s2su0f_''S%6Q@"1grQj4Cg0,2a.[50ekLo4s2su0f_6X%6Q@"1hJoo4Cg0UA3LGb0ekO>4s2su0k3%(%6Q@"2)@E=4Cg0VAj-Yd0ekOB4s2su0k<"&%6Q@"2)d]A4Cg0Y2*MI30ekOF4s2su0kOoZ%6Q@"2.A`l4Cg3$3''Id60ekOq4s2su1,1LI%6Q@"2.Sln4Cg3%1d2@20ekOs4s2su1,1aP%6Q@"2DIB<4Cg3&1Hl710ekRA4s2su1,C^M%6Q@"2D[N>4Cg3(3Bdm70ekRC4s2su1,NK)%6Q@"2E*fB4Cg3)1d2@20ekRp4s2su1,WN)%6Q@"2I\im4Cg3)A3LGb0ekRr4s2su1,_!R%6Q@"2Inuo4Cg3*3''Id60ekUD4s2su1,q3V%6Q@"2`3cA4Cg3-1Hl710ekUF4s2su1-&l/%6Q@"2`EoC4Cg3UA3LGb0ekUH4s2su11=cY%6Q@"2`X&E4Cg3V@Qk5`0ekUq4s2su11N%&%6Q@"2e"rn4Cg3W1d2@20ekUs4s2su11W7+%6Q@"2e5)p4Cg3Y0Koq.0ekUu4s2su11`C.%6Q@"2eG5r4Cg3Y3Bdm70ekXA4s2su11iI/%6Q@"3&*T>4Cg6%3''Id60ekXC4s2su1GE6$%6Q@"3&<`@4Cg6''1Hl710ekXE4s2su1GUjP%6Q@"3&NlB4Cg6)0g6%/0ekXG4s2su1Gh''T%6Q@"3&a#D4Cg6)@m1>a0ekXr4s2su1Gq*T%6Q@"3+>&o4Cg6*3Bdm70ekXt4s2su1H$pN%6Q@"3+P2q4Cg6-1Hl710ekY!4s2su1H8r0%6Q@"3+b>s4Cg6.2*MI30ek[B4s2su1HB&2%6Q@"3AE]?4Cg6V@m1>a0ek[D4s2su1L`+''%6Q@"3AWiA4Cg6W3Bdm70ek[F4s2su1LafW%6Q@"3AiuC4Cg6X2a.[50ek[H4s2su1Lr4(%6Q@"3B'',E4Cg6Y2a.[50ek[J4s2su1M&7(%6Q@"3B98G4Cg6Z2*MI30ek[s4s2su1M(,]%6Q@"3FY/p4Cg6[1Hl710ek[u4s2su1b^aM%6Q@"3Fk;r4Cg9&2EhR40ek\"4s2su1b`E''%6Q@"3G(Gt4Cg9''0Koq.0em)l4s2su1biH''%6Q@"@5C(i4Cg9(1d2@20em)n4s2su1c-pN%6Q@"@5U4k4Cg9*3''Id60em)r4s2su1c7''Q%6Q@"@6$Lo4Cg9+2*MI30em*F4s2su1c8f-%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>AR!@QknsA2H2#4q0V/0k"QU+?X0k2Ieo[4>AR!A3M+uA2H5"4q0V/0k"WW+?X0k3Aiu04>AR!Aj.>"A2H;+4q0V/0k*+++?X0k@Pg7X4>AR"3BeQJA2IaT4q0V/0k+WV+?X0k@l$:X4>AR"A3M+uA2IdR4q0V/0k+]X+?X0k@q7b44>AR"Aj.>"A2Ih-4q0V/0k2n$+?X0kAMH@X4>AR#0g6^BA2IjX4q0V/0k2t&+?X0kAS++84>AR#1HlpDA2ImY4q0V/0k3%(+?X0l0Ju$''4>AR#2*N-FA2Q&M4q0V/0k3+*+?X0l0ebd#4>AR#2a/?HA2Q+s4q0V/0k31,+?X0l1,M0(4>AR#3BeQJA2Q,%4q0V/0k4]W+?X0l1G_3(4>AR#A3M+uA2Q2"4q0V/0k;t%+?X0l2.f#]4>AR$0g6^BA2Q8"4q0V/0k<%''+?X0l2D[N+4>AR$1HlpDA2Q8(4q0V/0k<+)+?X0l2Ieo[4>AR$2*N-FA2Q8V4q0V/0k<1++?X0l2_dK*4>AR$2a/?HA2Q>W4q0V/0k<7-+?X0l3AE],4>AR$3BeQJA2QA,4q0V/0k=cX+?X0l@:DD04>AR$A3M+uA2Rk/4q0V/0k=iZ+?X0lA2-7W4>AR$Aj.>"A2RmT4q0V/0kE%&+?X0lA7Ie44>AR%0g6^BA2RpR4q0V/0kE+(+?X0lAR[h44>AR%1HlpDA2Rt14q0V/0kE1*+?X0m0K20)4>AR%2*N-FA2Z/Q4q0V/0kE7,+?X0m11NKW4>AR%@6PerA2Z5Q4q0V/0kFfX+?X0m1LrZY4>AR%@m2"tA2Z5U4q0V/0kFlZ+?X0m1bh0''4>AR%ANh5!A2Z8$4q0V/0kFr\+?X0m1cIT-4>AR&0KpUAA2Z;S4q0V/0kN.(+?X0m2D@<(4>AR&1-QgCA2Z>&4q0V/0kN4*+?X0m2E!`.4>AR&3''JHIA2ZD(4q0V/0kNF0+?X0m3AWi.4>AR&@6PerA2ZGX4q0V/0kOlY+?X0m@6$L\4>AR&@m2"tA2[k.4q0V/0kOr[+?X0m@Q6O\4>AR&ANh5!A2[q,4q0V/0kP#]+?X0m@q@h54>ATF0KpUAA2[sR4q0V/1,(LJ+?X0mAMH@X4>ATF1d3$EA2\$S4q0V/1,(XN+?X0n0Jbm%4>ATF@m2"tA2c5T4q0V/1,*<(+?X0n1c%<)4>ATG0KpUAA2c>&4q0V/1,1LI+?X0n1h8cZ4>ATG1-QgCA2cA''4q0V/1,1RK+?X0n2.f#]4>ATG1d3$EA2cD+4q0V/1,1^O+?X0n2Inu\4>ATG3''JHIA2cG''4q0V/1,1dQ+?X0n2eG5_4>ATG@6PerA2cJ[4q0V/1,36%+?X0n3B'',24>ATG@m2"tA2dpN4q0V/1,:UK+?X(B0fV?+4>ATH2*N-F@:M&I4q0V/1,<B(+?X(B11`WY4>ATI0KpUA@:M)P4q0V/1,E?&+?X(B1grQW4>ATK3''JHI@:M5O4q0V/1,V''U+?X(B2`<i/4>ATKAj.>"@:M8V4q0V/1,`T*+?X(B3FtA`4>ATLAj.>"@:N_(4q0V/1,gmN+?X(B@:DD04>ATM2a/?H@:NbT4q0V/1,h0V+?X(B@k^(U4>ATM3BeQJ@:Ne''4q0V/1,q-T+?X(BA2ZU\4>ATO0KpUA@:NkZ4q0V/1-%''Q+?X(BAhlOZ4>ATO1-QgC@:Nn+4q0V/1-%-S+?X(BAiMs`4>ATO3''JHI@:V&L4q0V/1-&o0+?X(C0P*EWASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>0f!/s4s2srA25l''%6Q@#@:_VF4CMbU@6P,_0f!2u4s2srA2@a[%6Q@#@V.eH4CMbW2EhR40f!8o4s2srA2Z2,%6Q@#A26=k4CMbY1d2@20f!9M4s2srA2cG2%6Q@#AM?:j4CMbZANgPc0f!;p4s2srA2l8,%6Q@#AMcRn4CMb[2a.[50f!>p4s2srA3"''^%6Q@$0JYg74CMc02EhR40f(Lo4s2srA7IV`%6Q@$0f)!94CMc21-Q.00f(RB4s2srA7]=9%6Q@$1,_<=4CMc40Koq.0f(Rs4s2srA7f@9%6Q@$1GV-:4CMeT@6P,_0f(UA4s2srAM@UX%6Q@$1Gh9<4CMeU0Koq.0f(X?4s2srAMQ/-%6Q@$1bh0:4CMeV3''Id60f(Xr4s2srAM[dZ%6Q@$2)%3:4CMeX1-Q.00f([A4s2srAMcA1%6Q@$2)7?<4CMeXAj-Yd0f([E4s2srAMl>/%6Q@$2.A`l4CMeYANgPc0f([s4s2srAMuA/%6Q@$2.f#p4CMeZ@Qk5`0f(^G4s2srAN)P3%6Q@$2E*fB4CMe[@6P,_0f(^u4s2srAN2V4%6Q@$2`X&E4CMe]3''Id60f(gM4s2srAR]78%6Q@$3FP)o4CMf20g6%/0f*5n4s2srARf:8%6Q@$@5C(i4CMf31d2@20f*5r4s2srARo76%6Q@$@PBtg4CMf4@6P,_0f*;o4s2srAhZ,,%6Q@$AMQFl4CMhX2*MI30f*As4s2srAhuA0%6Q@$AMu^p4CMhXANgPc0f*B"4s2srAi)2*%6Q@$AN2jr4CMhY1d2@20f*B$4s2srAi)D0%6Q@$Ai2ap4CMhZ@6P,_0f1Un4s2srAiVV1%6Q@%1M/fn4CMi3@6P,_0f1^@4s2srAn,=7%6Q@%2)%3:4CMi52EhR40f1dD4s2ss0JG7G%6Q@%2`*]@4CU!!ANgPc0f1gH4s2ss0JY=G%6Q@%3A`oB4CU!$3Bdm70f1mN4s2ss0JtaP%6Q@%3FP)o4CU!%3''Id60f1n"4s2ss0K!9&%6Q@%3Fb5q4CU!%@m1>a0f1n$4s2ss0K!E*%6Q@%@:DDC4CU!''1d2@20f3?L4s2ss0K<W-%6Q@%@l-@l4CU!Q1Hl710f3Ds4s2ss0Om")%6Q@%A2laq4CU!SAj-Yd0f3Gu4s2ss0P*"''%6Q@%AMlXo4CU!U1d2@20f:XF4s2ss0em*#%6Q@&0O[-f4CU$"Aj-Yd0f:[D4s2ss0f(^O%6Q@&0f_E?4CU$%1-Q.00f:^A4s2ss0f:^M%6Q@&1GD!84CU$''ANgPc0f:aA4s2ss0fLdM%6Q@&1H7Q@4CU$(A3LGb0f:au4s2ss0fWT*%6Q@&1M/fn4CU$)@m1>a0f:dA4s2ss0fWc/%6Q@&1h/]l4CU$R2EhR40f:mJ4s2ss0k=iZ%6Q@&2e"rn4CU$V2a.[50f:pL4s2ss0kOiX%6Q@&3&j)E4CU$W@m1>a0f:sM4s2ss1,1[N%6Q@&3B02F4CU''#3''Id60f:sO4s2ss1,33$%6Q@&3FP)o4CU''#@m1>a0f:t#4s2ss1,3B)%6Q@&@5g@m4CU''%1-Q.00f<E#4s2ss1,NQ+%6Q@&@q%VE4CU''(@6P,_0f<HN4s2ss1,`W+%6Q@&@q7bG4CU''(ANgPc0f<KP4s2ss1,q0U%6Q@&A7[qI4CU''*3''Id60f<N$4s2ss1-&f-%6Q@&AR[hG4CU''S1-Q.00f<NP4s2ss11<"''%6Q@&AmmkG4CU''TANgQ7DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,c2D?gK+?X*g@lHR\4>A`J3''JHI@PVJ&4q0V/2D@-T+?X*gA7Ie44>A`J@6Per@PVJ+4q0V/2DAT(+?X*gAMH@X4>A`J@m2"t@PVLR4q0V/2DA`,+?X*gAhcIY4>A`K@Qkns@P]_o4q0V/2DS`*+?X*h11`WY4>A`L@m2"t@P]eo4q0V/2Deo-+?X*h2)d].4>A`NA3M+u@P]lM4q0V/2Deu/+?X*h2.Sl[4>A`O1HlpD@P]oP4q0V/2Do)1+?X*h3&3Z,4>A`P1HlpD@P]uQ4q0V/2E!BU+?X*h3+Y8_4>A`PA3M+u@P^#U4q0V/2E3BS+?X*h@UVG04>A`R0g6^B@P_J''4q0V/2E5,/+?X*h@q7b44>A`RA3M+u@P_OQ4q0V/2E583+?X*hA2la^4>A`S@Qkns@P_UO4q0V/2IU/\+?X*i0P*EW4>Aa(0KpUA@PfiK4q0V/2InR,+?X*i1c@N,4>Aa)1HlpD@Pfo$4q0V/2J"U,+?X*i2DRH*4>Aa*1-QgC@Pfu"4q0V/2J"g2+?X*i2I\iZ4>Aa+1HlpD@Pg#T4q0V/2_[*Q+?X*i3FP)\4>AcL2a/?H@PhOP4q0V/2_nf*+?X*iA26=X4>AcM@Qkns@PhUP4q0V/2`!HX+?X*iAS"%74>AcN@6Per@Ph[N4q0V/2`,#.+?X*j0O[-S4>AcOA3M+u@PoiL4q0V/2`522+?X*j1,_<*4>AcQ0KpUA@PooN4q0V/2`<BS+?X*j1G_3(4>AcQ2a/?H@Pott4q0V/2`>21+?X*j1hJo\4>AcR2a/?H@Pp#S4q0V/2e"I)+?X*j@6$L\4>Ad(1d3$E@PqUM4q0V/2e+^/+?X*j@q@h54>Ad*3''JHI@Pq_*4q0V/2eG!4+?X*k0f)!&4>Ad,ANh5!@Q#ts4q0V/2eHYc+?X*k1,M0(4>AfN2a/?H@Q$)P4q0V/3&=u,+?X*k2`<i/4>AfQAj.>"@Q%XP4q0V/3&WQV+?X*k@:_V34>AfR1d3$E@Q%[L4q0V/3+4O*+?X*l0JYg$4>Ag*1HlpD@Q-(t4q0V/3+Fm2+?X*l1LWHV4>Ag*3''JHI@Q-)Q4q0V/3+ZVa+?X*l2_mQ+4>Ag,ANh5!@Q-5&4q0V/3+c_c+?X*l3+Y8_4>Ag-Aj.>"@Q-;U4q0V/3A<-N+?X*l3FY/]4>AiM@6Per@Q._(4q0V/3A=u-+?X*l@P^1W4>AiN3BeQJ@Q.dT4q0V/3AFr++?X*l@lQX]4>AiP@m2"t@Q.mR4q0V/3A`QV+?X*m0Jbm%4>AiQ2*N-F@Q6&!4q0V/3AiNT+?X*m0k!6T4>AiRAj.>"@Q6/%4q0V/3ArWV+?X*m1LrZY4>AiS1HlpD@Q6/U4q0V/3AtJ5+?X*m2)7?)4>AiT0KpUA@Q65%4q0V/3B/]V+?X*m2J#&]4>AiU0g6^B@Q6;#4q0V/3B/iZ+?X*m2`3c.4>AiV0g6^B@Q6>U4q0V/3FX[++?X*m@Q$CZ4>Aj*3''JHI@Q7jQ4q0V/3FcJ]+?X*mA7[q64>Aj+@Qkns@Q7pQ4q0V/3FlV`+?X*mAmmk44>Aj,A3M+u@Q7t04q0V/3Fsm.+?X*n0JPa#4>Aj-0g6^B@Q?+u4q0V/3Fu_b+?X*n0fD3)4>C7u0KpUA@Q?5"4q0V/@50N$+?X*n1hAi[4>C8"1d3$E@Q?>T4q0V/@59](+?X*n2Ieo[4>C8#2*N-F@Q?D+4q0V/@5Bf*+?X*n3&j)24>C8#2a/?H@Q?DX4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6Q@R1bq6;4CU<2Aj-Yd0jump4s2ss3FO[,%6Q@R1c.B=4CU<Z1d2@20juq!4s2ss3Fap1%6Q@R2*!iC4CU<\2a.[50juqJ4s2ss3FcM^%6Q@R2.A`l4CU<\A3LGb0juqL4s2ss3Fjp0%6Q@R2D@<;4CU<]@6P,_0jusp4s2ss3Ft*4%6Q@R2IScl4CU<_2EhR40jutL4s2ss3G)bb%6Q@R2Ieon4CU<_Aj-Yd0k!"$4s2ss@50N$%6Q@R2dnlm4CV_R1d2@20k!(O4s2ss@5D=U%6Q@R@5C(i4CV_U@6P,_0k"NG4s2ss@5^#-%6Q@R@PU+i4CV_W@m1>a0k"NO4s2ss@5g21%6Q@R@V.eH4CV_Y1-Q.00k"QG4s2ss@5p//%6Q@R@kg.i4CV_Y3''Id60k"R(4s2ss@6%m_%6Q@RA2$1i4CV`-0Koq.0k"TI4s2ss@::oT%6Q@RA26=k4CV`-1d2@20k"TK4s2ss@:;)Y%6Q@RA2HIm4CV`-@6P,_0k"TO4s2ss@:D#V%6Q@RA7@_F4CV`.@6P,_0k"U&4s2ss@:E_1%6Q@RA7RkH4CV`.ANgPc0k"X''4s2ss@:V8[%6Q@S0JG[54CV`20Koq.0k)jp4s2ss@PD@W%6Q@S0fD3<4CVbS0Koq.0k)mt4s2ss@PV@U%6Q@S1-%N@4CVbT@m1>a0k)pm4s2ss@P]r,%6Q@S1GM''94CVbU3Bdm70k)po4s2ss@P_U[%6Q@S1H%E>4CVbV2EhR40k)pt4s2ss@Pg&.%6Q@S1H7Q@4CVbV@6P,_0k)q!4s2ss@PhRY%6Q@S1LWHi4CVbVANgPc0k)st4s2ss@Q#u*%6Q@S2*!iC4CVbYANgPc0k*$p4s2ss@Q7g\%6Q@S2I\im4CVb[@6P,_0k*(P4s2ss@U_5Z%6Q@S2e>/q4CVc/3''Id60k*+"4s2ss@Uh/W%6Q@S3+G,p4CVc11-Q.00k*+Q4s2ss@Uq;Z%6Q@S3G(Gt4CVc2ANgPc0k+QF4s2ss@V.;X%6Q@S@:;>B4CVeS1Hl710k+R&4s2ss@k_=T%6Q@S@Pp=l4CVeU2EhR40k+TM4s2ss@kqIV%6Q@S@Q-In4CVeUANgPc0k+TO4s2ss@l#o)%6Q@S@kp4j4CVeW1-Q.00k+ZL4s2ss@l7g]%6Q@SA2HIm4CVeY0Koq.0k+`M4s2ss@lQD2%6Q@SAi2ap4CVe[Aj-Yd0k+`T4s2ss@lZG2%6Q@SAmmkG4CVe\@Qk5`0k+a(4s2ss@l\*a%6Q@SAn+"I4CVf/1Hl710k+a,4s2ss@pqA]%6Q@T0K)*;4CVf01-Q.00k2pq4s2ss@q0(6%6Q@T1,M0;4CVf3@6P,_0k2sr4s2ss@qB.6%6Q@T1GV-:4CVhT2EhR40k3!q4s2ssA2#u,%6Q@T1Gh9<4CVhT@m1>a0k3!s4s2ssA2%RY%6Q@T1bh0:4CVhV1-Q.00k3(Q4s2ssA2IaZ%6Q@T2E<rD4CVhY@6P,_0k3.P4s2ssA2cD1%6Q@T2e5)p4CVh[3''Id60k31"4s2ssA2lA/%6Q@T3&s/F4CVh\Aj-Yd0k31O4s2ssA2uD/%6Q@T3As&D4CVi0ANgPc0k4WM4s2ssA7K%3%6Q@T@Q6Oo4CVi42EhR40k4ZQ4s2ssA7[_a%6Q@T@q%VE4CVkU1-Q.00k4^''4s2ssAM>r)%6Q@TA2c[p4CVkV2EhR40k4a&4s2ssAMIa[%6Q@TA7@_F4CVkW0Koq.0k4a(4s2ssAMQ#)%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>C>VA3M+u@V%;O4q0V/@q9.7+?X+E1,_<*4>C>W@Qkns@V%?(4q0V/@qB.6+?X+E1LiTX4>C>X2a/?H@V%B,4q0V/@qK78+?X+E2)[W-4>C>XANh5!@V%E.4q0V/@qK=:+?X+E2D[N+4>CA#2a/?H@V%JR4q0V/A2%FU+?X+E2dnlZ4>CA#@Qkns@V%K14q0V/A2,r*+?X+E3+Y8_4>CA(3''JHI@V''++4q0V/A2ZG3+?X+EAn=.84>CA)@6Per@V.;J4q0V/A2e!^+?X+F0k!6T4>CA*A3M+u@V.?+4q0V/A2e''`+?X+F1,(m$4>CAT1d3$E@V.JQ4q0V/A77>Z+?X+F2)IK+4>CAT3BeQJ@V.K+4q0V/AMH),+?X+FA7[q64>CD%2a/?H@V01*4q0V/AN49c+?X-f2IScY4>CD-0KpUA@k]fN4q0V/AR]16+?X-f@5:"U4>CDW1HlpD@k_@P4q0V/ARdP\+?X-f@V%_44>CDW2*N-F@k_D$4q0V/ARf=9+?X-fA77Y24>CDY0KpUA@k_LQ4q0V/AS!S[+?X-fAmmk44>CDZ@m2"t@kf`!4q0V/AS,I:+?X-g11EEV4>CDZANh5!@kf`M4q0V/AS,O<+?X-g1GV-''4>CG%0KpUA@kfbq4q0V/AhYr''+?X-g1Gq?*4>CG%1-QgC@kfbu4q0V/Ah[d[+?X-g1grQW4>CG&0g6^B@kfhs4q0V/Ahc&)+?X-g2)[W-4>CG&@6Per@kfl"4q0V/Ahl))+?X-g2_mQ+4>CG''@m2"t@kfqu4q0V/Ahu5,+?X-g3+b>`4>CG(3BeQJ@kfuT4q0V/Ai!jZ+?X-g@5''kS4>CG(@Qkns@khCI4q0V/Ai!p\+?X-g@5L.W4>CG(A3M+u@khCN4q0V/Ai*p[+?X-g@UVG04>CG*@m2"t@khLP4q0V/Ai=3a+?X-gAhlOZ4>CG-0KpUA@ko`L4q0V/AiMM/+?X-h0ebd#4>CG-2Ei6G@kobt4q0V/AiOBd+?X-h11<?U4>CG.0KpUA@kofL4q0V/AiVS0+?X-h1GD!%4>CG.A3M+u@kol!4q0V/Amo:8+?X-h2DRH*4>CGX0g6^B@kouS4q0V/An*S[+?X-h3&!N*4>CGX2a/?H@kp#&4q0V/An3\]+?X-h3FP)\4>CGY1d3$E@kp&S4q0V/An5L;+?X-h@PL%U4>CGZ0KpUA@kqLO4q0V/An<\\+?X-h@Q6O\4>CGZ1d3$E@kqM*4q0V/AnEb]+?X-hA26=X4>CG[1-QgC@kqRO4q0V/AnF%e+?X-hA7e"74>CG[@6Per@kqUM4q0V/AnGL9+?X-hAN)d^4>CG[ANh5!@kqV,4q0V/AnGX=+?X-hAhlOZ4>JTE0KpUA@kqXR4q0V00JG4F+?X-hAiDm_4>JTE1-QgC@kqY)4q0V00JHp!+?X-i0O[-S4>JTEA3M+u@l#hp4q0V00JPRO+?X-i1,_<*4>JTG@6Per@l#qs4q0V00J[*$+?X-i1c.B*4>JTI3BeQJ@l$#P4q0V00Jm9''+?X-i2_dK*4>JTJ1-QgC@l$&P4q0V00JtdQ+?X-i3&<`-4>JTK1HlpD@l$,''4q0V00K1gP+?X-i@PU+V4>JTM3''JHI@l%V+4q0V00K<Z.+?X-iA7@_34>JTN1-QgC@l%[N4q0V00KD*V+?X-iARRb34>JTN3BeQJ@l%\+4q0V00O\BR+?X-j0K)*(4>JU!@Qkns@l,lJ4q0V00Ouk$+?X-j1M&`ZASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1,*8p4s2st1c8]*%6QC"AMZLm4C^3*@m1>a1,*;t4s2st1cI<V%6QC"Ai;gq4C^3,3''Id61,*<L4s2st1cK#1%6QC#0K20<4C^3.1-Q.01,1LD4s2st1gsrZ%6QC#11EEi4C^3X@6P,_1,1Oo4s2st1h1#Z%6QC#1LrZl4C^3Z2EhR41,1Rr4s2st1hAX1%6QC#1c[`B4C^3[3Bdm71,1Us4s2st2)$dL%6QC#1hJoo4C^6&1d2@21,1[B4s2st2)/Z+%6QC#2D[N>4C^6(0Koq.1,1[q4s2st2)8T(%6QC#2`!W?4C^6)@6P,_1,1^E4s2st2)Af-%6QC#3&WrC4C^6-1-Q.01,1as4s2st2)eu.%6QC#3+>&o4C^6-Aj-Yd1,1dG4s2st2)o/2%6QC#3AiuC4C^6/1Hl711,1dI4s2st2*!QY%6QC#@5:"h4C^6W@6P,_1,32t4s2st2.AL.%6QC#@:_VF4C^6Y@Qk5`1,33L4s2st2.L/\%6QC#@U_MD4C^6[1-Q.01,36M4s2st2.^5\%6QC#@k^(h4C^6[Aj-Yd1,38n4s2st2.eU-%6QC#@kp4j4C^6\2*MI31,3;q4s2st2DJW(%6QC#A2ugr4C^9)2a.[51,3<J4s2st2DR9V%6QC#A7@_F4C^9*0g6%/1,3<L4s2st2D[6T%6QC#A7RkH4C^9*3''Id61,3<N4s2st2D\i,%6QC#A7e"J4C^9*Aj-Yd1,3?#4s2st2Df#0%6QC#ARRbF4C^9,1-Q.01,3BL4s2st2E#,1%6QC$0JG[54C^9.2a.[51,:O@4s2st2E3ET%6QC$0Od3g4C^9/@6P,_1,:R<4s2st2E<QW%6QC$0k*<h4C^9X2EhR41,:Ro4s2st2ISR/%6QC$1,_<=4C^9Y@Qk5`1,:Un4s2st2IeR-%6QC$11EEi4C^9Z3''Id61,:X>4s2st2InO+%6QC$1H.K?4C^9[ANgPc1,:[F4s2st2J-A]%6QC$2).9;4C^<(A3LGb1,:^F4s2st2_d3S%6QC$2E!`A4C^<+1-Q.01,:aH4s2st2`!9S%6QC$2IScl4C^<+Aj-Yd1,:b"4s2st2`+u-%6QC$2_[E<4C^<-0Koq.1,:ds4s2st2`<TY%6QC$2e"rn4C^<.@6P,_1,:gI4s2st2`G>4%6QC$3&a#D4C^<00g6%/1,:gK4s2st2`WWW%6QC$3&s/F4C^<12*MI31,:h$4s2st2dnI*%6QC$3A<W>4C^<Y3''Id61,:jG4s2st2e"L*%6QC$3FY/p4C^<ZANgPc1,<8o4s2st2e-A^%6QC$@:DDC4C^<\@6P,_1,<9J4s2st2e6D^%6QC$@V.eH4C^<^2EhR41,<>n4s2st2eG$5%6QC$@lHRo4C^?)1Hl711,<?!4s2st3&!3R%6QC$@q7bG4C^?*1-Q.01,<Ao4s2st3&+i*%6QC$A7IeG4C^?+ANgPc1,<Dp4s2st3&<KW%6QC$AN2jr4C^?-@6P,_1,<EM4s2st3&NHT%6QC$AiMss4C^?/2EhR41,<H%4s2st3&W`[%6QC%0Jks94C^?03Bdm71,CUm4s2st3&iZW%6QC%0Od3g4C^?11d2@21,CX>4s2st3&r]W%6QC%0fV?>4C^?2ANgPc1,CXq4s2st3+4a0%6QC%1LiTk4C^?]2EhR41,Cau4s2st3+ap0%6QC%1hJoo4C^?_1d2@21,CdJ4s2st3A<BU%6QC%2.Sln4C^B*ANgQ7DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,d1Gr`-+?X-o0ebd#4>J]NAj.>"@lZ;Q4q0V01H7*Q+?X-o1c@N,4>J]Q1HlpD@lZG&4q0V01H@9U+?X-o2DdT,4>J^$2a/?H@lZJZ4q0V01LW7,+?X-o3&!N*4>J^%1HlpD@lZP*4q0V01L`:,+?X-o3FP)\4>J^%3''JHI@lZPZ4q0V01LjiW+?X-o@Q$CZ4>J^&@Qkns@l\!X4q0V01LrC-+?X-o@lZ^^4>J^''@Qkns@l\''Z4q0V01LsuZ+?X-oA7e"74>J^''A3M+u@l\*T4q0V01M&@++?X-oAS"%74>J^)1HlpD@pq''"4q0V01M1,\+?X.B0f_E,4>J^)A3M+u@pq*$4q0V01b^dN+?X.B1,_<*4>J`I2Ei6G@pq,P4q0V01brW++?X.B2.\r\4>J`LAj.>"@pq<)4q0V01c6sN+?X.B3As&14>J`O1HlpD@prh%4q0V01c@0S+?X.B@Pg7X4>J`O@Qkns@prhY4q0V01cAo/+?X.B@l6FZ4>J`P1d3$E@prkY4q0V01cI9U+?X.BA2$1V4>J`Q1d3$E@prqW4q0V01gslX+?X.C1,;$&4>Ja%A3M+u@q%2O4q0V01h&:*+?X.C1GM''&4>Ja&2*N-F@q%5M4q0V01h''uZ+?X.C1M&`Z4>Ja&ANh5!@q%8K4q0V01h/C,+?X.C1h&WX4>Ja''3''JHI@q%;M4q0V01h1)\+?X.C2.8ZX4>Ja''Aj.>"@q%<*4q0V01hAC*+?X.C2`<i/4>Ja*1HlpD@q%GR4q0V02)$mO+?X.C@:_V34>JcJ2Ei6G@q&n$4q0V02).*T+?X.C@pqP14>JcK@6Per@q&qX4q0V02)8Z*+?X.CAMu^]4>JcLA3M+u@q''"/4q0V02)Ai.+?X.D0JYg$4>JcN0KpUA@q.2L4q0V02)R*P+?X.D0kENX4>JcO1-QgC@q.8J4q0V02)R?W+?X.D11WQX4>JcOAj.>"@q.<''4q0V02)[3R+?X.D1c%<)4>JcPANh5!@q.AS4q0V02)]&1+?X.D2.8ZX4>JcQ1-QgC@q.B.4q0V02)dBV+?X.D2DmZ-4>JcQ2Ei6G@q.DU4q0V02)f)1+?X.D2_mQ+4>JcQAj.>"@q.GS4q0V02)mEV+?X.D2e"r[4>Jd&3BeQJ@q/qU4q0V02.:#Z+?X.D@P^1W4>Jd''3''JHI@q0",4q0V02.JX1+?X.DAMQFY4>Jd)@m2"t@q0+^4q0V02.U5]+?X.E0JG["4>Jd*Aj.>"@q7<&4q0V02.eO++?X.E0k3BV4>JfK0KpUA@q7AO4q0V02D?jL+?X.E1H%E+4>JfK1-QgC@q7AT4q0V02DSc++?X.E2J#&]4>JfNAj.>"@q7Q-4q0V02Dd*O+?X.E3+G,]4>JfP1-QgC@q9"+4q0V02Dm9S+?X.E@5pF[4>JfQ2*N-F@q9()4q0V02E*TZ+?X.EA7[q64>JfS@6Per@q91[4q0V02E5/0+?X.EAn+"64>JfTANh5!@q@AQ4q0V02E>A5+?X.F0fV?+4>Jg''Aj.>"@q@GO4q0V02I\@(+?X.F1Gh9)4>Jg)1HlpD@q@K.4q0V02IeR-+?X.F2)%3''4>Jg*1d3$E@q@Q,4q0V02In[/+?X.F2J,,^4>Jg*2Ei6G@q@SR4q0V02Ina1+?X.F2`!W,4>Jg+1HlpD@q@VX4q0V02J"g2+?X.F3+b>`4>Jg,1HlpD@qB((4q0V02J+j2+?X.F@:DD04>JiL1HlpD@qB+\4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QC)0Jks94C_r40Koq.1,gt#4s2stAS*ha%6QC)1GD!84C_r7@6P,_1,h!D4s2stAS,F9%6QC)1GV-:4C_r7Aj-Yd1,h"#4s2stAhc&)%6QC)1bh0:4C_tX@Qk5`1,h%#4s2stAhmp]%6QC)2D@<;4C_t[@6P,_1,h-I4s2stAi;P2%6QC)2`!W?4C_t]3''Id61,h-N4s2stAi=6b%6QC)3&EfA4C_t_1-Q.01,h0M4s2stAiMV2%6QC)3B'',E4C_t`ANgPc1,h3Q4s2stAmmAW%6QC)@:DDC4C_u4@6P,_1,iWO4s2stAn#76%6QC)@V.eH4C_u62EhR41,i\s4s2stAn3kb%6QC)A26=k4C_u81-Q.01,i`"4s2stAnEk`%6QC)A2laq4C_u8@Qk5`1,if)4s2su0J[''#%6QC)AnF4L4Cg-%2EhR41,psA4s2su0JbXO%6QC*0O[-f4Cg-&2EhR41,pss4s2su0JkaQ%6QC*0kENk4Cg-(1-Q.01,q"#4s2su0K(aO%6QC*1,hB>4Cg-)0g6%/1,q$K4s2su0K1dO%6QC*1-%N@4Cg-)2*MI31,q%$4s2su0K3Q,%6QC*1GD!84Cg-*0Koq.1,q*G4s2su0KEQ*%6QC*1c%<<4Cg-+@m1>a1,q-K4s2su0Ocq(%6QC*2.8Zk4Cg-TAj-Yd1,q0J4s2su0Ouq&%6QC*2E3lC4Cg-V@Qk5`1,q1$4s2su0P)t&%6QC*2_mQ>4Cg-WANgPc1,q3O4s2su0P37-%6QC*3&EfA4Cg0#@6P,_1,q6N4s2su0ed*$%6QC*3+b>s4Cg0$3Bdm71,r]Q4s2su0f1XL%6QC*@V.eH4Cg0(ANgPc1,rc#4s2su0fCsS%6QC*A2$1i4Cg0*@6P,_1,ri&4s2su0f_3W%6QC*AiDmr4Cg0U1-Q.01,rl*4s2su0k)t''%6QC*AiW$t4Cg0U2EhR41,rlS4s2su0k+TU%6QC+0K20<4Cg0VANgPc1-%$J4s2su0k;t%%6QC+1G_3;4Cg3$2EhR41-%0L4s2su1,:UK%6QC+1cIT@4Cg3&1d2@21-%3I4s2su1,CdO%6QC+2)mcB4Cg3''ANgPc1-%3P4s2su1,L[K%6QC+2IScl4Cg3)@6P,_1-%:''4s2su1,h*T%6QC+3+Y8r4Cg3-1-Q.01-%=+4s2su1-%0T%6QC+@5:"h4Cg3UANgPc1-&c!4s2su11Dq$%6QC+@:;>B4Cg3V@6P,_1-&cR4s2su11N+(%6QC+@PL%h4Cg3W@6P,_1-&f!4s2su11OfX%6QC+@l$:k4Cg3Y2EhR41-&i$4s2su11`F/%6QC+A2ZUo4Cg6%1-Q.01-&l(4s2su1GCXL%6QC+A77YE4Cg6%3Bdm71-&lS4s2su1GE9%%6QC+A7IeG4Cg6%Aj-Yd1-&lU4s2su1GLXK%6QC+A7[qI4Cg6&2*MI31-&o&4s2su1GNH)%6QC+AMlXo4Cg6''1-Q.01-&o(4s2su1GUmQ%6QC+AhlOm4Cg6(@6P,_11k$.4s2sB0eb:90f`f"0k!%*%6QCXA2$1i4>AQE0JP:BAMGoJ@Qk5`11k&O4s2sB0eb:90f`f"0k"WW%6QCXA26=k4>AQE0JP:BAMGoJAj-Yd11k&Q4s2sB0eb:90f`f"0k)h#%6QCXA2HIm4>AQE0JP:BAMGoK0g6%/11k&S4s2sB0eb:90f`f"0k)n%%6QCXA2ZUo4>AQE0JP:BAMGoK2a.[511k&U4s2sB0eb:90f`f"0k*++%6QCXA2laq4>AQE0JP:BAMGoK@6P,_11k&W4s2sB0eb:90f`f"0k+ZW%6QCXA77YE4>AQE0JP:BAMGoL0Koq.11k''+4s2sB0eb:90f`f/%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>LMZ@m2"t0ek@:0ek\"0em*G4q0V0An5F9+?VA50JP::3Fsp"@:h\44>LMZANh5!0ek@:0ek\"0em,r4q0V0An5L;+?VA50JP::3Fsp"@Q6O\4>LM[0KpUA0ek@:0ek\"0em-G4q0V0An<\\+?VA50JP::3Fsp"@UhS24>LM[1-QgC0ek@:0ek\"4q0V0An<b^+?VA50JY@;3Fsp"@:DD04>LM[1d3$E0ek@;0ek\"0em*K4q0V0An<h`+?VA50JY@;3Fsp"@Q-I[4>LM[2Ei6G0ek@;0ek\"0em,s4q0V0An<nb+?VA50JY@;3Fsp"@UVG04>LM[3''JHI0ek@;0ek\"0em-J4q0V0An<td+?VA50JY@;3Fsp"@V%_44>LM[@6Per0ek@;0ek\"4q0V0An>F8+?VA50JbF<3Fsp"@5pF[4>LM[@m2"t0ek@<0ek\"0em*G4q0V0An>L:+?VA50JbF<3Fsp"@:_V34>LM[ANh5!0ek@<0ek\"0em*K4q0V0An>R<+?VA50JbF<3Fsp"@PBtT4>LM\0KpUA0ek@<0ek\"0em,m4q0V0AnEb]+?VA50JbF<3Fsp"@Q-I[4>LM\1-QgC0ek@<0ek\"0em-G4q0V0AnEh_+?VA50JbF<3Fsp"@UhS24>LM\1d3$E0ek@<0ek\"4q0V0AnEna+?VA50JkL=3Fsp"@5pF[4>LM\2Ei6G0ek@=0ek\"0em*G4q0V0AnEtc+?VA50JkL=3Fsp"@:_V34>LM\3''JHI0ek@=0ek\"0em*K4q0V0AnF%e+?VA50JkL=3Fsp"@PU+V4>LM\@6Per0ek@=0ek\"0em,r4q0V0AnGL9+?VA50JkL=3Fsp"@Q6O\4>LM\@m2"t0ek@=0ek\"0em-G4q0V0AnGR;+?VA50JkL=3FtA`4>LM\ANh5!0ek@>0ek\"0em)r4q0V0AnGX=+?VA50JtR>3Fsp"@:h\44>L>!1d3$EA2?)$4q0V0@5''Q&+?X0j2)mc/4>L>$1d3$EA2?5)4q0V0@5KZ%+?X0j@:;>/4>L>%2*N-FA2@[N4q0V0@5Kr-+?X0j@UVG04>L>&0KpUAA2@^R4q0V0@5]l)+?X0jAMQFY4>L>''1HlpDA2@dR4q0V0@5_OX+?X0jAS++84>L>(1d3$EA2@h/4q0V0@5g&-+?X0k0JG["4>L>(3''JHIA2Gu!4q0V0@5p,.+?X0k0k!6T4>L>)2Ei6GA2H#N4q0V0@:D&W+?X0k2)7?)4>L>S2*N-FA2H/#4q0V0@:M5[+?X0k2J#&]4>L>T3''JHIA2H5!4q0V0@:V/X+?X0k3&*T+4>L>U3BeQJA2H8S4q0V0@:We1+?X0k3+G,]4>L>V@m2"tA2I^Q4q0V0@:j+8+?X0k@kp4W4>LA"0KpUAA2IdQ4q0V0@PKZ&+?X0kA7[q64>LA#1d3$EA2IjO4q0V0@PTi*+?X0kAmmk44>LA$2a/?HA2In.4q0V0@P]u-+?X0l0fD3)4>LA%3BeQJA2Q)$4q0V0@PhRY+?X0l1GV-''4>LA&A3M+uA2Q/"4q0V0@Pqa]+?X0l1hAi[4>LA(1HlpDA2Q5''4q0V0@Q$20+?X0l2DRH*4>LA(3BeQJA2Q8''4q0V0@Q%XY+?X0l2IScY4>LA(@QknsA2Q8W4q0V0@Q%^[+?X0l2_mQ+4>LA)3''JHIA2Q>)4q0V0@Q-;2+?X0l3+4u[4>LA)@6PerA2Q>V4q0V0@Q.a[+?X0l3+Y8_4>LA*3''JHIA2RdN4q0V0@Q6A3+?X0l@5L.W4>LASAj.>"A2RmU4q0V0@U_#T+?X0lA77Y24>LATANh5!A2RsW4q0V0@Uit5+?X0m0etp%4>LAW0g6^BA2Z2S4q0V0@V%M_+?X0m1LWHV4>LAW3BeQJA2Z5T4q0V0@V''%5+?X0m1c@N,4>LAWA3M+uA2Z8Q4q0V0@V''+7+?X0m1h/]Y4>LD#Aj.>"A2ZD&4q0V0@koc&+?X0m3FtA`4>LD%1-QgCA2[jM4q0V0@l#r*+?X0m@UVG04>LD&2*N-FA2[n,4q0V0@l,l''+?X0m@qIn64>LD''0g6^BA2[sV4q0V0@l,r)+?X0mA2la^ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>11N0t4s2su2J+^.%6QCU2DmZ@4CgB)ANgPc11N7%4s2su2_nf*%6QCU2`NuD4CgB+@m1>a11N9u4s2su2`!HX%6QCU3&j)E4CgB-2EhR411N:(4s2su2`*KX%6QCU3A`oB4CgB.ANgPc11N=%4s2su2`<ET%6QCU3As&D4CgB/1d2@211O`L4s2su2`G;3%6QCU@5U4k4CgB10Koq.11OcO4s2su2`Y;1%6QCV2)%3:4>Ja*Aj-Yd11XiR4s2sA0JG1E%6QCV@Q?Up4>8HC0Koq.11Xj&4s2sA0JG1E%6QCV@U_MD4>8HC0Koq.11Xj(4s2sA0JG1E%6QCV@UqYF4>8HC0Koq.11Xj*4s2sA0JG1E%6QCV@V.eH4>8HC0Koq.11XlK4s2sA0JG1E%6QCV@kg.i4>8HC0Koq.11XlM4s2sA0JG1E%6QCV@l$:k4>8HC0Koq.11XlO4s2sA0JG1E%6QCV@l6Fm4>8HC0Koq.11XlQ4s2sA0JG1E%6QCV@lHRo4>8HC0Koq.11XlS4s2sA0JG1E%6QCV@lZ^q4>8HC0Koq.11Xm''4s2sA0JG1E%6QCV@q%VE4>8HC0Koq.11Xm)4s2sA0JG1E%6QCV@q7bG4>8HC0Koq.11Xm+4s2sA0JG1E%6QCV@qInI4>8HC0Koq.11XoL4s2sA0JG1E%6QCVA2-7j4>8HC0Koq.11XoN4s2sA0JG1E%6QCW2*!iC4D&2:1Hl7111`=O4s2t"An<ka%6QCW2DRH=4D&1ZANgPc11`@"4s2t"Ahdg[%6QCW2DdT?4D&1_@m1>a11`@$4s2t"An<b^%6QCW2IScl4>8Hu3Bdm711`@U4s2sA11N7,%6QCW2_[E<4>8O$0Koq.11`C''4s2sC0JPIL%6QCW2`NuD4>JTH0Koq.11`C)4s2sC0Jd3&%6QCW2dnlm4>JTHANgPc11`CR4s2sC0JkUM%6QCW2eG5r4>JTL0Koq.11`I#4s2sC0ekIJ%6QCW3ANc@4>JWG2EhR411`I%4s2sC0etII%6QCW3A`oB4>JWH2EhR411`I''4s2sC0f!3%%6QCW@PBtg4>JX%1-Q.011aoL4s2sC0k<+)%6QCW@PU+i4>JZG0Koq.11aoR4s2sC1,*0$%6QCW@Q6Oo4>JZGAj-Yd11aoT4s2sC1,1LI%6QCW@UVGC4>JZH@6P,_11ap*4s2sC1,:OI%6QCW@V%_G4>JZI2*MI311arQ4s2sC1,<E)%6QCW@q%VE4>JZL1-Q.011as*4s2sC1,^jN%6QCWA2QOn4>JZP3Bdm711auS4s2sC11<%(%6QCWA2c[p4>J[''Aj-Yd11auU4s2sC1GLXK%6QCX0k<Hj4>JcS1-Q.011i7P4s2sC2.81&%6QCX1LWHi4>JfL@m1>a11i=O4s2sC2DJc,%6QCX1LiTk4>JfO0Koq.11i=Q4s2sC2Dd0Q%6QCX1c[`B4>SZF0Koq.11i@O4s2sD0JG:H%6QCX1h&Wk4>SZG1Hl7111k#N4s2sD1Lr:*%6QCX@kp4j4>Sd(2EhR411k#P4s2sD1LrI/%6QCX@pqPD4D&2:2*MI31GCL:4s2sB0ebI>0f`f"0k*(*%6QF#0JPa64>AQE2)-gGAMGoK3''Id61GCL<4s2sB0ebI>0f`f"0k+QT%6QF#0Jbm84>AQE2)-gGANgPc1GCL>4s2sB0ebI>0jugl0k*++%6QF#0Ju$:4>AQE2)-go1-Q.01GCL@4s2sB0ebL?0f`f"0k"NT%6QF#0K20<4>AQE2DHpHAMGoJANgPc1GCLB4s2sB0ebL?0f`f"0k"ZX%6QF#0KD<>4>AQE2DHpHAMGoK0KoqWDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e0JHp!+?VA50K(X?3Fsp"@Q-I[4>SZF@Qkns0ek@?0ek\"0em-G4q0V10JI!#+?VA50K(X?3Fsp"@UhS24>SZFA3M+u0ek@?0ek\"0em-J4q0V10JI''%+?VA50K(X?3Fsp"@V%_44>SZFAj.>"0ek@?0ek\"4q0V10JP7F+?VA50K1^@3Fsp"@5pF[4>SZG0g6^B0ek@@0ek\"0em*G4q0V10JP=H+?VA50K1^@3Fsp"@:_V34>SZG1HlpD0ek@@0ek\"0em*K4q0V10JPCJ+?VA50K1^@3Fsp"@PBtT4>SZG2*N-F0ek@@0ek\"0em,m4q0V10JPIL+?VA50K1^@3Fsp"@UVG04>SZG2a/?H0ek@@0ek\"0em-I4q0V10JPON+?VA50K1^@3FtA`4>SZG3BeQJ0ek@A0ek\"0em*G4q0V10JR!"+?VA50K:dA3Fsp"@:h\44>SZG@Qkns0ek@A0ek\"0em,r4q0V10JR''$+?VA50K:dA3Fsp"@Q6O\4>SZGA3M+u0ek@A0ek\"0em-G4q0V10JR-&+?VA50K:dA3Fsp"@UhS24>SZGAj.>"0ek@A0ek\"4q0V10JY=G+?VA50KCjB3Fsp"@5pF[4>SZH0g6^B0ek@B0ek\"0em*G4q0V10JYCI+?VA50KCjB3Fsp"@:_V34>SZH1HlpD0ek@B0ek\"0em*K4q0V10JYIK+?VA50KCjB3Fsp"@PL%U4>SZH2*N-F0ek@B0ek\"0em,r4q0V10JYOM+?VA50KCjB3Fsp"@Q6O\4>SZH2a/?H0ek@B0ek\"0em-G4q0V10JYUO+?VA50KCjB3Fsp"@UhS24>SZH3BeQJ0ek@B0ek\"4q0V10J[''#+?VA50OZ[j3Fsp"@:h\44>SZH@Qkns0ek@j0ek\"0em,r4q0V10J[-%+?VA50OZ[j3FtA`4>SZHA3M+u0ek@k0ek\"0em*G4q0V10J[3''+?VA50Ocak3Fsp"@:h\44>SZHAj.>"0ek@k0ek\"0em,r4q0V10JbCH+?VA50Ocak3Fsp"@Q6O\4>SZI0g6^B0ek@k0ek\"0em-G4q0V10JbIJ+?VA50Ocak3Fsp"@UhS24>SZI1HlpD0ek@k0ek\"0em-J4q0V10JbOL+?VA50Ocak3FtA`4>SZI2*N-F0ek@k0em)l0em)r4q0V10JbUN+?VA50Ocak@59Pl@:DD04>SZI2a/?H0ek@k0em)l0em*K4q0V10Jb[P+?VA50Ocak@59Pl@Q-I[4>SZI3BeQJ0ek@k0em)l0em,s4q0V10Jd-$+?VA50Ocak@59Pl@UVG04>SZI@Qkns0ek@k0em)l0em-I4q0V10Jd3&+?VA50Ocak@59Pl@UqY34>SZIA3M+u0ek@k0em)l0em/m4q0V10Jd9(+?VA50Ocak@5:"U4>SZIAj.>"0ek@l0ek\"0em)r4q0V10JkII+?VA50Olgl3Fsp"@:DD04>SZJ0g6^B0ek@l0ek\"0em*J4q0V10JkOK+?VA50Olgl3Fsp"@:h\44>SZJ1HlpD0ek@l0ek\"0em,r4q0V10JkUM+?VA50Olgl3Fsp"@Q6O\4>SZJ2*N-F0ek@l0ek\"0em-G4q0V10Jk[O+?VA50Olgl3Fsp"@UhS24>SZJ2a/?H0ek@l0ek\"0em-J4q0V10JkaQ+?VA50Olgl3FtA`4>SZJ3BeQJ0ek@m0ek\"0em*G4q0V10Jm3%+?VA50Oumm3Fsp"@:h\44>SZJ@Qkns0ek@m0ek\"0em,s4q0V10Jm9''+?VA50Oumm3FtA`4>SZJA3M+u0ek@n0ek\"0em*G4q0V10Jm?)+?VA50P)sn3Fsp"@:h\44>SZJAj.>"0ek@n0ek\"0em,r4q0V10JtOJ+?VA50P)sn3Fsp"@Q6O\4>SZK0g6^B0ek@n0ek\"0em-G4q0V10JtUL+?VA50P)sn3Fsp"@UqY34>SZK1HlpD0ek@n0ek\"4q0V10Jt[N+?VA50P3$o3Fsp"@5pF[4>SZK2*N-F0ek@o0ek\"0em*G4q0V10JtaP+?VA50P3$o3Fsp"@:h\44>SZK2a/?H0ek@o0ek\"0em,r4q0V10JtgR+?VA50P3$o3Fsp"@UhS24>SZK3BeQJ0ek@o0ek\"4q0V10K!9&+?VA50eb=:3Fsp"@5pF[4>SZK@Qkns0ekC:0ek\"0em*G4q0V10K!?(+?VA50eb=:3Fsp"@:_V34>SZKA3M+u0ekC:0ek\"0em*K4q0V10K!E*+?VA50eb=:3Fsp"@Q6O\4>SZKAj.>"0ekC:0ek\"0em-G4q0V10K(UK+?VA50eb=:3Fsp"@UhS24>SZL0g6^B0ekC:0ek\"4q0V10K([M+?VA50ekC;3Fsp"@5pF[4>SZL1HlpD0ekC;0ek\"0em*G4q0V10K(aO+?VA50ekC;3Fsp"@:h\44>SZL2*N-F0ekC;0ek\"0em-G4q0V10K(gQ+?VA50ekC;3Fsp"@UhS24>SZL2a/?H0ekC;0ek\"4q0V10K(mS+?VA50etI<3Fsp"@5pF[4>SZL3BeQJ0ekC<0ek\"0em*G4q0V10K*?''+?VA50etI<3Fsp"@:h\44>SZL@Qkns0ekC<0ek\"0em,r4q0V10K*E)+?VA50etI<3Fsp"@Q6O\4>SZLA3M+u0ekC<0ek\"0em-G4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QF#2J#&p4>AQF1,1LDAMGoK@m1>a1GC_!4s2sB0ekF<0f`f/%6QF*@5''kf4>^V''1Hl711H/`#4s2sEAM@XY%6QF*@5g@m4>^V(0g6%/1H/`Q4s2sEAMIa[%6QF*@:_VF4>^V)A3LGb1H/`S4s2sEAMZ)*%6QF*@PU+i4>^V*@Qk5`1H/c#4s2sEAMc8.%6QF*@Q$Cm4>^V+@Qk5`1H/cO4s2sEAMlA0%6QF*@k^(h4>^V-@Qk5`1H/eu4s2sEAN"''_%6QF*@kp4j4>^V.1Hl711H/f$4s2sEAN+0a%6QF*@l?Ln4>^V/1-Q.01H/f&4s2sEAN2S3%6QF*@lQXp4>^V/3''Id61H/fQ4s2sEAN46b%6QF*A2-7j4>^V03''Id61H/i"4s2sEAN=3`%6QF*A2?Cl4>^V0ANgPc1H/i)4s2sEARRP^%6QF*A7[qI4>^VY2EhR41H/iV4s2sEAR](3%6QF*AMQFl4>^VZ1d2@21H/l$4s2sEARdY_%6QF*AMu^p4>^VZA3LGb1H/lU4s2sEARo=8%6QF*AS"%J4>^V[Aj-Yd1H/o$4s2sEAS*V[%6QF*AhuUn4>^V]1-Q.01H/o(4s2sEAS,C8%6QF*AiDmr4>^Y(0g6%/1H7''B4s2sEAhms^%6QF+0JPa64>^Y+1d2@21H7''D4s2sEAhu>/%6QF+0Jbm84>^Y+3''Id61H7''F4s2sEAi!jZ%6QF+0K20<4>^Y,1Hl711H7*C4s2sEAi2G0%6QF+0f;-;4>^Y.3Bdm71H7*K4s2sEAiDM0%6QF+0f_E?4>^Y/2EhR41H7*t4s2sEAiF-^%6QF+0k<Hj4>^Y00g6%/1H7-D4s2sEAiM\4%6QF+1,1s84>^Y03''Id61H7-H4s2sEAiO<b%6QF+1,V6<4>^Y0Aj-Yd1H7-J4s2sEAiVS0%6QF+1,hB>4>^Y12EhR41H7-L4s2sEAiVh7%6QF+1-%N@4>^Y1@Qk5`1H7-u4s2sEAiXBc%6QF+11i]m4>^YZAj-Yd1H70J4s2sEAn,C9%6QF+1H%E>4>^Y\0g6%/1H70N4s2sEAn3ha%6QF+1LWHi4>^Y\@6P,_1H71"4s2sEAn5F9%6QF+1bh0:4>^Y^0g6%/1H73H4s2sEAnEh_%6QF+1c%<<4>^Y^2*MI31H73J4s2sEAnF"d%6QF+1c7H>4>^Y^@6P,_1H73L4s2sF0JG7G%6QF+1cIT@4>efH2EhR41H73N4s2sF0JGLN%6QF+1c[`B4>efH@Qk5`1H74"4s2sF0JI$$%6QF+1h8cm4>efI2EhR41H76G4s2sF0JR''$%6QF+2)@E=4>efJ0g6%/1H77&4s2sF0Jd0%%6QF+2.\ro4>efL1Hl711H79J4s2sF0JmB*%6QF+2D[N>4>efM2*MI31H79L4s2sF0K!9&%6QF+2DmZ@4>efM@m1>a1H79N4s2sF0K(dP%6QF+2IScl4>efO3''Id61H7:%4s2sF0K:aM%6QF+2Ieon4>efP2*MI31H7:''4s2sF0K<T,%6QF+2J#&p4>efQ0g6%/1H7<N4s2sF0Ocn''%6QF+2`<iB4>eg%2a.[51H7<P4s2sF0OeTW%6QF+2`NuD4>eg&2*MI31H7=&4s2sF0On]Y%6QF+2e,#o4>eg''0g6%/1H7=*4s2sF0P"TU%6QF+3&!N=4>eg''ANgPc1H7?K4s2sF0P*+*%6QF+3&3Z?4>eg(2a.[51H7?M4s2sF0P+cY%6QF+3&EfA4>eg)3Bdm71H7?O4s2sF0P4cX%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>SrV3BeQJ2)-dA4q0V13&k>1+?VM90K)*(4>SrV@Qkns2)-dF4q0V13&kD3+?VM90etp%4>SrVA3M+u2)-gt4q0V13&kJ5+?VM91,1s%4>SrVAj.>"2)-jp4q0V13&rZV+?VM91GV-''4>SrW0g6^B2)-mG4q0V13&r`X+?VM91LWHV4>SrW1HlpD2)-ms4q0V13+4O*+?VM92)7?)4>Ss*1-QgC2)-su4q0V13+4U,+?VM92DRH*4>Ss*1d3$E2).!H4q0V13+6>]+?VM92_dK*4>Ss+1-QgC2).%"4q0V13+=[-+?VM93&!N*4>Ss+1d3$E2).''K4q0V13+=a/+?VM93+4u[4>Ss+2Ei6G2).($4q0V13+=g1+?VM93ANc-4>Ss+3''JHI2).*K4q0V13+=m3+?VM93B'',24>Ss+@6Per2)/Mn4q0V13+?>\+?VM9@5U4X4>Ss+@m2"t2)/NJ4q0V13+?D^+?VM9@:MJ14>Ss,0KpUA2)/QN4q0V13+F[,+?VM9@l-@Y4>Ss,1-QgC2)/T!4q0V13+Fa.+?VM9@lZ^^4>Ss,@6Per2)/Ys4q0V13+HJ_+?VM9Ai;g^4>Ss-0g6^B2)/]R4q0V13+Od.+?VM:0JG["4>Ss-1HlpD2)6jA4q0V13+Os3+?VM:0O[-S4>Ss-3''JHI2)6js4q0V13+P$5+?VM:0ekj$4>Ss-@6Per2)6mF4q0V13+QJ^+?VM:0k<HW4>Ss.0KpUA2)6pu4q0V13+Xg.+?VM:1GD!%4>Ss.3''JHI2)7!E4q0V13+Y*6+?VM:1cIT-4>Ss.ANh5!2)7$G4q0V13+Z\c+?VM:2)[W-4>Ss/0KpUA2)7$u4q0V13+am/+?VM:2.Sl[4>Ss/1-QgC2)7''E4q0V13+b$3+?VM:2J,,^4>Ss/2Ei6G2)7*G4q0V13+b*5+?VM:2`3c.4>Ss/3''JHI2)7+$4q0V13+b07+?VM:2eG5_4>Ss/@6Per2)7-I4q0V13+c_c+?VM:3+P2^4>Ss/Aj.>"2)70H4q0V13A<-N+?VM:3ANc-4>SuO0g6^B2)71$4q0V13A<HW+?VM:@V%_44>SuO@6Per2)8Yr4q0V13A=o++?VM:@l$:X4>SuO@m2"t2)8Z!4q0V13A=u-+?VM:@lHR\4>SuOANh5!2)8Z%4q0V13A>&/+?VM:@q7b44>SuP0KpUA2)8\t4q0V13AEBT+?VM:A7@_34>SuP@m2"t2)8c"4q0V13AG&.+?VM:Ai2a]4>SuPANh5!2)8c''4q0V13ANBS+?VM;0Ju$''4>SuQ1d3$E2)?pG4q0V13ANHU+?VM;0P!?V4>SuQ@Qkns2)?sI4q0V13AP/0+?VM;1,D*''4>SuQAj.>"2)@!r4q0V13AW?Q+?VM;11i]Z4>SuR0g6^B2)@$K4q0V13AY,.+?VM;1h8cZ4>SuS0KpUA2)@*K4q0V13A`HS+?VM;2.8ZX4>SuS1-QgC2)@+"4q0V13A`NU+?VM;2.\r\4>SuS1d3$E2)@-E4q0V13A`TW+?VM;2E!`.4>SuS2Ei6G2)@-M4q0V13Ab50+?VM;2`Eo04>SuSA3M+u2)@1%4q0V13Ab;2+?VM;2eG5_4>SuSAj.>"2)@3K4q0V13AiKS+?VM;3AWi.4>SuT0g6^B2)@6P4q0V13AiQU+?VM;3FP)\4>SuT2a/?H2)AZO4q0V13Aic[+?VM;@U_M14>SuT3BeQJ2)A_u4q0V13AkA3+?VM;@q7b4ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1H@=)4s2sF1Lr=+%6QF,2DRH=4>ep*@Qk5`1H@BL4s2sF1M/U1%6QF,2e>/q4>erM@Qk5`1H@C+4s2sF1biN)%6QF,3&3Z?4>erN2EhR41H@EN4s2sF1bq''T%6QF,3&EfA4>erN@Qk5`1H@EP4s2sF1c$pO%6QF,3+4un4>erOANgPc1H@F(4s2sF1c-sO%6QF,3+G,p4>erP3''Id61H@F*4s2sF1c/W)%6QF,3+Y8r4>erQ0g6%/1H@F,4s2sF1c@<W%6QF,3A<W>4>erR@6P,_1H@HM4s2sF1cI-Q%6QF,3ANc@4>erS1Hl711H@HO4s2sF1cI9U%6QF,3B'',E4>erT0Koq.1H@HT4s2sF1cRBW%6QF,3B98G4>erT@m1>a1H@I(4s2sF1cT&1%6QF,3FY/p4>erU0Koq.1H@I*4s2sF1gr4)%6QF,3Fk;r4>es(3''Id61HAkt4s2sF1h&7)%6QF,@50qg4>es)3''Id61HAl!4s2sF1h''uZ%6QF,@5U4k4>es*1d2@21HAl''4s2sF1hAC*%6QF,@6$Lo4>es,2*MI31HAlP4s2sF1hAX1%6QF,@:VPE4>es-1-Q.01HAlT4s2sF1hL/[%6QF,@:h\G4>euM1d2@21HAo"4s2sF2)&T*%6QF,@P^1j4>euN0Koq.1HAo$4s2sF2)/T)%6QF,@Pp=l4>euOAj-Yd1HAo&4s2sF2)?sN%6QF,@Q-In4>euP2*MI31HAo(4s2sF2)Af-%6QF,@Q?Up4>euQ1d2@21HAoQ4s2sF2)I3T%6QF,@U_MD4>euQAj-Yd1HAoS4s2sF2)R0R%6QF,@UqYF4>euR2EhR41HAoU4s2sF2)Sr/%6QF,@V.eH4>euS1Hl711HAr!4s2sF2)f#/%6QF,@kg.i4>euU0Koq.1HAr#4s2sF2)mEV%6QF,@q.\F4>f!)2a.[51HAu#4s2sF2.:&[%6QF,A26=k4>f!+2*MI31HAu%4s2sF2.JR/%6QF,A2HIm4>f!,1d2@21HAu''4s2sF2.U,Z%6QF,A2ZUo4>f!,@m1>a1HAu)4s2sF2.U;_%6QF,A7IeG4>f#N2EhR41HAuV4s2sF2D@-T%6QF,A7[qI4>f#O1d2@21HAuX4s2sF2DI-S%6QF,AM?:j4>f#PAj-Yd1HB#$4s2sF2D[*P%6QF,AMQFl4>f#Q1d2@21HB#&4s2sF2D[6T%6QF,AMcRn4>f#S1Hl711HB#(4s2sF2E!NY%6QF,AMu^p4>f#T@Qk5`1HB#*4s2sF2E*HV%6QF,AN2jr4>f#V2EhR41HB#,4s2sF2ISI,%6QF,ARRbF4>f$*@m1>a1HB#U4s2sF2IU/\%6QF,ARdnH4>f$+1d2@21HB#W4s2sF2I^/[%6QF,AS"%J4>f$,@6P,_1HB#Y4s2sF2Ig8]%6QF,AhZCk4>f$-0g6%/1HB&''4s2sF2IpA_%6QF,Ai)[o4>f$.0Koq.1HB&)4s2sF2J+X,%6QF,AmmkG4>f&O3''Id61HB&V4s2sF2_\])%6QF,An+"I4>f&OA3LGb1HB&Z4s2sF2_d3S%6QFT0JG[54>f&P3''Id61LVsl4s2sF2_eo.%6QFT0JYg74>f&Q3''Id61LVsn4s2sF2_no-%6QFT0Jks94>f&R0Koq.1LVsp4s2sF2`"o,%6QFT0K)*;4>f&S0Koq.1LVsr4s2sF2`*9R%6QFT0K;6=4>f&S2a.[51LVst4s2sF2`+r,%6QFT0P*Ej4>f&U0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,e@5):W+?VM?2DdT,4>UD#0KpUA2)dEO4q0V1@50K#+?VM?2IScY4>UD#1-QgC2)dF)4q0V1@50Q%+?VM?2_[E)4>UD#1d3$E2)dHO4q0V1@50W''+?VM?2e,#\4>UD#2Ei6G2)dKM4q0V1@50])+?VM?3&j)24>UD#3''JHI2)dL(4q0V1@50c++?VM?3AWi.4>UD#@6Per2)eqt4q0V1@52:V+?VM?@l$:X4>UD$0KpUA2)f#S4q0V1@59Q$+?VM?@q@h54>UD$1d3$E2)f,$4q0V1@59](+?VM?Ai)[\4>UD$2Ei6G2)f,+4q0V1@59i,+?VM?An+"64>UD$@6Per2)m9D4q0V1@5;:U+?VM@0JYg$4>UD%0g6^B2)m=%4q0V1@5BZ&+?VM@1,1s%4>UD%1HlpD2)m?J4q0V1@5B`(+?VM@1,hB+4>UD%2*N-F2)m@"4q0V1@5D@V+?VM@1LWHV4>UD%ANh5!2)mF)4q0V1@5DLZ+?VM@2).9(4>UD&0KpUA2)mHM4q0V1@5Kc(+?VM@2.8ZX4>UD&1d3$E2)mI)4q0V1@5Ko,+?VM@2DdT,4>UD&3''JHI2)mNP4q0V1@5Ku.+?VM@2`X&24>UD&@6Per2)mO)4q0V1@5MFW+?VM@2e>/^4>UD&@m2"t2)mQO4q0V1@5MLY+?VM@3&Nl/4>UD&ANh5!2)mQU4q0V1@5MR[+?VM@3AWi.4>UD''0KpUA2)mU+4q0V1@5To++?VM@@:_V34>UD''2Ei6G2)o&$4q0V1@5U&/+?VM@@V%_44>UD''@6Per2)o)#4q0V1@5VLX+?VM@@l6FZ4>UD''@m2"t2)o))4q0V1@5VRZ+?VM@@q@h54>UD''ANh5!2)o,$4q0V1@5VX\+?VM@A2?CY4>UD(0KpUA2)o,(4q0V1@5]u,+?VM@AMcR[4>UD(3''JHI2)o/Z4q0V1@5_UZ+?VM@An4(74>UD(A3M+u2*!@&4q0V1@5fu++?VMA0k3BV4>UD)1d3$E2*!EI4q0V1@5g&-+?VMA1,hB+4>UD)@Qkns2*!HI4q0V1@5h[[+?VMA1H.K,4>UD)A3M+u2*!I(4q0V1@5ha]+?VMA1c.B*4>UD*3''JHI2*!NQ4q0V1@5p82+?VMA2.8ZX4>UD*@6Per2*!QK4q0V1@5q^[+?VMA2DRH*4>UD*@m2"t2*!QR4q0V1@6$/.+?VMA2`Nu14>UD+2*N-F2*!U+4q0V1@6$>3+?VMA3+4u[4>UD+@6Per2*!ZQ4q0V1@6%j^+?VMA3B9844>UD+ANh5!2*#)&4q0V1@6%p`+?VMA@5pF[4>UDS0KpUA2*#)T4q0V1@::lS+?VMA@Q?U]4>UDS1-QgC2*#,T4q0V1@::rU+?VMA@V%_44>UDS1d3$E2*#/&4q0V1@:;#W+?VMA@l?L[4>UDS2Ei6G2*#/,4q0V1@:;)Y+?VMA@q%V24>UDT0KpUA2*#5+4q0V1@:CrT+?VMAAN2j_4>UDT1-QgC2*#5V4q0V1@:D#V+?VMAARdn54>UDT1d3$E2*#5Z4q0V1@:D)X+?VMAAiMs`4>UDT2Ei6G2*#8X4q0V1@:D/Z+?VMAAnF494>UDT3''JHI2.80n4q0V1@:D5\+?VMi0Jbm%4>UDT@6Per2.83o4q0V1@:E\0+?VMi0fV?+4>UDU0KpUA2.86t4q0V1@:M#U+?VMi1-%N-4>UDU1-QgC2.8:!4q0V1@:M)W+?VMi1LiTX4>UDU1d3$E2.8<r4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QFT@l6Fm4>gP(2EhR41LXcO4s2sF@5Ku.%6QFT@lHRo4>gP)@6P,_1LXcQ4s2sF@5]l)%6QFT@lZ^q4>gP*2EhR41LXd%4s2sF@6$),%6QFT@q7bG4>gPU1d2@21LXfJ4s2sF@:M,X%6QFTA2-7j4>gPW3Bdm71LXfL4s2sF@:Ne2%6QFTA2?Cl4>gPY0g6%/1LXfN4s2sF@:_>\%6QFTA2QOn4>gPY3Bdm71LXfP4s2sF@PBZ''%6QFTA2c[p4>gS%3Bdm71LXg&4s2sF@PKc)%6QFTA7@_F4>gS''@6P,_1LXg(4s2sF@Pfc&%6QFTA7RkH4>gS)1Hl711LXiO4s2sF@PqRX%6QFTAN)dq4>gS*Aj-Yd1LXj''4s2sF@Q$51%6QFTAR[hG4>gS+@Qk5`1LXj+4s2sF@Q-/.%6QFTAS++K4>gS,3''Id61LXlL4s2sF@Q.^Z%6QFTAhcIl4>gS,@m1>a1LXlN4s2sF@Q65/%6QFTAiMss4>gS-Aj-Yd1LXlU4s2sF@Q?5.%6QFU0K20<4>gSV@m1>a1L`$t4s2sF@UWh3%6QFU0KD<>4>gSW0Koq.1L`''u4s2sF@Uin3%6QFU0f_E?4>gSY0Koq.1L`(L4s2sF@UqD]%6QFU11`Wl4>gS[3''Id61L`+O4s2sF@V0%4%6QFU1GD!84>gV&0g6%/1L`-p4s2sF@k]`''%6QFU1LWHi4>gV''0g6%/1L`.L4s2sF@kfl*%6QFU1LiTk4>gV''3Bdm71L`.N4s2sF@kol)%6QFU1M&`m4>gV(3''Id61L`.P4s2sF@l#i''%6QFU1grQj4>gV*3''Id61L`1M4s2sF@l.XY%6QFU1hAin4>gV+0g6%/1L`1Q4s2sF@l6,-%6QFU2)%3:4>gV+@Qk5`1L`3r4s2sF@l?#)%6QFU2)7?<4>gV,1-Q.01L`4!4s2sF@l@g\%6QFU2)[W@4>gV,Aj-Yd1L`4#4s2sF@lH,+%6QFU2)mcB4>gV-3Bdm71L`4N4s2sF@pq)U%6QFU2.Jfm4>gVW3Bdm71L`4R4s2sF@q%/V%6QFU2D@<;4>gVX1Hl711L`6s4s2sF@q%;Z%6QFU2DdT?4>gVX@6P,_1L`7"4s2sF@q''"5%6QFU2E!`A4>gVY0Koq.1L`7$4s2sF@q7S`%6QFU2E3lC4>gV[0Koq.1L`7&4s2sF@q@V`%6QFU2Ieon4>gV\1d2@21L`7Q4s2sF@qIV_%6QFU2J#&p4>gV\@Qk5`1L`7S4s2sF@qK78%6QFU2_[E<4>gY''2a.[51L`:!4s2sFA2,f&%6QFU2`*]@4>gY(1d2@21L`:%4s2sFA2-).%6QFU2`NuD4>gY)2a.[51L`:''4s2sFA26//%6QFU2e,#o4>gY,0Koq.1L`:R4s2sFA2ZG3%6QFU2e>/q4>gY-@m1>a1L`:T4s2sFA2\$`%6QFU3&!N=4>gY/2a.[51L`<u4s2sFA2n$^%6QFU3&3Z?4>gY0A3LGb1L`="4s2sFA77/U%6QFU3&EfA4>gYX1-Q.01L`=$4s2sFA78n1%6QFU3&WrC4>gYY3''Id61L`=&4s2sFA7At2%6QFU3+4un4>gYZA3LGb1L`=Q4s2sFA7RGZ%6QFU3+G,p4>gY[2EhR41L`@%4s2sFA7]46%6QFU3As&D4>gY\ANgPc1L`@R4s2sFA7dba%6QFU@5''kf4>g\(2EhR41LacI4s2sFAM@UX%6QFU@5:"h4>g\)0g6%/1LacK4s2sFAMH),%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>UGT1d3$E2.\L&4q0V1@UV,X+?VMm0k*<U4>UGT2Ei6G2.\LQ4q0V1@UV2Z+?VMm1,V6)4>UGT3''JHI2.\OP4q0V1@UV8\+?VMm11WQX4>UGT@6Per2.\R"4q0V1@UW_0+?VMm1H%E+4>UGT@m2"t2.\R''4q0V1@UWe2+?VMm1LrZY4>UGU1-QgC2.\U''4q0V1@U_,W+?VMm1h/]Y4>UGU1d3$E2.\X&4q0V1@U_2Y+?VMm2.f#]4>UGV1HlpD2.\a(4q0V1@Uh5Y+?VMm3&a#14>UGV2*N-F2.\aU4q0V1@Uh;[+?VMm3+b>`4>UGV2a/?H2.\d*4q0V1@UhA]+?VMm3B'',24>UGV3BeQJ2.\dV4q0V1@Uih1+?VMm3Fb5^4>UGV@Qkns2.^2M4q0V1@Uit5+?VMm@:DD04>UGVAj.>"2.^3,4q0V1@Uq;Z+?VMm@V%_44>UGW2*N-F2.^8Q4q0V1@UqJ_+?VMmA2$1V4>UGW@6Per2.^;S4q0V1@Urq3+?VMmA2ZU\4>UGX1-QgC2.^?/4q0V1@V%>Z+?VMmAhuU[4>UGX3''JHI2.eNs4q0V1@V%P`+?VMn0Jks&4>UGX@6Per2.eON4q0V1@V''"4+?VMn0P3KX4>UGX@m2"t2.eQt4q0V1@V.AZ+?VMn0k*<U4>UGY1HlpD2.eRT4q0V1@V.M^+?VMn1-%N-4>UGY2a/?H2.eX!4q0V1@V.S`+?VMn1Gq?*4>UGY3BeQJ2.eXQ4q0V1@V0%4+?VMn1LiTX4>UGY@Qkns2.e[)4q0V1@V0+6+?VMn1grQW4>UGYA3M+u2.e[T4q0V1@V018+?VMn1hAi[4>UGYAj.>"2.e^(4q0V1@k]T#+?VMn2)d].4>UJ$0g6^B2.e^+4q0V1@k]Z%+?VMn2.A`Y4>UJ$1HlpD2.ea%4q0V1@k_FW+?VMn2`Eo04>UJ$ANh5!2.ed-4q0V1@k_LY+?VMn2e,#\4>UJ%1HlpD2.eg*4q0V1@kff(+?VMn3&a#14>UJ%ANh5!2.ej[4q0V1@kol)+?VMn@:_V34>UJ&2*N-F2.g;T4q0V1@kor++?VMn@Q-I[4>UJ&2a/?H2.g;X4q0V1@kp#-+?VMn@UqY34>UJ&3BeQJ2.g>S4q0V1@kqIV+?VMn@l6FZ4>UJ''0g6^B2.gDR4q0V1@l#l(+?VMnAR[h44>UJ''1HlpD2.gGX4q0V1@l#r*+?VMnAn4(74>UJ''2*N-F2.gH44q0V1@l$#,+?VP90P3KX4>UJ''2a/?H2D?j@4q0V1@l$).+?VP90fD3)4>UJ''A3M+u2D?mD4q0V1@l,l''+?VP911<?U4>UJ(0g6^B2D?mu4q0V1@l-&,+?VP91h8cZ4>UJ(2Ei6G2D@!B4q0V1@l-,.+?VP92)7?)4>UJ(3''JHI2D@!G4q0V1@l-20+?VP92*!i04>UJ(@6Per2D@"!4q0V1@l6/.+?VP93&Nl/4>UJ)2a/?H2D@*N4q0V1@l7[Y+?VP93A`o/4>UJ)@Qkns2D@-L4q0V1@l?)++?VP9@5g@Z4>UJ*1HlpD2DASo4q0V1@l?80+?VP9@Q$CZ4>UJ*3''JHI2DAT"4q0V1@l@d[+?VP9@l6FZ4>UJ*@m2"t2DAW"4q0V1@l@j]+?VP9A2-7W4>UJ*ANh5!2DAZM4q0V1@l@p_+?VP9A7Ie44>UJ+2*N-F2DA`!4q0V1@lH;0+?VP9Ai;g^4>UJ+@6Per2DHm?4q0V1@lIj\+?VP:0K)*(ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1LiC!4s2sG0ekOL%6QFV3&EfA4>noKAj-Yd1LiC%4s2sG0et[O%6QFV3&WrC4>noM0Koq.1LiC''4s2sG0f(XM%6QFV3&j)E4>noM2a.[51LiC)4s2sG0f*<''%6QFV3+G,p4>noN1-Q.01LiCT4s2sG0f1^N%6QFV3AWiA4>noO1Hl711LiF%4s2sG0f:gP%6QFV3B'',E4>noOA3LGb1LiF)4s2sG0f<Q,%6QFV3FtAs4>noP@Qk5`1LiFW4s2sG0fET,%6QFV@5''kf4>noQ0Koq.1LjiP4s2sG0fWT*%6QFV@5pFn4>noRANgPc1Ljj&4s2sG0f_''S%6QFV@:h\G4>np&1d2@21LjlJ4s2sG0k!")%6QFV@PL%h4>np&3Bdm71LjlN4s2sG0k"WW%6QFV@Pp=l4>np''1-Q.01LjlP4s2sG0k*%)%6QFV@Q-In4>np''@6P,_1LjlR4s2sG0k+]X%6QFV@Q?Up4>np(1Hl711Ljm+4s2sG0kE7,%6QFV@k^(h4>np+1-Q.01LjoO4s2sG0kOiX%6QFV@l6Fm4>np+@m1>a1Ljp''4s2sG1,*-#%6QFVA2-7j4>nrL2EhR41LjrN4s2sG1,33$%6QFVA2?Cl4>nrLAj-Yd1LjrP4s2sG1,:RJ%6QFVA2QOn4>nrM@6P,_1LjrR4s2sG1,<E)%6QFVA2ugr4>nrN1d2@21Ljs(4s2sG1,CgP%6QFVAMQFl4>nrO@Qk5`1LjuP4s2sG1,NN*%6QFVAMcRn4>nrP1Hl711LjuR4s2sG1,V$T%6QFVAMu^p4>nrQANgPc1LjuT4s2sG1,gpO%6QFVAN2jr4>nrR2EhR41LjuV4s2sG1,h3W%6QFVARRbF4>nrR@m1>a1Lk!,4s2sG1,q*S%6QFVAhlOm4>nrT2*MI31Lk#S4s2sG1-&f-%6QFVAi;gq4>ns''@Qk5`1Lk#U4s2sG11Dt%%6QFVAiMss4>ns(2*MI31Lk#W4s2sG11E7-%6QFVAn+"I4>ns)1-Q.01Lr3p4s2sG11i7)%6QFW0etp84>ns,1Hl711Lr3r4s2sG11iI/%6QFW0fD3<4>nuL0g6%/1Lr4!4s2sG1GCaO%6QFW0fV?>4>nuL3Bdm71Lr4#4s2sG1GLUJ%6QFW0k!6g4>nuN@Qk5`1Lr4L4s2sG1GWQ+%6QFW1,(m74>nuP3Bdm71Lr6q4s2sG1GiT*%6QFW1,M0;4>nuQ2*MI31Lr7"4s2sG1H&f.%6QFW1,qH?4>nuS1-Q.01Lr7$4s2sG1H.6V%6QFW11NKj4>nuSAj-Yd1Lr7O4s2sG1H70S%6QFW1GD!84>nuT@m1>a1Lr9r4s2sG1H@3S%6QFW1GV-:4>nuU2EhR41Lr9t4s2sG1H@EY%6QFW1Gh9<4>nuU@Qk5`1Lr:$4s2sG1LW.)%6QFW1LrZl4>o!*0Koq.1Lr:Q4s2sG1Li7*%6QFW1M/fn4>o!*2EhR41Lr<t4s2sG1LrC-%6QFW1c7H>4>o!,0g6%/1Lr=%4s2sG1M/I-%6QFW1h&Wk4>o#MA3LGb1Lr=P4s2sG1b`N*%6QFW1h8cm4>o#N1d2@21Lr?s4s2sG1biK(%6QFW2).9;4>o#O1-Q.01Lr@"4s2sG1c&Q(%6QFW2)RQ?4>o#PANgPc1Lr@$4s2sG1c76V%6QFW2)d]A4>o#S0Koq.1Lr@&4s2sG1c@?X%6QFW2*!iC4>o#SAj-Yd1Lr@R4s2sG1cRHY%6QFW2DIB<4>o#V@6P-3DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,eA2Z2,+?VP=3FtA`4>UM+2*N-F2DeiO4q0V1A2ZD2+?VP=@PBtT4>UM+3BeQJ2Deku4q0V1A2[j[+?VP=@U_M14>UM+@Qkns2Denu4q0V1A2\!_+?VP=@lHR\4>UM+Aj.>"2DeoP4q0V1A2c8-+?VP=A26=X4>UM,1HlpD2Der$4q0V1A2c>/+?VP=A2la^4>UM,2*N-F2DerQ4q0V1A2ds]+?VP=ARdn54>UM,@m2"t2Df#$4q0V1A2e$_+?VP=Ai)[\4>UM,ANh5!2Df#S4q0V1A2e*a+?VP=An=.84>UM-0KpUA2Dm0B4q0V1A2l;-+?VP>0Jks&4>UM-1-QgC2Dm3K4q0V1A2lA/+?VP>0k<HW4>UM-1d3$E2Dm6G4q0V1A2lP4+?VP>11i]Z4>UM-A3M+u2Dm:"4q0V1A2u>-+?VP>1c7H+4>UM.0g6^B2Dm<N4q0V1A2uM2+?VP>2).9(4>UM.3''JHI2Dm@''4q0V1A3"*_+?VP>2E!`.4>UM.ANh5!2DmEK4q0V1A778X+?VP>2e>/^4>UMV2Ei6G2DmHO4q0V1A77D\+?VP>3&a#14>UMV3''JHI2DmI(4q0V1A78q2+?VP>3B'',24>UMV@m2"t2DmKT4q0V1A79(6+?VP>3G(Ga4>UMW0KpUA2Dnnt4q0V1A7@>Y+?VP>@5g@Z4>UMW3''JHI2Dnr&4q0V1A7@P_+?VP>@Q?U]4>UMW@m2"t2Dnu!4q0V1A7B(5+?VP>@l6FZ4>UMX0KpUA2DnuV4q0V1A7I>X+?VP>A26=X4>UMX1-QgC2Do#(4q0V1A7IDZ+?VP>AM?:W4>UMX1d3$E2Do&%4q0V1A7K(4+?VP>AhcIY4>UMX@m2"t2Do)''4q0V1A7RDY+?VP>AnF494>UMY2Ei6G2E!7!4q0V1A7[JZ+?VP?1,V6)4>UMZ1d3$E2E!=$4q0V1A7[_a+?VP?1Gh9)4>UMZ3BeQJ2E!?L4q0V1A7dMZ+?VP?1c[`/4>UM[0g6^B2E!C$4q0V1A7dS\+?VP?1hJo\4>UM[1HlpD2E!EQ4q0V1A7dY^+?VP?2.A`Y4>UM[ANh5!2E!I&4q0V1A7fF;+?VP?2J#&]4>UP&0KpUA2E!I*4q0V1AM?#++?VP?2dnlZ4>UP&2a/?H2E!NO4q0V1AM@RW+?VP?3+Y8_4>UP''0g6^B2E!R+4q0V1AMGr(+?VP?@5''kS4>UP''1HlpD2E"u!4q0V1AMH#*+?VP?@:DD04>UP''2*N-F2E"uT4q0V1AMH2/+?VP?@Q?U]4>UP''@6Per2E##R4q0V1AMIXX+?VP?@V%_44>UP''@m2"t2E#&%4q0V1AMId\+?VP?@lZ^^4>UP(0KpUA2E#)(4q0V1AMPu(+?VP?A2ug_4>UP(1d3$E2E#,#4q0V1AMQ,,+?VP?AMu^]4>UP(2Ei6G2E#/$4q0V1AMRg\+?VP?An+"64>UP)1-QgC2E*<G4q0V1AMZ2-+?VP@0Od3T4>UP)2Ei6G2E*=#4q0V1AMZ>1+?VP@0fM9*4>UP)@6Per2E*@"4q0V1AMc;/+?VP@1GM''&4>UP*2a/?H2E*EK4q0V1AMcA1+?VP@1H%E+4>UP*3BeQJ2E*F#4q0V1AMdgZ+?VP@1LrZY4>UP*@Qkns2E*HN4q0V1AMdm\+?VP@1c[`/4>UP+0g6^B2E*KL4q0V1AMl5,+?VP@2)[W-4>UP+1HlpD2E*L''4q0V1AMlA0+?VP@2Inu\4>UP+@6Per2E*QN4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QFX2.A`l4>o,W2*MI31M&FR4s2sG2`EZZ%6QFX2.Sln4>o,W@Qk5`1M&Hu4s2sG2`N`[%6QFX2DIB<4>o,X3Bdm71M&I"4s2sG2`P81%6QFX2DmZ@4>o,Y1Hl711M&I&4s2sG2`W`Z%6QFX2E*fB4>o,Y2a.[51M&I(4s2sG2`Y;1%6QFX2Inuo4>o--1Hl711M&L"4s2sG2e$>^%6QFX2_mQ>4>o-.1d2@21M&L*4s2sG2e6>\%6QFX2dnlm4>o-/A3LGb1M&LS4s2sG2e>!5%6QFX2e,#o4>o-0@m1>a1M&O&4s2sG2eHM_%6QFX3&NlB4>o-1ANgPc1M&OU4s2sG3&4o+%6QFX3+P2q4>o/SAj-Yd1M&R)4s2sG3&ETY%6QFX3B'',E4>o/UANgPc1M&RV4s2sG3&Y;2%6QFX3Fk;r4>o/X2EhR41M&RX4s2sG3&bG5%6QFX3G(Gt4>o/Y0g6%/1M''uK4s2sG3&icZ%6QFX@50qg4>o/YAj-Yd1M''uO4s2sG3&ro]%6QFX@5U4k4>o/ZA3LGb1M''uQ4s2sG3&tS7%6QFX@:DDC4>o0-A3LGb1M(!,4s2sG3+=[-%6QFX@Pg7k4>o0/3Bdm71M(#Q4s2sG3+HD]%6QFX@Q$Cm4>o0/A3LGb1M(#S4s2sG3+Od.%6QFX@Q6Oo4>o002*MI31M($)4s2sG3+QG]%6QFX@k^(h4>o01ANgPc1M(&N4s2sG3+ap0%6QFX@l-@l4>o2R0Koq.1M(&R4s2sG3A<<S%6QFX@lQXp4>o2S1-Q.01M(&V4s2sG3ANNW%6QFX@pqPD4>o2U0Koq.1M(''*4s2sG3AY20%6QFX@q.\F4>o2UAj-Yd1M('',4s2sG3Ab/.%6QFXA2-7j4>o2W2a.[51M()R4s2sG3AkA3%6QFXA2ugr4>o2X3''Id61M(**4s2sG3At>1%6QFXA7[qI4>o2Y2*MI31M(,Q4s2sG3B8r\%6QFXAMlXo4>o3.2*MI31M(,U4s2sG3FOj1%6QFXAN)dq4>o3.ANgPc1M(,W4s2sG3FXg/%6QFXAN;ps4>o3/@Qk5`1M(-+4s2sG3Fad-%6QFXAR[hG4>o301Hl711M(-04s2sG3Fjg-%6QFXAhZCk4>o323''Id61M(/Q4s2sG3FuV_%6QFXAhlOm4>o33@Qk5`1M(/S4s2sG3G)ec%6QFXAi)[o4>o33Aj-Yd1M(/U4s2sG@5''H#%6QFXAi;gq4>pV%@6P,_1M(/W4s2sG@50K#%6QFXAiMss4>pV&1Hl711M(/Y4s2sG@50])%6QFXAmmkG4>pV&3Bdm71M(0/4s2sG@59Q$%6QFXAn=.K4>pV''1Hl711M(014s2sG@5Bc)%6QFY0Jbm84>pV(A3LGb1M/<t4s2sG@5Kf)%6QFY0Ju$:4>pV)3''Id61M/=!4s2sG@5MFW%6QFY0Od3g4>pV*Aj-Yd1M/=N4s2sG@5]i(%6QFY0P!?i4>pV+@Qk5`1M/=P4s2sG@5or)%6QFY0P3Kk4>pV-1d2@21M/?q4s2sG@5p82%6QFY0f)!94>pV.2a.[51M/?u4s2sG@6%g]%6QFY0fM9=4>pVW1Hl711M/@$4s2sG@:E\0%6QFY0k*<h4>pVY1Hl711M/@Q4s2sG@:hD]%6QFY0kNTl4>pV[@Qk5`1M/Br4s2sG@PBW&%6QFY1,1s84>pY&@6P,_1M/Bt4s2sG@PD:U%6QFY1,D*:4>pY''1-Q.01M/C!4s2sG@PKc)%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>US)2a/?H2I\Et4q0V1Ahl>0+?VPk1GV-''4>US)3BeQJ2I\IN4q0V1Ahmp]+?VPk1h/]Y4>US)Aj.>"2I\LS4q0V1Ahu,)+?VPk2)%3''4>US*0g6^B2I\OU4q0V1AhuD1+?VPk2IScY4>US*3BeQJ2I\U#4q0V1Ai!p\+?VPk2e"r[4>US*A3M+u2I\UW4q0V1Ai)2*+?VPk3&Wr04>US+1HlpD2I\[)4q0V1Ai)>.+?VPk3B0234>US+2*N-F2I\[X4q0V1Ai)J2+?VPk@PU+V4>US+3BeQJ2I^,Q4q0V1Ai*p[+?VPk@Q-I[4>US+@Qkns2I^-(4q0V1Ai+!]+?VPk@UhS24>US+A3M+u2I^--4q0V1Ai+''_+?VPk@kg.V4>US,0g6^B2I^0*4q0V1Ai2>-+?VPk@q7b44>US,1HlpD2I^0.4q0V1Ai4!\+?VPkA7@_34>US,A3M+u2IeF#4q0V1Ai4-`+?VPl0P3KX4>US,Aj.>"2IeHr4q0V1Ai;>,+?VPl0f)!&4>US-0g6^B2IeKu4q0V1Ai;D.+?VPl1Gh9)4>US-2*N-F2IeOS4q0V1Ai;Y5+?VPl1hAi[4>US-@6Per2IeTu4q0V1Ai=*^+?VPl2)RQ,4>US-@m2"t2IeU''4q0V1Ai=0`+?VPl2.8ZX4>US.1-QgC2IeX)4q0V1AiDM0+?VPl2IScY4>US.1d3$E2IeXU4q0V1AiDS2+?VPl2_[E)4>US.2Ei6G2Ie[$4q0V1AiDY4+?VPl2`<i/4>US.3''JHI2Ie[S4q0V1AiMP0+?VPl3+G,]4>US/1HlpD2Iea$4q0V1AiO9a+?VPl@:DD04>US/A3M+u2Ig0,4q0V1AiO?c+?VPl@P^1W4>US03''JHI2Ig5R4q0V1AiX<a+?VPl@q.\34>US0@m2"t2Ig8R4q0V1AiXBc+?VPlA2QO[4>US0ANh5!2Ig8V4q0V1AiXHe+?VPlA7@_34>USX1HlpD2Ig;U4q0V1AmmM[+?VPlAN2j_4>USX2*N-F2Ig<-4q0V1Amm\`+?VPlAhuU[4>USX@m2"t2InNs4q0V1Amo46+?VPm0fM9*4>USXANh5!2InO&4q0V1Amo:8+?VPm0k*<U4>USY0KpUA2InOR4q0V1An!JY+?VPm1,V6)4>USY1-QgC2InR%4q0V1An!V]+?VPm1GV-''4>USY@6Per2InUQ4q0V1An#:7+?VPm1bh0''4>USZ0KpUA2In[T4q0V1An*PZ+?VPm2D[N+4>USZ1-QgC2In^(4q0V1An*\^+?VPm2Ieo[4>USZ2Ei6G2In^W4q0V1An*b`+?VPm2`*]-4>USZ@Qkns2InaY4q0V1An,=7+?VPm3&Nl/4>US[1HlpD2Ing&4q0V1An3_^+?VPm3AWi.4>US[2*N-F2Ing*4q0V1An3e`+?VPm@:h\44>US[2a/?H2Ip8P4q0V1An3kb+?VPm@Pp=Y4>US[3BeQJ2Ip;O4q0V1An5L;+?VPm@q%V24>US\0KpUA2Ip<04q0V1An<\\+?VPmA2-7W4>US\2*N-F2Ip?04q0V1An<ka+?VPmAMH@X4>US\2a/?H2IpAY4q0V1An>C7+?VPmAS"%74>US\@Qkns2IpDS4q0V1An>I9+?VPmAhuU[4>US\A3M+u2IpDW4q0V1AnEh_+?VPn0fM9*4>\`G0KpUA2J"XS4q0V20JG4F+?VPn11i]Z4>\`G1-QgC2J"["4q0V20JG:H+?VPn1Gh9)ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1b^U?4s2sGAMZ5.%6QI$0Ju$:4>pb,3''Id61b^UA4s2sGAM[aY%6QI$0Om9h4>pb-@6P,_1b^Uo4s2sGAMdp]%6QI$0P*Ej4>pb.2EhR41b^Uq4s2sGAMlG2%6QI$0f2'':4>pb/2a.[51b^XA4s2sGAN"!]%6QI$0k!6g4>pb0@6P,_1b^Xn4s2sGAN;G.%6QI$0k3Bi4>pb22EhR41b^Xr4s2sGAN=?d%6QI$1,(m74>pbZ1-Q.01b^[>4s2sGARRG[%6QI$1,M0;4>pbZAj-Yd1b^[B4s2sGAR[AX%6QI$1,_<=4>pb[2EhR41b^[D4s2sGAR](3%6QI$1,qH?4>pb\1-Q.01b^[o4s2sGARd_a%6QI$11`Wl4>pb\ANgPc1b^[s4s2sGARmMZ%6QI$1GV-:4>pb^Aj-Yd1b^^A4s2sGAS*b_%6QI$1Gh9<4>pb_3''Id61b^^G4s2sGAhZ,,%6QI$1LWHi4>pe*Aj-Yd1b^^p4s2sGAhc#(%6QI$1M&`m4>pe,0Koq.1b^aD4s2sGAhuD1%6QI$1c@N?4>pe-Aj-Yd1b^aF4s2sGAi)5+%6QI$1cRZA4>pe/0g6%/1b^aH4s2sGAi2D/%6QI$2)%3:4>pe01-Q.01b^dA4s2sGAi;J0%6QI$2)IK>4>pe10Koq.1b^dE4s2sGAiF-^%6QI$2*!iC4>pe20g6%/1b^dq4s2sGAiMV2%6QI$2.A`l4>pe23''Id61b^du4s2sGAiVP/%6QI$2.f#p4>pe31d2@21b^gA4s2sGAiVe6%6QI$2D[N>4>pe[2a.[51b^gG4s2sGAn!JY%6QI$2E*fB4>pe\1Hl711b^gI4s2sGAn!ba%6QI$2E<rD4>pe\ANgPc1b^h!4s2sGAn,75%6QI$2J,,q4>pe^2*MI31b^jB4s2sGAn5=6%6QI$2`*]@4>pe_1d2@21b^jG4s2sGAn<td%6QI$2`NuD4>pe_Aj-Yd1b^jK4s2sGAnEb]%6QI$2dnlm4>pe`ANgPc1b^jt4s2sH0JG4F%6QI$2e>/q4?"rJ3Bdm71b^k#4s2sH0JHs"%6QI$3&!N=4?"rJAj-Yd1b^mD4s2sH0JP:G%6QI$3&3Z?4?"rK2*MI31b^mF4s2sH0JPON%6QI$3+4un4?"rL1Hl711b^n"4s2sH0J[6(%6QI$3+Y8r4?"rM2a.[51b^n$4s2sH0Jd9(%6QI$3A<W>4?"rN@m1>a1b^pG4s2sH0JtgR%6QI$3A`oB4?"rOA3LGb1b^pI4s2sH0K(^N%6QI$3As&D4?"rP@Qk5`1b^pK4s2sH0K1[L%6QI$3B02F4?"rQ3''Id61b^q!4s2sH0K:pR%6QI$3Fb5q4?"rR@6P,_1b^q#4s2sH0K<W-%6QI$3FtAs4?"rS1-Q.01b`>n4s2sH0OZ\"%6QI$@5C(i4?"s&1d2@21b`>s4s2sH0O\QW%6QI$@5pFn4?"s''1Hl711b`?J4s2sH0Om(+%6QI$@:VPE4?"s(@Qk5`1b`?L4s2sH0On]Y%6QI$@PL%h4?"s)A3LGb1b`Ao4s2sH0P"cZ%6QI$@P^1j4?"s+0g6%/1b`Aq4s2sH0P3=/%6QI$@Pp=l4?"s+A3LGb1b`As4s2sH0ebFJ%6QI$@Q-In4?"uK3Bdm71b`Au4s2sH0ed*$%6QI$@U_MD4?"uLANgPc1b`BK4s2sH0etII%6QI$@UqYF4?"uM2EhR41b`BM4s2sH0f(LI%6QI$@V.eH4?"uN2EhR]DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f0Ole#+?VS;1cIT-4>\a%1HlpD2_d.!4q0V20Olq''+?VS;1hAi[4>\a%2*N-F2_d0D4q0V20Om")+?VS;2)[W-4>\a%2a/?H2_d0M4q0V20Om(++?VS;2.JfZ4>\a%3BeQJ2_d1$4q0V20OnZX+?VS;2E<r14>\a%Aj.>"2_d4#4q0V20Ouk$+?VS;2J#&]4>\a&0g6^B2_d7%4q0V20Ouq&+?VS;3&Ef.4>\a&2*N-F2_d:(4q0V20P!(*+?VS;3ANc-4>\a&2a/?H2_d<L4q0V20P!.,+?VS;3B9844>\a&3BeQJ2_d=)4q0V20P"TU+?VS;@5:"U4>\a&@Qkns2_e`N4q0V20P"ZW+?VS;@PL%U4>\a&Aj.>"2_ecQ4q0V20P)q%+?VS;@kg.V4>\a''0g6^B2_eeu4q0V20P*()+?VS;@q@h54>\a''2*N-F2_ehs4q0V20P*.++?VS;A26=X4>\a''3BeQJ2_eiT4q0V20P3.*+?VS<0K)*(4>\a(2*N-F2_m*A4q0V20P34,+?VS<0k*<U4>\a(2a/?H2_m-s4q0V20P4`W+?VS<1GD!%4>\a(@Qkns2_m0E4q0V20eb@H+?VS<1b_*&4>\cH2Ei6G2_m4"4q0V20ebOM+?VS<2)7?)4>\cH@6Per2_m7"4q0V20ed''#+?VS<2.Sl[4>\cH@m2"t2_m7&4q0V20ed3''+?VS<2E*f/4>\cI0KpUA2_m9O4q0V20ekCH+?VS<2_mQ+4>\cI1-QgC2_m<P4q0V20ekIJ+?VS<2e5)]4>\cI2Ei6G2_nes4q0V20ekUN+?VS<@5g@Z4>\cI3''JHI2_nfO4q0V20ek[P+?VS<@:h\44>\cI@6Per2_nks4q0V20em-$+?VS<@kp4W4>\cI@m2"t2_nl"4q0V20em3&+?VS<@q@h54>\cIANh5!2_nnt4q0V20em9(+?VS<A2c[]4>\cJ0KpUA2_no(4q0V20etII+?VS<AMH@X4>\cJ1-QgC2_nr)4q0V20et[O+?VS=0O[-S4>\cJ3''JHI2`!0H4q0V20f!6&+?VS=1,V6)4>\cK2Ei6G2`!<F4q0V20f(aP+?VS=2)7?)4>\cK3''JHI2`!<M4q0V20f(gR+?VS=2E3l04>\cK@6Per2`!@#4q0V20f*9&+?VS=2_[E)4>\cK@m2"t2`!BJ4q0V20f*?(+?VS=2`3c.4>\cKANh5!2`!BP4q0V20f1UK+?VS=3&Ef.4>\cL1d3$E2`!ER4q0V20f1aO+?VS=3+>&\4>\cL2Ei6G2`!F)4q0V20f1gQ+?VS=3A`o/4>\cL@Qkns2`!I+4q0V20f3B(+?VS=@5g@Z4>\cLA3M+u2`"l&4q0V20f3H*+?VS=@:VP24>\cM0g6^B2`"o''4q0V20f:^M+?VS=@k^(U4>\cM1HlpD2`"r!4q0V20f:pS+?VS=@qIn64>\cM3BeQJ2`"u&4q0V20f<B''+?VS=A2ug_4>\cMA3M+u2`##!4q0V20fCjP+?VS=ARmt64>\cN2*N-F2`#&)4q0V20fCpR+?VS=AiW$a4>\cN3BeQJ2`*3C4q0V20fEH(+?VS>0Jbm%4>\cNANh5!2`*3K4q0V20fEW-+?VS>0f)!&4>\cO0KpUA2`*6u4q0V20fM!S+?VS>1,qH,4>\cP0g6^B2`*<M4q0V20fUpP+?VS>1LWHV4>\cP3''JHI2`*@#4q0V20fV0W+?VS>2)RQ,4>\cP@6Per2`*BN4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI%3ANc@4?#)T1-Q.01bh!M4s2sH1cAr0%6QI%3B98G4?#)UANgPc1bh"#4s2sH1cREX%6QI%3Fk;r4?#)V3Bdm71bh"%4s2sH1cSr.%6QI%3G(Gt4?#)W3''Id61biDm4s2sH1c]&0%6QI%@5C(i4?#**0g6%/1biDq4s2sH1gr1(%6QI%@5U4k4?#**2*MI31biDu4s2sH1gsfV%6QI%@6$Lo4?#*+0Koq.1biEI4s2sH1h&4(%6QI%@:DDC4?#*+2*MI31biEK4s2sH1h&I/%6QI%@:VPE4?#*+A3LGb1biEM4s2sH1h(&\%6QI%@:h\G4?#*,2EhR41biGn4s2sH1h0rX%6QI%@PL%h4?#*,Aj-Yd1biGp4s2sH1h8F,%6QI%@P^1j4?#*-3''Id61biGr4s2sH1h:#Y%6QI%@Pp=l4?#*-@m1>a1biGt4s2sH1hA@)%6QI%@Q?Up4?#*.2EhR41biHJ4s2sH1hC5^%6QI%@U_MD4?#*/2a.[51biHL4s2sH2)$aK%6QI%@UqYF4?#,O1d2@21biHN4s2sH2)-gL%6QI%@V.eH4?#,P2*MI31biJo4s2sH2).''S%6QI%@l$:k4?#,PAj-Yd1biJs4s2sH2)6sO%6QI%@lHRo4?#,Q3''Id61biMp4s2sH2)AZ)%6QI%A2-7j4?#,S2a.[51biMr4s2sH2)Jf,%6QI%A2?Cl4?#,SAj-Yd1biMt4s2sH2)R*P%6QI%A2c[p4?#,T3Bdm71biNM4s2sH2)[3R%6QI%A7[qI4?#,U@6P,_1biPt4s2sH2)dKY%6QI%AMcRn4?#,V@6P,_1biQ!4s2sH2)f,2%6QI%ARdnH4?#,X0g6%/1biQP4s2sH2*#22%6QI%AS"%J4?#-+2*MI31biQR4s2sH2.9rX%6QI%AhuUn4?#-,2*MI31biT&4s2sH2.JC*%6QI%AmmkG4?#--2*MI31biTO4s2sH2.JR/%6QI%An+"I4?#--A3LGb1biTQ4s2sH2.SI+%6QI&0JYg74?#-.@Qk5`1bpa@4s2sH2.\O,%6QI&0Jks94?#-00Koq.1bpaB4s2sH2.eU-%6QI&0K)*;4?#-01d2@21bpaD4s2sH2.g8\%6QI&0K;6=4?#-0@m1>a1bpaF4s2sH2D?gK%6QI&0O[-f4?#/PA3LGb1bpao4s2sH2DI3U%6QI&0ebd64?#/R1d2@21bpd?4s2sH2DR0S%6QI&0etp84?#/S@Qk5`1bpdA4s2sH2Dd0Q%6QI&0f2'':4?#/T@m1>a1bpdC4s2sH2Deu/%6QI&0fD3<4?#/U1-Q.01bpdE4s2sH2DmBV%6QI&0fV?>4?#/V0g6%/1bpdG4s2sH2E!BU%6QI&0k!6g4?#/V3Bdm71bpdp4s2sH2E#&/%6QI&0k3Bi4?#/W0Koq.1bpdr4s2sH2E*BT%6QI&0kENk4?#/W3''Id61bpgB4s2sH2E3NW%6QI&1,_<=4?#/XANgPc1bpgF4s2sH2E<HT%6QI&1,qH?4?#/Y1Hl711bpgH4s2sH2IU/\%6QI&11<?h4?#0-@6P,_1bpgq4s2sH2I^8^%6QI&11`Wl4?#0.2EhR41bpgu4s2sH2Ie^1%6QI&1GD!84?#0.@6P,_1bpjA4s2sH2InR,%6QI&1GV-:4?#0/2EhR41bpjG4s2sH2J"U,%6QI&1LWHi4?#002a.[51bpjr4s2sH2J$G`%6QI&1LiTk4?#011-Q.01bpjt4s2sH2J+d0%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>\fLANh5!2`>8-4q0V21,EN++?VS@An+"64>\fM0KpUA2`>8Z4q0V21,L^L+?VSA0JPa#4>\fM1-QgC2`EEI4q0V21,LjP+?VSA0Od3T4>\fM2Ei6G2`EI&4q0V21,LpR+?VSA1,(m$4>\fM3''JHI2`EKP4q0V21,NH(+?VSA1LWHV4>\fM@m2"t2`EO&4q0V21,NN*+?VSA1b_*&4>\fMANh5!2`ER(4q0V21,NT,+?VSA2.A`Y4>\fN0KpUA2`EWL4q0V21,UdM+?VSA2D[N+4>\fN1-QgC2`EWQ4q0V21,UjO+?VSA2I\iZ4>\fN1d3$E2`EZU4q0V21,V!S+?VSA3+>&\4>\fN3''JHI2`E`O4q0V21,V''U+?VSA3FtA`4>\fN@6Per2`G/&4q0V21,WT++?VSA@PBtT4>\fNANh5!2`G2%4q0V21,^jN+?VSA@V.e54>\fO1-QgC2`G8+4q0V21,_''T+?VSAAMlX\4>\fO3''JHI2`G;.4q0V21,`W++?VSAAhuU[4>\fOA3M+u2`NKH4q0V21,`]-+?VSB0etp%4>\fP1-QgC2`NR&4q0V21,h!Q+?VSB1GV-''4>\fP1d3$E2`NTM4q0V21,h''S+?VSB1c7H+4>\fP2Ei6G2`NX+4q0V21,h-U+?VSB2.Sl[4>\fP@6Per2`N^-4q0V21,iZ++?VSB2e,#\4>\fP@m2"t2`NcO4q0V21,i`-+?VSB3&a#14>\fQ0g6^B2`NfP4q0V21,q$Q+?VSB3B'',24>\fQ1HlpD2`P5%4q0V21,q*S+?VSB@5g@Z4>\fQ2*N-F2`P5+4q0V21,q9X+?VSB@kg.V4>\fQ@6Per2`P;)4q0V21,rf.+?VSB@q@h54>\fQANh5!2`P>%4q0V21,rl0+?VSBAN2j_4>\fR0KpUA2`PAY4q0V21-%''Q+?VSBAS++84>\fR1-QgC2`PD,4q0V21-%-S+?VSBAn!q54>\fR1d3$E2`WQH4q0V21-%3U+?VSC0P*EW4>\fR2Ei6G2`WTN4q0V21-&c,+?VSC1LWHV4>\fR@Qkns2`W[*4q0V211;n$+?VSC2)%3''4>\g%3BeQJ2`WcM4q0V211=TT+?VSC2DmZ-4>\g%@Qkns2`WcU4q0V211=ZV+?VSC2Inu\4>\g%A3M+u2`Wg*4q0V211=`X+?VSC2eG5_4>\g%Aj.>"2`WiP4q0V211E%''+?VSC3AE],4>\g&2Ei6G2`Y;T4q0V211E1++?VSC@:_V34>\g&3''JHI2`Y>%4q0V211E7-+?VSC@P^1W4>\g&@6Per2`Y>-4q0V211N1*+?VSCA2QO[4>\g''2Ei6G2`YD.4q0V211N7,+?VSCA7e"74>\g''3''JHI2`YG+4q0V211OcW+?VSCAN;p`4>\g''@m2"t2`YJZ4q0V211OiY+?VSk0JG["4>\g''ANh5!2dnBt4q0V211Oo[+?VSk0K;6*4>\g(0KpUA2dnCL4q0V211W+''+?VSk0P!?V4>\g(1-QgC2dnEt4q0V211W1)+?VSk0fM9*4>\g(2Ei6G2dnFN4q0V211WC/+?VSk11`WY4>\g(@6Per2dnKs4q0V211`4)+?VSk1c@N,4>\g)1HlpD2dnO''4q0V211`@-+?VSk2)d].4>\g)3BeQJ2dnU)4q0V211alX+?VSk2I\iZ4>\g)@Qkns2dnX!4q0V211arZ+?VSk2`*]-4>\g)A3M+u2dnX''4q0V211i4(+?VSk2e5)]ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1brYt4s2sH@5hd^%6QI&AhlOm4?$\.0g6%/1brZ!4s2sH@5p)-%6QI&Ai)[o4?$\.3''Id61brZ%4s2sH@6$2/%6QI&AiMss4?$\/3''Id61brZ''4s2sH@6%p`%6QI&An=.K4?$\X@6P,_1brZT4s2sH@:M,X%6QI''0JG[54?$\Y2*MI31c$g?4s2sH@:M5[%6QI''0Jks94?$\Z2a.[51c$gC4s2sH@:VA^%6QI''0K)*;4?$\ZA3LGb1c$gG4s2sH@:_5Y%6QI''0O[-f4?$\[2*MI31c$gp4s2sH@:`k2%6QI''0Om9h4?$\[A3LGb1c$gr4s2sH@:a%7%6QI''0P*Ej4?$\\2EhR41c$j@4s2sH@:j+8%6QI''0etp84?$_''Aj-Yd1c$jB4s2sH@PKT$%6QI''0f2'':4?$_(3Bdm71c$jD4s2sH@PM=U%6QI''0fD3<4?$_(ANgPc1c$jF4s2sH@PTW$%6QI''0fV?>4?$_)2EhR41c$jq4s2sH@P^#.%6QI''0k3Bi4?$_+2EhR41c$js4s2sH@Pg)/%6QI''1,V6<4?$_,1d2@21c$mF4s2sH@Pp&-%6QI''1,hB>4?$_-0Koq.1c$mH4s2sH@Q%^[%6QI''1-%N@4?$_-ANgPc1c$mq4s2sH@Q-/.%6QI''11EEi4?$_.A3LGb1c$ms4s2sH@Q6;1%6QI''11WQk4?$_/@Qk5`1c$mu4s2sH@Q7s`%6QI''1GM''94?$_02a.[51c$pC4s2sH@Q@j\%6QI''1G_3;4?$_0A3LGb1c$pE4s2sH@UUuT%6QI''1Gq?=4?$_XA3LGb1c$pG4s2sH@U_&U%6QI''1H.K?4?$_Y1d2@21c$pI4s2sH@U_;\%6QI''1L`Nj4?$_Z1d2@21c$q!4s2sH@UhD^%6QI''1M/fn4?$_[1-Q.01c$sB4s2sH@V%5W%6QI''1bh0:4?$_\1d2@21c$sD4s2sH@V%P`%6QI''1c%<<4?$b(2a.[51c$sF4s2sH@kf`&%6QI''1c7H>4?$b)ANgPc1c$sH4s2sH@koc&%6QI''1cIT@4?$b*2a.[51c$t!4s2sH@l,u*%6QI''2)%3:4?$b.0Koq.1c%!D4s2sH@l?/-%6QI''2)7?<4?$b.@m1>a1c%!F4s2sH@lH2-%6QI''2)IK>4?$b01Hl711c%!H4s2sH@lQJ4%6QI''2)[W@4?$b11-Q.01c%!J4s2sH@lZD1%6QI''2.8Zk4?$b1Aj-Yd1c%!u4s2sH@pq5Y%6QI''2.Jfm4?$bY2a.[51c%""4s2sH@prq4%6QI''2DIB<4?$bZ3Bdm71c%$F4s2sH@q''"5%6QI''2D[N>4?$b[@6P,_1c%$H4s2sH@q7J]%6QI''2E3lC4?$b]2a.[51c%$M4s2sH@qK16%6QI''2IScl4?$b^ANgPc1c%%!4s2sHA2#]$%6QI''2Ieon4?$e)1-Q.01c%''I4s2sHA2%OX%6QI''2`3cA4?$e*0Koq.1c%''K4s2sHA2,o)%6QI''3&EfA4?$e,1Hl711c%*K4s2sHA2?),%6QI''3+P2q4?$e.0Koq.1c%+&4s2sHA2Rp^%6QI''3AE]?4?$e/2EhR41c%-I4s2sHA2ZD2%6QI''3AWiA4?$e/@6P,_1c%-K4s2sHA2\!_%6QI''3B02F4?$e02EhR41c%-P4s2sHA2cM4%6QI''3FP)o4?$e0Aj-Yd1c%.&4s2sHA2uG0%6QI''3FtAs4?$e2@m1>a1c%.(4s2sHA77/U%6QI''@5''kf4?$eZ1-Q.YDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f1LW4++?VSn@Q6O\4>\j&A3M+u2e6DW4q0V21L`%%+?VSnA2ZU\4>\j''0g6^B2e6GY4q0V21L`+''+?VSnA77Y24>\j''2a/?H2e6JU4q0V21LacV+?VSnARdn54>\j''@Qkns2e6K34q0V21LaiX+?VSnAi)[\4>\j''A3M+u2e6N04q0V21Li+&+?VSo0f;-(4>\j(0g6^B2e=^Q4q0V21Li:++?VSo1,1s%4>\j(2Ei6G2e=a#4q0V21Li@-+?VSo11EEV4>\j(@6Per2e=d"4q0V21LjlX+?VSo1H.K,4>\j(ANh5!2e=g#4q0V21Lk#\+?VSo1c%<)4>\j)1-QgC2e=j%4q0V21Lr@,+?VSo2.\r\4>\j)2Ei6G2e=m%4q0V21LsoX+?VSo2Inu\4>\j)@Qkns2e=p%4q0V21LsuZ+?VSo2`X&24>\j)A3M+u2e=pX4q0V21Lt&\+?VSo3&3Z,4>\j)Aj.>"2e=sY4q0V21M&7(+?VSo3+b>`4>\j*0g6^B2e>!*4q0V21M&=*+?VSo3As&14>\j*1HlpD2e>!/4q0V21M&I.+?VSp1H%E+4>\j*2a/?H2eFj*4q0V21M&O0+?VSp1LWHV4>\j*3BeQJ2eFmV4q0V21M''uY+?VSp2)%3''4>\j*Aj.>"2eFsZ4q0V21M/=)+?VSp2_[E)4>\j+0g6^B2eG!(4q0V21M/C++?VSp2`3c.4>\j+1HlpD2eG!-4q0V21M/I-+?VSp2`X&24>\j+2*N-F2eG$,4q0V21M/O/+?VSp3&j)24>\j+2a/?H2eG$X4q0V21M/U1+?VSp3+G,]4>\j+3BeQJ2eG$\4q0V21M1&Z+?VSp3A`o/4>\j+@Qkns2eG''Y4q0V21M1,\+?VSp3FtA`4>\j+A3M+u2eHJT4q0V21b^UI+?VSp@PU+V4>\lK1HlpD2eHN04q0V21b^aM+?VSp@kg.V4>\lK2*N-F2eHPW4q0V21b^gO+?VSp@pqP14>\lK2a/?H2eHQ04q0V21b^mQ+?VSp@q@h54>\lK3BeQJ2eHSU4q0V21b`N*+?VSpAN;p`4>\lL0KpUA2eHW14q0V21bg^K+?VSpAhZCX4>\lL1-QgC2eHY^4q0V21bgdM+?VSpAn+"64>\lL2Ei6G3&!$B4q0V21bh!S+?VV;0KD<+4>\lL@6Per3&!$r4q0V21biH''+?VV;0ebd#4>\lL@m2"t3&!''E4q0V21biT++?VV;11WQX4>\lM0KpUA3&!-E4q0V21bpdL+?VV;1H%E+4>\lM1-QgC3&!.!4q0V21bpjN+?VV;1M/f[4>\lM1d3$E3&!0F4q0V21bppP+?VV;1c@N,4>\lM2Ei6G3&!0t4q0V21bq!R+?VV;2)[W-4>\lM3''JHI3&!3L4q0V21bq''T+?VV;2.8ZX4>\lM@6Per3&!4$4q0V21brZ,+?VV;2`Eo04>\lN2a/?H3&!<P4q0V21c&Q(+?VV;3As&14>\lN@Qkns3&!@%4q0V21c&W*+?VV;3Fk;_4>\lNAj.>"3&"bu4q0V21c-sO+?VV;@:h\44>\lO2*N-F3&"eu4q0V21c.*S+?VV;@UVG04>\lO3BeQJ3&"iP4q0V21c/W)+?VV;@q@h54>\lOA3M+u3&"lS4q0V21c/c-+?VV;AMH@X4>\lP0g6^B3&"r!4q0V21c7$P+?VV;Ai)[\4>\lP1HlpD3&"r(4q0V21c7*R+?VV;An4(74>\lP2*N-F3&**B4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI(2.8Zk4?,&L@6P,_1c.(!4s2sI0ekXO%6QI(2.\ro4?,&N1Hl711c.(%4s2sI0etaQ%6QI(2D@<;4?,&N@Qk5`1c.*F4s2sI0f!?)%6QI(2DRH=4?,&O3Bdm71c.*H4s2sI0f*B)%6QI(2DdT?4?,&P@Qk5`1c.*J4s2sI0f3H*%6QI(2Ieon4?,&R@Qk5`1c.-J4s2sI0fV-V%6QI(2`3cA4?,&T@6P,_1c.-L4s2sI0fWc/%6QI(2`EoC4?,&U@6P,_1c.."4s2sI0jub"%6QI(2e"rn4?,''(1Hl711c..$4s2sI0k!%*%6QI(2e5)p4?,'')1Hl711c..&4s2sI0k*"(%6QI(2eG5r4?,'')@6P,_1c.0K4s2sI0k2t&%6QI(3&NlB4?,''*2EhR41c.0M4s2sI0k4`X%6QI(3&a#D4?,''+3''Id61c.0O4s2sI0k=l[%6QI(3&s/F4?,'',1Hl711c.1#4s2sI0kE4+%6QI(3+P2q4?,'',@6P,_1c.1''4s2sI0kFlZ%6QI(3A`oB4?,''-ANgPc1c.3M4s2sI1,(RL%6QI(3B02F4?,)M@6P,_1c.4%4s2sI1,1OJ%6QI(@5''kf4?,)O0g6%/1c/W"4s2sI1,CpS%6QI(@5pFn4?,)Q0Koq.1c/W$4s2sI1,LjP%6QI(@:;>B4?,)Q2a.[51c/WM4s2sI1,V''U%6QI(@:MJD4?,)S1d2@21c/WO4s2sI1,_$S%6QI(@PU+i4?,)T2EhR41c/Yt4s2sI1,h0V%6QI(@Pg7k4?,)TANgPc1c/Z!4s2sI1,r`,%6QI(@Q6Oo4?,)V1-Q.01c/ZN4s2sI1-&l/%6QI(@UhSE4?,)VAj-Yd1c/ZR4s2sI11<1,%6QI(@l-@l4?,**0g6%/1c/]"4s2sI11E%''%6QI(@q.\F4?,**Aj-Yd1c/_t4s2sI11W=-%6QI(A26=k4?,*,@Qk5`1c/`#4s2sI11`1(%6QI(A2ugr4?,*.0g6%/1c/bu4s2sI1GCgQ%6QI(AMQFl4?,,O2a.[51c/c"4s2sI1GUpR%6QI(AMcRn4?,,P@Qk5`1c/c$4s2sI1GWQ+%6QI(AMu^p4?,,Q0g6%/1c/cR4s2sI1GgdL%6QI(ARmtI4?,,R2a.[51c/eu4s2sI1Gi]-%6QI(AhuUn4?,,U1Hl711c/f$4s2sI1H.6V%6QI(Ai2ap4?,,U@Qk5`1c/f(4s2sI1H8r0%6QI(AiW$t4?,,W2EhR41c/fQ4s2sI1H@EY%6QI(An!qH4?,,WANgPc1c/fS4s2sI1LW%&%6QI)0JG[54?,-+A3LGb1c6sA4s2sI1Li.''%6QI)0JYg74?,-,2*MI31c6sE4s2sI1LjoY%6QI)0K)*;4?,--1Hl711c6sG4s2sI1LrC-%6QI)0K;6=4?,--@m1>a1c6sI4s2sI1M&R1%6QI)0O[-f4?,-.@Qk5`1c6t!4s2sI1M/I-%6QI)0ebd64?,-/3Bdm71c7!B4s2sI1M1/]%6QI)0f2'':4?,/O@6P,_1c7!I4s2sI1bq''T%6QI)0f_E?4?,/Q@m1>a1c7!r4s2sI1c$jM%6QI)0k*<h4?,/R3''Id61c7!t4s2sI1c&Z+%6QI)0k<Hj4?,/S3Bdm71c7"!4s2sI1c73U%6QI)0kNTl4?,/T@Qk5`1c7$B4s2sI1c@''P%6QI)1,1s84?,/U1Hl711c7$D4s2sI1c@6U%6QI)1,V6<4?,/UAj-Yd1c7$H4s2sI1cI9U%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>\oN2a/?H3&ER&4q0V22)7-T+?VV?3A<W+4>\oN3BeQJ3&EWP4q0V22)8T(+?VV?3B9844>\oN@Qkns3&EX*4q0V22)8Z*+?VV?@50qT4>\oNA3M+u3&G)"4q0V22)8`,+?VV?@Q6O\4>\oO1HlpD3&G,#4q0V22)@''Q+?VV?@l-@Y4>\oO2*N-F3&G,''4q0V22)@-S+?VV?@lZ^^4>\oO2a/?H3&G,S4q0V22)@3U+?VV?@q7b44>\oO3BeQJ3&G/#4q0V22)AZ)+?VV?A77Y24>\oO@Qkns3&G2V4q0V22)A`++?VV?AS"%74>\oOA3M+u3&G5(4q0V22)Af-+?VV?An+"64>\oOAj.>"3&NEF4q0V22)I-R+?VV@0k!6T4>\oP2*N-F3&NF%4q0V22)I3T+?VV@1,1s%4>\oP2a/?H3&NHI4q0V22)I9V+?VV@1,V6)4>\oP@Qkns3&NI''4q0V22)Jf,+?VV@1LrZY4>\oPA3M+u3&NL(4q0V22)Jl.+?VV@1bh0''4>\oPAj.>"3&NNK4q0V22)R''O+?VV@1c[`/4>\oQ0g6^B3&NO(4q0V22)R-Q+?VV@2)@E*4>\oQ1HlpD3&NQR4q0V22)R3S+?VV@2D[N+4>\oQ3''JHI3&NU)4q0V22)RBX+?VV@3&Ef.4>\oQ@6Per3&NZS4q0V22)Si,+?VV@3+b>`4>\oQ@m2"t3&N]N4q0V22)So.+?VV@3A`o/4>\oQANh5!3&N^*4q0V22)Su0+?VV@@5^:Y4>\oR2*N-F3&P/R4q0V22)[?V+?VV@@kg.V4>\oR2a/?H3&P2+4q0V22)\o-+?VV@A2QO[4>\oS1-QgC3&P;,4q0V22)dBV+?VV@AnF494>\oS2Ei6G3&WHG4q0V22)dNZ+?VVA0O[-S4>\oS@m2"t3&WL"4q0V22)f&0+?VVA11WQX4>\oSANh5!3&WR)4q0V22)f,2+?VVA1hAi[4>\oT0KpUA3&WWJ4q0V22)mNY+?VVA2E*f/4>\oT3''JHI3&W]U4q0V22)mT[+?VVA3+4u[4>\oT@6Per3&Wa+4q0V22)o&/+?VVA3AWi.4>\oTANh5!3&Y2*4q0V22)o23+?VVA@lHR\4>\oU0KpUA3&Y8U4q0V22*!BT+?VVAA2HIZ4>\oU1-QgC3&Y;-4q0V22*!HV+?VVAA7@_34>\oU1d3$E3&Y;Z4q0V22*!NX+?VVAAMcR[4>\oU2Ei6G3&Y>Y4q0V22*!TZ+?VVAAn=.84>\oU3''JHI3&`NF4q0V22*#,0+?VVB0K;6*4>\oU@m2"t3&`QO4q0V22*#22+?VVB0k!6T4>\oUANh5!3&`R%4q0V22*#84+?VVB1hAi[4>\p(0KpUA3&`]P4q0V22.84''+?VVB2)d].4>\p(1-QgC3&`^,4q0V22.8:)+?VVB2E!`.4>\p(1d3$E3&``T4q0V22.8@++?VVB2`*]-4>\p(2Ei6G3&`cS4q0V22.8F-+?VVB2`Nu14>\p(3''JHI3&`fP4q0V22.8L/+?VVB3+P2^4>\p(@6Per3&`j04q0V22.9rX+?VVB@5:"U4>\p(@m2"t3&b;&4q0V22.:#Z+?VVB@UVG04>\p(ANh5!3&b>(4q0V22.:)\+?VVBAM?:W4>\p)0KpUA3&bDY4q0V22.A:(+?VVBAS++84>\p)1-QgC3&bG)4q0V22.A@*+?VVBAiW$a4>\p)1d3$E3&bGY4q0V22.AF,+?VVBAn=.8ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1c8`#4s2sI3&!3R%6QI)@Q-In4?,;TAj-Yd1c8`N4s2sI3&<9Q%6QI)@U_MD4?,;V2EhR41c8`P4s2sI3&>#-%6QI)@UqYF4?,;W0Koq.1c8`R4s2sI3&ENW%6QI)@l$:k4?,;X2a.[51c8c"4s2sI3&N][%6QI)@l6Fm4?,;X@Qk5`1c8c$4s2sI3&P51%6QI)@pqPD4?,;Y3''Id61c8cP4s2sI3&Y50%6QI)@q.\F4?,;Z0Koq.1c8cR4s2sI3&`TV%6QI)@q@hH4?,;Z2a.[51c8f"4s2sI3&il]%6QI)A2HIm4?,;[@Qk5`1c8f$4s2sI3&kG4%6QI)A2ZUo4?,;\1-Q.01c8f(4s2sI3&tP6%6QI)A77YE4?,</@Qk5`1c8fQ4s2sI3+=^.%6QI)A7[qI4?,<1Aj-Yd1c8i!4s2sI3+P$5%6QI)AMcRn4?,<2Aj-Yd1c8i%4s2sI3+Xg.%6QI)AMu^p4?,<33''Id61c8iQ4s2sI3+b-6%6QI)AR[hG4?,<4A3LGb1c8iS4s2sI3A<BU%6QI)ARmtI4?,>U0Koq.1c8l#4s2sI3ANHU%6QI)AhuUn4?,>V@6P,_1c8l%4s2sI3AWQW%6QI)Ai2ap4?,>W3''Id61c8l''4s2sI3AY,.%6QI)AiDmr4?,>X0g6%/1c8l)4s2sI3A`QV%6QI)AiW$t4?,>YAj-Yd1c8lR4s2sI3Ar]X%6QI)An!qH4?,>Z@6P,_1c8lT4s2sI3B&]W%6QI)An4(J4?,>[Aj-Yd1c8lV4s2sI3B/`W%6QI)AnF4L4?,>\1Hl711c@$C4s2sI3B1J3%6QI*0Jbm84?,>\Aj-Yd1c@$E4s2sI3B8lZ%6QI*0Ju$:4?,>]2EhR41c@$G4s2sI3FOX+%6QI*0KD<>4?,?11-Q.01c@$r4s2sI3FZD\%6QI*0Od3g4?,?1A3LGb1c@$t4s2sI3Faa,%6QI*0P!?i4?,?31-Q.01c@%!4s2sI3Ft!1%6QI*0P3Kk4?,?51d2@21c@''B4s2sI3G(67%6QI*0ekj74?-b''0Koq.1c@''F4s2sI@5''Z)%6QI*0f;-;4?-b''@6P,_1c@''H4s2sI@5)1T%6QI*0fM9=4?-b''ANgPc1c@''J4s2sI@50Q%%6QI*0k3Bi4?-b(@Qk5`1c@(!4s2sI@52:V%6QI*0kENk4?-b(Aj-Yd1c@(#4s2sI@59W&%6QI*1,(m74?-b)2*MI31c@*D4s2sI@5;7T%6QI*1,;$94?-b)A3LGb1c@*F4s2sI@5BW%%6QI*1,M0;4?-b*1d2@21c@*H4s2sI@5Bf*%6QI*1,qH?4?-b,0Koq.1c@*u4s2sI@5VLX%6QI*11NKj4?-b,ANgPc1c@+"4s2sI@5]f''%6QI*1GD!84?-b-2EhR41c@-E4s2sI@5^,0%6QI*1H7Q@4?-b.2*MI31c@-M4s2sI@5g21%6QI*1LWHi4?-b/2*MI31c@.!4s2sI@5p20%6QI*1M&`m4?-b01Hl711c@.%4s2sI@6$2/%6QI*1b_*94?-b03''Id61c@0F4s2sI@6%m_%6QI*1cRZA4?-bX3''Id61c@0N4s2sI@:<S.%6QI*1grQj4?-bY0Koq.1c@1"4s2sI@:CuU%6QI*1h/]l4?-bY3Bdm71c@1$4s2sI@:E_1%6QI*2)%3:4?-bZ1-Q.01c@3G4s2sI@:M,X%6QI*2)7?<4?-bZ2a.[51c@3I4s2sI@:Nb1%6QI*2)IK>4?-bZA3LH6DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f2Dm?U+?VVl@qIn64>\rR2Ei6G3+6>Q4q0V22DmEW+?VVlA2ZU\4>\rR@6Per3+6AQ4q0V22E!9R+?VVlAhcIY4>\rS2*N-F3+6E-4q0V22E!HW+?VVlAn=.84>\rS@6Per3+=Qu4q0V22E##.+?VVm0P*EW4>\rS@m2"t3+=Tr4q0V22E#)0+?VVm0f2''''4>\rT1HlpD3+=UQ4q0V22E*HV+?VVm1,(m$4>\rT2*N-F3+=X&4q0V22E*TZ+?VVm1G_3(4>\rT3BeQJ3+=[(4q0V22E,&.+?VVm1bh0''4>\rT@Qkns3+=^)4q0V22E,22+?VVm2)mc/4>\rTAj.>"3+=aR4q0V22E3BS+?VVm2.JfZ4>\rU0g6^B3+=d(4q0V22E3HU+?VVm2Ieo[4>\rU2*N-F3+=g''4q0V22E3TY+?VVm2`Eo04>\rU2a/?H3+=gW4q0V22E3Z[+?VVm3&!N*4>\rU3BeQJ3+=jU4q0V22E5,/+?VVm3A<W+4>\rUA3M+u3+=m+4q0V22E583+?VVm3FP)\4>\rUAj.>"3+Fa''4q0V22E<HT+?VVn1M/f[4>\rV0g6^B3+Fd"4q0V22E<NV+?VVn1c@N,4>\rV1HlpD3+Fd)4q0V22E<TX+?VVn1grQW4>\rV2*N-F3+FdT4q0V22E<ZZ+?VVn2)RQ,4>\rV2a/?H3+FgS4q0V22E<`\+?VVn2DIB)4>\rVA3M+u3+Fp''4q0V22E>>4+?VVn3+4u[4>\rVAj.>"3+FpX4q0V22I^2\+?VVn@pqP14>\s*ANh5!3+HJR4q0V22I^8^+?VVnA2?CY4>\s+0KpUA3+HK-4q0V22IeI*+?VVnA7Ie44>\s+1-QgC3+HK14q0V22IeO,+?VVnAM?:W4>\s+2a/?H3+HMX4q0V22Ie^1+?VVnARRb34>\s+3BeQJ3+HN14q0V22Ig/Z+?VVnAi)[\4>\s,1-QgC3+O^O4q0V22InU-+?VVo0P!?V4>\s,1d3$E3+Oa"4q0V22In[/+?VVo0fD3)4>\s,2Ei6G3+Op(4q0V22Ina1+?VVo2E!`.4>\s,3''JHI3+OpV4q0V22Ing3+?VVo2_[E)4>\s,@m2"t3+Os,4q0V22Ip>^+?VVo3&Nl/4>\s,ANh5!3+P!W4q0V22IpD`+?VVo3B9844>\s-0KpUA3+QGR4q0V22J"U,+?VVo@5pF[4>\s-1-QgC3+QJS4q0V22J"[.+?VVo@UVG04>\s-1d3$E3+QK04q0V22J"a0+?VVo@l?L[4>\s-3''JHI3+QN24q0V22J"m4+?VVoA7@_34>\s-@6Per3+QQ14q0V22J$>]+?VVoAMH@X4>\s-@m2"t3+QSV4q0V22J$D_+?VVoAN2j_4>\s-ANh5!3+QT44q0V22J$Ja+?VVoAhuU[4>\s.0KpUA3+XdP4q0V22J+a/+?VVp0kENX4>\s.1d3$E3+XjR4q0V22J+g1+?VVp1GD!%4>\s.2Ei6G3+Xm''4q0V22J+m3+?VVp1bq6(4>\s.3''JHI3+Xp''4q0V22J-J`+?VVp2*!i04>\uN0KpUA3+Y$*4q0V22_ZsM+?VVp2`<i/4>\uN1-QgC3+Y''(4q0V22_[$O+?VVp3&a#14>\uN1d3$E3+Y''X4q0V22_[*Q+?VVp3+P2^4>\uN3BeQJ3+ZSR4q0V22_\f,+?VVpA26=X4>\uNAj.>"3+ZW44q0V22_d!M+?VVpAR[h44>\uO0g6^B3+Z\]4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI+0etp84?-na@Qk5`1cI-F4s2sIAS,L;%6QI+0f2'':4?-q,1Hl711cI-H4s2sIAhZ)+%6QI+0fD3<4?-q,3Bdm71cI0H4s2sIAhms^%6QI+1,V6<4?-q/1Hl711cI0L4s2sIAi!m[%6QI+11WQk4?-q03Bdm71cI3E4s2sIAi4*_%6QI+1GM''94?-q1Aj-Yd1cI3G4s2sIAi;D.%6QI+1Gq?=4?-q]1Hl711cI3K4s2sIAmmS]%6QI+1H.K?4?-q]3''Id61cI3M4s2sIAmo46%6QI+1LrZl4?-q_1-Q.01cI4%4s2sIAn*\^%6QI+1M/fn4?-q_ANgPc1cI6F4s2sIAn3V[%6QI+1bh0:4?-q`1d2@21cI6H4s2sIAn<ka%6QI+1c7H>4?-qaA3LGb1cI6L4s2sIAnE_\%6QI+1cIT@4?-qb1-Q.01cI6N4s2sIAnEtc%6QI+1c[`B4?-qb3Bdm71cI7"4s2sIAnGR;%6QI+2).9;4?5)L3''Id61cI9I4s2sJ0JHs"%6QI+2)@E=4?5)LA3LGb1cI9P4s2sJ0JPLM%6QI+2D[N>4?5)NANgPc1cI<N4s2sJ0JbRM%6QI+2E*fB4?5)O3''Id61cI<P4s2sJ0Jd3&%6QI+2E<rD4?5)OANgPc1cI=&4s2sJ0Jk^P%6QI+2`<iB4?5)Q3Bdm71cI@''4s2sJ0K(^N%6QI+2e5)p4?5)R3Bdm71cIBK4s2sJ0K1aN%6QI+3&3Z?4?5)S2*MI31cIBO4s2sJ0K3E(%6QI+3A<W>4?5)T@6P,_1cIEL4s2sJ0K<Z.%6QI+3ANc@4?5)U0g6%/1cIEN4s2sJ0KD!S%6QI+3A`oB4?5)U3Bdm71cIER4s2sJ0OZk''%6QI+3B02F4?5*(3''Id61cIET4s2sJ0O\BR%6QI+3Fk;r4?5*)2*MI31cIF+4s2sJ0Od"*%6QI+3G(Gt4?5**0g6%/1cJhs4s2sJ0OnNT%6QI+@50qg4?5*+ANgPc1cJhu4s2sJ0P)t&%6QI+@5C(i4?5*,3''Id61cJi"4s2sJ0P+cY%6QI+@5U4k4?5*-2*MI31cJi$4s2sJ0P4iZ%6QI+@5g@m4?5,M1-Q.01cJi&4s2sJ0ekFI%6QI+@6$Lo4?5,N2*MI31cJiO4s2sJ0ek[P%6QI+@:DDC4?5,O2a.[51cJiQ4s2sJ0f!9''%6QI+@:VPE4?5,P1-Q.01cJl#4s2sJ0f:^M%6QI+@Pp=l4?5,S1-Q.01cJl''4s2sJ0fEN*%6QI+@Q?Up4?5,T2*MI31cJlR4s2sJ0fV*U%6QI+@UqYF4?5,U3Bdm71cJlT4s2sJ0fWW+%6QI+@V.eH4?5,UA3LGb1cJnu4s2sJ0f_!Q%6QI+@kg.i4?5,V@m1>a1cJo&4s2sJ0k)k$%6QI+@lZ^q4?5-+0Koq.1cJoQ4s2sJ0k3.+%6QI+@q%VE4?5-+3Bdm71cJr(4s2sJ0kE.)%6QI+A2laq4?5--2a.[51cJr*4s2sJ0kFcW%6QI+A77YE4?5-.2*MI31cJrS4s2sJ1,*6&%6QI+A7e"J4?5/O2a.[51cJu"4s2sJ1,3?(%6QI+AMH@k4?5/Q1d2@21cJu$4s2sJ1,E?&%6QI+AMlXo4?5/R2*MI31cJu(4s2sJ1,M!T%6QI+AN)dq4?5/S2a.[51cJu*4s2sJ1,WN)%6QI+AN;ps4?5/SANgPc1cJuS4s2sJ1,^mO%6QI+AS"%J4?5/V0Koq.1cJuX4s2sJ1,q''R%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>]!/0KpUA3ANQO4q0V22eFd.+?VY>3AE],4>]!/1-QgC3ANTN4q0V22eFj0+?VY>3As&14>]!/1d3$E3ANTS4q0V22eFp2+?VY>3Fb5^4>]!/2Ei6G3AP&"4q0V22eG''6+?VY>@Q?U]4>]!/@6Per3AP)S4q0V22eHM_+?VY>@qIn64>]!/@m2"t3AP,#4q0V22eHSa+?VY>AMcR[4>]!/ANh5!3AP/S4q0V22eHYc+?VY>AiMs`4>]#O0KpUA3AP2V4q0V23&!''N+?VY?0Jks&4>]#O1-QgC3AWBD4q0V23&!-P+?VY?0fV?+4>]#O1d3$E3AWBu4q0V23&"c)+?VY?1,M0(4>]#O@Qkns3AWEK4q0V23&"i++?VY?1,qH,4>]#OA3M+u3AWF"4q0V23&**N+?VY?1cRZ.4>]#P1HlpD3AWL&4q0V23&*6R+?VY?2)IK+4>]#P2*N-F3AWO%4q0V23&*<T+?VY?2J#&]4>]#P2a/?H3AWTO4q0V23&*BV+?VY?2e,#\4>]#P3BeQJ3AWU*4q0V23&+i*+?VY?3+G,]4>]#P@Qkns3AWZP4q0V23&+o,+?VY?3As&14>]#PA3M+u3AW[(4q0V23&+u.+?VY?@5C(V4>]#PAj.>"3AY)&4q0V23&36Q+?VY?@PBtT4>]#Q1HlpD3AY/$4q0V23&3<S+?VY?A2-7W4>]#Q2*N-F3AY2W4q0V23&3BU+?VY?AMH@X4>]#Q2a/?H3AY5''4q0V23&3HW+?VY?Ai;g^4>]#Q3BeQJ3A`EH4q0V23&4o++?VY@0fV?+4>]#Q@Qkns3A`KK4q0V23&4u-+?VY@11EEV4>]#QA3M+u3A`NL4q0V23&5&/+?VY@1H7Q-4>]#QAj.>"3A`QL4q0V23&<<R+?VY@2.A`Y4>]#R1HlpD3A`[*4q0V23&<BT+?VY@2eG5_4>]#R2*N-F3Ai`S4q0V23&<HV+?VYA3&!N*4>]#R2a/?H3AicP4q0V23&<NX+?VYA3&s/34>]#R3BeQJ3Aid*4q0V23&=u,+?VYA3+b>`4>]#RAj.>"3AifV4q0V23&EET+?VYA@5pF[4>]#S1d3$E3Ak5U4q0V23&EKV+?VYA@PL%U4>]#S3''JHI3Ak;*4q0V23&EWZ+?VYA@pqP14>]#SA3M+u3Ak>W4q0V23&NBR+?VYB0k3BV4>]#T0g6^B3ArWI4q0V23&NHT+?VYB11<?U4>]#T1HlpD3ArX(4q0V23&NNV+?VYB1GV-''4>]#T2*N-F3Ar[&4q0V23&NZZ+?VYB1bq6(4>]#T3BeQJ3Ar]N4q0V23&P51+?VYB2)%3''4>]#U2Ei6G3Ard(4q0V23&W]Z+?VYB2_[E)4>]#U3''JHI3ArfP4q0V23&Y;2+?VYB2e5)]4>]#V@6Per3At;%4q0V23&bA3+?VYB@:;>/4>]#VANh5!3At>$4q0V23&bG5+?VYB@Q-I[4>]#W0KpUA3At>U4q0V23&ii\+?VYB@lZ^^4>]#WANh5!3AtD.4q0V23&rr^+?VYBAhlOZ4>]#X@Qkns3AtJ04q0V23&tJ4+?VYBAn!q54>]#XA3M+u3B&WG4q0V23+4L)+?VYC0ekj$4>]$+0g6^B3B&ZK4q0V23+4R++?VYC0fD3)4>]$+1HlpD3B&ZQ4q0V23+4X-+?VYC0k3BV4>]$+2*N-F3B&[(4q0V23+4^/+?VYC1,hB+4>]$+2a/?H3B&`J4q0V23+4d1+?VYC1GV-''ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1cSo(4s2sJ2`!HX%6QI,@:;>B4?5>VA3LGb1cSoQ4s2sJ2`*9R%6QI,@:MJD4?5>W1d2@21cSoS4s2sJ2`*KX%6QI,@:_VF4?5>X0g6%/1cSoU4s2sJ2`3KW%6QI,@PBtg4?5>X@m1>a1cSr!4s2sJ2`5/1%6QI,@Pg7k4?5>Y3Bdm71cSr%4s2sJ2`>21%6QI,@Q$Cm4?5>Z1d2@21cSr''4s2sJ2`EZZ%6QI,@Q6Oo4?5>Z@6P,_1cSr)4s2sJ2`P81%6QI,@UVGC4?5>[A3LGb1cSrR4s2sJ2`PD5%6QI,@UhSE4?5?/0Koq.1cSrT4s2sJ2dn[0%6QI,@V%_G4?5?/@Qk5`1cSrV4s2sJ2dp5\%6QI,@k^(h4?5?12EhR41cSu"4s2sJ2e-;\%6QI,@kp4j4?5?21Hl711cSu$4s2sJ2e6D^%6QI,@l-@l4?5?41Hl711cSu&4s2sJ2eFs3%6QI,@l?Ln4?5?4@Qk5`1cSuV4s2sJ3&!<U%6QI,@qInI4?5AT@6P,_1cT#"4s2sJ3&"i+%6QI,A2c[p4?5AVA3LGb1cT#*4s2sJ3&<6P%6QI,A7@_F4?5AW@Qk5`1cT#U4s2sJ3&ENW%6QI,AM?:j4?5AY1d2@21cT&$4s2sJ3&NZZ%6QI,AMQFl4?5AY@6P,_1cT&&4s2sJ3&P82%6QI,AMcRn4?5AZ2*MI31cT&(4s2sJ3&W]Z%6QI,AMu^p4?5AZ@Qk5`1cT&*4s2sJ3&YA4%6QI,AN2jr4?5B03''Id61cT&,4s2sJ3+6D_%6QI,ARRbF4?5B10g6%/1cT&U4s2sJ3+Fd/%6QI,ARdnH4?5B22a.[51cT&Y4s2sJ3+QVb%6QI,Ai2ap4?5B51d2@21cT)-4s2sJ3A<6Q%6QI,An+"I4?5DU@m1>a1cT)X4s2sJ3AE3O%6QI,An=.K4?5DV1Hl711cT)Z4s2sJ3AEKW%6QI-0JG[54?5DVANgPc1c[6E4s2sJ3AN9P%6QI-0JYg74?5DW3''Id61c[6G4s2sJ3A`TW%6QI-0Jks94?5DY3Bdm71c[6u4s2sJ3AiWW%6QI-0Od3g4?5DZ2a.[51c[7"4s2sJ3B8u]%6QI-0P!?i4?5D^3Bdm71c[7$4s2sJ3B:V6%6QI-0P3Kk4?5E12*MI31c[9E4s2sJ3FOm2%6QI-0f2'':4?5E20g6%/1c[9L4s2sJ3FY!4%6QI-0fV?>4?5E30g6%/1c[:#4s2sJ3Fk!2%6QI-0k<Hj4?5E43Bdm71c[:%4s2sJ3FlYa%6QI-0kNTl4?5E4Aj-Yd1c[<F4s2sJ3Fu_b%6QI-1,1s84?5E60g6%/1c[<H4s2sJ3G)ke%6QI-1,D*:4?6h(0g6%/1c[<J4s2sJ@5''Z)%6QI-1,hB>4?6h)3Bdm71c[<N4s2sJ@5;:U%6QI-1-%N@4?6h+0Koq.1c[=$4s2sJ@5KZ%%6QI-11WQk4?6h,1Hl711c[=&4s2sJ@5Ki*%6QI-11i]m4?6h,A3LGb1c[?G4s2sJ@5To+%6QI-1GM''94?6h-2a.[51c[?K4s2sJ@5VX\%6QI-1Gq?=4?6h.1-Q.01c[?M4s2sJ@5]u,%6QI-1H@WA4?6hY3''Id61c[@#4s2sJ@:D2[%6QI-1LrZl4?6h\3''Id61c[@''4s2sJ@:_;[%6QI-1M/fn4?6h]ANgPc1c[BH4s2sJ@PM:T%6QI-1bh0:4?6k+2a.[51c[BJ4s2sJ@PV@U%6QI-1c%<<4?6k,0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f3A`QV+?VYn1LiTX4>]&T@6Per3FXgW4q0V23Ab2/+?VYn2)IK+4>]&T@m2"t3FXjS4q0V23Ab81+?VYn2J,,^4>]&TANh5!3FXsZ4q0V23Ab>3+?VYn3AE],4>]&U0KpUA3FY!\4q0V23AiNT+?VYn@:DD04>]&U1-QgC3FZE.4q0V23AiTV+?VYn@lZ^^4>]&U1d3$E3FZMW4q0V23AiZX+?VYnAMcR[4>]&U2Ei6G3FZPZ4q0V23Ai`Z+?VYo0P!?V4>]&U3''JHI3Fact4q0V23Aif\+?VYo0etp%4>]&U@6Per3Fad$4q0V23Ak80+?VYo1,V6)4>]&U@m2"t3Faj#4q0V23Ak>2+?VYo1L`NW4>]&UANh5!3Fam)4q0V23AkD4+?VYo1c[`/4>]&V0KpUA3Fap*4q0V23ArTU+?VYoAMlX\4>]&V1-QgC3FcVZ4q0V23ArZW+?VYoAN;p`4>]&V2Ei6G3FcYZ4q0V23Arf[+?VYp0KD<+4>]&V3''JHI3FjjR4q0V23Arl]+?VYp1,_<*4>]&V@6Per3Fjm)4q0V23At>1+?VYp1L`NW4>]&V@m2"t3Fk!%4q0V23AtD3+?VYp2.Sl[4>]&W0KpUA3Fk$X4q0V23B&ZV+?VYp2_mQ+4>]&W1-QgC3FlPY4q0V23B&`X+?VYp@:h\44>]&W1d3$E3FlSU4q0V23B&fZ+?VYp@l-@Y4>]&W2Ei6G3FlYZ4q0V23B&l\+?VYpAhlOZ4>]&W@Qkns3FspR4q0V23B(G3+?VYq0kENX4>]&WA3M+u3Ft-,4q0V23B(M5+?VYq2`X&24>]&WAj.>"3Ft-[4q0V23B/]V+?VYq2eG5_4>]&X1HlpD3Ft304q0V23B/iZ+?VYq3Fk;_4>]&X2*N-F3Ft3_4q0V23B/o\+?VYq@5U4X4>]&X3BeQJ3FuZ/4q0V23B1G2+?VYq@V%_44>]&X@Qkns3Fu\V4q0V23B1S6+?VYqA2-7W4>]&XAj.>"3Fu_X4q0V23B8cW+?VYqA2la^4>]&Y1HlpD3Fu`44q0V23B8o[+?VYqAN2j_4>]&Y2*N-F3FueZ4q0V23B9&_+?VYr0P*EW4>]&Y3BeQJ3G(!%4q0V23B:M3+?VYr1,(m$4>]&Y@Qkns3G(''V4q0V23B:Y7+?VYr1hAi[4>]&YAj.>"3G(-(4q0V23FOU*+?VYr2.f#]4>]'',0g6^B3G(0(4q0V23FO[,+?VYr2E*f/4>]'',1HlpD3G(0X4q0V23FOa.+?VYr2Ieo[4>]'',2*N-F3G(3/4q0V23FOg0+?VYr3+P2^4>]'',2a/?H3G(9*4q0V23FOm2+?VYr3Aiu04>]'',3BeQJ3G(9]4q0V23FQ>[+?VG:3FP)\4>]'',@Qkns1GiW$4q0V23FQD]+?VG;0f;-(4>]'',A3M+u1GppB4q0V23FQJ_+?VG;AnF494>]'',Aj.>"1H%.''4q0V23FXd.+?VG<AMu^]4>]''-1d3$E1H.''F4q0V23FXj0+?VG=11i]Z4>]''-2Ei6G1H.*u4q0V23FXp2+?VG=@UhS24>]''-3''JHI1H7''u4q0V23FY!4+?VG>0fV?+4>]''-@6Per1H7?M4q0V23FZG]+?VG>@UVG04>]''-@m2"t1H8r)4q0V23FZM_+?VG>An4(74>]''-ANh5!1H@?I4q0V23FZSa+?VG?2DmZ-4>]''.0KpUA1H@EN4q0V23Fad-+?VG?3A<W+4>]''.1-QgC1HAl$4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QI-@l$:k4>T!,2EhR41c]&&4s2sD@5Bo-%6QI-@l6Fm4>UDS1d2@21c]&(4s2sD@:Wk3%6QI-@lHRo4>UDX2EhR41c]&*4s2sD@PBT%%6QI-@lZ^q4>UG%1Hl711c]&S4s2sD@Q-;2%6QI-@q%VE4>UGY1Hl711c]&U4s2sD@kff(%6QI-@q7bG4>UJ&1d2@21c]&W4s2sD@kqRY%6QI-A2-7j4>UJZ@m1>a1c])%4s2sDA2-#,%6QI-A2?Cl4>UM*Aj-Yd1c])''4s2sDA7B%4%6QI-A2QOn4>UMX1-Q.01c]))4s2sDARdP\%6QI-A2c[p4>UPZ0Koq.1c])+4s2sDAS#C9%6QI-A2ugr4>UP\A3LGb1c])T4s2sDAhZ&*%6QI-A7@_F4>\`IAj-Yd1c])V4s2sE0JbOL%6QI-A7RkH4>\`M1-Q.01c])X4s2sE0OZt*%6QI-A7e"J4>\a%3Bdm71c],$4s2sE0f(aP%6QI-AMH@k4>\d$@m1>a1c],&4s2sE1,V''U%6QI-AMZLm4>\j''@Qk5`1c],(4s2sE1Li@-%6QI-AMlXo4>\j*2a.[51c],*4s2sE1M''uY%6QI-AN)dq4>\lP0Koq.1c],,4s2sE2)-jM%6QI-AN;ps4>\p-1-Q.01c],U4s2sE2DI0T%6QI-AR[hG4>\s*2a.[51c],W4s2sE2I^5]%6QI-ARmtI4>\s,1d2@21c],Y4s2sE2Ind2%6QI-AS++K4>\s,A3LGb1c]/%4s2sE2_no-%6QI-AhcIl4>\uT@m1>a1c]/''4s2sE2`G82%6QI-AhuUn4>\uWAj-Yd1c]/)4s2sE3&WQV%6QI-Ai2ap4>]#W1Hl711c]/+4s2sE3&rl\%6QI-AiDmr4>]$+2EhR41c]/-4s2sE3ANHU%6QI-AiW$t4>]&YANgPc1c]/V4s2sE3FOd/%6QI-An!qH4>]''.@Qk5`1c]/X4s2sE@50N$%6QI-An4(J4>^J%A3LGb1c]/Z4s2sE@:D2[%6QI-AnF4L4>^JWAj-Yd1gr''l4s2sE@:_D^%6QIU0JPa64>^JY@Qk5`1gr''n4s2sE@Por*%6QIU0Jbm84>^M+0g6%/1gr''r4s2sEA2.OW%6QIU0K20<4>^V''2EhR41gr''t4s2sEAMId\%6QIU0KD<>4>^V)2EhR41gr(H4s2sEAMR^Y%6QIU0P!?i4>^V*2a.[51gr(L4s2sEAMc,*%6QIU0P3Kk4>^V+@6P,_1gr*m4s2sEAMmp\%6QIU0f)!94>^V-2a.[51gr*q4s2sEAN"$^%6QIU0fM9=4>^V.1-Q.01gr+K4s2sEAN2V4%6QIU0k<Hj4>^V/Aj-Yd1gr+M4s2sEAN;b7%6QIU0kNTl4>^V0@m1>a1gr-n4s2sEAN=?d%6QIU1,1s84>^VX@6P,_1gr-p4s2sEAR[>W%6QIU1,V6<4>^VY3Bdm71gr-t4s2sEAR]16%6QIU1,hB>4>^VZ2EhR41gr.!4s2sEARmP[%6QIU1-%N@4>^V[ANgPc1gr.J4s2sEAS!S[%6QIU11EEi4>^V\ANgPc1gr.L4s2sEAS*_^%6QIU11WQk4>^V]2*MI31gr.N4s2sEAS,I:%6QIU1GM''94>^Y)@6P,_1gr0q4s2sEAhu,)%6QIU1G_3;4>^Y+ANgPc1gr0s4s2sEAi)8,%6QIU1Gq?=4>^Y,3Bdm71gr0u4s2sEAi*s\%6QIU1M&`m4>^Y.@6P,_1gr1P4s2sEAiDP1%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>^J''2*N-F1hJ^$4q0V2@5Kl++?VJm3&s/34>^J''2a/?H1hJ^Y4q0V2@5Kr-+?VJm3A<W+4>^J''3BeQJ1hJa''4q0V2@5MCV+?VJm3A`o/4>^J''@Qkns1hJa,4q0V2@5MIX+?VJm3FP)\4>^J''A3M+u1hJaX4q0V2@5MOZ+?VJm@5L.W4>^J''Aj.>"1hL2P4q0V2@5T`&+?VJm@Q?U]4>^J(0g6^B1hL3+4q0V2@5Tf(+?VJm@kg.V4>^J(1HlpD1hL5T4q0V2@5U#.+?VJmA26=X4>^J(@Qkns1hL9-4q0V2@5VOY+?VJmA7[q64>^J(A3M+u1hL;T4q0V2@5VU[+?VJmAhZCX4>^J(Aj.>"1hL>V4q0V2@5]f''+?VJmAi;g^4>^J)0g6^B1hL?24q0V2@5]l)+?VM80JG["4>^J)1HlpD2)$^A4q0V2@5]r++?VM80K20)4>^J)2*N-F2)$^r4q0V2@5^)/+?VM80fV?+4>^J)3BeQJ2)$d@4q0V2@5_OX+?VM81,V6)4>^J)@Qkns2)$dG4q0V2@5_UZ+?VM811`WY4>^J)A3M+u2)$g?4q0V2@5_[\+?VM81c.B*4>^J)Aj.>"2)$jq4q0V2@5fl(+?VM81hAi[4>^J*0g6^B2)$mD4q0V2@5fr*+?VM82)[W-4>^J*2*N-F2)$pB4q0V2@5g).+?VM82DRH*4>^J*2a/?H2)$pH4q0V2@5g/0+?VM82IScY4>^J*3BeQJ2)$sC4q0V2@5hUY+?VM82_mQ+4>^J*@Qkns2)%!G4q0V2@5h[[+?VM83+>&\4>^J*A3M+u2)%$G4q0V2@5ha]+?VM83A`o/4>^J*Aj.>"2)%$K4q0V2@5p)-+?VM8@5:"U4>^J+2*N-F2)&HM4q0V2@5p//+?VM8@Pg7X4>^J+2a/?H2)&KM4q0V2@5p51+?VM8@V.e54>^J+3BeQJ2)&Mq4q0V2@5q[Z+?VM8@l-@Y4>^J+@Qkns2)&Pt4q0V2@5qa\+?VM8A7@_34>^J+A3M+u2)&Ss4q0V2@5qg^+?VM8AMu^]4>^J+Aj.>"2)&T%4q0V2@6$#*+?VM8ARdn54>^J,0g6^B2)&TQ4q0V2@6$),+?VM8Ai2a]4>^J,1HlpD2)&WR4q0V2@6$50+?VM90K20)4>^J,2a/?H2)-do4q0V2@6$;2+?VM90ebd#4>^JT0g6^B2)-jA4q0V2@::uV+?VM91,hB+4>^JT2*N-F2)-jq4q0V2@:;&X+?VM91GM''&4>^JT2a/?H2)-mC4q0V2@:;,Z+?VM91Gq?*4>^JT@Qkns2)-mr4q0V2@:<Y0+?VM91M/f[4>^JTA3M+u2)-sB4q0V2@:CuU+?VM92.8ZX4>^JU1HlpD2)."$4q0V2@:D&W+?VM92dnlZ4>^JU2*N-F2).''G4q0V2@:D,Y+?VM93&s/34>^JU2a/?H2).(#4q0V2@:D2[+?VM93+b>`4>^JU3BeQJ2).*G4q0V2@:EY/+?VM93AWi.4>^JU@Qkns2).*N4q0V2@:E_1+?VM93FtA`4>^JV1HlpD2)/QO4q0V2@:M,X+?VM9@l6FZ4>^JV2*N-F2)/TL4q0V2@:M2Z+?VM9A26=X4>^JV2a/?H2)/Vu4q0V2@:M8\+?VM9A2ZU\4>^JV3BeQJ2)/WN4q0V2@:N_0+?VM9AM?:W4>^JV@Qkns2)/Z&4q0V2@:Ne2+?VM9ARmt64>^JVAj.>"2)6j?4q0V2@:V&U+?VM:0f)!&ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1gsoL4s2sF1,1[N%6QIUA2c[p4>elN1d2@21gsoS4s2sF1,LmQ%6QIUA2ugr4>elN3Bdm71gsp''4s2sF1,UpQ%6QIUA7@_F4>elO2a.[51gsp)4s2sF1,WK(%6QIUA7e"J4>elQ1d2@21gsrL4s2sF1,h-U%6QIUAMH@k4>elQ@6P,_1gsrN4s2sF1,q$Q%6QIUAMZLm4>elS1Hl711gsrR4s2sF11<+*%6QIUARRbF4>em''3Bdm71gss)4s2sF11OfX%6QIUAS"%J4>em*2EhR41gss-4s2sF11au[%6QIUAhZCk4>em+1-Q.01gsuR4s2sF1GE6$%6QIUAi;gq4>eoK@m1>a1gsuT4s2sF1GUmQ%6QIUAiMss4>eoN0g6%/1gsuV4s2sF1G^pQ%6QIUAmmkG4>eoN3''Id61gt!,4s2sF1GgsQ%6QIUAn=.K4>eoQ0g6%/1gt!.4s2sF1H&Z*%6QIV0JG[54>eoQ@m1>a1h&-n4s2sF1H&f.%6QIV0K;6=4>eoRANgPc1h&.!4s2sF1H7*Q%6QIV0O[-f4>eoSANgPc1h&.J4s2sF1H@0R%6QIV0Om9h4>eoT2EhR41h&.L4s2sF1HAu0%6QIV0P*Ej4>ep''@6P,_1h&.N4s2sF1LXiY%6QIV0etp84>ep(3Bdm71h&0q4s2sF1LaiX%6QIV0f2'':4>ep)2*MI31h&0s4s2sF1LjoY%6QIV0fD3<4>ep*3Bdm71h&0u4s2sF1Lt)]%6QIV0fV?>4>ep+2EhR41h&1"4s2sF1M&O0%6QIV0k!6g4>ep+ANgPc1h&1O4s2sF1b^XJ%6QIV1,(m74>erL@Qk5`1h&3p4s2sF1brQ)%6QIV1,;$94>erNANgPc1h&3r4s2sF1c$jM%6QIV1,M0;4>erO2EhR41h&3t4s2sF1c&Z+%6QIV1,_<=4>erP0Koq.1h&4!4s2sF1c.*S%6QIV1,qH?4>erPANgPc1h&4#4s2sF1c8f-%6QIV11<?h4>erQAj-Yd1h&4L4s2sF1c@*Q%6QIV11NKj4>erR1d2@21h&4N4s2sF1c@6U%6QIV11`Wl4>erR@Qk5`1h&4P4s2sF1cI*P%6QIV1GD!84>erS2EhR41h&6q4s2sF1cK#1%6QIV1GV-:4>erT1d2@21h&6s4s2sF1cREX%6QIV1Gh9<4>erT@Qk5`1h&6u4s2sF1cT#0%6QIV1H%E>4>erTAj-Yd1h&7"4s2sF1c[HX%6QIV1H7Q@4>es(0Koq.1h&7$4s2sF1gr.''%6QIV1LWHi4>es(2*MI31h&7M4s2sF1gsu[%6QIV1LiTk4>es)1-Q.01h&7Q4s2sF1h(&\%6QIV1c.B=4>es+@Qk5`1h&:!4s2sF1hAR/%6QIV1c@N?4>es,3Bdm71h&:#4s2sF1hJI+%6QIV1cRZA4>es-A3LGb1h&:%4s2sF1hL>`%6QIV1grQj4>euM3Bdm71h&:N4s2sF2)&W+%6QIV1h/]l4>euN1d2@21h&:P4s2sF2)/],%6QIV1hAin4>euO@Qk5`1h&:R4s2sF2)8`,%6QIV2)%3:4>euP1Hl711h&<s4s2sF2)@6V%6QIV2)7?<4>euP@m1>a1h&<u4s2sF2)I!N%6QIV2)IK>4>euQ1-Q.01h&="4s2sF2)J`*%6QIV2)[W@4>euR2a.[51h&=$4s2sF2)Sl-%6QIV2)mcB4>euT@Qk5`1h&=S4s2sF2)o&/%6QIV2D@<;4>euV0g6%XDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,f@Q$//+?VM=@5pF[4>^M*3''JHI2)Shs4q0V2@Q$51+?VM=@Q6O\4>^M*@6Per2)Sl"4q0V2@Q%[Z+?VM=@lZ^^4>^M*@m2"t2)So!4q0V2@Q%a\+?VM=A7@_34>^M*ANh5!2)Sr!4q0V2@Q%g^+?VM=AMQFY4>^M+0KpUA2)SrU4q0V2@Q-#*+?VM=AiDm_4>^M+1-QgC2)SuX4q0V2@Q-),+?VM>0Jks&4>^M+1d3$E2)[-J4q0V2@Q.^Z+?VM>0etp%4>^M+@Qkns2)[0I4q0V2@Q.d\+?VM>1-%N-4>^M+A3M+u2)[4"4q0V2@Q6)++?VM>1L`NW4>^M,1-QgC2)[7&4q0V2@Q65/+?VM>1c[`/4>^M,2Ei6G2)[:#4q0V2@Q7d[+?VM>2)RQ,4>^M-0g6^B2)[@)4q0V2@Q?2-+?VM>2_mQ+4>^M-1HlpD2)[BO4q0V2@Q?8/+?VM>2`Nu14>^M-2*N-F2)[C%4q0V2@Q?>1+?VM>3&!N*4>^M-2a/?H2)[EN4q0V2@Q?D3+?VM>3&a#14>^M-3BeQJ2)[F+4q0V2@Q@p^+?VM>@5g@Z4>^M-A3M+u2)\o"4q0V2@QA!`+?VM>@Q$CZ4>^MU2*N-F2)\u&4q0V2@UV/Y+?VM>A7e"74>^MU3BeQJ2)]#T4q0V2@UW\/+?VM>AS"%74>^MU@Qkns2)]&*4q0V2@UWb1+?VM>An4(74>^MUA3M+u2)]&Y4q0V2@U_#T+?VM?0K20)4>^MV1HlpD2)d7"4q0V2@U_/X+?VM?1,V6)4>^MV2a/?H2)d:#4q0V2@U_;\+?VM?11`WY4>^MV3BeQJ2)d=&4q0V2@U`b0+?VM?1bh0''4>^MV@Qkns2)d@%4q0V2@U`h2+?VM?1hJo\4>^MW0KpUA2)dF*4q0V2@Uh,V+?VM?2_dK*4>^MW1-QgC2)dHM4q0V2@Uh8Z+?VM?2e"r[4>^MW2Ei6G2)dL)4q0V2@Uh>\+?VM?3Aiu04>^MW3''JHI2)dO,4q0V2@UhD^+?VM?@5L.W4>^MW@6Per2)eu(4q0V2@Uik2+?VM?@UqY34>^MW@m2"t2)f#''4q0V2@Uiq4+?VM?@lZ^^4>^MWANh5!2)f#W4q0V2@Uq2W+?VM?A7Ie44>^MX1-QgC2)f)''4q0V2@Uq8Y+?VM?AN;p`4>^MX2Ei6G2)f,''4q0V2@UqD]+?VM?Ai;g^4>^MX3''JHI2)f,V4q0V2@UqJ_+?VM?An4(74>^MX@m2"t2)m:!4q0V2@Us"5+?VM@0fM9*4>^MXANh5!2)m<N4q0V2@Us(7+?VM@0k<HW4>^MY0KpUA2)m?F4q0V2@V%8X+?VM@1,D*''4>^MY1-QgC2)m?L4q0V2@V%>Z+?VM@11WQX4>^MY1d3$E2)mEH4q0V2@V%D\+?VM@1c[`/4>^MY3''JHI2)mHI4q0V2@V%P`+?VM@2)7?)4>^MY@6Per2)mHR4q0V2@V''"4+?VM@2E<r14>^MY@m2"t2)mO*4q0V2@V''.8+?VM@3+4u[4>^MZ1-QgC2)mTM4q0V2@V.D[+?VM@3Fk;_4>^MZ1d3$E2)o#!4q0V2@V.J]+?VM@@5C(V4>^MZ2Ei6G2)o#R4q0V2@V.Va+?VM@@l$:X4>^MZ@6Per2)o,''4q0V2@V0(5+?VM@A77Y24>^MZANh5!2)o/%4q0V2@V049+?VM@ARmt64>^P%0KpUA2)o/Y4q0V2@k]W$+?VMA0K)*(4>^P%1-QgC2*!?M4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QIW0Jbm84>f,R0Koq.1h/3r4s2sF3AFu,%6QIW0Ju$:4>f,RANgPc1h/4!4s2sF3AP).%6QIW0KD<>4>f,SAj-Yd1h/4J4s2sF3AWES%6QIW0Od3g4>f,T3''Id61h/4L4s2sF3AY,.%6QIW0P!?i4>f,TA3LGb1h/4N4s2sF3Ab50%6QIW0P3Kk4>f,V1Hl711h/6o4s2sF3Aic[%6QIW0ekj74>f,V@m1>a1h/6q4s2sF3Arl]%6QIW0f)!94>f,X1-Q.01h/6s4s2sF3B&i[%6QIW0f_E?4>f,ZA3LGb1h/7M4s2sF3FOj1%6QIW0k<Hj4>f--Aj-Yd1h/7O4s2sF3FXa-%6QIW1,1s84>f-.3''Id61h/9r4s2sF3FZSa%6QIW1,D*:4>f-/0g6%/1h/9t4s2sF3Fb$4%6QIW1,V6<4>f-/@6P,_1h/:!4s2sF3FcS`%6QIW1,hB>4>f-01-Q.01h/:#4s2sF3Fl\b%6QIW11WQk4>f-1@Qk5`1h/:P4s2sF3G''s/%6QIW11i]m4>f-21-Q.01h/<q4s2sF3G(36%6QIW1G_3;4>f-2@m1>a1h/="4s2sF@5)4U%6QIW1H.K?4>gP%1Hl711h/=M4s2sF@59W&%6QIW1L`Nj4>gP&2a.[51h/=O4s2sF@5;:U%6QIW1LrZl4>gP&A3LGb1h/=Q4s2sF@5Bc)%6QIW1bh0:4>gP(2a.[51h/@#4s2sF@5]f''%6QIW1cIT@4>gP*1Hl711h/@%4s2sF@5^&.%6QIW1h&Wk4>gP*A3LGb1h/@P4s2sF@5fr*%6QIW1h8cm4>gP+2a.[51h/@R4s2sF@5hd^%6QIW1hJoo4>gP,1d2@21h/Bs4s2sF@5qd]%6QIW2).9;4>gP-0Koq.1h/Bu4s2sF@6$,-%6QIW2)@E=4>gP-2*MI31h/C$4s2sF@::oT%6QIW2)d]A4>gPU2a.[51h/C&4s2sF@:<S.%6QIW2*!iC4>gPV1Hl711h/CO4s2sF@:D)X%6QIW2DIB<4>gPW3''Id61h/F!4s2sF@:Nb1%6QIW2E<rD4>gPXA3LGb1h/FP4s2sF@:_,V%6QIW2J,,q4>gPY@Qk5`1h/I#4s2sF@:hD]%6QIW2`<iB4>gPZA3LGb1h/I''4s2sF@PBK"%6QIW2`NuD4>gS%3''Id61h/I)4s2sF@PKl,%6QIW2dnlm4>gS&@Qk5`1h/IR4s2sF@PTf)%6QIW2e,#o4>gS''3''Id61h/IT4s2sF@PVIX%6QIW2e>/q4>gS(0Koq.1h/IV4s2sF@P]c''%6QIW3&!N=4>gS(1d2@21h/L$4s2sF@Pfr+%6QIW3&EfA4>gS)@m1>a1h/L&4s2sF@Pp&-%6QIW3&WrC4>gS*@Qk5`1h/L(4s2sF@Q#r)%6QIW3+4un4>gS,2EhR41h/LS4s2sF@Q.m_%6QIW3+Y8r4>gS-@6P,_1h/LW4s2sF@Q@s_%6QIW3A<W>4>gS.Aj-Yd1h/O#4s2sF@UqA\%6QIW3ANc@4>gSY3''Id61h/O%4s2sF@Urq3%6QIW3A`oB4>gSZA3LGb1h/O''4s2sF@V.;X%6QIW3As&D4>gS[Aj-Yd1h/O+4s2sF@k_CV%6QIW3FP)o4>gV''1d2@21h/OV4s2sF@kqLW%6QIW3FtAs4>gV)A3LGb1h/OX4s2sF@l,o(%6QIW@5''kf4>gV*2a.[51h0rK4s2sF@l5r(%6QIW@5:"h4>gV,3''Id61h0rM4s2sF@lH2-%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>^PV1d3$E2.JRR4q0V2@pq5Y+?VMk3&j)24>^PV2Ei6G2.JUS4q0V2@pq;[+?VMk3+G,]4>^PV3''JHI2.JUX4q0V2@pqA]+?VMk3ANc-4>^PV@6Per2.JX''4q0V2@prh1+?VMk3Fk;_4>^PV@m2"t2.L&N4q0V2@q%/V+?VMk@:;>/4>^PW1-QgC2.L''*4q0V2@q%5X+?VMk@q%V24>^PW1d3$E2.L/P4q0V2@q%;Z+?VMkAN;p`4>^PW2Ei6G2.L3.4q0V2@q%A\+?VMkAhcIY4>^PW3''JHI2.SC!4q0V2@q%G^+?VMl0ebd#4>^PW@6Per2.SF!4q0V2@q&n2+?VMl0fV?+4>^PW@m2"t2.SFN4q0V2@q&t4+?VMl0kNTY4>^PWANh5!2.SHt4q0V2@q''%6+?VMl1,M0(4>^PX0KpUA2.SI#4q0V2@q.5W+?VMl1Gh9)4>^PX1-QgC2.SLR4q0V2@q.A[+?VMl1c.B*4>^PX2Ei6G2.SOT4q0V2@q.M_+?VMl2_dK*4>^PX@m2"t2.S[''4q0V2@q0%5+?VMl3&Wr04>^PXANh5!2.S^&4q0V2@q7;X+?VMl3B9844>^PY1-QgC2.U,S4q0V2@q7AZ+?VMl@:DD04>^PY1d3$E2.U-,4q0V2@q7G\+?VMl@PBtT4>^PY2Ei6G2.U/T4q0V2@q7M^+?VMl@V%_44>^PY3''JHI2.U2W4q0V2@q7S`+?VMl@q%V24>^PY@6Per2.U5P4q0V2@q9%4+?VMlA2?CY4>^PY@m2"t2.U6+4q0V2@q9+6+?VMlAM?:W4>^PYANh5!2.U9,4q0V2@q@AY+?VMlAi2a]4>^PZ1d3$E2.U</4q0V2@q@M]+?VMm0KD<+4>^PZ2Ei6G2.\L"4q0V2@q@S_+?VMm0k!6T4>^PZ3''JHI2.\Ns4q0V2@q@Ya+?VMm1,qH,4>^PZ@6Per2.\R&4q0V2@qB+5+?VMm1c%<)4>^PZ@m2"t2.\UU4q0V2@qB17+?VMm2)IK+4>^PZANh5!2.\X)4q0V2@qB79+?VMm2.\r\4>^P[0KpUA2.\[*4q0V2@qIV_+?VMm2`<i/4>^P[2a/?H2.\^T4q0V2@qK.5+?VMm3&<`-4>^P[@Qkns2.\aV4q0V2@qK47+?VMm3As&14>^P[A3M+u2.^2R4q0V2@qK:9+?VMm@5pF[4>^P[Aj.>"2.^5Q4q0V2A2#]$+?VMm@UqY34>^S&0g6^B2.^8P4q0V2A2#c&+?VMm@q%V24>^S&1HlpD2.^904q0V2A2#i(+?VMmA2-7W4>^S&2*N-F2.^;U4q0V2A2#o*+?VMmA2ug_4>^S&3BeQJ2.^>R4q0V2A2%UZ+?VMmAhcIY4>^S''0KpUA2.^B34q0V2A2,f&+?VMn0Jbm%4>^S''1d3$E2.eOO4q0V2A2,r*+?VMn0etp%4>^S''2Ei6G2.eU!4q0V2A2-#,+?VMn1,V6)4>^S''3''JHI2.eUS4q0V2A2-).+?VMn1Gh9)4>^S''@6Per2.eX''4q0V2A2.OW+?VMn1b_*&4>^S''@m2"t2.e[''4q0V2A2.UY+?VMn2)IK+4>^S''ANh5!2.e^*4q0V2A2.[[+?VMn2.Sl[4>^S(1-QgC2.eg''4q0V2A26#++?VMn3Fb5^4>^S(2Ei6G2.g8Q4q0V2A26)-+?VMn@5g@Z4>^S(@6Per2.g9/4q0V2A27UX+?VMn@P^1W4>^S(@m2"t2.g<-4q0V2A27a\+?VMn@q@h5ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1h8Br4s2sFAn3SZ%6QIX1G_3;4>g_]2*MI31h8C$4s2sFAn<\\%6QIX1H7Q@4>g_^1d2@21h8C&4s2sFAn<qc%6QIX1LrZl4>g__0g6%/1h8CR4s2sFAnF"d%6QIX1bh0:4>nlI@6P,_1h8Eu4s2sG0JI$$%6QIX1c7H>4>nlJ2a.[51h8F$4s2sG0JPRO%6QIX1cIT@4>nlJ@Qk5`1h8F&4s2sG0JYOM%6QIX1c[`B4>nlK3Bdm71h8FO4s2sG0JbCH%6QIX1h&Wk4>nlL1Hl711h8FQ4s2sG0Jd9(%6QIX2)%3:4>nlM@6P,_1h8Hu4s2sG0K!9&%6QIX2)IK>4>nlO@Qk5`1h8I$4s2sG0K1jQ%6QIX2)[W@4>nlQ0g6%/1h8I(4s2sG0K:sS%6QIX2.Jfm4>nlQAj-Yd1h8IS4s2sG0KCmP%6QIX2.\ro4>nlR2*MI31h8IU4s2sG0KD''U%6QIX2D@<;4>nm%1-Q.01h8L!4s2sG0Ocb#%6QIX2DRH=4>nm&2*MI31h8L#4s2sG0OeKT%6QIX2DdT?4>nm&ANgPc1h8L%4s2sG0Olq''%6QIX2E!`A4>nm''2EhR41h8L''4s2sG0Om+,%6QIX2E3lC4>nm''@Qk5`1h8L)4s2sG0On]Y%6QIX2IScl4>nm(1Hl711h8LR4s2sG0P!%)%6QIX2J,,q4>nm(@Qk5`1h8O#4s2sG0P*"''%6QIX2`!W?4>nm*1-Q.01h8O%4s2sG0P3.*%6QIX2`EoC4>nm*@m1>a1h8O)4s2sG0eb:F%6QIX2`X&E4>noJ1Hl711h8OR4s2sG0ekLK%6QIX2e"rn4>noK2EhR41h8OT4s2sG0em0%%6QIX2e5)p4>noKANgPc1h8OV4s2sG0etLJ%6QIX2eG5r4>noL3''Id61h8R%4s2sG0f1dP%6QIX3&EfA4>noNA3LGb1h8R''4s2sG0f3K+%6QIX3&WrC4>noO1-Q.01h8R)4s2sG0f:dO%6QIX3&j)E4>noO@6P,_1h8R+4s2sG0f<H)%6QIX3+G,p4>noP@6P,_1h8RV4s2sG0fLgN%6QIX3AE]?4>noQ@6P,_1h8U%4s2sG0fNT+%6QIX3AWiA4>noR1Hl711h8U''4s2sG0fW]-%6QIX3B'',E4>noS2EhR41h8U+4s2sG0k!%*%6QIX3B98G4>np&Aj-Yd1h8UT4s2sG0k*++%6QIX3FtAs4>np(2EhR41h8UY4s2sG0k4]W%6QIX@5''kf4>np(Aj-Yd1h:#L4s2sG0k<.*%6QIX@5:"h4>np)2a.[51h:#P4s2sG0kE.)%6QIX@:;>B4>nrLANgPc1h:$(4s2sG1,:UK%6QIX@:MJD4>nrM2a.[51h:$*4s2sG1,:jR%6QIX@:_VF4>nrMA3LGb1h:&M4s2sG1,CdO%6QIX@PU+i4>nrN3Bdm71h:&O4s2sG1,LdN%6QIX@Pg7k4>nrO@6P,_1h:&Q4s2sG1,NQ+%6QIX@Q6Oo4>nrP2a.[51h:'')4s2sG1,WW,%6QIX@UhSE4>nrQ1Hl711h:''+4s2sG1,_*U%6QIX@V%_G4>nrR1Hl711h:''-4s2sG1,iW*%6QIX@k^(h4>nrRANgPc1h:)N4s2sG1,q''R%6QIX@kp4j4>nrS2EhR41h:)P4s2sG1,rl0%6QIX@l-@l4>nrT1d2@21h:)R4s2sG1-%6V%6QIX@l?Ln4>ns''2EhR41h:)T4s2sG11<.+%6QIX@lQXp4>ns''@m1?5DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,fA7IV`+?VP;@:_V34>^SY@6Per2DS_s4q0V2A7RAX+?VP;A2-7W4>^SZ0g6^B2DSf#4q0V2A7RM\+?VP;An4(74>^SZ2*N-F2D[$B4q0V2A7RS^+?VP<0Om9U4>^SZ2a/?H2D[''A4q0V2A7RY`+?VP<0etp%4>^SZ3BeQJ2D[*J4q0V2A7T+4+?VP<11<?U4>^SZ@Qkns2D[-L4q0V2A7T:9+?VP<1c@N,4>^S[1-QgC2D[3H4q0V2A7[P\+?VP<2)d].4>^S[1d3$E2D[4!4q0V2A7[V^+?VP<2E<r14>^S[2Ei6G2D[7#4q0V2A7[\`+?VP<2_dK*4>^S[3''JHI2D[9M4q0V2A7[bb+?VP<3&!N*4>^S[@6Per2D[<L4q0V2A7]46+?VP<3&a#14>^S[@m2"t2D[=$4q0V2A7]@:+?VP<3Fb5^4>^S\0KpUA2D[@*4q0V2A7dP[+?VP<@:MJ14>^S\1-QgC2D\fR4q0V2A7dV]+?VP<@l$:X4>^S\1d3$E2D\i''4q0V2A7d\_+?VP<A26=X4>^S\3''JHI2D\o#4q0V2A7dhc+?VP<AN;p`4>^S\@6Per2D\oR4q0V2A7f:7+?VP<AhlOZ4>^S\@m2"t2D\r&4q0V2A7f@9+?VP=0K)*(4>^S\ANh5!2Dd*J4q0V2A7fF;+?VP=0etp%4>^V''0KpUA2Dd-J4q0V2AM>i&+?VP=1,(m$4>^V''1d3$E2Dd0K4q0V2AM?,.+?VP=1Gh9)4>^V''@6Per2Dd3J4q0V2AM@RW+?VP=2.A`Y4>^V''@m2"t2Dd:&4q0V2AM@XY+?VP=2E*f/4>^V''ANh5!2Dd=&4q0V2AM@^[+?VP=2`!W,4>^V(0KpUA2Dd@%4q0V2AMGo''+?VP=2e5)]4>^V(1-QgC2DdBN4q0V2AMGu)+?VP=3A<W+4>^V(1d3$E2DdEO4q0V2AMH&++?VP=3B9844>^V(2Ei6G2DdF''4q0V2AMH,-+?VP=3Fk;_4>^V(3''JHI2DdF+4q0V2AMH2/+?VP=@6$L\4>^V(@6Per2DelQ4q0V2AMI^Z+?VP=@lZ^^4>^V(ANh5!2Dequ4q0V2AMId\+?VP=A2QO[4>^V)0KpUA2Der''4q0V2AMPu(+?VP=AM?:W4>^V)1-QgC2Deu$4q0V2AMQ&*+?VP=ARmt64>^V)1d3$E2DeuW4q0V2AMQ,,+?VP=AhcIY4>^V)2Ei6G2Dm0D4q0V2AMQ2.+?VP>0K20)4>^V)3''JHI2Dm0s4q0V2AMQ80+?VP>0P3KX4>^V)@6Per2Dm3G4q0V2AMR^Y+?VP>0f_E,4>^V)@m2"t2Dm6F4q0V2AMRd[+?VP>1,M0(4>^V)ANh5!2Dm9G4q0V2AMRj]+?VP>1LrZY4>^V*0KpUA2Dm<I4q0V2AMZ&)+?VP>1c[`/4>^V*1-QgC2Dm?I4q0V2AMZ8/+?VP>2.Sl[4>^V*3''JHI2DmHK4q0V2AMZ>1+?VP>3Fk;_4>^V+0g6^B2Dnu&4q0V2AMc/++?VP>@pqP14>^V+1HlpD2Do#&4q0V2AMc5-+?VP>AhlOZ4>^V+2*N-F2E!6C4q0V2AMcA1+?VP?0P!?V4>^V+@Qkns2E!<F4q0V2AMds^+?VP?11EEV4>^V+Aj.>"2E!?K4q0V2AMl/*+?VP?1H.K,4>^V,0g6^B2E!BO4q0V2AMl5,+?VP?1h/]Y4>^V,1HlpD2E!C''4q0V2AMlA0+?VP?2)d].4>^V,2a/?H2E!F$4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QIY2.Sln4>o)V0Koq.1hAOU4s2sG2E*W[%6QIY2.f#p4>o)V@Qk5`1hAR!4s2sG2E,/1%6QIY2DIB<4>o)VAj-Yd1hAR%4s2sG2E>20%6QIY2DmZ@4>o)XANgPc1hAR''4s2sG2ISC*%6QIY2E*fB4>o*+@m1>a1hAR)4s2sG2I\C)%6QIY2E<rD4>o*,2*MI31hARR4s2sG2I\X0%6QIY2I\im4>o*,@6P,_1hARW4s2sG2IeU.%6QIY2_[E<4>o*-3''Id61hAU%4s2sG2Ind2%6QIY2`<iB4>o*.ANgPc1hAU)4s2sG2J"[.%6QIY2e"rn4>o*/@m1>a1hAX#4s2sG2_\Z(%6QIY3&*T>4>o,P@m1>a1hAX%4s2sG2_m''N%6QIY3&NlB4>o,R3Bdm71hAX)4s2sG2`!-O%6QIY3&a#D4>o,S1Hl711hAX+4s2sG2`##/%6QIY3&s/F4>o,T2*MI31hAXV4s2sG2`5,0%6QIY3+P2q4>o,V0Koq.1hAXX4s2sG2`<NW%6QIY3+b>s4>o,V@6P,_1hA[$4s2sG2`>/0%6QIY3AE]?4>o,VANgPc1hA[&4s2sG2`EKU%6QIY3AWiA4>o,W@m1>a1hA[(4s2sG2`NTW%6QIY3AiuC4>o,X@m1>a1hA[*4s2sG2`WWW%6QIY3B98G4>o--1-Q.01hA[U4s2sG2e+R+%6QIY3FY/p4>o-.2*MI31hA[W4s2sG2e-8[%6QIY@5C(i4>o-01-Q.01hC)P4s2sG2eG''6%6QIY@5U4k4>o-1Aj-Yd1hC)T4s2sG3&"l,%6QIY@6$Lo4>o/R0Koq.1hC**4s2sG3&5&/%6QIY@:h\G4>o/T1d2@21hC,M4s2sG3&>#-%6QIY@PL%h4>o/U1d2@21hC,O4s2sG3&ENW%6QIY@P^1j4>o/U3Bdm71hC,Q4s2sG3&YA4%6QIY@Pp=l4>o/X1d2@21hC,S4s2sG3&`c[%6QIY@Q-In4>o/XANgPc1hC,U4s2sG3&i]X%6QIY@Q?Up4>o/Y2EhR41hC-)4s2sG3&tG3%6QIY@U_MD4>o0-0Koq.1hC-+4s2sG3+4U,%6QIY@UqYF4>o0/@6P,_1hC--4s2sG3+HG^%6QIY@V.eH4>o000Koq.1hC/N4s2sG3+Op2%6QIY@kg.i4>o011Hl711hC/P4s2sG3+ZS`%6QIY@l?Ln4>o2R0g6%/1hC/U4s2sG3A<9R%6QIY@lQXp4>o2R2EhR41hC/W4s2sG3A=o+%6QIY@pqPD4>o2RAj-Yd1hC0+4s2sG3AE6P%6QIY@q.\F4>o2S3Bdm71hC0-4s2sG3AWKU%6QIY@q@hH4>o2U2EhR41hC2P4s2sG3A`KT%6QIYA26=k4>o2VAj-Yd1hC2R4s2sG3Ak>2%6QIYA2HIm4>o2X2*MI31hC2T4s2sG3At;0%6QIYA2ZUo4>o2X@m1>a1hC2V4s2sG3B&`X%6QIYA2laq4>o2Y@Qk5`1hC3,4s2sG3B1S6%6QIYA7IeG4>o2[0g6%/1hC3.4s2sG3B8o[%6QIYA7[qI4>o2[3''Id61hC304s2sG3B:\8%6QIYAM?:j4>o3.1d2@21hC5Q4s2sG3FOg0%6QIYAMQFl4>o3.A3LGb1hC5V4s2sG3FXp2%6QIYAN)dq4>o3/@6P,_1hC5X4s2sG3FZJ^%6QIYARdnH4>o302a.[51hC6/4s2sG3FcJ]%6QIYAhZCk4>o311Hl711hC8R4s2sG3Fk$3%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>^V]1-QgC2E>>(4q0V2AS*ha+?VPBAN;p`4>^V]2a/?H2E>>Z4q0V2AS*nc+?VPBAhlOZ4>^V]3BeQJ2E>A04q0V2AS,@7+?VPj0JG["4>^V]@Qkns2IS9s4q0V2AS,F9+?VPj0Od3T4>^V]A3M+u2IS<q4q0V2AS,L;+?VPj0f2''''4>^V]Aj.>"2IS=L4q0V2AhYo&+?VPj1-%N-4>^Y(0g6^B2IS@M4q0V2AhYu(+?VPj1L`NW4>^Y(1HlpD2ISEu4q0V2AhZ&*+?VPj1c7H+4>^Y(2*N-F2ISF$4q0V2Ah[XW+?VPj2)%3''4>^Y(@Qkns2ISIO4q0V2Ah[^Y+?VPj2DRH*4>^Y(A3M+u2ISL#4q0V2Ah[d[+?VPj2E!`.4>^Y(Aj.>"2ISO"4q0V2Ahc&)+?VPj2e"r[4>^Y)1HlpD2ISOT4q0V2Ahc,++?VPj2eG5_4>^Y)2*N-F2ISR$4q0V2Ahc2-+?VPj3A<W+4>^Y)2a/?H2ISU&4q0V2Ahc8/+?VPj3Fk;_4>^Y)@Qkns2IU$*4q0V2AhddZ+?VPj@Q$CZ4>^Y)A3M+u2IU'')4q0V2Ahdj\+?VPj@V.e54>^Y*1HlpD2IU/V4q0V2Ahl2,+?VPjARRb34>^Y*2*N-F2IU0,4q0V2Ahl8.+?VPjAhcIY4>^Y*2a/?H2IU2V4q0V2Ahl>0+?VPjAn+"64>^Y*@Qkns2I\Bq4q0V2Ahmj[+?VPk0f;-(4>^Y*A3M+u2I\CP4q0V2Ahmp]+?VPk11NKW4>^Y+1-QgC2I\IO4q0V2Ahu5,+?VPk1M/f[4>^Y+1d3$E2I\L!4q0V2AhuA0+?VPk2)IK+4>^Y+@Qkns2I\Qu4q0V2Ai!p\+?VPk2E*f/4>^Y+A3M+u2I\R)4q0V2Ai"!^+?VPk3&!N*4>^Y+Aj.>"2I\X$4q0V2Ai)2*+?VPk3+P2^4>^Y,0g6^B2I\[$4q0V2Ai)8,+?VPk@5:"U4>^Y,1HlpD2I^)O4q0V2Ai)>.+?VPk@:DD04>^Y,2*N-F2I^**4q0V2Ai)D0+?VPk@P^1W4>^Y,2a/?H2I^-+4q0V2Ai)J2+?VPk@k^(U4>^Y,3BeQJ2I^/Q4q0V2Ai*p[+?VPkA77Y24>^Y,@Qkns2I^604q0V2Ai+!]+?VPkAhuU[4>^Y,A3M+u2I^8X4q0V2Ai+''_+?VPkAnF494>^Y,Aj.>"2IeEu4q0V2Ai28++?VPl0ebd#4>^Y-0g6^B2IeIN4q0V2Ai2>-+?VPl1,M0(4>^Y-1HlpD2IeO!4q0V2Ai2D/+?VPl1H%E+4>^Y-2*N-F2IeOT4q0V2Ai2J1+?VPl1c%<)4>^Y-2a/?H2IeRQ4q0V2Ai2P3+?VPl1hJo\4>^Y-@m2"t2IeU)4q0V2Ai40a+?VPl2E!`.4>^Y.0KpUA2IeX*4q0V2Ai;A-+?VPl2`*]-4>^Y.1-QgC2Ie^''4q0V2Ai;G/+?VPl3&s/34>^Y.1d3$E2Ie^W4q0V2Ai;M1+?VPl3B0234>^Y.2Ei6G2Ig0*4q0V2Ai;Y5+?VPl@Q$CZ4>^Y.ANh5!2Ig8S4q0V2AiDM0+?VPlAM?:W4>^Y/1d3$E2Ig>R4q0V2AiDS2+?VPlAnF494>^Y/2Ei6G2InKu4q0V2AiDY4+?VPm0K20)4>^Y/3''JHI2InLM4q0V2AiD_6+?VPm0etp%4>^Y/@6Per2InO!4q0V2AiF0_+?VPm0kNTY4>^Y/@m2"t2InR!4q0V2AiF6a+?VPm1,qH,ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>1hJ^$4s2sGA27^[%6QIZ3&*T>4>p_+@6P,_1hJ^&4s2sGA2@^Z%6QIZ3&<`@4>p_,@m1>a1hJ^(4s2sGA2Z/+%6QIZ3&a#D4>p_.2a.[51hJ^,4s2sGA2\$`%6QIZ3&s/F4>p_/1-Q.01hJ^U4s2sGA2l>.%6QIZ3+>&o4>p_0Aj-Yd1hJ^W4s2sGA2uJ1%6QIZ3ANc@4>p_Z1d2@21hJa*4s2sGA7B%4%6QIZ3As&D4>p_ZAj-Yd1hJa,4s2sGA7IS_%6QIZ3B02F4>p_[@m1>a1hJa.4s2sGA7RAX%6QIZ3FP)o4>p_\1-Q.01hJaW4s2sGA7RS^%6QIZ3Fb5q4>p_\A3LGb1hJaY4s2sGA7[GY%6QIZ@5C(i4>p_]@m1>a1hL/Q4s2sGA7d_`%6QIZ@5U4k4>p_^@m1>a1hL/S4s2sGAM>u*%6QIZ@5g@m4>pb)3''Id61hL/U4s2sGAM@OV%6QIZ@6$Lo4>pb*A3LGb1hL0)4s2sGAMQ#)%6QIZ@:DDC4>pb+3''Id61hL0+4s2sGAMZ8/%6QIZ@:VPE4>pb-0Koq.1hL0-4s2sGAMc8.%6QIZ@:h\G4>pb-ANgPc1hL2N4s2sGAMl2+%6QIZ@Pg7k4>pb/1Hl711hL2S4s2sGAN)J1%6QIZ@Q$Cm4>pb1Aj-Yd1hL2U4s2sGAN;V3%6QIZ@Q6Oo4>pb23''Id61hL3+4s2sGAR[DY%6QIZ@UhSE4>pb[2*MI31hL3-4s2sGAR[S^%6QIZ@V%_G4>pb[A3LGb1hL3/4s2sGARdM[%6QIZ@k^(h4>pb\3''Id61hL5P4s2sGARmY^%6QIZ@kp4j4>pb]3Bdm71hL5T4s2sGAS*\]%6QIZ@l?Ln4>pb_2*MI31hL5V4s2sGAS*kb%6QIZ@lQXp4>pb_@m1>a1hL5X4s2sGAhZ&*%6QIZ@pqPD4>pe*3Bdm71hL6,4s2sGAh[^Y%6QIZ@q.\F4>pe+1Hl711hL604s2sGAhl2,%6QIZA2?Cl4>pe,@6P,_1hL8T4s2sGAhmm\%6QIZA2QOn4>pe-0Koq.1hL8V4s2sGAhu5,%6QIZA2c[p4>pe-@m1>a1hL8X4s2sGAi"!^%6QIZA2ugr4>pe.Aj-Yd1hL9,4s2sGAi2>-%6QIZA7@_F4>pe/3Bdm71hL904s2sGAi;A-%6QIZA7e"J4>pe01Hl711hL;Q4s2sGAi;P2%6QIZAMH@k4>pe0Aj-Yd1hL;S4s2sGAiDG.%6QIZAMZLm4>pe11d2@21hL;U4s2sGAiD\5%6QIZAMlXo4>pe21-Q.01hL;Y4s2sGAiMe7%6QIZAR[hG4>pe31-Q.01hL<14s2sGAiVh7%6QIZAS++K4>pe3Aj-Yd1hL>R4s2sGAmmDX%6QIZAhcIl4>pe[2*MI31hL>T4s2sGAmmY_%6QIZAhuUn4>pe[@6P,_1hL>V4s2sGAn!Y^%6QIZAiDmr4>pe]3Bdm71hL>Z4s2sGAn3_^%6QIZAiW$t4>pe^3''Id61hL?.4s2sGAn5@7%6QIZAn!qH4>pe^ANgPc1hL?24s2sGAn>O;%6QIZAnF4L4>pe`1Hl712)$^<4s2sGAnEk`%6QL%0JPa64>pe`2EhR42)$^>4s2sGAnGI8%6QL%0Jbm84?"rJ2a.[52)$^B4s2sH0JYOM%6QL%0K20<4?"rM0Koq.2)$^D4s2sH0JbIJ%6QL%0KD<>4?"rM3''Id62)$^m4s2sH0Jd3&%6QL%0Od3g4?"rN1d2@[DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,g0JI!#+?VS:1c@N,4>efHA3M+u2_[("4q0V30JI''%+?VS:2)@E*4>efHAj.>"2_[+#4q0V30JP7F+?VS:2E!`.4>efI0g6^B2_[-M4q0V30JP=H+?VS:2J,,^4>efI1HlpD2_[1%4q0V30JPCJ+?VS:3&*T+4>efI2*N-F2_[3L4q0V30JPIL+?VS:3Aiu04>efI2a/?H2_[7$4q0V30JPON+?VS:@5^:Y4>efI3BeQJ2_\ZO4q0V30JR!"+?VS:@PBtT4>efI@Qkns2_\]L4q0V30JR''$+?VS:@pqP14>efIAj.>"2_\cP4q0V30JY=G+?VS:AS++84>efJ0g6^B2_\iP4q0V30JYCI+?VS;0Jbm%4>efJ1HlpD2_d!E4q0V30JYIK+?VS;0k3BV4>efJ2*N-F2_d''A4q0V30JYXP+?VS;1GM''&4>efJ@6Per2_d-F4q0V30J[*$+?VS;1c@N,4>efJANh5!2_d0I4q0V30J[6(+?VS;2)d].4>efK0KpUA2_d1#4q0V30JbFI+?VS;2DRH*4>efK1-QgC2_d3M4q0V30JbLK+?VS;3&!N*4>efK1d3$E2_d9L4q0V30JbXO+?VS;3FY/]4>efK@6Per2_e_t4q0V30Jd6''+?VS;@:h\44>efKANh5!2_ebs4q0V30Jd<)+?VS;@q%V24>efL0KpUA2_efS4q0V30JkLJ+?VS;A2ZU\4>efL1-QgC2_ei''4q0V30JkRL+?VS;A7@_34>efL1d3$E2_ekt4q0V30JkXN+?VS;ARdn54>efL2Ei6G2_eo)4q0V30Jk^P+?VS;An4(74>efL3''JHI2_m''A4q0V30JkdR+?VS<0K20)4>efLA3M+u2_m*E4q0V30Jm?)+?VS<0fM9*4>efLAj.>"2_m*r4q0V30JtOJ+?VS<0kNTY4>efM0g6^B2_m-G4q0V30JtUL+?VS<1,qH,4>efM1HlpD2_m0F4q0V30JtaP+?VS<1bq6(4>efM2a/?H2_m4!4q0V30K!9&+?VS<2)[W-4>efM@Qkns2_m7!4q0V30K!?(+?VS<2D[N+4>efMA3M+u2_m:''4q0V30K!E*+?VS<2`*]-4>efMAj.>"2_m<O4q0V30K(UK+?VS<3&3Z,4>efN0g6^B2_m?O4q0V30K([M+?VS<3+P2^4>efN1HlpD2_mBK4q0V30K(aO+?VS<3As&14>efN2*N-F2_mC''4q0V30K(pT+?VS<@lZ^^4>efN@6Per2_no!4q0V30K*B(+?VS<AMQFY4>efN@m2"t2_nr%4q0V30K*H*+?VS<AN2j_4>efNANh5!2_nu%4q0V30K*N,+?VS<AiDm_4>efO1-QgC2`!-J4q0V30K1dO+?VS=0f)!&4>efO2a/?H2`!3C4q0V30K1sT+?VS=1,;$&4>efO@Qkns2`!6E4q0V30K3K*+?VS=1Gh9)4>efOA3M+u2`!9H4q0V30K3Q,+?VS=1hAi[4>efOAj.>"2`!<N4q0V30K:aM+?VS=2.JfZ4>efP0g6^B2`!?G4q0V30K:gO+?VS=2DdT,4>efP1HlpD2`!?P4q0V30K:sS+?VS=2J,,^4>efP2a/?H2`!BO4q0V30K;$U+?VS=2e,#\4>efP3BeQJ2`!EJ4q0V30K<K)+?VS=3&j)24>efP@Qkns2`!HL4q0V30K<Q++?VS=3Aiu04>efPA3M+u2`!I*4q0V30K<W-+?VS=@5''kS4>efPAj.>"2`"l#4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QL%3ANc@4?#''*1d2@22)%$H4s2sH1L`:,%6QL%3B'',E4?#''*Aj-Yd2)%$M4s2sH1Li=,%6QL%3B98G4?#''+3''Id62)%%!4s2sH1Lr7)%6QL%3Fk;r4?#''-1-Q.02)%%%4s2sH1M(#Z%6QL%3G(Gt4?#''-ANgPc2)&Gm4s2sH1M/L.%6QL%@50qg4?#''.3''Id62)&Go4s2sH1b^aM%6QL%@5U4k4?#)OA3LGb2)&Gs4s2sH1biT+%6QL%@5g@m4?#)P1d2@22)&HI4s2sH1c-sO%6QL%@:h\G4?#)R@m1>a2)&Jn4s2sH1c/c-%6QL%@PL%h4?#)SA3LGb2)&Jp4s2sH1c@-R%6QL%@Q?Up4?#)UA3LGb2)&KJ4s2sH1cR0Q%6QL%@V%_G4?#)V@6P,_2)&KO4s2sH1cSu/%6QL%@k^(h4?#)W0Koq.2)&Mp4s2sH1c])1%6QL%@kp4j4?#**@Qk5`2)&Mr4s2sH1h&1''%6QL%@l-@l4?#*+2EhR42)&Mt4s2sH1h&F.%6QL%@l?Ln4?#*+@m1>a2)&N!4s2sH1h/4''%6QL%@lQXp4?#*,A3LGb2)&N#4s2sH1h8:(%6QL%@pqPD4?#*-1Hl712)&NL4s2sH1h:&Z%6QL%@q.\F4?#*.3Bdm72)&NP4s2sH2)$gM%6QL%A2?Cl4?#,P1Hl712)&Pt4s2sH2)/T)%6QL%A2QOn4?#,PANgPc2)&Q!4s2sH2)6pN%6QL%A2c[p4?#,Q1d2@22)&Q#4s2sH2)A]*%6QL%A2ugr4?#,RAj-Yd2)&QL4s2sH2)I*Q%6QL%A7RkH4?#,SANgPc2)&QP4s2sH2)Sf+%6QL%A7e"J4?#,U0Koq.2)&Sq4s2sH2)[9T%6QL%AMH@k4?#,U2a.[52)&Ss4s2sH2)\o-%6QL%AMZLm4?#,W3''Id62)&Su4s2sH2*!KW%6QL%AN)dq4?#-+1Hl712)&T$4s2sH2.8L/%6QL%AN;ps4?#-,1d2@22)&TM4s2sH2.J=(%6QL%AR[hG4?#--1Hl712)&TO4s2sH2.L&Y%6QL%ARmtI4?#--ANgPc2)&TQ4s2sH2.SL,%6QL%AS++K4?#-.ANgPc2)&Vt4s2sH2.\^1%6QL%AhuUn4?#-01Hl712)&W!4s2sH2.ej4%6QL%Ai2ap4?#-0Aj-Yd2)&W#4s2sH2D?jL%6QL%AmmkG4?#/P@Qk5`2)&WO4s2sH2DHmL%6QL%An+"I4?#/Q2*MI32)&WQ4s2sH2DR3T%6QL&0JG[54?#/S0g6%/2)-d@4s2sH2Dd3R%6QL&0K;6=4?#/U2*MI32)-dF4s2sH2DmHX%6QL&0O[-f4?#/U@m1>a2)-do4s2sH2E!<S%6QL&0Om9h4?#/V2*MI32)-g@4s2sH2E*?S%6QL&0f;-;4?#/X1Hl712)-gD4s2sH2E5/0%6QL&0fM9=4?#/Y1-Q.02)-gr4s2sH2E>>4%6QL&0kENk4?#0,1d2@22)-gt4s2sH2IU)Z%6QL&1,(m74?#0-1d2@22)-j@4s2sH2I\R.%6QL&1,;$94?#0-3''Id62)-jG4s2sH2Ing3%6QL&1-%N@4?#002*MI32)-jp4s2sH2J$;\%6QL&11EEi4?#00@m1>a2)-jr4s2sH2J+[-%6QL&11WQk4?#013Bdm72)-jt4s2sH2J-D^%6QL&1GM''94?#2Q1-Q.02)-mB4s2sH2_[0S%6QL&1G_3;4?#2Q@6P,_2)-mD4s2sH2_\`*%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>eiL2*N-F2`EHF4q0V30f(dQ+?VSA0kNTY4>eiL@Qkns2`EKO4q0V30f*<''+?VSA1Gh9)4>eiLA3M+u2`ENQ4q0V30f*B)+?VSA1L`NW4>eiLAj.>"2`EO(4q0V30f1RJ+?VSA1c%<)4>eiM1HlpD2`ETL4q0V30f1^N+?VSA2.8ZX4>eiM2a/?H2`EWM4q0V30f1jR+?VSA2DmZ-4>eiM3BeQJ2`EWS4q0V30f3<&+?VSA2Ieo[4>eiM@Qkns2`EZS4q0V30f3B(+?VSA2e5)]4>eiMAj.>"2`E`T4q0V30f:XK+?VSA3B9844>eiN0g6^B2`G/!4q0V30f:^M+?VSA@5:"U4>eiN1HlpD2`G/R4q0V30f:dO+?VSA@:_V34>eiN2*N-F2`G2+4q0V30f:jQ+?VSA@UqY34>eiN2a/?H2`G5*4q0V30f:pS+?VSA@lZ^^4>eiN3BeQJ2`G5W4q0V30f<H)+?VSAA7[q64>eiNA3M+u2`G;&4q0V30f<N++?VSAAN)d^4>eiNAj.>"2`G>&4q0V30fC^L+?VSAAiMs`4>eiO2*N-F2`NKM4q0V30fCpR+?VSB0Om9U4>eiO2a/?H2`NL''4q0V30fD!T+?VSB0ekj$4>eiO3BeQJ2`NQJ4q0V30fEH(+?VSB11WQX4>eiO@Qkns2`NTI4q0V30fEN*+?VSB1c%<)4>eiOAj.>"2`N]L4q0V30fLjO+?VSB2IScY4>eiP1HlpD2`N^,4q0V30fLpQ+?VSB2`!W,4>eiP2*N-F2`NcR4q0V30fM!S+?VSB3+b>`4>eiP2a/?H2`NfR4q0V30fM''U+?VSB3G(Ga4>eiP3BeQJ2`P5&4q0V30fNN)+?VSB@5pF[4>eiPA3M+u2`P8X4q0V30fNZ-+?VSB@lQX]4>eiPAj.>"2`P;Z4q0V30fUjN+?VSBA2-7W4>eiQ1HlpD2`P>,4q0V30fV!R+?VSBA77Y24>eiQ2*N-F2`PA&4q0V30fV''T+?VSBAN)d^4>eiQ2a/?H2`PAW4q0V30fV-V+?VSBAi)[\4>eiQ3BeQJ2`PD.4q0V30fWT*+?VSBAmmk44>eiQA3M+u2`WR%4q0V30fW`.+?VSC0P3KX4>eiR0g6^B2`WTQ4q0V30f_!Q+?VSC1,hB+4>eiR1HlpD2`WX(4q0V30f_''S+?VSC1GM''&4>eiR2*N-F2`W[(4q0V30f_6X+?VSC1grQW4>eiRA3M+u2`W`T4q0V30f`f/+?VSC2.f#]4>eiRAj.>"2`WcO4q0V30jub"+?VSC2E*f/4>ej%0g6^B2`WfW4q0V30juh$+?VSC2e,#\4>ej%1HlpD2`WiO4q0V30jut(+?VSC3A`o/4>ej%2a/?H2`Wm-4q0V30k!%*+?VSC3Fk;_4>ej%3BeQJ2`Y;+4q0V30k"KS+?VSC@:DD04>ej%@Qkns2`Y>$4q0V30k"QU+?VSC@Pg7X4>ej&0KpUA2`YA)4q0V30k)k$+?VSC@l?L[4>ej&1-QgC2`YD[4q0V30k*+++?VSCAi2a]4>ej&3BeQJ2`YJ04q0V30k+WV+?VSk0O[-S4>ej&A3M+u2dnCM4q0V30k+]X+?VSk0fV?+4>ej&Aj.>"2dnFP4q0V30k2n$+?VSk1,;$&4>ej''0g6^B2dnHu4q0V30k2t&+?VSk1,hB+4>ej''1HlpD2dnKr4q0V30k3%(+?VSk1G_3(4>ej''2*N-F2dnL&4q0V30k3+*+?VSk1bq6(ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>2)/T"4s2sH@5Ki*%6QL&@lQXp4?$\*@m1>a2)/T$4s2sH@5Tf(%6QL&@pqPD4?$\,0Koq.2)/TM4s2sH@5^#-%6QL&@q.\F4?$\-2*MI32)/TO4s2sH@5ha]%6QL&@q@hH4?$\.0Koq.2)/Vt4s2sH@5q[Z%6QL&A2ZUo4?$\/3Bdm72)/W#4s2sH@6%d\%6QL&A2laq4?$\W0Koq.2)/W%4s2sH@::rU%6QL&A77YE4?$\W@m1>a2)/WN4s2sH@:D#V%6QL&A7IeG4?$\X2EhR42)/WP4s2sH@:D5\%6QL&A7[qI4?$\X@Qk5`2)/Ys4s2sH@:M8\%6QL&AMQFl4?$\Z@m1>a2)/Yu4s2sH@:_2X%6QL&AMcRn4?$\[2EhR42)/Z"4s2sH@:h>[%6QL&AMu^p4?$\\3''Id62)/Z$4s2sH@:j%6%6QL&AN2jr4?$_''2EhR42)/Z&4s2sH@PBc*%6QL&ARRbF4?$_''@6P,_2)/ZO4s2sH@PD:U%6QL&ARdnH4?$_''ANgPc2)/ZQ4s2sH@PKW%%6QL&AS"%J4?$_(3''Id62)/ZS4s2sH@PTf)%6QL&AhlOm4?$_)Aj-Yd2)/]!4s2sH@P]f(%6QL&Ai)[o4?$_*2*MI32)/]#4s2sH@Pfr+%6QL&Ai;gq4?$_+3''Id62)/]%4s2sH@Por*%6QL&AiMss4?$_,Aj-Yd2)/]Q4s2sH@Q$51%6QL&An4(J4?$_.0g6%/2)/]S4s2sH@Q-),%6QL&AnF4L4?$_/A3LGb2)6j>4s2sH@Q7p_%6QL''0JPa64?$_01-Q.02)6j@4s2sH@Q?G4%6QL''0Jbm84?$_0@m1>a2)6jB4s2sH@UUrS%6QL''0Ju$:4?$_YANgPc2)6jG4s2sH@Uq;Z%6QL''0O[-f4?$_[3Bdm72)6jp4s2sH@Urq3%6QL''0Om9h4?$_[A3LGb2)6jr4s2sH@V%8X%6QL''0P*Ej4?$_\2EhR42)6jt4s2sH@V&t3%6QL''0ebd64?$_]1Hl712)6m@4s2sH@V.P_%6QL''0etp84?$_]ANgPc2)6mB4s2sH@k]T#%6QL''0f2'':4?$b(3Bdm72)6mD4s2sH@k_@U%6QL''0fD3<4?$b(Aj-Yd2)6mq4s2sH@l5r(%6QL''0k3Bi4?$b-1-Q.02)6ms4s2sH@l6),%6QL''1,(m74?$b-Aj-Yd2)6pA4s2sH@l?2.%6QL''1,;$94?$b.2a.[52)6pC4s2sH@l?>2%6QL''1,M0;4?$b/1-Q.02)6pE4s2sH@lIs_%6QL''1,_<=4?$b00g6%/2)6pG4s2sH@lS!_%6QL''1,qH?4?$bY1-Q.02)6pI4s2sH@pq2X%6QL''11<?h4?$bY2EhR42)6pr4s2sH@pq>\%6QL''1GD!84?$b\2*MI32)6sB4s2sH@q7M^%6QL''1H%E>4?$b]1-Q.02)6sH4s2sH@q@M]%6QL''1H7Q@4?$b]Aj-Yd2)6t!4s2sH@qI\a%6QL''1M/fn4?$b^@6P,_2)7!B4s2sHA2#f''%6QL''1bh0:4?$e*1Hl712)7!D4s2sHA2,r*%6QL''1c%<<4?$e*@m1>a2)7!H4s2sHA2?2/%6QL''1cIT@4?$e-0g6%/2)7!J4s2sHA2H;1%6QL''1c[`B4?$e-A3LGb2)7!s4s2sHA2Q)*%6QL''1h8cm4?$e.3Bdm72)7$C4s2sHA2Z5-%6QL''2).9;4?$e/3Bdm72)7$E4s2sHA2c2+%6QL''2)@E=4?$e02*MI\DId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,g1,UmP+?VSn2dnlZ4>elO2*N-F2e4m(4q0V31,UsR+?VSn3&Wr04>elO2a/?H2e4p.4q0V31,V$T+?VSn@5C(V4>elO@m2"t2e6>W4q0V31,WT++?VSn@:DD04>elOANh5!2e6?.4q0V31,WZ-+?VSn@PBtT4>elP0KpUA2e6DT4q0V31,^pP+?VSn@qIn64>elP1d3$E2e6GX4q0V31,_!R+?VSnA7Ie44>elP2Ei6G2e6JX4q0V31,_''T+?VSnAi;g^4>elP3''JHI2e6M\4q0V31,_-V+?VSo0Jbm%4>elP@m2"t2e=[P4q0V31,gpO+?VSo1,(m$4>elQ1-QgC2e=a"4q0V31,h''S+?VSo1Gq?*4>elQ2Ei6G2e=d*4q0V31,h-U+?VSo1L`NW4>elQ@6Per2e=g*4q0V31,iZ++?VSo2)%3''4>elR0KpUA2e=m&4q0V31,q!P+?VSo2J,,^4>elR1-QgC2e=p+4q0V31,q-T+?VSo3&*T+4>elR3''JHI2e=sW4q0V31,q9X+?VSo3+P2^4>elR@6Per2e>!+4q0V31,r`,+?VSp1H.K,4>elS0g6^B2eFm*4q0V31-%*R+?VSp1h&WX4>elS2*N-F2eFp*4q0V31-%6V+?VSp2)mc/4>elS2a/?H2eFpX4q0V31-&f-+?VSp2D[N+4>elS@m2"t2eFs+4q0V31-&l/+?VSp2E3l04>elSANh5!2eG!.4q0V311;q%+?VSp3&3Z,4>em&3''JHI2eG''\4q0V311<1,+?VSp@50qT4>em&@6Per2eHK-4q0V311=WU+?VSp@:h\44>em&@m2"t2eHMW4q0V311=]W+?VSp@V.e54>em&ANh5!2eHSY4q0V311=cY+?VSpA7@_34>em''1-QgC2eHVZ4q0V311E%''+?VSpARdn54>em''1d3$E2eHW44q0V311E+)+?VSpAhuU[4>em''3''JHI2eHZ54q0V311E7-+?VV;0Jks&4>em''ANh5!3&!''D4q0V311FiZ+?VV;0fD3)4>em(0KpUA3&!''I4q0V311N%&+?VV;0kENX4>em(1-QgC3&!*B4q0V311N+(+?VV;1,_<*4>em(1d3$E3&!*I4q0V311N1*+?VV;11NKW4>em(2Ei6G3&!-B4q0V311N7,+?VV;1cRZ.4>em(3''JHI3&!3F4q0V311N=.+?VV;2)RQ,4>em(@6Per3&!6F4q0V311OcW+?VV;2_dK*4>em(ANh5!3&!?K4q0V311Oo[+?VV;3B0234>em)0KpUA3&!@$4q0V311W+''+?VV;@5^:Y4>em)1-QgC3&"cM4q0V311W1)+?VV;@:VP24>em)1d3$E3&"f!4q0V311W7++?VV;@l?L[4>em)2Ei6G3&"iN4q0V311WC/+?VV;A2ug_4>em)@6Per3&"lQ4q0V311XiX+?VV;AM?:W4>em)@m2"t3&"oU4q0V311XoZ+?VV;AiDm_4>em)ANh5!3&"rU4q0V311Xu\+?VV<0KD<+4>em*1-QgC3&*0F4q0V311`7*+?VV<1,hB+4>em*1d3$E3&*3C4q0V311`=,+?VV<1LWHV4>em*2Ei6G3&*6E4q0V311`C.+?VV<1c@N,4>em*3''JHI3&*6u4q0V311aoY+?VV<2D@<(4>em*@m2"t3&*<J4q0V311au[+?VV<2Inu\4>em*ANh5!3&*?K4q0V311i@,+?VV<3&Wr04>em+2*N-F3&*C%4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QL''Ai;gq4?,&UANgPc2)8c&4s2sI0k!(+%6QL''AiMss4?,'')0Koq.2)8c(4s2sI0k)t''%6QL''An+"I4?,''*@6P,_2)8cS4s2sI0k4fZ%6QL''An=.K4?,''+0g6%/2)8cU4s2sI0k<:.%6QL(0JG[54?,''+@6P,_2)?p@4s2sI0k=fY%6QL(0JYg74?,'',0Koq.2)?pB4s2sI0kFiY%6QL(0Jks94?,''-2EhR42)?pG4s2sI1,1IH%6QL(0KD<>4?,)N2EhR42)?pp4s2sI1,1aP%6QL(0Od3g4?,)P1Hl712)?pr4s2sI1,CmR%6QL(0P!?i4?,)PA3LGb2)?pt4s2sI1,NN*%6QL(0P3Kk4?,)R0g6%/2)?s@4s2sI1,V$T%6QL(0ekj74?,)R@6P,_2)?sB4s2sI1,WZ-%6QL(0f)!94?,)S3''Id62)?sF4s2sI1,h$R%6QL(0fM9=4?,)T2a.[52)?sH4s2sI1,q''R%6QL(0f_E?4?,)U@6P,_2)?sq4s2sI1-%$P%6QL(0k*<h4?,)V1d2@22)?ss4s2sI1-%<X%6QL(1,M0;4?,**0Koq.2)@!F4s2sI11FfY%6QL(1,_<=4?,*+2*MI32)@!H4s2sI11W1)%6QL(1,qH?4?,*,@m1>a2)@!J4s2sI11`.''%6QL(11<?h4?,*-1Hl712)@!s4s2sI11`I0%6QL(11NKj4?,*-@Qk5`2)@$F4s2sI1GCdP%6QL(1L`Nj4?,,P@6P,_2)@%"4s2sI1G`N)%6QL(1M/fn4?,,R1Hl712)@''C4s2sI1GpjM%6QL(1bh0:4?,,T1Hl712)@''E4s2sI1H/`+%6QL(1c%<<4?,,V1-Q.02)@''G4s2sI1H76U%6QL(1c[`B4?,,WA3LGb2)@(!4s2sI1LW7,%6QL(1h8cm4?,-+@Qk5`2)@*E4s2sI1Li1(%6QL(2)7?<4?,--0g6%/2)@*G4s2sI1Lr=+%6QL(2)IK>4?,--3''Id62)@*L4s2sI1M/O/%6QL(2*!iC4?,-/@Qk5`2)@+"4s2sI1b`B&%6QL(2.Sln4?,/R2*MI32)@+$4s2sI1c%-U%6QL(2.f#p4?,/R@m1>a2)@-E4s2sI1c.*S%6QL(2DIB<4?,/S@6P,_2)@-G4s2sI1c7!O%6QL(2D[N>4?,/T@6P,_2)@-K4s2sI1cAl.%6QL(2E<rD4?,/V1Hl712)@.!4s2sI1cI?W%6QL(2I\im4?,/W1-Q.02)@.#4s2sI1cSo-%6QL(2Inuo4?,/X0g6%/2)@.%4s2sI1c]/3%6QL(2J,,q4?,0+3''Id62)@0F4s2sI1gsoY%6QL(2_dK=4?,0+Aj-Yd2)@0H4s2sI1h&:*%6QL(2`3cA4?,0,A3LGb2)@0L4s2sI1h/7(%6QL(2`EoC4?,0-@6P,_2)@1"4s2sI1h8C+%6QL(2e"rn4?,0.2EhR42)@1$4s2sI1hC2]%6QL(2e5)p4?,0/Aj-Yd2)@1&4s2sI1hJI+%6QL(2eG5r4?,00@6P,_2)@3G4s2sI1hL8^%6QL(3&*T>4?,2P0Koq.2)@3I4s2sI2)$pP%6QL(3&<`@4?,2PANgPc2)@3K4s2sI2)-sP%6QL(3&NlB4?,2QAj-Yd2)@3M4s2sI2)7''R%6QL(3&a#D4?,2R@6P,_2)@3O4s2sI2)?pM%6QL(3&s/F4?,2T2EhR42)@6H4s2sI2)Sr/%6QL(3AE]?4?,2V0g6%/2)@6J4s2sI2)[9T%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>eoT1HlpD3&NU''4q0V31H@9U+?VV@2`Nu14>eoT2*N-F3&NX''4q0V31H@?W+?VV@2e>/^4>eoT2a/?H3&NZL4q0V31H@EY+?VV@3&Wr04>eoT@Qkns3&N[*4q0V31HAr/+?VV@3B'',24>eoTA3M+u3&N]V4q0V31HB#1+?VV@3Fk;_4>ep''0g6^B3&P,R4q0V31LW%&+?VV@@lHR\4>ep''1HlpD3&P5#4q0V31LW+(+?VV@AiW$a4>ep''2*N-F3&P;Y4q0V31LW1*+?VVA0JG["4>ep''2a/?H3&WHI4q0V31LW7,+?VVA0Od3T4>ep''3BeQJ3&WKN4q0V31LX]U+?VVA0kNTY4>ep''@Qkns3&WNI4q0V31LXcW+?VVA1,hB+4>ep''Aj.>"3&WO(4q0V31L`%%+?VVA1LiTX4>ep(0g6^B3&WTJ4q0V31L`+''+?VVA1c.B*4>ep(1HlpD3&WWM4q0V31L`7++?VVA2J,,^4>ep(2a/?H3&W]M4q0V31L`=-+?VVA2`Nu14>ep(@Qkns3&Wa*4q0V31LaiX+?VVA3+P2^4>ep(A3M+u3&WcS4q0V31LaoZ+?VVA@5pF[4>ep(Aj.>"3&Y2R4q0V31Li4)+?VVA@Pg7X4>ep)1d3$E3&Y8#4q0V31Li@-+?VVA@lZ^^4>ep)3''JHI3&Y;Y4q0V31LiF/+?VVAAMZLZ4>ep)@6Per3&Y>.4q0V31LjlX+?VVAARdn54>ep)ANh5!3&YAX4q0V31Lk#\+?VVB0K)*(4>ep*1HlpD3&`QH4q0V31Lr=++?VVB0k<HW4>ep*2*N-F3&`TI4q0V31LrC-+?VVB1,V6)4>ep*@Qkns3&`WP4q0V31M&7(+?VVB1h/]Y4>ep+0g6^B3&`]T4q0V31M&=*+?VVB2D@<(4>ep+2*N-F3&`a,4q0V31M&I.+?VVB3&<`-4>ep+2a/?H3&`g,4q0V31M&O0+?VVB3B0234>ep+3BeQJ3&`j/4q0V31M''uY+?VVB@5C(V4>ep+@Qkns3&b8(4q0V31M(&[+?VVB@:VP24>ep+A3M+u3&b;''4q0V31M(,]+?VVB@U_M14>ep+Aj.>"3&b;W4q0V31M/=)+?VVB@k^(U4>ep,0g6^B3&b>+4q0V31M/I-+?VVBA26=X4>ep,2a/?H3&bD)4q0V31M/U1+?VVBAiDm_4>ep,3BeQJ3&iU&4q0V31M1&Z+?VVC0ekj$4>ep,@Qkns3&iWM4q0V31M1,\+?VVC1,1s%4>ep,A3M+u3&i]L4q0V31M12^+?VVC1H@W.4>ep,Aj.>"3&i`O4q0V31b^UI+?VVC1grQW4>erL0g6^B3&ia+4q0V31b^[K+?VVC2.\r\4>erL1HlpD3&ig-4q0V31b^aM+?VVC2e5)]4>erL2*N-F3&ip-4q0V31b^gO+?VVC3Fk;_4>erL2a/?H3&k>%4q0V31b^mQ+?VVC@:;>/4>erL3BeQJ3&kD%4q0V31b`?%+?VVC@l6FZ4>erL@Qkns3&kDV4q0V31b`E''+?VVC@q7b44>erLA3M+u3&kG(4q0V31b`K)+?VVCA2la^4>erLAj.>"3&kJ]4q0V31bg[J+?VVCAhcIY4>erM0g6^B3&kM14q0V31bgaL+?VVCAn=.84>erM1HlpD3&rZL4q0V31bggN+?VVD0O[-S4>erM2*N-F3&r[&4q0V31bgmP+?VVD0ekj$4>erM2a/?H3&r]N4q0V31bgsR+?VVD0k!6TASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>2)I$J4s2sI3ANNW%6QL)0k!6g4?,>V@Qk5`2)I$u4s2sI3AY)-%6QL)0kENk4?,>XA3LGb2)I%"4s2sI3AiQU%6QL)1,(m74?,>Y2EhR42)I''C4s2sI3Aic[%6QL)1,;$94?,>Y@m1>a2)I''E4s2sI3AkA3%6QL)1,M0;4?,>Z0Koq.2)I''G4s2sI3Ari\%6QL)1,_<=4?,>ZA3LGb2)I''I4s2sI3AtJ5%6QL)1,qH?4?,>[1d2@22)I(!4s2sI3FOU*%6QL)11`Wl4?,?03''Id62)I(#4s2sI3FQD]%6QL)1GD!84?,?0Aj-Yd2)I*F4s2sI3FZSa%6QL)1Gh9<4?,?31d2@22)I*J4s2sI3FlP^%6QL)1LWHi4?,?42*MI32)I+"4s2sI3G(''2%6QL)1M&`m4?-b''2a.[52)I+$4s2sI@5'']*%6QL)1c.B=4?-b)1-Q.02)I-I4s2sI@5DCW%6QL)1c@N?4?-b*ANgPc2)I-K4s2sI@5K]&%6QL)1cRZA4?-b+2EhR42)I-M4s2sI@5MFW%6QL)1grQj4?-b,0g6%/2)I.$4s2sI@5]i(%6QL)2).9;4?-b.@m1>a2)I0G4s2sI@5hd^%6QL)2)@E=4?-b/1-Q.02)I0I4s2sI@5p)-%6QL)2)RQ?4?-b/2EhR42)I0K4s2sI@6$&+%6QL)2)d]A4?-b0@6P,_2)I0M4s2sI@::oT%6QL)2*!iC4?-bX2a.[52)I1!4s2sI@:M;]%6QL)2.f#p4?-b\1d2@22)I3F4s2sI@:h2W%6QL)2DdT?4?-b]@m1>a2)I3K4s2sI@PB`)%6QL)2E!`A4?-e(@m1>a2)I3M4s2sI@PKT$%6QL)2E3lC4?-e)@m1>a2)I3O4s2sI@PT`''%6QL)2IScl4?-e*2EhR42)I4#4s2sI@P]r,%6QL)2Ieon4?-e+@m1>a2)I4%4s2sI@P_RZ%6QL)2J#&p4?-e,1Hl712)I4''4s2sI@Pfu,%6QL)2_[E<4?-e,@m1>a2)I6J4s2sI@Pp&-%6QL)2`*]@4?-e-3Bdm72)I6N4s2sI@Q%[Z%6QL)2`NuD4?-e/0g6%/2)I6P4s2sI@Q.m_%6QL)2dnlm4?-e01Hl712)I7$4s2sI@Q6A3%6QL)2e,#o4?-e0@m1>a2)I7&4s2sI@Q7p_%6QL)2e>/q4?-e1@m1>a2)I7(4s2sI@QA!`%6QL)3&!N=4?-h-2a.[52)I9I4s2sI@l-20%6QL)3&3Z?4?-h-ANgPc2)I9K4s2sI@l5r(%6QL)3&EfA4?-h.2EhR42)I9M4s2sI@l?)+%6QL)3&WrC4?-h/3''Id62)I9O4s2sI@l@g\%6QL)3&j)E4?-h01Hl712)I9Q4s2sI@lHA2%6QL)3+4un4?-h11Hl712)I:%4s2sI@lS!_%6QL)3+Y8r4?-h23''Id62)I:)4s2sI@l\-b%6QL)3A<W>4?-h[1-Q.02)I<L4s2sI@q.D\%6QL)3A`oB4?-h]3Bdm72)I<N4s2sI@q9%4%6QL)3As&D4?-h^0g6%/2)I<P4s2sI@q@M]%6QL)3B02F4?-h^@m1>a2)I=&4s2sI@qIM\%6QL)3Fb5q4?-k*@Qk5`2)I=*4s2sIA2,o)%6QL)@5''kf4?-k+@Qk5`2)J_r4s2sIA2ZA1%6QL)@5L.j4?-k12EhR42)J`!4s2sIA2l;-%6QL)@5^:l4?-k2ANgPc2)J`#4s2sIA2u>-%6QL)@5pFn4?-k[0KoqWDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,g1grC.+?VVo@:DD04>es(@6Per3+QJR4q0V31gsiW+?VVo@kp4W4>es(@m2"t3+QN14q0V31h&.&+?VVoA7e"74>es)2*N-F3+QVU4q0V31h&@,+?VVoAn+"64>es)2a/?H3+Xd%4q0V31h''lW+?VVp0f2''''4>es)@Qkns3+XgT4q0V31h''rY+?VVp0kNTY4>es)A3M+u3+Xm&4q0V31h(#[+?VVp1H%E+4>es)Aj.>"3+XmS4q0V31h/4''+?VVp1LrZY4>es*0g6^B3+Xp#4q0V31h/:)+?VVp1h/]Y4>es*1HlpD3+XpY4q0V31h/@++?VVp2)RQ,4>es*2*N-F3+XsW4q0V31h/L/+?VVp2_mQ+4>es*3BeQJ3+Y$X4q0V31h0rX+?VVp3&Nl/4>es*@Qkns3+Y''04q0V31h1#Z+?VVp3+>&\4>es+0g6^B3+Y*14q0V31h8@*+?VVp3FtA`4>es+1HlpD3+ZMQ4q0V31h8F,+?VVp@6$L\4>es+2*N-F3+ZPR4q0V31h8L.+?VVp@P^1W4>es+2a/?H3+ZQ14q0V31h8R0+?VVp@l?L[4>es+3BeQJ3+ZW34q0V31h:#Y+?VVpAN2j_4>es+A3M+u3+Z]34q0V31hA@)+?VVq1,qH,4>es,0g6^B3+apV4q0V31hAF++?VVq1GD!%4>es,1HlpD3+b!$4q0V31hAL-+?VVq1bq6(4>es,2*N-F3+b!*4q0V31hAR/+?VVq2)7?)4>es,2a/?H3+b$)4q0V31hC)Z+?VVq2.\r\4>es,@Qkns3+b''''4q0V31hC5^+?VVq3G(Ga4>es,Aj.>"3+cSS4q0V31hJF*+?VVq@:_V34>es-0g6^B3+cW/4q0V31hJX0+?VVq@q7b44>es-2a/?H3+c\W4q0V31hJ^2+?VVqA2QO[4>es-3BeQJ3+c_W4q0V31hL5]+?VVqAN2j_4>es-A3M+u3+c`34q0V31hL;_+?VVqAi)[\4>es-Aj.>"3+cb^4q0V32)$^J+?VVqAmmk44>euM0g6^B3+cc44q0V32)$dL+?VVqAnF494>euM1HlpD3A<-G4q0V32)$jN+?VY<0Om9U4>euM2*N-F3A<-u4q0V32)$pP+?VY<0fD3)4>euM2a/?H3A<6G4q0V32)%!R+?VY<1H%E+4>euM3BeQJ3A<9M4q0V32)&H&+?VY<1hJo\4>euM@Qkns3A<<G4q0V32)&N(+?VY<2)mc/4>euMA3M+u3A<="4q0V32)&T*+?VY<2DdT,4>euMAj.>"3A<?N4q0V32)-dK+?VY<2Ieo[4>euN0g6^B3A<BM4q0V32)-jM+?VY<2e>/^4>euN1HlpD3A<EM4q0V32).!Q+?VY<3A<W+4>euN3BeQJ3A=kq4q0V32)/N''+?VY<@P^1W4>euO0KpUA3A=rS4q0V32)6sO+?VY<AMQFY4>euO2Ei6G3A>#V4q0V32)8W)+?VY=0kENX4>euP0KpUA3AE<H4q0V32)?sN+?VY=1LrZY4>euP1-QgC3AE?M4q0V32)@3U+?VY=2_mQ+4>euP3BeQJ3AEHL4q0V32)AZ)+?VY=2`<i/4>euP@Qkns3AEHQ4q0V32)A`++?VY=3&<`-4>euPA3M+u3AENJ4q0V32)Af-+?VY=3FtA`4>euPAj.>"3AFqt4q0V32)I!N+?VY=@:;>/4>euQ0g6^B3AFtu4q0V32)I''P+?VY=@UhS24>euQ1HlpD3AG"u4q2(@A7B.\BOPoj%5BOj+C\npBl7Bl@q]:k%6QL*1c.B=4?5-+1Hl712)R4!4s2sJ0kE@/%6QL*1h&Wk4?5--A3LGb2)R4#4s2sJ0kP#]%6QL*1h8cm4?5/N2a.[52)R6F4s2sJ1,39&%6QL*2).9;4?5/OAj-Yd2)R6H4s2sJ1,:aO%6QL*2)@E=4?5/Q0g6%/2)R6J4s2sJ1,CdO%6QL*2)d]A4?5/R0g6%/2)R6N4s2sJ1,LgO%6QL*2*!iC4?5/R@Qk5`2)R9I4s2sJ1,i],%6QL*2D[N>4?5/UANgPc2)R9K4s2sJ1,r`,%6QL*2DmZ@4?5/W2*MI32)R9P4s2sJ11E((%6QL*2IScl4?50,2EhR42)R:$4s2sJ11W+''%6QL*2Ieon4?50-2*MI32)R:&4s2sJ11W=-%6QL*2J#&p4?50-Aj-Yd2)R:(4s2sJ11`=,%6QL*2_[E<4?50/1-Q.02)R<M4s2sJ1GCLH%6QL*2`<iB4?52O2EhR42)R<O4s2sJ1GEE)%6QL*2`NuD4?52P2*MI32)R<Q4s2sJ1GLmR%6QL*2dnlm4?52Q1Hl712)R=%4s2sJ1GUmQ%6QL*2e,#o4?52Q@6P,_2)R=''4s2sJ1GWH(%6QL*2e>/q4?52S3Bdm72)R=)4s2sJ1GpmN%6QL*3&!N=4?52T2a.[52)R?P4s2sJ1H.!O%6QL*3&j)E4?52W@6P,_2)R?R4s2sJ1H@BX%6QL*3+4un4?52X@Qk5`2)R@)4s2sJ1LW+(%6QL*3+b>s4?53,@Qk5`2)RC&4s2sJ1Lt)]%6QL*3FY/p4?53/1-Q.02)RC(4s2sJ1M&I.%6QL*3Fk;r4?53/3''Id62)Ser4s2sJ1M1)[%6QL*@50qg4?55P1Hl712)Sf#4s2sJ1bh!S%6QL*@5g@m4?55R@6P,_2)Sf%4s2sJ1c%$R%6QL*@6$Lo4?55S@6P,_2)SfN4s2sJ1c-sO%6QL*@:DDC4?55T@6P,_2)SfP4s2sJ1c/]+%6QL*@:VPE4?55U2*MI32)SfR4s2sJ1c8i.%6QL*@:h\G4?55V0Koq.2)Si%4s2sJ1cI9U%6QL*@Q6Oo4?55W2a.[52)Si''4s2sJ1cJo.%6QL*@UVGC4?55WANgPc2)SiP4s2sJ2)mQZ%6QL*@UhSE4?58Y@6P,_2)SiR4s2sJ2)o/2%6QL*@V%_G4?58Z@m1>a2)Sl$4s2sJ2.AI-%6QL*@l?Ln4?59.3Bdm72)Sl(4s2sJ2.JF+%6QL*@pqPD4?59/3''Id62)SlT4s2sJ2.L5^%6QL*@qInI4?5901Hl712)Snu4s2sJ2.U,Z%6QL*A2-7j4?590ANgPc2)So"4s2sJ2.\I*%6QL*A2?Cl4?5912*MI32)So$4s2sJ2DR*Q%6QL*A2laq4?5;TA3LGb2)So)4s2sJ2DSl.%6QL*A77YE4?5;W2EhR42)SoR4s2sJ2DmHX%6QL*A7IeG4?5;X0g6%/2)SoT4s2sJ2E#&/%6QL*A7[qI4?5;Y1-Q.02)SoV4s2sJ2E*HV%6QL*AM?:j4?5;Y3Bdm72)Sr"4s2sJ2E,,0%6QL*AMQFl4?5;Z1d2@22)Sr$4s2sJ2E<KU%6QL*AMcRn4?5;[2a.[52)Sr&4s2sJ2ISF+%6QL*AMu^p4?5<.3Bdm72)Sr(4s2sJ2I\@(%6QL*ARRbF4?5</2EhR42)SrU4s2sJ2I^/[%6QL*AS"%J4?5<1@6P,_2)Su#4s2sJ2J-A]%6QL*AmmkG4?5>T1d2@22)SuT4s2sJ2_m0Q%:sEf@V0+`@<)ed0eb:(@V''1dDIR3fBOPoj4>f!.@m2"t3B&]O4q0V32.gA_+?VYC11<?U4>f!.ANh5!3B&`R4q0V32.gGa+?VYC1c@N,4>f#N0KpUA3B&cT4q0V32D?jL+?VYC1h/]Y4>f#N1-QgC3B&fN4q0V32D?pN+?VYC2)RQ,4>f#N3''JHI3B&g+4q0V32D@-T+?VYC2D@<(4>f#N@6Per3B&iS4q0V32DAT(+?VYC2E3l04>f#N@m2"t3B&lQ4q0V32DAZ*+?VYC2`3c.4>f#NANh5!3B&m,4q0V32DI!O+?VYC3B0234>f#O1d3$E3B(A&4q0V32DI''Q+?VYC@5^:Y4>f#O2Ei6G3B(AV4q0V32DI3U+?VYC@Pg7X4>f#O@m2"t3B(G&4q0V32DJ`++?VYC@l$:X4>f#P0KpUA3B(J&4q0V32DR!N+?VYCA2ug_4>f#P@6Per3B(P-4q0V32DS`*+?VYCAmmk44>f#P@m2"t3B(P]4q0V32D[$N+?VYD0fD3)4>f#Q0g6^B3B/a)4q0V32D[*P+?VYD1,1s%4>f#Q2*N-F3B/cP4q0V32D[6T+?VYD11EEV4>f#Q2a/?H3B/d*4q0V32D[<V+?VYD1GV-''4>f#Q3BeQJ3B/fR4q0V32D\c*+?VYD1LiTX4>f#Q@Qkns3B/g,4q0V32D\i,+?VYD1bq6(4>f#QAj.>"3B/j)4q0V32Dd0Q+?VYD2)RQ,4>f#R1HlpD3B/lV4q0V32Dd6S+?VYD2.JfZ4>f#R2*N-F3B/oT4q0V32Dei++?VYD@:VP24>f#R@Qkns3B1J''4q0V32Deo-+?VYD@Q$CZ4>f#RA3M+u3B1JV4q0V32Deu/+?VYD@UhS24>f#RAj.>"3B1J[4q0V32Dm0P+?VYD@kp4W4>f#S0g6^B3B1M,4q0V32Dm6R+?VYD@lZ^^4>f#S1HlpD3B1MX4q0V32DmHX+?VYDAhcIY4>f#S3BeQJ3B1V[4q0V32Dno,+?VYE0etp%4>f#SA3M+u3B8g&4q0V32E!6Q+?VYE11<?U4>f#T0g6^B3B8j)4q0V32E!<S+?VYE11`WY4>f#T2*N-F3B8lO4q0V32E!HW+?VYE1H@W.4>f#T3BeQJ3B8oO4q0V32E"u-+?VYE1cRZ.4>f#T@Qkns3B8rN4q0V32E#&/+?VYE2)RQ,4>f#TA3M+u3B8s,4q0V32E#,1+?VYE2.\r\4>f#U0g6^B3B9*04q0V32E*BT+?VYE3G(Ga4>f#U1HlpD3B:M&4q0V32E*HV+?VYE@5C(V4>f#U2*N-F3B:M,4q0V32E*NX+?VYE@:;>/4>f#U2a/?H3B:P&4q0V32E*TZ+?VYE@Q$CZ4>f#U3BeQJ3B:S+4q0V32E,,0+?VYE@qIn64>f#UA3M+u3B:V04q0V32E3BS+?VYEA7[q64>f#V0g6^B3B:Y+4q0V32E3HU+?VYEAN2j_4>f#V1HlpD3B:YZ4q0V32E3NW+?VYEAS"%74>f#V2*N-F3B:\24q0V32E3Z[+?VYEAn4(74>f#VA3M+u3FOUN4q0V32E583+?VYm0P!?V4>f#VAj.>"3FOWs4q0V32E<HT+?VYm0fD3)4>f#W0g6^B3FOX%4q0V32E<NV+?VYm0k*<U4>f#W1HlpD3FO[R4q0V32E<TX+?VYm1Gq?*4>f#W2*N-F3FO^''4q0V32E<ZZ+?VYm1M&`Z4>f#W3BeQJ3FOa$4q0V32E>20+?VYm1grQW4>f#W@Qkns3FOaS4q0V32E>>4+?VYm2)7?)ASu$fAn,L_EX`I40JFVYAS5^p@V0+`@<)f>2)[I,4s2sJ@5U#.%6QL+@5''kf4?6h.1d2@22)\kt4s2sJ@:<S.%6QL+@5:"h4?6hZ0Koq.2)\l!4s2sJ@:D5\%6QL+@5L.j4?6hZ@m1>a2)\l%4s2sJ@:M2Z%6QL+@5pFn4?6h[Aj-Yd2)\l''4s2sJ@:V)V%6QL+@:MJD4?6h\Aj-Yd2)\lR4s2sJ@:_/W%6QL+@:_VF4?6h]1Hl712)\lT4s2sJ@:_>\%6QL+@PBtg4?6h]@Qk5`2)\nu4s2sJ@:`t5%6QL+@PU+i4?6h^0Koq.2)\o"4s2sJ@:h8Y%6QL+@Pg7k4?6h^1d2@22)\o''4s2sJ@:j%6%6QL+@Q?Up4?6k)1-Q.02)\oT4s2sJ@PD=V%6QL+@V.eH4?6k*0Koq.2)\qu4s2sJ@PKW%%6QL+@kg.i4?6k*2EhR42)\r$4s2sJ@PMIY%6QL+@q%VE4?6k,1-Q.02)\rS4s2sJ@P_FV%6QL+@q7bG4?6k-3''Id62)\rU4s2sJ@PhOX%6QL+A2-7j4?6k.0g6%/2)\u#4s2sJ@Pp,/%6QL+A2?Cl4?6k/2EhR42)\u%4s2sJ@Q-,-%6QL+A2QOn4?6k10Koq.2)\u''4s2sJ@Q6/-%6QL+A2c[p4?6k20Koq.2)\uR4s2sJ@Q?A2%6QL+A7RkH4?6kZ@6P,_2)\uV4s2sJ@UWe2%6QL+A7e"J4?6k[3Bdm72)]#"4s2sJ@Uh,V%6QL+AMH@k4?6k\2EhR42)]#$4s2sJ@Uih1%6QL+AMZLm4?6k]1d2@22)]#&4s2sJ@Urq3%6QL+AMlXo4?6k^1-Q.02)]#(4s2sJ@V.P_%6QL+AN)dq4?6n*3''Id62)]#*4s2sJ@k_=T%6QL+AN;ps4?6n*@m1>a2)]#S4s2sJ@kfc''%6QL+AR[hG4?6n,1d2@22)]#X4s2sJ@l#i''%6QL+AhZCk4?6n-2*MI32)]&&4s2sJ@l%[[%6QL+Ai)[o4?6n.Aj-Yd2)]&*4s2sJ@l?#)%6QL+AiMss4?6n01Hl712)]&,4s2sJ@l?80%6QL+AmmkG4?6n13''Id62)]&U4s2sJ@lIj\%6QL+An+"I4?6n_2EhR42)]&W4s2sJA2#f''%6QL,0JG[54?6q+3''Id62)d3D4s2sJA2%LW%6QL,0JYg74?6q,1-Q.02)d3F4s2sJA2,r*%6QL,0K)*;4?6q,Aj-Yd2)d3J4s2sJA25r)%6QL,0K;6=4?6q-2*MI32)d3u4s2sJA2?,-%6QL,0P*Ej4?6q/1d2@22)d6E4s2sJA2Rp^%6QL,0etp84?6q12EhR42)d6G4s2sJA2ZG3%6QL,0fD3<4?6q22a.[52)d6K4s2sJA2ds]%6QL,0fV?>4?6q2ANgPc2)d6M4s2sJA2lD0%6QL,0k3Bi4?6q42EhR42)d7#4s2sJA3"''^%6QL,0kENk4?6q\0g6%/2)d7%4s2sJA77;Y%6QL,1,(m74?6q\@m1>a2)d9F4s2sJA7@D[%6QL,1,M0;4?6q]@Qk5`2)d9J4s2sJA7B.7%6QL,1,qH?4?6q^2a.[52)d9N4s2sJA7RJ[%6QL,11<?h4?6q_2EhR42)d:"4s2sJA7R\a%6QL,11NKj4?6q`2EhR42)d<H4s2sJA7dV]%6QL,1G_3;4?6qaA3LGb2)d<J4s2sJA7fF;%6QL,1Gq?=4?6t,2a.[52)d<L4s2sJAM@^[%6QL,1H.K?4?6t-2*MI32)d="4s2sJAN)P3%6QL,1LrZl4?6t40KoqWDId3g@q]:k%1P$G0Hah9B5)6mAn,L_EXb,g2`##/+?VYq3&3Z,4>f&RAj.>"3Ft0,4q0V32`*9R+?VYq3+b>`4>f&S1HlpD3Ft3*4q0V32`*?T+?VYq3B0234>f&S2*N-F3Ft3^4q0V32`*EV+?VYq@5L.W4>f&S3BeQJ3FuW24q0V32`+r,+?VYq@UqY34>f&S@Qkns3FuZ34q0V32`,#.+?VYq@l6FZ4>f&SA3M+u3Fu]14q0V32`39Q+?VYqA2ZU\4>f&T0g6^B3Fu`04q0V32`3?S+?VYqA7Rk54>f&T1HlpD3FubU4q0V32`3EU+?VYqAMlX\4>f&T2a/?H3FueX4q0V32`<BS+?VYr0JYg$4>f&U1-QgC3G''s%4q0V32`<NW+?VYr0ebd#4>f&U2Ei6G3G(!&4q0V32`<TY+?VYr0fM9*4>f&U3''JHI3G(!+4q0V32`<Z[+?VYr1,;$&4>f&U@m2"t3G($Y4q0V32`>21+?VYr1Gh9)4>f&V0KpUA3G(''Y4q0V32`ENV+?VYr2)d].4>f&V1d3$E3G(0''4q0V32`ETX+?VYr2E!`.4>f&V2Ei6G3G(004q0V32`EZZ+?VYr2I\iZ4>f&V3''JHI3G(3*4q0V32`E`\+?VYr2`<i/4>f&V@6Per3G(6^4q0V32`G82+?VYr3A`o/4>f&VANh5!3G(9^4q0V32`G>4+?VYr@5''kS4>f&W0KpUA3G)\T4q0V32`NNU+?VYr@5U4X4>f&W1-QgCA2lD"A7K./4q0V32`NTW+?X0o1b`HN11NKW4>f&W1d3$EA2lD#A7T1Y4q0V32`NZY+?X0o1brTP3&Ef.4>f&W2Ei6GA2lD&A7RPT4q0V32`N`[+?X0o1c/`S3+P2^4>f&W3''JHIA2lD''A7R\W4q0V32`Nf]+?X0o1c8fU1,hB+4>f&W@6PerA2lD)A7d]/4q0V32`P81+?X0o1c])V@PBtT4>f&W@m2"tA2lD+A7K1]4q0V32`P>3+?X0o1gsp*1hJo\4>f&WANh5!A2lDTA7IN04q0V32`PD5+?X0o1h(!,AM?:W4>f&X0KpUAA2lDUA7K4^4q0V32`WTV+?X0o1h1''.1c%<)4>f&X1-QgCA2lDVA7[Q+4q0V32`WZX+?X0o1hC3/A2ug_4>f&X1d3$EA2lG#A7]@-4q0V32`W`Z+?X0o2)&QQ3Fk;_4>f&X2Ei6GA2lG%A7K4*4q0V32`Wf\+?X0o2)8]R0JPa#4>f&X3''JHIA2lG%A7[JN4q0V32`Wl^+?X0o2)JiR2)RQ,4>f&X@6PerA2lG''A7dW/4q0V32`Y>2+?X0o2)JiU@Pp=Y4>f&X@m2"tA2lG''A7fFb4q0V32`YD4+?X0o2)\uT1GV-''4>f&XANh5!A2lG)A7IE(4q0V32`YJ6+?X0o2)\uT2`*]-4>f''+0KpUAA2lG)A7RVY4q0V32dnF)+?X0o2)\uW3B'',24>f''+1-QgCA2lG*A7[SS4q0V32dnL++?X0o2)o,V2)d].4>f''+1d3$EA2lG,A7T+*4q0V32dnR-+?X0o2*#2ZA2la^4>f''+2Ei6GA2lGVA7RMR4q0V32dnX/+?X0o2.U6.AnF494>f''+3''JHIA2lGWA7[MR4q0V32dn^1+?X0o2.^<02).9(4>f''+@6PerA2lGXA7dMN4q0V32dp/Z+?X0o2.gB/AS++84>f''+@m2"tA2lGYA7[]14q0V32dp5\+?X0o2.gB20k*<U4>f''+ANh5!A2lJ$A7fF34q0V32dp;^+?X0o2DJ`PA7Ie44>f'',0KpUAA2lJ''A7RZ.4q0V32e"L*+?X0o2D\lS@50qT4>f'',1-QgCA2lJ(A7T4.4q0V32e"R,+?X0o2DerTAMZLZ4>f'',1d3$EA2lJ)A7K.]4q0V32e"X.+?X0o2Do#U0KD<+4>f'',2Ei6GA2lJ*A7IE)4q0V32e"^0+?X0o2E55Y@:VP24>f'',3''JHIA2lJ-A7K.(4q0V32e"d2+?X0o2E>;Z2DdT,4>f'',@6PerA2lM%A7RDP4q0V32e$5[+?X0o2_eiTA2?CY4>f'',@m2"tA2lM.A7RSY4q2(@A7B.\BOPoj%5^''f@V''1dDIR3fBOPoj4>f'',ANh5!2)@1''A7@ALA7RAS4q0V32e$A_+?VM?3Ak>V1b`HN0JYg$4>f''-0KpUA2)f#VA7@ALA7RAO4q0V32e+R++?VMi@UWeV1b`HN0Jks&4>f''-1-QgC2DR!@A7@ALA7RAP4q0V32e+X-+?VP?2.gB.1b`HN0K)*(4>f''-1d3$E2E!KNA7@ALA7RAO4q0V32e+^/+?VPB2.^<-1b`HN0Jks&4>f''-2Ei6G2Ina*A7@ALA7RAO4q0V32e+d1+?VS@A7B(Y1b`HN0Ju$''4>f''-3''JHI3&!3JA7@ALA7RAP4q0V32e+j3+?VV>@Us"Y1b`HN0K;6*4>f''-@6Per3&WX(A7@ALA7RAO4q0V32e-;\+?VVD1biNM1b`HN0Jks&4>f''-@m2"t3+65LA7@ALA7RAO4q0V32e-A^+?VVl@q&tX1b`HN0Ju$''4>f''-ANh5!3ANO''A7@ALA7RAN4q0V32e-G`+?VYr3FcT/1b`HN0K20)4>f'',A3M+uAnGXc4q0V32e4U++?V>3@50qT4>f''.1d3$E0JHpD4q0V32e4d0+?V>3@:h\44>f''.3''JHI0JHrq4q0V32e4p4+?V>3@UVG04>f)Q3BeQJ0JP::4q0V33&,#/+?V>41H7Q-4>f)V0KpUA0JkI<4q0V33+4O*+?V>72).9(4>f,V3''JHI1GCX?4q0V33Aif\+?VG61c%<)4>f,V@6Per1GCXC4q0V33Ak80+?VG61cIT-4>f,V@m2"t1GCXG4q0V33Ak>2+?VG62D[N+4>f,VANh5!1GCdE4q0V33AkD4+?VG63&Nl/4>f,W0KpUA1GCdI4q0V33ArTU+?VG63+Y8_4>f,W1d3$E1GE5l4q0V33Ar`Y+?VG6@5C(V4>f,W2Ei6G1GE5p4q0V33Arf[+?VG6@5g@Z4>f,W3''JHI1GE5t4q0V33Arl]+?VG6@l$:X4>f,W@6Per1GEAr4q0V33At>1+?VG6AMlX\4>f,W@m2"t1GEB!4q0V33AtD3+?VG6AS"%74>f,X0KpUA1GEEN4q2(@A7B.\BOPoj%5BOj+C\npBl7BlEa`iuAIUaU0JG4F+?V>32.f#p4>8HE0Koq.0JGC=4s2sA0K(^N+?V>3@5:"U4>8HI2Ei6G0JGCD4s2sA0Oc_"%6Q<u2E3lC4>8HI3BeQJ0JHro4q0V.0K*E)+?V>32_dK=4>JTE1-Q.00JGF@4s2sA0K1dO+?VD50KD<+4>8HJ1d3$E0JGFE4s2sC0JP=H%6Q<u2`NuD4>8HJ3BeQJ1,(FB4q0V.0K3E(+?V>32e"rn4>JTF@m1>a0JGFq4s2sA0K3T-+?VD51,(m$4>8HK0KpUA0JGI@4s2sC0JYLL%6Q<u3&3Z?4>8HK1HlpD1,(L>4q0V.0K<K)+?V>33AWiA4>JWO0Koq.0JGLF4s2sA0KD''U+?VD72DdT,4>8HL@m2"t0JGLt4s2sCAM[aY%6Q<u3FtAs4>8Ht2a/?H1GCLB4q0V.0OZq)+?V>3@6$Lo4>SZG1d2@20JHpD4s2sA0P"ZW+?VG71GM''&4>8I"A3M+u0JI$K4s2sr@k]T#%6Q<uAM?:j4>8I#1d3$E@:LuM4q0V.0P*+*+?V>3ARdnH4CM_S0Koq.0JI''K4s2sA0P3%''+?X(B0f_E,4>8I$1HlpD0JI)q4s2sr@koi(%6Q<uAi2ap4>8I$2Ei6G@:M''&4q0V.0P37-+?V>3AiW$t4CM_TAj-Yd0JI*I4s2sA0P4cX+?X(B1H7Q-4>8KD1d3$E0JP7=4s2sr@lH)*%6Q=!0K20<4>8KD3''JHI@:M5T4q0V.0ed$"+?V>40ebd64CM_Z0Koq.0JP::4s2sA0ekOL+?X(B3&s/34>8KE3''JHI0JP:B4s2sr@l\$_%6Q=!0k!6g4>8KE@m2"t@:M<04q0V.0em3&+?V>40kNTl4CM`.3''Id60JP=;4s2sA0etLJ+?X(B@:h\44>8KF1HlpD0JP=?4s2sr@q%A\%6Q=!1,_<=4>8KF3''JHI@:NbU4q0V.0f!?)+?V>41GD!84CM`12a.[50JP@<4s2sA0f(RK+?X(BAM?:W4>8KG1d3$E0JP@@4s2sr@q@S_%6Q=!1H7Q@4>8KG@6Per@:Nk\4q0V.0f*<''+?V>41LrZl4CM`32*MI30JP@q4s2sA0f1RJ+?X(BAn+"64>8KH1d3$E0JPCA4s2srA2%LW%6Q=!1c@N?4>8KH3BeQJ@:V''(4q0V.0f3K++?V>42)%3:4CMbU@m1>a0JPF>4s2sA0f:^M+?X(C1Gh9)4>8KI2*N-F0JPFC4s2srA2H,,%6Q=!2.Jfm4>8KIA3M+u@:V8M4q0V.0fC^L+?V>42DIB<4CMbY@m1>a0JPIA4s2sA0fCpR+?X(C2`!W,4>8KJ2a/?H0JPIG4s2srA2ds]%6Q=!2I\im4>8KJA3M+u@:V>P4q0V.0fET,+?V>42J,,q4CMb[3''Id60JPLA4s2sA0fLmP+?X(C3Fb5^4>8KK2*N-F0JPLE4s2srA7@J]%6Q=!2`EoC4>8KK3''JHI@:Wk%4q0V.0fNQ*+?V>42e,#o4CMc20Koq.0JPOB4s2sA0fUsQ+?X(CARdn54>8KL1d3$E0JPOE4s2srA7deb%6Q=!3&a#D4>8KL@6Per@:Wt^4q0V.0fWW++?V>43+P2q4CMeT2a.[50JPRC4s2sA0f_$R+?X(D0f)!&4>8KM2Ei6G0JPRH4s2srAMZ#(%6Q=!3B98G4>8KM@6Per@:_5R4q0V.0f``-+?V>43Fk;r4CMeX0Koq.0JPS!4s2sA0jue#+?X(D1c%<)4>8Ku1HlpD0JQun4s2srAMdm\%6Q=!@6$Lo4>8Ku@6Per@:_<+4q0V.0k"NT+?V>4@:VPE4CMeYAj-Yd0JR!J4s2sA0k)h#+?X(D2E3l04>8L!1-QgC0JR#m4s2srAN"-a%6Q=!@Pg7k4>8L!2*N-F@:_AW4q0V.0k*%)+?V>4@Q6Oo4CMe[@Qk5`0JR#s4s2sA0k+TU+?X(D3&Ef.4>8L!@m2"t0JR$I4s2srAN40`%6Q=!@k^(h4>8L"1-QgC@:`nX4q0V.0k3()+?V>4@l?Ln4CMf2@m1>a0JR&r4s2sA0k34-+?X(D@qIn64>8L"@m2"t0JR''J4s2srARmba%6Q=!A2QOn4>8L#2a/?H@:h2P4q0V.0k=]V+?V>4A7@_F4CMhW@m1>a0JR*K4s2sA0k=l[+?X(E1GV-''4>8L$0KpUA0JR,n4s2srAi!p\%6Q=!AMZLm4>8L$2*N-F@:h>N4q0V.0kE:-+?V>4AN2jr4CMhY3''Id60JR-J4s2sA0kFiY+?X(E2.JfZ4>8L$A3M+u0JR-M4s2srAi;J0%6Q=!AhZCk4>8L%0g6^B@:hGX4q0V.0kN:,+?V>4Ai;gq4CMh^0Koq.0JR0"4s2sA0kOiX+?X(E@Q6O\4>8L%A3M+u0JR0O4s2srAn*b`%6Q="0JPa64>8NE1HlpD@:j"[4q0V.1,(XN+?V>50K;6=4CMi53''Id60JY=B4s2sA1,*-#+?X(EAhZCX4>8NEA3M+u0JY=n4s2ss0JG1E%6Q="0f)!94>8NF1d3$E@PBNH4q0V.1,1aP+?V>50f_E?4CU!$1d2@20JY@o4s2sA1,:OI+?X*e2)@E*4>8NG2Ei6G0JYCB4s2ss0K3K*%6Q="11<?h4>8NG@Qkns@PBcO4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN70JYCn4s2sA1,<E)+?X*e3+b>`4>8NGAj.>"0JYF=4s2ss0KD*V%6Q="1G_3;4>8NH2Ei6G@PBfS4q0V.1,CjQ+?V>51H7Q@4CU!Q3''Id60JYFE4s2sA1,EH)+?X*e@:DD04>8NHAj.>"0JYI>4s2ss0Och%%6Q="1c%<<4>8NI1d3$E@PD8#4q0V.1,LjP+?V>51c@N?4CU!S1d2@20JYID4s2sA1,M!T+?X*e@lHR\4>8NI@6Per0JYIo4s2ss0Ouk$%6Q="1h8cm4>8NIANh5!@PD=O4q0V.1,NT,+?V>52)%3:4CU!U0Koq.0JYLB4s2sA1,UpQ+?X*f0K;6*4>8NJ2Ei6G0JYLE4s2ss0ed''#%6Q="2)mcB4>8NJ@m2"t@PKQK4q0V.1,WT++?V>52.\ro4CU$"3''Id60JYLt4s2sA1,^jN+?X*f0k*<U4>8NK1-QgC0JYOD4s2ss0etLJ%6Q="2E*fB4>8NK3''JHI@PKWI4q0V.1,_-V+?V>52IScl4CU$$1d2@20JYOq4s2sA1,`Z,+?X*f1H.K,4>8NKAj.>"0JYR@4s2ss0f1RJ%6Q="2_mQ>4>8NL1HlpD@PK\u4q0V.1,h$R+?V>52`3cA4CU$&0Koq.0JYRF4s2sA1,h-U+?X*f2)IK+4>8NL@m2"t0JYRt4s2ss0fM''U%6Q="2eG5r4>8NM0g6^B@PKhr4q0V.1,q$Q+?V>53&<`@4CU$)3''Id60JYUG4s2sA1,q9X+?X*f3AE],4>8NN0KpUA0JYXC4s2ss0k4]W%6Q="3A`oB4>8NN2*N-F@PMD''4q0V.1-%<X+?V>53B98G4CU$V3''Id60JYXu4s2sA1-&l/+?X*fAiMs`4>8O!0KpUA0J[&k4s2ss1,(OK%6Q="@5C(i4>8O!2*N-F@PTWH4q0V.11<()+?V>5@5g@m4CU''#1d2@20J[)l4s2sA11E"&+?X*g2E3l04>8O"1HlpD0J[)o4s2ss1,h$R%6Q="@Pp=l4>8O"2Ei6G@PTlO4q0V.11E1++?V>5@Q6Oo4CU''*1d2@20J[*G4s2sA11F]V+?X*g3A<W+4>8O"A3M+u0J[,l4s2ss1-%9W%6Q="@kg.i4>8O#1-QgC@PV@G4q0V.11N.)+?V>5@l?Ln4CU''S2*MI30J[,s4s2sA11N=.+?X*g@:;>/4>8O#Aj.>"0J[/m4s2ss11N:-%6Q="A26=k4>8O$1HlpD@PVG*4q0V.11W7++?V>5A2ZUo4CU''V3''Id60J[/u4s2sA11WC/+?X*gA7Rk54>8O$@m2"t0J[0M4s2ss11`:+%6Q="AM?:j4>8O%1d3$E@PVM(4q0V.11`=,+?V>5AN)dq4CU''X1Hl710J[3!4s2sA11arZ+?X*gAiDm_4>8O%ANh5!0J[5o4s2ss11k,^%6Q="AhuUn4>8O&1d3$E@P]_m4q0V.11iC-+?V>5AiMss4CU*$1Hl710J[6M4s2sA11k)]+?X*h2)IK+4>8QF0KpUA0JbC;4s2ss1GrW*%6Q=#0JYg74>8QF1HlpD@P]lQ4q0V.1GCXL+?V>60Ju$:4CU*)1d2@20JbCC4s2sA1GE<&+?X*h2J#&]4>8QFAj.>"0JbF;4s2ss1H7''P%6Q=#0ekj74>8QG1HlpD@P]u"4q0V.1GLgP+?V>60fV?>4CU*T0Koq.0JbFm4s2sA1GNB''+?X*h@l-@Y4>8QGANh5!0JbFq4s2ss1LjlX%6Q=#1,;$94>8QH1HlpD@P_OO4q0V.1GWH(+?V>611WQk4CU-$Aj-Yd0JbL>4s2sA1G^dM+?X*i1,qH,4>8QI1HlpD0JbLB4s2ss1brN(%6Q=#1H.K?4>8QI3''JHI@Pfqr4q0V.1G`H''+?V>61L`Nj4CU-)2a.[50JbLq4s2sA1G`T++?X*i2D@<(4>8QJ@6Per0JbOq4s2ss1h&C-%6Q=#2)7?<4>8QK1HlpD@PhV*4q0V.1Gq$R+?V>62*!iC4CU-Y1Hl710JbRp4s2sA1GrW*+?X*iARdn54>8QL0g6^B0JbUB4s2ss2)-pO%6Q=#2DdT?4>8QL2*N-F@PolL4q0V.1H%-T+?V>62E*fB4CU0''1d2@20JbUH4s2sA1H&`,+?X*j1,hB+4>8QLANh5!0JbXA4s2ss2)?pM%6Q=#2_mQ>4>8QM1HlpD@Por#4q0V.1H.-S+?V>62`3cA4CU0)0Koq.0JbXG4s2sA1H.9W+?X*j1c%<)4>8QM3BeQJ0JbXs4s2ss2)Jc+%6Q=#2e>/q4>8QMAj.>"@Pp#Q4q0V.1H7''P+?V>63&3Z?4CU0*Aj-Yd0Jb[I4s2sA1H7?X+?X*j@5''kS4>8QN@Qkns0Jb[u4s2ss2.9oW%6Q=#3+P2q4>8QNANh5!@PqUK4q0V.1H8u1+?V>63AE]?4CU0W1Hl710Jb^E4s2sA1H@9U+?X*j@U_M14>8QO2a/?H0Jb^K4s2ss2.L,[%6Q=#3B98G4>8QO@Qkns@PqY-4q0V.1HB#1+?V>63G(Gt4CU3''0Koq.0Jd,m4s2sA1LW(''+?X*k1,(m$4>8R"2Ei6G0Jd,r4s2ss2DSc+%6Q=#@:;>B4>8R"@Qkns@Q$&%4q0V.1LXlZ+?V>6@PBtg4CU3/@m1?5DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>8R#1d3$E0Jd/q4s2ss2IU&Y%6Q=#@UqYF4>8R#ANh5!@Q,tp4q0V.1Lar[+?V>6@k^(h4CU6''1d2@20Jd2o4s2sA1Li4)+?X*l1,qH,4>8R$2*N-F0Jd2s4s2ss2_nu/%6Q=#@lQXp4>8R$3BeQJ@Q-)&4q0V.1LjlX+?V>6@q.\F4CU6*A3LGb0Jd3L4s2sA1Lju[+?X*l1c%<)4>8R%0g6^B0Jd5p4s2ss2`3EU%6Q=#A2?Cl4>8R%1d3$E@Q-2!4q0V.1LrF.+?V>6A2laq4CU6.0Koq.0Jd6K4s2sA1LsuZ+?X*l2e,#\4>8R%ANh5!0Jd6O4s2ss2`NTW%6Q=#AM?:j4>8R&0g6^B@Q-8V4q0V.1M&=*+?V>6AMlXo4CU6/Aj-Yd0Jd8u4s2sA1M&R1+?X*l3As&14>8R&@Qkns0Jd9M4s2ss2`YJ6%6Q=#ARmtI4>8R&ANh5!@Q.^T4q0V.1M(/^+?V>6AhcIl4CU6X@Qk5`0Jd;t4s2sA1M/L.+?X*l@Pg7X4>8R''@m2"t0Jd<O4s2ss2e?J_%6Q=$0JG[54>8TG0g6^B@Q.mT4q0V.1b^[K+?V>70Jbm84CU6]@m1>a0JkI?4s2sA1b^gO+?X*lAnF494>8TG2a/?H0JkID4s2ss3&!9T%6Q=$0Om9h4>8TGA3M+u@Q6)%4q0V.1b`K)+?V>70ebd64CU9)@Qk5`0JkL=4s2sA1bgaL+?X*m1,M0(4>8TH1d3$E0JkLA4s2ss3&4r,%6Q=$0fD3<4>8TH2a/?H@Q6/#4q0V.1bgsR+?V>70k!6g4CU9+2a.[50JkLr4s2sA1bpaK+?X*m2.JfZ4>8TI1-QgC0JkO@4s2ss3&WQV%6Q=$1,M0;4>8TI2*N-F@Q68U4q0V.1bq$S+?V>71-%N@4CU9/3''Id60JkR?4s2sA1c$mN+?X*m@k^(U4>8TJ@Qkns0JkRq4s2ss3+Y''5%6Q=$1M/fn4>8TK0KpUA@Q7sZ4q0V.1c.0U+?V>71c[`B4CU<,@m1>a0JkUu4s2sA1c6sN+?X*n2)mc/4>8TL1HlpD0JkXD4s2ss3Ari\%6Q=$2)d]A4>8TL3''JHI@Q?A(4q0V.1c8`++?V>72.Jfm4CU<11d2@20JkXu4s2sA1c8l/+?X*n3&s/34>8TM0KpUA0Jk[D4s2ss3B1P5%6Q=$2DmZ@4>8TM2Ei6G@Q@k,4q0V.1c@?X+?V>72IScl4CU<[@m1>a0Jk[s4s2sA1cAl.+?X*n@V.e54>8TMAj.>"0Jk^B4s2ss3Fb$4%6Q=$2_mQ>4>8TN2Ei6G@Q@q04q0V.1cIBX+?V>72`X&E4CU<]3''Id60Jk^s4s2sA1cJu0+?X*nA7@_34>8TNAj.>"0JkaF4s2ss3Fsp/%6Q=$3&NlB4>8TO2Ei6G@QA"/4q0V.1cREX+?V>73&j)E4CU<_1d2@20JkaL4s2sA1cT#0+?X*nAiDm_4>8TOAj.>"0JkdD4s2ss@5''B!%6Q=$3AiuC4>8TP2Ei6G@UV&P4q0V.1c\u.+?V>73FY/p4CV_U3''Id60Jke"4s2sA1c]/3+?X+A1h&WX4>8U#0KpUA0Jm2n4s2ss@5Ti)%6Q=$@5L.j4>8U#2*N-F@UV-''4q0V.1gr:++?V>7@5g@m4CV_W1d2@20Jm2t4s2sA1gsfV+?X+A2E*f/4>8U#@m2"t0Jm3K4s2ss@5fl(%6Q=$@:h\G4>8U$0KpUA@UV2S4q0V.1h&1''+?V>7@P^1j4CV_Y1Hl710Jm5t4s2sA1h&F.+?X+A@5pF[4>8U$3BeQJ0Jm6I4s2ss@:<V/%6Q=$@U_MD4>8U$ANh5!@UW\W4q0V.1h(&\+?V>7@k^(h4CV`.3''Id60Jm8s4s2sA1h/F-+?X+AA2la^4>8U%@m2"t0Jm9M4s2ss@PD:U%6Q=$A2QOn4>8U&2a/?H@U_,M4q0V.1h8U1+?V>7A7IeG4CVbU@Qk5`0Jm<N4s2sA1h:/]+?X+B1c.B*4>8U''1-QgC0Jm>s4s2ss@Ph[\%6Q=$AN)dq4>8U''3BeQJ@U_5O4q0V.1hJ[1+?V>7AiMss4CVc00Koq.0JmBN4s2sA1hL5]+?X+BA2$1V4>8WH1HlpD0JtO@4s2ss@V.S`%6Q=%0K)*;4>8WH2a/?H@U`q]4q0V.2)%$S+?V>80O[-f4CVeS3''Id60JtOn4s2sA2)&Q)+?X+C0Od3T4>8WI0KpUA0JtRA4s2ss@kff(%6Q=%0f;-;4>8WI3BeQJ@Uh-%4q0V.2)/N''+?V>80k3Bi4CVeU1Hl710JtRq4s2sA2)/],+?X+C1,hB+4>8WJ1-QgC0JtUB4s2ss@l#f&%6Q=%1,_<=4>8WJ2a/?H@Uh2Q4q0V.2)7-T+?V>81-%N@4CVeW0Koq.0JtUo4s2sA2)8Z*+?X+C1c%<)4>8WJANh5!0JtUt4s2ss@l.[Z%6Q=%1GM''94>8WK1-QgC@Uh9*4q0V.2)@*R+?V>81H%E>4CVe[1d2@20JtXG4s2sA2)@6V+?X+C3+>&\4>8WK@Qkns0JtXr4s2ss@lZA0%6Q=%1LrZl4>8WL0KpUA@UhDW4q0V.2)I''P+?V>81c.B=4CVe\Aj-Yd0Jt[F4s2sA2)I6U+?X+C@5g@ZASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6Q=%1cRZA4>8WL3BeQJ@Uik$4q0V.2)J`*+?V>81h/]l4CVf01Hl710Jt[t4s2sA2)Jl.+?X+C@UhS24>8WM0g6^B0Jt^C4s2ss@q0"4%6Q=%2)@E=4>8WM2*N-F@Uin[4q0V.2)Sf++?V>82.Jfm4CVf41d2@20Jt_!4s2sA2)[3R+?X+CAn!q54>8WN1HlpD0JtaF4s2ssA2#i(%6Q=%2E<rD4>8WN@Qkns@Uq5M4q0V.2)]#0+?V>82J,,q4CVhX3''Id60JtdE4s2sA2)d<T+?X+D2)mc/4>8WO3''JHI0JtdL4s2ssA2l8,%6Q=%2e"rn4>8WOANh5!@UqGW4q0V.2)f,2+?V>83&!N=4CVh]0Koq.0JtgE4s2sA2)mBU+?X+D3AWi.4>8WP1d3$E0JtgI4s2ssA2uY6%6Q=%3&WrC4>8WP2a/?H@UqK/4q0V.2)o23+?V>83A<W>4CVi31d2@20JtjM4s2sA2*!Z\+?X+E0JG["4>8WQ@m2"t0Jtk$4s2ssAM@UX%6Q=%3G(Gt4>8X$0KpUA@V%8N4q0V.2.84''+?V>8@5:"h4CVkV@m1>a0K!8r4s2sA2.8C,+?X+E1,qH,4>8X$3BeQJ0K!9I4s2ssAMc5-%6Q=%@:MJD4>8X$A3M+u@V%B*4q0V.2.:)\+?V>8@PBtg4CVkZ1d2@20K!;o4s2sA2.AF,+?X+E2)d].4>8X%2Ei6G0K!;u4s2ssAMu5+%6Q=%@Q?Up4>8X%@m2"t@V%GV4q0V.2.C)[+?V>8@V%_G4CVk\0Koq.0K!<O4s2sA2.J@)+?X+E2`!W,4>8X&1-QgC0K!>t4s2ssAN+''^%6Q=%@lQXp4>8X&3BeQJ@V%N/4q0V.2.L&Y+?V>8@q.\F4CVk]Aj-Yd0K!?N4s2sA2.L2]+?X+E3B0234>8X''0g6^B0K!Ar4s2ssARmJY%6Q=%A2HIm4>8X''2Ei6G@V''(/4q0V.2.S[1+?V>8A77YE4CVl51Hl710K!BP4s2sA2.U;_+?X+F0K;6*4>8X(0g6^B0K!Ds4s2ssAhc8/%6Q=%AMZLm4>8X(2*N-F@V.?(4q0V.2.\[0+?V>8AN)dq4CVnZ0Koq.0K!EM4s2sA2.^5\+?X+F2)%3''4>8X(Aj.>"0K!Gr4s2ssAn!GX%6Q=%AhlOm4>8X)1HlpD@V0+[4q0V.2.e^0+?V>8Ai;gq4CVo51d2@20K!H$4s2sA2.eg3+?X+FA7Ie44>8ZI0g6^B0K(U?4s2st0K(mS%6Q=&0Jks94>8ZI2*N-F@k]ns4q0V.2D@*S+?V>90KD<>4C^''R0Koq.0K(Up4s2sA2DAZ*+?X-f@:MJ14>8ZIANh5!0K(Us4s2st0O\QW%6Q=&0ebd64>8ZJ1HlpD@k_@J4q0V.2DI$P+?V>90f;-;4C^''S@m1>a0K(XD4s2sA2DI0T+?X-f@V.e54>8ZJ3BeQJ0K(Xo4s2st0Olt(%6Q=&0k*<h4>8ZJ@m2"t@k_CP4q0V.2DJc,+?V>90kNTl4C^''TAj-Yd0K([?4s2sA2DR!N+?X-fA2la^4>8ZK1-QgC0K([C4s2st0P"WV%6Q=&1,V6<4>8ZK2Ei6G@k_IN4q0V.2DR9V+?V>911<?h4C^''W1d2@20K([t4s2sA2DSl.+?X-g0JG["4>8ZL1d3$E0K(^H4s2st0em0%%6Q=&1H@WA4>8ZL@6Per@kf_p4q0V.2D\f++?V>91LiTk4C^*$2EhR40K(^t4s2sA2D\o.+?X-g11NKW4>8ZLAj.>"0K(aB4s2st0f!?)%6Q=&1c%<<4>8ZM1d3$E@kfc!4q0V.2Dd<U+?V>91cIT@4C^*%Aj-Yd0K(aI4s2sA2DdEX+?X-g1cRZ.4>8ZM@6Per0K(at4s2st0f3?''%6Q=&1hAin4>8ZMAj.>"@kfht4q0V.2Dm6R+?V>92)@E=4C^*(1d2@20K(dF4s2sA2DmBV+?X-g2E*f/4>8ZN2a/?H0K(dJ4s2st0fLdM%6Q=&2.A`l4>8ZN@m2"t@kfqs4q0V.2Do&0+?V>92D@<;4C^**@m1>a0K(gE4s2sA2E!?T+?X-g3AWi.4>8ZO2*N-F0K(gI4s2st0f``-%6Q=&2IScl4>8ZO@Qkns@khCO4q0V.2E*EU+?V>92`*]@4C^*V2a.[50K(jL4s2sA2E*W[+?X-gAhZCX4>8ZP@6Per0K(k"4s2st0kN4*%6Q=&2e5)p4>8ZPANh5!@khS*4q0V.2E3ET+?V>93&3Z?4C^-#@m1>a0K(mK4s2sA2E3WZ+?X-h0fV?+4>8ZQ3BeQJ0K(n!4s2st1,3B)%6Q=&3+>&o4>8ZQ@m2"t@kof!4q0V.2E<HT+?V>93AE]?4C^-&0g6%/0K(pJ4s2sA2E<WY+?X-h2)%3''4>8ZR@6Per0K(q#4s2st1,`W+%6Q=&3FtAs4>8ZRAj.>"@kouQ4q0V.2IS@)+?V>9@5C(i4C^-+3''Id60K*?"4s2sA2IU#X+?X-h@5L.W4>8[%@m2"t0K*?N4s2st11=WU%6Q=&@PBtg4>8[&0g6^B@kqLM4q0V.2I\L,+?V>9@Pp=l4C^-V0Koq.0K*Au4s2sA2I\U/+?X-hA7Ie44>8[&3BeQJ0K*BL4s2st11`7*%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaU2I^/[+?V>9@V%_G4C^-X@Qk5`0K*BP4s2sA2IeI*+?X-hAS++84>8[''1d3$E0K*Du4s2st11iL0%6Q=&@l?Ln4>8[''2a/?H@kqY*4q0V.2Ie^1+?V>9@lZ^q4C^-YAj-Yd0K*EL4s2sA2Ig2[+?X-i0K;6*4>8[''@m2"t0K*EO4s2st1GE<&%6Q=&@q@hH4>8[(0KpUA@l#hq4q0V.2InU-+?V>9A2HIm4C^0&1d2@20K*H!4s2sA2In^0+?X-i1,qH,4>8[(2a/?H0K*H$4s2st1G^^K%6Q=&A77YE4>8[(@Qkns@l$#&4q0V.2IpD`+?V>9AM?:j4C^0+3''Id60K*Js4s2sA2J"X-+?X-i2e,#\4>8[)1d3$E0K*K"4s2st1H73T%6Q=&AS"%J4>8[*0KpUA@l%XT4q0V.2J+^.+?V>9AhuUn4C^0XAj-Yd0K*N#4s2sA2J+j2+?X-iAN2j_4>8[*3''JHI0K*N''4s2st1M/I-%6Q=''0Jbm84>8]J1d3$E@l,uO4q0V.2_[3T+?V>:0KD<>4C^3+1d2@20K1[q4s2sA2_\c++?X-j2`*]-4>8]K3BeQJ0K1^p4s2st1hJF*%6Q=''0kENk4>8]L0KpUA@l.e04q0V.2_m9T+?V>:1,hB>4C^6(3''Id60K1aH4s2sA2_mBW+?X-k11EEV4>8]L@Qkns0K1as4s2st2)@3U%6Q=''11WQk4>8]LAj.>"@l6&O4q0V.2`!0P+?V>:1GV-:4C^6*1d2@20K1dD4s2sA2`"l++?X-k1cRZ.4>8]M@Qkns0K1du4s2st2)R0R%6Q=''1M&`m4>8]N0KpUA@l6,&4q0V.2`*6Q+?V>:1c%<<4C^6+@m1>a0K1gF4s2sA2`*BU+?X-k2D@<(4>8]N3''JHI0K1gK4s2st2)d3Q%6Q=''1grQj4>8]N@m2"t@l62$4q0V.2`,&/+?V>:1hAin4C^6-@m1>a0K1jE4s2sA2`3BT+?X-k3+G,]4>8]O1d3$E0K1jI4s2st2)o23%6Q=''2)mcB4>8]O3BeQJ@l68*4q0V.2`5,0+?V>:2.\ro4C^6W@m1>a0K1k$4s2sA2`<?R+?X-k@Pg7X4>8]P0g6^B0K1mK4s2st2.AO/%6Q=''2E3lC4>8]PANh5!@l7aQ4q0V.2`EES+?V>:2`!W?4C^6YANgPc0K1pK4s2sA2`EZZ+?X-kAM?:W4>8]Q3''JHI0K1q!4s2st2.\R-%6Q=''2e"rn4>8]QA3M+u@l7h-4q0V.2`NKT+?V>:3&*T>4C^6\2EhR40K1sH4s2sA2`N`[+?X-kAn+"64>8]R3''JHI0K1t#4s2st2D@!P%6Q=''3+P2q4>8]RANh5!@l?#Q4q0V.2`PD5+?V>:3A<W>4C^9(3''Id60K2!H4s2sA2`WZX+?X-l0k*<U4>8]S1d3$E0K2!M4s2st2DR*Q%6Q=''3B02F4>8]SA3M+u@l?)O4q0V.2`YG5+?V>:@5''kf4C^9*1Hl710K3Ds4s2sA2dnR-+?X-l1b_*&4>8^&3BeQJ0K3EK4s2st2Dm0P%6Q=''@:DDC4>8^&A3M+u@l?2#4q0V.2dp;^+?V>:@PBtg4C^9,@m1>a0K3Gr4s2sA2e"R,+?X-l2Ieo[4>8^''1d3$E0K3H!4s2st2E#/2%6Q=''@Q-In4>8^''3''JHI@l?8*4q0V.2e$5[+?V>:@UhSE4C^9/3''Id60K3HO4s2sA2e$A_+?X-l3+>&\4>8^(0KpUA0K3Jr4s2st2E<TX%6Q=''@l-@l4>8^(2*N-F@l@aP4q0V.2e+g2+?V>:@lZ^q4C^9Y0Koq.0K3KN4s2sA2e-D_+?X-l@Q-I[4>8^(Aj.>"0K3Mt4s2st2IeF)%6Q=''A2QOn4>8^)2Ei6G@l@h,4q0V.2e4p4+?V>:A77YE4C^9[@m1>a0K3NO4s2sA2e6G_+?X-lA7e"74>8^)ANh5!0K3NS4s2st2J"j3%6Q=''AMQFl4>8^*1HlpD@l@pY4q0V.2e=m2+?V>:AN)dq4C^<(1d2@20K3QO4s2sA2e?G^+?X-m0f2''''4>8^*@m2"t0K3QS4s2st2_d6T%6Q=''AS++K4>8^+0KpUA@lH.s4q0V.2eFj0+?V>:Ai)[o4C^<+0Koq.0K3T''4s2sA2eHJ^+?X-m1LiTX4>8^+@m2"t0K3TS4s2st2`*<S%6Q=(0JG[54>8`K1HlpD@lH5S4q0V.3&!0Q+?V>;0Od3g4C^<-0g6%/0K:at4s2sA3&"r.+?X-m2E3l04>8`L0KpUA0K:dB4s2st2`>,/%6Q=(0f)!94>8`L1d3$E@lH>''4q0V.3&*<T+?V>;0f_E?4C^</@Qk5`0K:dq4s2sA3&+o,+?X-m3&<`-4>8`LA3M+u0K:gA4s2st2`N`[%6Q=(1,1s84>8`M1HlpD@lHAW4q0V.3&3<S+?V>;1,V6<4C^<10Koq.0K:gH4s2sA3&3KX+?X-m3As&14>8`M@Qkns0K:gt4s2st2dnC(%6Q=(11WQk4>8`N0KpUA@lIgP4q0V.3&<9Q+?V>;1GV-:4C^<Y@m1>a0K:jG4s2sA3&<HV+?X-m@UhS24>8`N2a/?H0K:jK4s2st2e$A_%6Q=(1LWHi4>8`N@Qkns@lImW4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN70K:mH4s2sA3&EQX+?X-n0JG["4>8`O3BeQJ0K:n"4s2st3&!9T%6Q=(1hAin4>8`OAj.>"@lQ1s4q0V.3&NBR+?V>;2)@E=4C^?*1Hl710K:pH4s2sA3&NQW+?X-n0k3BV4>8`P3''JHI0K:pM4s2st3&4u-%6Q=(2.Jfm4>8`PA3M+u@lQ8(4q0V.3&WKT+?V>;2DRH=4C^?-3''Id60K:sH4s2sA3&WWX+?X-n1h&WX4>8`Q2a/?H0K:sM4s2st3&`NT%6Q=(2Ieon4>8`QA3M+u@lQG%4q0V.3&YA4+?V>;2_dK=4C^?12*MI30K;!H4s2sA3&`ZX+?X-n3+>&\4>8`RA3M+u0K;"&4s2st3+?A]%6Q=(2eG5r4>8`S0KpUA@lRsT4q0V.3&i]X+?V>;3&EfA4C^?]1d2@20K;$N4s2sA3&il]+?X-nAM?:W4>8`S@Qkns0K;%%4s2st3+cYa%6Q=(3+Y8r4>8`T0KpUA@lZ5"4q0V.3&r]W+?V>;3ANc@4C^B*@m1>a0K;''P4s2sA3&ru_+?X-o2)%3''4>8`T@m2"t0K;(''4s2st3ArQT%6Q=(3G(Gt4>8a''0KpUA@lZGW4q0V.3+4[.+?V>;@5^:l4C^B23''Id60K<KL4s2sA3+68[+?X-o3B0234>8a''Aj.>"0K<Mq4s2st3Faa,%6Q=(@PU+i4>8a(1HlpD@l\$X4q0V.3+=a/+?V>;@Q$Cm4C^B^0Koq.0K<N#4s2sA3+?>\+?X-oA2?CY4>8a(@m2"t0K<NP4s2st3Fk-6%6Q=(@V%_G4>8a(Aj.>"@l\(04q0V.3+F[,+?V>;@l$:k4C^B_1-Q.00K<Q"4s2sA3+Fj1+?X-oARdn54>8a)2a/?H0K<QN4s2st3Fued%6Q=(@q%VE4>8a)@m2"t@l\-\4q0V.3+HPa+?V>;A2$1i4C_eR3''Id60K<St4s2sA3+Og/+?X.B0Od3T4>8a*3BeQJ0K<TO4s2st@5MIX%6Q=(A7RkH4>8a*ANh5!@pq6)4q0V.3+QVb+?V>;AMH@k4C_eWAj-Yd0K<W&4s2sA3+Y''5+?X.B@UhS24>8a+@6Per0K<WQ4s2st@:M)W%6Q=(ARdnH4>8a+A3M+u@prkW4q0V.3+Z\c+?V>;AhcIl4C_f10g6%/0K<Z"4s2sA3+as1+?X.BA2la^4>8a,@m2"t0K<ZT4s2st@PTW$%6Q=)0Jbm84>8cL1d3$E@q%8S4q0V.3A<BU+?V><0K;6=4C_hX3''Id60KCgs4s2sA3A=u-+?X.C2`Nu14>8cM1HlpD0KCjE4s2st@Uq;Z%6Q=)0fV?>4>8cM3BeQJ@q.3&4q0V.3AFu,+?V><0k3Bi4C_kU1Hl710KCju4s2sA3AG)/+?X.D0k3BV4>8cN0KpUA0KCmC4s2st@koc&%6Q=)1,;$94>8cN2*N-F@q.8P4q0V.3ANTY+?V><11<?h4C_kW3''Id60KCmt4s2sA3AP21+?X.D1L`NW4>8cO0KpUA0KCpD4s2st@l-#+%6Q=)1Gh9<4>8cO2*N-F@q.AQ4q0V.3AWQW+?V><1H7Q@4C_kY2a.[50KCq$4s2sA3A`ER+?X.D3B0234>8cP1HlpD0KCsH4s2st@pq>\%6Q=)1c7H>4>8cP2a/?H@q/qV4q0V.3A`]Z+?V><1c[`B4C_l11d2@20KCt"4s2sA3Ab81+?X.D@l-@Y4>8cPAj.>"0KD!E4s2st@q.M_%6Q=)2)IK>4>8cQ2*N-F@q0(,4q0V.3Aif\+?V><2.8Zk4C_nU3''Id60KD"$4s2sA3AkA3+?X.E0fV?+4>8cR0g6^B0KD$I4s2stA25r)%6Q=)2Ieon4>8cRA3M+u@q7K-4q0V.3B&]W+?V><2`!W?4C_n^1d2@20KD''M4s2sA3B&l\+?X.E@5L.W4>8cS@m2"t0KD(&4s2stA7K+5%6Q=)3&<`@4>8cT1d3$E@q9124q0V.3B/r]+?V><3&j)E4C_qV1d2@20KD+''4s2sA3B1S6+?X.F1,(m$4>8cU0KpUA0KD-J4s2stAMQ5/%6Q=)3ANc@4>8cU1HlpD@q@GM4q0V.3B9#^+?V><3B02F4C_q[3''Id60KD.%4s2sA3B:V6+?X.F2.f#]4>8cUANh5!0KD.*4s2stAMuM3%6Q=)@5''kf4>8d(1HlpD@q@Q-4q0V.3FOd/+?V><@5^:l4C_q]1d2@20KEQ$4s2sA3FOp3+?X.F2e"r[4>8d(@6Per0KEQN4s2stAN2M1%6Q=)@:_VF4>8d(Aj.>"@q@YS4q0V.3FXa-+?V><@P^1j4C_r20Koq.0KET!4s2sA3FXm1+?X.F@5C(V4>8d)3''JHI0KET&4s2stART(4%6Q=)@UqYF4>8d)ANh5!@qB4.4q0V.3Faa,+?V><@kg.i4C_r6@Qk5`0KEVu4s2sA3Faj/+?X.FAi)[\4>8d*1d3$E0KEW$4s2stAS*kb%6Q=)@lQXp4>8d*3BeQJ@qIDK4q0V.3FcP_+?V><@q7bG4C_tX0Koq.0KEWS4s2sA3Fjg-+?X.G0f)!&4>8d+0g6^B0KEZ!4s2stAhc8/%6Q=)A2ZUo4>8d+2a/?H@qIK+4q0V.3Fk*5+?V><A77YE4C_tYAj-Z8DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>8d+@m2"t0KEZS4s2stAi2D/%6Q=)A7e"J4>8d,0KpUA@qIT-4q0V.3Fsp/+?V><AMQFl4C_t]1d2@20KE]%4s2sA3Ft*4+?X.G2_[E)4>8d-1-QgC0KE`$4s2stAn<Y[%6Q=)Ai;gq4>8d-2a/?H@qK=,4q0V.3G)\`+?V><An!qH4C_u8@m1>a0OZXl4s2sA@5''Q&+?X0g1Gh9)4>:1t3''JHI0OZXq4s2su0JkUM%6Q=Q0ebd64>:1u0g6^BA2#oO4q0V.@50W''+?V>d0fD3<4Cg-)@m1>a0OZ\E4s2sA@524T+?X0g@5L.W4>:1uANh5!0OZ\J4s2su0Ock&%6Q=Q1,(m74>:2!1-QgCA2%IO4q0V.@59W&+?V>d1,M0;4Cg-U0Koq.0OZ^p4s2sA@59f++?X0g@lHR\4>:2!3BeQJ0OZ_F4s2su0Ouk$%6Q=Q11EEi4>:2!A3M+uA2%OM4q0V.@5;CX+?V>d11i]m4Cg-V@m1>a0OZam4s2sA@5B]''+?X0gARdn54>:2"1d3$E0OZaq4s2su0P+i[%6Q=Q1LWHi4>:2"@QknsA2,ko4q0V.@5DIY+?V>d1M/fn4Cg0&@6P,_0OZdl4s2sA@5K]&+?X0h1b_*&4>:2#1-QgC0OZdp4s2su0f1[M%6Q=Q1c7H>4>:2#2Ei6GA2,oN4q0V.@5Ku.+?V>d1grQj4Cg0(@m1>a0OZgn4s2sA@5Tf(+?X0h2e"r[4>:2$2*N-F0OZgs4s2su0jub"%6Q=Q2)mcB4>:2$3BeQJA2.LO4q0V.@5VIW+?V>d2.A`l4Cg0U0Koq.0OZk"4s2sA@5_OX+?X0i11NKW4>:2%ANh5!0OZkO4s2su1,EE(%6Q=Q2`<iB4>:2&2a/?HA26+u4q0V.@5hUY+?V>d2e"rn4Cg3-0Koq.0OZpr4s2sA@5p&,+?X0i@Q6O\4>:2''2*N-F0OZq!4s2su11FiZ%6Q=Q3&j)E4>:2''3BeQJA27XS4q0V.@6$#*+?V>d3AE]?4Cg3Y1d2@20OZss4s2sA@6$,-+?X0iAhZCX4>:2(2Ei6G0OZt#4s2su1GCLH%6Q=Q3FP)o4>:2(@m2"tA2>oL4q0V.@6%j^+?V>d3FtAs4Cg6&0Koq.0OZtR4s2sA@::iR+?X0j0f)!&4>:2P1-QgC0O\BG4s2su1GNB''%6Q=Q@5L.j4>:2P2Ei6GA2>rP4q0V.@:;)Y+?V>d@5pFn4Cg6''1d2@20O\BM4s2sA@:<S.+?X0j1,qH,4>:2P@m2"t0O\C#4s2su1GWQ+%6Q=Q@:_VF4>:2PAj.>"A2?#$4q0V.@:CoS+?V>d@PU+i4Cg6(@Qk5`0O\EH4s2sA@:D&W+?X0j1c.B*4>:2Q2Ei6G0O\EL4s2su1H/f-%6Q=Q@UVGC4>:2Q@QknsA2?2T4q0V.@:E_1+?V>d@V%_G4Cg6-Aj-Yd0O\HF4s2sA@:M#U+?X0j3B0234>:2R1d3$E0O\HK4s2su1LW7,%6Q=Q@lQXp4>:2R3BeQJA2@[O4q0V.@:Ne2+?V>d@q7bG4Cg6X1d2@20O\I&4s2sA@:Nn5+?X0j@lQX]4>:2S2*N-F0O\KM4s2su1M(&[%6Q=QA2ugr4>:2S@6PerA2@h-4q0V.@:Wq5+?V>dA7e"J4Cg9&3''Id60O\NP4s2sA@:_G_+?X0k2`Nu14>:2T@Qkns0O\O&4s2su1cK#1%6Q=QAS"%J4>:2TAj.>"A2H8*4q0V.@PBQ$+?V>e0Jbm84Cg<(1d2@20Oc^q4s2sA@PBf++?X0l1LiTX4>:4u@m2"t0Oc_H4s2su2)Jf,%6Q=R0P*Ej4>:5!0KpUAA2Q2U4q0V.@PKT$+?V>e0etp84Cg<,3''Id60Ocao4s2sA@PKc)+?X0l2DdT,4>:5!2a/?H0Ocar4s2su2)[EX%6Q=R0k3Bi4>:5!ANh5!A2Q;%4q0V.@PTW$+?V>e1,1s84Cg<.@Qk5`0Ocdm4s2sA@PT`''+?X0l3&Ef.4>:5"1d3$E0Ocdq4s2su2)mNY%6Q=R1,qH?4>:5"3BeQJA2Q>Y4q0V.@PVOZ+?V>e1GD!84Cg<Z3''Id60Ocgp4s2sA@P]o++?X0lA2c[]4>:5#3BeQJ0OchH4s2su2.\I*%6Q=R1L`Nj4>:5#A3M+uA2RpS4q0V.@Pfc&+?V>e1bh0:4Cg<]1d2@20Ocjo4s2sA@Pfo*+?X0lAiDm_4>:5$2*N-F0Ocjt4s2su2.gGa%6Q=R1grQj4>:5$@QknsA2Z.r4q0V.@PhRY+?V>e1hAin4Cg?)1Hl710Ocmq4s2sA@Pou++?X0m1H7Q-4>:5%3''JHI0Ocn"4s2su2DdBW%6Q=R2.Sln4>:5%ANh5!A2Z;%4q0V.@Q#u*+?V>e2DdT?4Cg?.2a.[50Ocpt4s2sA@Q$,.+?X0m2_[E)4>:5&@6Per0OcqL4s2su2E521%6Q=R2`EoC4>:5''3''JHIA2[pS4q0V.@Q.^Z+?V>e2e"rn4Cg?[@m1>a0OctN4s2sA@Q.g]+?X0mA2$1V4>:5''ANh5!0Od!q4s2su2InU-%6Q=R3&j)E4>:5(3BeQJA2\%04q0V.@Q7m^+?V>e3+Y8r4CgB*3''Id60Od$s4s2sA@Q?2-+?X0n1,qH,ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6Q=R3AiuC4>:5)2Ei6GA2c;$4q0V.@Q@p^+?V>e3Fk;r4CgB.0Koq.0Od%S4s2sA@UV#U+?X0n2)[W-4>:5Q1d3$E0OeHJ4s2su2`<?R%6Q=R@:MJD4>:5QA3M+uA2cGW4q0V.@UWk4+?V>e@PBtg4CgB13''Id60OeKI4s2sA@U_/X+?X0n3B0234>:5R2*N-F0OeKM4s2su2`Y>2%6Q=R@Q?Up4>:5RA3M+uAn!GJ4q0V.@U`n4+?V>e@V.eH4>8HE0Koq.0OeNG4s2sA@Uh,V+?V>31,qH,4>:5S1-QgC0OeNJ4s2sA0J[*$%6Q=R@l-@l4>:5T2*N-F0JG7n4q0V.@UqJ_+?V>eA77YE4>8HJA3LGb0OeR)4s2sA@V%8X+?VD50etp%4>:5U1-QgC0OeTL4s2sC0JPON%6Q=RAMcRn4>:5U2*N-F1,(Fm4q0V.@V%G]+?V>eAN)dq4>JTG1-Q.00OeU&4s2sA@V''%5+?VD72DdT,4>:5V0g6^B0OeWL4s2sCAM[aY%6Q=RAhuUn4>:5V1d3$E@:LuH4q0V.@V.S`+?V>eAiW$t4CM_U2*MI30OeX(4s2sA@V018+?X(B1cIT-4>:8"1d3$E0Olgp4s2sr@qK.5%6Q=S1,D*:4>:8#1d3$E@:VAX4q0V.@kp#-+?V>f1-%N@4CMc/@Qk5`0OlkH4s2sA@kqLW+?X(C@Pg7X4>:8$2*N-F0Olms4s2srAM>o(%6Q=S1LiTk4>:8$A3M+u@:_2N4q0V.@l-&,+?V>f1c@N?4CMeZ1-Q.00Olso4s2sA@l5u)+?X(D@kp4W4>:8&1d3$E0Olst4s2srARoC:%6Q=S2.A`l4>:8&@m2"t@:h2M4q0V.@l?2.+?V>f2E!`A4CMhZ3''Id60Om"#4s2sA@l?>2+?X(E2I\iZ4>:8''@6Per0Om"M4s2srAiDP1%6Q=S2J#&p4>:8''Aj.>"@:hMU4q0V.@lH,++?V>f2_mQ>4CMi11Hl710Om$t4s2sA@lH5.+?X(E@:MJ14>:8(@6Per0Om%N4s2srAn<e_%6Q=S3&NlB4>:8)2Ei6G@PBSt4q0V.@lRs^+?V>f3+P2q4CU!&2a.[50OnNF4s2sA@pq)U+?X*f1,(m$4>:8R1-QgC0OnNI4s2ss0f*<''%6Q=S@5pFn4>:8R@6Per@PK`#4q0V.@prk2+?V>f@:VPE4CU$''1Hl710OnO&4s2sA@prt5+?X*f2Ieo[4>:8S0g6^B0OnQI4s2ss0fNN)%6Q=S@P^1j4>:8S1d3$E@PKfQ4q0V.@q.J^+?V>f@lZ^q4CU''$2a.[50OnU$4s2sA@q/t3+?X*g1GD!%4>:8U0KpUA0OnWJ4s2ss1,LdN%6Q=SA26=k4>:8U1HlpD@PTcM4q0V.@q7D[+?V>fA2ZUo4CU''&Aj-Yd0OnX)4s2sA@q918+?X*g3+4u[4>:8V2Ei6G0OnZQ4s2ss11W1)%6Q=SAhuUn4>:8W1d3$E@P]cL4q0V.A2#l)+?V>g0K)*;4CU*,@m1>a0OukG4s2sAA2%IV+?X*h@Q6O\4>:;"ANh5!0OukL4s2ss1Li=,%6Q=T0f2'':4>:;#2*N-F@P_P+4q0V.A2-#,+?V>g0fV?>4CU*Y0Koq.0Oumu4s2sAA2.OW+?X*hAhuU[4>:;#A3M+u0OunL4s2ss1b^^L%6Q=T0kNTl4>:;$0KpUA@PfcK4q0V.A26&,+?V>g1,hB>4CU-''@Qk5`0Oupu4s2sAA26//+?X*i1c.B*4>:;%1-QgC0Ousq4s2ss1cI3S%6Q=T1Gh9<4>:;%2*N-F@Pg#R4q0V.A2@XX+?V>g1L`Nj4CU-,Aj-Yd0OutM4s2sAA2@d\+?X*i3FY/]4>:;&3''JHI0P!"#4s2ss2)%!R%6Q=T1hAin4>:;''0KpUA@Por%4q0V.A2Q2-+?V>g2)[W@4CU0+2a.[50P!''q4s2sAA2Z/++?X*jAN2j_4>:;(@6Per0P!(N4s2ss2DI3U%6Q=T2_[E<4>:;)0g6^B@Q$&T4q0V.A2c8-+?V>g2`!W?4CU3+3''Id60P!+#4s2sAA2cG2+?X*k2I\iZ4>:;)3''JHI0P!+&4s2ss2E*HV%6Q=T2dnlm4>:;)@m2"t@Q$/(4q0V.A2e$_+?V>g2e>/q4CU3.0Koq.0P!.#4s2sAA2lJ2+?X*k@q%V24>:;*3''JHI0P!.''4s2ss2Ip8\%6Q=T3+4un4>:;*@Qkns@Q%dS4q0V.A2n''_+?V>g3+P2q4CU3[3''Id60P!1Q4s2sAA3"0a+?X*l3AWi.4>:;+Aj.>"0P"TG4s2ss2e$5[%6Q=T@5pFn4>:;S@6Per@Q6+t4q0V.A79(6+?V>g@PBtg4CU9,2a.[50P"WN4s2sAA7@J]+?X*m2`<i/4>:;T3BeQJ0P"X$4s2ss3&il]%6Q=T@U_MD4>:;T@m2"t@Q6>V4q0V.A7B+6+?V>g@V.eH4CU91@Qk5`0P"[(4s2sAA7K17+?X*n0Od3T4>:;UAj.>"0P"]J4s2ss3AE?S%6Q=TA2QOn4>:;V2Ei6G@Q?4u4q0V.A7RV_+?V>gA2ugr4CU<,1Hl710P"`P4s2sAA7[Y_+?X*n@5''kS4>:;XA3M+u0P"d,4s2ss@5or)%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaUAM>i&+?V>h0JYg74CV_Z1Hl710P)po4s2sAAM>r)+?X+A3Fb5^4>:>#3''JHI0P)pu4s2ss@:;#W%6Q=U0P*Ej4>:>#Aj.>"@UWbU4q0V.AMGl&+?V>h0ekj74CV`01d2@20P*!s4s2sAAMQ/-+?X+B2e,#\4>:>%2a/?H0P*""4s2ss@Q.m_%6Q=U11NKj4>:>%A3M+u@U_?-4q0V.AMc8.+?V>h1c@N?4CVeY2a.[50P*(Q4s2sAAMl/*+?X+C@Q6O\4>:>(2a/?H0P*+$4s2ss@q@V`%6Q=U2.Jfm4>:>(A3M+u@Uq0$4q0V.AMu8,+?V>h2DRH=4CVhU2a.[50P*-u4s2sAAMuA/+?X+D1,(m$4>:>)2Ei6G0P*.$4s2ssA2?#*%6Q=U2`*]@4>:>*2Ei6G@UqJW4q0V.AN+0a+?V>h2eG5r4CVi1Aj-Yd0P*3t4s2sAAN2D.+?X+D@lQX]4>:>+1-QgC0P*4#4s2ssA7K(4%6Q=U3+>&o4>:>+@m2"t@V%8Q4q0V.AN;M0+?V>h3AWiA4CVkX3''Id60P*7%4s2sAAN;Y4+?X+E2.JfZ4>:>T0g6^B0P+ZJ4s2ssAS*_^%6Q=U@5C(i4>:>T1d3$E@V''.]4q0V.ARRJ\+?V>h@5g@m4CVnVAj-Yd0P+[%4s2sAART+5+?X+F1H.K,4>:>U0KpUA0P+]J4s2ssAi4$]%6Q=U@Q$Cm4>:>U2a/?H@V0%*4q0V.AR[Y`+?V>h@UVGC4CVo40Koq.0P+`K4s2sAARdJZ+?X-f1c%<)4>:>V3BeQJ0P+a&4s2st0OZk''%6Q=U@q7bG4>:>VANh5!@k_@N4q0V.ARf=9+?V>hA2$1i4C^''S@6P,_0P+cL4s2sAARmS\+?X-f@kp4W4>:>X1HlpD0P+fP4s2st0f<Q,%6Q=UAMu^p4>:>X2a/?H@kfr!4q0V.AS!kc+?V>hARRbF4C^*+2a.[50P+g+4s2sAAS#F:+?X-g@Q6O\4>:>XAj.>"0P+iM4s2st0k+TU%6Q=V0JPa64>:A$1-QgC@kokt4q0V.AhZ/-+?V>i0K;6=4C^-)1Hl710P3"L4s2sAAh[g\+?X-h@:_V34>:A%0g6^B0P3$p4s2st11FZU%6Q=V0fD3<4>:A%2a/?H@kqRK4q0V.Ahdm]+?V>i1,(m74C^0$0g6%/0P3("4s2sAAhlA1+?X-i1H.K,4>:A&@6Per0P3(L4s2st1GgdL%6Q=V1H.K?4>:A''3BeQJ@l$,(4q0V.Ai!p\+?V>i1LrZl4C^0U2a.[50P3+P4s2sAAi"$_+?X-i@PBtT4>:A(0KpUA0P3-r4s2st1L`.(%6Q=V1c%<<4>:A(1d3$E@l%V)4q0V.Ai)A/+?V>i1cIT@4C^0WAj-Yd0P3.N4s2sAAi+!]+?X-j0Jks&4>:A)0g6^B0P30t4s2st1bgpQ%6Q=V2.8Zk4>:A)@Qkns@l-#S4q0V.Ai4''^+?V>i2.Sln4C^3*3''Id60P34"4s2sAAi;M1+?X-j3&a#14>:A*@6Per0P34P4s2st1gr1(%6Q=V2Inuo4>:A*Aj.>"@l.V+4q0V.AiDG.+?V>i2_mQ>4C^3WAj-Yd0P37"4s2sAAiDP1+?X-j@lQX]4>:A+@6Per0P37Q4s2st1h:&Z%6Q=V2e,#o4>:A+A3M+u@l.aR4q0V.AiO6`+?V>i3+G,p4C^6+@6P,_0P3:V4s2sAAiVP/+?X-k2`X&24>:A-@m2"t0P3=U4s2st2.\d3%6Q=V@5g@m4>:AU3''JHI@l?,R4q0V.Amo.4+?V>i@:MJD4C^9-1Hl710P4cP4s2sAAn!\_+?X-lA26=X4>:AV3BeQJ0P4d&4s2st2J"^/%6Q=V@kg.i4>:AW1-QgC@lH,P4q0V.An*\^+?V>i@l?Ln4C^<+3''Id60P4fR4s2sAAn*ea+?X-m1c7H+4>:AX1d3$E0P4iR4s2st2dn^1%6Q=VA2c[p4>:AX3''JHI@lIjP4q0V.AnEe^+?V>iAhuUn4C^?/1d2@20P4oU4s2sAAnF"d+?X-n3ANc-4>:AZA3M+u0P4p.4s2st3+6D_%6Q@!0Jbm84>AND1d3$E@lS$Y4q0V/0JG@J+?VA40K)*;4C^?_0Koq.0eb:m4s2sB0JI*&+?X-o0kNTY4>ANE0KpUA0eb=:4s2st3ANQX%6Q@!0fD3<4>ANE2a/?H@lZ>S4q0V/0JPON+?VA40f_E?4C^B.1d2@20eb=j4s2sB0JR''$+?X-o1cIT-4>ANF3''JHI0eb@C4s2st3FXg/%6Q@!1L`Nj4>ANG@m2"t@pq5R4q0V/0JkOK+?VA41c%<<4C_eY3''Id60ebF@4s2sB0JkXN+?X.B2e"r[4>ANH3BeQJ0ebFm4s2st@5q^[%6Q@!1h&Wk4>ANH@m2"t@pqAS4q0V/0JmB*+?VA42)%3:4C_f.0Koq.0ebI@4s2sB0Jt[N+?X.B@PBtT4>ANI@Qkns0ebIp4s2st@:_D^%6Q@!2DIB<4>ANJ1-QgC@prtY4q0V/0K(dP+?VA42E*fB4C_hU1Hl710ebLo4s2sB0K*B(+?X.C1LiTX4>ANK1-QgC0ebOB4s2st@Q%[Z%6Q@!2`*]@4>ANK2*N-F@q%AR4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN70ebOH4s2sB0K3E(+?X.C3&a#14>ANK@Qkns0ebOr4s2st@Q?,+%6Q@!2e5)p4>ANKANh5!@q%GT4q0V/0K:dN+?VA43&3Z?4C_i/1Hl710ebRC4s2sB0K:mQ+?X.C@:MJ14>ANL@6Per0ebRr4s2st@UhA]%6Q@!3+Y8r4>ANLAj.>"@q&tX4q0V/0KCmP+?VA43AWiA4C_i40Koq.0ebUG4s2sB0KD''U+?X.D0JG["4>ANM3BeQJ0ebUr4s2st@k]c(%6Q@!@:h\G4>AO!0KpUA@q0%.4q0V/0Ocn''+?VA4@Q$Cm4C_l5@m1>a0ed''I4s2sB0OeTW+?X.E2)@E*4>AO"@Qkns0ed*I4s2stA7@J]%6Q@!@q7bG4>AO"ANh5!@q9(''4q0V/0Oun%+?VA4A26=k4C_o4@m1>a0ed,o4s2sB0P!%)+?X.EA7e"74>AO#Aj.>"0ed/m4s2stAMdm\%6Q@!AMlXo4>AO$2Ei6G@q@W14q0V/0P*4-+?VA4AN;ps4C_r23Bdm70ed0J4s2sB0P+`X+?X.F@UhS24>AO%3BeQJ0ed3J4s2stAi)J2%6Q@!An!qH4>AO%A3M+u@qIQ,4q0V/0ebCI+?VA50Jks94C_t`1Hl710ek@>4s2sB0ebLL+?X.G3Fb5^4>AQE@6Per0ek@k4s2stAn!_`%6Q@"0ebd64>AQF0g6^B@qK7.4q0V/0em*#+?VA50k*<h4Cg-$3''Id60ekCm4s2sB0em3&+?X0g11EEV4>AQG3BeQJ0ekFl4s2su0KD*V%6Q@"1GV-:4>AQH1HlpDA2%RM4q0V/0f(gR+?VA51LWHi4Cg0#3''Id60ekLA4s2sB0f1aO+?X0h2`Nu14>AQI@m2"t0ekLr4s2su0k*(*%6Q@"2).9;4>AQJ1-QgCA2.S(4q0V/0f:gP+?VA52)[W@4Cg0X@m1>a0ekOG4s2sB0f<B''+?X0i0Jks&4>AQJAj.>"0ekR?4s2su1,:OI%6Q@"2DmZ@4>AQK2Ei6GA25uR4q0V/0fD!T+?VA52E<rD4Cg3)3''Id60ekRt4s2sB0fEW-+?X0i2I\iZ4>AQL0KpUA0ekUA4s2su1,h$R%6Q@"2_mQ>4>AQL1HlpDA26)''4q0V/0fV-V+?VA53&s/F4Cg6*1d2@20em)j4s2sB0jue#+?X0k0fV?+4>AR!2Ei6G0em)q4s2su1c6sN%6Q@"@PBtg4>AR"0g6^BA2H;U4q0V/0k)n%+?VA5@P^1j4Cg9W1d2@20em,o4s2sB0k*"(+?X0k@5g@Z4>AR"2Ei6G0em,r4s2su1h&.&%6Q@"@UVGC4>AR"@QknsA2IdM4q0V/0k4WU+?VA5@q%VE4Cg<*0Koq.0em0L4s2sB0k4fZ+?X0l2)RQ,4>AR$@6Per0em3J4s2su2.81&%6Q@"AN)dq4>AR%3BeQJA2Z2T4q0V/0kN7++?VA5Ai2ap4Cg?/2a.[50em8u4s2sB0kN@.+?X0m3&!N*4>ATF0g6^B0etF<4s2su2Ip;]%6Q@#0Ju$:4>ATF2Ei6GA2\$U4q0V/1,([O+?VA60KD<>4CgB)@m1>a0etFk4s2sB1,*0$+?X0n0P3KX4>ATFA3M+u0etFo4s2su2`"l+%6Q@#0f;-;4>ATG2Ei6GA2cDT4q0V/1,3<''+?VA60kENk4CM_R2*MI30etIq4s2sB1,:RJ+?X(B0P!?V4>ATH1HlpD0etL@4s2sr@khOY%6Q@#1,_<=4>ATH@m2"t@:M&M4q0V/1,<E)+?VA611i]m4CM_U1Hl710etO>4s2sB1,C[L+?X(B1LWHV4>ATI1HlpD0etOA4s2sr@l%XZ%6Q@#1Gq?=4>ATI3BeQJ@:M,L4q0V/1,EB''+?VA61b_*94CM_VANgPc0etR?4s2sB1,LdN+?X(B2)RQ,4>ATJ1d3$E0etRD4s2sr@l681%6Q@#1cIT@4>ATJA3M+u@:M0*4q0V/1,NQ++?VA62)d]A4CM_X2EhR40etUp4s2sB1,WW,+?X(B2e"r[4>ATL0KpUA0etXA4s2sr@lS$`%6Q@#2DRH=4>ATL1HlpD@:M;P4q0V/1,^sQ+?VA62IScl4CM_[2*MI30etXs4s2sB1,`]-+?X(B@5:"U4>ATM0g6^B0et[C4s2sr@prn3%6Q@#2`!W?4>ATM1d3$E@:Nb%4q0V/1,h''S+?VA62`<iB4CM`/2*MI30et[r4s2sB1,iZ++?X(B@l?L[4>ATM@m2"t0et[u4s2sr@q.M_%6Q@#2e>/q4>ATN1d3$E@:NeX4q0V/1,q0U+?VA63+>&o4CM`1@6P,_0et^u4s2sB1,rf.+?X(BAMQFY4>ATNANh5!0et_#4s2sr@q@M]%6Q@#3A`oB4>ATO2*N-F@:Nn\4q0V/1-%6V+?VA63B'',E4CMbS0g6%/0etaL4s2sB1-&l/+?X(C0K20)4>ATOAj.>"0f!/n4s2srA2,l(%6Q@#@5L.j4>AU"2*N-F@:V*$4q0V/11<()+?VA6@5g@m4CMbTA3LGb0f!/t4s2sB11=]W+?X(C1,D*''4>AU"Aj.>"0f!2p4s2srA27^[%6Q@#@Pp=l4>AU#2Ei6G@:V/P4q0V/11E1++?VA6@Q6Oo4CMbV3Bdm`DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>AU#@6Per0f!3L4s2srA2@g]%6Q@#@k^(h4>AU$2*N-F@:V3''4q0V/11N4++?VA6@lHRo4CMbX1-Q.00f!5u4s2sB11N=.+?X(C2)RQ,4>AU$@6Per0f!8n4s2srA2QA2%6Q@#A2?Cl4>AU%3''JHI@:V8S4q0V/11WC/+?VA6A77YE4CMbYANgPc0f!9K4s2sB11XlY+?X(C2_dK*4>AU%ANh5!0f!9O4s2srA2cM4%6Q@#AMQFl4>AU&1HlpD@:V>S4q0V/11`=,+?VA6AMu^p4CMb[@6P,_0f!<!4s2sB11`F/+?X(C3+P2^4>AU&3BeQJ0f!<P4s2srA2uA.%6Q@#AhcIl4>AU''2Ei6G@:VB04q0V/11iI/+?VA6AiMss4CMc/2EhR40f!?$4s2sB11jrY+?X(C@6$L\4>AU''@Qkns0f!?Q4s2srA79"4%6Q@$0JG[54>AWG0g6^B@:Wh&4q0V/1GCUK+?VA70K;6=4CMc0@6P,_0f(LD4s2sB1GE6$+?X(C@kp4W4>AWG@Qkns0f(Ln4s2srA7IJ\%6Q@$0P*Ej4>AWH1-QgC@:WkW4q0V/1GL^M+?VA70f_E?4CMc22EhR40f(Om4s2sB1GN?&+?X(CA7[q64>AWH@m2"t0f(Oq4s2srA7[JZ%6Q@$0kNTl4>AWI0g6^B@:Wq,4q0V/1GU^L+?VA71,M0;4CMc33Bdm70f(RD4s2sB1GWH(+?X(CAhlOZ4>AWIA3M+u0f(Rr4s2srA7f76%6Q@$1GD!84>AWJ0g6^B@:_,M4q0V/1G^mP+?VA71H%E>4CMeU2EhR40f(UE4s2sB1G_$T+?X(D0f_E,4>AWJ@6Per0f(Uq4s2srAMI^Z%6Q@$1LrZl4>AWJAj.>"@:_2K4q0V/1GgjN+?VA71cIT@4CMeV@6P,_0f(XG4s2sB1Gh*U+?X(D1GV-''4>AWK@6Per0f(Xq4s2srAMZ2-%6Q@$1h8cm4>AWKAj.>"@:_6*4q0V/1GpsP+?VA72)IK>4CMeY0g6%/0f([F4s2sB1GrT)+?X(D2)d].4>AWLA3M+u0f([u4s2srAMuG1%6Q@$2D@<;4>AWM0g6^B@:_?-4q0V/1H%!P+?VA72D[N>4CMe[0g6%/0f(^E4s2sB1H%*S+?X(D2`*]-4>AWM3''JHI0f(^r4s2srAN+0a%6Q@$2I\im4>AWM@m2"t@:_DR4q0V/1H&f.+?VA72J,,q4CMe\3Bdm70f(aB4s2sB1H.9W+?X(D3+Y8_4>AWN@6Per0f(b#4s2srAN=0_%6Q@$3&!N=4>AWO1-QgC@:`k%4q0V/1H70S+?VA73ANc@4CMf02*MI30f(gG4s2sB1H@EY+?X(D@Q$CZ4>AWP@Qkns0f*5m4s2srARdS]%6Q@$@5L.j4>AX#2*N-F@:`t-4q0V/1LW4++?VA7@5pFn4CMf3A3LGb0f*5u4s2sB1LXlZ+?X(DAMH@X4>AX$0g6^B0f*8p4s2srAS#F:%6Q@$@Pg7k4>AX$2*N-F@:a%+4q0V/1L`7++?VA7@Q-In4CMf52EhR40f*8u4s2sB1L`@.+?X(DAiW$a4>AX$@6Per0f*;n4s2srAS,I:%6Q@$@kp4j4>AX%1d3$E@:h3%4q0V/1Li:++?VA7@l?Ln4CMhUANgPc0f*;u4s2sB1LjoY+?X(E0ekj$4>AX%A3M+u0f*?#4s2srAhc8/%6Q@$A77YE4>AX&Aj.>"@:h8Q4q0V/1M&7(+?VA7AMH@k4CMhWANgPc0f*At4s2sB1M&F-+?X(E1H@W.4>AX''@6Per0f*BM4s2srAi*p[%6Q@$ARdnH4>AX''A3M+u@:h?,4q0V/1M(,]+?VA7Ai)[o4CMhZ0g6%/0f*E"4s2sB1M1)[+?X(E2.\r\4>AX(@m2"t0f*EP4s2srAi;P2%6Q@$An=.K4>AX(Aj.>"@:hDX4q0V/1b^UI+?VA80K)*;4CMh[A3LGb0f1RC4s2sB1b^mQ+?X(E2`<i/4>AZH3BeQJ0f1Rq4s2srAiF-^%6Q@%0P3Kk4>AZI0KpUA@:hJS4q0V/1bg^K+?VA80etp84CMh]2*MI30f1U@4s2sB1bh!S+?X(E3&s/34>AZI@Qkns0f1X>4s2srAiVb5%6Q@%1,1s84>AZJ1HlpD@:hN14q0V/1bpmO+?VA81,V6<4CMi10g6%/0f1XD4s2sB1brQ)+?X(E@5U4X4>AZJA3M+u0f1[?4s2srAmo77%6Q@%1GM''94>AZK2*N-F@:it)4q0V/1c%$R+?VA81H.K?4CMi2@6P,_0f1[G4s2sB1c%-U+?X(E@UqY34>AZK@6Per0f1[t4s2srAn*S[%6Q@%1bh0:4>AZL1d3$E@:j%(4q0V/1c.''R+?VA81c@N?4CMi42EhR40f1^G4s2sB1c.0U+?X(EA2ug_4>AZL3BeQJ0f1_!4s2srAn5F9%6Q@%2).9;4>AZM2Ei6G@:j(Z4q0V/1c73U+?VA82)mcB4CMi61-Q.00f1aJ4s2sB1c8]*+?X(EAi2a]4>AZM@Qkns0f1dC4s2srAnF%e%6Q@%2D[N>4>AZN3''JHI@PBJo4q0V/1c@?X+?VA82IScl4CTuuANgPc0f1dt4s2sB1cAi-+?X*e0ekj$ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6Q@%2Inuo4>AZO1HlpD@PBMo4q0V/1cI<V+?VA82e"rn4CU!"1-Q.00f1h!4s2sB1cJu0+?X*e1-%N-4>AZOAj.>"0f1jE4s2ss0J[0&%6Q@%3&3Z?4>AZP3''JHI@PBSm4q0V/1cRKZ+?VA83+4un4CU!#@6P,_0f1k!4s2sB1c[9S+?X*e1LrZY4>AZQ1-QgC0f1mH4s2ss0Jk[O%6Q@%3AiuC4>AZQ3''JHI@PBWN4q0V/1c],2+?VA83G(Gt4CU!&1-Q.00f3;m4s2sB1gr+&+?X*e2DmZ-4>A[$1-QgC0f3;p4s2ss0K(pT%6Q@%@5L.j4>A[$@6Per@PB]M4q0V/1gslX+?VA8@PL%h4CU!''2EhR40f3>p4s2sB1h&7)+?X*e2e>/^4>A[%1d3$E0f3>s4s2ss0K:dN%6Q@%@Q$Cm4>A[%@Qkns@PBc!4q0V/1h''uZ+?VA8@V.eH4CU!)1-Q.00f3Ao4s2sB1h/7(+?X*e3As&14>A[&1-QgC0f3Ar4s2ss0KEZ-%6Q@%@l6Fm4>A[&2a/?H@PD4J4q0V/1h/L/+?VA8@lZ^q4CU!R2EhR40f3BK4s2sB1h0uY+?X*e@Q?U]4>A[&@m2"t0f3Dr4s2ss0OeQV%6Q@%A2HIm4>A[''2a/?H@PD;#4q0V/1h8U1+?VA8A77YE4CU!T1-Q.00f3EM4s2sB1h:)[+?X*eA2QO[4>A[''A3M+u0f3Gt4s2ss0P!1-%6Q@%AMu^p4>A[(2a/?H@PD@P4q0V/1hAX1+?VA8AN;ps4CU!U@6P,_0f3HM4s2sB1hL8^+?X*eARmt64>A[)ANh5!0f3KS4s2ss0eb@H%6Q@&0JG[54>A]I1HlpD@PKPn4q0V/2)$jN+?VA90Ju$:4CU$!A3LGb0f:XC4s2sB2)%!R+?X*f0f2''''4>A]I@Qkns0f:Xp4s2ss0etXN%6Q@&0P!?i4>A]IANh5!@PKVu4q0V/2)&W++?VA90f;-;4CU$#A3LGb0f:[E4s2sB2).''S+?X*f1LWHV4>A]J@6Per0f:[p4s2ss0f1aO%6Q@&0k3Bi4>A]JA3M+u@PK]"4q0V/2)/Z++?VA91,1s84CU$%@m1>a0f:^B4s2sB2)7!P+?X*f2)[W-4>A]K2*N-F0f:^E4s2ss0f<N+%6Q@&1,hB>4>A]K3''JHI@PKbq4q0V/2)70U+?VA911i]m4CU$''2*MI30f:aB4s2sB2)@0T+?X*f2_mQ+4>A]L3BeQJ0f:at4s2ss0fUsQ%6Q@&1bh0:4>A]M1-QgC@PKl$4q0V/2)I*Q+?VA91c.B=4CU$*3Bdm70f:dF4s2sB2)Jc++?X*f3Fk;_4>A]MA3M+u0f:gD4s2ss0k"KS%6Q@&2)@E=4>A]N2*N-F@PM=H4q0V/2)R9U+?VA92)mcB4CU$S2*MI30f:gK4s2sB2)[6S+?X*f@Q?U]4>A]O1d3$E0f:jt4s2ss0k3()%6Q@&2I\im4>A]O@m2"t@PMA(4q0V/2)\u/+?VA92J#&p4CU$U0g6%/0f:k$4s2sB2)dBV+?X*fA2QO[4>A]P2a/?H0f:mu4s2ss0kE+(%6Q@&2e,#o4>A]PA3M+u@PMG&4q0V/2)f)1+?VA92eG5r4CU$VA3LGb0f:pE4s2sB2)mKX+?X*fAhcIY4>A]Q3BeQJ0f:q%4s2ss0kOu\%6Q@&3+b>s4>A]R0KpUA@PTVq4q0V/2*!BT+?VA93ANc@4CU''"3Bdm70f:sI4s2sB2*!KW+?X*g0P*EW4>A]R2*N-F0f:sL4s2ss1,1LI%6Q@&3Fb5q4>A]RA3M+u@PT\o4q0V/2*#53+?VA93G(Gt4CU''$2*MI30f<An4s2sB2.8C,+?X*g1-%N-4>A^%3''JHI0f<BM4s2ss1,CgP%6Q@&@:_VF4>A^%Aj.>"@PT`N4q0V/2.A7''+?VA9@PL%h4CU''&0g6%/0f<Dq4s2sB2.AO/+?X*g1c7H+4>A^&@6Per0f<EP4s2ss1,UgN%6Q@&@k^(h4>A^''0g6^B@PTfL4q0V/2.JC*+?VA9@l$:k4CU''''A3LGb0f<Gt4s2sB2.L&Y+?X*g2DIB)4>A^''ANh5!0f<Jr4s2ss1,gmN%6Q@&A26=k4>A^(1HlpD@PTl#4q0V/2.SO-+?VA9A2QOn4CU'')3Bdm70f<K"4s2sB2.U2\+?X*g2e5)]4>A^(Aj.>"0f<Mt4s2ss1,rc-%6Q@&AMZLm4>A^)1d3$E@PTr!4q0V/2.\X/+?VA9AMu^p4CU''+2*MI30f<N%4s2sB2.^2[+?X*g3Fk;_4>A^)A3M+u0f<NR4s2ss11<.+%6Q@&AS++K4>A^*0KpUA@PVA''4q0V/2.eR,+?VA9AhlOm4CU''T0g6%/0f<Q!4s2sB2.ej4+?X*g@Pp=Y4>A^*@Qkns0f<QT4s2ss11N(''%6Q@''0JPa64>A`J1-QgC@PVG%4q0V/2D?pN+?VA:0Jks94CU''UA3LGb0fC^C4s2sB2D@''R+?X*gA2QO[4>A`JA3M+u0fC^s4s2ss11`I0%6Q@''0ebd64>A`K0g6^B@P]\n4q0V/2DHsN+?VA:0f)!94CU*#2*MI30fCaC4s2sB2DJW(+?X*h0KD<+4>A`K@m2"t0fCas4s2ss1GLgP%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaV2DJc,+?VA:0kNTl4CU*$@6P,_0fCd@4s2sB2DR!N+?X*h0kENX4>A`L1-QgC0fCdD4s2ss1GU[K%6Q@''1,V6<4>A`L2Ei6G@P]bs4q0V/2DR3T+?VA:11<?h4CU*%3''Id60fCdt4s2sB2D[*P+?X*h1GV-''4>A`M1HlpD0fCgF4s2ss1G_$T%6Q@''1H%E>4>A`N2*N-F@P]fN4q0V/2Dd<U+?VA:1h&Wk4CU*''ANgPc0fCk#4s2sB2Dm6R+?X*h2D@<(4>A`O1d3$E0fCmH4s2ss1H.''Q%6Q@''2)[W@4>A`O2a/?H@P]r#4q0V/2DmHX+?VA:2.\ro4CU**3Bdm70fCpD4s2sB2E!<S+?X*h3&a#14>A`P2*N-F0fCpJ4s2ss1H@0R%6Q@''2E*fB4>A`P3BeQJ@P^#%4q0V/2E"u-+?VA:2Ieon4CU*,3Bdm70fCq$4s2sB2E*EU+?X*h@5:"U4>A`Q1d3$E0fCsJ4s2ss1LX]U%6Q@''2`<iB4>A`Q3''JHI@P_G''4q0V/2E*W[+?VA:2eG5r4CU*U0g6%/0fD!H4s2sB2E3WZ+?X*h@V%_44>A`R3''JHI0fD!O4s2ss1LiF/%6Q@''3+>&o4>A`R@m2"t@P_OL4q0V/2E5;4+?VA:3A<W>4CU*X1-Q.00fD$H4s2sB2E<QW+?X*hAMlX\4>A`S1d3$E0fD%#4s2ss1M&R1%6Q@''3Fb5q4>Aa&0g6^B@P_US4q0V/2IS@)+?VA:@5L.j4CU*YA3LGb0fEGt4s2sB2ISL-+?X*i0JPa#4>Aa&2a/?H0fEHN4s2ss1b^dN%6Q@''@:h\G4>Aa''2*N-F@Pfeo4q0V/2I\R.+?VA:@Q-In4CU-%@6P,_0fEK#4s2sB2I\[1+?X*i0k<HW4>Aa''@6Per0fEKN4s2ss1bpdL%6Q@''@UqYF4>Aa''Aj.>"@Pfht4q0V/2IeI*+?VA:@l?Ln4CU-&ANgPc0fEN#4s2sB2Ie^1+?X*i1H%E+4>Aa(3BeQJ0fENM4s2ss1c%-U%6Q@''@q%VE4>Aa)0g6^B@PflO4q0V/2InX.+?VA:A2laq4CU-(@6P,_0fEQ&4s2sB2Ip5[+?X*i2)7?)4>Aa)@Qkns0fEQP4s2ss1c7-S%6Q@''A7RkH4>Aa*0KpUA@PfrP4q0V/2J"[.+?VA:AMu^p4CU-*2EhR40fET&4s2sB2J"m4+?X*i2J#&]4>Aa*@6Per0fETP4s2ss1cI-Q%6Q@''ARdnH4>Aa+1-QgC@Pg#$4q0V/2J+d0+?VA:AiW$t4CU-,1-Q.00fEWP4s2sB2J-D^+?X*i3+4u[4>Aa+@m2"t0fEWS4s2ss1cT#0%6Q@''An=.K4>Aa+Aj.>"@Pg)"4q0V/2_ZpL+?VA;0Jks94CU--1Hl710fLdE4s2sB2_\])+?X*i3FtA`4>AcK@m2"t0fLds4s2ss1gr:+%6Q@(0P*Ej4>AcKAj.>"@PhLR4q0V/2_d!M+?VA;0fD3<4CU-UA3LGb0fLgH4s2sB2_ei,+?X*i@UVG04>AcLANh5!0fLh!4s2ss1h/:)%6Q@(1,(m74>AcM1-QgC@PhRP4q0V/2_m0Q+?VA;1-%N@4CU-W3Bdm70fLjt4s2sB2`!0P+?X*iA2ZU\4>AcN1-QgC0fLmE4s2ss1h:/]%6Q@(1Gh9<4>AcN2*N-F@PhXN4q0V/2`!?U+?VA;1H7Q@4CU-Y3Bdm70fLmt4s2sB2`*3P+?X*iAhlOZ4>AcO0g6^B0fLpE4s2ss1hL/[%6Q@(1c%<<4>AcO1d3$E@Ph\-4q0V/2`*BU+?VA;1h&Wk4CU0%0g6%/0fLq#4s2sB2`3BT+?X*j0P*EW4>AcP1d3$E0fLsI4s2ss2).!Q%6Q@(2)[W@4>AcP2a/?H@Pol#4q0V/2`3QY+?VA;2.\ro4CU0&A3LGb0fM!G4s2sB2`<HU+?X*j1Gq?*4>AcQ1d3$E0fM!K4s2ss2)A`+%6Q@(2E3lC4>AcQ@m2"t@Pou#4q0V/2`>52+?VA;2J,,q4CU0*0g6%/0fM$F4s2sB2`EWY+?X*j2)RQ,4>AcR3''JHI0fM%$4s2ss2)[3R%6Q@(2e5)p4>AcRANh5!@Pp&P4q0V/2`G>4+?VA;3&*T>4CU0+A3LGb0fM''I4s2sB2`P>3+?X*j2_dK*4>AcSANh5!0fM*K4s2ss2)f)1%6Q@(3A`oB4>AcT2Ei6G@Pp,&4q0V/2`Wf\+?VA;@50qg4CU0-3Bdm70fNMr4s2sB2dnR-+?X*j3Aiu04>Ad''2Ei6G0fNNM4s2ss2*#)/%6Q@(@:MJD4>Ad''A3M+u@PqRL4q0V/2dp8]+?VA;@:h\G4CU0V2*MI30fNPr4s2sB2e"R,+?X*j@:MJ14>Ad(2*N-F0fNQ%4s2ss2.AI-%6Q@(@UVGC4>Ad(@Qkns@PqV+4q0V/2e$8\+?VA;@UqYF4CU0X0g6%/0fNQQ4s2sB2e+[.+?X*j@l6FZ4>Ad)2Ei6G0fNTO4s2ss2.SI+%6Q@(@q.\F4>Ad)A3M+u@Pq\)4q0V/2e-D_+?VA;@qInI4CU0YA3LGb0fNVs4s2sB2e4j2+?X*jAM?:W4>Ad*3BeQJ0fNWS4s2ss2.^>_%6Q@(A7e"J4>Ad+0g6^B@PqaT4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN70fNZ!4s2sB2e?M`+?X*jAiW$a4>Ad+ANh5!0fN\u4s2ss2D@$Q%6Q@(AhcIl4>Ad,2Ei6G@Q#oK4q0V/2eG$5+?VA;AiW$t4CU3''2*MI30fN]Q4s2sB2eHSa+?X*k0k*<U4>AfL0KpUA0fUjE4s2ss2DR0S%6Q@)0K)*;4>AfL2a/?H@Q#uQ4q0V/3&!<U+?VA<0O[-f4CU3)0g6%/0fUjr4s2sB3&*<T+?X*k1Gq?*4>AfM2a/?H0fUms4s2ss2Dd0Q%6Q@)0k3Bi4>AfMA3M+u@Q$&O4q0V/3&+u.+?VA<0kNTl4CU3*A3LGb0fUpB4s2sB3&3BU+?X*k2).9(4>AfN3''JHI0fUq"4s2ss2Do#/%6Q@)11i]m4>AfO0KpUA@Q$,&4q0V/3&<9Q+?VA<1GV-:4CU3,3Bdm70fUsF4s2sB3&<QY+?X*k2Inu\4>AfO@Qkns0fV!D4s2ss2E,&.%6Q@)1bh0:4>AfQ@6Per@Q$2$4q0V/3&P//+?VA<2.Jfm4CU3/ANgPc0fV%$4s2sB3&P82+?X*k@50qT4>AfR0KpUA0fV''H4s2ss2ISR/%6Q@)2DmZ@4>AfR2a/?H@Q%[N4q0V/3&W`[+?VA<2E<rD4CU3X2EhR40fV("4s2sB3&Y81+?X*k@Q?U]4>AfRA3M+u0fV(&4s2ss2I^2\%6Q@)2J,,q4>AfS3BeQJ@Q%^M4q0V/3&b80+?VA<3&!N=4CU3YA3LGb0fV-I4s2sB3&i]X+?X*kA2QO[4>AfT1d3$E0fV-M4s2ss2Ing3%6Q@)3&WrC4>AfT@m2"t@Q%b-4q0V/3&kG4+?VA<3+Y8r4CU3[2EhR40fV.)4s2sB3&rfZ+?X*kARRb34>AfU2*N-F0fV0P4s2ss2J+[-%6Q@)3B02F4>AfU3BeQJ@Q%gU4q0V/3&tD2+?VA<@5''kf4CU3\3Bdm70fWSs4s2sB3+4a0+?X*l0K)*(4>Ag(3''JHI0fWTP4s2ss2_\f,%6Q@)@:_VF4>Ag)1d3$E@Q-#!4q0V/3+=a/+?VA<@Q6Oo4CU6(A3LGb0fWW&4s2sB3+?G_+?X*l1,;$&4>Ag)Aj.>"0fWYs4s2ss2_nf*%6Q@)@kg.i4>Ag*1-QgC@Q-&Q4q0V/3+Fd/+?VA<@l?Ln4CU6*1d2@20fWZ''4s2sB3+HG^+?X*l1M/f[4>Ag*A3M+u0fWZS4s2ss2`*EV%6Q@)@qInI4>Ag+0g6^B@Q-,(4q0V/3+Od.+?VA<A2laq4CU6+A3LGb0fW](4s2sB3+QJ^+?X*l2)[W-4>Ag+@m2"t0fW`!4s2ss2`5#-%6Q@)AMQFl4>Ag,1HlpD@Q-2#4q0V/3+Xp1+?VA<AMlXo4CU6-2*MI30fW`&4s2sB3+ZS`+?X*l2E<r14>Ag,Aj.>"0fWc$4s2ss2`EWY%6Q@)Ai)[o4>Ag-2*N-F@Q-5W4q0V/3+b''4+?VA<AiDmr4CU6/0g6%/0fWc)4s2sB3+cS_+?X*l3&Nl/4>Ag-@Qkns0fWcU4s2ss2`Nf]%6Q@*0JPa64>AiM1-QgC@Q-;X4q0V/3A<6Q+?VA=0KD<>4CU6X0g6%/0f^ps4s2sB3A=r,+?X*l@:_V34>AiMANh5!0f^q"4s2ss2e"[/%6Q@*0ebd64>AiN0g6^B@Q.aV4q0V/3AE9Q+?VA=0fV?>4CU6YA3LGb0f^st4s2sB3AN9P+?X*l@pqP14>AiO0g6^B0f_!F4s2ss2e4X,%6Q@*1,M0;4>AiP0g6^B@Q.gT4q0V/3AWES+?VA=1H@WA4CU6\1d2@20f_$u4s2sB3AY,.+?X*lAS"%74>AiPA3M+u0f_''H4s2ss2eFp2%6Q@*1c@N?4>AiQ2a/?H@Q6&M4q0V/3A`]Z+?VA=1c[`B4CU9(A3LGb0f_(!4s2sB3AiKS+?X*m0ekj$4>AiR1-QgC0f_*J4s2ss3&+u.%6Q@*2)RQ?4>AiR2Ei6G@Q6,$4q0V/3Ai`Z+?VA=2)mcB4CU9*3Bdm70f_*O4s2sB3Ak80+?X*m11WQX4>AiR@m2"t0f_+&4s2ss3&<9Q%6Q@*2D@<;4>AiS0g6^B@Q6/P4q0V/3Ar]X+?VA=2DmZ@4CU9,1-Q.00f_-M4s2sB3Arf[+?X*m1c7H+4>AiS3''JHI0f_.''4s2ss3&EWZ%6Q@*2_dK=4>AiT2Ei6G@Q65''4q0V/3B&l\+?VA=2`NuD4CU9-ANgPc0f_0Q4s2sB3B(A1+?X*m2DIB)4>AiT@Qkns0f_1''4s2ss3&WWX%6Q@*2e>/q4>AiTAj.>"@Q68+4q0V/3B/cX+?VA=3&<`@4CU9/1-Q.00f_3N4s2sB3B/o\+?X*m2dnlZ4>AiU2a/?H0f_3R4s2ss3&bA3%6Q@*3+4un4>AiV0KpUA@Q6>%4q0V/3B8iY+?VA=3B'',E4CU90ANgPc0f_6R4s2sB3B:M3+?X*m3Aiu04>AiV@Qkns0f_7(4s2ss3&ru_%6Q@*3Fk;r4>Aj)2Ei6G@Q6AY4q0V/3FOj1+?VA=@:VPE4CU9Y3Bdm70f`ZR4s2sB3FQM`+?X*m@PU+V4>Aj*0g6^B0f`]%4s2ss3+=m3%6Q@*@Q?Up4>Aj*ANh5!@Q7jU4q0V/3FZSa+?VA=@k^(h4CU9[ANgQ7DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>Aj+0g6^B0f``!4s2ss3+Oa-%6Q@*@l$:k4>Aj+3BeQJ@Q7mU4q0V/3FcP_+?VA=A2-7j4CU9]1-Q.00f`c"4s2sB3Fjp0+?X*mARRb34>Aj,1d3$E0f`c%4s2ss3+ZVa%6Q@*A2ZUo4>Aj,2a/?H@Q7sS4q0V/3Fk*5+?VA=A7@_F4CU9^1d2@20f`cU4s2sB3Fl_c+?X*mAn=.84>Aj-1-QgC0f`f$4s2ss3A<?T%6Q@*AMcRn4>Aj-2*N-F@Q?,&4q0V/3Ft*4+?VA=ARdnH4CU<)A3LGb0f`fV4s2sB3G(''2+?X*n0k!6T4>Aj.1d3$E0f`i''4s2ss3AN?R%6Q@*Ai;gq4>Aj.3''JHI@Q?2$4q0V/3G(98+?VA=AnF4L4CU<+3Bdm70juaj4s2sB@5''T''+?X*n1H%E+4>C7u2a/?H0juaq4s2ss3AY51%6Q@R0KD<>4>C7u@6Per@Q?8"4q0V/@5).S+?VAe0ekj74CU<-2*MI30judm4s2sB@50`*+?X*n2)7?)4>C8!3BeQJ0jueF4s2ss3Ak5/%6Q@R0k*<h4>C8!@m2"t@Q?;V4q0V/@52:V+?VAe1,D*:4CU</0g6%/0jugq4s2sB@5;:U+?X*n2J#&]4>C8"@m2"t0juhJ4s2ss3B&i[%6Q@R11`Wl4>C8"Aj.>"@Q?A-4q0V/@5BT$+?VAe1GM''94CU<0ANgPc0jujn4s2sB@5B`(+?X*n3&*T+4>C8#3''JHI0juju4s2ss3B8iY%6Q@R1LWHi4>C8#@m2"t@Q?G+4q0V/@5DFX+?VAe1bh0:4CU<23Bdm70jumr4s2sB@5MCV+?X*n@5^:Y4>C8$@Qkns0junK4s2ss3FQJ_%6Q@R1h8cm4>C8$ANh5!@Q@mP4q0V/@5MR[+?VAe2)RQ?4CU<[2*MI30jupt4s2sB@5Tu-+?X*n@kp4W4>C8%A3M+u0juqO4s2ss3Fk!2%6Q@R2DRH=4>C8&1HlpD@QA![4q0V/@5]r++?VAe2E<rD4CU<^ANgPc0jutN4s2sB@5_[\+?X+A0JYg$4>C8&Aj.>"0k!!q4s2ss@5''Q&%6Q@R2_mQ>4>C8''3''JHI@UUrN4q0V/@5hXZ+?VAe2e,#o4CV_R2EhR40k!"O4s2sB@5hd^+?X+A0f_E,4>C8(0KpUA0k!(N4s2ss@52:V%6Q@R3Fb5q4>C8)A3M+u@UV''''4q0V/@6%m_+?VAe@5:"h4CV_U1Hl710k"KI4s2sB@:;&X+?X+A2)%3''4>C8Q2a/?H0k"KM4s2ss@5Tr,%6Q@R@6$Lo4>C8Q@6Per@UV,S4q0V/@:<V/+?VAe@:VPE4CV_VA3LGb0k"L%4s2sB@:CoS+?X+A2DIB)4>C8R1HlpD0k"NJ4s2ss@5_[\%6Q@R@Pp=l4>C8R2Ei6G@UV2N4q0V/@:D/Z+?VAe@Q6Oo4CV_X2*MI30k"O"4s2sB@:Ee3+?X+A2e"r[4>C8S1-QgC0k"QJ4s2ss@5q[Z%6Q@R@l-@l4>C8S2*N-F@UV6-4q0V/@:M2Z+?VAe@lHRo4CV_Z0g6%/0k"QO4s2sB@:Nk4+?X+A3Aiu04>C8T2*N-F0k"TN4s2ss@:<\1%6Q@RA2laq4>C8T@6Per@UW_''4q0V/@:Wq5+?VAeAM?:j4CV`/0Koq.0k"WJ4s2sB@:_2X+?X+A@l?L[4>C8U1HlpD0k"WM4s2ss@:M;]%6Q@RAMlXo4>C8U@Qkns@UWbW4q0V/@:`t5+?VAeAhlOm4CV`0@6P,_0k"ZM4s2sB@:hA\+?X+AAMH@X4>C8V2Ei6G0k"ZR4s2ss@:_;[%6Q@RAiW$t4>C8VAj.>"@UWh.4q0V/@PBN#+?VAf0JYg74CV`21-Q.00k)gm4s2sB@PBf++?X+AAi2a]4>C;!@6Per0k)hG4s2ss@:j(7%6Q@S0Om9h4>C;!A3M+u@U_#G4q0V/@PD@W+?VAf0f2'':4CVbR2*MI30k)jr4s2sB@PM@V+?X+B0etp%4>C;"A3M+u0k)kK4s2ss@PM:T%6Q@S0kNTl4>C;#0KpUA@U_''&4q0V/@PTZ%+?VAf1,hB>4CVbT0g6%/0k)nH4s2sB@PVOZ+?X+B11`WY4>C;$1HlpD0k)pr4s2ss@Pff''%6Q@S1L`Nj4>C;$@m2"t@U_2M4q0V/@P_OY+?VAf1M&`m4CVbW2*MI30k)qN4s2sB@Pfr++?X+B2*!i04>C;%2a/?H0k)tL4s2ss@Q$,.%6Q@S1h8cm4>C;%ANh5!@U_6,4q0V/@Ph[\+?VAf2).9;4CVbY0g6%/0k*!q4s2sB@Pp,/+?X+B2`3c.4>C;&@6Per0k*"P4s2ss@Q6,,%6Q@S2DIB<4>C;''1HlpD@U_<-4q0V/@Q$&,+?VAf2IScl4CVb[0g6%/0k*%N4s2sB@Q-#*+?X+B3FtA`4>C;(1-QgC0k*''t4s2ss@UV/Y%6Q@S2`*]@4>C;(2*N-F@U`b+4q0V/@Q-2/+?VAf2e,#o4CVc.A3LGb0k*(R4s2sB@Q62.+?X+B@UVG04>C;)2Ei6G0k*+$4s2ss@Uh8Z%6Q@S3&j)E4>C;)3BeQJ@U`hU4q0V/@Q7d[+?VAf3+>&o4CVc0A3LGb0k*+R4s2sB@Q?,++?X+BA2ZU\ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6Q@S3AE]?4>C;*1-QgC@U`kV4q0V/@Q?5.+?VAf3A`oB4CVc1ANgPc0k*.#4s2sB@Q?A2+?X+BAMH@X4>C;*3''JHI0k*.S4s2ss@V%D\%6Q@S@50qg4>C;R2*N-F@U`q*4q0V/@UV/Y+?VAf@5g@m4CVc3@6P,_0k+QN4s2sB@UV8\+?X+BAn4(74>C;R@Qkns0k+R%4s2ss@k]c(%6Q@S@:h\G4>C;S0KpUA@Uh,J4q0V/@U_&U+?VAf@PU+i4CVeT3Bdm70k+TJ4s2sB@U_/X+?X+C1,1s%4>C;S3BeQJ0k+U#4s2ss@l#u+%6Q@S@U_MD4>C;T0g6^B@Uh2S4q0V/@Uh2X+?VAf@l-@l4CVeW2a.[50k+WM4s2sB@Uh;[+?X+C1grQW4>C;T2a/?H0k+WP4s2ss@l.a\%6Q@S@lZ^q4>C;T@Qkns@Uh8M4q0V/@Uin3+?VAfA26=k4CVeX2*MI30k+ZN4s2sB@UqJ_+?X+C2DRH*4>C;U@6Per0k+]J4s2ss@l?>2%6Q@SAMH@k4>C;V2Ei6G@Uh>O4q0V/@V%J^+?VAfAR[hG4CVeZ3''Id60k+^(4s2sB@V.>Y+?X+C2e>/^4>C;W1HlpD0k+`O4s2ss@lQJ4%6Q@SAi;gq4>C;W3''JHI@UhDQ4q0V/@V0.7+?VAfAn=.K4CVf/2*MI30k2mk4s2sB@k]c(+?X+C@:;>/4>C>"2a/?H0k2ms4s2ss@q%>[%6Q@T0KD<>4>C>"@6Per@UikU4q0V/@k_@U+?VAg0Om9h4CVf0ANgPc0k2nJ4s2sB@k_IX+?X+C@kg.V4>C>"Aj.>"0k2pm4s2ss@q.A[%6Q@T0etp84>C>#1d3$E@Uin.4q0V/@kfl*+?VAg0fM9=4CVf22EhR40k2pt4s2sB@kfu-+?X+CA77Y24>C>#@6Per0k2qJ4s2ss@q9+6%6Q@T0k<Hj4>C>$1HlpD@Uit(4q0V/@kor++?VAg11EEi4CVf3ANgPc0k2tK4s2sB@kqRY+?X+CAiW$a4>C>$ANh5!0k3!o4s2ssA2#]$%6Q@T1H%E>4>C>%2a/?H@Uq2K4q0V/@l$).+?VAg1H@WA4CVhU2*MI30k3"J4s2sB@l,l''+?X+D0f_E,4>C>&1-QgC0k3%!4s2ssA26&,%6Q@T1cRZA4>C>&@6Per@Uq6)4q0V/@l.XY+?VAg1h/]l4CVhW0g6%/0k3%N4s2sB@l62/+?X+D1Gq?*4>C>''3''JHI0k3(P4s2ssA2H#)%6Q@T2D@<;4>C>(0g6^B@Uq<+4q0V/@l?)++?VAg2E3lC4CVhY0g6%/0k3+M4s2sB@l@p_+?X+D2.\r\4>C>)0KpUA0k3-s4s2ssA2Z>0%6Q@T2_mQ>4>C>)1d3$E@UqAW4q0V/@lH8/+?VAg2e"rn4CVhZA3LGb0k3.R4s2sB@lQ8.+?X+D2dnlZ4>C>*2*N-F0k31$4s2ssA2lG1%6Q@T3&a#D4>C>*3''JHI@UqH.4q0V/@lRp]+?VAg3+G,p4CVh]ANgPc0k31R4s2sB@lS$`+?X+D@50qT4>C>*Aj.>"0k34$4s2ssA77>Z%6Q@T3B'',E4>C>+3''JHI@Urq''4q0V/@lZP5+?VAg3FY/p4CVi12*MI30k34R4s2sB@l\''`+?X+D@UVG04>C>+ANh5!0k34U4s2ssA7B(5%6Q@T@5''kf4>C>S2*N-F@Urt(4q0V/@pq;[+?VAg@:MJD4CVi2ANgPc0k4X&4s2sB@prq4+?X+DA2ZU\4>C>SAj.>"0k4ZH4s2ssA7R\a%6Q@T@PL%h4>C>T2a/?H@Us"[4q0V/@q&k1+?VAg@V.eH4CVi4@6P,_0k4]I4s2sB@q.5W+?X+DAhlOZ4>C>U1-QgC0k4]L4s2ssA7d\_%6Q@T@l-@l4>C>U@6Per@Us(24q0V/@q0%5+?VAgA26=k4CVkU2EhR40k4`M4s2sB@q7D[+?X+E0P*EW4>C>V2*N-F0k4`P4s2ssAMGo''%6Q@TA2laq4>C>V3BeQJ@V%8S4q0V/@q918+?VAgAM?:j4CVkW@6P,_0k4cL4s2sB@q@G[+?X+E11WQX4>C>W1d3$E0k4d''4s2ssAMZ&)%6Q@TARmtI4>C>X1-QgC@V%?,4q0V/@qIM\+?VAgAi)[o4CVkY2EhR40k4fQ4s2sB@qIV_+?X+E1c[`/4>C>X3''JHI0k4g*4s2ssAMe!_%6Q@U0JG[54>CA#0g6^B@V%GT4q0V/A2#c&+?VAh0K)*;4CVk[@Qk5`0k;st4s2sBA2$#-+?X+E2`Eo04>CA#@m2"t0k;tK4s2ssAN2D.%6Q@U0P*Ej4>CA$1d3$E@V%MV4q0V/A2,u++?VAh0k*<h4CVk^1-Q.00k<"K4s2sBA2.UY+?X+E3FP)\4>CA$ANh5!0k<%!4s2ssAN=9b%6Q@U1-%N@4>CA&1HlpD@V&t.4q0V/A2?&++?VAh1H%E>4CVl22*MI30k<(!4s2sBA2Ig\+?X+E@Q?U]4>CA''ANh5!0k<+Q4s2ssARmP[%6Q@U2)%3:4>CA(0g6^B@V''(-4q0V/A2Q,++?VAh2)d]A4CVl4@6P,_0k<.%4s2sBA2Rm]+?X+EAN)d^4>CA(ANh5!0k<.R4s2ssAS#F:%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaVA2Z,*+?VAh2DIB<4CVl60g6%/0k<0t4s2sBA2ZD2+?X+EAi2a]4>CA)@Qkns0k<3s4s2ssAhYu(%6Q@U2_dK=4>CA*1-QgC@V.<&4q0V/A2c;.+?VAh2`*]@4CVnVA3LGb0k<4#4s2sBA2ds]+?X+F0ekj$4>CA*Aj.>"0k<6t4s2ssAhl,*%6Q@U3&*T>4>CA,1-QgC@V.AQ4q0V/A2uG0+?VAh3B02F4CVnY@6P,_0k<:)4s2sBA3"''^+?X+F1bq6(4>CA,@Qkns0k<:S4s2ssAi)A/%6Q@U3Fk;r4>CAT1HlpD@V.GW4q0V/A77A[+?VAh@5pFn4CVn[2EhR40k=^$4s2sBA78t3+?X+F2.Sl[4>CATA3M+u0k=^(4s2ssAi;A-%6Q@U@:h\G4>CAV1-QgC@V.MT4q0V/A7IDZ+?VAh@lQXp4CVn]3Bdm70k=cS4s2sBA7T16+?X+F3&!N*4>CAWA3M+u0k=j)4s2ssAiV_4%6Q@UARdnH4>CAY0g6^B@V0%,4q0V/A7dS\+?VAhAi)[o4CVo2A3LGb0k=lR4s2sBA7fF;+?X+F@PU+V4>CD$0KpUA0kE$o4s2ssAn#:7%6Q@V0Jbm84>CD$2*N-F@V0+*4q0V/AM?#++?VAi0Od3g4CVo42EhR40kE%K4s2sBAM@XY+?X+F@q@h54>CD$ANh5!0kE%N4s2ssAn3V[%6Q@V0ebd64>CD%2*N-F@V0./4q0V/AMH/.+?VAi0k!6g4CVo61-Q.00kE(K4s2sBAMI[Y+?X+FAMu^]4>CD%A3M+u0kE*q4s2ssAn<td%6Q@V1,D*:4>CD''2Ei6G@V04+4q0V/AMZ8/+?VAi2).9;4C^''!2*MI30kE3t4s2sBAN"!]+?X-f1,;$&4>CD*@m2"t0kE9u4s2st0Jd6''%6Q@V2_mQ>4>CD+A3M+u@k]_s4q0V/AN+0a+?VAi3&<`@4C^''&1-Q.00kE=$4s2sBAN2P2+?X-f2.8ZX4>CD,2Ei6G0kE=''4s2st0K!B)%6Q@V3&j)E4>CD,ANh5!@k]eq4q0V/AN;J/+?VAi3As&D4C^''''ANgPc0kE@(4s2sBAR[AX+?X-f2`3c.4>CDV1-QgC0kFfM4s2st0KCmP%6Q@V@Pg7k4>CDV2*N-F@k]o#4q0V/AR[P]+?VAi@UhSE4C^''*3Bdm70kFg*4s2sBARdDX+?X-f@5pF[4>CDW0g6^B0kFiM4s2st0Ocb#%6Q@V@l?Ln4>CDW2a/?H@k_D''4q0V/ARd\`+?VAi@q@hH4C^''U0g6%/0kFlL4s2sBARmV]+?X-fA7[q64>CDX2*N-F0kFlR4s2st0P*.+%6Q@VA2c[p4>CDX3''JHI@k_IS4q0V/ARmeb+?VAiA7e"J4C^''VA3LGb0kFoO4s2sBAS!Y]+?X-fAn+"64>CDY1d3$E0kFoR4s2st0eb@H%6Q@VAMu^p4>CDY3''JHI@kfYp4q0V/AS!kc+?VAiAS++K4C^*"3Bdm70kFrN4s2sBAS*_^+?X-g0ekj$4>CDZ1d3$E0kFrW4s2st0ekRM%6Q@VAmmkG4>CDZ@Qkns@kf_n4q0V/AhZ#)+?VAj0Jks94C^*%@6P,_0kN*s4s2sBAhZ,,+?X-g1LrZY4>CG%2a/?H0kN+M4s2st0f1UK%6Q@W0P3Kk4>CG&0KpUA@kffP4q0V/Ahc)*+?VAj0f2'':4C^*''3Bdm70kN-t4s2sBAhc2-+?X-g2.Sl[4>CG&2a/?H0kN.#4s2st0fCaM%6Q@W0k*<h4>CG''0KpUA@kflM4q0V/Ahl,*+?VAj1,M0;4C^*)2*MI30kN0u4s2sBAhmgZ+?X-g2`X&24>CG''A3M+u0kN3s4s2st0fV''T%6Q@W1Gh9<4>CG(2*N-F@kftu4q0V/Ahu>/+?VAj1H7Q@4C^*+3Bdm70kN4Q4s2sBAi"$_+?X-g@:;>/4>CG)0KpUA0kN6t4s2st0k"TV%6Q@W1c%<<4>CG)3BeQJ@khFI4q0V/Ai*s\+?VAj2)%3:4C^*TANgPc0kN9t4s2sBAi2>-+?X-g@l?L[4>CG*1HlpD0kN:"4s2st0k34-%6Q@W2)RQ?4>CG*@Qkns@khJ(4q0V/Ai4*_+?VAj2DRH=4C^*V@6P,_0kN="4s2sBAi;J0+?X-gAMQFY4>CG+2*N-F0kN=%4s2st0kE4+%6Q@W2E*fB4>CG+A3M+u@khOT4q0V/Ai=6b+?VAj2`*]@4C^*X2EhR40kN@%4s2sBAiDV3+?X-gAn=.84>CG,2a/?H0kN@(4s2st1,(FH%6Q@W2`X&E4>CG,Aj.>"@ko_q4q0V/AiMP0+?VAj3&NlB4C^-$1-Q.00kNC(4s2sBAiMb6+?X-h0k!6T4>CG-3BeQJ0kNCR4s2st1,3<''%6Q@W3+>&o4>CG-@m2"t@koep4q0V/AiO<b+?VAj3+Y8r4C^-%2*MI30kNF$4s2sBAiVY2+?X-h1H%E+4>CG.1d3$E0kNF''4s2st1,CpS%6Q@W3As&D4>CG.@m2"t@koiN4q0V/AiXEd+?VAj@5C(i4C^-''@6P,_0kOiN4s2sBAmmP\+?X-h2)7?)4>CGV2Ei6G0kOiQ4s2st1,UpQ%6Q@W@5pFn4>CGVANh5!@koo%4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN70kOlK4s2sBAn!V]+?X-h2E!`.4>CGW2Ei6G0kOlR4s2st1,`]-%6Q@W@Q6Oo4>CGW3BeQJ@kott4q0V/An#14+?VAj@k^(h4C^-*2*MI30kOoO4s2sBAn*__+?X-h3&3Z,4>CGX3''JHI0kOoU4s2st1,r]+%6Q@W@pqPD4>CGX@Qkns@kp#S4q0V/An,=7+?VAjA26=k4C^-,0g6%/0kOrR4s2sBAn5=6+?X-h3FtA`4>CGY@Qkns0kOs+4s2st11<()%6Q@WA7RkH4>CGYANh5!@kqIQ4q0V/An<_]+?VAjAMZLm4C^-U@m1>a0kOuS4s2sBAn<ka+?X-h@kp4W4>CGZ2a/?H0kOuW4s2st11N1*%6Q@WARRbF4>CG[0KpUA@kqOS4q0V/AnEh_+?VAjAiMss4C^-W2EhR40kP$-4s2sBAnGR;+?X-hAN;p`4>JTE1HlpD1,(C=4s2st11k&\%6QC"0Ju$:4>JTE3BeQJ@l#ep4q0V00JHs"+?VD50Om9h4C^0$Aj-Yd1,(Cn4s2sC0JI*&+?X-i0fD3)4>JTF0KpUA1,(F;4s2st1GLmR%6QC"0etp84>JTF3''JHI@l#iM4q0V00JR!"+?VD50kENk4C^0&@6P,_1,(Fp4s2sC0JY=G+?X-i1GV-''4>JTG0g6^B1,(I=4s2st1G^mP%6QC"1,D*:4>JTG3BeQJ@l#o$4q0V00J[-%+?VD51GM''94C^0(2EhR41,(L>4s2sC0JbOL+?X-i1h8cZ4>JTH2*N-F1,(LC4s2st1GpmN%6QC"1H7Q@4>JTHANh5!@l#u"4q0V00Jd<)+?VD51bq6;4C^0)A3LGb1,(O@4s2sC0JkaQ+?X-i2DRH*4>JTI@6Per1,(Oo4s2st1H&c-%6QC"1h8cm4>JTJ0g6^B@l$&"4q0V00JtXM+?VD52)[W@4C^0+ANgPc1,(RF4s2sC0JtjS+?X-i3&Wr04>JTJ@6Per1,(Rp4s2st1H7BY%6QC"2.Jfm4>JTK1-QgC@l$)T4q0V00K(aO+?VD52E!`A4C^0-@6P,_1,(UF4s2sC0K(mS+?X-i3FtA`4>JTK3BeQJ1,(Up4s2st1LW%&%6QC"2I\im4>JTK@m2"t@l%ON4q0V00K*H*+?VD52`!W?4C^0U3Bdm71,(XE4s2sC0K3E(+?X-i@Q$CZ4>JTL@Qkns1,(Xs4s2st1LaoZ%6QC"2e5)p4>JTM2a/?H@l%UL4q0V00K;''V+?VD53+Y8r4C^0X1-Q.01,(^B4s2sC0KCjO+?X-iA7Rk54>JTN1HlpD1,(^I4s2st1M&@+%6QC"3FP)o4>JTN@m2"t@l%\-4q0V00KEZ-+?VD53FtAs4C^0Z1-Q.01,(_#4s2sC0OZY!+?X-iAi;g^4>JU!0g6^B1,*,l4s2st1M/X2%6QC"@5C(i4>JU!3BeQJ@l%_-4q0V00O\HT+?VD5@:h\G4C^3%@m1>a1,*/k4s2sC0Ocb#+?X-j0etp%4>JU"1-QgC1,*/n4s2st1bgjO%6QC"@Pg7k4>JU"A3M+u@l,o#4q0V00OeTW+?VD5@l-@l4C^3''2*MI31,*2q4s2sC0Om")+?X-j11`WY4>JU#2a/?H1,*2t4s2st1c$jM%6QC"@lZ^q4>JU#Aj.>"@l,u!4q0V00Oun%+?VD5A2ZUo4C^3)1-Q.01,*5t4s2sC0P!.,+?X-j1grQW4>JU$3BeQJ1,*6I4s2st1c/`,%6QC"A7@_F4>JU%0g6^B@l-%t4q0V00P*()+?VD5AN;ps4C^3*ANgPc1,*9J4s2sC0P+]W+?X-j2E!`.4>JU%@m2"t1,*9M4s2st1c@?X%6QC"AS"%J4>JU&1d3$E@l-)S4q0V00P37-+?VD5AmmkG4C^3,@6P,_1,*<M4s2sC0P4iZ+?X-j3&3Z,4>JU&ANh5!1,*<P4s2st1cR?V%6QC#0JG[54>JWF2Ei6G@l-/*4q0V00ebRN+?VD60P!?i4C^3.2EhR41,1Io4s2sC0ed3''+?X-j3FtA`4>JWG0KpUA1,1L<4s2st1gr+&%6QC#0etp84>JWG3''JHI@l.UO4q0V00em*#+?VD60kNTl4C^3W1-Q.01,1O<4s2sC0etII+?X-j@UVG04>JWH1-QgC1,1O?4s2st1h''uZ%6QC#1,M0;4>JWH@6Per@l.[M4q0V00f!9''+?VD61GM''94C^3XANgPc1,1R?4s2sC0f(UL+?X-jA2ZU\4>JWI1d3$E1,1RB4s2st1h8U1%6QC#1H%E>4>JWI@m2"t@l._,4q0V00f*E*+?VD61c.B=4C^3Z@6P,_1,1UC4s2sC0f1dP+?X-jAhlOZ4>JWJ2a/?H1,1UF4s2st1hJU/%6QC#1grQj4>JWJA3M+u@l.e,4q0V00f:XK+?VD62)RQ?4C^6&2EhR41,1XE4s2sC0f:mR+?X-k0P*EW4>JWK3''JHI1,1Xp4s2st2)-gL%6QC#2.A`l4>JWL0g6^B@l5tu4q0V00fCjP+?VD62E<rD4C^6(1-Q.01,1[r4s2sC0fEN*+?X-k11WQX4>JWLA3M+u1,1^C4s2st2)@!O%6QC#2`3cA4>JWM2Ei6G@l6(t4q0V00fM$T+?VD62`NuD4C^6*2EhR]DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>JWM3BeQJ1,1^r4s2st2)R''O%6QC#2e"rn4>JWM@m2"t@l6/"4q0V00fNW,+?VD62e>/q4C^6,2*MI31,1_"4s2sC0fV$S+?X-k2E<r14>JWN2a/?H1,1aK4s2st2)dEW%6QC#3+G,p4>JWNA3M+u@l65#4q0V00fW`.+?VD63+b>s4C^6.2*MI31,1dC4s2sC0f_$R+?X-k3&j)24>JWO2a/?H1,1dK4s2st2*#)/%6QC#3B98G4>JWO@6Per@l68W4q0V00f`],+?VD6@50qg4C^6W0g6%/1,32n4s2sC0k!%*+?X-k@:_V34>JX"@6Per1,33J4s2st2.J=(%6QC#@PBtg4>JX#0g6^B@l7dP4q0V00k)n%+?VD6@P^1j4C^6Z2*MI31,35p4s2sC0k+QT+?X-kA2ug_4>JX#@m2"t1,36L4s2st2.\[0%6QC#@l$:k4>JX$2*N-F@l7jY4q0V00k3+*+?VD6@lHRo4C^9''1-Q.01,38u4s2sC0k34-+?X-l0O[-S4>JX$@6Per1,39J4s2st2DAZ*%6QC#@q.\F4>JX%1-QgC@l?%r4q0V00k<+)+?VD6A2QOn4C^9(ANgPc1,3;t4s2sC0k<7-+?X-l1,1s%4>JX&0KpUA1,3>p4s2st2Dd0Q%6QC#AMQFl4>JX&1HlpD@l?/$4q0V00kE1*+?VD6AN2jr4C^9+3Bdm71,3?L4s2sC0kFiY+?X-l2)[W-4>JX&A3M+u1,3?O4s2st2Dno,%6QC#AS++K4>JX''0KpUA@l?2U4q0V00kN.(+?VD6AhlOm4C^9-0g6%/1,3As4s2sC0kNF0+?X-l2DmZ-4>JX''@Qkns1,3BQ4s2st2E*BT%6QC$0JPa64>JZG1-QgC@l?8S4q0V01,(LJ+?VD70Jks94C^9.A3LGb1,:OA4s2sC1,*-#+?X-l3&<`-4>JZG@m2"t1,:Oq4s2st2E583%6QC$0ekj74>JZH1-QgC@l?>*4q0V01,1RK+?VD70f2'':4C^903Bdm71,:RA4s2sC1,33$+?X-l3FtA`4>JZHA3M+u1,:Rq4s2st2IU#X%6QC$0kNTl4>JZI0g6^B@l@b+4q0V01,:UK+?VD71,D*:4C^9Y1-Q.01,:UA4s2sC1,:^N+?X-l@Pp=Y4>JZI2a/?H1,:UF4s2st2I^2\%6QC$11NKj4>JZIA3M+u@l@h*4q0V01,<E)+?VD711i]m4C^9ZANgPc1,:X?4s2sC1,C^M+?X-lA2QO[4>JZJ1d3$E1,:XD4s2st2Ing3%6QC$1H7Q@4>JZJ3BeQJ@l@mR4q0V01,E?&+?VD71L`Nj4C^9\2EhR41,:Xq4s2sC1,EH)+?X-lARRb34>JZJANh5!1,:Xt4s2st2J$D_%6QC$1b_*94>JZK2Ei6G@l@pR4q0V01,LsS+?VD71grQj4C^9]ANgPc1,:[q4s2sC1,NK)+?X-m0JYg$4>JZKA3M+u1,:[t4s2st2_[-R%6QC$1hJoo4>JZL0KpUA@lH)%4q0V01,UgN+?VD72)RQ?4C^<(Aj-Yd1,:^G4s2sC1,V$T+?X-m0k!6T4>JZL3BeQJ1,:^q4s2st2_el-%6QC$2.A`l4>JZL@m2"t@lH.u4q0V01,WT++?VD72.\ro4C^<*2*MI31,:_!4s2sC1,_!R+?X-m1-%N-4>JZM3''JHI1,:aJ4s2st2`"l+%6QC$2I\im4>JZM@m2"t@lH5!4q0V01,`Z,+?VD72J#&p4C^<,3''Id61,:dC4s2sC1,gsP+?X-m2.8ZX4>JZN1HlpD1,:dF4s2st2`5,0%6QC$2`3cA4>JZN3BeQJ@lH;#4q0V01,i],+?VD73&*T>4C^<.ANgPc1,:gE4s2sC1,q''R+?X-m2`<i/4>JZO1d3$E1,:gH4s2st2`E`\%6QC$3+4un4>JZOANh5!@lHDW4q0V01-%''Q+?VD73ANc@4C^<YANgPc1,:jH4s2sC1-&c,+?X-m@Pp=Y4>JZP@m2"t1,<8l4s2st2e+X-%6QC$@50qg4>J[#1-QgC@lIn+4q0V011<"''+?VD7@:;>B4C^<\0g6%/1,<9K4s2sC11E"&+?X-mA7[q64>J[$1HlpD1,<;r4s2st2e=j1%6QC$@Q$Cm4>J[$2a/?H@lIsZ4q0V011E4,+?VD7@V%_G4C^<]A3LGb1,<>o4s2sC11N4++?X-mAmmk44>J[%3BeQJ1,<?L4s2st3&"i+%6QC$@q@hH4>J[%Aj.>"@lQ2%4q0V011W+''+?VD7A26=k4C^?*ANgPc1,<Ar4s2sC11W4*+?X-n1,1s%4>J[&2*N-F1,<BL4s2st3&3?T%6QC$A7RkH4>J[&Aj.>"@lQ8#4q0V011`1(+?VD7AMQFl4C^?,@6P,_1,<Ds4s2sC11`:++?X-n1LrZY4>J[''2*N-F1,<E"4s2st3&EHU%6QC$AN;ps4>J[''@6Per@lQ;W4q0V011arZ+?VD7ARmtI4C^?.2EhR41,<EP4s2sC11i4(+?X-n2*!i04>J[(0g6^B1,<H#4s2st3&P51%6QC$AmmkG4>J[(Aj.>"@lQAT4q0V01GCLH+?VD80JPa64C^?01-Q.01,CU>4s2sC1GCUK+?X-n2`3c.ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QC%0Ju$:4>J]H3BeQJ@lQDV4q0V01GE<&+?VD80P*Ej4C^?13''Id61,CUr4s2sC1GLRI+?X-n3+Y8_4>J]I1-QgC1,CXD4s2st3&rl\%6QC%0f_E?4>J]I@m2"t@lRmP4q0V01GNH)+?VD80kNTl4C^?Z@6P,_1,C[>4s2sC1GU[K+?X-n@:VP24>J]J1-QgC1,C[F4s2st3+=U+%6QC%1-%N@4>J]J@6Per@lRpX4q0V01GWE''+?VD81GD!84C^?[ANgPc1,C^@4s2sC1G^dM+?X-n@l?L[4>J]K1HlpD1,C^C4s2st3+Fs4%6QC%1Gq?=4>J]K@Qkns@lRt/4q0V01G`Q*+?VD81bq6;4C^?]@6P,_1,CaC4s2sC1GgpP+?X-nAMQFY4>J]L2*N-F1,CaF4s2st3+Xs2%6QC%1cIT@4>J]LA3M+u@lS$[4q0V01GpjM+?VD82)IK>4C^?_2EhR41,CdF4s2sC1Gq''S+?X-nAn=.84>J]M2a/?H1,CdI4s2st3A<0O%6QC%2.8Zk4>J]M@m2"t@lZ5''4q0V01Grc.+?VD82D[N>4C^B+1-Q.01,CgF4s2sC1H%*S+?X-o0k!6T4>J]N2Ei6G1,CgI4s2st3AG&.%6QC%2E3lC4>J]NANh5!@lZ;!4q0V01H.!O+?VD82`3cA4C^B,ANgPc1,CjI4s2sC1H.6V+?X-o1H%E+4>J]O3''JHI1,CjL4s2st3AWZZ%6QC%2dnlm4>J]P0KpUA@lZ>U4q0V01H7-R+?VD83&a#D4C^B.@6P,_1,CmL4s2sC1H7BY+?X-o2)7?)4>J]P@6Per1,Cn!4s2st3AiZX%6QC%3+G,p4>J]Q1-QgC@lZD,4q0V01H@<V+?VD83FP)o4C^B02EhR41,Cq"4s2sC1HAr/+?X-o2J#&]4>J]QA3M+u1,Cq&4s2st3B&ZV%6QC%@5''kf4>J^$2Ei6G@lZJ*4q0V01LW:-+?VD8@:_VF4C^B21-Q.01,E?N4s2sC1L`%%+?X-o3+4u[4>J^%0g6^B1,EAp4s2st3B1P5%6QC%@Pg7k4>J^%2Ei6G@lZP,4q0V01L`@.+?VD8@UqYF4C^B3Aj-Yd1,EBN4s2sC1Lar[+?X-o@5^:Y4>J^&0KpUA1,EDq4s2st3FOp3%6QC%@l$:k4>J^&3BeQJ@l[t.4q0V01LjoY+?VD8A2-7j4C^B\@6P,_1,EGr4s2sC1Lr:*+?X-o@kp4W4>J^''1d3$E1,EGu4s2st3Fap1%6QC%A2c[p4>J^''@6Per@l\%.4q0V01Lt&\+?VD8A7e"J4C^B_2*MI31,EJq4s2sC1M&=*+?X-oAN;p`4>J^(1d3$E1,EK#4s2st3G(''2%6QC%AN2jr4>J^(3BeQJ@l\.04q0V01M''uY+?VD8AR[hG4C^B`A3LGb1,EKO4s2sC1M/C++?X.B0JPa#4>J^)1d3$E1,EN&4s2st@5)7V%6QC%AmmkG4>J^)@Qkns@pq)M4q0V01M12^+?VD8AnF4L4C_eSA3LGb1,L[=4s2sC1b^aM+?X.B0kNTY4>J`I2a/?H1,L[F4s2st@5;7T%6QC&0O[-f4>J`I@Qkns@pq-(4q0V01b`E''+?VD90P*Ej4C_eU0g6%/1,L[s4s2sC1bppP+?X.B1Gq?*4>J`K2Ei6G1,LaF4s2st@5MOZ%6QC&1,qH?4>J`K3BeQJ@pq5L4q0V01brK''+?VD911EEi4C_eW2*MI31,Lar4s2sC1brT*+?X.B2*!i04>J`KAj.>"1,LdC4s2st@5]l)%6QC&1Gh9<4>J`L2*N-F@pq9(4q0V01c%$R+?VD91H.K?4C_eXA3LGb1,LdH4s2sC1c&],+?X.B2_dK*4>J`M0KpUA1,LgC4s2st@5ha]%6QC&1c%<<4>J`M1d3$E@pq>P4q0V01c.''R+?VD91c@N?4C_eZ2EhR41,LgH4s2sC1c.0U+?X.B3&s/34>J`M3BeQJ1,Lh"4s2st@5qd]%6QC&2).9;4>J`N2Ei6G@pqB+4q0V01c73U+?VD92)mcB4C_f.1-Q.01,LjK4s2sC1c8`++?X.B@5U4X4>J`N@m2"t1,LmE4s2st@:;/[%6QC&2DmZ@4>J`O@6Per@prh)4q0V01cAi-+?VD92Inuo4C_f00g6%/1,Ln$4s2sC1cI3S+?X.B@lHR\4>J`P2Ei6G1,LpL4s2st@:V2Y%6QC&2`X&E4>J`P@6Per@prnV4q0V01cJl-+?VD92e,#o4C_f1A3LGb1,Lq#4s2sC1cR9T+?X.BAMH@X4>J`Q2*N-F1,Lt!4s2st@:a"6%6QC&3+>&o4>J`Q@m2"t@prt-4q0V01cT#0+?VD93+Y8r4C_f33Bdm71,Lt&4s2sC1c[Q[+?X.BAn4(74>J`R@6Per1,NDn4s2st@PBf+%6QC&@50qg4>Ja%1-QgC@q%/J4q0V01gr1(+?VD9@5L.j4C_hT2*MI31,NDs4s2sC1gsiW+?X.C0f_E,4>Ja%ANh5!1,NGp4s2st@PTo,%6QC&@PU+i4>Ja&1HlpD@q%3)4q0V01h&@,+?VD9@UhSE4C_hV2*MI31,NHP4s2sC1h/@++?X.C1bq6(4>Ja''2Ei6G1,NK"4s2st@PhUZ%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaW1h/O0+?VD9@q7bG4C_hX1Hl711,NMq4s2sC1h8I-+?X.C2.\r\4>Ja(2Ei6G1,NN#4s2st@Q$,.%6QC&A2laq4>Ja(3BeQJ@q%>V4q0V01h:#Y+?VD9AM?:j4C_hYA3LGb1,NPt4s2sC1hAU0+?X.C2dnlZ4>Ja)3''JHI1,NQ&4s2st@Q6,,%6QC&ARRbF4>Ja)@Qkns@q%DT4q0V01hC/\+?VD9AhlOm4C_h[3Bdm71,NT"4s2sC1hJa3+?X.C3As&14>Ja*@6Per1,NTP4s2st@QA!`%6QC&An+"I4>Ja*A3M+u@q&k$4q0V01hL;_+?VD9AnF4L4C_i/2*MI31,Ua>4s2sC2)$jN+?X.C@5g@Z4>JcJ2a/?H1,Uaq4s2st@U_)V%6QC''0P!?i4>JcJANh5!@q&nU4q0V02)&W++?VD:0ekj74C_i0A3LGb1,UdA4s2sC2).''S+?X.C@kg.V4>JcK@Qkns1,Ug@4s2st@Uit5%6QC''1,1s84>JcL1-QgC@q&t,4q0V02)6sO+?VD:1,M0;4C_i23Bdm71,UgE4s2sC2)8W)+?X.CA7Rk54>JcLANh5!1,UjC4s2st@V''"4%6QC''1G_3;4>JcM1d3$E@q''%*4q0V02)@*R+?VD:1H.K?4C_i42*MI31,UjI4s2sC2)Af-+?X.CAiW$a4>JcN0g6^B1,UmG4s2st@k]i*%6QC''1c@N?4>JcN2a/?H@q.3(4q0V02)I9V+?VD:1c[`B4C_kU0g6%/1,Ums4s2sC2)R''O+?X.D0f;-(4>JcO1HlpD1,UpH4s2st@koi(%6QC''2)[W@4>JcO2a/?H@q.9&4q0V02)RBX+?VD:2.\ro4C_kW1-Q.01,UsD4s2sC2)[0Q+?X.D1b_*&4>JcP1HlpD1,UsH4s2st@l-)-%6QC''2DmZ@4>JcP2Ei6G@q.>U4q0V02)[BW+?VD:2Inuo4C_kXA3LGb1,V!E4s2sC2)d6R+?X.D2.JfZ4>JcQ1HlpD1,V!I4s2st@l?)+%6QC''2`EoC4>JcQA3M+u@q.DW4q0V02)m9R+?VD:3&<`@4C_k[2EhR41,V$K4s2sC2*!W[+?X.D2e5)]4>JcS3BeQJ1,V(''4s2st@lZ;.%6QC''3G(Gt4>Jd&0KpUA@q.N-4q0V02.84''+?VD:@5:"h4C_k]A3LGb1,WJr4s2sC2.8I.+?X.D@50qT4>Jd&@6Per1,WKM4s2st@prt5%6QC''@:_VF4>Jd&Aj.>"@q/t+4q0V02.A7''+?VD:@PL%h4C_l13Bdm71,WMr4s2sC2.AL.+?X.D@UqY34>Jd''3BeQJ1,WNO4s2st@q/t3%6QC''@V%_G4>Jd''Aj.>"@q0%)4q0V02.J=(+?VD:@kg.i4C_l32*MI31,WPs4s2sC2.JU0+?X.DA2ug_4>Jd(@6Per1,WQR4s2st@q@P^%6QC''A2$1i4>Jd)0g6^B@q0(]4q0V02.SI++?VD:A2HIm4C_l50g6%/1,WT"4s2sC2.U/[+?X.DAi2a]4>Jd)ANh5!1,WW!4s2stA2#c&%6QC''AMcRn4>Jd*2*N-F@q79%4q0V02.\[0+?VD:AN)dq4C_nUA3LGb1,WW&4s2sC2.^>_+?X.E0ekj$4>Jd+0g6^B1,WZ$4s2stA2.XZ%6QC''Ai;gq4>Jd+2a/?H@q7>Q4q0V02.eg3+?VD:AiW$t4C_nW3Bdm71,WZP4s2sC2.gGa+?X.E11WQX4>JfK1HlpD1,^gG4s2stA2@XX%6QC(0KD<>4>JfK@Qkns@q7DN4q0V02DAW)+?VD;0f_E?4C_nY2*MI31,^jq4s2sC2DQsM+?X.E2)RQ,4>JfM0g6^B1,^mC4s2stA2Rp^%6QC(1,D*:4>JfM1d3$E@q7JP4q0V02DR-R+?VD;11EEi4C_n[2*MI31,^mu4s2sC2D[*P+?X.E2_mQ+4>JfN1HlpD1,^pF4s2stA2dp\%6QC(1Gq?=4>JfN2a/?H@q7N/4q0V02D[<V+?VD;1M&`m4C_n]0g6%/1,^sD4s2sC2Dd<U+?X.E3+Y8_4>JfO2a/?H1,^sK4s2stA2uP3%6QC(1c[`B4>JfO@6Per@q7S[4q0V02Del,+?VD;2).9;4C_n^A3LGb1,_!H4s2sC2DmKY+?X.E@:;>/4>JfP@6Per1,_"!4s2stA7@;X%6QC(2.Jfm4>JfPA3M+u@q9%+4q0V02Do&0+?VD;2DdT?4C_o23Bdm71,_$K4s2sC2E##.+?X.E@l?L[4>JfQ@m2"t1,_%$4s2stA7K17%6QC(2J#&p4>JfR0KpUA@q9+)4q0V02E*?S+?VD;2`EoC4C_o42*MI31,_''O4s2sC2E,22+?X.EAMQFY4>JfRAj.>"1,_*G4s2stA7]15%6QC(3&*T>4>JfS1-QgC@q9.]4q0V02E3KV+?VD;3&s/F4C_o60g6%/1,_+%4s2sC2E<KU+?X.EAn=.84>JfT1-QgC1,_-K4s2stAM?#+%6QC(3A`oB4>JfT2Ei6G@q@>S4q0V02E<][+?VD;3Fk;r4C_qVA3LGb1,`Pp4s2sC2ISI,+?X.F0k!6T4>Jg''2Ei6G1,`Q"4s2stAMQ#)%6QC(@5pFn4>Jg''3BeQJ@q@DQ4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71,`QL4s2sC2IU&Y+?X.F11<?U4>Jg''@m2"t1,`QP4s2stAMRd[%6QC(@PL%h4>Jg(2Ei6G@q@GS4q0V02I\U/+?VD;@Q6Oo4C_qYANgPc1,`T%4s2sC2I^,Z+?X.F1bh0''4>Jg(@m2"t1,`Vt4s2stAMc8.%6QC(@l6Fm4>Jg)@6Per@q@MQ4q0V02Ig2[+?VD;@q.\F4C_q[@6P,_1,`WQ4s2sC2Ig;^+?X.F2.Sl[4>Jg)Aj.>"1,`Z!4s2stAMu>.%6QC(A2laq4>Jg*3BeQJ@q@SW4q0V02Ip5[+?VD;A7@_F4C_q]3Bdm71,`ZQ4s2sC2J"X-+?X.F2e5)]4>Jg+1d3$E1,`]%4s2stAN4*^%6QC(AN2jr4>Jg+3BeQJ@q@YU4q0V02J$;\+?VD;AR[hG4C_q_2*MI31,`]R4s2sC2J+^.+?X.F3B9844>Jg,1d3$E1,``%4s2stARRJ\%6QC(AiDmr4>Jg,3''JHI@qB([4q0V02J+s5+?VD;An!qH4C_r30g6%/1,``S4s2sC2J-Pb+?X.F@Pp=Y4>JiL0KpUA1,gmB4s2stAR[Y`%6QC)0Ju$:4>JiL2Ei6G@qB.*4q0V02_[0S+?VD<0KD<>4C_r42*MI31,gmq4s2sC2_\`*+?X.F@lZ^^4>JiLA3M+u1,gsE4s2stARf77%6QC)1,M0;4>JiN2*N-F@qB404q0V02_m9T+?VD<1,hB>4C_r63Bdm71,gsJ4s2sC2_nr.+?X.FARmt64>JiO1HlpD1,h!G4s2stAhYu(%6QC)1Gq?=4>JiO2Ei6G@qIDP4q0V02`!BV+?VD<1LrZl4C_tW3Bdm71,h"$4s2sC2`*3P+?X.G0fD3)4>JiP1-QgC1,h$G4s2stAhdj\%6QC)1c.B=4>JiP2*N-F@qIJN4q0V02`*EV+?VD<1h/]l4C_tY2*MI31,h%$4s2sC2`3BT+?X.G1GV-''4>JiQ1d3$E1,h''J4s2stAi!jZ%6QC)2)[W@4>JiQ3''JHI@qIN-4q0V02`3TZ+?VD<2.f#p4C_t[0g6%/1,h*G4s2sC2`<QX+?X.G1hAi[4>JiR2a/?H1,h*N4s2stAi2J1%6QC)2E<rD4>JiR@6Per@qISY4q0V02`>,/+?VD<2_dK=4C_t\A3LGb1,h-K4s2sC2`EWY+?X.G2I\iZ4>JiS3''JHI1,h-P4s2stAiDJ/%6QC)2dnlm4>JiS@m2"t@qIYW4q0V02`G82+?VD<3&<`@4C_t^3Bdm71,h0N4s2sC2`P81+?X.G3&Wr04>JiT@m2"t1,h1''4s2stAiO?c%6QC)3+Y8r4>JiTAj.>"@qI_U4q0V02`WQU+?VD<3As&D4C_t`2*MI31,h3R4s2sC2`YG5+?X.G@5:"U4>JiUAj.>"1,iVq4s2stAmo+3%6QC)@50qg4>Jj(1HlpD@qK.[4q0V02dnO,+?VD<@:;>B4C_u40g6%/1,iWP4s2sC2e"O++?X.G@V%_44>Jj)1HlpD1,iZ!4s2stAn*__%6QC)@Pp=l4>Jj)2a/?H@qK424q0V02e"a1+?VD<@V%_G4C_u5A3LGb1,i\t4s2sC2e+a0+?X.GA77Y24>Jj*2a/?H1,i]&4s2stAn<_]%6QC)@lZ^q4>Jj*@6Per@qK:04q0V02e-;\+?VD<A2-7j4C_u73Bdm71,i`#4s2sC2e4j2+?X.GAi;g^4>Jj+3BeQJ1,i`P4s2stAnGU<%6QC)A7@_F4>Jj+@m2"tA2#\l4q0V02e6G_+?VD<AMZLm4Cg-"2*MI31,ic$4s2sC2e=j1+?X0g0P*EW4>Jj,2Ei6G1,icR4s2su0JP=H%6QC)ARdnH4>Jj,A3M+uA2#`H4q0V02e?Pa+?VD<AhZCk4Cg-#A3LGb1,if"4s2sC2eG!4+?X0g1,1s%4>Jj-3BeQJ1,ifV4s2su0J[3''%6QC*0JPa64>JlM1-QgCA2#f"4q0V03&!-P+?VD=0KD<>4Cg-%A3LGb1,pst4s2sC3&*-O+?X0g1grQW4>JlN1-QgC1,q!E4s2su0JtUL%6QC*0f2'':4>JlN2Ei6GA2#ku4q0V03&*?U+?VD=0k<Hj4Cg-''3Bdm71,q$C4s2sC3&33P+?X0g2E!`.4>JlO1-QgC1,q$G4s2su0K(pT%6QC*1,V6<4>JlO2Ei6GA2#oQ4q0V03&4o++?VD=11`Wl4Cg-)2a.[51,q''E4s2sC3&<<R+?X0g3&3Z,4>JlP1HlpD1,q''I4s2su0K:pR%6QC*1H%E>4>JlP2a/?HA2#uO4q0V03&<NX+?VD=1LWHi4Cg-*A3LGb1,q(!4s2sC3&E?R+?X0g3AE],4>JlQ1d3$E1,q*N4s2su0KE].%6QC*1grQj4>JlQ@QknsA2%FM4q0V03&G,/+?VD=1h8cm4Cg-S3Bdm71,q+%4s2sC3&NNV+?X0g@:VP24>JlR2Ei6G1,q-O4s2su0OeHS%6QC*2.A`l4>JlR@m2"tA2%LK4q0V03&P51+?VD=2.\ro4Cg-U2*MI31,q.''4s2sC3&WNU+?X0g@q%V24>JlS1d3$E1,q0N4s2su0P!(*%6QC*2E<rD4>JlS@6PerA2%P*4q0V03&Y81+?VD=2_dK=4Cg-W2EhR]DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>JlT1HlpD1,q3N4s2su0P3((%6QC*2`NuD4>JlT3BeQJA2%V(4q0V03&b80+?VD=2e,#o4Cg-XA3LGb1,q4''4s2sC3&i]X+?X0h0JPa#4>JlU2Ei6G1,q7&4s2su0ed0&%6QC*3+G,p4>JlUANh5!A2,er4q0V03&rZV+?VD=@5L.j4Cg0$@Qk5`1,r]"4s2sC3+4^/+?X0h1GV-''4>Jm)2a/?H1,r]%4s2su0f([N%6QC*@6$Lo4>Jm)@m2"tA2,lM4q0V03+6A^+?VD=@P^1j4Cg0''2EhR41,r`"4s2sC3+=a/+?X0h1hAi[4>Jm*2Ei6G1,r`%4s2su0f:[L%6QC*@Q6Oo4>Jm*ANh5!A2,r!4q0V03+FX++?VD=@l$:k4Cg0)1-Q.01,rc$4s2sC3+Fj1+?X0h2IScY4>Jm+2a/?H1,rc''4s2su0fEQ+%6QC*@lZ^q4>Jm+Aj.>"A2-"t4q0V03+Oa-+?VD=A2ZUo4Cg0*ANgPc1,rf''4s2sC3+P!4+?X0h3&Wr04>Jm,3BeQJ1,rfR4s2su0fV0W%6QC*A7IeG4>Jm-1-QgCA2-&S4q0V03+Xm0+?VD=AMcRn4Cg0,2*MI31,ri''4s2sC3+ZP_+?X0h3FP)\4>Jm-@m2"t1,riU4s2su0juh$%6QC*AS"%J4>Jm-Aj.>"A2.LM4q0V03+aj.+?VD=Ai;gq4Cg0T3Bdm71,rlT4s2sC3+cYa+?X0h@V%_44>Jm.A3M+u1,rlX4s2su0k2q%%6QC+0JG[54>JoN2Ei6GA2.RO4q0V03A<HW+?VD>0P*Ej4Cg0W1-Q.01-%%#4s2sC3AN<Q+?X0hA2ug_4>JoP1-QgC1-%*K4s2su0kFo[%6QC+1,qH?4>JoP3BeQJA2.[S4q0V03AP#,+?VD>11EEi4Cg0Y3Bdm71-%+"4s2sC3AWES+?X0hAn4(74>JoQ1d3$E1-%-N4s2su1,*-#%6QC+1LWHi4>JoQ@QknsA25kp4q0V03AY//+?VD>1M&`m4Cg3%2*MI31-%.&4s2sC3A`TW+?X0i0f_E,4>JoR3''JHI1-%1%4s2su1,:aO%6QC+1hAin4>JoRAj.>"A25oO4q0V03AiKS+?VD>2).9;4Cg3''0g6%/1-%3J4s2sC3Ai`Z+?X0i1H.K,4>JoS@6Per1-%4(4s2su1,LaM%6QC+2D@<;4>JoT0g6^BA25uM4q0V03ArWV+?VD>2D[N>4Cg3(A3LGb1-%6L4s2sC3ArcZ+?X0i2).9(4>JoT2a/?H1-%6Q4s2su1,UpQ%6QC+2I\im4>JoU0KpUAA26#R4q0V03B&ZV+?VD>2_mQ>4Cg3*2EhR41-%9L4s2sC3B&cY+?X0i2E<r14>JoU2*N-F1-%:&4s2su1,`Z,%6QC+2e5)p4>JoV1-QgCA26)P4q0V03B/fY+?VD>3&EfA4Cg3,1-Q.01-%<O4s2sC3B/o\+?X0i3&Nl/4>JoV2a/?H1-%=)4s2su1,q9X%6QC+3A<W>4>JoW2*N-FA26/''4q0V03B8u]+?VD>3B'',E4Cg3-ANgPc1-%?S4s2sC3B:M3+?X0i@50qT4>JoW@Qkns1-&bt4s2su11<%(%6QC+@5L.j4>Jp*3BeQJA27UL4q0V03FQA\+?VD>@:MJD4Cg3VA3LGb1-&cS4s2sC3FX[++?X0i@l6FZ4>Jp+1HlpD1-&f$4s2su11OlZ%6QC+@Q$Cm4>Jp+2a/?HA27[N4q0V03FXs3+?VD>@Q?Up4Cg3X2EhR41-&fP4s2sC3FZJ^+?X0iA2ug_4>Jp+A3M+u1-&fU4s2su11XoZ%6QC+@k^(h4>Jp,1-QgCA27^N4q0V03Fap1+?VD>@pqPD4Cg3Y@6P,_1-&iR4s2sC3FcP_+?X0iAhlOZ4>Jp,A3M+u1-&iU4s2su11iC-%6QC+@qInI4>Jp-2*N-FA27aW4q0V03Fk*5+?VD>A2ugr4Cg6%2EhR41-&lW4s2sC3Ft!1+?X0j0fM9*4>Jp.2a/?H1-&o*4s2su1GWB&%6QC+AN;ps4>Jp.@6PerA2>uO4q0V03FuY`+?VD>AhcIl4Cg6(0g6%/1-&r&4s2sC3G(-4+?X0j1M&`Z4>Jp/2Ei6G1-&r*4s2su1GgjN%6QC+AiMss4>Jp/3BeQJA2?&#4q0V03G)\`+?VD>An+"I4Cg6)3Bdm71-&rW4s2sC3G)ke+?X0j1h8cZ4>L>!0KpUA11;jm4s2su1GpjM%6QCS0K)*;4>L>!3''JHIA2?)O4q0V0@5'']*+?VDf0O[-f4Cg6*ANgPc11;kG4s2sC@59](+?X0j2DIB)4>L>#2Ei6G11;ps4s2su1H/l/%6QCS1,qH?4>L>#3BeQJA2?2"4q0V0@5;7T+?VDf1GD!84Cg6-2*MI311;sn4s2sC@5B]''+?X0j3ANc-4>L>$2*N-F11;ss4s2su1HAl-%6QCS1H.K?4>L>$3''JHIA2?5V4q0V0@5Bo-+?VDf1M/fn4Cg6V0g6%/11<!o4s2sC@5Kf)+?X0j@:_V34>L>%2Ei6G11<!u4s2su1L`7+%6QCS1c[`B4>L>%Aj.>"A2@\*4q0V0@5Tc''+?VDf2)[W@4Cg6X@6P,_11<%!4s2sC@5U#.+?X0jA26=XASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QCS2*!iC4>L>&@6PerA2@aR4q0V0@5VLX+?VDf2DIB<4Cg6Y3Bdm711<''t4s2sC@5^,0+?X0jAMu^]4>L>''@Qkns11<(N4s2su1M/@*%6QCS2Inuo4>L>(1HlpDA2@gT4q0V0@5g).+?VDf2`EoC4Cg9&1-Q.011<+%4s2sC@5hUY+?X0k0O[-S4>L>(@Qkns11<+P4s2su1b`H(%6QCS2e>/q4>L>)1d3$EA2H"q4q0V0@5p20+?VDf3+G,p4Cg9''ANgPc11<.Q4s2sC@:;)Y+?X0k1,V6)4>L>R3''JHI11=TO4s2su1c-sO%6QCS@:;>B4>L>R@m2"tA2H,#4q0V0@:<\1+?VDf@P^1j4Cg9*3Bdm711=WM4s2sC@:E\0+?X0k2)[W-4>L>S@m2"t11=X&4s2su1c8i.%6QCS@V%_G4>L>SAj.>"A2H2!4q0V0@:LuT+?VDf@l?Ln4Cg9,2*MI311=ZQ4s2sC@:Nk4+?X0k2_mQ+4>L>TAj.>"11=]I4s2su1cJi,%6QCSA2-7j4>L>U1-QgCA2H5U4q0V0@:V2Y+?VDfA2laq4Cg9.1Hl7111=^&4s2sC@:_,V+?X0k3+Y8_4>L>V0g6^B11=`L4s2su1c[HX%6QCSAMZLm4>L>V1d3$EA2H;,4q0V0@:_;[+?VDfAR[hG4Cg9/A3LGb11=a)4s2sC@:h8Y+?X0k@:;>/4>L>W1HlpD11=cO4s2su1h&4(%6QCSAi2ap4>L>W2a/?HA2IaQ4q0V0@:hJ_+?VDfAn=.K4Cg9X3Bdm711Dpl4s2sC@PB](+?X0k@l?L[4>LA"2a/?H11Dps4s2su1h1)\%6QCT0KD<>4>LA"@QknsA2IgO4q0V0@PD:U+?VDg0etp84Cg9Z2*MI311Dsq4s2sC@PM:T+?X0kAMQFY4>LA#@Qkns11DtJ4s2su1hC)Z%6QCT0k<Hj4>LA#ANh5!A2Ik.4q0V0@PMIY+?VDg1,V6<4Cg9\0g6%/11E!u4s2sC@PVIX+?X0kAn=.84>LA$ANh5!11E"N4s2su2)$pP%6QCT1GD!84>LA%0g6^BA2Q&$4q0V0@P]c''+?VDg1Gh9<4Cg<''A3LGb11E$s4s2sC@P]r,+?X0l0ekj$4>LA%@6Per11E%O4s2su2)/N''%6QCT1b_*94>LA&0g6^BA2Q+t4q0V0@Pfi(+?VDg1c.B=4Cg<)2*MI311E''t4s2sC@PhOX+?X0l1-%N-4>LA&ANh5!11E*s4s2su2)@-S%6QCT2)IK>4>LA''2*N-FA2Q/S4q0V0@Pp&-+?VDg2)d]A4Cg<+0g6%/11E+#4s2sC@Pq^\+?X0l1c7H+4>LA(0KpUA11E-s4s2su2)R-Q%6QCT2DdT?4>LA(2*N-FA2Q5Q4q0V0@Q$,.+?VDg2E*fB4Cg<,A3LGb11E.P4s2sC@Q%d]+?X0l2`<i/4>LA(Aj.>"11E0r4s2su2)dNZ%6QCT2_dK=4>LA)2a/?HA2Q;V4q0V0@Q.d\+?VDg2e5)p4Cg<01-Q.011E1R4s2sC@Q6&*+?X0l3Aiu04>LA*0g6^B11E4%4s2su2*!Z\%6QCT3+4un4>LA*ANh5!A2RdR4q0V0@Q7s`+?VDg@50qg4Cg<XA3LGb11FZI4s2sC@UV5[+?X0l@kg.V4>LAS3BeQJ11F[#4s2su2.L&Y%6QCT@:DDC4>LAS@m2"tA2Rk-4q0V0@UWe2+?VDg@:_VF4Cg<[1Hl7111F]I4s2sC@U_)V+?X0lA7[q64>LAT1HlpD11F]L4s2su2.\[0%6QCT@Pp=l4>LAT2Ei6GA2RpY4q0V0@U_8[+?VDg@UqYF4Cg<\A3LGb11F^)4s2sC@Uh/W+?X0lAmmk44>LAU1HlpD11F`M4s2su2D?mM%6QCT@l6Fm4>LAU2Ei6GA2Z,!4q0V0@Uh>\+?VDg@q7bG4Cg?(3Bdm711Fa*4s2sC@Uq;Z+?X0m0fD3)4>LAV2*N-F11FcP4s2su2DJc,%6QCTA2c[p4>LAV3BeQJA2Z1t4q0V0@Urn2+?VDgAM?:j4Cg?*2*MI311FfM4s2sC@V%J^+?X0m1GV-''4>LAW@6Per11Fg(4s2su2Dd0Q%6QCTAS++K4>LAX0g6^BA2Z8U4q0V0@V.AZ+?VDgAhuUn4Cg?-1-Q.011FiP4s2sC@V.J]+?X0m2)[W-4>LAX2Ei6G11FiS4s2su2DmKY%6QCTAiMss4>LAX@6PerA2Z;U4q0V0@V0(5+?VDgAn4(J4Cg?.0g6%/11Fj,4s2sC@V049+?X0m2IScY4>LD#0KpUA11N!o4s2su2E#&/%6QCU0Jks94>LD#2*N-FA2ZA%4q0V0@k]f)+?VDh0K20<4Cg?/2*MI311N!t4s2sC@k_IX+?X0m2`X&24>LD$0KpUA11N$r4s2su2E3TY%6QCU0fD3<4>LD$2a/?HA2ZDY4q0V0@kfr,+?VDh0f_E?4Cg?10g6%/11N%I4s2sC@ko`%+?X0m3Aiu04>LD%1HlpD11N(!4s2su2IS@)%6QCU1-%N@4>LD%@6PerA2[k)4q0V0@kqLW+?VDh11NKj4Cg?YA3LGb11N(M4s2sC@l#o)+?X0m@PL%U4>LD&2Ei6G11N+L4s2su2I^5]%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaW@l%UY+?VDh1LrZl4Cg?[2EhR411N+O4s2sC@l%^\+?X0m@lZ^^4>LD''1HlpD11N-t4s2su2Ip5[%6QCU1c7H>4>LD''2Ei6GA2[t04q0V0@l-,.+?VDh1cRZA4Cg?]1-Q.011N.$4s2sC@l.XY+?X0mAMlX\4>LD''@m2"t11N0s4s2su2J"m4%6QCU2)IK>4>LD(3BeQJA2\$X4q0V0@l7[Y+?VDh2.A`l4Cg?^ANgPc11N1O4s2sC@l7d\+?X0n0JPa#4>LD(ANh5!11N4!4s2su2_[*Q%6QCU2E!`A4>LD)@QknsA2c4u4q0V0@l@g\+?VDh2Inuo4CgB*@6P,_11N4R4s2sC@l@p_+?X0n0k<HW4>LD*0KpUA11N7$4s2su2_m*O%6QCU2`X&E4>LD*ANh5!A2c8T4q0V0@lJ!`+?VDh3&!N=4CgB,2EhR411N:!4s2sC@lQD2+?X0n1LrZY4>LD+@6Per11N:R4s2su2`+r,%6QCU3+P2q4>LD+ANh5!A2c>V4q0V0@lS''a+?VDh3A<W>4CgB.1-Q.011N=!4s2sC@lZ>/+?X0n2.8ZX4>LD,2a/?H11N=(4s2su2`<QX%6QCU3B98G4>LD,@6PerA2cDX4q0V0@l\!^+?VDh3Fb5q4CgB00g6%/11N=T4s2sC@pq/W+?X0n2`3c.4>LDT2Ei6G11Oa%4s2su2`NQV%6QCU@:MJD4>LDTA3M+uA2cJV4q0V0@prq4+?VDh@:h\G4CgB1A3LGb11OcI4s2sC@q%;Z+?X0n3AE],4>LDU2a/?H11OcQ4s2su2`YG5%6QCU@Q?Up4>LDU@6PerA2dpO4q0V0@q&n2+?VDhAnF4L4>J`O0Koq.11W''m4s2sCA2Im^+?VD9@5U4X4>LG)0g6^B11W7N4s2sC2`EWY%6QCV2.A`l4>LG+3BeQJ1GUX<4q0V0A2dp\+?VDi@5pFn4>S`M0g6%/11XfR4s2sCA7@J]+?VG8@PL%U4>LGX1HlpD11XoP4s2sD0JG4F%6QCVA2QOn4>LGX@Qkns1GCOA4q0V0A7T16+?VDiAMlXo4D&.Z0Koq.11XrS4s2sCA7[bb+?X7I1GD!%4>LGY@6Per11XuW4s2t"AMZ2-%6QCVAmmkG4>LGZ@QknsAn<eX4q0V0A7f=8+?VDiAnF4L4D&1Z0g6%/11`-n4s2sCAMlG2+?X7J0Ju$''4>LJ*@Qkns11`=Q4s2sCAM[aY%6QCW2.Sln4>LJ+0g6^B1GCOC4q0V0AMuG1+?VDj2E*fB4>8Ht@Qk5`11`@''4s2sCAMuP4+?V>3@PU+V4>LJ+@Qkns11`@T4s2sA0OeKT%6QCW2_dK=4>LJ,2Ei6G0J[/u4q0V0AN+*_+?VDj2e>/q4>JTI2a.[511`F!4s2sCAN2P2+?VD52`*]-4>LJ-2Ei6G11`I"4s2sC0K3T-%6QCW3As&D4>LJ.2a/?H1,1XB4q0V0AN;_6+?VDj3FY/p4>JWK@Qk5`11`IU4s2sCARRG[+?VD62D@<(4>LJV2Ei6G11am+4s2sC0fLdM%6QCW@P^1j4>LJW1d3$E1,:O=4q0V0AR[M\+?VDj@Q$Cm4>JZG2a.[511ap(4s2sCAR].5+?VD70k<HW4>LJWAj.>"11arP4s2sC1,:dP%6QCW@l?Ln4>LJX3''JHI1,:XB4q0V0ARd_a+?VDj@pqPD4>JZJ@m1>a11as+4s2sCARf:8+?VD72E!`.4>LJXAj.>"11auM4s2sC1,`Q)%6QCWA2-7j4>LJY1-QgC1,:gE4q0V0ARmS\+?VDjA2HIm4>JZO2EhR411auV4s2sCARo:7+?VD:0JG["4>LJYA3M+u11b''04s2sC2)&N(%6QCX0JG[54>LM''@m2"t1,Uh!4q0V0Ahdm]+?VDk1,V6<4>Jd&1Hl7111i:"4s2sCAhl;/+?VD:@PU+V4>LM(3''JHI11i:%4s2sC2.AI-%6QCX11<?h4>LM(@Qkns1,WNN4q0V0Ahmj[+?VDk11WQk4>Jd(0Koq.11i:Q4s2sCAhu/*+?VD:@l?L[4>LM)1-QgC11i="4s2sC2.L2]%6QCX1H%E>4>LM)2a/?H1,^gD4q0V0AhuD1+?VDk1H@WA4>JfKANgPc11i=R4s2sCAi"$_+?VD;2D@<(4>LM*0KpUA11i?u4s2sC2E!?T%6QCX1c%<<4>LM*2Ei6G1,_$L4q0V0Ai)G1+?VDk1cRZA4>JfQ@m1>a11i@Q4s2sCAiDV3+?VG72DdT,4>LM-2a/?H11iIS4s2sD1H7''P%6QCX2e,#o4>LMXANh5!1G_!M4q0V0An#@9+?VDk@k^(h4>Sd''Aj-Yd11k#Q4s2sCAn*__+?VG9A7@_34>LMY2a/?H11k#V4s2t"An<Y[%6QCX@q%VE4>LMY@m2"t1GCRq4q0V0An,@8+?VDk@q@hH4>SZHANgPc1GCaA4s2sD0P4o\+?VA50JG["4>S]G0KpUA1GLe"4s2sB0f^pO%6QF$2_[E<4>S]O@m2"t@6$5"4q0V10fW]-+?VG7@5C(i4CgB[0Koq.1GN;p4s2sD0k<+)+?X0n@q%V24>S^&2*N-F1GNKR4s2sB0eb:F%6QF%0JG[54>S`K1HlpD0ekFm4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71GUaC4s2sD1,UaL+?X''m2D@<(4>S`M0g6^B1GWBN4s2sB0eb:F%6QF%@PBtg4>Sa&@m2"t@6$5"4q0V111OiY+?VG8AnF4L4>AQE0Koq.1G^^=4s2sD1GWE''+?VA51G_3(4>ScK@m2"t1G^jI4s2sr3ArQT%6QF&1c[`B4>Sd%2a/?H0ek@94q0V11LW7,+?VG9@l-@l4CL6.0Koq.1G`Mu4s2sD1M15_+?VA50JG["4>SfJ0KpUA1GgjC4s2sB0f*9&%6QF''1,M0;4>SfN0KpUA@6$5"4q0V11c-pN+?VG:3G(Gt4>AQE0Koq.1GiMo4s2sD1h''rY+?X''m2D@<(4>Sg''A3M+u1Gi]U4s2sB0fC^L%6QF(0JG[54>SiK1d3$E0em)m4q0V12)$mO+?VG;0k*<h4CgB[0Koq.1Gpms4s2sD2)[3R+?VA52DIB)4>SiQ1HlpD1Gq*O4s2su2e"I)%6QF(2dnlm4>Sj*0g6^B0em)r4q0V12.SI++?VG;AnF4L4CgB\@Qk5`1H$p@4s2sD2D?mM+?X0nAiW$a4>SlL1HlpD1H%+!4s2sB0k!%*%6QF)2.A`l4>SlT@QknsA2e"-4q0V12E521+?VG<AMZLm4>AR!3''Id61H&f$4s2sD2J-Pb+?X0n@q%V24>SoM0KpUA1H.$F4s2su2e=p3%6QF*0f;-;4>SoS@m2"t0em)r4q0V12`>21+?VG=3Fk;r4CgB\@Qk5`1H.=*4s2sD2`YJ6+?VJl0JG["4>Sp)0g6^B1H/`"4s2sEAM?&,%6QF*@5pFn4>Sp)@6Per1hABu4q0V12dp/Z+?VG=@:MJD4>^V(3''Id61H/bs4s2sD2e"L*+?VJl1H7Q-4>Sp*1HlpD1H/c"4s2sEAMc/+%6QF*@Q-In4>Sp*3BeQJ1hALS4q0V12e$5[+?VG=@UhSE4>^V,3''Id61H/cR4s2sD2e$A_+?VJl2.Sl[4>Sp+1HlpD1H/f#4s2sEAN)M2%6QF*@lZ^q4>Sp+@6Per1hAXU4q0V12e->]+?VG=@q@hH4>^V00Koq.1H/fU4s2sD2e4U++?VJl3A`o/4>Sp,1d3$E1H/i%4s2sEARR;W%6QF*A2ZUo4>Sp,3''JHI1hC)P4q0V12e6>\+?VG=A7RkH4>^VX@Qk5`1H/l!4s2sD2e=^-+?VJl@k^(U4>Sp-1d3$E1H/l&4s2sEARf.4%6QF*AN)dq4>Sp-@m2"t1hC2S4q0V12e?Sb+?VG=AhcIl4>^V\1Hl711H/o&4s2sD2eFp2+?VJlAi;g^4>Sp.3''JHI1H/oS4s2sEAhZ5/%6QF*An!qH4>Sp.Aj.>"1hJFP4q0V13&!3R+?VG>0K)*;4>^Y+@m1>a1H7''J4s2sD3&"c)+?VJm1c@N,4>SrN@Qkns1H7(#4s2sEAi+$^%6QF+0ekj74>SrO1d3$E1hJU*4q0V13&*<T+?VG>0fM9=4>^Y.Aj-Yd1H7*u4s2sD3&+o,+?VJm2e>/^4>SrOANh5!1H7+$4s2sEAiMS1%6QF+1,;$94>SrP1HlpD1hJ^U4q0V13&4r,+?VG>11NKj4>^YYANgPc1H7.#4s2sD3&5&/+?VJm@Pp=Y4>SrQ0KpUA1H70G4s2sEAn*S[%6QF+1G_3;4>SrQ1d3$E1hL5X4q0V13&<KW+?VG>1H7Q@4>^Y\1Hl711H71#4s2sD3&>,0+?VJmA7e"74>SrQAj.>"1H73F4s2sEAn>O;%6QF+1h&Wk4>SrR@m2"t2)$a>4q0V13&G21+?VG>1hJoo4>efI3Bdm71H76H4s2sD3&NHT+?VM80kENX4>SrS1d3$E1H76L4s2sF0JYFJ%6QF+2)[W@4>SrS3''JHI2)$dD4q0V13&N][+?VG>2.Jfm4>efJ@6P,_1H77(4s2sD3&WKT+?VM81cIT-4>SrT2a/?H1H79Q4s2sF0K1gP%6QF+2J,,q4>SrU0KpUA2)%$M4q0V13&`QU+?VG>2_mQ>4>eg$@m1>a1H7<L4s2sD3&`ZX+?VM8@PU+V4>SrU3BeQJ1H7=%4s2sF0Om+,%6QF+2e5)p4>SrUANh5!2)&Pu4q0V13&if[+?VG>3&j)E4>eg)Aj-Yd1H7BO4s2sD3&ri[+?VM91b_*&4>SrW2Ei6G1H7C)4s2sF0f1[M%6QF+3Fk;r4>Ss*0KpUA2)-ps4q0V13+4[.+?VG>@:MJD4>eiO2a.[51H8fS4s2sD3+=U++?VM92`3c.4>Ss+ANh5!1H8iU4s2sF0k*%)%6QF+@l-@l4>Ss,2Ei6G2)/TM4q0V13+Fm2+?VG>@lZ^q4>ej(@m1>a1H8lR4s2sD3+HG^+?VM9AhZCX4>Ss,ANh5!1H8o!4s2sF0kNC/%6QF+A2HIm4>Ss-2Ei6G2)6jD4q0V13+QM_+?VG>A7RkH4>elL1d2@21H8oV4s2sD3+QVb+?VM:1-%N-4>Ss.1-QgC1H8r)4s2sF1,CgP%6QF+ARRbF4>Ss.A3M+u2)7!s4q0V13+as1+?VG>Ai)[o4>elP3Bdm71H8uU4s2sD3+c\b+?VM:3&a#14>SuO1-QgC1H@-F4s2sF1-&r1%6QF,0Jks94>SuO2*N-F2)8Sr4q0V13A<?T+?VG?0K;6=4>em&3Bdm`DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>SuP0g6^B1H@0F4s2sF11W7+%6QF,0f)!94>SuP1d3$E2)8]%4q0V13AEEU+?VG?0fV?>4>em)A3LGb1H@0M4s2sD3AFu,+?VM:AMQFY4>SuPAj.>"1H@3E4s2sF11jrY%6QF,1,1s84>SuQ1-QgC2)8cT4q0V13ANKV+?VG?1,hB>4>eoKAj-Yd1H@3M4s2sD3AP#,+?VM;0f;-(4>SuQ@m2"t1H@4$4s2sF1GUXJ%6QF,1GV-:4>SuR1d3$E2)@%#4q0V13AWNV+?VG?1H%E>4>eoO1Hl711H@6M4s2sD3AY)-+?VM;1cIT-4>SuR@m2"t1H@7''4s2sF1GpmN%6QF,1cIT@4>SuS3BeQJ2)@.&4q0V13Ab/.+?VG?1h&Wk4>eoR1d2@21H@<K4s2sD3AiWW+?VM;3G(Ga4>SuT2*N-F1H@<N4s2sF1LW.)%6QF,2.8Zk4>SuTA3M+u2)A`%4q0V13ArQT+?VG?2DIB<4>ep*2EhR41H@?L4s2sD3Arf[+?VM;AMH@X4>SuU3''JHI1H@@''4s2sF1M&R1%6QF,2Inuo4>SuV0g6^B2)AfU4q0V13B&`X+?VG?2`*]@4>erL1Hl711H@BO4s2sD3B&l\+?VM<0K;6*4>SuV3''JHI1H@C)4s2sF1b`E''%6QF,3&!N=4>SuW0g6^B2)I%"4q0V13B/o\+?VG?3&a#D4>erO3''Id61H@ES4s2sD3B0#_+?VM<1L`NW4>SuX1d3$E1H@HR4s2sF1cJl-%6QF,3FtAs4>SuXAj.>"2)J`N4q0V13FO^-+?VG?@5L.j4>es*0Koq.1HAl%4s2sD3FOj1+?VM<@lQX]4>T!+@Qkns1HAlR4s2sF1hC2]%6QF,@PBtg4>T!,0g6^B2)R''G4q0V13Faj/+?VG?@l-@l4>euU2EhR41HAr&4s2sD3Fas2+?VM=3&s/34>T!-2a/?H1HAr*4s2sF2*!W[%6QF,@pqPD4>T!-@Qkns2)RC(4q0V13FcS`+?VG?A2$1i4>f!)3Bdm71HAu*4s2sD3Fk-6+?VM=AMZLZ4>T!.@6Per1HAuT4s2sF2.gA_%6QF,AhcIl4>T!01-QgC2)\uR4q0V13G(05+?VG?AiDmr4>f$/3Bdm71HB&,4s2sD3G(98+?VM?0Jbm%4>T!0A3M+u1HB&Y4s2sF2_d''O%6QFT0O[-f4>UD"@Qkns2)d@&4q0V1@5)1T+?VGg0P!?i4>f&T0Koq.1LW"I4s2sD@527U+?VM?@5:"U4>UD#ANh5!1LW"M4s2sF2e+d1%6QFT1,;$94>UD$1HlpD2)f&X4q0V1@59c*+?VGg1,qH?4>f''03Bdm71LW%K4s2sD@5;@W+?VM@0Ju$''4>UD$ANh5!1LW''n4s2sF3&!<U%6QFT1H%E>4>UD%3''JHI2)m@''4q0V1@5Bo-+?VGg1LWHi4>f)S1d2@21LW(L4s2sD@5DFX+?VM@1grQW4>UD&0g6^B1LW*q4s2sF3&NWY%6QFT1c7H>4>UD&2Ei6G2)mKK4q0V1@5Tc''+?VGg2)7?<4>f)YANgPc1LW-s4s2sD@5Tl*+?VM@@5pF[4>UD''2a/?H1LW.#4s2sF3+?;[%6QFT2DIB<4>UD(1-QgC2)o,+4q0V1@5]o*+?VGg2DdT?4>f*/ANgPc1LW1"4s2sD@5^&.+?VM@AR[h44>UD(3BeQJ1LW1N4s2sF3+b07%6QFT2J#&p4>UD)0KpUA2*!BJ4q0V1@5fo)+?VGg2_mQ>4>f,R3Bdm71LW4#4s2sD@5g/0+?VMA1-%N-4>UD)3BeQJ1LW4N4s2sF3AP,/%6QFT2eG5r4>UD*0g6^B2*!KP4q0V1@5p#++?VGg3&NlB4>f,UANgPc1LW7$4s2sD@5p20+?VMA2)IK+4>UD*A3M+u1LW9u4s2sF3At;0%6QFT3ANc@4>UD+1HlpD2*!TO4q0V1@6$50+?VGg3B02F4>f,Y1-Q.01LW:Q4s2sD@6%g]+?VMA3As&14>UDS3''JHI1LX]P4s2sF3Fjg-%6QFT@:;>B4>UDS@Qkns2*#2''4q0V1@:<Y0+?VGg@:VPE4>f-03Bdm71LX^''4s2sD@:<b3+?VMAA7Ie44>UDT@m2"t1LXa''4s2sF@524T%6QFT@V%_G4>UDTAj.>"2.84O4q0V1@:Nb1+?VGg@q.\F4>gP-@6P,_1LXd)4s2sD@:Nn5+?VMi@kg.V4>UDV3''JHI1LXfS4s2sF@PD7T%6QFTA7[qI4>UDVAj.>"2.AEs4q0V1@:_,V+?VGgAMH@k4>gS*1d2@21LXiM4s2sD@:_5Y+?VMj2)d].4>UDW2*N-F1LXiQ4s2sF@PqXZ%6QFTAN2jr4>UDW3BeQJ2.AI"4q0V1@:`q4+?VGgARmtI4>gS,0Koq.1LXlO4s2sD@:hA\+?VMj3&a#14>UDX2Ei6G1LXlS4s2sF@Q7g\%6QFTAmmkG4>UDXAj.>"2.AR''4q0V1@PBK"+?VGh0JPa64>gS.@Qk5`1L`$n4s2sD@PB](+?VMj@5:"U4>UG#@6Per1L`%K4s2sF@U_,W%6QFU0P*Ej4>UG#Aj.>"2.C#S4q0V1@PKQ#+?VGh0ekj74>gSWAj-Yd1L`''o4s2sD@PKf*+?VMj@kp4WASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QFU0k!6g4>UG$@m2"t2.C)O4q0V1@PMFX+?VGh0kNTl4>gSYANgPc1L`*n4s2sD@PTZ%+?VMjAMH@X4>UG%1-QgC1L`*u4s2sF@V%A[%6QFU1,qH?4>UG%3BeQJ2.C-+4q0V1@PV@U+?VGh11EEi4>gSZANgPc1L`+L4s2sD@PVIX+?VMjAi2a]4>UG&1-QgC1L`-u4s2sF@k]i*%6QFU1H.K?4>UG&3BeQJ2.J=N4q0V1@Pfc&+?VGh1c.B=4>gV)3''Id61L`0u4s2sD@Pg#-+?VMk1M&`Z4>UG''3''JHI1L`1$4s2sF@l-&,%6QFU1h/]l4>UG''A3M+u2.JIR4q0V1@Por*+?VGh2)IK>4>gV,1d2@21L`4%4s2sD@PqRX+?VMk3A<W+4>UG(A3M+u1L`4Q4s2sF@prh1%6QFU2DRH=4>UG)1HlpD2.L)S4q0V1@Q%XY+?VGh2I\im4>gV[Aj-Yd1L`9t4s2sD@Q-&++?VMl0P!?V4>UG*2*N-F1L`:$4s2sFA2,u+%6QFU2dnlm4>UG*@Qkns2.SOQ4q0V1@Q6>2+?VGh3&s/F4>gYY@m1>a1L`=S4s2sD@Q7p_+?VMlA7Rk54>UG+Aj.>"1L`?u4s2sFA7[JZ%6QFU3AE]?4>UG,1d3$E2.U8U4q0V1@Q?A2+?VGh3FP)o4>gY]0g6%/1L`@S4s2sD@Q@s_+?VMlAn4(74>UG,ANh5!1L`@V4s2sFAM>l''%6QFU@:_VF4>UGTAj.>"2.\RU4q0V1@U_#T+?VGh@PL%h4>g\,1d2@21LafO4s2sD@U_;\+?VMm2DIB)4>UGU3BeQJ1Lag&4s2sFAN)A.%6QFU@UhSE4>UGUANh5!2.\^*4q0V1@U`q5+?VGh@kp4j4>g\/@Qk5`1Laj(4s2sD@Uiq4+?VMm@5^:Y4>UGW0KpUA1LalN4s2sFAR[M\%6QFUA2ZUo4>UGW3''JHI2.^8W4q0V1@Urt4+?VGhA7RkH4>g\\@6P,_1Lam+4s2sD@Us(7+?VMmA7e"74>UGX0KpUA1LaoM4s2sFAS!V\%6QFUAMcRn4>UGX2*N-F2.^AX4q0V1@V%G]+?VGhAN)dq4>g\^@6P,_1Lap+4s2sD@V''.8+?VMn0f)!&4>UGY0KpUA1LarN4s2sFAhc5.%6QFUAi)[o4>UGY2*N-F2.eU%4q0V1@k]`''+?VGi0Ju$:4>g_/2EhR41Li*s4s2sD@k_=T+?VMn2E<r14>UJ$@Qkns1Li+K4s2sFAiDD-%6QFV0ebd64>UJ%1-QgC2.edZ4q0V1@kfi)+?VGi0fM9=4>g_1@6P,_1Li.!4s2sD@khCU+?VMn3A<W+4>UJ%@Qkns1Li.M4s2sFAiVe6%6QFV0kNTl4>UJ&0KpUA2.g8N4q0V1@koc&+?VGi1,D*:4>g_Z3''Id61Li1L4s2sD@kqOX+?VMn@q.\34>UJ&A3M+u1Li3p4s2sFAn3e`%6QFV1H@WA4>UJ''@6Per2D?jq4q0V1@l%RX+?VGi1LiTk4>nlK0Koq.1Li4P4s2sD@l%^\+?VP91,hB+4>UJ(1-QgC1Li6u4s2sG0JkLJ%6QFV1h&Wk4>UJ(ANh5!2D@$E4q0V1@l.d]+?VGi2).9;4>nlO3''Id61Li9t4s2sD@l6&++?VP92Ieo[4>UJ)1d3$E1Li:"4s2sG0K*N,%6QFV2)mcB4>UJ)3BeQJ2D@+#4q0V1@l7a[+?VGi2.Sln4>nlR@6P,_1Li:R4s2sD@l7j^+?VP93G(Ga4>UJ*0KpUA1Li<t4s2sG0OZb$%6QFV2DdT?4>UJ*2Ei6G2DASq4q0V1@l?>2+?VGi2IScl4>nm&@m1>a1Li?t4s2sD@lH/,+?VP9A7e"74>UJ+1HlpD1Li@#4s2sG0P3"&%6QFV2`EoC4>UJ+3BeQJ2DA`''4q0V1@lIm]+?VGi2e5)p4>noJ3''Id61Li@T4s2sD@lQ/++?VP:0P!?V4>UJ,1-QgC1LiC#4s2sG0em*#%6QFV3+4un4>UJ,@Qkns2DI"!4q0V1@lS$`+?VGi3+b>s4>noN2a.[51LiF!4s2sD@lZ;.+?VP:1grQW4>UJ-2*N-F1LiF''4s2sG0f:pS%6QFV3B98G4>UJ-@Qkns2DI*F4q0V1@l\$_+?VGi3Fk;r4>noP2a.[51LjiJ4s2sD@pq,V+?VP:2`<i/4>UJU1HlpD1LjiM4s2sG0fNW,%6QFV@5U4k4>UJU2Ei6G2DI0G4q0V1@pqA]+?VGi@:;>B4>noS0Koq.1Ljj''4s2sD@prq4+?VP:3B0234>UJV1-QgC1LjlM4s2sG0k"NT%6QFV@UVGC4>UJVANh5!2DJ]#4q0V1@q.5W+?VGi@l$:k4>np+2EhR41LjoQ4s2sD@q.G]+?VP:AnF494>UJW3''JHI1LjoT4s2sG1,(XN%6QFV@q%VE4>UJWA3M+u2DQsr4q0V1@q0(6+?VGiA2$1i4>nrL0Koq.1LjrS4s2sD@q7P_+?VP;1GD!%4>UJX@Qkns1Ljs,4s2sG1,EK*%6QFVA7e"J4>UJY0g6^B2DR*J4q0V1@qB+5+?VGiARdnH4>nrRAj-Yd1Lk!-4s2sD@qB79+?VP;3&s/34>UJZ0KpUA1Lk#O4s2sG1-%''Q%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaX@qIM\+?VGiAi)[o4>nrT2a.[51Lk$*4s2sD@qK16+?VP;@UhS24>UJZA3M+u1Lk$/4s2sG11N7,%6QFW0JG[54>UM%0g6^B2DScP4q0V1A2#c&+?VGj0Jbm84>ns)Aj-Yd1Lr0r4s2sDA2#o*+?VP;A26=X4>UM%2a/?H1Lr1J4s2sG11W:,%6QFW0Od3g4>UM%@m2"t2DSfP4q0V1A2%OX+?VGj0ebd64>ns+@m1>a1Lr3s4s2sDA2,r*+?VP;An=.84>UM&@m2"t1Lr4N4s2sG1G`H''%6QFW0kENk4>UM&Aj.>"2D[."4q0V1A25o(+?VGj1,D*:4>nuPAj-Yd1Lr6u4s2sDA26&,+?VP<2E*f/4>UM''@6Per1Lr7M4s2sG1H/`+%6QFW11`Wl4>UM''Aj.>"2D[<P4q0V1A2?),+?VGj1H.K?4>o!(0Koq.1Lr:%4s2sDA2@^Z+?VP<@5g@Z4>UM)0KpUA1Lr<s4s2sG1Lk#\%6QFW1c%<<4>UM)1d3$E2D\lP4q0V1A2H2.+?VGj1cIT@4>o!,A3LGb1Lr=&4s2sDA2I^Y+?VP<Ai;g^4>UM)ANh5!1Lr=S4s2sG1bgmP%6QFW2)7?<4>UM*1HlpD2Dd1!4q0V1A2RdZ+?VGj2.Jfm4>o#T3''Id61Lr@S4s2sDA2Z,*+?VP=3AE],4>UM+1HlpD1LrC#4s2sG1gr4)%6QFW2E!`A4>UM+2a/?H2DeiQ4q0V1A2[p]+?VGj2Inuo4>o$+1d2@21LrEu4s2sDA2c5,+?VP=@q7b44>UM,2Ei6G1LrF''4s2sG1hAC*%6QFW2`NuD4>UM,@6Per2Deu&4q0V1A2lG1+?VGj3&a#D4>o&P@6P,_1LrI*4s2sDA2n''_+?VP>1H%E+4>UM-ANh5!1LrIW4s2sG2)Af-%6QFW3ANc@4>UM.1d3$E2Dm=%4q0V1A2uP3+?VGj3B'',E4>o&S2EhR41LrL+4s2sDA3"''^+?VP>2DRH*4>UM.@m2"t1LrLV4s2sG2)\r.%6QFW3G(Gt4>UMV0KpUA2DmEM4q0V1A772V+?VGj@5:"h4>o&U2a.[51LsoN4s2sDA77>Z+?VP>3&3Z,4>UMV3BeQJ1Lsp&4s2sG2*!?S%6QFW@:VPE4>UMVANh5!2DmL(4q0V1A7@8W+?VGj@PU+i4>o''*1d2@21LsrO4s2sDA7@D[+?VP>@:DD04>UMW2Ei6G1LsrR4s2sG2.:)\%6QFW@UVGC4>UMW@Qkns2DnrR4q0V1A7B+6+?VGj@V.eH4>o'',@Qk5`1LsuQ4s2sDA7IM]+?VP>AMlX\4>UMX2a/?H1LsuT4s2sG2.\a2%6QFW@lZ^q4>UMX@6Per2Do&U4q0V1A7K.6+?VGjA2$1i4>o''/@6P,_1Lt#O4s2sDA7RJ[+?VP?0K)*(4>UMY1d3$E1Lt#R4s2sG2D@-T%6QFWA2c[p4>UMY@6Per2E!7#4q0V1A7T.5+?VGjA7RkH4>o)P1Hl711Lt$-4s2sDA7[GY+?VP?0kENX4>UMZ1-QgC1Lt&Q4s2sG2DR3T%6QFWAMlXo4>UMZ2a/?H2E!=&4q0V1A7]15+?VGjAR[hG4>o)R@6P,_1Lt'',4s2sDA7]@:+?VP?1bh0''4>UM[2*N-F1Lt)V4s2sG2Do#/%6QFWAiMss4>UM[A3M+u2E!HM4q0V1AM>i&+?VGk0JYg74>o)V1Hl711M&6r4s2sDAM>u*+?VP?2`<i/4>UP&3''JHI1M&7K4s2sG2E3WZ%6QFX0Om9h4>UP&A3M+u2E!QL4q0V1AM@[Z+?VGk0ebd64>o)X2EhR41M&:!4s2sDAMH/.+?VP?@PU+V4>UP''A3M+u1M&:P4s2sG2IeX/%6QFX1,;$94>UP(1HlpD2E#)U4q0V1AMQ2.+?VGk1-%N@4>o*01-Q.01M&=M4s2sDAMRd[+?VP?AiDm_4>UP(Aj.>"1M&?s4s2sG2J-Ma%6QFX1G_3;4>UP)1d3$E2E*<L4q0V1AMZ8/+?VGk1H7Q@4>o,Q1d2@21M&@O4s2sDAM[j\+?VP@0k<HW4>UP)ANh5!1M&Bs4s2sG2_m9T%6QFX1bh0:4>UP*2*N-F2E*C"4q0V1AMdp]+?VGk2)%3:4>o,TANgPc1M&F#4s2sDAMl>/+?VP@2.\r\4>UP+2a/?H1M&F(4s2sG2`>83%6QFX2.\ro4>UP+Aj.>"2E*R+4q0V1AMu>.+?VGk2DdT?4>o,XAj-Yd1M&I)4s2sDAN!s\+?VP@3Fb5^4>UP,@Qkns1M&IS4s2sG2dp;^%6QFX2J#&p4>UP-0KpUA2E,)''4q0V1AN)D/+?VGk2`NuD4>o-.Aj-Yd1M&LU4s2sDAN+3b+?VP@AS++84>UP.0KpUA1M&O%4s2sG2eFj0%6QFX3&WrC4>UP.2a/?H2E3EH4q0V1AN2Y5+?VGk3&s/F4>o/R2EhR41M&OS4s2sDAN4-_+?VPA1,1s%4>UP.ANh5!1M&OX4s2sG3&<NX%6QFX3A<W>4>UP/0g6^B2E3L&4q0V1AN;M0+?VGk3AiuC4>o/U0Koq.1M&R+4s2sDAN;b7+?VPA2)%3''4>UP/@6Per1M&RU4s2sG3&NKU%6QFX@5:"h4>UPW1HlpD2E3]Q4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71M''uR4s2sDARRP^+?VPA@50qT4>UPW3BeQJ1M(!''4s2sG3+4a0%6QFX@:MJD4>UPWANh5!2E5,W4q0V1AR[>W+?VGk@PL%h4>o0.2*MI31M(#N4s2sDAR[GZ+?VPA@l-@Y4>UPX3BeQJ1M($(4s2sG3+Os3%6QFX@UhSE4>UPXA3M+u2E55Z4q0V1AR]47+?VGk@V.eH4>o012a.[51M(&O4s2sDARdM[+?VPAAiW$a4>UPY2Ei6G1M(&T4s2sG3A=u-%6QFX@q@hH4>UPZ0KpUA2E<WN4q0V1ARmP[+?VGkA2?Cl4>o2W3Bdm71M()S4s2sDARmba+?VPB2D@<(4>UPZ@Qkns1M(*-4s2sG3AtD3%6QFXA7e"J4>UP[0g6^B2E<]T4q0V1AS!Y]+?VGkAMcRn4>o2[@Qk5`1M(--4s2sDAS#F:+?VPB@q%V24>UP\@Qkns1M(0.4s2sG@52=W%6QFY0JG[54>US''1-QgC2ISC$4q0V1AhZ/-+?VGl0K;6=4>pV*1-Q.01M/=$4s2sDAh[XW+?VPj2)mc/4>US(0g6^B1M/?s4s2sG@5qd]%6QFY0f;-;4>US(2Ei6G2IU#L4q0V1Ahc;0+?VGl0k!6g4>pVX1-Q.01M/@O4s2sDAhdg[+?VPjA77Y24>US)2*N-F1M/C#4s2sG@PTW$%6QFY11<?h4>US)@Qkns2I\IQ4q0V1Ahmj[+?VGl11WQk4>pY*2EhR41M/Eu4s2sDAhuA0+?VPk2DIB)4>US*@6Per1M/FP4s2sG@Q-50%6QFY1M&`m4>US*Aj.>"2I\X%4q0V1Ai)5++?VGl1bq6;4>pY.3Bdm71M/I%4s2sDAi)G1+?VPk@:_V34>US+Aj.>"1M/Ku4s2sG@Uh8Z%6QFY2)IK>4>US,2Ei6G2I^2P4q0V1Ai2M2+?VGl2*!iC4>pYZ2EhR41M/LR4s2sDAi4''^+?VPkAR[h44>US-1HlpD1M/O%4s2sG@l$&-%6QFY2E!`A4>US-3''JHI2IeQt4q0V1Ai=3a+?VGl2_dK=4>p\,A3LGb1M/R+4s2sDAiF-^+?VPl2e5)]4>US.@Qkns1M/RV4s2sG@lQ2,%6QFY2e>/q4>US/0g6^B2Ie^(4q0V1AiMV2+?VGl3&j)E4>p\01-Q.01M/U,4s2sDAiO6`+?VPl3B9844>US/Aj.>"1M/X$4s2sG@q%D]%6QFY3AE]?4>US02*N-F2Ig3*4q0V1AiVb5+?VGl3B'',E4>p\Z0g6%/1M/X-4s2sDAiX9`+?VPl@lZ^^4>USX0KpUA1M1&N4s2sG@q@AY%6QFY@5^:l4>USX3''JHI2Ig<04q0V1Amo+3+?VGl@:DDC4>p_(@Qk5`1M1)P4s2sDAn!S\+?VPm1-%N-4>USY2Ei6G1M1)T4s2sGA2?),%6QFY@Q6Oo4>USY3BeQJ2InU''4q0V1An#45+?VGl@UhSE4>p_+A3LGb1M1*-4s2sDAn#@9+?VPm2*!i04>USZ1HlpD1M1,R4s2sGA2ZG3%6QFY@lQXp4>USZ@6Per2Ina*4q0V1An,@8+?VGl@qInI4>p_02a.[51M1/O4s2sDAn3Y\+?VPm3+G,]4>US[@6Per1M10/4s2sGA7IDZ%6QFYAMQFl4>US\1d3$E2Ip>X4q0V1An<qc+?VGlAN;ps4>p_]@6P,_1M1304s2sDAnEe^+?VPmAiDm_4>US]1d3$E1M15W4s2sGAMH2/%6QFYAiDmr4>US]3BeQJ2J"UT4q0V1AnGI8+?VGlAn4(J4>pb+1Hl711M1614s2sDAnGX=+?VPn11EEV4>\`G2a/?H1b^UD4s2sGAM[g[%6QI$0O[-f4>\`G@Qkns2J"^$4q0V20JP7F+?VJ70ekj74>pb.@Qk5`1b^X>4s2sE0JP@I+?VPn2.\r\4>\`H2Ei6G1b^XC4s2sGAN"*`%6QI$0fV?>4>\`H3BeQJ2J"g&4q0V20JR*%+?VJ70kENk4>pb2@m1>a1b^[?4s2sE0JYFJ+?VPn@:;>/4>\`I3BeQJ1b^[n4s2sGARdP\%6QI$11NKj4>\`IA3M+u2J$B-4q0V20JbCH+?VJ71GM''94>pb]1Hl711b^^C4s2sE0JbUN+?VPnAn=.84>\`J2a/?H1b^^F4s2sGAhYr''%6QI$1LiTk4>\`JA3M+u2J+[#4q0V20Jd<)+?VJ71b_*94>pe,1-Q.01b^a@4s2sE0JkOK+?VPo11EEV4>\`K1HlpD1b^aC4s2sGAhu/*%6QI$1grQj4>\`K@Qkns2J+g*4q0V20Jm9''+?VJ71h8cm4>pe/@6P,_1b^at4s2sE0JmB*+?VPo2.\r\4>\`L1-QgC1b^dC4s2sGAi=0`%6QI$2)[W@4>\`L3''JHI2J+mX4q0V20K!?(+?VJ72.Sln4>pe2A3LGb1b^gB4s2sE0K([M+?VPo@5C(V4>\`M1d3$E1b^gF4s2sGAmo77%6QI$2IScl4>\`MA3M+u2J-GQ4q0V20K1^M+?VJ72`!W?4>pe^Aj-Yd1b^jH4s2sE0K1pS+?VPoAR[h44>\`N@m2"t1b^k!4s2sH0JG@J%6QI$3&EfA4>\`O3BeQJ2_Zsp4q0V20K<N*+?VJ73+G,p4?"rL2a.[^DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>\`P0g6^B1b^pF4s2sH0JtOJ%6QI$3B98G4>\`P@6Per2_[1#4q0V20KE`/+?VJ7@50qg4?"rS3''Id61b`>p4s2sE0OZk''+?VS:@:DD04>\a#3BeQJ1b`?I4s2sH0Oct)%6QI$@:h\G4>\a$0KpUA2_\c%4q0V20Od%++?VJ7@UVGC4?"uL3Bdm71b`Do4s2sE0Olk%+?VS;1c[`/4>\a%@6Per1b`EM4s2sH0fCjP%6QI$A2?Cl4>\a&1d3$E2_d9P4q0V20P"]X+?VJ7A7[qI4?#!(3Bdm71b`Jr4s2sE0P*%(+?VS;@lQX]4>\a''2a/?H1b`K#4s2sH0k<+)%6QI$ARRbF4>\a''@m2"t2_el$4q0V20P+cY+?VJ7AS"%J4?#!+A3LGb1b`KQ4s2sE0P3"&+?VS;An!q54>\a(0g6^B1b`Mt4s2sH0kOu\%6QI$AiMss4>\a(3BeQJ2_m-u4q0V20P4fY+?VJ7An4(J4?##O2*MI31b`NQ4s2sE0P4o\+?VS<1LWHV4>\cH0KpUA1bg[=4s2sH1,EH)%6QI%0Jbm84>\cH2*N-F2_m3J4q0V20ebRN+?VJ80KD<>4?##Q3''Id61bg[p4s2sE0ed0&+?VS<2DIB)4>\cI1d3$E1bg^B4s2sH1,psO%6QI%1,D*:4>\cJ1d3$E2_nu)4q0V20etUM+?VJ81,_<=4?#$-@m1>a1bgaG4s2sE0f!3%+?VS=0k*<U4>\cJA3M+u1bgat4s2sH1GUsS%6QI%1GD!84>\cK0g6^B2`!6J4q0V20f(RK+?VJ81G_3;4?#&PANgPc1bgdC4s2sE0f([N+?VS=1c.B*4>\cKAj.>"1bgg@4s2sH1H/`+%6QI%1bq6;4>\cL1HlpD2`!EO4q0V20f1jR+?VJ81grQj4?#&V2EhR41bgh!4s2sE0f:XK+?VS=@PU+V4>\cM1d3$E1bgjF4s2sH1LiF/%6QI%2)[W@4>\cM2a/?H2`"rR4q0V20f<E(+?VJ82.Jfm4?#'',A3LGb1bgk!4s2sE0fCaM+?VS=AMZLZ4>\cN1-QgC1bgmE4s2sH1M&R1%6QI%2E*fB4>\cN3''JHI2`#&V4q0V20fEK)+?VJ82Inuo4?#)N2*MI31bgpD4s2sE0fLmP+?VS>1,(m$4>\cO1d3$E1bgpH4s2sH1bppP%6QI%2`EoC4>\cO3BeQJ2`*9u4q0V20fNN)+?VJ82e,#o4?#)PANgPc1bgq"4s2sE0fUjN+?VS>1G_3(4>\cP1HlpD1bgsI4s2sH1c&`-%6QI%3&WrC4>\cP2a/?H2`*?I4q0V20fWW++?VJ83+Y8r4?#)S3Bdm71bgt%4s2sE0f^sP+?VS>2.\r\4>\cQ1HlpD1bh!I4s2sH1c@0S%6QI%3AiuC4>\cQ2a/?H2`*EP4q0V20f`Z++?VJ83FY/p4?#)V1-Q.01biDn4s2sE0juh$+?VS>3FtA`4>\d$2Ei6G1biDt4s2sH1gr=,%6QI%@Q-In4>\d%3''JHI2`,)$4q0V20k2q%+?VJ8@kp4j4?#,P@6P,_1biJt4s2sE0k3+*+?VS?1,V6)4>\d&3''JHI1biK#4s2sH2)8W)%6QI%@pqPD4>\d&A3M+u2`3BF4q0V20k4cY+?VJ8@qInI4?#,R2a.[51biMu4s2sE0k<1++?VS?2)@E*4>\d''3''JHI1biNL4s2sH2)Si,%6QI%A7IeG4>\d''A3M+u2`3KN4q0V20k=l[+?VJ8AM?:j4?#,UAj-Yd1biPr4s2sE0kE+(+?VS?2`3c.4>\d(2Ei6G1biQ#4s2sH2)mKX%6QI%AN2jr4>\d(3BeQJ2`3R''4q0V20kFcW+?VJ8AR[hG4?#,WANgPc1biSr4s2sE0kN1)+?VS?@PL%U4>\d)1d3$E1biT"4s2sH2.AO/%6QI%Ai;gq4>\d)3''JHI2`5&S4q0V20kOu\+?VJ8AnF4L4?#-.1d2@21bpa=4s2sE1,(FH+?VS?A2la^4>\fI@m2"t1bpas4s2sH2DJf-%6QI&0kNTl4>\fK1-QgC2`<U(4q0V21,:[M+?VJ91,V6<4?#/X2EhR41bpgr4s2sE1,<B(+?VS@@kp4W4>\fL1HlpD1bpjD4s2sH2Ip8\%6QI&1Gq?=4>\fL2Ei6G2`>2X4q0V21,CmR+?VJ91H@WA4?#001Hl711bpmD4s2sE1,LgO+?VSA0K;6*4>\fM3BeQJ1bpmr4s2sH2`!BV%6QI&2)RQ?4>\fN2Ei6G2`E[,4q0V21,WN)+?VJ92.Jfm4?#3-@m1>a1bpq#4s2sE1,^gM+?VSA@U_M14>\fO1HlpD1bpsG4s2sH2e6A]%6QI&2DmZ@4>\fO2Ei6G2`G;''4q0V21,_-V+?VJ92I\im4?#31A3LGb1bpt$4s2sE1,gpO+?VSB1,V6)4>\fP3''JHI1bq!M4s2sH3&Y50%6QI&2e>/q4>\fQ0KpUA2`Nd,4q0V21,q0U+?VJ93&j)E4?#6/@6P,_1bq%"4s2sE1,rc-+?VSB@pqP14>\fR2a/?H1bq''O4s2sH3AP#,%6QI&3Fb5q4>\fRA3M+u2`W]K4q0V21-&o0+?VJ9@5''kf4?#8W2a.[51brJp4s2sE11;t&+?VSC2)[W-ASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QI&@5L.j4>\g%3''JHI2`Wa(4q0V211Dq$+?VJ9@PU+i4?#8[A3LGb1brMs4s2sE11E+)+?VSC@5^:Y4>\g&@Qkns1brNP4s2sH3FZM_%6QI&@k^(h4>\g''1-QgC2`YA.4q0V211N+(+?VJ9@l-@l4?#920g6%/1brQ$4s2sE11O`V+?VSCAMu^]4>\g(1d3$E1brT!4s2sH@50c+%6QI&A2c[p4>\g(3''JHI2dnFQ4q0V211XiX+?VJ9A7IeG4?$\)2EhR41brTP4s2sE11Xu\+?VSk1L`NW4>\g)0KpUA1brVs4s2sH@5DLZ%6QI&AMcRn4>\g)2*N-F2dnOR4q0V211`C.+?VJ9AN2jr4?$\,0g6%/1brWR4s2sE11b&]+?VSk2`X&24>\g*2*N-F1brZ$4s2sH@6$),%6QI&AmmkG4>\g*@Qkns2dp,T4q0V211k#[+?VJ9An4(J4?$\WANgPc1c$g@4s2sE1GCUK+?VSk@pqP14>\iJ2a/?H1c$gF4s2sH@:Wt6%6QI''0P3Kk4>\iK0KpUA2dp;Y4q0V21GLmR+?VJ:0k!6g4?$_)@m1>a1c$jt4s2sE1GUXJ+?VSl1h&WX4>\iL0g6^B1c$mD4s2sH@Ph[\%6QI''11i]m4>\iM0KpUA2e"d(4q0V21G_$T+?VJ:1LWHi4?$_Z0Koq.1c$pt4s2sE1G`Q*+?VSl@l?L[4>\iN3''JHI1c$sK4s2sH@kqIV%6QI''1grQj4>\iN@m2"t2e+XS4q0V21GiZ,+?VJ:1hJoo4?$b,@m1>a1c%!K4s2sE1Gq0V+?VSm3B'',24>\iOANh5!1c%$D4s2sH@q%/V%6QI''2DmZ@4>\iP2a/?H2e-B04q0V21H&c-+?VJ:2_dK=4?$e)1d2@21c%''G4s2sE1H.*R+?VSn0O[-S4>\iQ2a/?H1c%("4s2sHA2-#,%6QI''2e,#o4>\iQANh5!2e4Zt4q0V21H/o0+?VJ:3&!N=4?$e+@Qk5`1c%*G4s2sE1H70S+?VSn11`WY4>\iR2Ei6G1c%*M4s2sHA2?50%6QI''3&j)E4>\iR@m2"t2e4a#4q0V21H8u1+?VJ:3A<W>4?$e/0g6%/1c%-L4s2sE1H@BX+?VSn2_dK*4>\iS@Qkns1c%.%4s2sHA2n-a%6QI''@50qg4>\j&1-QgC2e6?,4q0V21LW(''+?VJ:@5L.j4?$e[0g6%/1c&Pt4s2sE1LW1*+?VSn@Pg7X4>\j&3''JHI1c&Q#4s2sHA7At2%6QI''@:;>B4>\j&@m2"t2e6B.4q0V21LXiY+?VJ:@:h\G4?$e\@6P,_1c&Ss4s2sE1L`1)+?VSnA7Rk54>\j''2*N-F1c&T!4s2sHA7[GY%6QI''@Q6Oo4>\j''3BeQJ2e6JZ4q0V21LaoZ+?VJ:@V.eH4?$h*3Bdm71c&Vs4s2sE1Li7*+?VSo0k<HW4>\j(3''JHI1c&W%4s2sHAMRg\%6QI''@q.\F4>\j(A3M+u2e=dU4q0V21Lr1''+?VJ:A2-7j4?$h.2EhR41c&Yu4s2sE1Lr=++?VSo2)IK+4>\j)2a/?H1c&Z&4s2sHAMuP4%6QI''AMcRn4>\j*2*N-F2e>!Y4q0V21M(#Z+?VJ:ARdnH4?$k01d2@21c&]R4s2sE1M(,]+?VSp2IScY4>\j+ANh5!1c&`U4s2sHAmmY_%6QI(0JPa64>\lK1-QgC2eHMY4q0V21b`?%+?VJ;0Od3g4?$k_1d2@21c-mr4s2sE1b`K)+?VSpA7e"74>\lL1d3$E1c-pE4s2sI0JG1E%6QI(0fM9=4>\lL3''JHI3&!$D4q0V21biN)+?VJ;0kENk4?,#L2a.[51c-ss4s2sE1brQ)+?VV;2J,,^4>\lMA3M+u1c-t!4s2sI0K1aN%6QI(1GD!84>\lN1-QgC3&!:%4q0V21c$pO+?VJ;1H%E>4?,#S1d2@21c.!J4s2sE1c%-U+?VV;3+>&\4>\lNA3M+u1c.""4s2sI0OZ\"%6QI(1b_*94>\lO0g6^B3&"c$4q0V21c.!P+?VJ;1c.B=4?,$(0g6%/1c.$J4s2sE1c.0U+?VV;@l$:X4>\lO@Qkns1c.%!4s2sI0P"TU%6QI(1hJoo4>\lP0KpUA3&"o#4q0V21c70T+?VJ;2*!iC4?,&L2*MI31c.("4s2sE1c8f-+?VV<0k!6T4>\lQ2Ei6G1c.*L4s2sI0f:XK%6QI(2E3lC4>\lQ3BeQJ3&*9I4q0V21cAc++?VJ;2I\im4?,&R2*MI31c.+$4s2sE1cAo/+?VV<2_[E)4>\lQAj.>"1c.-G4s2sI0fM''U%6QI(2_mQ>4>\lR1HlpD3&*@(4q0V21cIBX+?VJ;2`X&E4?,&U@m1>a1c.0G4s2sE1cR9T+?VV<@UqY34>\lS@Qkns1c.1%4s2sI0kE:-%6QI(3+b>s4>\lT0KpUA3&,#$4q0V21c[9S+?VJ;3AWiA4?,''-@6P,_1c.3N4s2sE1c[KY+?VV=0K20)4>\lT3BeQJ1c.4$4s2sI1,*3%%6QI(3Fb5q4>\lTA3M+u3&33t4q0V21c],2+?VJ;3G(Gt4?,)NANgPc1c/Vq4s2sE1gr1(+?VV=11<?U4>\m''1d3$E1c/W!4s2sI1,CdO%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaY1gsrZ+?VJ;@:h\G4?,)SANgPc1c/Yq4s2sE1h&1''+?VV=2_dK*4>\m(2Ei6G1c/Z#4s2sI1,rf.%6QI(@Q?Up4>\m(@6Per3&3KS4q0V21h''uZ+?VJ;@V%_G4?,*)2*MI31c/\r4s2sE1h/=*+?VV=@:MJ14>\m)2Ei6G1c/]%4s2sI11E1+%6QI(@lZ^q4>\m)@Qkns3&4rP4q0V21h1&[+?VJ;@q@hH4?,*,0g6%/1c/]S4s2sE1h8:(+?VV=A2HIZ4>\m*1HlpD1c/`"4s2sI11Xr[%6QI(A2ZUo4>\m*3''JHI3&5&&4q0V21h:#Y+?VJ;A7@_F4?,*.A3LGb1c/`Q4s2sE1hA@)+?VV>0JPa#4>\m+2a/?H1c/c(4s2sI1G^jO%6QI(ARRbF4>\m+@Qkns3&<?M4q0V21hC5^+?VJ;AS++K4?,,R3Bdm71c/f!4s2sE1hJL,+?VV>2).9(4>\m,2Ei6G1c/f''4s2sI1H7BY%6QI(An4(J4>\m,Aj.>"3&=u''4q0V22)$gM+?VJ<0Jks94?,-,3Bdm71c6sr4s2sE2)&T*+?VV>AS++84>\oM1-QgC1c7!D4s2sI1b^^L%6QI)0f;-;4>\oM2a/?H3&E=!4q0V22)6sO+?VJ<1,M0;4?,/U@Qk5`1c7%#4s2sE2)?pM+?VV?@U_M14>\oO0g6^B1c7''E4s2sI1h(&\%6QI)1b_*94>\oP0g6^B3&NEH4q0V22)I''P+?VJ<1c%<<4?,2Q2a.[51c7*M4s2sE2)J`*+?VV@11NKW4>\oQ2*N-F1c7-L4s2sI2)[EX%6QI)2D@<;4>\oR1-QgC3&P,(4q0V22)[6S+?VJ<2DdT?4?,3,Aj-Yd1c70N4s2sE2)\l,+?VV@@q7b44>\oR@m2"t1c71%4s2sI2.U2\%6QI)2J#&p4>\oRAj.>"3&P8(4q0V22)d3Q+?VJ<2_dK=4?,303Bdm71c73J4s2sE2)d?U+?VV@Ammk44>\oS2a/?H1c73O4s2sI2D@$Q%6QI)2dnlm4>\oS@Qkns3&WKL4q0V22)m<S+?VJ<3&3Z?4?,5V1d2@21c76K4s2sE2)mEV+?VVA2.A`Y4>\oT2*N-F1c76N4s2sI2Do&0%6QI)3+G,p4>\oTA3M+u3&Y2$4q0V22*!Z\+?VJ<3FP)o4?,8R1-Q.01c8`%4s2sE2.AR0+?VVC1,;$&4>\p)Aj.>"1c8bs4s2sI3&G,/%6QI)@kg.i4>\p*1-QgC3&icN4q0V22.JR/+?VJ<@lZ^q4?,;Y0g6%/1c8cT4s2sE2.SC)+?VVC2e>/^4>\p+0g6^B1c8f!4s2sI3&iWV%6QI)A2c[p4>\p+3''JHI3&ioV4q0V22.U2\+?VJ<A7RkH4?,<10g6%/1c8fU4s2sE2.\I*+?VVCA2HIZ4>\p,1-QgC1c8i#4s2sI3+QM_%6QI)AN)dq4>\p,3BeQJ3&kM+4q0V22.^>_+?VJ<AS++K4?,>U1-Q.01c8l!4s2sE2.eR,+?VVD0fV?+4>\rM0KpUA1c@$B4s2sI3B/o\%6QI*0K20<4>\rM3''JHI3&tD-4q0V22DHsN+?VJ=0f)!94?-b''1-Q.01c@''K4s2sE2DJZ)+?VVl0fD3)4>\rO2Ei6G1c@*J4s2sI@5D=U%6QI*1-%N@4>\rO@6Per3+4[$4q0V22DSi-+?VJ=11i]m4?-b-1-Q.01c@-F4s2sE2D[-Q+?VVl2Inu\4>\rP1d3$E1c@-K4s2sI@5fl(%6QI*1LiTk4>\rPA3M+u3+4dV4q0V22Dd0Q+?VJ=1c%<<4?-bX0Koq.1c@0I4s2sE2Dd?V+?VVl@5C(V4>\rQANh5!1c@1&4s2sI@:Ee3%6QI*2)mcB4>\rR3BeQJ3+6?,4q0V22Dnr-+?VJ=2.Jfm4?-b\2EhR41c@4%4s2sE2Do&0+?VVlARRb34>\rRAj.>"1c@6G4s2sI@:`t5%6QI*2DRH=4>\rS1d3$E3+6DW4q0V22E!KX+?VJ=2E<rD4?-e(0Koq.1c@7''4s2sE2E#/2+?VVm0fD3)4>\rT0KpUA1c@9J4s2sI@PKl,%6QI*2`<iB4>\rT2a/?H3+=XP4q0V22E,,0+?VJ=2e5)p4?-e,ANgPc1c@<L4s2sE2E3NW+?VVm2J,,^4>\rU@Qkns1c@=''4s2sI@Q?2-%6QI*3B98G4>\rV@6Per3+FjT4q0V22E>51+?VJ=3Fb5q4?-h03Bdm71cAbr4s2sE2IS=(+?VVn3Fk;_4>\s)1-QgC1cAc!4s2sI@pq&T%6QI*@5U4k4>\s)@6Per3+HAU4q0V22IU&Y+?VJ=@:MJD4?-hZAj-Yd1cAcQ4s2sE2IU/\+?VVn@P^1W4>\s)Aj.>"1cAet4s2sI@q%>[%6QI*@PU+i4>\s*1d3$E3+HE,4q0V22I\O-+?VJ=@UVGC4?-h[Aj-Yd1cAfP4s2sE2I^/[+?VVn@lHR\4>\s+1d3$E1cAi%4s2sI@q@DZ%6QI*@q%VE4>\s+A3M+u3+HQ04q0V22Ig;^+?VJ=@qInI4?-k*1d2@21cAku4s2sE2InO++?VVo0K20)4>\s,@6Per1cAlR4s2sIA2c;.%6QI*AMu^p4>\s-2a/?H3+QN.4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN71cAr#4s2sE2J+^.+?VVp0P3KX4>\s.3BeQJ1cArU4s2sIAMc>0%6QI*An=.K4>\s.Aj.>"3+XsZ4q0V22_[-R+?VJ>0K;6=4?-n\@6P,_1cI*s4s2sE2_\c++?VVp@pqP14>\uO2a/?H1cI-t4s2sIAhc&)%6QI+0k*<h4>\uOAj.>"3+amS4q0V22_m''N+?VJ>1,1s84?-q.2EhR41cI0F4s2sE2_m0Q+?VVq1-%N-4>\uP2Ei6G1cI0K4s2sIAhuD1%6QI+1-%N@4>\uP@6Per3+asX4q0V22_ni++?VJ>11NKj4?-q01d2@21cI1$4s2sE2_nu/+?VVq1h8cZ4>\uQ1HlpD1cI3I4s2sIAiX<a%6QI+1H@WA4>\uQ@m2"t3+cT24q0V22`*<S+?VJ>1c.B=4?-qa@6P,_1cI7#4s2sE2`,)0+?VY<0JG["4>\uRAj.>"1cI9G4s2sJ0JG@J%6QI+2)IK>4>\uS2Ei6G3A<.!4q0V22`3NX+?VJ>2)mcB4?5)M1d2@21cI:#4s2sE2`5&.+?VY<0f_E,4>\uS@m2"t1cI<J4s2sJ0JR*%%6QI+2DdT?4>\uT2*N-F3A<6D4q0V22`>).+?VJ>2I\im4?5)P0g6%/1cI=''4s2sE2`>52+?VY<1grQW4>\uTAj.>"1cI?I4s2sJ0Jm<(%6QI+2_dK=4>\uU1-QgC3A<<E4q0V22`ENV+?VJ>2`3cA4?5)Q1Hl711cI?P4s2sE2`E`\+?VY<2.JfZ4>\uU@6Per1cI@&4s2sJ0K(UK%6QI+2e>/q4>\uV0KpUA3A<@%4q0V22`NTW+?VJ>3&EfA4?5)S2a.[51cIBP4s2sE2`N`[+?VY<2e,#\4>\uV3''JHI1cIC)4s2sJ0K3T-%6QI+3+Y8r4>\uVAj.>"3A<EO4q0V22`W`Z+?VJ>3As&D4?5*(1-Q.01cIF''4s2sE2`YA3+?VY<@:h\44>]!*ANh5!1cJl"4s2sJ0f1mS%6QI+@Q$Cm4>]!+2a/?H3AEEP4q0V22e$2Z+?VJ>@U_MD4?5,T2a.[51cJo"4s2sE2e+X-+?VY=@:DD04>]!,1d3$E1cJo%4s2sJ0k"WW%6QI+@lHRo4>]!,3''JHI3AFu"4q0V22e->]+?VJ>A26=k4?5-+@Qk5`1cJr$4s2sE2e4a/+?VY=A2c[]4>]!-2*N-F1cJr''4s2sJ0k=cX%6QI+A7IeG4>]!-ANh5!3AN<C4q0V22e=d/+?VJ>AMcRn4?5/QAj-Yd1cJuT4s2sE2e?M`+?VY>2DdT,4>]!/2a/?H1cK#+4s2sJ11E.*%6QI,0Ju$:4>]#O3BeQJ3AWC$4q0V23&"o-+?VJ?0P3Kk4?52QANgPc1cR3E4s2sE3&*0P+?VY?1grQW4>]#Q0KpUA1cR6F4s2sJ1LXcW%6QI,1GD!84>]#R0g6^B3A`TJ4q0V23&>#-+?VJ?1M&`m4?58Z0g6%/1cR<G4s2sE3&EBS+?VYA@5C(V4>]#S2Ei6G1cR<N4s2sJ2.C#Y%6QI,1grQj4>]#S@m2"t3Ak>(4q0V23&G21+?VJ?1hJoo4?5910g6%/1cR?N4s2sE3&NWY+?VYB1M/f[4>]#T@6Per1cR@&4s2sJ2Del,%6QI,2.\ro4>]#U1-QgC3Ara(4q0V23&WQV+?VJ?2DmZ@4?5;X1-Q.01cRBR4s2sE3&Y81+?VYB2`3c.4>]#UANh5!1cRC*4s2sJ2E3QX%6QI,2_[E<4>]#V0g6^B3Arj*4q0V23&`TV+?VJ?2`!W?4?5;ZA3LGb1cREN4s2sE3&`]Y+?VYB3A`o/4>]#V2Ei6G1cREQ4s2sJ2E<`\%6QI,2`NuD4>]#V3BeQJ3Arm,4q0V23&b;1+?VJ?2e,#o4?5<.2a.[51cRHL4s2sE3&iZW+?VYB@k^(U4>]#W1HlpD1cRHQ4s2sJ2IeR-%6QI,3&j)E4>]#W@Qkns3AtAV4q0V23&kD3+?VJ?3+P2q4?5<12*MI31cRI,4s2sE3&rZV+?VYBA7@_34>]#X0g6^B1cRKN4s2sJ2J"X-%6QI,3AWiA4>]#X2*N-F3AtG.4q0V23&rl\+?VJ?3B'',E4?5<2Aj-Yd1cRKU4s2sE3&tD2+?VYBAi;g^4>]#XANh5!1cRL-4s2sJ2_[-R%6QI,@PU+i4>]$,1HlpD3B&iN4q0V23+Fm2+?VJ?@q%VE4?5?4Aj-Yd1cSuT4s2sE3+HJ_+?VYD0Ju$''4>]$.0g6^B1cT#&4s2sJ3&**N%6QI,A2QOn4>]$.2Ei6G3B/`P4q0V23+P$5+?VJ?A77YE4?5AW3''Id61cT#V4s2sE3+QVb+?VYD1h/]Y4>]$/A3M+u1cT&X4s2sJ3+QJ^%6QI,AhZCk4>]$00g6^B3B1S)4q0V23+ap0+?VJ?Ai)[o4?5B4A3LGb1cT)*4s2sE3+b-6+?VYDAn+"64>]$0@6Per1cT)V4s2sJ3A<HW%6QI-0Ju$:4>]&P2a/?H3B8p*4q0V23A<EV+?VJ@0KD<>4?5DZ0g6%/1c[9F4s2sE3AE<R+?VYE@:MJ14>]&Q2*N-F1c[9K4s2sJ3FXd.%6QI-0f_E?4>]&Q@Qkns3B:V(4q0V23ANHU+?VJ@1,_<=4?6h(ANgQ7DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>]&R@6Per1c[=#4s2sJ@5Bf*%6QI-1GV-:4>]&S1HlpD3FOdR4q0V23AWTX+?VJ@1H7Q@4?6h.3Bdm71c[@$4s2sE3AY//+?VYmA2?CY4>]&T2*N-F1c[BQ4s2sJ@Pff''%6QI-2DdT?4>]&V2*N-F3FcYW4q0V23AtG4+?VJ@2J,,q4?6q10Koq.1c[KS4s2sE3B(A1+?VYpAiMs`4>]&X0g6^B1c[NN4s2sJAN;M0%6QI-3&a#D4>]&X3''JHI3FuYV4q0V23B1M4+?VJ@3+P2q4?6t_A3LGb1c[QN4s2sE3B8iY+?VYqA7@_34>]&Y2Ei6G1c[QT4s2sJAhZ/-%6QI-3Fb5q4>]&YA3M+u3G(*V4q0V23FX[++?VJ@@PU+i4>Sm*1Hl711c]&X4s2sE3Fjg-+?VGi@UqY34>^J#1d3$E1gr''q4s2sE@q918%6QIU0Od3g4>^J#@m2"t1hAHs4q0V2@50K#+?VJh0etp84>^V-1d2@21gr*r4s2sE@50Z(+?VJl2J#&]4>^J$3''JHI1gr+J4s2sEAN+$]%6QIU1,D*:4>^J%1d3$E1hC,P4q0V2@5;FY+?VJh1GD!84>^V]Aj-Yd1gr1!4s2sE@5Bl,+?VJm2)@E*4>^J&3BeQJ1gr1K4s2sEAi2J1%6QIU1L`Nj4>^J&A3M+u1hJUU4q0V2@5KZ%+?VJh1bh0:4>^Y/3''Id61gr3r4s2sE@5Kf)+?VJm2e"r[4>^J(1d3$E1gr7!4s2sEAn,=7%6QIU2)[W@4>^J(2a/?H1hL604q0V2@5U&/+?VJh2.8Zk4>^Y\3''Id61gr:#4s2sE@5^&.+?VM80f)!&4>^J*1HlpD1gr="4s2sF0JtgR%6QIU3&!N=4>^J+0g6^B2)%%!4q0V2@5p#++?VJh3&<`@4>efQA3LGb1grC$4s2sE@6$2/+?VM90JYg$4>^J,3BeQJ1grCR4s2sF0ekIJ%6QIU3Fb5q4>^J,A3M+u2)-gE4q0V2@6%m_+?VJh@5''kf4>eiJ@6P,_1gsfJ4s2sE@::rU+?VM91,M0(4>^JT3BeQJ1gsg$4s2sF0f(dQ%6QIU@:_VF4>^JU0g6^B2)-sF4q0V2@:Eb2+?VJh@V.eH4>ej%1-Q.01gslJ4s2sE@:M&V+?VM9@PBtT4>^JVA3M+u1gsm*4s2sF0kN4*%6QIUA26=k4>^JW1HlpD2)6pF4q0V2@:V2Y+?VJhA2ZUo4>elM0g6%/1gsp*4s2sE@:Wq5+?VM:2.\r\4>^JX1d3$E1gsrQ4s2sF1-%9W%6QIUAN)dq4>^JX3BeQJ2)8TM4q0V2@:`q4+?VJhARmtI4>em*0Koq.1gsuN4s2sE@:h>[+?VM;0JG["4>^JY@Qkns1gt!+4s2sF1G`Q*%6QIV0JYg74>^M$1HlpD2)@0H4q0V2@PBW&+?VJi0K20<4>eoR3''Id61h&0n4s2sE@PKT$+?VM;@PU+V4>^M%@Qkns1h&1N4s2sF1M/I-%6QIV1LrZl4>^M''ANh5!2)JcO4q0V2@Pfc&+?VJi1bh0:4>es*1-Q.01h&9s4s2sE@Pfl)+?VM<@l?L[4>^M)3BeQJ1h&=O4s2sF2)f&0%6QIV2.Jfm4>^M)ANh5!2)R?J4q0V2@Q#r)+?VJi2DRH=4>euV1Hl711h&@!4s2sE@Q$&,+?VM=3FtA`4>^M*2*N-F1h&@$4s2sF2.8:)%6QIV2`3cA4>^M+3BeQJ2)[-u4q0V2@Q.j^+?VJi3&!N=4>f#Q2a.[51h&F#4s2sE@Q62.+?VM>1bh0''4>^M,2a/?H1h&F)4s2sF2Der.%6QIV3+>&o4>^M,@m2"t2)[?L4q0V2@Q7m^+?VJi3+Y8r4>f#T3Bdm71h&FV4s2sE@Q?,++?VM>2Ieo[4>^M-@6Per1h&IS4s2sF2E<c]%6QIV3G(Gt4>^MU1-QgC2)\qu4q0V2@UV&V+?VJi@5L.j4>f$,3''Id61h''lP4s2sE@UV5[+?VM>AMu^]4>^MUANh5!1h''m*4s2sF2_ZsM%6QIV@PL%h4>^MV1-QgC2)d3L4q0V2@U_2Y+?VJi@Q$Cm4>f&Q3Bdm71h''p)4s2sE@U`q5+?VM?2E*f/4>^MW1HlpD1h''rO4s2sF2`EZZ%6QIV@qInI4>^MX0KpUA2)f&#4q0V2@Uq;Z+?VJiA2QOn4>f''/A3LGb1h(!(4s2sE@Urq3+?VM@0Jbm%4>^MY2Ei6G1h(#T4s2sF3&G,/%6QIVARmtI4>^MYANh5!2)mQL4q0V2@V.;X+?VJiAhcIl4>f)X@m1>a1h(&U4s2sE@V.S`+?VM@@PBtT4>^MZ@m2"t1h(''-4s2sF3+QM_%6QIW0K)*;4>^P%2a/?H2*!EK4q0V2@kfi)+?VJj0fD3<4>f,Y@m1>a1h/7!4s2sE@kfr,+?VMA3AE],4>^P&@6Per1h/7L4s2sF3FO^-%6QIW0kNTl4>^P''0KpUA2*#,''4q0V2@kp&.+?VJj11NKj4>f-11-Q.01h/<r4s2sE@l#l(+?VMAAiW$a4>^P(1d3$E1h/=!4s2sF@5'']*%6QIW1H7Q@4>^P(3BeQJ2.84"4q0V2@l%^\+?VJj1b_*94>gP''Aj-Yd1h/?t4s2sE@l,u*+?VMi1h&WXASu$fAo_<tB4VM]0eb:(@V''1dDIR3u@;]^h%6QIW1c.B=4>^P)2*N-F2.8?r4q0V2@l-20+?VJj1grQj4>gP*3Bdm71h/C"4s2sE@l6,-+?VMi3FtA`4>^P*@Qkns1h/Et4s2sF@:EY/%6QIW2D[N>4>^P+2*N-F2.:#Q4q0V2@l?5/+?VJj2E3lC4>gPX3Bdm71h/FQ4s2sE@l@m^+?VMiAMQFY4>^P,0KpUA1h/I"4s2sF@:`t5%6QIW2`*]@4>^P,2*N-F2.:**4q0V2@lQ2,+?VJj3&3Z?4>gS(ANgPc1h/L)4s2sE@lQJ4+?VMj2DmZ-4>^P-@m2"t1h/LU4s2sF@Q6)+%6QIW3B'',E4>^P.3''JHI2.J<t4q0V2@l\!^+?VJj3Fb5q4>gV''Aj-Yd1h0s)4s2sE@q%,U+?VMk@5U4X4>^PX1HlpD1h1#P4s2sFA2H#)%6QIW@lHRo4>^PX3''JHI2.SR#4q0V2@q/q2+?VJj@q%VE4>gY/0g6%/1h1$-4s2sE@q78W+?VMl3A`o/4>^PYAj.>"1h1)N4s2sFA7]77%6QIWAMQFl4>^PZ1HlpD2.U;Y4q0V2@qIGZ+?VJjAhuUn4>g\.@6P,_1h1,S4s2sE@qIS^+?VMm2_[E)4>^P[3''JHI1h1,X4s2sFAN+3b%6QIX0K20<4>^S&3''JHI2.^</4q0V2A2%FU+?VJk0Od3g4>g\]1d2@21h8:M4s2sEA2%RY+?VMmAN)d^4>^S''1-QgC1h8<s4s2sFAhZ/-%6QIX1,(m74>^S(0g6^B2.ea''4q0V2A25r)+?VJk1,M0;4>g_13''Id61h8@$4s2sEA26//+?VMn@:MJ14>^S(A3M+u1h8@Q4s2sFAn*ea%6QIX1GM''94>^S)1-QgC2.gAS4q0V2A2?&++?VJk1H%E>4>g_]A3LGb1h8CN4s2sEA2@^Z+?VMnARmt64>^S)Aj.>"1h8Es4s2sFAnGL9%6QIX1c%<<4>^S*1d3$E2D?jB4q0V2A2Ig\+?VJk1hJoo4>nlM2EhR41h8I!4s2sEA2Q/,+?VP92.f#]4>^S+2a/?H1h8I''4s2sG0K:jP%6QIX2.8Zk4>^S+@Qkns2D@+!4q0V2A2[p]+?VJk2J#&p4>nm(2a.[51h8O!4s2sEA2c5,+?VP9A7Rk54>^S-2*N-F1h8O''4s2sG0P37-%6QIX3&!N=4>^S.1-QgC2DHsr4q0V2A2n!]+?VJk3+>&o4>noP0Koq.1h8RW4s2sEA2u>-+?VP:2`!W,4>^S/2*N-F1h8U)4s2sG0f_!Q%6QIX3FY/p4>^S/A3M+u2DJZM4q0V2A778X+?VJk@5L.j4>np)ANgPc1h:#Q4s2sEA77D\+?VP:An4(74>^SW3''JHI1h:#T4s2sG1,1UL%6QIX@:h\G4>^SX0KpUA2DR''D4q0V2A7@G\+?VJk@Q-In4>nrP0g6%/1h:&U4s2sEA7At2+?VP;2.A`Y4>^SY@Qkns1h:*,4s2sG11N.)%6QIX@q@hH4>^SYAj.>"2DScN4q0V2A7RGZ+?VJkA2?Cl4>ns,2*MI31h:-,4s2sEA7T78+?VP<1bq6(4>^S[0KpUA1h:/P4s2sG1GiW+%6QIXARmtI4>^S[ANh5!2D[=(4q0V2A7d_`+?VJkAiDmr4>o!+Aj-Yd1hA?r4s2sEAM>o(+?VP=1,M0(4>^V''2*N-F1hA@!4s2sG1brK''%6QIY0K20<4>^V''3''JHI2Dd1$4q0V2AMIXX+?VJl0k3Bi4>o$*ANgPc1hAI!4s2sEAMZ/,+?VP>2)IK+4>^V*2*N-F1hAI$4s2sG2)R?W%6QIY1LWHi4>^V*@Qkns2Dnqu4q0V2AM[g[+?VJl1LrZl4>o''+Aj-Yd1hAIS4s2sEAMc))+?VP>@kp4W4>^V+2Ei6G1hAL&4s2sG2D?mM%6QIY1c[`B4>^V+@6Per2E!:!4q0V2AMdm\+?VJl1h8cm4>o)Q1Hl711hAO$4s2sEAMl>/+?VP?2)%3''4>^V,3''JHI1hAOQ4s2sG2E!6Q%6QIY2.A`l4>^V,@m2"t2E!I''4q0V2AMu;-+?VJl2D[N>4>o)W@Qk5`1hART4s2sEAN"*`+?VP?@V.e54>^V.0g6^B1hAU$4s2sG2InU-%6QIY2`*]@4>^V.2*N-F2E#)S4q0V2AN)S4+?VJl2dnlm4>o*/3''Id61hAUU4s2sEAN+-`+?VP?AS"%74>^V.ANh5!1hAUX4s2sG2_[''P%6QIY3&<`@4>^V/1d3$E2E*BH4q0V2AN4*^+?VJl3+>&o4>o,T@Qk5`1hA[+4s2sEAN;_6+?VP@3B0234>^V0A3M+u1hC)L4s2sG2e4g1%6QIY@50qg4>^VX1-QgC2E,/X4q0V2ARRJ\+?VJl@5g@m4>o/Q1Hl711hC*(4s2sEART%3+?VPA0k<HW4>^VXA3M+u1hC*,4s2sG3&<9Q%6QIY@l$:k4>^VZ2*N-F2E5;X4q0V2ARf=9+?VJlA2$1i4>o2U3Bdm71hC2X4s2sEARo45+?VPB3+>&\4>^V\1HlpD1hC5U4s2sG3FX[+%6QIYAN;ps4>^V\@Qkns2E>5X4q0V2AS#F:+?VJlAS++K4>o30ANgPc1hC8T4s2sEAS*e`+?VPBAMlX\4>^Y(2Ei6G1hJF#4s2sG@5Ku.%:sEf@V0XhDJ*Mi%5BOj+C\npBl7BlEa`iuAIUaYAhZ2.+?VJm0KD<>4>pV)@m1>a1hJHr4s2sEAhc#(+?VPj2`*]-4>^Y)3BeQJ1hJIN4s2sG@6%p`%6QIZ0kNTl4>^Y*1-QgC2IU-+4q0V2AhlA1+?VJm11<?h4>pY&1-Q.01hJLT4s2sEAhu/*+?VPk1H.K,4>^Y+2*N-F1hJO%4s2sG@Pg)/%6QIZ1H7Q@4>^Y+@6Per2I\O(4q0V2Ai2S4+?VJm2.A`l4>p\,1-Q.01hJUU4s2sEAi4-`+?VPl2.A`Y4>^Y.2a/?H1hJX*4s2sG@q%,U%6QIZ2IScl4>^Y.@Qkns2Ig5S4q0V2Ai=-_+?VJm2Inuo4>p\[0Koq.1hJXX4s2sEAiDD-+?VPlA2ug_4>^Y/0g6^B1hJ[%4s2sG@q9(5%6QIZ2e>/q4>^Y/Aj.>"2InRP4q0V2AiMY3+?VJm3&WrC4>p_.1d2@21hJ^X4s2sEAiO?c+?VPm3As&14>^Y0Aj.>"1hJa&4s2sGA78n1%6QIZ3AWiA4>^Y11d3$E2Ip8U4q0V2AiXEd+?VJm@5:"h4>p_]1-Q.01hL2O4s2sEAn!P[+?VPn2)@E*4>^YZ3BeQJ1hL3*4s2sGARRM]%6QIZ@l$:k4>^Y[1d3$E2J$H04q0V2An,@8+?VJm@q@hH4>pe+3Bdm71hL8P4s2sEAn3Y\+?VPo1,_<*4>^Y\@m2"t1hL9/4s2sGAi4''^%6QIZAMu^p4>^Y]2a/?H2J+p,4q0V2An<td+?VJmARRbF4>pe2@Qk5`1hL</4s2sEAn>L:+?VPo3Aiu04>^Y^2*N-F1hL>X4s2sGAn*__%6QIZAn+"I4>^Y^A3M+u2J-MX4q0V30JG=I+?VM80Ju$:4?"rK1-Q.02)$aq4s2sF0JR-&+?VS:A2?CY4>efJ2Ei6G2)$dF4s2sH0f!9''%6QL%11NKj4>efJA3M+u2_d0F4q0V30JbRM+?VM81H%E>4?"uS2a.[52)$gG4s2sF0Jb^Q+?VS;@5''kS4>efK@Qkns2)$gr4s2sH0k!%*%6QL%1grQj4>efL@m2"t2_m''r4q0V30Jt[N+?VM82)RQ?4?##O3''Id62)$mI4s2sF0JtjS+?VS<2)@E*4>efN2Ei6G2)$pJ4s2sH11E%''%6QL%2_[E<4>efO0g6^B2_nuR4q0V30K1gP+?VM82`<iB4?#&N2a.[52)$sL4s2sF0K3E(+?VS=1,hB+4>efP1d3$E2)%!I4s2sH1H&]+%6QL%3A<W>4>efQ0g6^B2`"lN4q0V30KCsR+?VM83As&D4?#''*@Qk5`2)%%"4s2sF0KEW,+?VS=A2c[]4>eg$1HlpD2)&Gq4s2sH1bgpQ%6QL%@5pFn4>eg$3BeQJ2`*<F4q0V30O\ES+?VM8@:MJD4?#)R2*MI32)&HL4s2sF0O\NV+?VS>1cRZ.4>eg%1HlpD2)&Jr4s2sH1cAl.%6QL%@Pp=l4>eg%3''JHI2`*HI4q0V30OeKT+?VM8@UqYF4?#)V1d2@22)&NN4s2sF0OnZX+?VS>AhlOZ4>eg''0KpUA2)&Pr4s2sH2)&N(%6QL%A7@_F4>eg''@m2"t2`3F#4q0V30P*+*+?VM8AMu^p4?#,X3Bdm72)&Vr4s2sF0P3%''+?VS?AMZLZ4>eg)2a/?H2)&W&4s2sH2D@''R%6QL%An=.K4>eg)Aj.>"2`<F''4q0V30eb=G+?VM90JYg74?#/S1Hl712)-dA4s2sF0ebOM+?VS@1c@N,4>eiIA3M+u2)-dr4s2sH2E!KX%6QL&0P3Kk4>eiJ0g6^B2`<R)4q0V30ekIJ+?VM90f2'':4?#/X0Koq.2)-gF4s2sF0ek[P+?VS@3As&14>eiJ@6Per2)-gq4s2sH2E>20%6QL&1,D*:4>eiK2*N-F2`>/U4q0V30etXN+?VM91,hB>4?#0/1Hl712)-ju4s2sF0f(LI+?VS@AnF494>eiL2Ei6G2)-mG4s2sH2_e`)%6QL&1H@WA4>eiL@6Per2`EKL4q0V30f1UK+?VM91bq6;4?#2U2EhR42)-pF4s2sF0f1dP+?VSA2.f#]4>eiMA3M+u2)-q!4s2sH2`P>3%6QL&2.8Zk4>eiN@Qkns2`G8-4q0V30fCaM+?VM92DdT?4?#32@6P,_2).""4s2sF0fET,+?VSB2.A`Y4>eiP0KpUA2).$E4s2sH3&W]Z%6QL&2e"rn4>eiP@m2"t2`P5U4q0V30fUmO+?VM93&3Z?4?#611d2@22).("4s2sF0fWZ,+?VSBAn+"64>eiQAj.>"2).*F4s2sH3AE6P%6QL&3As&D4>eiR3''JHI2`W]O4q0V30f`Z++?VM93Fb5q4?#8X1Hl712)/Mr4s2sF0juq''+?VSC3+4u[4>ej%A3M+u2)/NO4s2sH3FZD\%6QL&@P^1j4>ej&1d3$E2`YG)4q0V30k*"(+?VM9@Q-In4?#93@6P,_2)/QK4s2sF0k+TU+?VSk0JPa#4>ej''Aj.>"2)/Vq4s2sH@5p#+%6QL&A2-7j4>ej(1-QgC2dn[''4q0V30k<+)+?VM9A2QOn4?$\/2EhR42)/WR4s2sF0kE%&+?VSk@V%_44>ej*0KpUA2)/\t4s2sH@PTl+%6QL&AiW$t4>ej*@Qkns2e"[&4q2(@A7B.k@;]^h%1P$G0Hah9B5)6mAo_<tB4VN72)6jD4s2sF1,([O+?VSl@pqP14>elK2a/?H2)6mG4s2sH@khRZ%6QL''0f_E?4>elK@6Per2e+X&4q0V31,3?(+?VM:0kNTl4?$b-@Qk5`2)6ps4s2sF1,<B(+?VSm@UhS24>elLANh5!2)6q!4s2sH@q.A[%6QL''1GV-:4>elM1HlpD2e-AY4q0V31,CaN+?VM:1Gq?=4?$b\@m1>a2)6sJ4s2sF1,E?&+?VSmAhcIY4>elM@Qkns2)6su4s2sH@qIP]%6QL''1c.B=4>elN2*N-F2e4^!4q0V31,NH(+?VM:1h/]l4?$e.2*MI32)7""4s2sF1,NT,+?VSn2.A`Y4>elO3BeQJ2)7$u4s2sHA77>Z%6QL''2DIB<4>elP1-QgC2e6E.4q0V31,`Q)+?VM:2I\im4?$h*2a.[52)7(#4s2sF1,`]-+?VSo0ebd#4>elPAj.>"2)7*E4s2sHAMH,-%6QL''2`!W?4>elQ1d3$E2e=d#4q0V31,h0V+?VM:2`X&E4?$h.1d2@22)7+#4s2sF1,i`-+?VSo2)[W-4>elQANh5!2)7+&4s2sHAMlJ3%6QL''3&<`@4>elR1d3$E2e=pY4q0V31,q0U+?VM:3&a#D4?$h22a.[52)7.$4s2sF1,rf.+?VSp1M&`Z4>elRANh5!2)70G4s2sHAi);-%6QL''3AWiA4>elS1d3$E2eFmW4q0V31-%<X+?VM:3FP)o4?$k0Aj-Yd2)71(4s2sF11;n$+?VSp2e,#\4>em&1HlpD2)8Ss4s2sHAiM\4%6QL''@5U4k4>em&2a/?H2eG''.4q0V311Dq$+?VM:@PL%h4?$k`1Hl712)8W!4s2sF11E1++?VSpAmmk44>em''@6Per2)8WM4s2sI0JGFL%6QL''@UhSE4>em''A3M+u3&!''A4q0V311OfX+?VM:@q7bG4?,#R2*MI32)8]$4s2sF11W@.+?VV;A2QO[4>em*0KpUA2)8_t4s2sI0ekRM%6QL''AN;ps4>em*@6Per3&*9G4q0V311b&]+?VM:AhZCk4?,&S2EhR42)8bu4s2sF11i=++?VV<3&3Z,4>em+@6Per2)8cQ4s2sI0k*++%6QL(0Ju$:4>eoK2a/?H3&30B4q0V31GL^M+?VM;0f;-;4?,)S@6P,_2)?st4s2sF1GNK*+?VV=@50qT4>eoM0KpUA2)@!B4s2sI11<+*%6QL(1,;$94>eoM1HlpD3&4oN4q0V31GWK)+?VM;11`Wl4?,*.1Hl712)@""4s2sF1G^aL+?VV=AiW$a4>eoN1-QgC2)@$E4s2sI11k,^%6QL(1Gq?=4>eoN2a/?H3&<9u4q0V31G_!S+?VM;1LWHi4?,,P1Hl712)@$u4s2sF1G`Q*+?VV>1GV-''4>eoO2*N-F2)@''I4s2sI1H@3S%6QL(1cIT@4>eoO3''JHI3&<R''4q0V31GiN(+?VM;1h&Wk4?,,WAj-Yd2)@(#4s2sF1GpjM+?VV>@V%_44>eoP2*N-F2)@*K4s2sI1Lt)]%6QL(2.8Zk4>eoP@Qkns3&E<I4q0V31H%''R+?VM;2DmZ@4?,/U3Bdm72)@-L4s2sF1H%3V+?VV?2_[E)4>eoR1HlpD2)@0J4s2sI1h&I/%6QL(2`NuD4>eoR3BeQJ3&G,W4q0V31H8f,+?VM;3+>&o4?,2T@6P,_2)@4%4s2sF1H8u1+?VV@2)RQ,4>eoT3BeQJ2)@7$4s2sI2)mT[%6QL(3G(Gt4>ep''0KpUA3&P,$4q0V31LXfX+?VM;@:_VF4?,5S3Bdm72)A\u4s2sF1L`4*+?VVA2I\iZ4>ep(3BeQJ2)A]M4s2sI2E,&.%6QL(@k^(h4>ep)1-QgC3&Y2W4q0V31Li:++?VM;@l?Ln4?,6/2*MI32)A`P4s2sF1LjrZ+?VVAAiMs`4>ep*0KpUA2)Abu4s2sI2_[6U%6QL(A2c[p4>ep*3''JHI3&`TP4q0V31LrL0+?VM;A77YE4?,8U1d2@22)AcQ4s2sF1Lt#[+?VVB1LWHV4>ep*ANh5!2)AcT4s2sI2`#&0%6QL(AMZLm4>ep+1d3$E3&``P4q0V31M/C++?VM;AhuUn4?,90@6P,_2)Ai%4s2sF1M/O/+?VVBA77Y24>erM@Qkns2)I$t4s2sI3AP21%6QL)1-%N@4>erN@6Per3&rrX4q0V31brN(+?VM<11NKj4?,>]2a.[52)I*D4s2sF1c$mN+?VVD@Q$CZ4>erO2*N-F2)I*I4s2sI3Fk$3%6QL)1H7Q@4>erO3BeQJ3&tMZ4q0V31c&T)+?VM<1LiTk4?,?50Koq.2)I-D4s2sF1c-pN+?VVl0ebd#4>erP1-QgC2)I-G4s2sI@50T&%6QL)1h&Wk4>erPA3M+u3+4[&4q0V31c/f.+?VM<2)%3:4?-b-@Qk5`2)I1"4s2sF1c8i.+?VVlA7Rk54>erR0g6^B2)I3I4s2sI@:h8Y%6QL)2_dK=4>erS1-QgC3+=a$4q0V31cI9U+?VM<2`<iB4?-e-ANgPc2)I:&4s2sF1cT#0+?VVn3AWi.4>erU0g6^B2)I<K4s2sI@q%G^%6QL)3B98G4>erU@6Per3+HPS4q0V31c])1+?VM<3FtAs4?-k*Aj-Z8DId3gEa`iuAIT)''0JFVYAS5^p@V0XhDJ*Mi4>es(1-QgC2)J_t4s2sIA2[s^%6QL)@:VPE4>es(Aj.>"3+QPW4q0V31h&1''+?VM<@Pg7k4?-k_@6P,_2)Jc%4s2sF1h&I/+?VVp0K;6*4>es*2Ei6G2)Jf%4s2sIAMu>.%6QL)@q7bG4>es*ANh5!3+Y*(4q0V31h1,]+?VM<A2$1i4?-n41Hl712)JiQ4s2sF1h:)[+?VVpAiW$a4>es+ANh5!2)JiU4s2sIAhZ/-%6QL)AN2jr4>es,3BeQJ3+b$,4q0V31hC/\+?VM<ARmtI4?-q21Hl712)Jo#4s2sF1hJO-+?VVq@V.e54>es-1d3$E2)Jo&4s2sIAn*V\%6QL)AmmkG4>es-@Qkns3+c_Y4q0V32)-pO+?VM=0f;-;4?5)T@m1>a2)R*I4s2sF2).''S+?VY<3B'',24>euN@Qkns2)R*u4s2sJ0OeQV%6QL*0k<Hj4>euNAj.>"3A=r!4q0V32)6mM+?VM=1,;$94?5*+@m1>a2)R-G4s2sF2)7$Q+?VY<ARRb34>euO2a/?H2)R-K4s2sJ0P3+)%6QL*1-%N@4>euO@6Per3AE6H4q0V32)8Z*+?VM=11WQk4?5,O1-Q.02)R.#4s2sF2)8c-+?VY=1GD!%4>euP1HlpD2)R0H4s2sJ0f:jQ%6QL*1Gq?=4>euP2a/?H3AEEJ4q0V32)I0S+?VM=1c@N?4?5-+2*MI32)R3L4s2sF2)I<W+?VY=AMcR[4>euQANh5!2)R4&4s2sJ1,1UL%6QL*2)RQ?4>euR2Ei6G3ANBL4q0V32)Sf++?VM=2.f#p4?5/RA3LGb2)R9G4s2sF2)[0Q+?VY>2`Eo04>euS2Ei6G2)R9O4s2sJ1-%?Y%6QL*2_dK=4>euT1-QgC3AP2,4q0V32)d<T+?VM=2`*]@4?50/A3LGb2)R?J4s2sF2)m?T+?VY?2.JfZ4>euU1HlpD2)R?M4s2sJ1H%''R%6QL*3&NlB4>euU2Ei6G3AWR&4q0V32)o&/+?VM=3+P2q4?52XAj-Yd2)RBJ4s2sF2*!BT+?VY?@lHR\4>euV1-QgC2)RBN4s2sJ1LjiW%6QL*3AiuC4>euV2a/?H3AY2(4q0V32*!W[+?VM=3B98G4?53.@m1>a2)RC*4s2sF2*#84+?VY?AiMs`4>f!)1-QgC2)Seu4s2sJ1b`N*%6QL*@5L.j4>f!)2*N-F3A`HH4q0V32.A7''+?VM=@PL%h4?55V1-Q.02)Shu4s2sF2.A@*+?VY@2IScY4>f!*1d3$E2)Si$4s2sJ1cI*P%6QL*@V.eH4>f!+0KpUA3Aig/4q0V32.J@)+?VM=@l-@l4?59-3Bdm72)Sl&4s2sF2.JU0+?VYA@UqY34>f!+@Qkns2)SlS4s2sJ2.L)Z%6QL*A2QOn4>f!,2a/?H3ArWO4q0V32.\a2+?VM=AN;ps4?5</1Hl712)SrS4s2sF2.^8]+?VYB@Q6O\4>f!-Aj.>"2)Su"4s2sJ2Ip>^%6QL*AhlOm4>f!.1HlpD3B&WK4q0V32.e[/+?VM=Ai2ap4?5>S3''Id62)Su(4s2sF2.ej4+?VYC0Om9U4>f#N1d3$E2)[-I4s2sJ2`3QY%6QL+0P3Kk4>f#O0KpUA3B&oO4q0V32DHpM+?VM>0etp84?5>[1d2@22)[0J4s2sF2DI0T+?VYC@PBtT4>f#O@6Per2)[0u4s2sJ2e"a1%6QL+0kENk4>f#OAj.>"3B(GX4q0V32DR$O+?VM>1,D*:4?5?2A3LGb2)[3H4s2sF2DR-R+?VYCAM?:W4>f#P2Ei6G2)[3K4s2sJ2e?M`%6QL+1,qH?4>f#P3BeQJ3B(P)4q0V32DSf,+?VM>11i]m4?5ATA3LGb2)[6H4s2sF2D[0R+?VYD1,D*''4>f#QA3M+u2)[7%4s2sJ3&EQX%6QL+1b_*94>f#R0g6^B3B/lO4q0V32Dd<U+?VM>1cIT@4?5A[0Koq.2)[9N4s2sF2DdEX+?VYD2`!W,4>f#S1d3$E2)[<L4s2sJ3+Y!3%6QL+2)[W@4>f#S2a/?H3B1SY4q0V32Dnr-+?VM>2.Jfm4?5DV1d2@22)[=''4s2sF2Do)1+?VYE1,_<*4>f#T1HlpD2)[?L4s2sJ3AW?Q%6QL+2E*fB4>f#T3''JHI3B8m*4q0V32E#/2+?VM>2_[E<4?5D^2a.[52)[C%4s2sF2E,)/+?VYE@lQX]4>f#UANh5!2)[C*4s2sJ3FlS_%6QL+3&WrC4>f#V2a/?H3B:\[4q0V32E3]\+?VM>3+G,p4?6h(1-Q.02)[HR4s2sF2E<`\+?VYm1bh0''4>f#W@m2"t2)[I*4s2sJ@5MOZ%6QL+@5U4k4>f$*2Ei6G3FQB/4q0V32IU#X+?VM>@:DDC4?6h\2EhR42)\o$4s2sF2I\U/+?VYmAiW$a4>f$+@6Per2)\oQ4s2sJ@PBZ''%6QL+@UhSE4>f$+A3M+u3FX[N4q0V32IeL++?VM>@l$:k4?6k*3''Id62)\r%4s2sF2IeX/+?VYn1,;$&4>f$,2a/?H2)\r(4s2sJ@PTo,%6QL+@lZ^q4>f$,@6Per3FXaT4q0V32Ig>_+?VM>A2$1i4?6k-A3LGb2)\u)4s2sF2Ing3+?VYn3ANc-ASu$fAo_<tB4VM]2)?@aAS5^p@V0XhDJ*Mi4>f$-@Qkns2)\uT4s2sJ@UV2Z%6QL+ARdnH4>f$.ANh5!3FagT4q0V32J+[-+?VM>AhlOm4?6n-3Bdm72)]&(4s2sF2J+j2+?VYo2)7?)4>f$/ANh5!2)]&Y4s2sJA2#o*%6QL,0Jks94>f&O2*N-F3Fjj(4q0V32_[6U+?VM?0O[-f4?6q-Aj-Yd2)d4!4s2sF2_\c++?VYp1bh0''4>f&OAj.>"2)d6D4s2sJA2Q/,%6QL,0f2'':4>f&P2*N-F3Fk$[4q0V32_e`)+?VM?0k*<h4?6q33Bdm72)d9G4s2sF2_m0Q+?VYp@Q6O\4>f&Q2Ei6G2)d9L4s2sJA7I>X%6QL,11WQk4>f&QAj.>"3Fl\]4q0V32`!-O+?VM?1GM''94?6qa0Koq.2)d<N4s2sF2`!HX+?VYq0k*<U4>f&R@Qkns2)d=$4s2sJAN+$]%6QL,1b_*94>f&S0g6^B3Ft0Z4q0V32`*HW+?VM?1cRZA4?6t]3Bdm72)d@''4s2sF2`,,1+?VYq@qIn64>f&T2*N-F2)dBN4s2sJAS#F:%6QL,2)mcB4>f&T@6Per3Fue[4q0V32`5&.+?VM?2.\ro4?6tb@6P,_2)dC)4s2sF2`<?R+?VYqAnF494>f&U1HlpD2)dEM4s2sJAhZ5/%6QL,2IScl4>f&U@Qkns3G($U4q0V32`>52+?VM?2J,,q4?7"03''Id62)dHK4s2sF2`EKU+?VYr2)IK+4>f&V@Qkns2)dI(4s2sJAiVS0%6QL,A2-7j4>f''.1HlpD0JHon4q0V32e4g1+?VM?A2c[p4>8Hu1d2@22)f&S4s2sF2eFd.+?V>3@V.e54>f''01-QgC2)f,Z4s2sA0P!.,%6QL-0JG[54>f)Q0KpUA0JI&r4q0V33&*-O+?VM@0fV?>4>8I$3''Id62)m=!4s2sF3&+l++?V>41,_<*4>f)Q@m2"t2)m=%4s2sA0f(OJ%6QL-1,(m74>f)R1HlpD0JP@q4q0V33&3<S+?VM@1,_<=4>8KH3Bdm72)m?M4s2sF3&3HW+?V>41hAi[4>f)R3BeQJ2)m@"4s2sA0f:^M%6QL-11EEi4>f)R@m2"t0JPID4q0V33&5#.+?VM@11`Wl4>8KJ@m1>a2)m@''4s2sF3&>/1+?V>63AE],4>f)T0KpUA2)mEN4s2sA1LW(''%6QL-1cIT@4>f)UAj.>"0Jd/m4q0V33&WKT+?VM@@5''kf4>8TH0Koq.2)o#"4s2sF3+b*5+?VG61bh0''4>f*13''JHI2)o2.4s2sD0KEZ-%6QL-AmmkG4>f*1Aj.>"1GE5l4q0V33A<-N+?VMA2)d]A4>S["2a.[52*!QM4s2sF3ArZW+?VG63Aiu04>f,WANh5!2*!R,4s2sD0P31+%:sEf@V0XhDJ*Mi%:sEf@r5Xn%7<iuE)''hYAKYK*EcP`/FC])qF<E5(9jqu`A7]@eDImj"F)Q2A@q?d%Df?.sDIa2fDIa1c,pbutA5Zu[Dfp)1AITq378HA^~>'
%
category: '*PostScript CIDInit-documentation'
classmethod: Category
cmapType
	"CMap resource format
	0 = ??
	1 = ??
	2 = ToUnicode
		uses ~bf~ for a CID -> Unicode16 mappings
		should always use
			1 begincodespacerange
				<0000> <FFFF>
			endcodespacerange
		bfrange should not cross first byte boundary
		illegal:
			1 beginbfrange
				<10FE> <1101> <4E00>
			endbfrange
		legal:
			2 beginbfrange
				<10FE> <10FF> <4E00>
				<1100> <1101> <4E02>
			endbfrange
		If a CID does not map to a Unicode code point, 
		the value <FFFD> shall be used as its Unicode code point."
%
category: '*PostScript CIDInit-instances'
classmethod: Category
CMap
	| dict |
	dict := self genericResource.
	dict at: #FindResource put: self cMapFindResource.
	dict at: #ResourceForAll put: self cMapResourceForAll.
	dict at: #Category put: #CMap.
	dict at: #InstanceType put: #dicttype.
	^self implementing: dict
%
category: '*PostScript CIDInit-operators'
classmethod: Category
cMapFindResource
	"key category findresource instance
	Return resource instance identified by key in category"

	^BuildIn action: [:ps |
		| category key |
		category := ps categoryAt: ps pop object.
		key := ps pop object.
		ps push: (category at: key ifAbsentPut: [
			(self isSupportedCMap: key asString)
				ifTrue: [self instanceAt: key]
				ifFalse: [
				ps error: 'CMap ' , key printString , ' not found']])]
%
classmethod: Category
cMapResourceForAll
	"template proc scratch category resourceforall â
	Enumerate resource instances in category"

	^BuildIn action: [:ps |
		| categoryName scratch proc template category keys nonStandardKeys allKeys filteredKeys |
		categoryName := ps pop object.
		scratch := ps pop.
		proc := ps pop.
		template := ps pop.
		category := ps categoryAt: categoryName.
		keys := self supportedCMapNames keys.
		nonStandardKeys := category instances keys reject: [:key | keys includes: key].
		allKeys := keys , nonStandardKeys.
		filteredKeys := allKeys select: [:key |
			| string patternString pattern |
			string := key asString first: (scratch size min: key asString size).
			patternString := template copyReplaceAll: '?' with: '#'.
			pattern := OrderedCollection new.
			(patternString subStrings: $*) do: [:subString | pattern add: subString] separatedBy: [
				pattern add: $*].
			string matchPattern: pattern asArray].
		[
		filteredKeys do: [:key |
			ps push: key.
			proc doIn: ps]] on: ExitNotification do: [:ex |
				ps executionStack popTill: proc]]
%
category: '*PostScript CIDInit-testing'
classmethod: Category
isSupportedCMap: aString
	"true, if aString is known as CMap on GitHub.
	Without deprecated CMaps"

	^self supportedCMapNames keys includes: aString
%
category: '*PostScript CIDInit-actions'
method: Interpreter
addPairsAt: aSymbol
	self at: aSymbol addTuples: (self tuples: aSymbol size: 2).
	self scanner takeHexAsString
%
method: Interpreter
addTriplesAt: aSymbol
	self at: aSymbol addTuples: (self tuples: aSymbol size: 3).
	self scanner takeHexAsString
%
method: Interpreter
at: aSymbol addTuples: someTuples
	(self dictionaryStack top at: aSymbol ifAbsentPut: [OrderedCollection new]) addAll: someTuples
%
method: Interpreter
tuples: aSymbol size: anInteger
	"<SequenceableCollection of: (Array[anInteger] of: Object)>
	used in CID processing"

	| codes count tuples rst |
	count := self propertyRemove: (aSymbol , 'Count') asSymbol ifAbsent: [
		self error: '/end' , aSymbol asString , ' must occur after /begin' , aSymbol asString].
	codes := self popTillMark.
	codes size / anInteger = count ifFalse: [
		self error: aSymbol asString , ' count is wrong'].
	tuples := OrderedCollection new: count.
	rst := codes readStream.
	[rst atEnd] whileFalse: [tuples add: (rst next: anInteger) reverse asArray].
	^tuples reverse
%
category: '*PostScript CIDInit-accessing'
method: LiteralName
psMappedCharacter
	"<Character>"

	^self psUnicode asCharacter
%
method: LiteralName
psUnicode
	"<Integer | nil>"

	^CharacterNames unicodeNamed: self object
%
category: '*PostScript CIDInit-converting'
method: LiteralName
mappingFrom: aCode
	^aCode mappingToName: self
%
method: LiteralName
mappingsFrom: aMappingSource
	^Array with: (self mappingFrom: aMappingSource)
%
category: '*PostScript CIDInit-actions'
method: Scanner
cidLessAction
	^[
	self peek = $~
		ifTrue: [
		self next.
		self readAsciiBase85ByteString]
		ifFalse: [
		self peek = $<
			ifTrue: [
			self next.
			#<<]
			ifFalse: [self readHexadecimalCode]]]
%
method: Scanner
takeHexAsCode
	self specialActionsByCharacter at: $< put: self cidLessAction
%
method: Scanner
takeHexAsString
	self specialActionsByCharacter at: $< put: self defaultLessAction
%
category: '*PostScript CIDInit-reading'
method: Scanner
readHexadecimalCode
	"<Code>"

	^Code bytes: self readHexadecimalByteString asByteArray
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Fonts Basics'.
	dict at: #comment put: 'namespace and common protocol for all external font types'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Fonts Basics'.
	dict at: #storeVersion put: '2.4.0.3'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components := (components at:  #'PDFtalk Fonts') at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define namespace Fonts
DoIt
	| newDictionary |
	newDictionary := SymbolDictionary new.
	newDictionary at: #Fonts put: newDictionary.
	PDFtalk at: #Fonts put: newDictionary
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: (PDFtalk at: #Fonts) at: 1.
%
# Define class FontBody
DoIt
Object
	subclass: 'FontBody'
	instVarNames: #(fullName family boldness italic fixedWidth setWidth widths simpleWidths encoder ascent descent underlinePosition underlineThickness fontBBox)
	classVars: #(PostScriptFonts)
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	FontBody category: 'PDFtalk Fonts Basics'.
	FontBody comment: 'reimplemented from VW PostScriptFontBody

Bugfix: afm (Ascii Font Metric) files are processed correctly
added instvar #fontBBox'.
	FontBody namespacePath: #(#PDFtalk #Fonts).
%
# Define class FontError
DoIt
Error
	subclass: 'FontError'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	FontError category: 'PDFtalk Fonts Basics'.
	FontError comment: 'errors related to the Fonts functionality'.
	FontError namespacePath: #(#PDFtalk #Fonts).
%
# Define class Font
DoIt
Object
	subclass: 'Font'
	instVarNames: #(useAlternativeFont)
	classVars: #(LoadedFonts)
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	Font category: 'PDFtalk Fonts Basics'.
	Font comment: 'superclass of all font types

defines the common protocol for all fonts to be used with PDF'.
	Font namespacePath: #(#PDFtalk #Fonts).
%
# Define class FontNotFound
DoIt
FontError
	subclass: 'FontNotFound'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	FontNotFound category: 'PDFtalk Fonts Basics'.
	FontNotFound comment: 'the font was not found in the registry for loaded fonts'.
	FontNotFound namespacePath: #(#PDFtalk #Fonts).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: (PDFtalk at: #Fonts) at: 1.
%
category: 'accessing'
classmethod: Font
definedFontKeys
	"<SequenceableCollection of: Symbol>
	the keys of the defined fonts in this class.
	The returned values can be used as argument in #setFont:size: of the PDF.Renderer"
	"PDFtalk.Fonts.OpenType.Font definedFontKeys"
	"CustomFont definedFontKeys"
	"StandardFont definedFontKeys"

	^((Pragma allNamed: #font: in: self class) collect: [:pragma | pragma arguments first]) sorted
%
classmethod: Font
definedNamedFonts
	"<Dictionary key: (Symbol | String) value: Font>"

	| dict |
	dict := Dictionary new.
	self fontClasses do: [:class |
		(Pragma allNamed: #font: in: class class) do: [:pragma |
			dict at: pragma arguments first ifAbsentPut: [class perform: pragma selector]]].
	^dict
%
classmethod: Font
fontAt: aSymbolOrFilenameString
	"<Font>
	the loaded instance registered at aSymbolOrFilenameString.
	An error is raised when the font was not found"

	^self loadedFonts at: aSymbolOrFilenameString ifAbsent: [
		FontNotFound raiseSignal: aSymbolOrFilenameString , ' was not found']
%
classmethod: Font
fontAt: aSymbolOrFilenameString ifAbsent: aBlock
	"<Font | nil>
	the loaded instance registered at aSymbol"

	^self loadedFonts at: aSymbolOrFilenameString ifAbsent: aBlock
%
classmethod: Font
fontAt: aSymbolOrFilenameString ifAbsentPut: aBlock
	^self loadedFonts at: aSymbolOrFilenameString ifAbsentPut: aBlock
%
classmethod: Font
fontAt: aSymbolOrFilenameString put: aFont
	^self loadedFonts at: aSymbolOrFilenameString put: aFont
%
classmethod: Font
fontClasses
	"<SequenceableCollection of: Font class>
	assumes that all subclasses are defined in namespaces #{PDFtalk.Fonts} and #{PDFtalk.Fonts.OpenType}"

	| classOrganizer |
	classOrganizer := ClassOrganizer
		pdfNewWithRoot: Font
		symbolList: (SymbolList
			with: (PDFtalk at: #Fonts)
			with: ((PDFtalk at: #Fonts) at: #OpenType)).
	^(Array with: Font) , (classOrganizer allSubclassesOf: Font)
%
classmethod: Font
loadedFonts
	"<Dictionary key: (Symbol | String) value: Font>
	the registry of loaded fonts.
	The key is either a Symbol or a filename (for an OpenType font) when loaded from the application.
	Gemstone: without events for feedback"
	"((PDFtalk at: #Fonts) at: #Font) loadedFonts"
	"((PDFtalk at: #Fonts) at: #Font) reloadFonts"

	^LoadedFonts ifNil: [
		| dictionary |
		dictionary := self definedNamedFonts.
		dictionary values do: #install.
		LoadedFonts := dictionary]
%
category: 'accessing encoders'
classmethod: Font
macRomanEncoder
	^PDF macRomanEncoder
%
classmethod: Font
pdfDocEncoder
	^PDF pdfDocEncoder
%
classmethod: Font
standardEncoder
	^PDF standardEncoder
%
classmethod: Font
winAnsiEncoder
	^PDF winAnsiEncoder
%
category: 'pragmas'
classmethod: Font
pragmas
	<pragmas: #class>
	^#(#font:)
%
category: 'accessing'
method: Font
characterAt: index
	"<Character>"

	index = Character illegalCode ifTrue: [
		^Character illegalCode asCharacter].
	self fontbody ifNil: [
		^Character illegalCode asCharacter].
	^self fontbody encoder decode: index
%
method: Font
characterCodeOf: aCharacter
	"<Integer [0..255]>"

	self fontbody ifNil: [
		^Character illegalCode].
	^self fontbody encoder encode: aCharacter
%
method: Font
characterGlyphs
	"<SequenceableCollection of: (Glyph | CharacterMetric)>
	all glyphs without .notdef"

	^self subclassResponsibility
%
method: Font
faceName
	"<String>
	the name of the font face, normally without suffixes like Â»-BoldÂ«, Â»-ItalicÂ« etc.
	Used in a windows LOGFONT"

	^self subclassResponsibility
%
method: Font
familyName
	"<String>
	the font family"

	^self subclassResponsibility
%
method: Font
filename
	"<String>
	the file name of the Windows font file"

	^self subclassResponsibility
%
method: Font
fontbody
	"<FontBody | nil>"

	^[FontBody named: self postScriptName] on: LookupError do: [:ex | nil]
%
method: Font
glyphAtUnicode: aUnicodeInteger
	"<Glyph>
	the glyph for aUnicodeInteger.
	When there is no glyph available, the .notdef glyph is returned"

	^(self glyphOrNilAtUnicode: aUnicodeInteger) ifNil: [self undefinedGlyph]
%
method: Font
glyphForTabular: aCharacter
	"<Glyph | nil>"

	^(self tabularGlyphFor: aCharacter) ifNil: [self glyphAtUnicode: aCharacter asInteger]
%
method: Font
glyphOrNilAtUnicode: aUnicodeInteger
	"<Glyph | nil>
	the glyph for aUnicodeInteger.
	When there is no glyph available, nil is returned"

	^self subclassResponsibility
%
method: Font
glyphs
	"<Array of: Glyph>"

	^self subclassResponsibility
%
method: Font
glyphsFor: aString
	"<SequenceableCollection of Glyph>"

	| dict |
	dict := IdentityDictionary new.
	aString asSet do: [:char | dict at: char put: (self glyphAtUnicode: char asInteger)].
	^aString asOrderedCollection collect: [:char | dict at: char]
%
method: Font
italicAngle
	"<Number>"

	^self subclassResponsibility
%
method: Font
pdfFlags
	"<Integer>"
	"The value of the Flags entry in a font descriptor shall be an unsigned 32-bit integer containing flags specifying various characteristics of the font. 
Bit positions within the flag word are numbered from 1 (low-order) to 32 (high-order). 
The table shows the meanings of the flags; all undefined flag bits are reserved and shall be set to 0 by conforming writers.

Bit 		Name			Meaning
1		FixedPitch 		All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).
2		Serif 			Glyphs have serifs, which are short strokes drawn at an angle on the top and bottom of glyph stems. 
						(Sans serif fonts do not have serifs.)
3		Symbolic 		Font contains glyphs outside the Adobe standard Latin character set. 
						This flag and the Nonsymbolic flag shall not both be set or both be clear.
4		Script 			Glyphs resemble cursive handwriting.
6		Nonsymbolic 	Font uses the Adobe standard Latin character set or a subset of it.
7		Italic 			Glyphs have dominant vertical strokes that are slanted.
17 		AllCap 			Font contains no lowercase letters; typically used for display purposes, such as for titles or headlines.
18		SmallCap 		Font contains both uppercase and lowercase letters. 
						The uppercase letters are similar to those in the regular version of the same typeface family. 
						The glyphs for the lowercase letters have the same shapes as the corresponding uppercase letters, 
						but they are sized and their proportions adjusted so that they have the same size and stroke weight 
						as lowercase glyphs in the same typeface family.
19		ForceBold 		See description after Note 1 in this sub-clause."

	| flags |
	flags := 0.
	self isFixedPitch ifTrue: [
		flags := flags bitOr: 1].
	true "non-symbolic" ifTrue: [
		flags := flags bitOr: 2r0100000].
	self isItalic ifTrue: [
		flags := flags bitOr: 2r01000000].
	^flags
%
method: Font
postScriptName
	"<String>
	the name as used by PostScript and PDF"

	^self subclassResponsibility
%
method: Font
setWidth
	"<Number [0..1]>
	The relative width of the characters in the font.
	0.5 is normal, smaller is condensed, larger is wider"

	^self subclassResponsibility
%
method: Font
stringWithoutUnprintableCharacters: aString
	"<String>"

	^aString select: [:char | self canDisplayCharacter: char]
%
method: Font
tabularGlyphFor: aCharacter
	"<Glyph | nil>"

	^self tabularVariantOf: (self glyphAtUnicode: aCharacter asInteger)
%
method: Font
tabularGlyphsFor: aString
	"<SequenceableCollection of Glyph>"

	^(self glyphsFor: aString) collect: [:glyph | self tabularVariantOrGlyph: glyph]
%
method: Font
tabularVariantOf: aGlyph
	"<Glyph | nil>
	only OpenType and others supports tabular variants, Type1 does not"

	^nil
%
method: Font
tabularVariantOrGlyph: aGlyph
	"<Glyph>
	the variant or aGlyph if not found"

	^aGlyph
%
method: Font
undefinedGlyph
	"<Glyph>
	the glyph for an undefined character (.notdef)"

	^self subclassResponsibility
%
method: Font
weight
	"<Integer>
	WORD: The weight of the font in the range 0 through 1000. For example, 400 is roman and 700 is bold. If this value is zero, a default weight is used"

	^self subclassResponsibility
%
category: 'accessing metrics'
method: Font
ascender
	"<Integer>
	For roman font programs: usually the y-value of the top of the lowercase d"

	^self subclassResponsibility
%
method: Font
ascenderInTextSpace
	"<Number>
	For roman font programs: usually the y-value of the top of the lowercase d"

	^self ascender / self unitsPerEm
%
method: Font
capHeight
	"<Integer>
	(Optional.) Usually the y-value of the top of the capital H. If this font program contains no capital H, this keyword might be missing or number might be 0."

	^self subclassResponsibility
%
method: Font
capHeightInTextSpace
	"<Number>
	(Optional.) Usually the y-value of the top of the capital H. If this font program contains no capital H, this keyword might be missing or number might be 0."

	^self capHeight / self unitsPerEm
%
method: Font
descender
	"<Integer>
	For roman font programs: typically the y-value of the bottom of the lowercase p.
	Usually a negative number"

	^self subclassResponsibility
%
method: Font
descenderInTextSpace
	"<Number>
	For roman font programs: typically the y-value of the bottom of the lowercase p.
	Usually a negative number"

	^self descender / self unitsPerEm
%
method: Font
fontBBox
	"<Rectangle>
	in the native glyph space (see unitsPerEm)"

	^self subclassResponsibility
%
method: Font
fontBBoxInStandardGlyphSpace
	"<Rectangle>
	normalized for Em = 1000"

	| box |
	box := self fontBBox.
	^(self inStandardGlyphSpace: box origin) corner: (self inStandardGlyphSpace: box corner)
%
method: Font
fontBBoxInTextSpace
	"<Rectangle>"

	| bbox unitsPerEm |
	bbox := self fontBBox.
	unitsPerEm := self unitsPerEm.
	^bbox origin / unitsPerEm corner: bbox corner / unitsPerEm
%
method: Font
headroom
	"<Number>
	the distance between ascend to upper bound of the fontBBox"

	^self fontBBox corner y - self ascender
%
method: Font
headroomInTextSpace
	"<Number>
	the distance between ascend to upper bound of the fontBBox"

	^self fontBBoxInTextSpace corner y - self ascenderInTextSpace
%
method: Font
inStandardGlyphSpace: aNumber
	"<Integer>
	Integer scaled to a standard 1000 x 1000 glyph box"

	^(aNumber * 1000 / self unitsPerEm) rounded
%
method: Font
leftSideBearingOfUnicode: unicode
	"<Number> in font space"

	^self subclassResponsibility
%
method: Font
stemV
	"<Integer>"

	^self subclassResponsibility
%
method: Font
stringWidthOf: aString at: fontSize
	"<Number> in unscaled text space
	Still here for compatibility"

	^(self unitWidthOfGlyphs: (self glyphsFor: aString)) * fontSize
%
method: Font
underlinePosition
	"<Integer>"

	^self subclassResponsibility
%
method: Font
underlinePositionInTextSpace
	"<Number>"

	^self underlinePosition / self unitsPerEm
%
method: Font
underlineThickness
	"<Integer>"

	^self subclassResponsibility
%
method: Font
underlineThicknessInTextSpace
	"<Number>"

	^self underlineThickness / self unitsPerEm
%
method: Font
unitsPerEm
	"<Integer>
	The box width and height in which a glyph is described using integer values.
	Usually 1000 => 1000 x 1000 box"

	^1000
%
method: Font
unitWidthOfGlyphs: stringGlyphs
	"<Number> in unscaled text space for font size 1"

	| widths |
	widths := stringGlyphs collect: [:glyph | self widthOfGlyphInTextSpace: glyph].
	^widths inject: 0 into: [:sum :w | sum + w]
%
method: Font
widthOfGlyph: aGlyphOrCharMetricOrNil
	"<Number> in glyph units"

	aGlyphOrCharMetricOrNil ifNil: [
		^self widthOfUndefinedGlyph].
	^aGlyphOrCharMetricOrNil width
%
method: Font
widthOfGlyphInTextSpace: aGlyphOrCharMetricOrNil
	"<Number> in unscaled text space"

	^(self widthOfGlyph: aGlyphOrCharMetricOrNil) / self unitsPerEm
%
method: Font
widthOfString: aString
	"<Number> in unscaled text space"

	^self unitWidthOfGlyphs: (self glyphsFor: aString)
%
method: Font
widthOfUndefinedGlyph
	"<Number> in font units"

	^self subclassResponsibility
%
method: Font
xHeight
	"<Integer>"

	^self subclassResponsibility
%
method: Font
xHeightInTextSpace
	"<Number>"

	^self xHeight / self unitsPerEm
%
category: 'actions'
method: Font
dontUseAlternativeFont
	useAlternativeFont := false
%
method: Font
doUseAlternativeFont
	useAlternativeFont := true
%
method: Font
useOnScreen
	"tell the system to use the receiver as screen font.
	Install the font if possible"

	^self
%
category: 'initialize-release'
method: Font
install
	"install the font in the Smalltalk system and return it"

	FontBody installFromFont: self.
	^self
%
category: 'testing'
method: Font
canDisplayCharacter: aCharacter
	"<Boolean>
	does the receiver have a glyph for the character?"

	^self subclassResponsibility
%
method: Font
canDisplayUnencodedGlyphs
	^false
%
method: Font
isFixedPitch
	^self subclassResponsibility
%
method: Font
isItalic
	^self subclassResponsibility
%
method: Font
usingAlternativeFont
	"<Boolean>"

	^useAlternativeFont ifNil: [useAlternativeFont := false]
%
category: 'accessing'
classmethod: FontBody
postScriptFonts
	^PostScriptFonts ifNil: [PostScriptFonts := Dictionary new]
%
category: 'font metric loading'
classmethod: FontBody
installFromFont: aFont
	"create an instance from the font, and add the FontBody to the printer fonts"

	| fontBody |
	fontBody := self new.
	fontBody initializeFromFont: aFont.
	self postScriptFonts at: fontBody name put: fontBody
%
category: 'utilities'
classmethod: FontBody
named: aName

	^self postScriptFonts at: aName
%
category: 'accessing'
method: FontBody
ascent

	^ascent
%
method: FontBody
boldness

	^boldness
%
method: FontBody
characterNameAtUnicode: anInteger
	"<Symbol>"

	anInteger = Character illegalCode ifTrue: [
		^#'.notdef'].
	^((PostScript at: #CharacterNames) characterNamesAtUnicode: anInteger)
		detect: [:symbol |
		self widths includesKey: symbol]
		ifNone: [
		#'.notdef']
%
method: FontBody
descent

	^descent
%
method: FontBody
encode: aCharacter
	^self encoder encode: aCharacter
%
method: FontBody
encoder
	^encoder ifNil: [encoder := (PDFtalk at: #CharacterMap) new]
%
method: FontBody
encodeSymbolic: aCharacter
	| names |
	names := (PostScript at: #CharacterNames) unicodeToNames at: aCharacter asInteger ifAbsent: [
		^nil].
	names do: [:name |
		(self widths includesKey: name) ifTrue: [
			^name]].
	^nil
%
method: FontBody
family

	^family
%
method: FontBody
fixedWidth

	^fixedWidth
%
method: FontBody
fontBBox
	"<Rectangle>"

	^fontBBox
%
method: FontBody
italic

	^italic
%
method: FontBody
name

	^fullName
%
method: FontBody
serif
	(#('avant garde gothic' 'helvetica') includes: family) ifTrue: [
		^false].
	^#('bookman' 'courier' 'new century schoolbook' 'palatino' 'times') includes: family
%
method: FontBody
setWidth

	^setWidth
%
method: FontBody
simpleWidths
	^simpleWidths ifNil: [simpleWidths := WordArray new: 256 withAll: 1000]
%
method: FontBody
simpleWidthsScaledBy: aSize
	"Answer an array that maps byte values to widths that are scaled by aSize."

	^self simpleWidths asArray collect: [:w | (w asFloat / 1000.0) * aSize]
%
method: FontBody
underlinePosition
	"<Float>
	location of the preferred underline, measured from the baseline as a value between 0 and 1"

	^underlinePosition
%
method: FontBody
underlineThickness
	"<Float>
	width of the preferred underline, as a value between 0 and 1"

	^underlineThickness
%
method: FontBody
widthAt: code
	"Answer the width of code as a value between 0 and 1."

	^(self widths at: code) / 1000.0
%
method: FontBody
widths
	^widths ifNil: [widths := IdentityDictionary new]
%
category: 'initialize-release'
method: FontBody
encode: cName as: code
	code < 0 ifTrue: [
		^self].
	((PostScript at: #CharacterNames) characterNamed: cName) ifNotNil: [:char |
		self encoder encode: char as: code.
		self simpleWidths at: code + 1 put: (self widths at: cName)]
%
method: FontBody
initializeFromFont: aFont
	fullName := aFont postScriptName.
	family := aFont familyName.
	setWidth := aFont setWidth.
	boldness := aFont weight / 1000.0.
	italic := aFont isItalic.
	fixedWidth := aFont isFixedPitch.
	ascent := aFont ascenderInTextSpace.
	descent := aFont descenderInTextSpace negated.
	underlinePosition := aFont underlinePositionInTextSpace.
	underlineThickness := aFont underlineThicknessInTextSpace.
	fontBBox := aFont fontBBoxInTextSpace.
	self setEncodingFrom: aFont
%
method: FontBody
release
	self class postScriptFonts removeKey: self name.
	super release
%
method: FontBody
setEncoder: encode

	encoder := encode
%
method: FontBody
setEncodingFrom: aFont
	| widthsAtUnicodes |
	widths := nil.
	widthsAtUnicodes := IdentityDictionary new: aFont characterGlyphs size.
	aFont characterGlyphs do: [:glyph |
		self widths at: glyph postScriptName put: glyph width.
		widthsAtUnicodes at: glyph unicode put: glyph width].
	simpleWidths := nil.
	encoder := aFont class winAnsiEncoder.
	self encoder decoder doWithIndex: [:char :index |
		widthsAtUnicodes at: char asInteger ifPresent: [:width |
			self simpleWidths at: index put: width]]
%
category: 'printing'
method: FontBody
printOn: aStream
	aStream
		print: self class;
		nextPut: $(;
		print: self name;
		nextPut: $)
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Fonts Type1'.
	dict at: #comment put: 'the runtime code for the Adobe Type 1 font format'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Fonts Type1'.
	dict at: #storeVersion put: '2.5.3.0'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components := (components at:  #'PDFtalk Fonts') at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: (PDFtalk at: #Fonts) at: 1.
%
# Define class Type1Font
DoIt
Font
	subclass: 'Type1Font'
	instVarNames: #(metrics)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	Type1Font category: 'PDFtalk Fonts Type1'.
	Type1Font comment: 'A Type 1 PostScript font'.
	Type1Font namespacePath: #(#PDFtalk #Fonts).
%
# Define class CustomFont
DoIt
Type1Font
	subclass: 'CustomFont'
	instVarNames: #(filename program)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	CustomFont category: 'PDFtalk Fonts Type1'.
	CustomFont comment: 'Non-standard Type 1 font

The metrics and font program are read from the windows .pfm and .pfb files.
The file name stem is remembered as #filename
'.
	CustomFont namespacePath: #(#PDFtalk #Fonts).
%
# Define class AfmParser
DoIt
Object
	subclass: 'AfmParser'
	instVarNames: #(fontMetric stream stack)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	AfmParser category: 'PDFtalk Fonts Type1'.
	AfmParser comment: 'factored out from PostScriptFontBody class
This comment is from PostScriptFontBody class>>parseGenericEntry:stack:modify:
	Generic parsing algorithm for keeping track of the
	StartFoo / EndFoo delimiters that we encounter as we
	parse the file.  Each StartFoo pushes on the stack the
	name of the EndFoo line that terminates it, and a
	message selector to use to parse the file until that
	line is reached.  When the EndFoo line is reached, the
	stack is popped, and the line checked to make sure
	that it''s the correct terminator--i.e., that it''s an
	EndFoo and not an EndBar, if an EndFoo was expected.

	This stack maintenance is all that''s needed for many
	sections.  If information has to be extracted from a
	section of the file, a different method selector should
	be used to parse that part of the file.'.
	AfmParser namespacePath: #(#PDFtalk #Fonts).
%
# Define class FontProgramHeader
DoIt
Value
	subclass: 'FontProgramHeader'
	instVarNames: #(familyName fontBBox contents)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	FontProgramHeader category: 'PDFtalk Fonts Type1'.
	FontProgramHeader comment: 'An Adobe Type 1 Font Program ascii header

Instances correspond to the header contents of an PFA file (or windows PFB file, which has identical content).

Documented in "Adobe Type 1 Font Format", 1990, ISBN 0-201-57044-0
online at http://partners.adobe.com/public/developer/en/font/T1_SPEC.PDF

Parsing the information from these files is provisorial. Needs a proper PostScript interpreter to do it right.'.
	FontProgramHeader namespacePath: #(#PDFtalk #Fonts).
%
# Define class StandardFont
DoIt
Type1Font
	subclass: 'StandardFont'
	instVarNames: #(windowsFaceName)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	StandardFont category: 'PDFtalk Fonts Type1'.
	StandardFont comment: 'the 14 Adobe standard fonts.

The metrics are read from the official .afm.
There are no font programs for these fonts - they are build-in in PostScript and PDF.
The corresponding windows font name is remembered as #windowsFaceName
'.
	StandardFont namespacePath: #(#PDFtalk #Fonts).
%
# Define class PostScriptFontMetrics
DoIt
Object
	subclass: 'PostScriptFontMetrics'
	instVarNames: #(font header extTextMetrics faceName driverInfo extentTable kerningPairs kerningTracks)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	PostScriptFontMetrics category: 'PDFtalk Fonts Type1'.
	PostScriptFontMetrics comment: 'the Smalltalk value of a .pfm (PostScript Font Metrics) file.

The binary file is used by Windows with a .pfb file to install a Type 1 font.

The implementation saves only the contents fields in values for later use.
Internal file management data (offsets and counts) are discarted, since they can be reproduced from the contents.
'.
	PostScriptFontMetrics namespacePath: #(#PDFtalk #Fonts).
%
# Define class FontProgram
DoIt
Value
	subclass: 'FontProgram'
	instVarNames: #(header contents glyphs trailerExtra)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	FontProgram category: 'PDFtalk Fonts Type1'.
	FontProgram comment: 'An Adobe Type 1 Font Program

Instances correspond to the contents of an PFA file (or windows PFB file, which has identical content).

Documented in "Adobe Type 1 Font Format", 1990, ISBN 0-201-57044-0
online at http://partners.adobe.com/public/developer/en/font/T1_SPEC.PDF

Parsing the information from these files is provisorial. Needs a proper PostScript interpreter to do it right.'.
	FontProgram namespacePath: #(#PDFtalk #Fonts).
%
# Define class PFMHeader
DoIt
Value
	subclass: 'PFMHeader'
	instVarNames: #(copyright ascent internalLeading externalLeading italic underline strikeOut weight charSet pixHeight pitchAndFamily avgWidth maxWidth firstChar lastChar defaultChar breakChar)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	PFMHeader category: 'PDFtalk Fonts Type1'.
	PFMHeader comment: 'The header section of a PFM file.

This is only used for PostScript Type 1 fonts (PFM files are used in windows also for raster and other fonts).
Fields fixed for this kind of PFM are implicit: the fixed value is hard coded and not stored or read from a variable.

The implementation saves only the contents fields in values for later use.
Internal file management data (offsets and counts) are read and written by the enclosing PostScriptFontMetrics.
'.
	PFMHeader namespacePath: #(#PDFtalk #Fonts).
%
# Define class KernTrack
DoIt
Value
	subclass: 'KernTrack'
	instVarNames: #(degree minSize minAmount maxSize maxAmount)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	KernTrack category: 'PDFtalk Fonts Type1'.
	KernTrack comment: 'uniform kerning for a specified scale

The KerningTracks table need not be present in a PFM file for a Type-1 font, if it exists it contains etmKernTracks (from the EXTTEXTMETRIC structure) entries. Each of these entries looks as follows:

short ktDegree
This field contains the amount to change the character spacing. Negative values mean closer together, positive values mean farther apart.

short ktMinSize
This field contains the minimum font height (in device units) for which to use linear track kerning.

short ktMinAmount
This field contains the track kerning amount to use for font heights less or equal ktMinSize.

short ktMaxSize
This field contains the maximum font height (in device units) for which to use linear track kerning. For font heights between ktMinSize and ktMaxSize the track kerning amount has to increase linearily from ktMinAmount to ktMaxAmount.

short ktMaxAmount
This field contains the track kerning amount to use for font heights greater or equal ktMaxSize. '.
	KernTrack namespacePath: #(#PDFtalk #Fonts).
%
# Define class DirectionalFontMetric
DoIt
Object
	subclass: 'DirectionalFontMetric'
	instVarNames: #(underlinePosition underlineThickness italicAngle charWidth isFixedPitch)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	DirectionalFontMetric category: 'PDFtalk Fonts Type1'.
	DirectionalFontMetric comment: 'DirectionalFontMetric defines metric data specific for a text direction.

Instance Variables:
	underlinePosition	<Number>	description of underlinePosition
	underlineThickness	<Number>	description of underlineThickness
	italicAngle			<Number>	description of italicAngle
	charWidth			<Point>		description of charWidth
	isFixedPitch		<Boolean>	description of isFixedPitch'.
	DirectionalFontMetric namespacePath: #(#PDFtalk #Fonts).
%
# Define class CharacterMetric
DoIt
Object
	subclass: 'CharacterMetric'
	instVarNames: #(c w n b l)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	CharacterMetric category: 'PDFtalk Fonts Type1'.
	CharacterMetric comment: 'Each characterâs metrics are represented as a list of keys and values separated by semicolons, contained on one line. The characters are sorted by numerically ascending character code. Characters not encoded follow the encoded characters and are identified by character codes of â1. Byte codes for which no character is defined are not listed. Example: A character metric data line might look like this: 
C 102 ; WX 333 ; N f ; B 20 0 383 682 ; L i fi ; L l fl ;
This section appears in the AFM file only. It is optional.'.
	CharacterMetric namespacePath: #(#PDFtalk #Fonts).
%
# Define class AdobeFontMetric
DoIt
Object
	subclass: 'AdobeFontMetric'
	instVarNames: #(font fileFormatVersion comment metricsSets fontName fullName familyName fontBBox weight version notice encodingScheme characterSet characters isBaseFont vVector isFixedV capHeight xHeight ascender descender stdHW stdVW directions charMetricsSize charMetrics trackKern kernPairsSize kernPairs composites)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	AdobeFontMetric category: 'PDFtalk Fonts Type1'.
	AdobeFontMetric comment: 'AdobeFontMetric represents the contents of an PostScript Type-1 Font Metric file (AFM).
Only base fonts (Type-1) for now. No composite fonts (Type-0) in ACFM or CID.
Also no master fonts in AMFM.

All variables are privately set from the file, but publicly read as their proper Smalltalk values.

Reference:
Adobe Font Metrics File
Format Specification
	Version 4.1
	7 October 1998
		Adobe Systems Incorporated
		Adobe Developer Technologies
		345 Park Avenue
		San Jose, CA 95110
		http://partners.adobe.com/
			PN LPS5004'.
	AdobeFontMetric namespacePath: #(#PDFtalk #Fonts).
%
# Define class PairKern
DoIt
Value
	subclass: 'PairKern'
	instVarNames: #(first second kernAmount)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	PairKern category: 'PDFtalk Fonts Type1'.
	PairKern comment: 'The kerning between two characters

The KerningPairs table need not be present in a PFM file for a Type-1 font, if it exists it contains etmKernPairs (from the EXTTEXTMETRIC structure) entries. Each of these entries looks as follows:

BYTE kpFirst
This field contains the first (left) character of the kerning pair.

BYTE kpSecond
This field contains the second (right) character of the kerning pair.

short kpKernAmount
This field contains the kerning amount in font units, the value is mostly negative. 


The array of KERNPAIR structures is sorted in increasing order by the kpPair.both field.
kpPair.both
Specifies a WORD in which the first character in the kerning pair is in the low-order byte and the second character is in the high-order byte'.
	PairKern namespacePath: #(#PDFtalk #Fonts).
%
# Define class ExtTextMetrics
DoIt
Value
	subclass: 'ExtTextMetrics'
	instVarNames: #(capHeight xHeight lcAscent lcDescent slant superScript subScript superScriptSize subScriptSize ulOffset ulWidth dblUpperUlOffset dblLowerUlOffset dblUpperUlWidth dblLowerUlWidth soOffset soWidth)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	ExtTextMetrics category: 'PDFtalk Fonts Type1'.
	ExtTextMetrics comment: 'This section contains additional informations about the font (orientation, minimum and maximum acceptable size of the font, the cap height, the degree of obliqueness for italic fonts etc.)'.
	ExtTextMetrics namespacePath: #(#PDFtalk #Fonts).
%
# Define class Glyphs
DoIt
Object
	subclass: 'Glyphs'
	instVarNames: #(glyphs font)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	Glyphs category: 'PDFtalk Fonts Type1'.
	Glyphs comment: 'a container for all glyphs of a font'.
	Glyphs namespacePath: #(#PDFtalk #Fonts).
%
# Define class KernPair
DoIt
Object
	subclass: 'KernPair'
	instVarNames: #(firstCharacter secondCharacter kerning)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: Fonts
%
DoIt
	KernPair category: 'PDFtalk Fonts Type1'.
	KernPair comment: 'KernPair specifies the kerning between two characters.

Instance Variables:
	firstCharacter		<Symbol>	description of firstCharacter
	secondCharacter	<Symbol>	description of secondCharacter
	kerning				<Point>		description of kerning'.
	KernPair namespacePath: #(#PDFtalk #Fonts).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: (PDFtalk at: #Fonts) at: 1.
%
category: 'parsing'
classmethod: AdobeFontMetric
fromAfm: readstream
	"self fromAfm: SmallCharts.SÃ¼ddeutsche.HelveticaNeueBoldCond afmString readStream"

	| inst |
	inst := self new.
	[	inst initializeFromAfm: readstream
	] ensure: [readstream close].
	(inst fontName isNil or: [
	inst fontBBox isNil]) ifTrue: [
		^nil].
	^inst
%
category: 'accessing'
method: AdobeFontMetric
addComposite: composite
	self composites add: composite
%
method: AdobeFontMetric
addKernPair: kernPair
	self kernPairs add: kernPair
%
method: AdobeFontMetric
addTrackKern: kernPair
	self trackKern add: kernPair
%
method: AdobeFontMetric
charMetricAt: index
	"<CharMetric | nil>"

	^self charMetrics detect: [:cm |
		cm c = index
	] ifNone: [
		nil]
%
method: AdobeFontMetric
charMetricNamed: symbol
	"<CharMetric>"

	^self charMetrics detect: [:cm |
		cm n = symbol
	] ifNone: [
		nil]
%
method: AdobeFontMetric
charMetrics
	"<Collection of: CharMetric>"

	^charMetrics ifNil: [charMetrics := OrderedCollection new: self charMetricsSize]
%
method: AdobeFontMetric
composites
	"<Collection of: Object>"
	"The composite character data section also appears only in AFM files. It is optional. Composite characters are new characters made up of characters already existing in the font program, such as accented characters. Character metric information for composite characters is found in the Character Metrics section of the AFM file.
Although most PostScript language font programs available from Adobe Systems include a rather extensive set of composite characters, some applications might want to generate their own. This section provides the data necessary for accurate positioning of the individual pieces. All units are expressed in the standard 1000 unit-per-font-scale-factor character
coordinate system. 
StartComposites integer
EndComposites
(Required if composite character data are present.) integer indicates how many pairs to expect. The data for each composite character is represented as a list of keys and values separated by semicolons. Each composite character gets one line of description. The following are the standard keys:
CC name integer
The composite character name followed by the number of parts that comprise the composite.
PCC name deltax deltay
One of the parts of the composite character. The character name is given followed by the x and y displacement from the origin. A composite character line might look like this
CC Aacute 2; PCC A 0 0; PCC acute 194 214;"

	^composites ifNil: [
		composites := OrderedCollection new]
%
method: AdobeFontMetric
direction
	"<DirectionalFontMetric>
	horizontal only"
	"(Optional if MetricsSets 0, required otherwise.) integer is 0, 1, or 2. Encloses the metrics for writing direction integer. StartDirection 2 implies that the metrics for both writing directions are the same. If MetricsSets 0 was specified or implied, StartDirection ... EndDirection can be omitted, and StartDirection 0 is implied."

	^self directions at: self metricsSets
%
method: AdobeFontMetric
directions
	"<Dictionary key: Integer[0 1 2] value: DirectionalFontMetric>
	0 = horizontal only
	1 = vertical only
	2 = both"

	^directions ifNil: [
		| dict |
		dict := Dictionary new.
		dict at: 0 put: DirectionalFontMetric new.
		directions := dict]
%
method: AdobeFontMetric
font
	"<FontClass>"

	^font
%
method: AdobeFontMetric
font: aFont
	font := aFont
%
method: AdobeFontMetric
kernPairs
	"<Collection of: KernPair>"
	"The pair-wise kerning data is surrounded by the keywords:
StartKernPairs integer
EndKernPairs
StartKernPairs0 integer
EndKernPairs
StartKernPairs1 integer
EndKernPairs
(Required if pair-wise kerning data are present.) integer indicates the number of pairs to expect. StartKernPairs and StartKernPairs0 denote writing direction 0; StartKernPairs1 denotes writing direction 1. An AFM file can contain pair-wise kerning data for more than one writing direction, each delimited by the StartKernPairs0 or StartKernPairs1 ... EndKernPairs. There is one kerning pair per line. Each line begins with a keyword of the form KP, KPH, KPX, or KPY."

	^kernPairs ifNil: [
		kernPairs := OrderedCollection new: self kernPairsSize]
%
method: AdobeFontMetric
postScriptName
	"<String>
	the name as used by PostScript and PDF"

	^self fontName
%
method: AdobeFontMetric
stdHW
	"<Number>"
	"(Optional). This number specifies the dominant width of horizontal stems (measured vertically in character space units)."

	^stdHW ifNil: [0]
%
method: AdobeFontMetric
stdHW: aString
	stdHW := aString asNumber
%
method: AdobeFontMetric
stdVW
	"<Number>"
	"(Optional). This number specifies the dominant with of vertical stems (measured horizontally in character space units)."

	^stdVW ifNil: [0]
%
method: AdobeFontMetric
stdVW: aString
	stdVW := aString asNumber
%
method: AdobeFontMetric
stemV
	"<Number>"

	^stdVW ifNil: [
		| wc |
		wc := self weightNumber / 65.
		^(wc * wc + 50) rounded]
%
method: AdobeFontMetric
trackKern
	"<Collection of: String>"
	"Track kerning may be specified for those writing directions mentioned by MetricsSets. The track kerning data is surrounded by the keywords:
StartTrackKern integer
EndTrackKern
(Required if track kerning data are present.) integer indicates how many different sets of track kerning data are present.
Normally track kerning is provided in different degrees of tightness. Within a track (a degree of tightness), the amount to decrease (or possibly increase) the amount of space between characters increases (or possibly decreases) with the point size of the font (for example, for tight track kerning, the amount to decrease the space between characters at 6 point might be 0.1 points and at 72 point it might be 3.78 points). These distances are measured along the width of the characters: parallel to the x-axis for horizontal writing directions and parallel to the y-axis for vertical writing directions. The data itself begins with the keyword TrackKern and is followed by the track kerning information
TrackKern degree min-ptsize min-kern max-ptsize max-kern The degree is an integer where increasingly negative degrees represent tighter track kerning and increasingly positive degrees represent looser track kerning. min-ptsize, min-kern, max-ptsize, and max-kern are all numbers. Since the track kerning is a linear function, the minimum and maximum cutoff
values (point sizes) are provided, along with the amount to track kern by, at the point size.
The kerning amounts are given relative to the point size. From those four values, the track kerning function can be derived. The track kerning function is a linear function. The equation for the line is determined from the data provided and, therefore, the track kerning values for any point size can be determined. The track kerning values for any point size below/above the minimum/maximum point size are constant (the minimum kerning amount/ maximum kerning amount)."

	^trackKern ifNil: [
		trackKern := OrderedCollection new]
%
category: 'accessing encoding'
method: AdobeFontMetric
byteEncoder
	"<ByteCharacterEncoder>"

	self encodingScheme = 'AdobeStandardEncoding' ifTrue: [
		^Font standardEncoder].
	self encodingScheme = 'WinAnsiEncoding' ifTrue: [
		^Font winAnsiEncoder].
	self encodingScheme = 'FontSpecific' ifTrue: [
		^Font winAnsiEncoder]
%
method: AdobeFontMetric
encodedCharMetrics
	^self charMetrics reject: [:charMetric | charMetric c = -1]
%
method: AdobeFontMetric
firstChar
	"<Integer>"

	self newEncoder decoder doWithIndex: [:char :i |
		char asInteger = Character illegalCode ifFalse: [
			^i - 1]].
	^self error: 'no character'
%
method: AdobeFontMetric
lastChar
	"<Integer>"

	self newEncoder decoder reverse doWithIndex: [:char :i |
		char asInteger = Character illegalCode ifFalse: [
			^256 - i]].
	^self error: 'no character'
%
method: AdobeFontMetric
newEncoder
	"<CharacterMapper>
	Encoder with the font-specified mapping.
	unencoded characters are not treated"

	| encoder |
	encoder := (PDFtalk at: #CharacterMap) new.
	self encodedCharMetrics do: [:charMetric |
		charMetric asCharacter ifNotNil: [:character |
			(self platformEncoder encode: character) = Character illegalCode ifFalse: [
				encoder encode: character as: charMetric c]]].
	^encoder
%
method: AdobeFontMetric
platformEncoder
	^Locale current defaultStreamEncoder
%
method: AdobeFontMetric
unencodedCharMetrics
	^self charMetrics select: [:charMetric | charMetric c = -1]
%
method: AdobeFontMetric
widths
	"<Array of: Integer>
	lastChar - firstChar + 1 widths"

	^(self firstChar to: self lastChar) collect: [:i |
		| m |
		m := self charMetricAt: i.
		m ifNil: [0] ifNotNil: [m width]]
%
method: AdobeFontMetric
widths256
	"<Array of: Integer>
	256 widths"

	^(0 to: 255) collect: [:i |
		(self charMetricAt: i) ifNotNil: [:metric | metric width] ifNil: [0]]
%
category: 'attributes'
method: AdobeFontMetric
ascender
	"<Number>"
	"(Optional.) For roman font programs: usually the y-value of the top of the lowercase d. If this font program contains no lowercase d, this keyword might be missing or number might be 0."

	^ascender ifNil: [0]
%
method: AdobeFontMetric
capHeight
	"<Number>"
	"(Optional.) Usually the y-value of the top of the capital H. If this font program contains no capital H, this keyword might be missing or number might be 0."

	^capHeight ifNil: [0]
%
method: AdobeFontMetric
characters
	"<Integer>"
	"(Optional.) The number of characters defined in this font program."

	^characters
%
method: AdobeFontMetric
characterSet
	"<String>"
	"(Optional.) String describing the character set (glyph complement) of this font program.
Examples: AdobeStandardLatin; AdobeStandardCyrillic"

	^characterSet
%
method: AdobeFontMetric
charMetricsSize
	"<Integer>"

	^charMetricsSize ifNil: [
		200]
%
method: AdobeFontMetric
charWidth
	^self direction charWidth
%
method: AdobeFontMetric
comment
	"<String>
	may have multiple lines: one for each comment statement"

	^comment ifNil: [
		String new]
%
method: AdobeFontMetric
descender
	"<Number>"
	"(Optional.) For roman font programs: typically the y-value of the bottom of the lowercase p. If this font program contains no lowercase p, this keyword might be missing or number might be 0."

	^descender ifNil: [0]
%
method: AdobeFontMetric
encodingScheme
	"<String>"
	"(Optional.) String indicating the default encoding vector for this font program. Common ones are AdobeStandardEncoding and JIS12-88-CFEncoding. Special font programs might state FontSpecific."

	^encodingScheme
%
method: AdobeFontMetric
familyName
	"<String>
	(Optional.) The name of the typeface family to which the font belongs."

	^familyName ifNil: [
		self fontName copyUpTo: $-]
%
method: AdobeFontMetric
fontBBox
	"<Rectangle>
	(Required.) Four numbers giving the lower left corner and the upper right corner of the font bounding box, in the sequence llx lly urx ury.
Note
The bounding box given here is that of the flattened paths, not the BÃ©zier curve descriptions. These values were specified to be integers in version 3.0 and before, but with the addition of multiple master fonts, the use of ânumbersâ is allowed."

	^fontBBox
%
method: AdobeFontMetric
fontName
	"<String>"
	"(Required.) Name of the font program as presented to the PostScript language findfont operator."

	^fontName
%
method: AdobeFontMetric
fullName
	"<String>
	(Optional.) The full text name of the font."

	^fullName
%
method: AdobeFontMetric
headroom
	"<Number>
	the distance between ascend to upper bound of the fontBBox"

	^self fontBBox corner y - self ascender
%
method: AdobeFontMetric
isFixedPitch
	^self direction isFixedPitch
%
method: AdobeFontMetric
italicAngle
	"<Number>"

	^self direction italicAngle
%
method: AdobeFontMetric
kernPairsSize
	"<Integer>"

	^kernPairsSize ifNil: [
		100]
%
method: AdobeFontMetric
metricsSets
	"<Integer[0 1 2]>
	0 = writing directions 0 only
	1 = writing directions 1 only
	2 = both"

	^metricsSets ifNil: [0]
%
method: AdobeFontMetric
notice
	"<String>"
	"(Optional.) Font name trademark or copyright notice."

	^notice
%
method: AdobeFontMetric
underlinePosition
	^self direction underlinePosition
%
method: AdobeFontMetric
underlineThickness
	^self direction underlineThickness
%
method: AdobeFontMetric
version
	"<String>"
	"(Optional.) Font program version identifier. Matches the string found in the FontInfo dictionary of the font program itself."

	^version
%
method: AdobeFontMetric
weight
	"<String>
	(Optional.) Weight of the font."

	^weight
%
method: AdobeFontMetric
weightNumber
	"<Integer [1..999]>
	(Optional.) Weight of the font."

	| dict |
	dict := Dictionary new.
	dict at: 'thin' put: 100.
	dict at: 'extralight' put: 200.
	dict at: 'ultralight' put: 200.
	dict at: 'light' put: 300.
	dict at: 'normal' put: 400.
	dict at: 'regular' put: 400.
	dict at: 'book' put: 400.
	dict at: 'medium' put: 500.
	dict at: 'roman' put: 500.
	dict at: 'semibold' put: 600.
	dict at: 'demibold' put: 600.
	dict at: 'demi' put: 600.
	dict at: 'bold' put: 700.
	dict at: 'extra bold' put: 800.
	dict at: 'extrabold' put: 800.
	dict at: 'ultrabold' put: 800.
	dict at: 'heavy' put: 900.
	dict at: 'black' put: 900.
	dict at: 'extrablack' put: 950.
	dict at: 'ultrablack' put: 950.
	^dict at: self weight asLowercase ifAbsent: [400]
%
method: AdobeFontMetric
xHeight
	"<Number>"
	"(Optional.) Typically the y-value of the top of the lowercase x. If this font program contains no lowercase x, this keyword might be missing or number might be 0."

	^xHeight ifNil: [0]
%
category: 'initialize-release'
method: AdobeFontMetric
initializeFromAfm: readstream
	AfmParser parseFrom: readstream into: self
%
category: 'private'
method: AdobeFontMetric
ascender: aString
	ascender := aString asNumber
%
method: AdobeFontMetric
capHeight: aString
	capHeight := aString asNumber
%
method: AdobeFontMetric
characters: aString
	characters := aString asNumber
%
method: AdobeFontMetric
characterSet: aString
	characterSet := aString
%
method: AdobeFontMetric
charMetricsSize: aString
	aString isEmpty ifTrue: [^self].
	charMetricsSize := aString asNumber
%
method: AdobeFontMetric
charWidth: aString
	self direction charWidth: aString
%
method: AdobeFontMetric
comment: aString
	comment := self comment , (self comment isEmpty ifTrue: [''] ifFalse: ['
']), aString
%
method: AdobeFontMetric
compositesSize: aString
	aString isEmpty ifTrue: [^self].
	aString asNumber
%
method: AdobeFontMetric
descender: aString
	descender := aString asNumber
%
method: AdobeFontMetric
encodingScheme: aString
	encodingScheme := aString
%
method: AdobeFontMetric
familyName: aString
	familyName := aString
%
method: AdobeFontMetric
fileFormatVersion: aString
	fileFormatVersion := aString
%
method: AdobeFontMetric
fontBBox: aString
	| numbers llx lly urx ury |
	numbers := (aString tokensBasedOn: Character space) collect: #asNumber.
	llx := numbers at: 1.
	lly := numbers at: 2.
	urx := numbers at: 3.
	ury := numbers at: 4.
	fontBBox := llx @ lly corner: urx @ ury
%
method: AdobeFontMetric
fontName: aString
	fontName := aString
%
method: AdobeFontMetric
fullName: aString
	fullName := aString
%
method: AdobeFontMetric
isFixedPitch: aString
	self direction isFixedPitch: aString
%
method: AdobeFontMetric
italicAngle: aString
	self direction italicAngle: aString
%
method: AdobeFontMetric
kernDataSize: aString
	"ignore"

	aString isEmpty ifTrue: [^self]
%
method: AdobeFontMetric
kernPairsSize: aString
	aString isEmpty ifTrue: [^self].
	kernPairsSize := aString asNumber
%
method: AdobeFontMetric
metricsSets: aString
	metricsSets := aString asNumber.
	metricsSets = 0 ifFalse: [
		self error: 'only horizontal direction supported so far']
%
method: AdobeFontMetric
notice: aString
	notice := aString
%
method: AdobeFontMetric
trackKernSize: aString
	aString isEmpty ifTrue: [^self].
	aString asNumber
%
method: AdobeFontMetric
underlinePosition: aString
	self direction underlinePosition: aString
%
method: AdobeFontMetric
underlineThickness: aString
	self direction underlineThickness: aString
%
method: AdobeFontMetric
version: aString
	version := aString
%
method: AdobeFontMetric
weight: aString
	weight := aString
%
method: AdobeFontMetric
xHeight: aString
	xHeight := aString asNumber
%
category: 'testing'
method: AdobeFontMetric
isItalic
	^self italicAngle isZero not
%
category: 'instance creation'
classmethod: AfmParser
parseFrom: readstream into: aFontMetric
	self new parseFrom: readstream into: aFontMetric
%
category: 'parsing'
method: AfmParser
charMetricEntriesFrom: string
	| tokens rawTokens |
	tokens := string tokensBasedOn: $;.
	rawTokens := tokens reject: [:token |
		token isEmpty or: [
		token allSatisfy: [:c |
			c isSeparator]]].
	^rawTokens collect: [:token |
		self keyAndValue: token]
%
method: AfmParser
charMetricFrom: line
	| entries charMetric |
	entries := self charMetricEntriesFrom: line.
	entries isEmpty ifTrue: [
		^nil].
	charMetric := CharacterMetric new.
	entries do: [:entry |
		[charMetric perform: (self asSetter: entry key) with: entry value] on: MessageNotUnderstood do: [
			self error: (#errBadAFMProperty << #dialogs >> '<1p> not recognized' expandMacrosWith: entry)]].
	charMetric isValid ifFalse: [
		self error: #errCharacterNameAndCode << #dialogs >> 'Character with no name and no code?'].
	^charMetric
%
method: AfmParser
kernPairFrom: line
	| entry kernPair |
	entry := self keyAndValue: line.
	kernPair := KernPair new.
	kernPair perform: (self asSetter: entry key) with: entry value.
	kernPair isValid ifFalse: [
		self error: 'kern pair is not valid'].
	^kernPair
%
method: AfmParser
parse
	| line lastline |
	line := self nextLine.
	(self keyAndValue: line) key = 'StartFontMetrics' ifFalse: [
		^self error: 'wrong header! StartFontMetrics was expected'].
	self perform: stack last value with: line.
	[stream atEnd] whileFalse: [
		line := self nextLine.
		line notEmpty ifTrue: [
			self perform: stack last value with: line.
			lastline := line]].
	(self keyAndValue: lastline) key = 'EndFontMetrics' ifFalse: [
		^self error: 'wrong trailer! EndFontMetrics expected']
%
method: AfmParser
parseAfmEntry: line
	| keyAndValue setter |
	(self tryParseSectionStartEndEntry: line) ifTrue: [^self].
	keyAndValue := self keyAndValue: line.
	setter := self asSetter: keyAndValue key.
	fontMetric perform: setter with: keyAndValue value
%
method: AfmParser
parseCharMetric: line
	"(Required if individual character metrics are present.) These keywords delimit the character metrics section of the file. The integer value indicates how many entries to expect."

	| charMetric |
	(self tryParseSectionStartEndEntry: line) ifTrue: [
		^self].
	(self tryParseComment: line) ifTrue: [
		^self].
	charMetric := self charMetricFrom: line.
	charMetric ifNil: [
		^self].
	fontMetric charMetrics add: charMetric
%
method: AfmParser
parseComposite: line
	(self tryParseSectionStartEndEntry: line) ifTrue: [^self].
	(self tryParseComment: line) ifTrue: [^self].
	fontMetric addComposite: line
%
method: AfmParser
parseEndSectionEntry: line
	stack removeLast key = line ifFalse: [
		self error: #errAFMBadNests << #dialogs >> 'AFM file contains badly nested Start / End clauses']
%
method: AfmParser
parseFrom: readstream into: aFontMetric
	fontMetric := aFontMetric.
	stream := readstream.
	stack := OrderedCollection with: 'AFM' -> #parseAfmEntry:.
	self parse
%
method: AfmParser
parseKernPair: line
	| kernPair |
	(self tryParseSectionStartEndEntry: line) ifTrue: [^self].
	(self tryParseComment: line) ifTrue: [^self].
	kernPair := self kernPairFrom: line.
	kernPair ifNil: [^self].
	fontMetric addKernPair: kernPair
%
method: AfmParser
parseStartSectionEntry: line
	| keyAndValue selector endToken |
	keyAndValue := self keyAndValue: line.
	selector := self subparserFor: keyAndValue.
	selector ifNil: [
		self error: #errUnrecognizedAMF << #dialogs >> 'Unrecognized AFM section'].
	endToken := keyAndValue key copyReplaceAll: 'Start' with: 'End'.
	stack add: endToken -> selector
%
method: AfmParser
parseTrackKern: line
	| kernPair |
	(self tryParseSectionStartEndEntry: line) ifTrue: [^self].
	(self tryParseComment: line) ifTrue: [^self].
	kernPair := self trackKernFrom: line.
	kernPair ifNil: [^self].
	fontMetric addTrackKern: kernPair
%
method: AfmParser
subparserFor: keyAndValue
	"<Symbol>"

	| key |
	key := keyAndValue key.
	key = 'StartFontMetrics' ifTrue: [
		fontMetric fileFormatVersion: keyAndValue value.
		^#parseAfmEntry:].
	key = 'StartCharMetrics' ifTrue: [
		fontMetric charMetricsSize: keyAndValue value.
		^#parseCharMetric:].
	key = 'StartKernData' ifTrue: [
		fontMetric kernDataSize: keyAndValue value.
		^#tryParseSectionStartEndEntry:].
	key = 'StartTrackKern' ifTrue: [
		fontMetric trackKernSize: keyAndValue value.
		^#parseTrackKern:].
	key = 'StartKernPairs' ifTrue: [
		fontMetric kernPairsSize: keyAndValue value.
		^#parseKernPair:].
	key = 'StartComposites' ifTrue: [
		fontMetric compositesSize: keyAndValue value.
		^#parseComposite:].
	key = 'StartDirection' ifTrue: [
		| direction |
		direction := keyAndValue value asNumber.
		direction = 0 ifTrue: [^#parseAfmEntry:].
		direction = 1 ifTrue: [^self error: 'vertical direction is not supported yet'].
		direction = 2 ifTrue: [^self error: 'multiple directions are not supported yet'].
		^self error: 'unknown for Direction'].
	^nil
%
method: AfmParser
trackKernFrom: line
	"<String> for now"
	"TrackKern degree min-ptsize min-kern max-ptsize max-kern"

	| entry |
	entry := self keyAndValue: line.
	entry key = 'TrackKern' ifFalse: [
		self error: 'no track kerning specification'].
	^entry value
%
method: AfmParser
tryParseComment: line
	^'Comment*' match: line
%
method: AfmParser
tryParseSectionStartEndEntry: line
	('Start*' match: line) ifTrue: [
		self parseStartSectionEntry: line.
		^true].
	('End*' match: line) ifTrue: [
		self parseEndSectionEntry: line.
		^true].
	^false
%
category: 'parsing utils'
method: AfmParser
asSetter: key
	| setter |
	setter := key copy , ':'.
	setter at: 1 put: key first asLowercase.
	^setter asSymbol
%
method: AfmParser
keyAndValue: line
	"<Association key: String value: String>"

	| rst |
	rst := line readStream.
	^(self token: rst) -> (self trimLine: rst upToEnd)
%
method: AfmParser
nextLine
	"<String>
	a line should not contain more than 255 characters"

	^self trimLine: stream nextLine
%
method: AfmParser
token: s
	"<String>
	leaves the stream after the following whitespace"

	| s1 c |
	s skipSeparators.
	s1 := (String new: 10) writeStream.
	[c := nil.
	s atEnd or: [(c := s next) isSeparator]]
		whileFalse: [s1 nextPut: c].
	c ifNotNil: [s skip: -1].
	s skipSeparators.
	^s1 contents
%
method: AfmParser
trimLine: line
	^self withoutTrailingSeparators: (self withoutLeadingSeparators: line)
%
method: AfmParser
withoutLeadingSeparators: raw
	"<String>"

	^raw readStream skipSeparators upToEnd
%
method: AfmParser
withoutTrailingSeparators: raw
	"<String>"

	^(self withoutLeadingSeparators: raw reverse) reverse
%
category: 'accessing'
method: CharacterMetric
b
	"<Rectangle>"
	"(Optional.) Character bounding box where llx, lly, urx, and ury are all numbers. If a character makes no marks on the page (for example, the space character), this field reads B 0 0 0 0, and these values are not considered when computing the FontBBox."

	^b
%
method: CharacterMetric
c
	"<Integer>"
	"Decimal value of default character code (-1 if not encoded).
(Either C or CH is required.)"

	^c ifNil: [
		-1]
%
method: CharacterMetric
code
	self c = -1 ifTrue: [
		^nil].
	^self c
%
method: CharacterMetric
l
	"<Dictionary key: Symbol value: Symbol)>"
	"L successor ligature
(Optional.) Ligature sequence where successor and ligature are both names. The current character may join with the character named successor to form the character named ligature. Note that characters can have more than one such entry. (See example above.)"

	^l ifNil: [
		l := Dictionary new]
%
method: CharacterMetric
leftSideBearing
	"<Number> in font space"

	^self b origin x
%
method: CharacterMetric
n
	"<Symbol>"
	"(Optional.) PostScript language character name."

	^n ifNil: [
		#'']
%
method: CharacterMetric
name
	^'/' , self n asString
%
method: CharacterMetric
postScriptName
	"<Symbol>"

	^self n
%
method: CharacterMetric
unicode
	"<Integer>
	System code for this character. Can be two byte big"

	^self asCharacter ifNil: [Character illegalCode] ifNotNil: [:char | char asInteger]
%
method: CharacterMetric
w
	"<Point>"

	^w ifNil: [0@0]
%
method: CharacterMetric
width
	"<Number>"

	^self w x
%
category: 'converting'
method: CharacterMetric
asCharacter
	"<Character | nil>"

	^(PostScript at: #CharacterNames) characterNamed: self n
%
method: CharacterMetric
asString
	^String with: self asCharacter
%
category: 'printing'
method: CharacterMetric
printOn: stream
	stream nextPutAll: self name
%
category: 'private'
method: CharacterMetric
b: aString
	| numbers llx lly urx ury |
	numbers := (aString tokensBasedOn: Character space) collect: #asNumber.
	llx := numbers at: 1.
	lly := numbers at: 2.
	urx := numbers at: 3.
	ury := numbers at: 4.
	b := llx @ lly corner: urx @ ury
%
method: CharacterMetric
c: aString
	c := aString asNumber
%
method: CharacterMetric
ch: aString
	"Same as C, but the character code is given in hexadecimal.
Example: <84AF>.
(Either C or CH is required.)"

	c := ('16r', aString) asNumber
%
method: CharacterMetric
l: aString
	| tokens |
	tokens := aString tokensBasedOn: Character space.
	self l at: tokens first asSymbol put: tokens last asSymbol
%
method: CharacterMetric
n: aString
	n := aString asSymbol
%
method: CharacterMetric
w: aString
	| tokens |
	tokens := aString tokensBasedOn: Character space.
	w := tokens first asNumber -> tokens last asNumber
%
method: CharacterMetric
w0: aString
	"(Optional.) Character width vector (x, y) for writing direction 0."

	| tokens |
	tokens := aString tokensBasedOn: Character space.
	w := tokens first asNumber -> tokens last asNumber
%
method: CharacterMetric
w0X: aString
	"(Optional.) Character width in x for writing direction 0. y is 0."

	w := self w x: aString asNumber
%
method: CharacterMetric
w0Y: aString
	"(Optional.) Character width in y for writing direction 0. x is 0."

	w := self w y: aString asNumber
%
method: CharacterMetric
w1: aString
	"(Optional.) Character width vector (x, y) for writing direction 1."

	self error: 'vertical direction is not supported so far'
%
method: CharacterMetric
w1X: aString
	"(Optional.) Character width in x for writing direction 1. y is 0."

	self error: 'vertical direction is not supported so far'
%
method: CharacterMetric
w1Y: aString
	"(Optional.) Character width in y for writing direction 1. x is 0."

	self error: 'vertical direction is not supported so far'
%
method: CharacterMetric
wX: aString
	w := self w x: aString asNumber
%
method: CharacterMetric
wY: aString
	w := self w y: aString asNumber
%
category: 'testing'
method: CharacterMetric
isValid
	^n notNil or: [
	(self c = -1) not]
%
category: 'instance creation'
classmethod: CustomFont
file: fileString pfb: pfbByteArray afm: afmString
	"add the source methods with
	<Filename> contentsOfEntireBinaryFile asSource"

	| inst |
	inst := self new.
	inst
		initializeFilename: fileString
		metrics: (AdobeFontMetric fromAfm: afmString readStream)
		program: (FontProgram fromPfb: pfbByteArray).
	^inst
%
classmethod: CustomFont
file: fileString pfb: pfbByteArray pfm: pfmByteArray
	"add the source methods with
	<Filename> contentsOfEntireBinaryFile asSource"

	| inst |
	inst := self new.
	inst
		initializeFilename: fileString
		metrics: (PostScriptFontMetrics fromBytes: pfmByteArray)
		program: (FontProgram fromPfb: pfbByteArray).
	^inst
%
category: 'accessing'
method: CustomFont
faceName
	^self metrics familyName
%
method: CustomFont
familyName
	^self program familyName
%
method: CustomFont
filename
	"<String>
	the file name of the Windows font files (without extension)"

	^filename
%
method: CustomFont
program
	"<FontProgram>
	the font program (from pfb or pfa)"

	^program
%
method: CustomFont
setWidth
	"this is tricky, since the value must be derived from FullName of the header of the font program.
	Apparently there are many non standard conventions used by the font vendors.
	For now we just answer the default and dont use it for the FontDescription.
	We dont need to use this for selecting the screen font on windows"

	^0.5
%
category: 'converting'
method: CustomFont
asPfa
	"<String>
	the contents of a PFA file"

	^self program asPfa
%
category: 'initialize-release'
method: CustomFont
initializeFilename: fileString metrics: aPostScriptFontMetrics program: aFontProgram
	filename := fileString.
	program := aFontProgram.
	self initializeMetrics: aPostScriptFontMetrics
%
category: 'attributes'
method: DirectionalFontMetric
charWidth
	"<Point x: Number y: Number>"
	"(Optional.) The x and y components of the width vector of this font programâs characters. If present, it means that all characters in this font program have the same CharWidth for this writing direction, and implies IsFixedPitch is true."

	^charWidth
%
method: DirectionalFontMetric
isFixedPitch
	"<Boolean>"
	"(Optional.) If boolean is true, this indicates that the font program is a fixed pitch (monospaced) font. A value of false indicates a proportionally spaced font. If this keyword is present, its value must not conflict with CharWidth; if absent, its value is assumed to be true if CharWidth is present and false if Charwidth is absent."

	^isFixedPitch ifNil: [charWidth notNil]
%
method: DirectionalFontMetric
italicAngle
	"<Number>"
	"(Optional.) Angle (in degrees counter-clockwise from the vertical) of the dominant vertical strokes of the font. For non-italic fonts, this angle will be zero.
Example: â12."

	^italicAngle ifNil: [0]
%
method: DirectionalFontMetric
underlinePosition
	"<Number>"
	"(Optional.) Distance from the baseline for centering underlining strokes. This can be interpreted as a y-displacement for writing direction 0, and an xdisplacement for writing direction 1."

	^underlinePosition
%
method: DirectionalFontMetric
underlineThickness
	"<Number>"
	"(Optional.) This is the stroke width for underlining, and is generally proportional to the stroke widths of characters in the font program."

	^underlineThickness
%
category: 'private'
method: DirectionalFontMetric
charWidth: aString
	| numbers |
	numbers := (aString tokensBasedOn: Character space) collect: #asNumber.
	charWidth := numbers first @ numbers last
%
method: DirectionalFontMetric
isFixedPitch: aString
	isFixedPitch := aString = 'true'
%
method: DirectionalFontMetric
italicAngle: aString
	italicAngle := aString asNumber
%
method: DirectionalFontMetric
underlinePosition: aString
	underlinePosition := aString asNumber
%
method: DirectionalFontMetric
underlineThickness: aString
	underlineThickness := aString asNumber
%
category: 'instance creation'
classmethod: ExtTextMetrics
capHeight: capHeightInteger xHeight: xHeightInteger lcAscent: lcAscentInteger lcDescent: lcDescentInteger slant: slantInteger superScript: superScriptInteger subScript: subScriptInteger superScriptSize: superScriptSizeInteger subScriptSize: subScriptSizeInteger ulOffset: ulOffsetInteger ulWidth: ulWidthInteger dblUpperUlOffset: dblUpperUlOffsetInteger dblLowerUlOffset: dblLowerUlOffsetInteger dblUpperUlWidth: dblUpperUlWidthInteger dblLowerUlWidth: dblLowerUlWidthInteger soOffset: soOffsetInteger soWidth: soWidthInteger
	| inst |
	inst := self new.
	inst
		initializeCapHeight: capHeightInteger
		xHeight: xHeightInteger
		lcAscent: lcAscentInteger
		lcDescent: lcDescentInteger
		slant: slantInteger
		superScript: superScriptInteger
		subScript: subScriptInteger
		superScriptSize: superScriptSizeInteger
		subScriptSize: subScriptSizeInteger
		ulOffset: ulOffsetInteger
		ulWidth: ulWidthInteger
		dblUpperUlOffset: dblUpperUlOffsetInteger
		dblLowerUlOffset: dblLowerUlOffsetInteger
		dblUpperUlWidth: dblUpperUlWidthInteger
		dblLowerUlWidth: dblLowerUlWidthInteger
		soOffset: soOffsetInteger
		soWidth: soWidthInteger.
	^inst
%
classmethod: ExtTextMetrics
fromBytes: aByteArray48
	| rst dummy etmSize masterHeight |
	rst := ByteReadStream littleEndianOn: aByteArray48.
	dummy := self new.
	etmSize := rst nextShort.
	etmSize = dummy etmSize ifFalse: [
		"found 0 in TeX font"
		etmSize isZero ifFalse: [
			self error: 'etmSize is not correct']].
	rst nextShort = dummy pointSize ifFalse: [
		self error: 'pointSize is not correct'].
	rst nextShort = dummy orientation ifFalse: [
		self error: 'orientation is not correct'].
	masterHeight := rst nextShort.
	masterHeight = dummy masterHeight ifFalse: [
		"found 300 in TeX font"
		"self error: 'masterHeight is not correct' "].
	rst nextShort = dummy minScale ifFalse: [
		self error: 'minScale is not correct'].
	rst nextShort = dummy maxScale ifFalse: [
		self error: 'maxScale is not correct'].
	rst nextShort = dummy masterUnits ifFalse: [
		self error: 'masterUnits is not correct'].
	^self
		capHeight: rst nextShort
		xHeight: rst nextShort
		lcAscent: rst nextShort
		lcDescent: rst nextShort
		slant: rst nextShort
		superScript: rst nextShort
		subScript: rst nextShort
		superScriptSize: rst nextShort
		subScriptSize: rst nextShort
		ulOffset: rst nextShort
		ulWidth: rst nextShort
		dblUpperUlOffset: rst nextShort
		dblLowerUlOffset: rst nextShort
		dblUpperUlWidth: rst nextShort
		dblLowerUlWidth: rst nextShort
		soOffset: rst nextShort
		soWidth: rst nextShort
%
category: 'specification'
classmethod: ExtTextMetrics
localSpecification
	"<constant: #etmSize class: #{Integer} comment: 'short: This field contains the size (in bytes) of the EXTTEXTMETRIC structure. The value is always 0x0034'>"
	"<constant: #pointSize class: #{Integer} comment: 'short: This field contains the nominal point size of the font in twips (this is a twentieth of a point or 1/1440 inch). This is the intended graphics art size of the font, the actual size may differ slightly depending on the resolution of the output device. In PFM files for Type-1 fonts this value should be set to 0x00f0 (240 twips or 12 pt)'>"
	"<constant: #orientation class: #{Integer} comment: 'short: This field contains the orientation of the font. This value refers to the ability of the font to be imaged on a page of a given orientation. It can be one of the following values:
    0x0000: any orientation
    0x0001: portrait (page width is smaller that its height)
    0x0002: landscape (page width is greater than its height) 
In PFM files for Type-1 fonts this field is always 0x0000 since a Type-1 font can be arbitrarily rotated'>"
	"<constant: #masterHeight class: #{Integer} comment: 'short: This field contains the font size in device units for which the values in the ExtentTable table are exact. Since Type-1 fonts are by convention defined in a box of 1000 x 1000 units, PFM files for Type-1 fonts have the value 0x03E8 (1000, the number of units per em) in this field'>"
	"<constant: #minScale class: #{Integer} comment: 'short: This field contains the minimum valid size for the font in device units. The minimum valid point size can then be calculated as follows:(etmMinScale * points-per-inch) / dfVertResThe value for Â»points-per-inchÂ« is normally 72, the dfVertRes field can be found in the PFMHEADER structure, it contains the vertical resolution at which the font was digitized (this value is in dots per inch).
In PFM files for Type-1 fonts the value should be set to 0x0003'>"
	"<constant: #maxScale class: #{Integer} comment: 'short: This field contains the maximum valid size for the font in device units. The maximum valid point size can then be calculated as follows:(etmMaxScale * points-per-inch) / dfVertRes(see also above etmMinScale).
In PFM files for Type-1 fonts the value should be set to 0x03E8 (1000)'>"
	"<constant: #masterUnits class: #{Integer} comment: 'short: This field contains the integer number of units per em where an em equals etmMasterHeight in the EXTTEXTMETRIC structure. In other words, the etmMasterHeight value is expressed in font units rather than device units.
In PFM files for Type-1 fonts the value should be set to 0x03E8 (1000)'>"
	<constant: #capHeight class: #(#Integer) comment: 'short: This field contains the height for uppercase characters in the font (the value is in font units). Typically, the character ''H'' is used for measurement purposes.
For Type-1 fonts you may find this value in the AFM file'>
	<constant: #xHeight class: #(#Integer) comment: 'short: This field contains the height for lowercase characters in the font (the value is in font units). Typically, the character ''x'' is used for measurement purposes.
For Type-1 fonts you may find this value in the AFM file'>
	<constant: #lcAscent class: #(#Integer) comment: 'lowerCaseAscent
short: This field contains the distance (in font units) that the ascender of lowercase letters extends above the baseline. This distance is typically specified for a lowercase character ''d''.
For Type-1 fonts you may find this value in the AFM file'>
	<constant: #lcDescent class: #(#Integer) comment: 'lowerCaseDescent
short: This field contains the distance (in font units) that the descender of lowercase letters extends below the baseline. This distance is typically specified for a lowercase character ''p''.
For Type-1 fonts you may find this value in the AFM file'>
	<constant: #slant class: #(#Integer) comment: 'short: This field contains the angle in tenth of degrees clockwise from the upright version of the font. The value is typically not zero only for an italic or oblique font.
For Type-1 fonts you may find this value in the AFM file (search for the entry Â»ItalicAngleÂ« and multiply it by 10)'>
	<constant: #superScript class: #(#Integer) comment: 'short: This field contains the recommended amount (in font units) to offset superscript characters from the baseline. This amount is typically specified by a negative offset'>
	<constant: #subScript class: #(#Integer) comment: 'short: This field contains the recommended amount (in font units) to offset subscript characters from the baseline. This amount is typically specified by a positive offset'>
	<constant: #superScriptSize class: #(#Integer) comment: 'short: This field contains the recommended size (in font units) for superscript characters in the font'>
	<constant: #subScriptSize class: #(#Integer) comment: 'short: This field contains the recommended size (in font units) for subscript characters in the font'>
	<constant: #ulOffset class: #(#Integer) comment: 'underlineOffset
short: This field contains the offset (in font units) downward from the baseline where the top of a single underline bar should appear.
For Type-1 fonts you may find this value in the AFM file'>
	<constant: #ulWidth class: #(#Integer) comment: 'underlineWidth
short: This field contains the thickness (in font units) of the underline bar.
For Type-1 fonts you may find this value in the AFM file'>
	<constant: #dblUpperUlOffset class: #(#Integer) comment: 'doubleUpperUnderlineOffset
short: This field contains the offset (in font units) downward from the baseline where the top of the upper, double underline bar should appear'>
	<constant: #dblLowerUlOffset class: #(#Integer) comment: 'doubleLowerUnderlineOffset
short: This field contains the offset (in font units) downward from the baseline where the top of the lower, double underline bar should appear'>
	<constant: #dblUpperUlWidth class: #(#Integer) comment: 'doubleUpperUnderlineWidth
short: This field contains the thickness (in font units) of the upper, double underline bar'>
	<constant: #dblLowerUlWidth class: #(#Integer) comment: 'doubleLowerUnderlineWidth
short: This field contains the thickness (in font units) of the lower, double underline bar'>
	<constant: #soOffset class: #(#Integer) comment: 'strikeOutOffset
short: This field contains the offset (in font units) upward from the baseline where the top of a strikeout bar should appear'>
	<constant: #soWidth class: #(#Integer) comment: 'strikeOutWidth
short: This field contains the thickness (in font units) of the strikeout bar'>
	"<constant: #kernPairs class: #{Integer} comment: 'WORD: This field contains the number of kerning pairs defined in the KerningPairs table in this PFM file. The number (and therefore the table) may not be greater than 512. If the PFM file doesn''t contain a KerningPairs table the value is zero'>"
	"<constant: #kernTracks class: #{Integer} comment: 'WORD: This field contains the number of kerning tracks defined in the KerningTracks table in this PFM file. The number (and therefore the table) may not be greater than 16. If the PFM file doesn''t contain a KerningTracks table the value is zero'>"
%
category: 'accessing'
method: ExtTextMetrics
capHeight
	"<Integer>
	short: This field contains the height for uppercase characters in the font (the value is in font units). Typically, the character 'H' is used for measurement purposes.
For Type-1 fonts you may find this value in the AFM file"

	^capHeight
%
method: ExtTextMetrics
dblLowerUlOffset
	"<Integer>
	doubleLowerUnderlineOffset
short: This field contains the offset (in font units) downward from the baseline where the top of the lower, double underline bar should appear"

	^dblLowerUlOffset
%
method: ExtTextMetrics
dblLowerUlWidth
	"<Integer>
	doubleLowerUnderlineWidth
short: This field contains the thickness (in font units) of the lower, double underline bar"

	^dblLowerUlWidth
%
method: ExtTextMetrics
dblUpperUlOffset
	"<Integer>
	doubleUpperUnderlineOffset
short: This field contains the offset (in font units) downward from the baseline where the top of the upper, double underline bar should appear"

	^dblUpperUlOffset
%
method: ExtTextMetrics
dblUpperUlWidth
	"<Integer>
	doubleUpperUnderlineWidth
short: This field contains the thickness (in font units) of the upper, double underline bar"

	^dblUpperUlWidth
%
method: ExtTextMetrics
etmSize
	"<Integer>
	short: This field contains the size (in bytes) of the EXTTEXTMETRIC structure. The value is always 0x0034"

	^52
%
method: ExtTextMetrics
lcAscent
	"<Integer>
	lowerCaseAscent
short: This field contains the distance (in font units) that the ascender of lowercase letters extends above the baseline. This distance is typically specified for a lowercase character 'd'.
For Type-1 fonts you may find this value in the AFM file"

	^lcAscent
%
method: ExtTextMetrics
lcDescent
	"<Integer>
	lowerCaseDescent
short: This field contains the distance (in font units) that the descender of lowercase letters extends below the baseline. This distance is typically specified for a lowercase character 'p'.
For Type-1 fonts you may find this value in the AFM file"

	^lcDescent
%
method: ExtTextMetrics
masterHeight
	"<Integer>
	short: This field contains the font size in device units for which the values in the ExtentTable table are exact. Since Type-1 fonts are by convention defined in a box of 1000 x 1000 units, PFM files for Type-1 fonts have the value 0x03E8 (1000, the number of units per em) in this field"

	^1000
%
method: ExtTextMetrics
masterUnits
	"<Integer>
	short: This field contains the integer number of units per em where an em equals etmMasterHeight in the EXTTEXTMETRIC structure. In other words, the etmMasterHeight value is expressed in font units rather than device units.
In PFM files for Type-1 fonts the value should be set to 0x03E8 (1000)"

	^1000
%
method: ExtTextMetrics
maxScale
	"<Integer>
	short: This field contains the maximum valid size for the font in device units. The maximum valid point size can then be calculated as follows:(etmMaxScale * points-per-inch) / dfVertRes(see also above etmMinScale).
In PFM files for Type-1 fonts the value should be set to 0x03E8 (1000)"

	^1000
%
method: ExtTextMetrics
minScale
	"<Integer>
	short: This field contains the minimum valid size for the font in device units. The minimum valid point size can then be calculated as follows:(etmMinScale * points-per-inch) / dfVertResThe value for Â»points-per-inchÂ« is normally 72, the dfVertRes field can be found in the PFMHEADER structure, it contains the vertical resolution at which the font was digitized (this value is in dots per inch).
In PFM files for Type-1 fonts the value should be set to 0x0003"

	^3
%
method: ExtTextMetrics
orientation
	"<Integer>
	short: This field contains the orientation of the font. This value refers to the ability of the font to be imaged on a page of a given orientation. It can be one of the following values:
		0x0000: any orientation
		0x0001: portrait (page width is smaller that its height)
		0x0002: landscape (page width is greater than its height) 
	In PFM files for Type-1 fonts this field is always 0x0000 since a Type-1 font can be arbitrarily rotated"

	^0
%
method: ExtTextMetrics
pointSize
	"<Integer>
	short: This field contains the nominal point size of the font in twips (this is a twentieth of a point or 1/1440 inch). This is the intended graphics art size of the font, the actual size may differ slightly depending on the resolution of the output device. In PFM files for Type-1 fonts this value should be set to 0x00f0 (240 twips or 12 pt)"

	^240
%
method: ExtTextMetrics
slant
	"<Integer>
	short: This field contains the angle in tenth of degrees clockwise from the upright version of the font. The value is typically not zero only for an italic or oblique font.
For Type-1 fonts you may find this value in the AFM file (search for the entry Â»ItalicAngleÂ« and multiply it by 10)"

	^slant
%
method: ExtTextMetrics
soOffset
	"<Integer>
	strikeOutOffset
short: This field contains the offset (in font units) upward from the baseline where the top of a strikeout bar should appear"

	^soOffset
%
method: ExtTextMetrics
soWidth
	"<Integer>
	strikeOutWidth
short: This field contains the thickness (in font units) of the strikeout bar"

	^soWidth
%
method: ExtTextMetrics
subScript
	"<Integer>
	short: This field contains the recommended amount (in font units) to offset subscript characters from the baseline. This amount is typically specified by a positive offset"

	^subScript
%
method: ExtTextMetrics
subScriptSize
	"<Integer>
	short: This field contains the recommended size (in font units) for subscript characters in the font"

	^subScriptSize
%
method: ExtTextMetrics
superScript
	"<Integer>
	short: This field contains the recommended amount (in font units) to offset superscript characters from the baseline. This amount is typically specified by a negative offset"

	^superScript
%
method: ExtTextMetrics
superScriptSize
	"<Integer>
	short: This field contains the recommended size (in font units) for superscript characters in the font"

	^superScriptSize
%
method: ExtTextMetrics
ulOffset
	"<Integer>
	underlineOffset
short: This field contains the offset (in font units) downward from the baseline where the top of a single underline bar should appear.
For Type-1 fonts you may find this value in the AFM file"

	^ulOffset
%
method: ExtTextMetrics
ulWidth
	"<Integer>
	underlineWidth
short: This field contains the thickness (in font units) of the underline bar.
For Type-1 fonts you may find this value in the AFM file"

	^ulWidth
%
method: ExtTextMetrics
xHeight
	"<Integer>
	short: This field contains the height for lowercase characters in the font (the value is in font units). Typically, the character 'x' is used for measurement purposes.
For Type-1 fonts you may find this value in the AFM file"

	^xHeight
%
category: 'converting'
method: ExtTextMetrics
asBytes
	"<ByteArray[48]>
	ByteArray suited to be written to a PFM file"

	| wst |
	wst := ByteWriteStream littleEndianOn: (ByteArray new: 48).
	wst
		nextPutShort: self etmSize;
		nextPutShort: self pointSize;
		nextPutShort: self orientation;
		nextPutShort: self masterHeight;
		nextPutShort: self minScale;
		nextPutShort: self maxScale;
		nextPutShort: self masterUnits;
		nextPutShort: self capHeight;
		nextPutShort: self xHeight;
		nextPutShort: self lcAscent;
		nextPutShort: self lcDescent;
		nextPutShort: self slant;
		nextPutShort: self superScript;
		nextPutShort: self subScript;
		nextPutShort: self superScriptSize;
		nextPutShort: self subScriptSize;
		nextPutShort: self ulOffset;
		nextPutShort: self ulWidth;
		nextPutShort: self dblUpperUlOffset;
		nextPutShort: self dblLowerUlOffset;
		nextPutShort: self dblUpperUlWidth;
		nextPutShort: self dblLowerUlWidth;
		nextPutShort: self soOffset;
		nextPutShort: self soWidth.
	^wst contents
%
category: 'initialize-release'
method: ExtTextMetrics
initializeCapHeight: capHeightInteger xHeight: xHeightInteger lcAscent: lcAscentInteger lcDescent: lcDescentInteger slant: slantInteger superScript: superScriptInteger subScript: subScriptInteger superScriptSize: superScriptSizeInteger subScriptSize: subScriptSizeInteger ulOffset: ulOffsetInteger ulWidth: ulWidthInteger dblUpperUlOffset: dblUpperUlOffsetInteger dblLowerUlOffset: dblLowerUlOffsetInteger dblUpperUlWidth: dblUpperUlWidthInteger dblLowerUlWidth: dblLowerUlWidthInteger soOffset: soOffsetInteger soWidth: soWidthInteger
	capHeight := capHeightInteger.
	xHeight := xHeightInteger.
	lcAscent := lcAscentInteger.
	lcDescent := lcDescentInteger.
	slant := slantInteger.
	superScript := superScriptInteger.
	subScript := subScriptInteger.
	superScriptSize := superScriptSizeInteger.
	subScriptSize := subScriptSizeInteger.
	ulOffset := ulOffsetInteger.
	ulWidth := ulWidthInteger.
	dblUpperUlOffset := dblUpperUlOffsetInteger.
	dblLowerUlOffset := dblLowerUlOffsetInteger.
	dblUpperUlWidth := dblUpperUlWidthInteger.
	dblLowerUlWidth := dblLowerUlWidthInteger.
	soOffset := soOffsetInteger.
	soWidth := soWidthInteger.
	self beImmutable
%
category: 'printing'
method: ExtTextMetrics
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'capHeight' value: self capHeight).
	args add: (printer constant: 'xHeight' value: self xHeight).
	args add: (printer constant: 'lcAscent' value: self lcAscent).
	args add: (printer constant: 'lcDescent' value: self lcDescent).
	args add: (printer constant: 'slant' value: self slant).
	args add: (printer constant: 'superScript' value: self superScript).
	args add: (printer constant: 'subScript' value: self subScript).
	args add: (printer constant: 'superScriptSize' value: self superScriptSize).
	args add: (printer constant: 'subScriptSize' value: self subScriptSize).
	args add: (printer constant: 'ulOffset' value: self ulOffset).
	args add: (printer constant: 'ulWidth' value: self ulWidth).
	args add: (printer constant: 'dblUpperUlOffset' value: self dblUpperUlOffset).
	args add: (printer constant: 'dblLowerUlOffset' value: self dblLowerUlOffset).
	args add: (printer constant: 'dblUpperUlWidth' value: self dblUpperUlWidth).
	args add: (printer constant: 'dblLowerUlWidth' value: self dblLowerUlWidth).
	args add: (printer constant: 'soOffset' value: self soOffset).
	args add: (printer constant: 'soWidth' value: self soWidth).
	^printer printvalue: self arguments: args
%
category: 'encryption'
classmethod: FontProgram
charstringDecoded: aByteArray
	"<ByteArray>"

	^self decode: aByteArray key: 4330
%
classmethod: FontProgram
charstringEncoded: aByteArray
	"<ByteArray>"

	^self encode: aByteArray key: 4330
%
classmethod: FontProgram
decode: aByteArray key: keyInteger
	"<ByteArray>"

	| wst |
	wst := WriteStream on: (ByteArray new: aByteArray size).
	aByteArray inject: keyInteger into: [:r :byte |
		wst nextPut: (byte bitXor: (r bitShift: -8)).
		self nextR: byte + r].
	^wst contents
%
classmethod: FontProgram
eexecDecoded: aByteArray
	"<ByteArray>"

	^self decode: aByteArray key: 55665
%
classmethod: FontProgram
eexecEncoded: aByteArray
	"<ByteArray>"

	^self encode: aByteArray key: 55665
%
classmethod: FontProgram
encode: aByteArray key: keyInteger
	"<ByteArray>"

	| wst |
	wst := WriteStream on: (ByteArray new: aByteArray size).
	aByteArray inject: keyInteger into: [:r :byte |
		| cipher |
		cipher := byte bitXor: (r bitShift: -8).
		wst nextPut: cipher.
		self nextR: cipher + r].
	^wst contents
%
classmethod: FontProgram
nextR: anInteger
	"<Integer>
	16 Bit"

	^anInteger * 52845 + 22719 bitAnd: 16rFFFF
%
category: 'instance creation'
classmethod: FontProgram
decodedAsciiHexadecimal: asciiString
	"<ByteArray>"

	| charsToCodes asciiRst nibbleWst nibbleRst byteWst |
	charsToCodes := IdentityDictionary new.
	'0123456789abcdef' doWithIndex: [:char :index | charsToCodes at: char put: index - 1].
	'ABCDEF' doWithIndex: [:char :index | charsToCodes at: char put: index + 9].
	asciiRst := asciiString readStream.
	nibbleWst := ByteArray new writeStream.
	[asciiRst atEnd] whileFalse: [
		charsToCodes at: asciiRst next ifPresent: [:index | nibbleWst nextPut: index]].
	nibbleRst := nibbleWst contents readStream.
	byteWst := ByteArray new writeStream.
	[nibbleRst atEnd] whileFalse: [
		byteWst nextPut: nibbleRst next * 16 + nibbleRst next].
	^byteWst contents
%
classmethod: FontProgram
fromPfa: aPfaString
	| rst header rest wst |
	rst := aPfaString readStream.
	header := rst upToAll: 'eexec'.
	header := header , (rst next: 6).
	rest := rst upToEnd.
	rst := rest reverse readStream.
	wst := String new writeStream.
	wst nextPutAll: (rst upTo: $0).
	wst nextPut: $0.
	[
	| char |
	char := rst peek.
	char = $0 or: [
	char = Character cr or: [
	char = Character lf]]] whileTrue: [
			wst nextPut: rst next].
	^self
		newHeader: (FontProgramHeader fromHeader: header)
		contents: (self eexecDecoded: (self decodedAsciiHexadecimal: rst upToEnd reverse)) asString
		trailerExtra: (self trailerExtraFrom: (wst contents allButLast: 1) reverse)
%
classmethod: FontProgram
fromPfb: aByteArray
	| rst header contents trailer |
	rst := ByteReadStream littleEndianOn: aByteArray.
	(rst next: 2) = #[128 1] ifFalse: [
		self error: 'Start of ASCII Section expected'].
	header := (rst next: rst nextUnsignedLong) asString.
	(rst next: 2) = #[128 2] ifFalse: [
		self error: 'Start of Binary Section expected'].
	contents := rst next: rst nextUnsignedLong.
	(rst next: 2) = #[128 1] ifFalse: [
		self error: 'Start of ASCII Section expected'].
	trailer := (rst next: rst nextUnsignedLong) asString.
	(rst next: 2) = #[128 3] ifFalse: [
		self error: 'EOF expected'].
	^self
		newHeader: (FontProgramHeader fromHeader: header)
		contents: (self eexecDecoded: contents) asString
		trailerExtra: (self trailerExtraFrom: trailer)
%
classmethod: FontProgram
glyphsDictionaryFrom: contentsByteString
	| dict rst done |
	dict := Valuemap new.
	rst := contentsByteString readStream.
	rst upToAll: '/CharStrings'.
	rst next: 12.
	done := false.
	[done] whileFalse: [
		| charName |
		rst upTo: $/.
		charName := (rst upTo: Character space) asSymbol.
		charName = #FontName
			ifTrue: [done := true]
			ifFalse: [
			| length charString |
			length := (rst upTo: Character space) asNumber.
			rst upTo: Character space.
			charString := self charstringDecoded: (rst next: length) asByteArray.
			dict at: charName put: charString]].
	^dict
%
classmethod: FontProgram
header: headerFontProgramHeader contents: contentsByteString glyphs: glyphsDictionary trailerExtra: trailerExtraString
	| inst |
	inst := self new.
	inst
		initializeHeader: headerFontProgramHeader
		contents: contentsByteString
		glyphs: glyphsDictionary
		trailerExtra: trailerExtraString.
	^inst
%
classmethod: FontProgram
newHeader: headerFontProgramHeader contents: contentsByteString trailerExtra: trailerExtraString
	^self
		header: headerFontProgramHeader
		contents: contentsByteString
		glyphs: (self glyphsDictionaryFrom: contentsByteString)
		trailerExtra: trailerExtraString
%
classmethod: FontProgram
trailerExtraFrom: aString
	"<String>
	extra string after the standard trailer of 512 $0 and 'cleartomark' "

	| rst |
	rst := (aString copyReplaceAll: (String with: Character lf) with: (String with: Character cr)) readStream.
	((rst upToAll: 'cleartomark') select: [:char | char = $0]) size = 512 ifFalse: [
		self error: '512 zeros $0 expected'].
	(rst upTo: Character cr) = 'cleartomark' ifFalse: [
		self error: '''cleartomark'' expected'].
	^rst upToEnd
%
category: 'instance creation optional'
classmethod: FontProgram
header: headerFontProgramHeader contents: contentsByteString trailerExtra: trailerExtraString
	| inst |
	inst := self new.
	inst
		initializeHeader: headerFontProgramHeader
		contents: contentsByteString
		glyphs: nil
		trailerExtra: trailerExtraString.
	^inst
%
category: 'specification'
classmethod: FontProgram
localSpecification
	<constant: #header class: #(#FontProgramHeader) comment: 'cleartext PostScript code'>
	<constant: #contents class: #(#String) comment: 'the content of the binary part'>
	<map: #glyphs comment: 'dictionary of charstrings'>
	<constant: #trailerExtra class: #(#String) comment: 'extra PostScript code after the standard trailer of 0''s and #cleartomark'>
%
category: 'accessing'
method: FontProgram
binaryContents
	"<ByteArray>
	the second (binary) section of a PFM file suitable to embed it into PDF"

	^self class eexecEncoded: self contents asByteArray
%
method: FontProgram
contents
	"<ByteString>
	the content of the binary part - eexec decoded"

	^contents
%
method: FontProgram
familyName
	"<String>"

	^self header familyName
%
method: FontProgram
fontBBox
	"<Rectangle>"

	^self header fontBBox
%
method: FontProgram
glyphs
	"<Dictionary>
	dictionary of charstrings"

	^glyphs ifNil: [Dictionary new beImmutable]
%
method: FontProgram
header
	"<FontProgramHeader>
	cleartext PostScript code"

	^header
%
method: FontProgram
trailer
	"<String>"

	| zerosLine wst |
	zerosLine := String new: 64 withAll: $0.
	wst := String new writeStream.
	8 timesRepeat: [
		wst
			nextPutAll: zerosLine;
			cr].
	wst
		nextPutAll: 'cleartomark';
		cr.
	wst nextPutAll: self trailerExtra.
	^wst contents
%
method: FontProgram
trailerByteString
	"<ByteString>
	suitable for embedding in PDF"

	self trailerExtra isEmpty ifTrue: [
		^String new].
	^self trailer asString
%
method: FontProgram
trailerExtra
	"<String>
	extra PostScript code after the standard trailer of 0's and #cleartomark"

	^trailerExtra
%
category: 'converting'
method: FontProgram
asPfa
	"<String>
	the contents of a PFA file"
	| wst |
	wst := String new writeStream.
	wst
		nextPutAll: self header contents;
		nextPutAll: (self encodedAsciiHexadecimal: (self class
							eexecEncoded: self contents asByteArray));
		cr;
		nextPutAll: self trailer.
	^wst contents
%
method: FontProgram
asPfb
	"<ByteArray>
	the contents of a PFB file"

	| head meat foot wst |
	head := self header contents.
	meat := self contents.
	foot := self trailer.
	wst := ByteWriteStream on: (ByteArray new: 6 + head size + 6 + meat size + 6 + foot size + 2).
	wst nextPutAll: #[128 1].
	wst nextPutUnsignedLong: head size.
	wst nextPutAll: head asByteArray.
	wst nextPutAll: #[128 2].
	wst nextPutUnsignedLong: meat size.
	wst nextPutAll: meat asByteArray.
	wst nextPutAll: #[128 1].
	wst nextPutUnsignedLong: foot size.
	wst nextPutAll: foot asByteArray.
	wst nextPutAll: #[128 3].
	^wst contents
%
method: FontProgram
encodedAsciiHexadecimal: aByteArray
	"<String>
	hexadecimal ASCII string using lower case letters and line breaks after 32 bytes (64 characters)"

	| codesToChars rst wst count |
	codesToChars := '0123456789abcdef'.
	rst := aByteArray readStream.
	wst := String new writeStream.
	count := 0.
	[rst atEnd] whileFalse: [
		| byte |
		byte := rst next.
		count := count + 1.
		wst nextPut: (codesToChars at: byte // 16 + 1).
		wst nextPut: (codesToChars at: byte \\ 16 + 1).
		count >= 32 ifTrue: [
			wst cr.
			count := 0]].
	^wst contents
%
category: 'initialize-release'
method: FontProgram
initializeHeader: headerFontProgramHeader contents: contentsByteString glyphs: glyphsDictionary trailerExtra: trailerExtraString
	header := headerFontProgramHeader.
	contents := contentsByteString.
	(glyphsDictionary notNil and: [
	glyphsDictionary notEmpty]) ifTrue: [
			glyphs := (Valuemap withAll: glyphsDictionary) beImmutable].
	trailerExtra := trailerExtraString.
	self beImmutable
%
category: 'marshaling'
method: FontProgram
passInstVars
	"for OpenTalk StSt"

	^#(#default #default #value #default)
%
category: 'printing'
method: FontProgram
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'header' value: self header).
	args add: (printer constant: 'contents' value: self contents).
	args add: (printer dictionary: 'glyphs' value: self glyphs).
	args add: (printer constant: 'trailerExtra' value: self trailerExtra).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: FontProgramHeader
familyName: familyNameString fontBBox: fontBBoxRectangle contents: contentsString
	| inst |
	inst := self new.
	inst
		initializeFamilyName: familyNameString
		fontBBox: fontBBoxRectangle
		contents: contentsString.
	^inst
%
classmethod: FontProgramHeader
familyNameFrom: contentsString
	"<String>"

	| rst |
	rst := contentsString readStream.
	rst upToAll: '/FamilyName'.
	rst upTo: $(.
	^rst upTo: $)
%
classmethod: FontProgramHeader
fontBBoxFrom: contentsString
	"<Rectangle>
	hack: just extract this piece of information from the header without parsing all PostScript"

	| rst numbersString numbers llx lly urx ury wst numbersStrings |
	rst := contentsString readStream.
	rst upToAll: '/FontBBox'.
	rst next: 10.
	[
	| c |
	c := rst peek.
	c isDigit or: [
	'-+' includes: c]] whileFalse: [rst next].
	wst := String new writeStream.
	[
	| c |
	c := rst peek.
	c isDigit or: [
	c isSeparator or: [
	'-+' includes: c]]] whileTrue: [
			wst nextPut: rst next].
	numbersString := wst contents.
	numbersStrings := numbersString trimBlanks tokensBasedOn: Character space.
	numbers := numbersStrings collect: #asNumber.
	llx := numbers at: 1.
	lly := numbers at: 2.
	urx := numbers at: 3.
	ury := numbers at: 4.
	^llx @ lly corner: urx @ ury
%
classmethod: FontProgramHeader
fromHeader: contentsString
	^self
		familyName: (self familyNameFrom: contentsString)
		fontBBox: (self fontBBoxFrom: contentsString)
		contents: contentsString
%
category: 'specification'
classmethod: FontProgramHeader
localSpecification
	<constant: #familyName class: #(#String) comment: 'The name of the typeface family to which the font belongs'>
	<constant: #fontBBox class: #(#Rectangle) comment: 'the font bounding box'>
	<constant: #contents class: #(#String) comment: 'cleartext PostScript code'>
%
category: 'accessing'
method: FontProgramHeader
contents
	"<String>
	cleartext PostScript code"

	^contents
%
method: FontProgramHeader
familyName
	"<String>
	The name of the typeface family to which the font belongs"

	^familyName
%
method: FontProgramHeader
fontBBox
	"<Rectangle>
	the font bounding box"

	^fontBBox
%
category: 'initialize-release'
method: FontProgramHeader
initializeFamilyName: familyNameString fontBBox: fontBBoxRectangle contents: contentsString
	familyName := familyNameString.
	fontBBox := fontBBoxRectangle.
	contents := contentsString.
	self beImmutable
%
category: 'printing'
method: FontProgramHeader
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'familyName' value: self familyName).
	args add: (printer constant: 'fontBBox' value: self fontBBox).
	args add: (printer constant: 'contents' value: self contents).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: Glyphs
on: someGlyphs font: aFont
	| inst |
	inst := self new.
	inst initializeGlyphs: someGlyphs font: aFont.
	^inst
%
category: 'accessing'
method: Glyphs
font
	^font
%
method: Glyphs
glyphs
	^glyphs ifNil: [#()]
%
category: 'initialize-release'
method: Glyphs
initializeGlyphs: someGlyphs font: aFont
	glyphs := someGlyphs.
	font := aFont
%
category: 'accessing'
method: KernPair
firstCharacter
	^firstCharacter
%
method: KernPair
firstCharacter: anObject
	firstCharacter := anObject
%
method: KernPair
kerning
	^kerning ifNil: [
		0@0]
%
method: KernPair
kerning: anObject
	kerning := anObject
%
method: KernPair
secondCharacter
	^secondCharacter
%
method: KernPair
secondCharacter: anObject
	secondCharacter := anObject
%
category: 'private'
method: KernPair
codeFromHex: hex
	"like <hex1>"

	| rst |
	rst := hex readStream.
	rst next = $< ifFalse: [self error: 'not a hex character'].
	^rst upTo: $>
%
method: KernPair
kP: line
	"KP name1 name2 numberx numbery
Name of the first character in the kerning pair followed by the name of the second character followed by the kerning vector specified as an (x, y) pair. The kerning vector is the amount by which to move the second character relative to the first character to position it properly. The kerning vector is specified in the standard character coordinate system. As with all metrics, in order to use this vector it is necessary to scale it by (current point size)/1000."

	| tokens |
	tokens := line tokensBasedOn: Character space.
	firstCharacter := (tokens at: 1) asSymbol.
	secondCharacter := (tokens at: 2) asSymbol.
	kerning := (tokens at: 3) asNumber @ (tokens at: 4) asNumber
%
method: KernPair
kPH: line
	"KPH <hex1> <hex2> numberx numbery
Same as KP, but the byte strings needed to generate the characters are given, rather than the names. hex1 and hex2 are hexadecimal values, enclosed in angle brackets."

	| tokens |
	tokens := line tokensBasedOn: Character space.
	firstCharacter := self codeFromHex: (tokens at: 1).
	secondCharacter := self codeFromHex: (tokens at: 2).
	kerning := (tokens at: 3) asNumber @ (tokens at: 4) asNumber
%
method: KernPair
kPX: line
	"KPX name1 name2 numberx
Name of the first character in the kerning pair followed by the name of the second character followed by the kerning amount in the x direction (y is zero). The kerning amount is specified in the units of the character coordinate system."

	| tokens |
	tokens := line tokensBasedOn: Character space.
	firstCharacter := (tokens at: 1) asSymbol.
	secondCharacter := (tokens at: 2) asSymbol.
	kerning := self kerning x: (tokens at: 3) asNumber
%
method: KernPair
kPY: line
	"KPY name1 name2 numbery
Same as KPX, but in the y direction (x is zero)."

	| tokens |
	tokens := line tokensBasedOn: Character space.
	firstCharacter := (tokens at: 1) asSymbol.
	secondCharacter := (tokens at: 2) asSymbol.
	kerning := self kerning y: (tokens at: 3) asNumber
%
category: 'testing'
method: KernPair
isValid
	^firstCharacter notNil and: [
	secondCharacter notNil]
%
category: 'instance creation'
classmethod: KernTrack
degree: degreeInteger minSize: minSizeInteger minAmount: minAmountInteger maxSize: maxSizeInteger maxAmount: maxAmountInteger
	| inst |
	inst := self new.
	inst
		initializeDegree: degreeInteger
		minSize: minSizeInteger
		minAmount: minAmountInteger
		maxSize: maxSizeInteger
		maxAmount: maxAmountInteger.
	^inst
%
classmethod: KernTrack
fromBytes: aByteArray10
	| rst |
	rst := ByteReadStream littleEndianOn: aByteArray10.
	^self
		degree: rst nextShort
		minSize: rst nextShort
		minAmount: rst nextShort
		maxSize: rst nextShort
		maxAmount: rst nextShort
%
category: 'specification'
classmethod: KernTrack
localSpecification
	<constant: #degree class: #(#Integer) comment: 'short: the amount to change the character spacing. Negative values mean closer together, positive values mean farther apart'>
	<constant: #minSize class: #(#Integer) comment: 'short: the minimum font height (in device units) for which to use linear track kerning'>
	<constant: #minAmount class: #(#Integer) comment: 'short: the track kerning amount to use for font heights less or equal minSize'>
	<constant: #maxSize class: #(#Integer) comment: 'short: the maximum font height (in device units) for which to use linear track kerning. For font heights between minSize and maxSize the track kerning amount has to increase linearily from minAmount to maxAmount'>
	<constant: #maxAmount class: #(#Integer) comment: 'short: the track kerning amount to use for font heights greater or equal maxSize'>
%
category: 'accessing'
method: KernTrack
degree
	"<Integer>
	short: the amount to change the character spacing. Negative values mean closer together, positive values mean farther apart"

	^degree
%
method: KernTrack
maxAmount
	"<Integer>
	short: the track kerning amount to use for font heights greater or equal maxSize"

	^maxAmount
%
method: KernTrack
maxSize
	"<Integer>
	short: the maximum font height (in device units) for which to use linear track kerning. For font heights between minSize and maxSize the track kerning amount has to increase linearily from minAmount to maxAmount"

	^maxSize
%
method: KernTrack
minAmount
	"<Integer>
	short: the track kerning amount to use for font heights less or equal minSize"

	^minAmount
%
method: KernTrack
minSize
	"<Integer>
	short: the minimum font height (in device units) for which to use linear track kerning"

	^minSize
%
category: 'converting'
method: KernTrack
asBytes
	"<ByteArray[10]>
	ByteArray suited to be written to a PFM file"

	| wst |
	wst := ByteWriteStream littleEndianOn: (ByteArray new: 10).
	wst
		nextPutShort: self degree;
		nextPutShort: self minSize;
		nextPutShort: self minAmount;
		nextPutShort: self maxSize;
		nextPutShort: self maxAmount.
	^wst contents
%
category: 'initialize-release'
method: KernTrack
initializeDegree: degreeInteger minSize: minSizeInteger minAmount: minAmountInteger maxSize: maxSizeInteger maxAmount: maxAmountInteger
	degree := degreeInteger.
	minSize := minSizeInteger.
	minAmount := minAmountInteger.
	maxSize := maxSizeInteger.
	maxAmount := maxAmountInteger.
	self beImmutable
%
category: 'printing'
method: KernTrack
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'degree' value: self degree).
	args add: (printer constant: 'minSize' value: self minSize).
	args add: (printer constant: 'minAmount' value: self minAmount).
	args add: (printer constant: 'maxSize' value: self maxSize).
	args add: (printer constant: 'maxAmount' value: self maxAmount).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: PairKern
first: firstInteger second: secondInteger kernAmount: kernAmountInteger
	| inst |
	inst := self new.
	inst initializeFirst: firstInteger second: secondInteger kernAmount: kernAmountInteger.
	^inst
%
classmethod: PairKern
fromBytes: aByteArray4
	| rst |
	rst := ByteReadStream littleEndianOn: aByteArray4.
	^self first: rst next second: rst next kernAmount: rst nextShort
%
classmethod: PairKern
readKernPairs: numberOfKernPairs from: byteReadstream at: kernTableOffset
	"<SequenceableCollection of: PairKern>"

	| kernPairs |
	numberOfKernPairs isZero ifTrue: [
		^#()].
	byteReadstream position: kernTableOffset.
	kernPairs := (ByteReadStream littleEndianOn: (byteReadstream next: 2)) nextUnsignedShort.
	numberOfKernPairs = kernPairs ifFalse: [
		self error: 'the number of kerning pairs is not correct'].
	^(1 to: numberOfKernPairs) collect: [:i | self fromBytes: (byteReadstream next: 4)]
%
classmethod: PairKern
tableFromBytes: aByteArray
	"<SequenceableCollection of: PairKern>"

	| rst numberOfKernPairs |
	rst := aByteArray readStream.
	numberOfKernPairs := (ByteReadStream littleEndianOn: (rst next: 2)) nextUnsignedShort.
	^(1 to: numberOfKernPairs) collect: [:i | self fromBytes: (rst next: 4)]
%
category: 'specification'
classmethod: PairKern
localSpecification
	<constant: #first class: #(#Integer) comment: 'BYTE: the first (left) character of the kerning pair'>
	<constant: #second class: #(#Integer) comment: 'BYTE: the second (right) character of the kerning pair'>
	<constant: #kernAmount class: #(#Integer) comment: 'short: the kerning amount in font units, the value is mostly negative'>
%
category: 'accessing'
method: PairKern
first
	"<Integer>
	BYTE: the first (left) character of the kerning pair"

	^first
%
method: PairKern
kernAmount
	"<Integer>
	short: the kerning amount in font units, the value is mostly negative"

	^kernAmount
%
method: PairKern
second
	"<Integer>
	BYTE: the second (right) character of the kerning pair"

	^second
%
category: 'converting'
method: PairKern
asBytes
	"<ByteArray[4]>
	ByteArray suited to be written to a PFM file"

	| wst |
	wst := ByteWriteStream littleEndianOn: (ByteArray new: 4).
	wst
		nextPut: self first;
		nextPut: self second;
		nextPutShort: self kernAmount.
	^wst contents
%
category: 'initialize-release'
method: PairKern
initializeFirst: firstInteger second: secondInteger kernAmount: kernAmountInteger
	first := firstInteger.
	second := secondInteger.
	kernAmount := kernAmountInteger.
	self beImmutable
%
category: 'printing'
method: PairKern
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'first' value: self first).
	args add: (printer constant: 'second' value: self second).
	args add: (printer constant: 'kernAmount' value: self kernAmount).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: PFMHeader
copyright: copyrightString ascent: ascentInteger internalLeading: internalLeadingInteger externalLeading: externalLeadingInteger italic: italicBoolean underline: underlineBoolean strikeOut: strikeOutBoolean weight: weightInteger charSet: charSetInteger pixHeight: pixHeightInteger pitchAndFamily: pitchAndFamilyInteger avgWidth: avgWidthInteger maxWidth: maxWidthInteger firstChar: firstCharInteger lastChar: lastCharInteger defaultChar: defaultCharInteger breakChar: breakCharInteger
	| inst |
	inst := self new.
	inst
		initializeCopyright: copyrightString
		ascent: ascentInteger
		internalLeading: internalLeadingInteger
		externalLeading: externalLeadingInteger
		italic: italicBoolean
		underline: underlineBoolean
		strikeOut: strikeOutBoolean
		weight: weightInteger
		charSet: charSetInteger
		pixHeight: pixHeightInteger
		pitchAndFamily: pitchAndFamilyInteger
		avgWidth: avgWidthInteger
		maxWidth: maxWidthInteger
		firstChar: firstCharInteger
		lastChar: lastCharInteger
		defaultChar: defaultCharInteger
		breakChar: breakCharInteger.
	^inst
%
classmethod: PFMHeader
copyright: copyrightString type: typeInteger points: pointsInteger vertRes: vertResInteger horizRes: horizResInteger ascent: ascentInteger internalLeading: internalLeadingInteger externalLeading: externalLeadingInteger italic: italicBoolean underline: underlineBoolean strikeOut: strikeOutBoolean weight: weightInteger charSet: charSetInteger pixWidth: pixWidthInteger pixHeight: pixHeightInteger pitchAndFamily: pitchAndFamilyInteger avgWidth: avgWidthInteger maxWidth: maxWidthInteger firstChar: firstCharInteger lastChar: lastCharInteger defaultChar: defaultCharInteger breakChar: breakCharInteger widthBytes: widthBytesInteger
	| dummy |
	dummy := self new.
	typeInteger = dummy type ifFalse: [
		self error: 'type is not correct'].
	"ignored - doc says points are irrelevant and should be set to 10. However found 12 in a TeX font"
	"pointsInteger = dummy points ifFalse: [
		self error: 'points is not correct']."
	vertResInteger = dummy vertRes ifFalse: [
		self error: 'vertRes is not correct'].
	horizResInteger = dummy horizRes ifFalse: [
		self error: 'horizRes is not correct'].
	"ignored - doc says points are irrelevant and should be set to 0. However found 1000 in a TeX font"
	"pixWidthInteger = dummy pixWidth ifFalse: [
		self error: 'pixWidth is not correct']."
	widthBytesInteger = dummy widthBytes ifFalse: [
		self error: 'widthBytes is not correct'].
	^self
		copyright: copyrightString
		ascent: ascentInteger
		internalLeading: internalLeadingInteger
		externalLeading: externalLeadingInteger
		italic: italicBoolean
		underline: underlineBoolean
		strikeOut: strikeOutBoolean
		weight: weightInteger
		charSet: charSetInteger
		pixHeight: pixHeightInteger
		pitchAndFamily: pitchAndFamilyInteger
		avgWidth: avgWidthInteger
		maxWidth: maxWidthInteger
		firstChar: firstCharInteger
		lastChar: lastCharInteger
		defaultChar: defaultCharInteger
		breakChar: breakCharInteger
%
classmethod: PFMHeader
fromBytes: aByteArray95
	| rst |
	rst := ByteReadStream littleEndianOn: aByteArray95.
	^self
		copyright: (rst next: 60) asString
		type: rst nextUnsignedShort
		points: rst nextUnsignedShort
		vertRes: rst nextUnsignedShort
		horizRes: rst nextUnsignedShort
		ascent: rst nextUnsignedShort
		internalLeading: rst nextUnsignedShort
		externalLeading: rst nextUnsignedShort
		italic: rst nextBooleanByte
		underline: rst nextBooleanByte
		strikeOut: rst nextBooleanByte
		weight: rst nextUnsignedShort
		charSet: rst next
		pixWidth: rst nextUnsignedShort
		pixHeight: rst nextUnsignedShort
		pitchAndFamily: rst next
		avgWidth: rst nextUnsignedShort
		maxWidth: rst nextUnsignedShort
		firstChar: rst next
		lastChar: rst next
		defaultChar: rst next
		breakChar: rst next
		widthBytes: rst nextUnsignedShort
%
category: 'specification'
classmethod: PFMHeader
localSpecification
	"<constant: #version class: #{Integer} comment: 'WORD: A user-defined version number for the resource data that tools can use to read and write resource files'>"
	"<constant: #fileSize class: #{Integer} comment: 'DWORD: The size of the file, in bytes'>"
	<constant: #copyright class: #(#String) comment: 'CHAR[60]: The font supplier''s copyright information'>
	"<constant: #type class: #{Integer} comment: 'WORD: The type of font file'>"
	"<constant: #points class: #{Integer} comment: 'WORD: The point size at which this character set looks best'>"
	"<constant: #vertRes class: #{Integer} comment: 'WORD: The vertical resolution, in dots per inch, at which this character set was digitized'>"
	"<constant: #horizRes class: #{Integer} comment: 'WORD: The horizontal resolution, in dots per inch, at which this character set was digitized'>"
	<constant: #ascent class: #(#Integer) comment: 'WORD: The distance from the top of a character definition cell to the baseline of the typographical font'>
	<constant: #internalLeading class: #(#Integer) comment: 'WORD: The amount of leading inside the bounds set by pixHeight. Accent marks and other diacritical characters can occur in this area'>
	<constant: #externalLeading class: #(#Integer) comment: 'WORD: The amount of extra leading that the application adds between rows'>
	<constant: #italic class: #(#Boolean) comment: 'BYTE: An italic font if not equal to zero'>
	<constant: #underline class: #(#Boolean) comment: 'BYTE: An underlined font if not equal to zero'>
	<constant: #strikeOut class: #(#Boolean) comment: 'BYTE: An strikeout font if not equal to zero'>
	<constant: #weight class: #(#Integer) comment: 'WORD: The weight of the font in the range 0 through 1000. For example, 400 is roman and 700 is bold. If this value is zero, a default weight is used'>
	<constant: #charSet class: #(#Integer) comment: 'BYTE: The character set of the font'>
	"<constant: #pixWidth class: #{Integer} comment: 'WORD: The width of the grid on which a vector font was digitized. For raster fonts, if the member is not equal to zero, it represents the width for all the characters in the bitmap. If the member is equal to zero, the font has variable-width characters'>"
	<constant: #pixHeight class: #(#Integer) comment: 'WORD: The height of the character bitmap for raster fonts or the height of the grid on which a vector font was digitized'>
	<constant: #pitchAndFamily class: #(#Integer) comment: 'BYTE: The pitch and the family of the font'>
	<constant: #avgWidth class: #(#Integer) comment: 'WORD: The average width of characters in the font (generally defined as the width of the letter x). This value does not include the overhang required for bold or italic characters'>
	<constant: #maxWidth class: #(#Integer) comment: 'WORD: The width of the widest character in the font'>
	<constant: #firstChar class: #(#Integer) comment: 'BYTE: The first character code defined in the font'>
	<constant: #lastChar class: #(#Integer) comment: 'BYTE: The last character code defined in the font'>
	<constant: #defaultChar class: #(#Integer) comment: 'BYTE: The character to substitute for characters not in the font'>
	<constant: #breakChar class: #(#Integer) comment: 'BYTE: The character that will be used to define word breaks for text justification'>
	"<constant: #widthBytes class: #{Integer} comment: 'WORD: The number of bytes in each row of the bitmap. This value is always even so that the rows start on word boundaries. For vector fonts, this member has no meaning'>"
	"<constant: #device class: #{Integer} comment: 'DWORD: The offset in the file to a null-terminated string that specifies a device name. For a generic font, this value is zero'>"
	"<constant: #face class: #{Integer} comment: 'DWORD: The offset in the file to a null-terminated string that names the typeface'>"
	"<constant: #bitsPointer class: #{Integer} comment: 'DWORD: This member is reserved'>"
	"<constant: #bitsOffset class: #{Integer} comment: 'DWORD: The name of the device if this font file is designated for a specific device'>"
%
category: 'accessing'
method: PFMHeader
ascent
	"<Integer>
	WORD: The distance from the top of a character definition cell to the baseline of the typographical font"

	^ascent
%
method: PFMHeader
avgWidth
	"<Integer>
	WORD: The average width of characters in the font (generally defined as the width of the letter x). This value does not include the overhang required for bold or italic characters"

	^avgWidth
%
method: PFMHeader
breakChar
	"<Integer>
	BYTE: The character that will be used to define word breaks for text justification"

	^breakChar
%
method: PFMHeader
charSet
	"<Integer>
	BYTE: The character set of the font"

	^charSet
%
method: PFMHeader
copyright
	"<String>
	CHAR[60]: The font supplier's copyright information"

	^copyright
%
method: PFMHeader
defaultChar
	"<Integer>
	BYTE: The character to substitute for characters not in the font"

	^defaultChar
%
method: PFMHeader
externalLeading
	"<Integer>
	WORD: The amount of extra leading that the application adds between rows"

	^externalLeading
%
method: PFMHeader
familySymbol
	"<Symbol>
	The family of the font as Symbol known to Windows.
	Raises error on unknown"

	| bits |
	bits := self pitchAndFamily bitShift: -4.
	bits isZero ifTrue: [
		^#FF_DONTCARE].
	^#(#FF_ROMAN #FF_SWISS #FF_MODERN #FF_SCRIPT #FF_DECORATIVE) at: bits
%
method: PFMHeader
firstChar
	"<Integer>
	BYTE: The first character code defined in the font"

	^firstChar
%
method: PFMHeader
horizRes
	"<Integer>	WORD
	This field contains the horizontal resolution at which the font was digitized (the value is in dots per inch). The value of this field should be set to 0x012C (300 dpi)"

	^16r012c
%
method: PFMHeader
internalLeading
	"<Integer>
	WORD: The amount of leading inside the bounds set by pixHeight. Accent marks and other diacritical characters can occur in this area"

	^internalLeading
%
method: PFMHeader
italic
	"<Boolean>
	BYTE: An italic font if not equal to zero"

	^italic
%
method: PFMHeader
lastChar
	"<Integer>
	BYTE: The last character code defined in the font"

	^lastChar
%
method: PFMHeader
maxWidth
	"<Integer>
	WORD: The width of the widest character in the font"

	^maxWidth
%
method: PFMHeader
numberOfCharacters
	"<Integer>"

	^self lastChar - self firstChar + 1
%
method: PFMHeader
pitchAndFamily
	"<Integer>
	BYTE: The pitch and the family of the font"

	^pitchAndFamily
%
method: PFMHeader
pitchSymbol
	"<Symbol>
	The pitch of the font as Symbol known to Windows.
	Raises error on unknown"

	self isFixedPitch ifTrue: [
		^#FIXED_PITCH].
	^#VARIABLE_PITCH
%
method: PFMHeader
pixHeight
	"<Integer>	WORD
	This field contains the height of all characters in the font. For raster fonts this field contains the height in scan lines of every character bitmap. For vector fonts this field contains the height of the grid on which the font was digitized. The value is ignored by PostScript printer drivers"

	^pixHeight
%
method: PFMHeader
pixWidth
	"<Integer>	WORD
	This field contains the width of all characters in the font. For raster fonts this field contains the width in pixels of every character bitmap if the font is fixed-pitch, otherwise this field is zero and the character's widths are specified in the WidthTable table. For vector fonts this field contains the width of the grid on which the font was digitized. The value is ignored by PostScript printer drivers"

	^0
%
method: PFMHeader
points
	"<Integer>	WORD
	This field contains the point size at which this font looks best. Since this is not relevant for scalable fonts the field is ignored. The value of this field should be set to 0x000a (10 pt)"

	^16r000a
%
method: PFMHeader
stemV
	"<Integer>"
	"usWeightClass - roughly estimate StemV.
Estimation is based on the following expression:
	stemv = (os2->usWeightClass/65)*(os2->usWeightClass/65)+50
I've found this expression in some Adobe document (lost). We use
this expression also, otherwise, we must analyze glyph data.

found in:
(This is dvipdfmx, an eXtended version of dvipdfm by Mark A. Wicks.
Copyright (C) 2002 by Jin-Hwan Cho and Shunsaku Hirata,
the dvipdfmx project team <dvipdfmx@project.ktug.or.kr>)"

	| wc |
	wc := self weight / 65.
	^(wc * wc + 50) rounded
%
method: PFMHeader
strikeOut
	"<Boolean>
	BYTE: An strikeout font if not equal to zero"

	^strikeOut
%
method: PFMHeader
type
	"<Integer>	WORD
	This field contains the font type. The low-order byte is a combination of the following values (only the values being of interest in PFM files are given):

    0x00 (PF_RASTER_TYPE): font is a raster font
    0x01 (PF_VECTOR_TYPE): font is a vector font
    0x80 (PF_DEVICE_REALIZED): font realized by the device driver 

The high-order byte is never used in PFM files, it is always zero.
In PFM files for Type-1 fonts the value in this field is always 0x0081. "

	^16r0081
%
method: PFMHeader
underline
	"<Boolean>
	BYTE: An underlined font if not equal to zero"

	^underline
%
method: PFMHeader
vertRes
	"<Integer>	WORD
	This field contains the vertical resolution at which the font was digitized (the value is in dots per inch). The value of this field should be set to 0x012C (300 dpi)"

	^16r012c
%
method: PFMHeader
weight
	"<Integer>
	WORD: The weight of the font in the range 0 through 1000. For example, 400 is roman and 700 is bold. If this value is zero, a default weight is used"

	^weight
%
method: PFMHeader
widthBytes
	"<Integer>	WORD
	This field contains the number of bytes in every row of the font bitmap. The value is always an even quantity so that rows of the bitmap start on 16 bit boundaries. This field is not used for vector fonts, it is therefore zero in e.g. PFM files for Type-1 fonts"

	^0
%
category: 'converting'
method: PFMHeader
asBytes
	"<ByteArray[95]>
	ByteArray suited to be written to a PFM file"

	| wst |
	wst := ByteWriteStream littleEndianOn: (ByteArray new: 95).
	wst
		nextPutAll: self copyright asByteArray;
		nextPutUnsignedShort: self type;
		nextPutUnsignedShort: self points;
		nextPutUnsignedShort: self vertRes;
		nextPutUnsignedShort: self horizRes;
		nextPutUnsignedShort: self ascent;
		nextPutUnsignedShort: self internalLeading;
		nextPutUnsignedShort: self externalLeading;
		nextPutBooleanByte: self italic;
		nextPutBooleanByte: self underline;
		nextPutBooleanByte: self strikeOut;
		nextPutUnsignedShort: self weight;
		nextPut: self charSet;
		nextPutUnsignedShort: self pixWidth;
		nextPutUnsignedShort: self pixHeight;
		nextPut: self pitchAndFamily;
		nextPutUnsignedShort: self avgWidth;
		nextPutUnsignedShort: self maxWidth;
		nextPut: self firstChar;
		nextPut: self lastChar;
		nextPut: self defaultChar;
		nextPut: self breakChar;
		nextPutUnsignedShort: self widthBytes.
	^wst contents
%
category: 'initialize-release'
method: PFMHeader
initializeCopyright: copyrightString ascent: ascentInteger internalLeading: internalLeadingInteger externalLeading: externalLeadingInteger italic: italicBoolean underline: underlineBoolean strikeOut: strikeOutBoolean weight: weightInteger charSet: charSetInteger pixHeight: pixHeightInteger pitchAndFamily: pitchAndFamilyInteger avgWidth: avgWidthInteger maxWidth: maxWidthInteger firstChar: firstCharInteger lastChar: lastCharInteger defaultChar: defaultCharInteger breakChar: breakCharInteger
	copyright := copyrightString.
	ascent := ascentInteger.
	internalLeading := internalLeadingInteger.
	externalLeading := externalLeadingInteger.
	italic := italicBoolean.
	underline := underlineBoolean.
	strikeOut := strikeOutBoolean.
	weight := weightInteger.
	charSet := charSetInteger.
	pixHeight := pixHeightInteger.
	pitchAndFamily := pitchAndFamilyInteger.
	avgWidth := avgWidthInteger.
	maxWidth := maxWidthInteger.
	firstChar := firstCharInteger.
	lastChar := lastCharInteger.
	defaultChar := defaultCharInteger.
	breakChar := breakCharInteger.
	self beImmutable
%
category: 'printing'
method: PFMHeader
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'copyright' value: self copyright).
	args add: (printer constant: 'ascent' value: self ascent).
	args add: (printer constant: 'internalLeading' value: self internalLeading).
	args add: (printer constant: 'externalLeading' value: self externalLeading).
	args add: (printer constant: 'italic' value: self italic).
	args add: (printer constant: 'underline' value: self underline).
	args add: (printer constant: 'strikeOut' value: self strikeOut).
	args add: (printer constant: 'weight' value: self weight).
	args add: (printer constant: 'charSet' value: self charSet).
	args add: (printer constant: 'pixHeight' value: self pixHeight).
	args add: (printer constant: 'pitchAndFamily' value: self pitchAndFamily).
	args add: (printer constant: 'avgWidth' value: self avgWidth).
	args add: (printer constant: 'maxWidth' value: self maxWidth).
	args add: (printer constant: 'firstChar' value: self firstChar).
	args add: (printer constant: 'lastChar' value: self lastChar).
	args add: (printer constant: 'defaultChar' value: self defaultChar).
	args add: (printer constant: 'breakChar' value: self breakChar).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: PFMHeader
isFixedPitch
	^(self pitchAndFamily bitAnd: 2r00000001) isZero
%
category: 'accessing'
classmethod: PostScriptFontMetrics
deviceName
	"<String>
	the name of the printer driver family"

	^'PostScript'
%
classmethod: PostScriptFontMetrics
version
	"<Integer>	WORD
	the version of the PFM file. For PFM files that conform to this description (namely PFM files for Type-1 fonts) the value is always 0x0100"

	^16r0100
%
category: 'instance creation'
classmethod: PostScriptFontMetrics
fromBytes: aByteArray
	| rst header deviceOffset faceOffset extMetricsOffset extentTableOffset pairKernTableOffset trackKernTableOffset driverInfoOffset extTextMetrics numberOfKernPairs numberOfKernTracks faceName driverInfo extentTable kerningPairs kerningTracks |
	rst := ByteReadStream littleEndianOn: aByteArray.
	"PFMHeader"
	rst nextUnsignedShort = self version ifFalse: [
		self error: 'version is not correct'].
	rst nextUnsignedLong = aByteArray size ifFalse: [
		self error: 'file size is not correct'].
	header := PFMHeader fromBytes: (rst next: 95).
	deviceOffset := rst nextUnsignedLong.
	faceOffset := rst nextUnsignedLong.
	rst next: 8.
	"PFMExtension"
	rst nextUnsignedShort = 30 ifFalse: [
		self error: 'sizeFields is not correct'].
	extMetricsOffset := rst nextUnsignedLong.
	extentTableOffset := rst nextUnsignedLong.
	rst nextUnsignedLong isZero ifFalse: [
		self error: 'originTable is not correct'].
	pairKernTableOffset := rst nextUnsignedLong.
	trackKernTableOffset := rst nextUnsignedLong.
	driverInfoOffset := rst nextUnsignedLong.
	rst nextUnsignedLong isZero ifFalse: [
		self error: 'reserved is not correct'].
	rst position: extMetricsOffset.
	extTextMetrics := ExtTextMetrics fromBytes: (rst next: 48).
	numberOfKernPairs := rst nextUnsignedShort.
	numberOfKernTracks := rst nextUnsignedShort.
	rst position: deviceOffset.
	rst nextString = self deviceName ifFalse: [
		self error: 'deviceName is not correct'].
	rst position: faceOffset.
	faceName := rst nextString.
	rst position: driverInfoOffset.
	driverInfo := rst nextString.
	rst position: extentTableOffset.
	extentTable := (1 to: header numberOfCharacters) collect: [:i |
		(ByteReadStream littleEndianOn: (rst next: 2)) nextUnsignedShort].
	numberOfKernPairs isZero ifFalse: [
		rst position: pairKernTableOffset.
		kerningPairs := PairKern tableFromBytes: (rst next: numberOfKernPairs * 4 + 2).
		numberOfKernPairs = kerningPairs size ifFalse: [
			self error: 'the number of kerning pairs is not correct']].
	numberOfKernTracks isZero ifFalse: [
		rst position: trackKernTableOffset.
		kerningTracks := (1 to: numberOfKernTracks) collect: [:i |
			KernTrack fromBytes: (rst next: 10)]].
	^self
		header: header
		extTextMetrics: extTextMetrics
		faceName: faceName
		driverInfo: driverInfo
		extentTable: extentTable
		kerningPairs: kerningPairs
		kerningTracks: kerningTracks
%
classmethod: PostScriptFontMetrics
header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString extentTable: extentTableArray kerningPairs: kerningPairsArray kerningTracks: kerningTracksArray
	| inst |
	inst := self new.
	inst
		initializeHeader: headerPFMHeader
		extTextMetrics: extTextMetricsExtTextMetrics
		faceName: faceNameString
		driverInfo: driverInfoString
		extentTable: extentTableArray
		kerningPairs: kerningPairsArray
		kerningTracks: kerningTracksArray.
	^inst
%
category: 'instance creation optional'
classmethod: PostScriptFontMetrics
header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString
	| inst |
	inst := self new.
	inst
		initializeHeader: headerPFMHeader
		extTextMetrics: extTextMetricsExtTextMetrics
		faceName: faceNameString
		driverInfo: driverInfoString
		extentTable: nil
		kerningPairs: nil
		kerningTracks: nil.
	^inst
%
classmethod: PostScriptFontMetrics
header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString extentTable: extentTableArray
	| inst |
	inst := self new.
	inst
		initializeHeader: headerPFMHeader
		extTextMetrics: extTextMetricsExtTextMetrics
		faceName: faceNameString
		driverInfo: driverInfoString
		extentTable: extentTableArray
		kerningPairs: nil
		kerningTracks: nil.
	^inst
%
classmethod: PostScriptFontMetrics
header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString extentTable: extentTableArray kerningPairs: kerningPairsArray
	| inst |
	inst := self new.
	inst
		initializeHeader: headerPFMHeader
		extTextMetrics: extTextMetricsExtTextMetrics
		faceName: faceNameString
		driverInfo: driverInfoString
		extentTable: extentTableArray
		kerningPairs: kerningPairsArray
		kerningTracks: nil.
	^inst
%
classmethod: PostScriptFontMetrics
header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString extentTable: extentTableArray kerningTracks: kerningTracksArray
	| inst |
	inst := self new.
	inst
		initializeHeader: headerPFMHeader
		extTextMetrics: extTextMetricsExtTextMetrics
		faceName: faceNameString
		driverInfo: driverInfoString
		extentTable: extentTableArray
		kerningPairs: nil
		kerningTracks: kerningTracksArray.
	^inst
%
classmethod: PostScriptFontMetrics
header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString kerningPairs: kerningPairsArray
	| inst |
	inst := self new.
	inst
		initializeHeader: headerPFMHeader
		extTextMetrics: extTextMetricsExtTextMetrics
		faceName: faceNameString
		driverInfo: driverInfoString
		extentTable: nil
		kerningPairs: kerningPairsArray
		kerningTracks: nil.
	^inst
%
classmethod: PostScriptFontMetrics
header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString kerningPairs: kerningPairsArray kerningTracks: kerningTracksArray
	| inst |
	inst := self new.
	inst
		initializeHeader: headerPFMHeader
		extTextMetrics: extTextMetricsExtTextMetrics
		faceName: faceNameString
		driverInfo: driverInfoString
		extentTable: nil
		kerningPairs: kerningPairsArray
		kerningTracks: kerningTracksArray.
	^inst
%
classmethod: PostScriptFontMetrics
header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString kerningTracks: kerningTracksArray
	| inst |
	inst := self new.
	inst
		initializeHeader: headerPFMHeader
		extTextMetrics: extTextMetricsExtTextMetrics
		faceName: faceNameString
		driverInfo: driverInfoString
		extentTable: nil
		kerningPairs: nil
		kerningTracks: kerningTracksArray.
	^inst
%
category: 'accessing'
method: PostScriptFontMetrics
ascender
	^self extTextMetrics lcAscent
%
method: PostScriptFontMetrics
descender
	^self extTextMetrics lcDescent negated
%
method: PostScriptFontMetrics
driverInfo
	"<String>
	additional informations for the printer driver like the name of the font, sequences necessary for selecting the font etc. "

	^driverInfo
%
method: PostScriptFontMetrics
extentTable
	"<Array>
	the character widths for scalable fonts"

	^extentTable ifNil: [#()]
%
method: PostScriptFontMetrics
extTextMetrics
	"<ExtTextMetrics>
	This section (52 Bytes) contains additional informations about the font (orientation, minimum and maximum acceptable size of the font, the cap height, the degree of obliqueness for italic fonts etc.)"

	^extTextMetrics
%
method: PostScriptFontMetrics
faceName
	"<String>
	the name of the font face, normally without suffixes like Â»-BoldÂ«, Â»-ItalicÂ« etc.
	Used in a windows LOGFONT"

	^faceName
%
method: PostScriptFontMetrics
font
	"<Type1.Font>
	back pointer to containing font object"

	^font
%
method: PostScriptFontMetrics
font: aFont
	font := aFont
%
method: PostScriptFontMetrics
header
	"<PFMHeader>
	The header (117 Bytes) with basic information"

	^header
%
method: PostScriptFontMetrics
kerningPairs
	"<Array>
	kerning pairs together with the kerning amount for every pair"

	^kerningPairs ifNil: [#()]
%
method: PostScriptFontMetrics
kerningTracks
	"<Array>
	informations for globally font kerning according to the size the font is printed with"

	^kerningTracks ifNil: [#()]
%
method: PostScriptFontMetrics
postScriptName
	"<String>
	the name as used by PostScript and PDF"

	^self driverInfo
%
method: PostScriptFontMetrics
stemV
	"<Integer>"

	^self header stemV
%
method: PostScriptFontMetrics
underlinePosition
	^self extTextMetrics ulOffset negated
%
method: PostScriptFontMetrics
underlineThickness
	^self extTextMetrics ulWidth
%
method: PostScriptFontMetrics
weight
	"<Integer>
	WORD: The weight of the font in the range 0 through 1000. For example, 400 is roman and 700 is bold. If this value is zero, a default weight is used"

	^self header weight
%
category: 'comparing'
method: PostScriptFontMetrics
= aPostScriptFontMetrics
	^self class == aPostScriptFontMetrics class and: [
	self font = aPostScriptFontMetrics font and: [
	self header = aPostScriptFontMetrics header and: [
	self extTextMetrics = aPostScriptFontMetrics extTextMetrics and: [
	self faceName = aPostScriptFontMetrics faceName and: [
	self driverInfo = aPostScriptFontMetrics driverInfo and: [
	self extentTable = aPostScriptFontMetrics extentTable and: [
	self kerningPairs = aPostScriptFontMetrics kerningPairs and: [
	self kerningTracks = aPostScriptFontMetrics kerningTracks]]]]]]]]
%
method: PostScriptFontMetrics
hash
	^self font hash bitXor: (self header hash bitXor: (self extTextMetrics hash bitXor: (self faceName hash bitXor: (self driverInfo hash bitXor: (self extentTable hash bitXor: (self kerningPairs hash bitXor: self kerningTracks))))))
%
category: 'converting'
method: PostScriptFontMetrics
asBytes
	"<ByteArray>
	ByteArray suited to be written as a PFM file.
	The order of elements follows the advice of Adobe in technical note 5178.PFM.pdf :
		1. header (required)
		2. extension (required)
		3. extTextMetrics
		4. deviceName (constant 'PostScript')
		5. faceName
		6. driverInfo (PostScript name)
		7. extentTable
		8. kerningPairs
		(9. kerningTracks) - never seen - junk feature?
	Therefore, the offsets 1 to 5 are fixed"

	| extTextMetricsOffset deviceOffset sizeOfDeviceName faceOffset sizeOfFaceName driverInfoOffset sizeOfDriverInfo extentTableOffset sizeOfExtentTable kerningPairsOffset sizeOfKerningPairs kerningTracksOffset sizeOfKerningTracks fileSize wst |
	extTextMetricsOffset := 117 + 30.
	deviceOffset := extTextMetricsOffset + 52.
	sizeOfDeviceName := self class deviceName size + 1.
	faceOffset := deviceOffset + sizeOfDeviceName.
	sizeOfFaceName := self faceName size + 1.
	driverInfoOffset := faceOffset + sizeOfFaceName.
	sizeOfDriverInfo := self driverInfo size + 1.
	extentTableOffset := driverInfoOffset + sizeOfDriverInfo.
	sizeOfExtentTable := self extentTable size * 2.
	kerningPairsOffset := 0.
	self kerningPairs notEmpty ifTrue: [
		kerningPairsOffset := extentTableOffset + sizeOfExtentTable].
	sizeOfKerningPairs := self sizeOfKerningPairs.
	kerningTracksOffset := 0.
	self kerningTracks notEmpty ifTrue: [
		kerningTracksOffset := extentTableOffset + sizeOfExtentTable + sizeOfKerningPairs].
	sizeOfKerningTracks := self kerningTracks size * 10.
	fileSize := extentTableOffset + sizeOfExtentTable + sizeOfKerningPairs + sizeOfKerningTracks.
	wst := ByteWriteStream littleEndianOn: (ByteArray new: fileSize).
	wst
		nextPutUnsignedShort: self class version;
		nextPutUnsignedLong: fileSize;
		nextPutAll: self header asBytes;
		nextPutUnsignedLong: deviceOffset;
		nextPutUnsignedLong: faceOffset;
		nextPutUnsignedLong: 0;
		nextPutUnsignedLong: 0;
		nextPutUnsignedShort: 30;
		nextPutUnsignedLong: extTextMetricsOffset;
		nextPutUnsignedLong: extentTableOffset;
		nextPutUnsignedLong: 0;
		nextPutUnsignedLong: kerningPairsOffset;
		nextPutUnsignedLong: kerningTracksOffset;
		nextPutUnsignedLong: driverInfoOffset;
		nextPutUnsignedLong: 0;
		nextPutAll: self extTextMetrics asBytes;
		nextPutUnsignedShort: self kerningPairs size;
		nextPutUnsignedShort: self kerningTracks size;
		nextPutString: self class deviceName;
		nextPutString: self faceName;
		nextPutString: self driverInfo.
	self extentTable do: [:extent | wst nextPutUnsignedShort: extent].
	self kerningPairs notEmpty ifTrue: [
		wst nextPutUnsignedShort: self kerningPairs size.
		self kerningPairs do: [:pairKern | wst nextPutAll: pairKern asBytes]].
	self kerningTracks do: [:kernTrack | wst nextPutAll: kernTrack asBytes].
	^wst contents
%
method: PostScriptFontMetrics
sizeOfKerningPairs
	"<Integer>
	2 bytes added for the size header WORD"

	| count |
	count := self kerningPairs size.
	count isZero ifTrue: [
		^0].
	^count * 4 + 2
%
category: 'initialize-release'
method: PostScriptFontMetrics
initializeHeader: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString extentTable: extentTableArray kerningPairs: kerningPairsArray kerningTracks: kerningTracksArray
	header := headerPFMHeader.
	extTextMetrics := extTextMetricsExtTextMetrics.
	faceName := faceNameString.
	driverInfo := driverInfoString.
	(extentTableArray notNil and: [
	extentTableArray notEmpty]) ifTrue: [
			extentTable := (Array withAll: extentTableArray) beImmutable].
	(kerningPairsArray notNil and: [
	kerningPairsArray notEmpty]) ifTrue: [
			kerningPairs := (Array withAll: kerningPairsArray) beImmutable].
	(kerningTracksArray notNil and: [
	kerningTracksArray notEmpty]) ifTrue: [
			kerningTracks := (Array withAll: kerningTracksArray) beImmutable].
%
category: 'printing'
method: PostScriptFontMetrics
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'header' value: self header).
	args add: (printer constant: 'extTextMetrics' value: self extTextMetrics).
	args add: (printer constant: 'faceName' value: self faceName).
	args add: (printer constant: 'driverInfo' value: self driverInfo).
	args add: (printer array: 'extentTable' value: self extentTable).
	args add: (printer array: 'kerningPairs' value: self kerningPairs).
	args add: (printer array: 'kerningTracks' value: self kerningTracks).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: PostScriptFontMetrics
isFixedPitch
	^self header isFixedPitch
%
method: PostScriptFontMetrics
isItalic
	^self header italic
%
category: 'fonts'
classmethod: StandardFont
courier
	"from http://www.adobe.com/devnet/font.html "

	<font: #Courier>
	^self
		windowsName: 'Courier New'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.
Comment Creation Date: Thu May  1 17:27:09 1997
Comment UniqueID 43050
Comment VMusage 39754 50779
FontName Courier
FullName Courier
FamilyName Courier
Weight Medium
ItalicAngle 0
IsFixedPitch true
CharacterSet ExtendedRoman
FontBBox -23 -250 715 805 
UnderlinePosition -100
UnderlineThickness 50
Version 003.000
Notice Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.
EncodingScheme AdobeStandardEncoding
CapHeight 562
XHeight 426
Ascender 629
Descender -157
StdHW 51
StdVW 51
StartCharMetrics 315
C 32 ; WX 600 ; N space ; B 0 0 0 0 ;
C 33 ; WX 600 ; N exclam ; B 236 -15 364 572 ;
C 34 ; WX 600 ; N quotedbl ; B 187 328 413 562 ;
C 35 ; WX 600 ; N numbersign ; B 93 -32 507 639 ;
C 36 ; WX 600 ; N dollar ; B 105 -126 496 662 ;
C 37 ; WX 600 ; N percent ; B 81 -15 518 622 ;
C 38 ; WX 600 ; N ampersand ; B 63 -15 538 543 ;
C 39 ; WX 600 ; N quoteright ; B 213 328 376 562 ;
C 40 ; WX 600 ; N parenleft ; B 269 -108 440 622 ;
C 41 ; WX 600 ; N parenright ; B 160 -108 331 622 ;
C 42 ; WX 600 ; N asterisk ; B 116 257 484 607 ;
C 43 ; WX 600 ; N plus ; B 80 44 520 470 ;
C 44 ; WX 600 ; N comma ; B 181 -112 344 122 ;
C 45 ; WX 600 ; N hyphen ; B 103 231 497 285 ;
C 46 ; WX 600 ; N period ; B 229 -15 371 109 ;
C 47 ; WX 600 ; N slash ; B 125 -80 475 629 ;
C 48 ; WX 600 ; N zero ; B 106 -15 494 622 ;
C 49 ; WX 600 ; N one ; B 96 0 505 622 ;
C 50 ; WX 600 ; N two ; B 70 0 471 622 ;
C 51 ; WX 600 ; N three ; B 75 -15 466 622 ;
C 52 ; WX 600 ; N four ; B 78 0 500 622 ;
C 53 ; WX 600 ; N five ; B 92 -15 497 607 ;
C 54 ; WX 600 ; N six ; B 111 -15 497 622 ;
C 55 ; WX 600 ; N seven ; B 82 0 483 607 ;
C 56 ; WX 600 ; N eight ; B 102 -15 498 622 ;
C 57 ; WX 600 ; N nine ; B 96 -15 489 622 ;
C 58 ; WX 600 ; N colon ; B 229 -15 371 385 ;
C 59 ; WX 600 ; N semicolon ; B 181 -112 371 385 ;
C 60 ; WX 600 ; N less ; B 41 42 519 472 ;
C 61 ; WX 600 ; N equal ; B 80 138 520 376 ;
C 62 ; WX 600 ; N greater ; B 66 42 544 472 ;
C 63 ; WX 600 ; N question ; B 129 -15 492 572 ;
C 64 ; WX 600 ; N at ; B 77 -15 533 622 ;
C 65 ; WX 600 ; N A ; B 3 0 597 562 ;
C 66 ; WX 600 ; N B ; B 43 0 559 562 ;
C 67 ; WX 600 ; N C ; B 41 -18 540 580 ;
C 68 ; WX 600 ; N D ; B 43 0 574 562 ;
C 69 ; WX 600 ; N E ; B 53 0 550 562 ;
C 70 ; WX 600 ; N F ; B 53 0 545 562 ;
C 71 ; WX 600 ; N G ; B 31 -18 575 580 ;
C 72 ; WX 600 ; N H ; B 32 0 568 562 ;
C 73 ; WX 600 ; N I ; B 96 0 504 562 ;
C 74 ; WX 600 ; N J ; B 34 -18 566 562 ;
C 75 ; WX 600 ; N K ; B 38 0 582 562 ;
C 76 ; WX 600 ; N L ; B 47 0 554 562 ;
C 77 ; WX 600 ; N M ; B 4 0 596 562 ;
C 78 ; WX 600 ; N N ; B 7 -13 593 562 ;
C 79 ; WX 600 ; N O ; B 43 -18 557 580 ;
C 80 ; WX 600 ; N P ; B 79 0 558 562 ;
C 81 ; WX 600 ; N Q ; B 43 -138 557 580 ;
C 82 ; WX 600 ; N R ; B 38 0 588 562 ;
C 83 ; WX 600 ; N S ; B 72 -20 529 580 ;
C 84 ; WX 600 ; N T ; B 38 0 563 562 ;
C 85 ; WX 600 ; N U ; B 17 -18 583 562 ;
C 86 ; WX 600 ; N V ; B -4 -13 604 562 ;
C 87 ; WX 600 ; N W ; B -3 -13 603 562 ;
C 88 ; WX 600 ; N X ; B 23 0 577 562 ;
C 89 ; WX 600 ; N Y ; B 24 0 576 562 ;
C 90 ; WX 600 ; N Z ; B 86 0 514 562 ;
C 91 ; WX 600 ; N bracketleft ; B 269 -108 442 622 ;
C 92 ; WX 600 ; N backslash ; B 118 -80 482 629 ;
C 93 ; WX 600 ; N bracketright ; B 158 -108 331 622 ;
C 94 ; WX 600 ; N asciicircum ; B 94 354 506 622 ;
C 95 ; WX 600 ; N underscore ; B 0 -125 600 -75 ;
C 96 ; WX 600 ; N quoteleft ; B 224 328 387 562 ;
C 97 ; WX 600 ; N a ; B 53 -15 559 441 ;
C 98 ; WX 600 ; N b ; B 14 -15 575 629 ;
C 99 ; WX 600 ; N c ; B 66 -15 529 441 ;
C 100 ; WX 600 ; N d ; B 45 -15 591 629 ;
C 101 ; WX 600 ; N e ; B 66 -15 548 441 ;
C 102 ; WX 600 ; N f ; B 114 0 531 629 ; L i fi ; L l fl ;
C 103 ; WX 600 ; N g ; B 45 -157 566 441 ;
C 104 ; WX 600 ; N h ; B 18 0 582 629 ;
C 105 ; WX 600 ; N i ; B 95 0 505 657 ;
C 106 ; WX 600 ; N j ; B 82 -157 410 657 ;
C 107 ; WX 600 ; N k ; B 43 0 580 629 ;
C 108 ; WX 600 ; N l ; B 95 0 505 629 ;
C 109 ; WX 600 ; N m ; B -5 0 605 441 ;
C 110 ; WX 600 ; N n ; B 26 0 575 441 ;
C 111 ; WX 600 ; N o ; B 62 -15 538 441 ;
C 112 ; WX 600 ; N p ; B 9 -157 555 441 ;
C 113 ; WX 600 ; N q ; B 45 -157 591 441 ;
C 114 ; WX 600 ; N r ; B 60 0 559 441 ;
C 115 ; WX 600 ; N s ; B 80 -15 513 441 ;
C 116 ; WX 600 ; N t ; B 87 -15 530 561 ;
C 117 ; WX 600 ; N u ; B 21 -15 562 426 ;
C 118 ; WX 600 ; N v ; B 10 -10 590 426 ;
C 119 ; WX 600 ; N w ; B -4 -10 604 426 ;
C 120 ; WX 600 ; N x ; B 20 0 580 426 ;
C 121 ; WX 600 ; N y ; B 7 -157 592 426 ;
C 122 ; WX 600 ; N z ; B 99 0 502 426 ;
C 123 ; WX 600 ; N braceleft ; B 182 -108 437 622 ;
C 124 ; WX 600 ; N bar ; B 275 -250 326 750 ;
C 125 ; WX 600 ; N braceright ; B 163 -108 418 622 ;
C 126 ; WX 600 ; N asciitilde ; B 63 197 540 320 ;
C 161 ; WX 600 ; N exclamdown ; B 236 -157 364 430 ;
C 162 ; WX 600 ; N cent ; B 96 -49 500 614 ;
C 163 ; WX 600 ; N sterling ; B 84 -21 521 611 ;
C 164 ; WX 600 ; N fraction ; B 92 -57 509 665 ;
C 165 ; WX 600 ; N yen ; B 26 0 574 562 ;
C 166 ; WX 600 ; N florin ; B 4 -143 539 622 ;
C 167 ; WX 600 ; N section ; B 113 -78 488 580 ;
C 168 ; WX 600 ; N currency ; B 73 58 527 506 ;
C 169 ; WX 600 ; N quotesingle ; B 259 328 341 562 ;
C 170 ; WX 600 ; N quotedblleft ; B 143 328 471 562 ;
C 171 ; WX 600 ; N guillemotleft ; B 37 70 563 446 ;
C 172 ; WX 600 ; N guilsinglleft ; B 149 70 451 446 ;
C 173 ; WX 600 ; N guilsinglright ; B 149 70 451 446 ;
C 174 ; WX 600 ; N fi ; B 3 0 597 629 ;
C 175 ; WX 600 ; N fl ; B 3 0 597 629 ;
C 177 ; WX 600 ; N endash ; B 75 231 525 285 ;
C 178 ; WX 600 ; N dagger ; B 141 -78 459 580 ;
C 179 ; WX 600 ; N daggerdbl ; B 141 -78 459 580 ;
C 180 ; WX 600 ; N periodcentered ; B 222 189 378 327 ;
C 182 ; WX 600 ; N paragraph ; B 50 -78 511 562 ;
C 183 ; WX 600 ; N bullet ; B 172 130 428 383 ;
C 184 ; WX 600 ; N quotesinglbase ; B 213 -134 376 100 ;
C 185 ; WX 600 ; N quotedblbase ; B 143 -134 457 100 ;
C 186 ; WX 600 ; N quotedblright ; B 143 328 457 562 ;
C 187 ; WX 600 ; N guillemotright ; B 37 70 563 446 ;
C 188 ; WX 600 ; N ellipsis ; B 37 -15 563 111 ;
C 189 ; WX 600 ; N perthousand ; B 3 -15 600 622 ;
C 191 ; WX 600 ; N questiondown ; B 108 -157 471 430 ;
C 193 ; WX 600 ; N grave ; B 151 497 378 672 ;
C 194 ; WX 600 ; N acute ; B 242 497 469 672 ;
C 195 ; WX 600 ; N circumflex ; B 124 477 476 654 ;
C 196 ; WX 600 ; N tilde ; B 105 489 503 606 ;
C 197 ; WX 600 ; N macron ; B 120 525 480 565 ;
C 198 ; WX 600 ; N breve ; B 153 501 447 609 ;
C 199 ; WX 600 ; N dotaccent ; B 249 537 352 640 ;
C 200 ; WX 600 ; N dieresis ; B 148 537 453 640 ;
C 202 ; WX 600 ; N ring ; B 218 463 382 627 ;
C 203 ; WX 600 ; N cedilla ; B 224 -151 362 10 ;
C 205 ; WX 600 ; N hungarumlaut ; B 133 497 540 672 ;
C 206 ; WX 600 ; N ogonek ; B 211 -172 407 4 ;
C 207 ; WX 600 ; N caron ; B 124 492 476 669 ;
C 208 ; WX 600 ; N emdash ; B 0 231 600 285 ;
C 225 ; WX 600 ; N AE ; B 3 0 550 562 ;
C 227 ; WX 600 ; N ordfeminine ; B 156 249 442 580 ;
C 232 ; WX 600 ; N Lslash ; B 47 0 554 562 ;
C 233 ; WX 600 ; N Oslash ; B 43 -80 557 629 ;
C 234 ; WX 600 ; N OE ; B 7 0 567 562 ;
C 235 ; WX 600 ; N ordmasculine ; B 157 249 443 580 ;
C 241 ; WX 600 ; N ae ; B 19 -15 570 441 ;
C 245 ; WX 600 ; N dotlessi ; B 95 0 505 426 ;
C 248 ; WX 600 ; N lslash ; B 95 0 505 629 ;
C 249 ; WX 600 ; N oslash ; B 62 -80 538 506 ;
C 250 ; WX 600 ; N oe ; B 19 -15 559 441 ;
C 251 ; WX 600 ; N germandbls ; B 48 -15 588 629 ;
C -1 ; WX 600 ; N Idieresis ; B 96 0 504 753 ;
C -1 ; WX 600 ; N eacute ; B 66 -15 548 672 ;
C -1 ; WX 600 ; N abreve ; B 53 -15 559 609 ;
C -1 ; WX 600 ; N uhungarumlaut ; B 21 -15 580 672 ;
C -1 ; WX 600 ; N ecaron ; B 66 -15 548 669 ;
C -1 ; WX 600 ; N Ydieresis ; B 24 0 576 753 ;
C -1 ; WX 600 ; N divide ; B 87 48 513 467 ;
C -1 ; WX 600 ; N Yacute ; B 24 0 576 805 ;
C -1 ; WX 600 ; N Acircumflex ; B 3 0 597 787 ;
C -1 ; WX 600 ; N aacute ; B 53 -15 559 672 ;
C -1 ; WX 600 ; N Ucircumflex ; B 17 -18 583 787 ;
C -1 ; WX 600 ; N yacute ; B 7 -157 592 672 ;
C -1 ; WX 600 ; N scommaaccent ; B 80 -250 513 441 ;
C -1 ; WX 600 ; N ecircumflex ; B 66 -15 548 654 ;
C -1 ; WX 600 ; N Uring ; B 17 -18 583 760 ;
C -1 ; WX 600 ; N Udieresis ; B 17 -18 583 753 ;
C -1 ; WX 600 ; N aogonek ; B 53 -172 587 441 ;
C -1 ; WX 600 ; N Uacute ; B 17 -18 583 805 ;
C -1 ; WX 600 ; N uogonek ; B 21 -172 590 426 ;
C -1 ; WX 600 ; N Edieresis ; B 53 0 550 753 ;
C -1 ; WX 600 ; N Dcroat ; B 30 0 574 562 ;
C -1 ; WX 600 ; N commaaccent ; B 198 -250 335 -58 ;
C -1 ; WX 600 ; N copyright ; B 0 -18 600 580 ;
C -1 ; WX 600 ; N Emacron ; B 53 0 550 698 ;
C -1 ; WX 600 ; N ccaron ; B 66 -15 529 669 ;
C -1 ; WX 600 ; N aring ; B 53 -15 559 627 ;
C -1 ; WX 600 ; N Ncommaaccent ; B 7 -250 593 562 ;
C -1 ; WX 600 ; N lacute ; B 95 0 505 805 ;
C -1 ; WX 600 ; N agrave ; B 53 -15 559 672 ;
C -1 ; WX 600 ; N Tcommaaccent ; B 38 -250 563 562 ;
C -1 ; WX 600 ; N Cacute ; B 41 -18 540 805 ;
C -1 ; WX 600 ; N atilde ; B 53 -15 559 606 ;
C -1 ; WX 600 ; N Edotaccent ; B 53 0 550 753 ;
C -1 ; WX 600 ; N scaron ; B 80 -15 513 669 ;
C -1 ; WX 600 ; N scedilla ; B 80 -151 513 441 ;
C -1 ; WX 600 ; N iacute ; B 95 0 505 672 ;
C -1 ; WX 600 ; N lozenge ; B 18 0 443 706 ;
C -1 ; WX 600 ; N Rcaron ; B 38 0 588 802 ;
C -1 ; WX 600 ; N Gcommaaccent ; B 31 -250 575 580 ;
C -1 ; WX 600 ; N ucircumflex ; B 21 -15 562 654 ;
C -1 ; WX 600 ; N acircumflex ; B 53 -15 559 654 ;
C -1 ; WX 600 ; N Amacron ; B 3 0 597 698 ;
C -1 ; WX 600 ; N rcaron ; B 60 0 559 669 ;
C -1 ; WX 600 ; N ccedilla ; B 66 -151 529 441 ;
C -1 ; WX 600 ; N Zdotaccent ; B 86 0 514 753 ;
C -1 ; WX 600 ; N Thorn ; B 79 0 538 562 ;
C -1 ; WX 600 ; N Omacron ; B 43 -18 557 698 ;
C -1 ; WX 600 ; N Racute ; B 38 0 588 805 ;
C -1 ; WX 600 ; N Sacute ; B 72 -20 529 805 ;
C -1 ; WX 600 ; N dcaron ; B 45 -15 715 629 ;
C -1 ; WX 600 ; N Umacron ; B 17 -18 583 698 ;
C -1 ; WX 600 ; N uring ; B 21 -15 562 627 ;
C -1 ; WX 600 ; N threesuperior ; B 155 240 406 622 ;
C -1 ; WX 600 ; N Ograve ; B 43 -18 557 805 ;
C -1 ; WX 600 ; N Agrave ; B 3 0 597 805 ;
C -1 ; WX 600 ; N Abreve ; B 3 0 597 732 ;
C -1 ; WX 600 ; N multiply ; B 87 43 515 470 ;
C -1 ; WX 600 ; N uacute ; B 21 -15 562 672 ;
C -1 ; WX 600 ; N Tcaron ; B 38 0 563 802 ;
C -1 ; WX 600 ; N partialdiff ; B 17 -38 459 710 ;
C -1 ; WX 600 ; N ydieresis ; B 7 -157 592 620 ;
C -1 ; WX 600 ; N Nacute ; B 7 -13 593 805 ;
C -1 ; WX 600 ; N icircumflex ; B 94 0 505 654 ;
C -1 ; WX 600 ; N Ecircumflex ; B 53 0 550 787 ;
C -1 ; WX 600 ; N adieresis ; B 53 -15 559 620 ;
C -1 ; WX 600 ; N edieresis ; B 66 -15 548 620 ;
C -1 ; WX 600 ; N cacute ; B 66 -15 529 672 ;
C -1 ; WX 600 ; N nacute ; B 26 0 575 672 ;
C -1 ; WX 600 ; N umacron ; B 21 -15 562 565 ;
C -1 ; WX 600 ; N Ncaron ; B 7 -13 593 802 ;
C -1 ; WX 600 ; N Iacute ; B 96 0 504 805 ;
C -1 ; WX 600 ; N plusminus ; B 87 44 513 558 ;
C -1 ; WX 600 ; N brokenbar ; B 275 -175 326 675 ;
C -1 ; WX 600 ; N registered ; B 0 -18 600 580 ;
C -1 ; WX 600 ; N Gbreve ; B 31 -18 575 732 ;
C -1 ; WX 600 ; N Idotaccent ; B 96 0 504 753 ;
C -1 ; WX 600 ; N summation ; B 15 -10 585 706 ;
C -1 ; WX 600 ; N Egrave ; B 53 0 550 805 ;
C -1 ; WX 600 ; N racute ; B 60 0 559 672 ;
C -1 ; WX 600 ; N omacron ; B 62 -15 538 565 ;
C -1 ; WX 600 ; N Zacute ; B 86 0 514 805 ;
C -1 ; WX 600 ; N Zcaron ; B 86 0 514 802 ;
C -1 ; WX 600 ; N greaterequal ; B 98 0 502 710 ;
C -1 ; WX 600 ; N Eth ; B 30 0 574 562 ;
C -1 ; WX 600 ; N Ccedilla ; B 41 -151 540 580 ;
C -1 ; WX 600 ; N lcommaaccent ; B 95 -250 505 629 ;
C -1 ; WX 600 ; N tcaron ; B 87 -15 530 717 ;
C -1 ; WX 600 ; N eogonek ; B 66 -172 548 441 ;
C -1 ; WX 600 ; N Uogonek ; B 17 -172 583 562 ;
C -1 ; WX 600 ; N Aacute ; B 3 0 597 805 ;
C -1 ; WX 600 ; N Adieresis ; B 3 0 597 753 ;
C -1 ; WX 600 ; N egrave ; B 66 -15 548 672 ;
C -1 ; WX 600 ; N zacute ; B 99 0 502 672 ;
C -1 ; WX 600 ; N iogonek ; B 95 -172 505 657 ;
C -1 ; WX 600 ; N Oacute ; B 43 -18 557 805 ;
C -1 ; WX 600 ; N oacute ; B 62 -15 538 672 ;
C -1 ; WX 600 ; N amacron ; B 53 -15 559 565 ;
C -1 ; WX 600 ; N sacute ; B 80 -15 513 672 ;
C -1 ; WX 600 ; N idieresis ; B 95 0 505 620 ;
C -1 ; WX 600 ; N Ocircumflex ; B 43 -18 557 787 ;
C -1 ; WX 600 ; N Ugrave ; B 17 -18 583 805 ;
C -1 ; WX 600 ; N Delta ; B 6 0 598 688 ;
C -1 ; WX 600 ; N thorn ; B -6 -157 555 629 ;
C -1 ; WX 600 ; N twosuperior ; B 177 249 424 622 ;
C -1 ; WX 600 ; N Odieresis ; B 43 -18 557 753 ;
C -1 ; WX 600 ; N mu ; B 21 -157 562 426 ;
C -1 ; WX 600 ; N igrave ; B 95 0 505 672 ;
C -1 ; WX 600 ; N ohungarumlaut ; B 62 -15 580 672 ;
C -1 ; WX 600 ; N Eogonek ; B 53 -172 561 562 ;
C -1 ; WX 600 ; N dcroat ; B 45 -15 591 629 ;
C -1 ; WX 600 ; N threequarters ; B 8 -56 593 666 ;
C -1 ; WX 600 ; N Scedilla ; B 72 -151 529 580 ;
C -1 ; WX 600 ; N lcaron ; B 95 0 533 629 ;
C -1 ; WX 600 ; N Kcommaaccent ; B 38 -250 582 562 ;
C -1 ; WX 600 ; N Lacute ; B 47 0 554 805 ;
C -1 ; WX 600 ; N trademark ; B -23 263 623 562 ;
C -1 ; WX 600 ; N edotaccent ; B 66 -15 548 620 ;
C -1 ; WX 600 ; N Igrave ; B 96 0 504 805 ;
C -1 ; WX 600 ; N Imacron ; B 96 0 504 698 ;
C -1 ; WX 600 ; N Lcaron ; B 47 0 554 562 ;
C -1 ; WX 600 ; N onehalf ; B 0 -57 611 665 ;
C -1 ; WX 600 ; N lessequal ; B 98 0 502 710 ;
C -1 ; WX 600 ; N ocircumflex ; B 62 -15 538 654 ;
C -1 ; WX 600 ; N ntilde ; B 26 0 575 606 ;
C -1 ; WX 600 ; N Uhungarumlaut ; B 17 -18 590 805 ;
C -1 ; WX 600 ; N Eacute ; B 53 0 550 805 ;
C -1 ; WX 600 ; N emacron ; B 66 -15 548 565 ;
C -1 ; WX 600 ; N gbreve ; B 45 -157 566 609 ;
C -1 ; WX 600 ; N onequarter ; B 0 -57 600 665 ;
C -1 ; WX 600 ; N Scaron ; B 72 -20 529 802 ;
C -1 ; WX 600 ; N Scommaaccent ; B 72 -250 529 580 ;
C -1 ; WX 600 ; N Ohungarumlaut ; B 43 -18 580 805 ;
C -1 ; WX 600 ; N degree ; B 123 269 477 622 ;
C -1 ; WX 600 ; N ograve ; B 62 -15 538 672 ;
C -1 ; WX 600 ; N Ccaron ; B 41 -18 540 802 ;
C -1 ; WX 600 ; N ugrave ; B 21 -15 562 672 ;
C -1 ; WX 600 ; N radical ; B 3 -15 597 792 ;
C -1 ; WX 600 ; N Dcaron ; B 43 0 574 802 ;
C -1 ; WX 600 ; N rcommaaccent ; B 60 -250 559 441 ;
C -1 ; WX 600 ; N Ntilde ; B 7 -13 593 729 ;
C -1 ; WX 600 ; N otilde ; B 62 -15 538 606 ;
C -1 ; WX 600 ; N Rcommaaccent ; B 38 -250 588 562 ;
C -1 ; WX 600 ; N Lcommaaccent ; B 47 -250 554 562 ;
C -1 ; WX 600 ; N Atilde ; B 3 0 597 729 ;
C -1 ; WX 600 ; N Aogonek ; B 3 -172 608 562 ;
C -1 ; WX 600 ; N Aring ; B 3 0 597 750 ;
C -1 ; WX 600 ; N Otilde ; B 43 -18 557 729 ;
C -1 ; WX 600 ; N zdotaccent ; B 99 0 502 620 ;
C -1 ; WX 600 ; N Ecaron ; B 53 0 550 802 ;
C -1 ; WX 600 ; N Iogonek ; B 96 -172 504 562 ;
C -1 ; WX 600 ; N kcommaaccent ; B 43 -250 580 629 ;
C -1 ; WX 600 ; N minus ; B 80 232 520 283 ;
C -1 ; WX 600 ; N Icircumflex ; B 96 0 504 787 ;
C -1 ; WX 600 ; N ncaron ; B 26 0 575 669 ;
C -1 ; WX 600 ; N tcommaaccent ; B 87 -250 530 561 ;
C -1 ; WX 600 ; N logicalnot ; B 87 108 513 369 ;
C -1 ; WX 600 ; N odieresis ; B 62 -15 538 620 ;
C -1 ; WX 600 ; N udieresis ; B 21 -15 562 620 ;
C -1 ; WX 600 ; N notequal ; B 15 -16 540 529 ;
C -1 ; WX 600 ; N gcommaaccent ; B 45 -157 566 708 ;
C -1 ; WX 600 ; N eth ; B 62 -15 538 629 ;
C -1 ; WX 600 ; N zcaron ; B 99 0 502 669 ;
C -1 ; WX 600 ; N ncommaaccent ; B 26 -250 575 441 ;
C -1 ; WX 600 ; N onesuperior ; B 172 249 428 622 ;
C -1 ; WX 600 ; N imacron ; B 95 0 505 565 ;
C -1 ; WX 600 ; N Euro ; B 0 0 0 0 ;
EndCharMetrics
EndFontMetrics
'
%
classmethod: StandardFont
courierBold
	"from http://www.adobe.com/devnet/font.html "

	<font: #'Courier-Bold'>
	^self
		windowsName: 'Courier New'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.
Comment Creation Date: Mon Jun 23 16:28:00 1997
Comment UniqueID 43048
Comment VMusage 41139 52164
FontName Courier-Bold
FullName Courier Bold
FamilyName Courier
Weight Bold
ItalicAngle 0
IsFixedPitch true
CharacterSet ExtendedRoman
FontBBox -113 -250 749 801 
UnderlinePosition -100
UnderlineThickness 50
Version 003.000
Notice Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.
EncodingScheme AdobeStandardEncoding
CapHeight 562
XHeight 439
Ascender 629
Descender -157
StdHW 84
StdVW 106
StartCharMetrics 315
C 32 ; WX 600 ; N space ; B 0 0 0 0 ;
C 33 ; WX 600 ; N exclam ; B 202 -15 398 572 ;
C 34 ; WX 600 ; N quotedbl ; B 135 277 465 562 ;
C 35 ; WX 600 ; N numbersign ; B 56 -45 544 651 ;
C 36 ; WX 600 ; N dollar ; B 82 -126 519 666 ;
C 37 ; WX 600 ; N percent ; B 5 -15 595 616 ;
C 38 ; WX 600 ; N ampersand ; B 36 -15 546 543 ;
C 39 ; WX 600 ; N quoteright ; B 171 277 423 562 ;
C 40 ; WX 600 ; N parenleft ; B 219 -102 461 616 ;
C 41 ; WX 600 ; N parenright ; B 139 -102 381 616 ;
C 42 ; WX 600 ; N asterisk ; B 91 219 509 601 ;
C 43 ; WX 600 ; N plus ; B 71 39 529 478 ;
C 44 ; WX 600 ; N comma ; B 123 -111 393 174 ;
C 45 ; WX 600 ; N hyphen ; B 100 203 500 313 ;
C 46 ; WX 600 ; N period ; B 192 -15 408 171 ;
C 47 ; WX 600 ; N slash ; B 98 -77 502 626 ;
C 48 ; WX 600 ; N zero ; B 87 -15 513 616 ;
C 49 ; WX 600 ; N one ; B 81 0 539 616 ;
C 50 ; WX 600 ; N two ; B 61 0 499 616 ;
C 51 ; WX 600 ; N three ; B 63 -15 501 616 ;
C 52 ; WX 600 ; N four ; B 53 0 507 616 ;
C 53 ; WX 600 ; N five ; B 70 -15 521 601 ;
C 54 ; WX 600 ; N six ; B 90 -15 521 616 ;
C 55 ; WX 600 ; N seven ; B 55 0 494 601 ;
C 56 ; WX 600 ; N eight ; B 83 -15 517 616 ;
C 57 ; WX 600 ; N nine ; B 79 -15 510 616 ;
C 58 ; WX 600 ; N colon ; B 191 -15 407 425 ;
C 59 ; WX 600 ; N semicolon ; B 123 -111 408 425 ;
C 60 ; WX 600 ; N less ; B 66 15 523 501 ;
C 61 ; WX 600 ; N equal ; B 71 118 529 398 ;
C 62 ; WX 600 ; N greater ; B 77 15 534 501 ;
C 63 ; WX 600 ; N question ; B 98 -14 501 580 ;
C 64 ; WX 600 ; N at ; B 16 -15 584 616 ;
C 65 ; WX 600 ; N A ; B -9 0 609 562 ;
C 66 ; WX 600 ; N B ; B 30 0 573 562 ;
C 67 ; WX 600 ; N C ; B 22 -18 560 580 ;
C 68 ; WX 600 ; N D ; B 30 0 594 562 ;
C 69 ; WX 600 ; N E ; B 25 0 560 562 ;
C 70 ; WX 600 ; N F ; B 39 0 570 562 ;
C 71 ; WX 600 ; N G ; B 22 -18 594 580 ;
C 72 ; WX 600 ; N H ; B 20 0 580 562 ;
C 73 ; WX 600 ; N I ; B 77 0 523 562 ;
C 74 ; WX 600 ; N J ; B 37 -18 601 562 ;
C 75 ; WX 600 ; N K ; B 21 0 599 562 ;
C 76 ; WX 600 ; N L ; B 39 0 578 562 ;
C 77 ; WX 600 ; N M ; B -2 0 602 562 ;
C 78 ; WX 600 ; N N ; B 8 -12 610 562 ;
C 79 ; WX 600 ; N O ; B 22 -18 578 580 ;
C 80 ; WX 600 ; N P ; B 48 0 559 562 ;
C 81 ; WX 600 ; N Q ; B 32 -138 578 580 ;
C 82 ; WX 600 ; N R ; B 24 0 599 562 ;
C 83 ; WX 600 ; N S ; B 47 -22 553 582 ;
C 84 ; WX 600 ; N T ; B 21 0 579 562 ;
C 85 ; WX 600 ; N U ; B 4 -18 596 562 ;
C 86 ; WX 600 ; N V ; B -13 0 613 562 ;
C 87 ; WX 600 ; N W ; B -18 0 618 562 ;
C 88 ; WX 600 ; N X ; B 12 0 588 562 ;
C 89 ; WX 600 ; N Y ; B 12 0 589 562 ;
C 90 ; WX 600 ; N Z ; B 62 0 539 562 ;
C 91 ; WX 600 ; N bracketleft ; B 245 -102 475 616 ;
C 92 ; WX 600 ; N backslash ; B 99 -77 503 626 ;
C 93 ; WX 600 ; N bracketright ; B 125 -102 355 616 ;
C 94 ; WX 600 ; N asciicircum ; B 108 250 492 616 ;
C 95 ; WX 600 ; N underscore ; B 0 -125 600 -75 ;
C 96 ; WX 600 ; N quoteleft ; B 178 277 428 562 ;
C 97 ; WX 600 ; N a ; B 35 -15 570 454 ;
C 98 ; WX 600 ; N b ; B 0 -15 584 626 ;
C 99 ; WX 600 ; N c ; B 40 -15 545 459 ;
C 100 ; WX 600 ; N d ; B 20 -15 591 626 ;
C 101 ; WX 600 ; N e ; B 40 -15 563 454 ;
C 102 ; WX 600 ; N f ; B 83 0 547 626 ; L i fi ; L l fl ;
C 103 ; WX 600 ; N g ; B 30 -146 580 454 ;
C 104 ; WX 600 ; N h ; B 5 0 592 626 ;
C 105 ; WX 600 ; N i ; B 77 0 523 658 ;
C 106 ; WX 600 ; N j ; B 63 -146 440 658 ;
C 107 ; WX 600 ; N k ; B 20 0 585 626 ;
C 108 ; WX 600 ; N l ; B 77 0 523 626 ;
C 109 ; WX 600 ; N m ; B -22 0 626 454 ;
C 110 ; WX 600 ; N n ; B 18 0 592 454 ;
C 111 ; WX 600 ; N o ; B 30 -15 570 454 ;
C 112 ; WX 600 ; N p ; B -1 -142 570 454 ;
C 113 ; WX 600 ; N q ; B 20 -142 591 454 ;
C 114 ; WX 600 ; N r ; B 47 0 580 454 ;
C 115 ; WX 600 ; N s ; B 68 -17 535 459 ;
C 116 ; WX 600 ; N t ; B 47 -15 532 562 ;
C 117 ; WX 600 ; N u ; B -1 -15 569 439 ;
C 118 ; WX 600 ; N v ; B -1 0 601 439 ;
C 119 ; WX 600 ; N w ; B -18 0 618 439 ;
C 120 ; WX 600 ; N x ; B 6 0 594 439 ;
C 121 ; WX 600 ; N y ; B -4 -142 601 439 ;
C 122 ; WX 600 ; N z ; B 81 0 520 439 ;
C 123 ; WX 600 ; N braceleft ; B 160 -102 464 616 ;
C 124 ; WX 600 ; N bar ; B 255 -250 345 750 ;
C 125 ; WX 600 ; N braceright ; B 136 -102 440 616 ;
C 126 ; WX 600 ; N asciitilde ; B 71 153 530 356 ;
C 161 ; WX 600 ; N exclamdown ; B 202 -146 398 449 ;
C 162 ; WX 600 ; N cent ; B 66 -49 518 614 ;
C 163 ; WX 600 ; N sterling ; B 72 -28 558 611 ;
C 164 ; WX 600 ; N fraction ; B 25 -60 576 661 ;
C 165 ; WX 600 ; N yen ; B 10 0 590 562 ;
C 166 ; WX 600 ; N florin ; B -30 -131 572 616 ;
C 167 ; WX 600 ; N section ; B 83 -70 517 580 ;
C 168 ; WX 600 ; N currency ; B 54 49 546 517 ;
C 169 ; WX 600 ; N quotesingle ; B 227 277 373 562 ;
C 170 ; WX 600 ; N quotedblleft ; B 71 277 535 562 ;
C 171 ; WX 600 ; N guillemotleft ; B 8 70 553 446 ;
C 172 ; WX 600 ; N guilsinglleft ; B 141 70 459 446 ;
C 173 ; WX 600 ; N guilsinglright ; B 141 70 459 446 ;
C 174 ; WX 600 ; N fi ; B 12 0 593 626 ;
C 175 ; WX 600 ; N fl ; B 12 0 593 626 ;
C 177 ; WX 600 ; N endash ; B 65 203 535 313 ;
C 178 ; WX 600 ; N dagger ; B 106 -70 494 580 ;
C 179 ; WX 600 ; N daggerdbl ; B 106 -70 494 580 ;
C 180 ; WX 600 ; N periodcentered ; B 196 165 404 351 ;
C 182 ; WX 600 ; N paragraph ; B 6 -70 576 580 ;
C 183 ; WX 600 ; N bullet ; B 140 132 460 430 ;
C 184 ; WX 600 ; N quotesinglbase ; B 175 -142 427 143 ;
C 185 ; WX 600 ; N quotedblbase ; B 65 -142 529 143 ;
C 186 ; WX 600 ; N quotedblright ; B 61 277 525 562 ;
C 187 ; WX 600 ; N guillemotright ; B 47 70 592 446 ;
C 188 ; WX 600 ; N ellipsis ; B 26 -15 574 116 ;
C 189 ; WX 600 ; N perthousand ; B -113 -15 713 616 ;
C 191 ; WX 600 ; N questiondown ; B 99 -146 502 449 ;
C 193 ; WX 600 ; N grave ; B 132 508 395 661 ;
C 194 ; WX 600 ; N acute ; B 205 508 468 661 ;
C 195 ; WX 600 ; N circumflex ; B 103 483 497 657 ;
C 196 ; WX 600 ; N tilde ; B 89 493 512 636 ;
C 197 ; WX 600 ; N macron ; B 88 505 512 585 ;
C 198 ; WX 600 ; N breve ; B 83 468 517 631 ;
C 199 ; WX 600 ; N dotaccent ; B 230 498 370 638 ;
C 200 ; WX 600 ; N dieresis ; B 128 498 472 638 ;
C 202 ; WX 600 ; N ring ; B 198 481 402 678 ;
C 203 ; WX 600 ; N cedilla ; B 205 -206 387 0 ;
C 205 ; WX 600 ; N hungarumlaut ; B 68 488 588 661 ;
C 206 ; WX 600 ; N ogonek ; B 169 -199 400 0 ;
C 207 ; WX 600 ; N caron ; B 103 493 497 667 ;
C 208 ; WX 600 ; N emdash ; B -10 203 610 313 ;
C 225 ; WX 600 ; N AE ; B -29 0 602 562 ;
C 227 ; WX 600 ; N ordfeminine ; B 147 196 453 580 ;
C 232 ; WX 600 ; N Lslash ; B 39 0 578 562 ;
C 233 ; WX 600 ; N Oslash ; B 22 -22 578 584 ;
C 234 ; WX 600 ; N OE ; B -25 0 595 562 ;
C 235 ; WX 600 ; N ordmasculine ; B 147 196 453 580 ;
C 241 ; WX 600 ; N ae ; B -4 -15 601 454 ;
C 245 ; WX 600 ; N dotlessi ; B 77 0 523 439 ;
C 248 ; WX 600 ; N lslash ; B 77 0 523 626 ;
C 249 ; WX 600 ; N oslash ; B 30 -24 570 463 ;
C 250 ; WX 600 ; N oe ; B -18 -15 611 454 ;
C 251 ; WX 600 ; N germandbls ; B 22 -15 596 626 ;
C -1 ; WX 600 ; N Idieresis ; B 77 0 523 761 ;
C -1 ; WX 600 ; N eacute ; B 40 -15 563 661 ;
C -1 ; WX 600 ; N abreve ; B 35 -15 570 661 ;
C -1 ; WX 600 ; N uhungarumlaut ; B -1 -15 628 661 ;
C -1 ; WX 600 ; N ecaron ; B 40 -15 563 667 ;
C -1 ; WX 600 ; N Ydieresis ; B 12 0 589 761 ;
C -1 ; WX 600 ; N divide ; B 71 16 529 500 ;
C -1 ; WX 600 ; N Yacute ; B 12 0 589 784 ;
C -1 ; WX 600 ; N Acircumflex ; B -9 0 609 780 ;
C -1 ; WX 600 ; N aacute ; B 35 -15 570 661 ;
C -1 ; WX 600 ; N Ucircumflex ; B 4 -18 596 780 ;
C -1 ; WX 600 ; N yacute ; B -4 -142 601 661 ;
C -1 ; WX 600 ; N scommaaccent ; B 68 -250 535 459 ;
C -1 ; WX 600 ; N ecircumflex ; B 40 -15 563 657 ;
C -1 ; WX 600 ; N Uring ; B 4 -18 596 801 ;
C -1 ; WX 600 ; N Udieresis ; B 4 -18 596 761 ;
C -1 ; WX 600 ; N aogonek ; B 35 -199 586 454 ;
C -1 ; WX 600 ; N Uacute ; B 4 -18 596 784 ;
C -1 ; WX 600 ; N uogonek ; B -1 -199 585 439 ;
C -1 ; WX 600 ; N Edieresis ; B 25 0 560 761 ;
C -1 ; WX 600 ; N Dcroat ; B 30 0 594 562 ;
C -1 ; WX 600 ; N commaaccent ; B 205 -250 397 -57 ;
C -1 ; WX 600 ; N copyright ; B 0 -18 600 580 ;
C -1 ; WX 600 ; N Emacron ; B 25 0 560 708 ;
C -1 ; WX 600 ; N ccaron ; B 40 -15 545 667 ;
C -1 ; WX 600 ; N aring ; B 35 -15 570 678 ;
C -1 ; WX 600 ; N Ncommaaccent ; B 8 -250 610 562 ;
C -1 ; WX 600 ; N lacute ; B 77 0 523 801 ;
C -1 ; WX 600 ; N agrave ; B 35 -15 570 661 ;
C -1 ; WX 600 ; N Tcommaaccent ; B 21 -250 579 562 ;
C -1 ; WX 600 ; N Cacute ; B 22 -18 560 784 ;
C -1 ; WX 600 ; N atilde ; B 35 -15 570 636 ;
C -1 ; WX 600 ; N Edotaccent ; B 25 0 560 761 ;
C -1 ; WX 600 ; N scaron ; B 68 -17 535 667 ;
C -1 ; WX 600 ; N scedilla ; B 68 -206 535 459 ;
C -1 ; WX 600 ; N iacute ; B 77 0 523 661 ;
C -1 ; WX 600 ; N lozenge ; B 66 0 534 740 ;
C -1 ; WX 600 ; N Rcaron ; B 24 0 599 790 ;
C -1 ; WX 600 ; N Gcommaaccent ; B 22 -250 594 580 ;
C -1 ; WX 600 ; N ucircumflex ; B -1 -15 569 657 ;
C -1 ; WX 600 ; N acircumflex ; B 35 -15 570 657 ;
C -1 ; WX 600 ; N Amacron ; B -9 0 609 708 ;
C -1 ; WX 600 ; N rcaron ; B 47 0 580 667 ;
C -1 ; WX 600 ; N ccedilla ; B 40 -206 545 459 ;
C -1 ; WX 600 ; N Zdotaccent ; B 62 0 539 761 ;
C -1 ; WX 600 ; N Thorn ; B 48 0 557 562 ;
C -1 ; WX 600 ; N Omacron ; B 22 -18 578 708 ;
C -1 ; WX 600 ; N Racute ; B 24 0 599 784 ;
C -1 ; WX 600 ; N Sacute ; B 47 -22 553 784 ;
C -1 ; WX 600 ; N dcaron ; B 20 -15 727 626 ;
C -1 ; WX 600 ; N Umacron ; B 4 -18 596 708 ;
C -1 ; WX 600 ; N uring ; B -1 -15 569 678 ;
C -1 ; WX 600 ; N threesuperior ; B 138 222 433 616 ;
C -1 ; WX 600 ; N Ograve ; B 22 -18 578 784 ;
C -1 ; WX 600 ; N Agrave ; B -9 0 609 784 ;
C -1 ; WX 600 ; N Abreve ; B -9 0 609 784 ;
C -1 ; WX 600 ; N multiply ; B 81 39 520 478 ;
C -1 ; WX 600 ; N uacute ; B -1 -15 569 661 ;
C -1 ; WX 600 ; N Tcaron ; B 21 0 579 790 ;
C -1 ; WX 600 ; N partialdiff ; B 63 -38 537 728 ;
C -1 ; WX 600 ; N ydieresis ; B -4 -142 601 638 ;
C -1 ; WX 600 ; N Nacute ; B 8 -12 610 784 ;
C -1 ; WX 600 ; N icircumflex ; B 73 0 523 657 ;
C -1 ; WX 600 ; N Ecircumflex ; B 25 0 560 780 ;
C -1 ; WX 600 ; N adieresis ; B 35 -15 570 638 ;
C -1 ; WX 600 ; N edieresis ; B 40 -15 563 638 ;
C -1 ; WX 600 ; N cacute ; B 40 -15 545 661 ;
C -1 ; WX 600 ; N nacute ; B 18 0 592 661 ;
C -1 ; WX 600 ; N umacron ; B -1 -15 569 585 ;
C -1 ; WX 600 ; N Ncaron ; B 8 -12 610 790 ;
C -1 ; WX 600 ; N Iacute ; B 77 0 523 784 ;
C -1 ; WX 600 ; N plusminus ; B 71 24 529 515 ;
C -1 ; WX 600 ; N brokenbar ; B 255 -175 345 675 ;
C -1 ; WX 600 ; N registered ; B 0 -18 600 580 ;
C -1 ; WX 600 ; N Gbreve ; B 22 -18 594 784 ;
C -1 ; WX 600 ; N Idotaccent ; B 77 0 523 761 ;
C -1 ; WX 600 ; N summation ; B 15 -10 586 706 ;
C -1 ; WX 600 ; N Egrave ; B 25 0 560 784 ;
C -1 ; WX 600 ; N racute ; B 47 0 580 661 ;
C -1 ; WX 600 ; N omacron ; B 30 -15 570 585 ;
C -1 ; WX 600 ; N Zacute ; B 62 0 539 784 ;
C -1 ; WX 600 ; N Zcaron ; B 62 0 539 790 ;
C -1 ; WX 600 ; N greaterequal ; B 26 0 523 696 ;
C -1 ; WX 600 ; N Eth ; B 30 0 594 562 ;
C -1 ; WX 600 ; N Ccedilla ; B 22 -206 560 580 ;
C -1 ; WX 600 ; N lcommaaccent ; B 77 -250 523 626 ;
C -1 ; WX 600 ; N tcaron ; B 47 -15 532 703 ;
C -1 ; WX 600 ; N eogonek ; B 40 -199 563 454 ;
C -1 ; WX 600 ; N Uogonek ; B 4 -199 596 562 ;
C -1 ; WX 600 ; N Aacute ; B -9 0 609 784 ;
C -1 ; WX 600 ; N Adieresis ; B -9 0 609 761 ;
C -1 ; WX 600 ; N egrave ; B 40 -15 563 661 ;
C -1 ; WX 600 ; N zacute ; B 81 0 520 661 ;
C -1 ; WX 600 ; N iogonek ; B 77 -199 523 658 ;
C -1 ; WX 600 ; N Oacute ; B 22 -18 578 784 ;
C -1 ; WX 600 ; N oacute ; B 30 -15 570 661 ;
C -1 ; WX 600 ; N amacron ; B 35 -15 570 585 ;
C -1 ; WX 600 ; N sacute ; B 68 -17 535 661 ;
C -1 ; WX 600 ; N idieresis ; B 77 0 523 618 ;
C -1 ; WX 600 ; N Ocircumflex ; B 22 -18 578 780 ;
C -1 ; WX 600 ; N Ugrave ; B 4 -18 596 784 ;
C -1 ; WX 600 ; N Delta ; B 6 0 594 688 ;
C -1 ; WX 600 ; N thorn ; B -14 -142 570 626 ;
C -1 ; WX 600 ; N twosuperior ; B 143 230 436 616 ;
C -1 ; WX 600 ; N Odieresis ; B 22 -18 578 761 ;
C -1 ; WX 600 ; N mu ; B -1 -142 569 439 ;
C -1 ; WX 600 ; N igrave ; B 77 0 523 661 ;
C -1 ; WX 600 ; N ohungarumlaut ; B 30 -15 668 661 ;
C -1 ; WX 600 ; N Eogonek ; B 25 -199 576 562 ;
C -1 ; WX 600 ; N dcroat ; B 20 -15 591 626 ;
C -1 ; WX 600 ; N threequarters ; B -47 -60 648 661 ;
C -1 ; WX 600 ; N Scedilla ; B 47 -206 553 582 ;
C -1 ; WX 600 ; N lcaron ; B 77 0 597 626 ;
C -1 ; WX 600 ; N Kcommaaccent ; B 21 -250 599 562 ;
C -1 ; WX 600 ; N Lacute ; B 39 0 578 784 ;
C -1 ; WX 600 ; N trademark ; B -9 230 749 562 ;
C -1 ; WX 600 ; N edotaccent ; B 40 -15 563 638 ;
C -1 ; WX 600 ; N Igrave ; B 77 0 523 784 ;
C -1 ; WX 600 ; N Imacron ; B 77 0 523 708 ;
C -1 ; WX 600 ; N Lcaron ; B 39 0 637 562 ;
C -1 ; WX 600 ; N onehalf ; B -47 -60 648 661 ;
C -1 ; WX 600 ; N lessequal ; B 26 0 523 696 ;
C -1 ; WX 600 ; N ocircumflex ; B 30 -15 570 657 ;
C -1 ; WX 600 ; N ntilde ; B 18 0 592 636 ;
C -1 ; WX 600 ; N Uhungarumlaut ; B 4 -18 638 784 ;
C -1 ; WX 600 ; N Eacute ; B 25 0 560 784 ;
C -1 ; WX 600 ; N emacron ; B 40 -15 563 585 ;
C -1 ; WX 600 ; N gbreve ; B 30 -146 580 661 ;
C -1 ; WX 600 ; N onequarter ; B -56 -60 656 661 ;
C -1 ; WX 600 ; N Scaron ; B 47 -22 553 790 ;
C -1 ; WX 600 ; N Scommaaccent ; B 47 -250 553 582 ;
C -1 ; WX 600 ; N Ohungarumlaut ; B 22 -18 628 784 ;
C -1 ; WX 600 ; N degree ; B 86 243 474 616 ;
C -1 ; WX 600 ; N ograve ; B 30 -15 570 661 ;
C -1 ; WX 600 ; N Ccaron ; B 22 -18 560 790 ;
C -1 ; WX 600 ; N ugrave ; B -1 -15 569 661 ;
C -1 ; WX 600 ; N radical ; B -19 -104 473 778 ;
C -1 ; WX 600 ; N Dcaron ; B 30 0 594 790 ;
C -1 ; WX 600 ; N rcommaaccent ; B 47 -250 580 454 ;
C -1 ; WX 600 ; N Ntilde ; B 8 -12 610 759 ;
C -1 ; WX 600 ; N otilde ; B 30 -15 570 636 ;
C -1 ; WX 600 ; N Rcommaaccent ; B 24 -250 599 562 ;
C -1 ; WX 600 ; N Lcommaaccent ; B 39 -250 578 562 ;
C -1 ; WX 600 ; N Atilde ; B -9 0 609 759 ;
C -1 ; WX 600 ; N Aogonek ; B -9 -199 625 562 ;
C -1 ; WX 600 ; N Aring ; B -9 0 609 801 ;
C -1 ; WX 600 ; N Otilde ; B 22 -18 578 759 ;
C -1 ; WX 600 ; N zdotaccent ; B 81 0 520 638 ;
C -1 ; WX 600 ; N Ecaron ; B 25 0 560 790 ;
C -1 ; WX 600 ; N Iogonek ; B 77 -199 523 562 ;
C -1 ; WX 600 ; N kcommaaccent ; B 20 -250 585 626 ;
C -1 ; WX 600 ; N minus ; B 71 203 529 313 ;
C -1 ; WX 600 ; N Icircumflex ; B 77 0 523 780 ;
C -1 ; WX 600 ; N ncaron ; B 18 0 592 667 ;
C -1 ; WX 600 ; N tcommaaccent ; B 47 -250 532 562 ;
C -1 ; WX 600 ; N logicalnot ; B 71 103 529 413 ;
C -1 ; WX 600 ; N odieresis ; B 30 -15 570 638 ;
C -1 ; WX 600 ; N udieresis ; B -1 -15 569 638 ;
C -1 ; WX 600 ; N notequal ; B 12 -47 537 563 ;
C -1 ; WX 600 ; N gcommaaccent ; B 30 -146 580 714 ;
C -1 ; WX 600 ; N eth ; B 58 -27 543 626 ;
C -1 ; WX 600 ; N zcaron ; B 81 0 520 667 ;
C -1 ; WX 600 ; N ncommaaccent ; B 18 -250 592 454 ;
C -1 ; WX 600 ; N onesuperior ; B 153 230 447 616 ;
C -1 ; WX 600 ; N imacron ; B 77 0 523 585 ;
C -1 ; WX 600 ; N Euro ; B 0 0 0 0 ;
EndCharMetrics
EndFontMetrics
'
%
classmethod: StandardFont
courierBoldOblique
	"from http://www.adobe.com/devnet/font.html "

	<font: #'Courier-BoldOblique'>
	^self
		windowsName: 'Courier New'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.
Comment Creation Date: Mon Jun 23 16:28:46 1997
Comment UniqueID 43049
Comment VMusage 17529 79244
FontName Courier-BoldOblique
FullName Courier Bold Oblique
FamilyName Courier
Weight Bold
ItalicAngle -12
IsFixedPitch true
CharacterSet ExtendedRoman
FontBBox -57 -250 869 801 
UnderlinePosition -100
UnderlineThickness 50
Version 003.000
Notice Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.
EncodingScheme AdobeStandardEncoding
CapHeight 562
XHeight 439
Ascender 629
Descender -157
StdHW 84
StdVW 106
StartCharMetrics 315
C 32 ; WX 600 ; N space ; B 0 0 0 0 ;
C 33 ; WX 600 ; N exclam ; B 215 -15 495 572 ;
C 34 ; WX 600 ; N quotedbl ; B 211 277 585 562 ;
C 35 ; WX 600 ; N numbersign ; B 88 -45 641 651 ;
C 36 ; WX 600 ; N dollar ; B 87 -126 630 666 ;
C 37 ; WX 600 ; N percent ; B 101 -15 625 616 ;
C 38 ; WX 600 ; N ampersand ; B 61 -15 595 543 ;
C 39 ; WX 600 ; N quoteright ; B 229 277 543 562 ;
C 40 ; WX 600 ; N parenleft ; B 265 -102 592 616 ;
C 41 ; WX 600 ; N parenright ; B 117 -102 444 616 ;
C 42 ; WX 600 ; N asterisk ; B 179 219 598 601 ;
C 43 ; WX 600 ; N plus ; B 114 39 596 478 ;
C 44 ; WX 600 ; N comma ; B 99 -111 430 174 ;
C 45 ; WX 600 ; N hyphen ; B 143 203 567 313 ;
C 46 ; WX 600 ; N period ; B 206 -15 427 171 ;
C 47 ; WX 600 ; N slash ; B 90 -77 626 626 ;
C 48 ; WX 600 ; N zero ; B 135 -15 593 616 ;
C 49 ; WX 600 ; N one ; B 93 0 562 616 ;
C 50 ; WX 600 ; N two ; B 61 0 594 616 ;
C 51 ; WX 600 ; N three ; B 71 -15 571 616 ;
C 52 ; WX 600 ; N four ; B 81 0 559 616 ;
C 53 ; WX 600 ; N five ; B 77 -15 621 601 ;
C 54 ; WX 600 ; N six ; B 135 -15 652 616 ;
C 55 ; WX 600 ; N seven ; B 147 0 622 601 ;
C 56 ; WX 600 ; N eight ; B 115 -15 604 616 ;
C 57 ; WX 600 ; N nine ; B 75 -15 592 616 ;
C 58 ; WX 600 ; N colon ; B 205 -15 480 425 ;
C 59 ; WX 600 ; N semicolon ; B 99 -111 481 425 ;
C 60 ; WX 600 ; N less ; B 120 15 613 501 ;
C 61 ; WX 600 ; N equal ; B 96 118 614 398 ;
C 62 ; WX 600 ; N greater ; B 97 15 589 501 ;
C 63 ; WX 600 ; N question ; B 183 -14 592 580 ;
C 64 ; WX 600 ; N at ; B 65 -15 642 616 ;
C 65 ; WX 600 ; N A ; B -9 0 632 562 ;
C 66 ; WX 600 ; N B ; B 30 0 630 562 ;
C 67 ; WX 600 ; N C ; B 74 -18 675 580 ;
C 68 ; WX 600 ; N D ; B 30 0 664 562 ;
C 69 ; WX 600 ; N E ; B 25 0 670 562 ;
C 70 ; WX 600 ; N F ; B 39 0 684 562 ;
C 71 ; WX 600 ; N G ; B 74 -18 675 580 ;
C 72 ; WX 600 ; N H ; B 20 0 700 562 ;
C 73 ; WX 600 ; N I ; B 77 0 643 562 ;
C 74 ; WX 600 ; N J ; B 58 -18 721 562 ;
C 75 ; WX 600 ; N K ; B 21 0 692 562 ;
C 76 ; WX 600 ; N L ; B 39 0 636 562 ;
C 77 ; WX 600 ; N M ; B -2 0 722 562 ;
C 78 ; WX 600 ; N N ; B 8 -12 730 562 ;
C 79 ; WX 600 ; N O ; B 74 -18 645 580 ;
C 80 ; WX 600 ; N P ; B 48 0 643 562 ;
C 81 ; WX 600 ; N Q ; B 83 -138 636 580 ;
C 82 ; WX 600 ; N R ; B 24 0 617 562 ;
C 83 ; WX 600 ; N S ; B 54 -22 673 582 ;
C 84 ; WX 600 ; N T ; B 86 0 679 562 ;
C 85 ; WX 600 ; N U ; B 101 -18 716 562 ;
C 86 ; WX 600 ; N V ; B 84 0 733 562 ;
C 87 ; WX 600 ; N W ; B 79 0 738 562 ;
C 88 ; WX 600 ; N X ; B 12 0 690 562 ;
C 89 ; WX 600 ; N Y ; B 109 0 709 562 ;
C 90 ; WX 600 ; N Z ; B 62 0 637 562 ;
C 91 ; WX 600 ; N bracketleft ; B 223 -102 606 616 ;
C 92 ; WX 600 ; N backslash ; B 222 -77 496 626 ;
C 93 ; WX 600 ; N bracketright ; B 103 -102 486 616 ;
C 94 ; WX 600 ; N asciicircum ; B 171 250 556 616 ;
C 95 ; WX 600 ; N underscore ; B -27 -125 585 -75 ;
C 96 ; WX 600 ; N quoteleft ; B 297 277 487 562 ;
C 97 ; WX 600 ; N a ; B 61 -15 593 454 ;
C 98 ; WX 600 ; N b ; B 13 -15 636 626 ;
C 99 ; WX 600 ; N c ; B 81 -15 631 459 ;
C 100 ; WX 600 ; N d ; B 60 -15 645 626 ;
C 101 ; WX 600 ; N e ; B 81 -15 605 454 ;
C 102 ; WX 600 ; N f ; B 83 0 677 626 ; L i fi ; L l fl ;
C 103 ; WX 600 ; N g ; B 40 -146 674 454 ;
C 104 ; WX 600 ; N h ; B 18 0 615 626 ;
C 105 ; WX 600 ; N i ; B 77 0 546 658 ;
C 106 ; WX 600 ; N j ; B 36 -146 580 658 ;
C 107 ; WX 600 ; N k ; B 33 0 643 626 ;
C 108 ; WX 600 ; N l ; B 77 0 546 626 ;
C 109 ; WX 600 ; N m ; B -22 0 649 454 ;
C 110 ; WX 600 ; N n ; B 18 0 615 454 ;
C 111 ; WX 600 ; N o ; B 71 -15 622 454 ;
C 112 ; WX 600 ; N p ; B -32 -142 622 454 ;
C 113 ; WX 600 ; N q ; B 60 -142 685 454 ;
C 114 ; WX 600 ; N r ; B 47 0 655 454 ;
C 115 ; WX 600 ; N s ; B 66 -17 608 459 ;
C 116 ; WX 600 ; N t ; B 118 -15 567 562 ;
C 117 ; WX 600 ; N u ; B 70 -15 592 439 ;
C 118 ; WX 600 ; N v ; B 70 0 695 439 ;
C 119 ; WX 600 ; N w ; B 53 0 712 439 ;
C 120 ; WX 600 ; N x ; B 6 0 671 439 ;
C 121 ; WX 600 ; N y ; B -21 -142 695 439 ;
C 122 ; WX 600 ; N z ; B 81 0 614 439 ;
C 123 ; WX 600 ; N braceleft ; B 203 -102 595 616 ;
C 124 ; WX 600 ; N bar ; B 201 -250 505 750 ;
C 125 ; WX 600 ; N braceright ; B 114 -102 506 616 ;
C 126 ; WX 600 ; N asciitilde ; B 120 153 590 356 ;
C 161 ; WX 600 ; N exclamdown ; B 196 -146 477 449 ;
C 162 ; WX 600 ; N cent ; B 121 -49 605 614 ;
C 163 ; WX 600 ; N sterling ; B 106 -28 650 611 ;
C 164 ; WX 600 ; N fraction ; B 22 -60 708 661 ;
C 165 ; WX 600 ; N yen ; B 98 0 710 562 ;
C 166 ; WX 600 ; N florin ; B -57 -131 702 616 ;
C 167 ; WX 600 ; N section ; B 74 -70 620 580 ;
C 168 ; WX 600 ; N currency ; B 77 49 644 517 ;
C 169 ; WX 600 ; N quotesingle ; B 303 277 493 562 ;
C 170 ; WX 600 ; N quotedblleft ; B 190 277 594 562 ;
C 171 ; WX 600 ; N guillemotleft ; B 62 70 639 446 ;
C 172 ; WX 600 ; N guilsinglleft ; B 195 70 545 446 ;
C 173 ; WX 600 ; N guilsinglright ; B 165 70 514 446 ;
C 174 ; WX 600 ; N fi ; B 12 0 644 626 ;
C 175 ; WX 600 ; N fl ; B 12 0 644 626 ;
C 177 ; WX 600 ; N endash ; B 108 203 602 313 ;
C 178 ; WX 600 ; N dagger ; B 175 -70 586 580 ;
C 179 ; WX 600 ; N daggerdbl ; B 121 -70 587 580 ;
C 180 ; WX 600 ; N periodcentered ; B 248 165 461 351 ;
C 182 ; WX 600 ; N paragraph ; B 61 -70 700 580 ;
C 183 ; WX 600 ; N bullet ; B 196 132 523 430 ;
C 184 ; WX 600 ; N quotesinglbase ; B 144 -142 458 143 ;
C 185 ; WX 600 ; N quotedblbase ; B 34 -142 560 143 ;
C 186 ; WX 600 ; N quotedblright ; B 119 277 645 562 ;
C 187 ; WX 600 ; N guillemotright ; B 71 70 647 446 ;
C 188 ; WX 600 ; N ellipsis ; B 35 -15 587 116 ;
C 189 ; WX 600 ; N perthousand ; B -45 -15 743 616 ;
C 191 ; WX 600 ; N questiondown ; B 100 -146 509 449 ;
C 193 ; WX 600 ; N grave ; B 272 508 503 661 ;
C 194 ; WX 600 ; N acute ; B 312 508 609 661 ;
C 195 ; WX 600 ; N circumflex ; B 212 483 607 657 ;
C 196 ; WX 600 ; N tilde ; B 199 493 643 636 ;
C 197 ; WX 600 ; N macron ; B 195 505 637 585 ;
C 198 ; WX 600 ; N breve ; B 217 468 652 631 ;
C 199 ; WX 600 ; N dotaccent ; B 348 498 493 638 ;
C 200 ; WX 600 ; N dieresis ; B 246 498 595 638 ;
C 202 ; WX 600 ; N ring ; B 319 481 528 678 ;
C 203 ; WX 600 ; N cedilla ; B 168 -206 368 0 ;
C 205 ; WX 600 ; N hungarumlaut ; B 171 488 729 661 ;
C 206 ; WX 600 ; N ogonek ; B 143 -199 367 0 ;
C 207 ; WX 600 ; N caron ; B 238 493 633 667 ;
C 208 ; WX 600 ; N emdash ; B 33 203 677 313 ;
C 225 ; WX 600 ; N AE ; B -29 0 708 562 ;
C 227 ; WX 600 ; N ordfeminine ; B 188 196 526 580 ;
C 232 ; WX 600 ; N Lslash ; B 39 0 636 562 ;
C 233 ; WX 600 ; N Oslash ; B 48 -22 673 584 ;
C 234 ; WX 600 ; N OE ; B 26 0 701 562 ;
C 235 ; WX 600 ; N ordmasculine ; B 188 196 543 580 ;
C 241 ; WX 600 ; N ae ; B 21 -15 652 454 ;
C 245 ; WX 600 ; N dotlessi ; B 77 0 546 439 ;
C 248 ; WX 600 ; N lslash ; B 77 0 587 626 ;
C 249 ; WX 600 ; N oslash ; B 54 -24 638 463 ;
C 250 ; WX 600 ; N oe ; B 18 -15 662 454 ;
C 251 ; WX 600 ; N germandbls ; B 22 -15 629 626 ;
C -1 ; WX 600 ; N Idieresis ; B 77 0 643 761 ;
C -1 ; WX 600 ; N eacute ; B 81 -15 609 661 ;
C -1 ; WX 600 ; N abreve ; B 61 -15 658 661 ;
C -1 ; WX 600 ; N uhungarumlaut ; B 70 -15 769 661 ;
C -1 ; WX 600 ; N ecaron ; B 81 -15 633 667 ;
C -1 ; WX 600 ; N Ydieresis ; B 109 0 709 761 ;
C -1 ; WX 600 ; N divide ; B 114 16 596 500 ;
C -1 ; WX 600 ; N Yacute ; B 109 0 709 784 ;
C -1 ; WX 600 ; N Acircumflex ; B -9 0 632 780 ;
C -1 ; WX 600 ; N aacute ; B 61 -15 609 661 ;
C -1 ; WX 600 ; N Ucircumflex ; B 101 -18 716 780 ;
C -1 ; WX 600 ; N yacute ; B -21 -142 695 661 ;
C -1 ; WX 600 ; N scommaaccent ; B 66 -250 608 459 ;
C -1 ; WX 600 ; N ecircumflex ; B 81 -15 607 657 ;
C -1 ; WX 600 ; N Uring ; B 101 -18 716 801 ;
C -1 ; WX 600 ; N Udieresis ; B 101 -18 716 761 ;
C -1 ; WX 600 ; N aogonek ; B 61 -199 593 454 ;
C -1 ; WX 600 ; N Uacute ; B 101 -18 716 784 ;
C -1 ; WX 600 ; N uogonek ; B 70 -199 592 439 ;
C -1 ; WX 600 ; N Edieresis ; B 25 0 670 761 ;
C -1 ; WX 600 ; N Dcroat ; B 30 0 664 562 ;
C -1 ; WX 600 ; N commaaccent ; B 151 -250 385 -57 ;
C -1 ; WX 600 ; N copyright ; B 53 -18 667 580 ;
C -1 ; WX 600 ; N Emacron ; B 25 0 670 708 ;
C -1 ; WX 600 ; N ccaron ; B 81 -15 633 667 ;
C -1 ; WX 600 ; N aring ; B 61 -15 593 678 ;
C -1 ; WX 600 ; N Ncommaaccent ; B 8 -250 730 562 ;
C -1 ; WX 600 ; N lacute ; B 77 0 639 801 ;
C -1 ; WX 600 ; N agrave ; B 61 -15 593 661 ;
C -1 ; WX 600 ; N Tcommaaccent ; B 86 -250 679 562 ;
C -1 ; WX 600 ; N Cacute ; B 74 -18 675 784 ;
C -1 ; WX 600 ; N atilde ; B 61 -15 643 636 ;
C -1 ; WX 600 ; N Edotaccent ; B 25 0 670 761 ;
C -1 ; WX 600 ; N scaron ; B 66 -17 633 667 ;
C -1 ; WX 600 ; N scedilla ; B 66 -206 608 459 ;
C -1 ; WX 600 ; N iacute ; B 77 0 609 661 ;
C -1 ; WX 600 ; N lozenge ; B 145 0 614 740 ;
C -1 ; WX 600 ; N Rcaron ; B 24 0 659 790 ;
C -1 ; WX 600 ; N Gcommaaccent ; B 74 -250 675 580 ;
C -1 ; WX 600 ; N ucircumflex ; B 70 -15 597 657 ;
C -1 ; WX 600 ; N acircumflex ; B 61 -15 607 657 ;
C -1 ; WX 600 ; N Amacron ; B -9 0 633 708 ;
C -1 ; WX 600 ; N rcaron ; B 47 0 655 667 ;
C -1 ; WX 600 ; N ccedilla ; B 81 -206 631 459 ;
C -1 ; WX 600 ; N Zdotaccent ; B 62 0 637 761 ;
C -1 ; WX 600 ; N Thorn ; B 48 0 620 562 ;
C -1 ; WX 600 ; N Omacron ; B 74 -18 663 708 ;
C -1 ; WX 600 ; N Racute ; B 24 0 665 784 ;
C -1 ; WX 600 ; N Sacute ; B 54 -22 673 784 ;
C -1 ; WX 600 ; N dcaron ; B 60 -15 861 626 ;
C -1 ; WX 600 ; N Umacron ; B 101 -18 716 708 ;
C -1 ; WX 600 ; N uring ; B 70 -15 592 678 ;
C -1 ; WX 600 ; N threesuperior ; B 193 222 526 616 ;
C -1 ; WX 600 ; N Ograve ; B 74 -18 645 784 ;
C -1 ; WX 600 ; N Agrave ; B -9 0 632 784 ;
C -1 ; WX 600 ; N Abreve ; B -9 0 684 784 ;
C -1 ; WX 600 ; N multiply ; B 104 39 606 478 ;
C -1 ; WX 600 ; N uacute ; B 70 -15 599 661 ;
C -1 ; WX 600 ; N Tcaron ; B 86 0 679 790 ;
C -1 ; WX 600 ; N partialdiff ; B 91 -38 627 728 ;
C -1 ; WX 600 ; N ydieresis ; B -21 -142 695 638 ;
C -1 ; WX 600 ; N Nacute ; B 8 -12 730 784 ;
C -1 ; WX 600 ; N icircumflex ; B 77 0 577 657 ;
C -1 ; WX 600 ; N Ecircumflex ; B 25 0 670 780 ;
C -1 ; WX 600 ; N adieresis ; B 61 -15 595 638 ;
C -1 ; WX 600 ; N edieresis ; B 81 -15 605 638 ;
C -1 ; WX 600 ; N cacute ; B 81 -15 649 661 ;
C -1 ; WX 600 ; N nacute ; B 18 0 639 661 ;
C -1 ; WX 600 ; N umacron ; B 70 -15 637 585 ;
C -1 ; WX 600 ; N Ncaron ; B 8 -12 730 790 ;
C -1 ; WX 600 ; N Iacute ; B 77 0 643 784 ;
C -1 ; WX 600 ; N plusminus ; B 76 24 614 515 ;
C -1 ; WX 600 ; N brokenbar ; B 217 -175 489 675 ;
C -1 ; WX 600 ; N registered ; B 53 -18 667 580 ;
C -1 ; WX 600 ; N Gbreve ; B 74 -18 684 784 ;
C -1 ; WX 600 ; N Idotaccent ; B 77 0 643 761 ;
C -1 ; WX 600 ; N summation ; B 15 -10 672 706 ;
C -1 ; WX 600 ; N Egrave ; B 25 0 670 784 ;
C -1 ; WX 600 ; N racute ; B 47 0 655 661 ;
C -1 ; WX 600 ; N omacron ; B 71 -15 637 585 ;
C -1 ; WX 600 ; N Zacute ; B 62 0 665 784 ;
C -1 ; WX 600 ; N Zcaron ; B 62 0 659 790 ;
C -1 ; WX 600 ; N greaterequal ; B 26 0 627 696 ;
C -1 ; WX 600 ; N Eth ; B 30 0 664 562 ;
C -1 ; WX 600 ; N Ccedilla ; B 74 -206 675 580 ;
C -1 ; WX 600 ; N lcommaaccent ; B 77 -250 546 626 ;
C -1 ; WX 600 ; N tcaron ; B 118 -15 627 703 ;
C -1 ; WX 600 ; N eogonek ; B 81 -199 605 454 ;
C -1 ; WX 600 ; N Uogonek ; B 101 -199 716 562 ;
C -1 ; WX 600 ; N Aacute ; B -9 0 655 784 ;
C -1 ; WX 600 ; N Adieresis ; B -9 0 632 761 ;
C -1 ; WX 600 ; N egrave ; B 81 -15 605 661 ;
C -1 ; WX 600 ; N zacute ; B 81 0 614 661 ;
C -1 ; WX 600 ; N iogonek ; B 77 -199 546 658 ;
C -1 ; WX 600 ; N Oacute ; B 74 -18 645 784 ;
C -1 ; WX 600 ; N oacute ; B 71 -15 649 661 ;
C -1 ; WX 600 ; N amacron ; B 61 -15 637 585 ;
C -1 ; WX 600 ; N sacute ; B 66 -17 609 661 ;
C -1 ; WX 600 ; N idieresis ; B 77 0 561 618 ;
C -1 ; WX 600 ; N Ocircumflex ; B 74 -18 645 780 ;
C -1 ; WX 600 ; N Ugrave ; B 101 -18 716 784 ;
C -1 ; WX 600 ; N Delta ; B 6 0 594 688 ;
C -1 ; WX 600 ; N thorn ; B -32 -142 622 626 ;
C -1 ; WX 600 ; N twosuperior ; B 191 230 542 616 ;
C -1 ; WX 600 ; N Odieresis ; B 74 -18 645 761 ;
C -1 ; WX 600 ; N mu ; B 49 -142 592 439 ;
C -1 ; WX 600 ; N igrave ; B 77 0 546 661 ;
C -1 ; WX 600 ; N ohungarumlaut ; B 71 -15 809 661 ;
C -1 ; WX 600 ; N Eogonek ; B 25 -199 670 562 ;
C -1 ; WX 600 ; N dcroat ; B 60 -15 712 626 ;
C -1 ; WX 600 ; N threequarters ; B 8 -60 699 661 ;
C -1 ; WX 600 ; N Scedilla ; B 54 -206 673 582 ;
C -1 ; WX 600 ; N lcaron ; B 77 0 731 626 ;
C -1 ; WX 600 ; N Kcommaaccent ; B 21 -250 692 562 ;
C -1 ; WX 600 ; N Lacute ; B 39 0 636 784 ;
C -1 ; WX 600 ; N trademark ; B 86 230 869 562 ;
C -1 ; WX 600 ; N edotaccent ; B 81 -15 605 638 ;
C -1 ; WX 600 ; N Igrave ; B 77 0 643 784 ;
C -1 ; WX 600 ; N Imacron ; B 77 0 663 708 ;
C -1 ; WX 600 ; N Lcaron ; B 39 0 757 562 ;
C -1 ; WX 600 ; N onehalf ; B 22 -60 716 661 ;
C -1 ; WX 600 ; N lessequal ; B 26 0 671 696 ;
C -1 ; WX 600 ; N ocircumflex ; B 71 -15 622 657 ;
C -1 ; WX 600 ; N ntilde ; B 18 0 643 636 ;
C -1 ; WX 600 ; N Uhungarumlaut ; B 101 -18 805 784 ;
C -1 ; WX 600 ; N Eacute ; B 25 0 670 784 ;
C -1 ; WX 600 ; N emacron ; B 81 -15 637 585 ;
C -1 ; WX 600 ; N gbreve ; B 40 -146 674 661 ;
C -1 ; WX 600 ; N onequarter ; B 13 -60 707 661 ;
C -1 ; WX 600 ; N Scaron ; B 54 -22 689 790 ;
C -1 ; WX 600 ; N Scommaaccent ; B 54 -250 673 582 ;
C -1 ; WX 600 ; N Ohungarumlaut ; B 74 -18 795 784 ;
C -1 ; WX 600 ; N degree ; B 173 243 570 616 ;
C -1 ; WX 600 ; N ograve ; B 71 -15 622 661 ;
C -1 ; WX 600 ; N Ccaron ; B 74 -18 689 790 ;
C -1 ; WX 600 ; N ugrave ; B 70 -15 592 661 ;
C -1 ; WX 600 ; N radical ; B 67 -104 635 778 ;
C -1 ; WX 600 ; N Dcaron ; B 30 0 664 790 ;
C -1 ; WX 600 ; N rcommaaccent ; B 47 -250 655 454 ;
C -1 ; WX 600 ; N Ntilde ; B 8 -12 730 759 ;
C -1 ; WX 600 ; N otilde ; B 71 -15 643 636 ;
C -1 ; WX 600 ; N Rcommaaccent ; B 24 -250 617 562 ;
C -1 ; WX 600 ; N Lcommaaccent ; B 39 -250 636 562 ;
C -1 ; WX 600 ; N Atilde ; B -9 0 669 759 ;
C -1 ; WX 600 ; N Aogonek ; B -9 -199 632 562 ;
C -1 ; WX 600 ; N Aring ; B -9 0 632 801 ;
C -1 ; WX 600 ; N Otilde ; B 74 -18 669 759 ;
C -1 ; WX 600 ; N zdotaccent ; B 81 0 614 638 ;
C -1 ; WX 600 ; N Ecaron ; B 25 0 670 790 ;
C -1 ; WX 600 ; N Iogonek ; B 77 -199 643 562 ;
C -1 ; WX 600 ; N kcommaaccent ; B 33 -250 643 626 ;
C -1 ; WX 600 ; N minus ; B 114 203 596 313 ;
C -1 ; WX 600 ; N Icircumflex ; B 77 0 643 780 ;
C -1 ; WX 600 ; N ncaron ; B 18 0 633 667 ;
C -1 ; WX 600 ; N tcommaaccent ; B 118 -250 567 562 ;
C -1 ; WX 600 ; N logicalnot ; B 135 103 617 413 ;
C -1 ; WX 600 ; N odieresis ; B 71 -15 622 638 ;
C -1 ; WX 600 ; N udieresis ; B 70 -15 595 638 ;
C -1 ; WX 600 ; N notequal ; B 30 -47 626 563 ;
C -1 ; WX 600 ; N gcommaaccent ; B 40 -146 674 714 ;
C -1 ; WX 600 ; N eth ; B 93 -27 661 626 ;
C -1 ; WX 600 ; N zcaron ; B 81 0 643 667 ;
C -1 ; WX 600 ; N ncommaaccent ; B 18 -250 615 454 ;
C -1 ; WX 600 ; N onesuperior ; B 212 230 514 616 ;
C -1 ; WX 600 ; N imacron ; B 77 0 575 585 ;
C -1 ; WX 600 ; N Euro ; B 0 0 0 0 ;
EndCharMetrics
EndFontMetrics
'
%
classmethod: StandardFont
courierOblique
	"from http://www.adobe.com/devnet/font.html "

	<font: #'Courier-Oblique'>
	^self
		windowsName: 'Courier New'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.
Comment Creation Date: Thu May  1 17:37:52 1997
Comment UniqueID 43051
Comment VMusage 16248 75829
FontName Courier-Oblique
FullName Courier Oblique
FamilyName Courier
Weight Medium
ItalicAngle -12
IsFixedPitch true
CharacterSet ExtendedRoman
FontBBox -27 -250 849 805 
UnderlinePosition -100
UnderlineThickness 50
Version 003.000
Notice Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.
EncodingScheme AdobeStandardEncoding
CapHeight 562
XHeight 426
Ascender 629
Descender -157
StdHW 51
StdVW 51
StartCharMetrics 315
C 32 ; WX 600 ; N space ; B 0 0 0 0 ;
C 33 ; WX 600 ; N exclam ; B 243 -15 464 572 ;
C 34 ; WX 600 ; N quotedbl ; B 273 328 532 562 ;
C 35 ; WX 600 ; N numbersign ; B 133 -32 596 639 ;
C 36 ; WX 600 ; N dollar ; B 108 -126 596 662 ;
C 37 ; WX 600 ; N percent ; B 134 -15 599 622 ;
C 38 ; WX 600 ; N ampersand ; B 87 -15 580 543 ;
C 39 ; WX 600 ; N quoteright ; B 283 328 495 562 ;
C 40 ; WX 600 ; N parenleft ; B 313 -108 572 622 ;
C 41 ; WX 600 ; N parenright ; B 137 -108 396 622 ;
C 42 ; WX 600 ; N asterisk ; B 212 257 580 607 ;
C 43 ; WX 600 ; N plus ; B 129 44 580 470 ;
C 44 ; WX 600 ; N comma ; B 157 -112 370 122 ;
C 45 ; WX 600 ; N hyphen ; B 152 231 558 285 ;
C 46 ; WX 600 ; N period ; B 238 -15 382 109 ;
C 47 ; WX 600 ; N slash ; B 112 -80 604 629 ;
C 48 ; WX 600 ; N zero ; B 154 -15 575 622 ;
C 49 ; WX 600 ; N one ; B 98 0 515 622 ;
C 50 ; WX 600 ; N two ; B 70 0 568 622 ;
C 51 ; WX 600 ; N three ; B 82 -15 538 622 ;
C 52 ; WX 600 ; N four ; B 108 0 541 622 ;
C 53 ; WX 600 ; N five ; B 99 -15 589 607 ;
C 54 ; WX 600 ; N six ; B 155 -15 629 622 ;
C 55 ; WX 600 ; N seven ; B 182 0 612 607 ;
C 56 ; WX 600 ; N eight ; B 132 -15 588 622 ;
C 57 ; WX 600 ; N nine ; B 93 -15 574 622 ;
C 58 ; WX 600 ; N colon ; B 238 -15 441 385 ;
C 59 ; WX 600 ; N semicolon ; B 157 -112 441 385 ;
C 60 ; WX 600 ; N less ; B 96 42 610 472 ;
C 61 ; WX 600 ; N equal ; B 109 138 600 376 ;
C 62 ; WX 600 ; N greater ; B 85 42 599 472 ;
C 63 ; WX 600 ; N question ; B 222 -15 583 572 ;
C 64 ; WX 600 ; N at ; B 127 -15 582 622 ;
C 65 ; WX 600 ; N A ; B 3 0 607 562 ;
C 66 ; WX 600 ; N B ; B 43 0 616 562 ;
C 67 ; WX 600 ; N C ; B 93 -18 655 580 ;
C 68 ; WX 600 ; N D ; B 43 0 645 562 ;
C 69 ; WX 600 ; N E ; B 53 0 660 562 ;
C 70 ; WX 600 ; N F ; B 53 0 660 562 ;
C 71 ; WX 600 ; N G ; B 83 -18 645 580 ;
C 72 ; WX 600 ; N H ; B 32 0 687 562 ;
C 73 ; WX 600 ; N I ; B 96 0 623 562 ;
C 74 ; WX 600 ; N J ; B 52 -18 685 562 ;
C 75 ; WX 600 ; N K ; B 38 0 671 562 ;
C 76 ; WX 600 ; N L ; B 47 0 607 562 ;
C 77 ; WX 600 ; N M ; B 4 0 715 562 ;
C 78 ; WX 600 ; N N ; B 7 -13 712 562 ;
C 79 ; WX 600 ; N O ; B 94 -18 625 580 ;
C 80 ; WX 600 ; N P ; B 79 0 644 562 ;
C 81 ; WX 600 ; N Q ; B 95 -138 625 580 ;
C 82 ; WX 600 ; N R ; B 38 0 598 562 ;
C 83 ; WX 600 ; N S ; B 76 -20 650 580 ;
C 84 ; WX 600 ; N T ; B 108 0 665 562 ;
C 85 ; WX 600 ; N U ; B 125 -18 702 562 ;
C 86 ; WX 600 ; N V ; B 105 -13 723 562 ;
C 87 ; WX 600 ; N W ; B 106 -13 722 562 ;
C 88 ; WX 600 ; N X ; B 23 0 675 562 ;
C 89 ; WX 600 ; N Y ; B 133 0 695 562 ;
C 90 ; WX 600 ; N Z ; B 86 0 610 562 ;
C 91 ; WX 600 ; N bracketleft ; B 246 -108 574 622 ;
C 92 ; WX 600 ; N backslash ; B 249 -80 468 629 ;
C 93 ; WX 600 ; N bracketright ; B 135 -108 463 622 ;
C 94 ; WX 600 ; N asciicircum ; B 175 354 587 622 ;
C 95 ; WX 600 ; N underscore ; B -27 -125 584 -75 ;
C 96 ; WX 600 ; N quoteleft ; B 343 328 457 562 ;
C 97 ; WX 600 ; N a ; B 76 -15 569 441 ;
C 98 ; WX 600 ; N b ; B 29 -15 625 629 ;
C 99 ; WX 600 ; N c ; B 106 -15 608 441 ;
C 100 ; WX 600 ; N d ; B 85 -15 640 629 ;
C 101 ; WX 600 ; N e ; B 106 -15 598 441 ;
C 102 ; WX 600 ; N f ; B 114 0 662 629 ; L i fi ; L l fl ;
C 103 ; WX 600 ; N g ; B 61 -157 657 441 ;
C 104 ; WX 600 ; N h ; B 33 0 592 629 ;
C 105 ; WX 600 ; N i ; B 95 0 515 657 ;
C 106 ; WX 600 ; N j ; B 52 -157 550 657 ;
C 107 ; WX 600 ; N k ; B 58 0 633 629 ;
C 108 ; WX 600 ; N l ; B 95 0 515 629 ;
C 109 ; WX 600 ; N m ; B -5 0 615 441 ;
C 110 ; WX 600 ; N n ; B 26 0 585 441 ;
C 111 ; WX 600 ; N o ; B 102 -15 588 441 ;
C 112 ; WX 600 ; N p ; B -24 -157 605 441 ;
C 113 ; WX 600 ; N q ; B 85 -157 682 441 ;
C 114 ; WX 600 ; N r ; B 60 0 636 441 ;
C 115 ; WX 600 ; N s ; B 78 -15 584 441 ;
C 116 ; WX 600 ; N t ; B 167 -15 561 561 ;
C 117 ; WX 600 ; N u ; B 101 -15 572 426 ;
C 118 ; WX 600 ; N v ; B 90 -10 681 426 ;
C 119 ; WX 600 ; N w ; B 76 -10 695 426 ;
C 120 ; WX 600 ; N x ; B 20 0 655 426 ;
C 121 ; WX 600 ; N y ; B -4 -157 683 426 ;
C 122 ; WX 600 ; N z ; B 99 0 593 426 ;
C 123 ; WX 600 ; N braceleft ; B 233 -108 569 622 ;
C 124 ; WX 600 ; N bar ; B 222 -250 485 750 ;
C 125 ; WX 600 ; N braceright ; B 140 -108 477 622 ;
C 126 ; WX 600 ; N asciitilde ; B 116 197 600 320 ;
C 161 ; WX 600 ; N exclamdown ; B 225 -157 445 430 ;
C 162 ; WX 600 ; N cent ; B 151 -49 588 614 ;
C 163 ; WX 600 ; N sterling ; B 124 -21 621 611 ;
C 164 ; WX 600 ; N fraction ; B 84 -57 646 665 ;
C 165 ; WX 600 ; N yen ; B 120 0 693 562 ;
C 166 ; WX 600 ; N florin ; B -26 -143 671 622 ;
C 167 ; WX 600 ; N section ; B 104 -78 590 580 ;
C 168 ; WX 600 ; N currency ; B 94 58 628 506 ;
C 169 ; WX 600 ; N quotesingle ; B 345 328 460 562 ;
C 170 ; WX 600 ; N quotedblleft ; B 262 328 541 562 ;
C 171 ; WX 600 ; N guillemotleft ; B 92 70 652 446 ;
C 172 ; WX 600 ; N guilsinglleft ; B 204 70 540 446 ;
C 173 ; WX 600 ; N guilsinglright ; B 170 70 506 446 ;
C 174 ; WX 600 ; N fi ; B 3 0 619 629 ;
C 175 ; WX 600 ; N fl ; B 3 0 619 629 ;
C 177 ; WX 600 ; N endash ; B 124 231 586 285 ;
C 178 ; WX 600 ; N dagger ; B 217 -78 546 580 ;
C 179 ; WX 600 ; N daggerdbl ; B 163 -78 546 580 ;
C 180 ; WX 600 ; N periodcentered ; B 275 189 434 327 ;
C 182 ; WX 600 ; N paragraph ; B 100 -78 630 562 ;
C 183 ; WX 600 ; N bullet ; B 224 130 485 383 ;
C 184 ; WX 600 ; N quotesinglbase ; B 185 -134 397 100 ;
C 185 ; WX 600 ; N quotedblbase ; B 115 -134 478 100 ;
C 186 ; WX 600 ; N quotedblright ; B 213 328 576 562 ;
C 187 ; WX 600 ; N guillemotright ; B 58 70 618 446 ;
C 188 ; WX 600 ; N ellipsis ; B 46 -15 575 111 ;
C 189 ; WX 600 ; N perthousand ; B 59 -15 627 622 ;
C 191 ; WX 600 ; N questiondown ; B 105 -157 466 430 ;
C 193 ; WX 600 ; N grave ; B 294 497 484 672 ;
C 194 ; WX 600 ; N acute ; B 348 497 612 672 ;
C 195 ; WX 600 ; N circumflex ; B 229 477 581 654 ;
C 196 ; WX 600 ; N tilde ; B 212 489 629 606 ;
C 197 ; WX 600 ; N macron ; B 232 525 600 565 ;
C 198 ; WX 600 ; N breve ; B 279 501 576 609 ;
C 199 ; WX 600 ; N dotaccent ; B 373 537 478 640 ;
C 200 ; WX 600 ; N dieresis ; B 272 537 579 640 ;
C 202 ; WX 600 ; N ring ; B 332 463 500 627 ;
C 203 ; WX 600 ; N cedilla ; B 197 -151 344 10 ;
C 205 ; WX 600 ; N hungarumlaut ; B 239 497 683 672 ;
C 206 ; WX 600 ; N ogonek ; B 189 -172 377 4 ;
C 207 ; WX 600 ; N caron ; B 262 492 614 669 ;
C 208 ; WX 600 ; N emdash ; B 49 231 661 285 ;
C 225 ; WX 600 ; N AE ; B 3 0 655 562 ;
C 227 ; WX 600 ; N ordfeminine ; B 209 249 512 580 ;
C 232 ; WX 600 ; N Lslash ; B 47 0 607 562 ;
C 233 ; WX 600 ; N Oslash ; B 94 -80 625 629 ;
C 234 ; WX 600 ; N OE ; B 59 0 672 562 ;
C 235 ; WX 600 ; N ordmasculine ; B 210 249 535 580 ;
C 241 ; WX 600 ; N ae ; B 41 -15 626 441 ;
C 245 ; WX 600 ; N dotlessi ; B 95 0 515 426 ;
C 248 ; WX 600 ; N lslash ; B 95 0 587 629 ;
C 249 ; WX 600 ; N oslash ; B 102 -80 588 506 ;
C 250 ; WX 600 ; N oe ; B 54 -15 615 441 ;
C 251 ; WX 600 ; N germandbls ; B 48 -15 617 629 ;
C -1 ; WX 600 ; N Idieresis ; B 96 0 623 753 ;
C -1 ; WX 600 ; N eacute ; B 106 -15 612 672 ;
C -1 ; WX 600 ; N abreve ; B 76 -15 576 609 ;
C -1 ; WX 600 ; N uhungarumlaut ; B 101 -15 723 672 ;
C -1 ; WX 600 ; N ecaron ; B 106 -15 614 669 ;
C -1 ; WX 600 ; N Ydieresis ; B 133 0 695 753 ;
C -1 ; WX 600 ; N divide ; B 136 48 573 467 ;
C -1 ; WX 600 ; N Yacute ; B 133 0 695 805 ;
C -1 ; WX 600 ; N Acircumflex ; B 3 0 607 787 ;
C -1 ; WX 600 ; N aacute ; B 76 -15 612 672 ;
C -1 ; WX 600 ; N Ucircumflex ; B 125 -18 702 787 ;
C -1 ; WX 600 ; N yacute ; B -4 -157 683 672 ;
C -1 ; WX 600 ; N scommaaccent ; B 78 -250 584 441 ;
C -1 ; WX 600 ; N ecircumflex ; B 106 -15 598 654 ;
C -1 ; WX 600 ; N Uring ; B 125 -18 702 760 ;
C -1 ; WX 600 ; N Udieresis ; B 125 -18 702 753 ;
C -1 ; WX 600 ; N aogonek ; B 76 -172 569 441 ;
C -1 ; WX 600 ; N Uacute ; B 125 -18 702 805 ;
C -1 ; WX 600 ; N uogonek ; B 101 -172 572 426 ;
C -1 ; WX 600 ; N Edieresis ; B 53 0 660 753 ;
C -1 ; WX 600 ; N Dcroat ; B 43 0 645 562 ;
C -1 ; WX 600 ; N commaaccent ; B 145 -250 323 -58 ;
C -1 ; WX 600 ; N copyright ; B 53 -18 667 580 ;
C -1 ; WX 600 ; N Emacron ; B 53 0 660 698 ;
C -1 ; WX 600 ; N ccaron ; B 106 -15 614 669 ;
C -1 ; WX 600 ; N aring ; B 76 -15 569 627 ;
C -1 ; WX 600 ; N Ncommaaccent ; B 7 -250 712 562 ;
C -1 ; WX 600 ; N lacute ; B 95 0 640 805 ;
C -1 ; WX 600 ; N agrave ; B 76 -15 569 672 ;
C -1 ; WX 600 ; N Tcommaaccent ; B 108 -250 665 562 ;
C -1 ; WX 600 ; N Cacute ; B 93 -18 655 805 ;
C -1 ; WX 600 ; N atilde ; B 76 -15 629 606 ;
C -1 ; WX 600 ; N Edotaccent ; B 53 0 660 753 ;
C -1 ; WX 600 ; N scaron ; B 78 -15 614 669 ;
C -1 ; WX 600 ; N scedilla ; B 78 -151 584 441 ;
C -1 ; WX 600 ; N iacute ; B 95 0 612 672 ;
C -1 ; WX 600 ; N lozenge ; B 94 0 519 706 ;
C -1 ; WX 600 ; N Rcaron ; B 38 0 642 802 ;
C -1 ; WX 600 ; N Gcommaaccent ; B 83 -250 645 580 ;
C -1 ; WX 600 ; N ucircumflex ; B 101 -15 572 654 ;
C -1 ; WX 600 ; N acircumflex ; B 76 -15 581 654 ;
C -1 ; WX 600 ; N Amacron ; B 3 0 607 698 ;
C -1 ; WX 600 ; N rcaron ; B 60 0 636 669 ;
C -1 ; WX 600 ; N ccedilla ; B 106 -151 614 441 ;
C -1 ; WX 600 ; N Zdotaccent ; B 86 0 610 753 ;
C -1 ; WX 600 ; N Thorn ; B 79 0 606 562 ;
C -1 ; WX 600 ; N Omacron ; B 94 -18 628 698 ;
C -1 ; WX 600 ; N Racute ; B 38 0 670 805 ;
C -1 ; WX 600 ; N Sacute ; B 76 -20 650 805 ;
C -1 ; WX 600 ; N dcaron ; B 85 -15 849 629 ;
C -1 ; WX 600 ; N Umacron ; B 125 -18 702 698 ;
C -1 ; WX 600 ; N uring ; B 101 -15 572 627 ;
C -1 ; WX 600 ; N threesuperior ; B 213 240 501 622 ;
C -1 ; WX 600 ; N Ograve ; B 94 -18 625 805 ;
C -1 ; WX 600 ; N Agrave ; B 3 0 607 805 ;
C -1 ; WX 600 ; N Abreve ; B 3 0 607 732 ;
C -1 ; WX 600 ; N multiply ; B 103 43 607 470 ;
C -1 ; WX 600 ; N uacute ; B 101 -15 602 672 ;
C -1 ; WX 600 ; N Tcaron ; B 108 0 665 802 ;
C -1 ; WX 600 ; N partialdiff ; B 45 -38 546 710 ;
C -1 ; WX 600 ; N ydieresis ; B -4 -157 683 620 ;
C -1 ; WX 600 ; N Nacute ; B 7 -13 712 805 ;
C -1 ; WX 600 ; N icircumflex ; B 95 0 551 654 ;
C -1 ; WX 600 ; N Ecircumflex ; B 53 0 660 787 ;
C -1 ; WX 600 ; N adieresis ; B 76 -15 575 620 ;
C -1 ; WX 600 ; N edieresis ; B 106 -15 598 620 ;
C -1 ; WX 600 ; N cacute ; B 106 -15 612 672 ;
C -1 ; WX 600 ; N nacute ; B 26 0 602 672 ;
C -1 ; WX 600 ; N umacron ; B 101 -15 600 565 ;
C -1 ; WX 600 ; N Ncaron ; B 7 -13 712 802 ;
C -1 ; WX 600 ; N Iacute ; B 96 0 640 805 ;
C -1 ; WX 600 ; N plusminus ; B 96 44 594 558 ;
C -1 ; WX 600 ; N brokenbar ; B 238 -175 469 675 ;
C -1 ; WX 600 ; N registered ; B 53 -18 667 580 ;
C -1 ; WX 600 ; N Gbreve ; B 83 -18 645 732 ;
C -1 ; WX 600 ; N Idotaccent ; B 96 0 623 753 ;
C -1 ; WX 600 ; N summation ; B 15 -10 670 706 ;
C -1 ; WX 600 ; N Egrave ; B 53 0 660 805 ;
C -1 ; WX 600 ; N racute ; B 60 0 636 672 ;
C -1 ; WX 600 ; N omacron ; B 102 -15 600 565 ;
C -1 ; WX 600 ; N Zacute ; B 86 0 670 805 ;
C -1 ; WX 600 ; N Zcaron ; B 86 0 642 802 ;
C -1 ; WX 600 ; N greaterequal ; B 98 0 594 710 ;
C -1 ; WX 600 ; N Eth ; B 43 0 645 562 ;
C -1 ; WX 600 ; N Ccedilla ; B 93 -151 658 580 ;
C -1 ; WX 600 ; N lcommaaccent ; B 95 -250 515 629 ;
C -1 ; WX 600 ; N tcaron ; B 167 -15 587 717 ;
C -1 ; WX 600 ; N eogonek ; B 106 -172 598 441 ;
C -1 ; WX 600 ; N Uogonek ; B 124 -172 702 562 ;
C -1 ; WX 600 ; N Aacute ; B 3 0 660 805 ;
C -1 ; WX 600 ; N Adieresis ; B 3 0 607 753 ;
C -1 ; WX 600 ; N egrave ; B 106 -15 598 672 ;
C -1 ; WX 600 ; N zacute ; B 99 0 612 672 ;
C -1 ; WX 600 ; N iogonek ; B 95 -172 515 657 ;
C -1 ; WX 600 ; N Oacute ; B 94 -18 640 805 ;
C -1 ; WX 600 ; N oacute ; B 102 -15 612 672 ;
C -1 ; WX 600 ; N amacron ; B 76 -15 600 565 ;
C -1 ; WX 600 ; N sacute ; B 78 -15 612 672 ;
C -1 ; WX 600 ; N idieresis ; B 95 0 545 620 ;
C -1 ; WX 600 ; N Ocircumflex ; B 94 -18 625 787 ;
C -1 ; WX 600 ; N Ugrave ; B 125 -18 702 805 ;
C -1 ; WX 600 ; N Delta ; B 6 0 598 688 ;
C -1 ; WX 600 ; N thorn ; B -24 -157 605 629 ;
C -1 ; WX 600 ; N twosuperior ; B 230 249 535 622 ;
C -1 ; WX 600 ; N Odieresis ; B 94 -18 625 753 ;
C -1 ; WX 600 ; N mu ; B 72 -157 572 426 ;
C -1 ; WX 600 ; N igrave ; B 95 0 515 672 ;
C -1 ; WX 600 ; N ohungarumlaut ; B 102 -15 723 672 ;
C -1 ; WX 600 ; N Eogonek ; B 53 -172 660 562 ;
C -1 ; WX 600 ; N dcroat ; B 85 -15 704 629 ;
C -1 ; WX 600 ; N threequarters ; B 73 -56 659 666 ;
C -1 ; WX 600 ; N Scedilla ; B 76 -151 650 580 ;
C -1 ; WX 600 ; N lcaron ; B 95 0 667 629 ;
C -1 ; WX 600 ; N Kcommaaccent ; B 38 -250 671 562 ;
C -1 ; WX 600 ; N Lacute ; B 47 0 607 805 ;
C -1 ; WX 600 ; N trademark ; B 75 263 742 562 ;
C -1 ; WX 600 ; N edotaccent ; B 106 -15 598 620 ;
C -1 ; WX 600 ; N Igrave ; B 96 0 623 805 ;
C -1 ; WX 600 ; N Imacron ; B 96 0 628 698 ;
C -1 ; WX 600 ; N Lcaron ; B 47 0 632 562 ;
C -1 ; WX 600 ; N onehalf ; B 65 -57 669 665 ;
C -1 ; WX 600 ; N lessequal ; B 98 0 645 710 ;
C -1 ; WX 600 ; N ocircumflex ; B 102 -15 588 654 ;
C -1 ; WX 600 ; N ntilde ; B 26 0 629 606 ;
C -1 ; WX 600 ; N Uhungarumlaut ; B 125 -18 761 805 ;
C -1 ; WX 600 ; N Eacute ; B 53 0 670 805 ;
C -1 ; WX 600 ; N emacron ; B 106 -15 600 565 ;
C -1 ; WX 600 ; N gbreve ; B 61 -157 657 609 ;
C -1 ; WX 600 ; N onequarter ; B 65 -57 674 665 ;
C -1 ; WX 600 ; N Scaron ; B 76 -20 672 802 ;
C -1 ; WX 600 ; N Scommaaccent ; B 76 -250 650 580 ;
C -1 ; WX 600 ; N Ohungarumlaut ; B 94 -18 751 805 ;
C -1 ; WX 600 ; N degree ; B 214 269 576 622 ;
C -1 ; WX 600 ; N ograve ; B 102 -15 588 672 ;
C -1 ; WX 600 ; N Ccaron ; B 93 -18 672 802 ;
C -1 ; WX 600 ; N ugrave ; B 101 -15 572 672 ;
C -1 ; WX 600 ; N radical ; B 85 -15 765 792 ;
C -1 ; WX 600 ; N Dcaron ; B 43 0 645 802 ;
C -1 ; WX 600 ; N rcommaaccent ; B 60 -250 636 441 ;
C -1 ; WX 600 ; N Ntilde ; B 7 -13 712 729 ;
C -1 ; WX 600 ; N otilde ; B 102 -15 629 606 ;
C -1 ; WX 600 ; N Rcommaaccent ; B 38 -250 598 562 ;
C -1 ; WX 600 ; N Lcommaaccent ; B 47 -250 607 562 ;
C -1 ; WX 600 ; N Atilde ; B 3 0 655 729 ;
C -1 ; WX 600 ; N Aogonek ; B 3 -172 607 562 ;
C -1 ; WX 600 ; N Aring ; B 3 0 607 750 ;
C -1 ; WX 600 ; N Otilde ; B 94 -18 655 729 ;
C -1 ; WX 600 ; N zdotaccent ; B 99 0 593 620 ;
C -1 ; WX 600 ; N Ecaron ; B 53 0 660 802 ;
C -1 ; WX 600 ; N Iogonek ; B 96 -172 623 562 ;
C -1 ; WX 600 ; N kcommaaccent ; B 58 -250 633 629 ;
C -1 ; WX 600 ; N minus ; B 129 232 580 283 ;
C -1 ; WX 600 ; N Icircumflex ; B 96 0 623 787 ;
C -1 ; WX 600 ; N ncaron ; B 26 0 614 669 ;
C -1 ; WX 600 ; N tcommaaccent ; B 165 -250 561 561 ;
C -1 ; WX 600 ; N logicalnot ; B 155 108 591 369 ;
C -1 ; WX 600 ; N odieresis ; B 102 -15 588 620 ;
C -1 ; WX 600 ; N udieresis ; B 101 -15 575 620 ;
C -1 ; WX 600 ; N notequal ; B 43 -16 621 529 ;
C -1 ; WX 600 ; N gcommaaccent ; B 61 -157 657 708 ;
C -1 ; WX 600 ; N eth ; B 102 -15 639 629 ;
C -1 ; WX 600 ; N zcaron ; B 99 0 624 669 ;
C -1 ; WX 600 ; N ncommaaccent ; B 26 -250 585 441 ;
C -1 ; WX 600 ; N onesuperior ; B 231 249 491 622 ;
C -1 ; WX 600 ; N imacron ; B 95 0 543 565 ;
C -1 ; WX 600 ; N Euro ; B 0 0 0 0 ;
EndCharMetrics
EndFontMetrics
'
%
classmethod: StandardFont
helvetica
	"from http://www.adobe.com/devnet/font.html "

	<font: #Helvetica>
	^self
		windowsName: 'Arial'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.
Comment Creation Date: Thu May  1 12:38:23 1997
Comment UniqueID 43054
Comment VMusage 37069 48094
FontName Helvetica
FullName Helvetica
FamilyName Helvetica
Weight Medium
ItalicAngle 0
IsFixedPitch false
CharacterSet ExtendedRoman
FontBBox -166 -225 1000 931 
UnderlinePosition -100
UnderlineThickness 50
Version 002.000
Notice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.
EncodingScheme WinAnsiEncoding
CapHeight 718
XHeight 523
Ascender 718
Descender -207
StdHW 76
StdVW 88
StartCharMetrics 317
C 32 ; WX 278 ; N space ; B 0 0 0 0 ;
C 160 ; WX 278 ; N space ; B 0 0 0 0 ;
C 33 ; WX 278 ; N exclam ; B 90 0 187 718 ;
C 34 ; WX 355 ; N quotedbl ; B 70 463 285 718 ;
C 35 ; WX 556 ; N numbersign ; B 28 0 529 688 ;
C 36 ; WX 556 ; N dollar ; B 32 -115 520 775 ;
C 37 ; WX 889 ; N percent ; B 39 -19 850 703 ;
C 38 ; WX 667 ; N ampersand ; B 44 -15 645 718 ;
C 146 ; WX 222 ; N quoteright ; B 53 463 157 718 ;
C 40 ; WX 333 ; N parenleft ; B 68 -207 299 733 ;
C 41 ; WX 333 ; N parenright ; B 34 -207 265 733 ;
C 42 ; WX 389 ; N asterisk ; B 39 431 349 718 ;
C 43 ; WX 584 ; N plus ; B 39 0 545 505 ;
C 44 ; WX 278 ; N comma ; B 87 -147 191 106 ;
C 45 ; WX 333 ; N hyphen ; B 44 232 289 322 ;
C 173 ; WX 333 ; N hyphen ; B 44 232 289 322 ;
C 46 ; WX 278 ; N period ; B 87 0 191 106 ;
C 47 ; WX 278 ; N slash ; B -17 -19 295 737 ;
C 48 ; WX 556 ; N zero ; B 37 -19 519 703 ;
C 49 ; WX 556 ; N one ; B 101 0 359 703 ;
C 50 ; WX 556 ; N two ; B 26 0 507 703 ;
C 51 ; WX 556 ; N three ; B 34 -19 522 703 ;
C 52 ; WX 556 ; N four ; B 25 0 523 703 ;
C 53 ; WX 556 ; N five ; B 32 -19 514 688 ;
C 54 ; WX 556 ; N six ; B 38 -19 518 703 ;
C 55 ; WX 556 ; N seven ; B 37 0 523 688 ;
C 56 ; WX 556 ; N eight ; B 38 -19 517 703 ;
C 57 ; WX 556 ; N nine ; B 42 -19 514 703 ;
C 58 ; WX 278 ; N colon ; B 87 0 191 516 ;
C 59 ; WX 278 ; N semicolon ; B 87 -147 191 516 ;
C 60 ; WX 584 ; N less ; B 48 11 536 495 ;
C 61 ; WX 584 ; N equal ; B 39 115 545 390 ;
C 62 ; WX 584 ; N greater ; B 48 11 536 495 ;
C 63 ; WX 556 ; N question ; B 56 0 492 727 ;
C 64 ; WX 1015 ; N at ; B 147 -19 868 737 ;
C 65 ; WX 667 ; N A ; B 14 0 654 718 ;
C 66 ; WX 667 ; N B ; B 74 0 627 718 ;
C 67 ; WX 722 ; N C ; B 44 -19 681 737 ;
C 68 ; WX 722 ; N D ; B 81 0 674 718 ;
C 69 ; WX 667 ; N E ; B 86 0 616 718 ;
C 70 ; WX 611 ; N F ; B 86 0 583 718 ;
C 71 ; WX 778 ; N G ; B 48 -19 704 737 ;
C 72 ; WX 722 ; N H ; B 77 0 646 718 ;
C 73 ; WX 278 ; N I ; B 91 0 188 718 ;
C 74 ; WX 500 ; N J ; B 17 -19 428 718 ;
C 75 ; WX 667 ; N K ; B 76 0 663 718 ;
C 76 ; WX 556 ; N L ; B 76 0 537 718 ;
C 77 ; WX 833 ; N M ; B 73 0 761 718 ;
C 78 ; WX 722 ; N N ; B 76 0 646 718 ;
C 79 ; WX 778 ; N O ; B 39 -19 739 737 ;
C 80 ; WX 667 ; N P ; B 86 0 622 718 ;
C 81 ; WX 778 ; N Q ; B 39 -56 739 737 ;
C 82 ; WX 722 ; N R ; B 88 0 684 718 ;
C 83 ; WX 667 ; N S ; B 49 -19 620 737 ;
C 84 ; WX 611 ; N T ; B 14 0 597 718 ;
C 85 ; WX 722 ; N U ; B 79 -19 644 718 ;
C 86 ; WX 667 ; N V ; B 20 0 647 718 ;
C 87 ; WX 944 ; N W ; B 16 0 928 718 ;
C 88 ; WX 667 ; N X ; B 19 0 648 718 ;
C 89 ; WX 667 ; N Y ; B 14 0 653 718 ;
C 90 ; WX 611 ; N Z ; B 23 0 588 718 ;
C 91 ; WX 278 ; N bracketleft ; B 63 -196 250 722 ;
C 92 ; WX 278 ; N backslash ; B -17 -19 295 737 ;
C 93 ; WX 278 ; N bracketright ; B 28 -196 215 722 ;
C 94 ; WX 469 ; N asciicircum ; B -14 264 483 688 ;
C 95 ; WX 556 ; N underscore ; B 0 -125 556 -75 ;
C 145 ; WX 222 ; N quoteleft ; B 65 470 169 725 ;
C 97 ; WX 556 ; N a ; B 36 -15 530 538 ;
C 98 ; WX 556 ; N b ; B 58 -15 517 718 ;
C 99 ; WX 500 ; N c ; B 30 -15 477 538 ;
C 100 ; WX 556 ; N d ; B 35 -15 499 718 ;
C 101 ; WX 556 ; N e ; B 40 -15 516 538 ;
C 102 ; WX 278 ; N f ; B 14 0 262 728 ; L i fi ; L l fl ;
C 103 ; WX 556 ; N g ; B 40 -220 499 538 ;
C 104 ; WX 556 ; N h ; B 65 0 491 718 ;
C 105 ; WX 222 ; N i ; B 67 0 155 718 ;
C 106 ; WX 222 ; N j ; B -16 -210 155 718 ;
C 107 ; WX 500 ; N k ; B 67 0 501 718 ;
C 108 ; WX 222 ; N l ; B 67 0 155 718 ;
C 109 ; WX 833 ; N m ; B 65 0 769 538 ;
C 110 ; WX 556 ; N n ; B 65 0 491 538 ;
C 111 ; WX 556 ; N o ; B 35 -14 521 538 ;
C 112 ; WX 556 ; N p ; B 58 -207 517 538 ;
C 113 ; WX 556 ; N q ; B 35 -207 494 538 ;
C 114 ; WX 333 ; N r ; B 77 0 332 538 ;
C 115 ; WX 500 ; N s ; B 32 -15 464 538 ;
C 116 ; WX 278 ; N t ; B 14 -7 257 669 ;
C 117 ; WX 556 ; N u ; B 68 -15 489 523 ;
C 118 ; WX 500 ; N v ; B 8 0 492 523 ;
C 119 ; WX 722 ; N w ; B 14 0 709 523 ;
C 120 ; WX 500 ; N x ; B 11 0 490 523 ;
C 121 ; WX 500 ; N y ; B 11 -214 489 523 ;
C 122 ; WX 500 ; N z ; B 31 0 469 523 ;
C 123 ; WX 334 ; N braceleft ; B 42 -196 292 722 ;
C 124 ; WX 260 ; N bar ; B 94 -225 167 775 ;
C 125 ; WX 334 ; N braceright ; B 42 -196 292 722 ;
C 126 ; WX 584 ; N asciitilde ; B 61 180 523 326 ;
C 161 ; WX 333 ; N exclamdown ; B 118 -195 215 523 ;
C 162 ; WX 556 ; N cent ; B 51 -115 513 623 ;
C 163 ; WX 556 ; N sterling ; B 33 -16 539 718 ;
C -1 ; WX 167 ; N fraction ; B -166 -19 333 703 ;
C 165 ; WX 556 ; N yen ; B 3 0 553 688 ;
C 131 ; WX 556 ; N florin ; B -11 -207 501 737 ;
C 167 ; WX 556 ; N section ; B 43 -191 512 737 ;
C 164 ; WX 556 ; N currency ; B 28 99 528 603 ;
C 39 ; WX 191 ; N quotesingle ; B 59 463 132 718 ;
C 147 ; WX 333 ; N quotedblleft ; B 38 470 307 725 ;
C 170 ; WX 556 ; N guillemotleft ; B 97 108 459 446 ;
C 139 ; WX 333 ; N guilsinglleft ; B 88 108 245 446 ;
C 155 ; WX 333 ; N guilsinglright ; B 88 108 245 446 ;
C -1 ; WX 500 ; N fi ; B 14 0 434 728 ;
C -1 ; WX 500 ; N fl ; B 14 0 432 728 ;
C 150 ; WX 556 ; N endash ; B 0 240 556 313 ;
C 134 ; WX 556 ; N dagger ; B 43 -159 514 718 ;
C 135 ; WX 556 ; N daggerdbl ; B 43 -159 514 718 ;
C 183 ; WX 278 ; N periodcentered ; B 77 190 202 315 ;
C 182 ; WX 537 ; N paragraph ; B 18 -173 497 718 ;
C 149 ; WX 350 ; N bullet ; B 18 202 333 517 ;
C 130 ; WX 222 ; N quotesinglbase ; B 53 -149 157 106 ;
C 132 ; WX 333 ; N quotedblbase ; B 26 -149 295 106 ;
C 148 ; WX 333 ; N quotedblright ; B 26 463 295 718 ;
C 187 ; WX 556 ; N guillemotright ; B 97 108 459 446 ;
C 133 ; WX 1000 ; N ellipsis ; B 115 0 885 106 ;
C 137 ; WX 1000 ; N perthousand ; B 7 -19 994 703 ;
C 191 ; WX 611 ; N questiondown ; B 91 -201 527 525 ;
C 96 ; WX 333 ; N grave ; B 14 593 211 734 ;
C 180 ; WX 333 ; N acute ; B 122 593 319 734 ;
C 136 ; WX 333 ; N circumflex ; B 21 593 312 734 ;
C 152 ; WX 333 ; N tilde ; B -4 606 337 722 ;
C 175 ; WX 333 ; N macron ; B 10 627 323 684 ;
C -1 ; WX 333 ; N breve ; B 13 595 321 731 ;
C -1 ; WX 333 ; N dotaccent ; B 121 604 212 706 ;
C 168 ; WX 333 ; N dieresis ; B 40 604 293 706 ;
C -1 ; WX 333 ; N ring ; B 75 572 259 756 ;
C 184 ; WX 333 ; N cedilla ; B 45 -225 259 0 ;
C -1 ; WX 333 ; N hungarumlaut ; B 31 593 409 734 ;
C -1 ; WX 333 ; N ogonek ; B 73 -225 287 0 ;
C -1 ; WX 333 ; N caron ; B 21 593 312 734 ;
C 151 ; WX 1000 ; N emdash ; B 0 240 1000 313 ;
C 198 ; WX 1000 ; N AE ; B 8 0 951 718 ;
C 170 ; WX 370 ; N ordfeminine ; B 24 405 346 737 ;
C -1 ; WX 556 ; N Lslash ; B -20 0 537 718 ;
C 216 ; WX 778 ; N Oslash ; B 39 -19 740 737 ;
C 140 ; WX 1000 ; N OE ; B 36 -19 965 737 ;
C 186 ; WX 365 ; N ordmasculine ; B 25 405 341 737 ;
C 230 ; WX 889 ; N ae ; B 36 -15 847 538 ;
C -1 ; WX 278 ; N dotlessi ; B 95 0 183 523 ;
C -1 ; WX 222 ; N lslash ; B -20 0 242 718 ;
C 248 ; WX 611 ; N oslash ; B 28 -22 537 545 ;
C 156 ; WX 944 ; N oe ; B 35 -15 902 538 ;
C 223 ; WX 611 ; N germandbls ; B 67 -15 571 728 ;
C 207 ; WX 278 ; N Idieresis ; B 13 0 266 901 ;
C 233 ; WX 556 ; N eacute ; B 40 -15 516 734 ;
C -1 ; WX 556 ; N abreve ; B 36 -15 530 731 ;
C -1 ; WX 556 ; N uhungarumlaut ; B 68 -15 521 734 ;
C -1 ; WX 556 ; N ecaron ; B 40 -15 516 734 ;
C 159 ; WX 667 ; N Ydieresis ; B 14 0 653 901 ;
C 247 ; WX 584 ; N divide ; B 39 -19 545 524 ;
C 221 ; WX 667 ; N Yacute ; B 14 0 653 929 ;
C 194 ; WX 667 ; N Acircumflex ; B 14 0 654 929 ;
C 225 ; WX 556 ; N aacute ; B 36 -15 530 734 ;
C 219 ; WX 722 ; N Ucircumflex ; B 79 -19 644 929 ;
C 253 ; WX 500 ; N yacute ; B 11 -214 489 734 ;
C -1 ; WX 500 ; N scommaaccent ; B 32 -225 464 538 ;
C 234 ; WX 556 ; N ecircumflex ; B 40 -15 516 734 ;
C -1 ; WX 722 ; N Uring ; B 79 -19 644 931 ;
C 220 ; WX 722 ; N Udieresis ; B 79 -19 644 901 ;
C -1 ; WX 556 ; N aogonek ; B 36 -220 547 538 ;
C 218 ; WX 722 ; N Uacute ; B 79 -19 644 929 ;
C -1 ; WX 556 ; N uogonek ; B 68 -225 519 523 ;
C 203 ; WX 667 ; N Edieresis ; B 86 0 616 901 ;
C -1 ; WX 722 ; N Dcroat ; B 0 0 674 718 ;
C -1 ; WX 250 ; N commaaccent ; B 87 -225 181 -40 ;
C 169 ; WX 737 ; N copyright ; B -14 -19 752 737 ;
C -1 ; WX 667 ; N Emacron ; B 86 0 616 879 ;
C -1 ; WX 500 ; N ccaron ; B 30 -15 477 734 ;
C 229 ; WX 556 ; N aring ; B 36 -15 530 756 ;
C -1 ; WX 722 ; N Ncommaaccent ; B 76 -225 646 718 ;
C -1 ; WX 222 ; N lacute ; B 67 0 264 929 ;
C 224 ; WX 556 ; N agrave ; B 36 -15 530 734 ;
C -1 ; WX 611 ; N Tcommaaccent ; B 14 -225 597 718 ;
C -1 ; WX 722 ; N Cacute ; B 44 -19 681 929 ;
C 227 ; WX 556 ; N atilde ; B 36 -15 530 722 ;
C -1 ; WX 667 ; N Edotaccent ; B 86 0 616 901 ;
C 154 ; WX 500 ; N scaron ; B 32 -15 464 734 ;
C -1 ; WX 500 ; N scedilla ; B 32 -225 464 538 ;
C 237 ; WX 278 ; N iacute ; B 95 0 292 734 ;
C -1 ; WX 471 ; N lozenge ; B 10 0 462 728 ;
C -1 ; WX 722 ; N Rcaron ; B 88 0 684 929 ;
C -1 ; WX 778 ; N Gcommaaccent ; B 48 -225 704 737 ;
C 251 ; WX 556 ; N ucircumflex ; B 68 -15 489 734 ;
C 226 ; WX 556 ; N acircumflex ; B 36 -15 530 734 ;
C -1 ; WX 667 ; N Amacron ; B 14 0 654 879 ;
C -1 ; WX 333 ; N rcaron ; B 61 0 352 734 ;
C 231 ; WX 500 ; N ccedilla ; B 30 -225 477 538 ;
C -1 ; WX 611 ; N Zdotaccent ; B 23 0 588 901 ;
C 222 ; WX 667 ; N Thorn ; B 86 0 622 718 ;
C -1 ; WX 778 ; N Omacron ; B 39 -19 739 879 ;
C -1 ; WX 722 ; N Racute ; B 88 0 684 929 ;
C -1 ; WX 667 ; N Sacute ; B 49 -19 620 929 ;
C -1 ; WX 643 ; N dcaron ; B 35 -15 655 718 ;
C -1 ; WX 722 ; N Umacron ; B 79 -19 644 879 ;
C -1 ; WX 556 ; N uring ; B 68 -15 489 756 ;
C 179 ; WX 333 ; N threesuperior ; B 5 270 325 703 ;
C 210 ; WX 778 ; N Ograve ; B 39 -19 739 929 ;
C 192 ; WX 667 ; N Agrave ; B 14 0 654 929 ;
C -1 ; WX 667 ; N Abreve ; B 14 0 654 926 ;
C 215 ; WX 584 ; N multiply ; B 39 0 545 506 ;
C 250 ; WX 556 ; N uacute ; B 68 -15 489 734 ;
C -1 ; WX 611 ; N Tcaron ; B 14 0 597 929 ;
C -1 ; WX 476 ; N partialdiff ; B 13 -38 463 714 ;
C 255 ; WX 500 ; N ydieresis ; B 11 -214 489 706 ;
C -1 ; WX 722 ; N Nacute ; B 76 0 646 929 ;
C 238 ; WX 278 ; N icircumflex ; B -6 0 285 734 ;
C 202 ; WX 667 ; N Ecircumflex ; B 86 0 616 929 ;
C 228 ; WX 556 ; N adieresis ; B 36 -15 530 706 ;
C 235 ; WX 556 ; N edieresis ; B 40 -15 516 706 ;
C -1 ; WX 500 ; N cacute ; B 30 -15 477 734 ;
C -1 ; WX 556 ; N nacute ; B 65 0 491 734 ;
C -1 ; WX 556 ; N umacron ; B 68 -15 489 684 ;
C -1 ; WX 722 ; N Ncaron ; B 76 0 646 929 ;
C 205 ; WX 278 ; N Iacute ; B 91 0 292 929 ;
C 177 ; WX 584 ; N plusminus ; B 39 0 545 506 ;
C 166 ; WX 260 ; N brokenbar ; B 94 -150 167 700 ;
C 174 ; WX 737 ; N registered ; B -14 -19 752 737 ;
C -1 ; WX 778 ; N Gbreve ; B 48 -19 704 926 ;
C -1 ; WX 278 ; N Idotaccent ; B 91 0 188 901 ;
C -1 ; WX 600 ; N summation ; B 15 -10 586 706 ;
C 200 ; WX 667 ; N Egrave ; B 86 0 616 929 ;
C -1 ; WX 333 ; N racute ; B 77 0 332 734 ;
C -1 ; WX 556 ; N omacron ; B 35 -14 521 684 ;
C -1 ; WX 611 ; N Zacute ; B 23 0 588 929 ;
C 142 ; WX 611 ; N Zcaron ; B 23 0 588 929 ;
C -1 ; WX 549 ; N greaterequal ; B 26 0 523 674 ;
C 208 ; WX 722 ; N Eth ; B 0 0 674 718 ;
C 199 ; WX 722 ; N Ccedilla ; B 44 -225 681 737 ;
C -1 ; WX 222 ; N lcommaaccent ; B 67 -225 167 718 ;
C -1 ; WX 317 ; N tcaron ; B 14 -7 329 808 ;
C -1 ; WX 556 ; N eogonek ; B 40 -225 516 538 ;
C -1 ; WX 722 ; N Uogonek ; B 79 -225 644 718 ;
C 193 ; WX 667 ; N Aacute ; B 14 0 654 929 ;
C 196 ; WX 667 ; N Adieresis ; B 14 0 654 901 ;
C 232 ; WX 556 ; N egrave ; B 40 -15 516 734 ;
C -1 ; WX 500 ; N zacute ; B 31 0 469 734 ;
C -1 ; WX 222 ; N iogonek ; B -31 -225 183 718 ;
C 211 ; WX 778 ; N Oacute ; B 39 -19 739 929 ;
C 243 ; WX 556 ; N oacute ; B 35 -14 521 734 ;
C -1 ; WX 556 ; N amacron ; B 36 -15 530 684 ;
C -1 ; WX 500 ; N sacute ; B 32 -15 464 734 ;
C 239 ; WX 278 ; N idieresis ; B 13 0 266 706 ;
C 212 ; WX 778 ; N Ocircumflex ; B 39 -19 739 929 ;
C 217 ; WX 722 ; N Ugrave ; B 79 -19 644 929 ;
C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;
C 254 ; WX 556 ; N thorn ; B 58 -207 517 718 ;
C 178 ; WX 333 ; N twosuperior ; B 4 281 323 703 ;
C 214 ; WX 778 ; N Odieresis ; B 39 -19 739 901 ;
C 181 ; WX 556 ; N mu ; B 68 -207 489 523 ;
C 236 ; WX 278 ; N igrave ; B -13 0 184 734 ;
C -1 ; WX 556 ; N ohungarumlaut ; B 35 -14 521 734 ;
C -1 ; WX 667 ; N Eogonek ; B 86 -220 633 718 ;
C -1 ; WX 556 ; N dcroat ; B 35 -15 550 718 ;
C 190 ; WX 834 ; N threequarters ; B 45 -19 810 703 ;
C -1 ; WX 667 ; N Scedilla ; B 49 -225 620 737 ;
C -1 ; WX 299 ; N lcaron ; B 67 0 311 718 ;
C -1 ; WX 667 ; N Kcommaaccent ; B 76 -225 663 718 ;
C -1 ; WX 556 ; N Lacute ; B 76 0 537 929 ;
C 153 ; WX 1000 ; N trademark ; B 46 306 903 718 ;
C -1 ; WX 556 ; N edotaccent ; B 40 -15 516 706 ;
C 204 ; WX 278 ; N Igrave ; B -13 0 188 929 ;
C -1 ; WX 278 ; N Imacron ; B -17 0 296 879 ;
C -1 ; WX 556 ; N Lcaron ; B 76 0 537 718 ;
C 189 ; WX 834 ; N onehalf ; B 43 -19 773 703 ;
C -1 ; WX 549 ; N lessequal ; B 26 0 523 674 ;
C 244 ; WX 556 ; N ocircumflex ; B 35 -14 521 734 ;
C 241 ; WX 556 ; N ntilde ; B 65 0 491 722 ;
C -1 ; WX 722 ; N Uhungarumlaut ; B 79 -19 644 929 ;
C 201 ; WX 667 ; N Eacute ; B 86 0 616 929 ;
C -1 ; WX 556 ; N emacron ; B 40 -15 516 684 ;
C -1 ; WX 556 ; N gbreve ; B 40 -220 499 731 ;
C 188 ; WX 834 ; N onequarter ; B 73 -19 756 703 ;
C 138 ; WX 667 ; N Scaron ; B 49 -19 620 929 ;
C -1 ; WX 667 ; N Scommaaccent ; B 49 -225 620 737 ;
C -1 ; WX 778 ; N Ohungarumlaut ; B 39 -19 739 929 ;
C 176 ; WX 400 ; N degree ; B 54 411 346 703 ;
C 242 ; WX 556 ; N ograve ; B 35 -14 521 734 ;
C -1 ; WX 722 ; N Ccaron ; B 44 -19 681 929 ;
C 249 ; WX 556 ; N ugrave ; B 68 -15 489 734 ;
C -1 ; WX 453 ; N radical ; B -4 -80 458 762 ;
C -1 ; WX 722 ; N Dcaron ; B 81 0 674 929 ;
C -1 ; WX 333 ; N rcommaaccent ; B 77 -225 332 538 ;
C 209 ; WX 722 ; N Ntilde ; B 76 0 646 917 ;
C 245 ; WX 556 ; N otilde ; B 35 -14 521 722 ;
C -1 ; WX 722 ; N Rcommaaccent ; B 88 -225 684 718 ;
C -1 ; WX 556 ; N Lcommaaccent ; B 76 -225 537 718 ;
C 195 ; WX 667 ; N Atilde ; B 14 0 654 917 ;
C -1 ; WX 667 ; N Aogonek ; B 14 -225 654 718 ;
C 197 ; WX 667 ; N Aring ; B 14 0 654 931 ;
C 213 ; WX 778 ; N Otilde ; B 39 -19 739 917 ;
C -1 ; WX 500 ; N zdotaccent ; B 31 0 469 706 ;
C -1 ; WX 667 ; N Ecaron ; B 86 0 616 929 ;
C -1 ; WX 278 ; N Iogonek ; B -3 -225 211 718 ;
C -1 ; WX 500 ; N kcommaaccent ; B 67 -225 501 718 ;
C -1 ; WX 584 ; N minus ; B 39 216 545 289 ;
C 206 ; WX 278 ; N Icircumflex ; B -6 0 285 929 ;
C -1 ; WX 556 ; N ncaron ; B 65 0 491 734 ;
C -1 ; WX 278 ; N tcommaaccent ; B 14 -225 257 669 ;
C 172 ; WX 584 ; N logicalnot ; B 39 108 545 390 ;
C 246 ; WX 556 ; N odieresis ; B 35 -14 521 706 ;
C 252 ; WX 556 ; N udieresis ; B 68 -15 489 706 ;
C -1 ; WX 549 ; N notequal ; B 12 -35 537 551 ;
C -1 ; WX 556 ; N gcommaaccent ; B 40 -220 499 822 ;
C 240 ; WX 556 ; N eth ; B 35 -15 522 737 ;
C 158 ; WX 500 ; N zcaron ; B 31 0 469 734 ;
C -1 ; WX 556 ; N ncommaaccent ; B 65 -225 491 538 ;
C 185 ; WX 333 ; N onesuperior ; B 43 281 222 703 ;
C -1 ; WX 278 ; N imacron ; B 5 0 272 684 ;
C 128 ; WX 556 ; N Euro ; B 0 0 0 0 ;
EndCharMetrics
StartKernData
StartKernPairs 2705
KPX A C -30
KPX A Cacute -30
KPX A Ccaron -30
KPX A Ccedilla -30
KPX A G -30
KPX A Gbreve -30
KPX A Gcommaaccent -30
KPX A O -30
KPX A Oacute -30
KPX A Ocircumflex -30
KPX A Odieresis -30
KPX A Ograve -30
KPX A Ohungarumlaut -30
KPX A Omacron -30
KPX A Oslash -30
KPX A Otilde -30
KPX A Q -30
KPX A T -120
KPX A Tcaron -120
KPX A Tcommaaccent -120
KPX A U -50
KPX A Uacute -50
KPX A Ucircumflex -50
KPX A Udieresis -50
KPX A Ugrave -50
KPX A Uhungarumlaut -50
KPX A Umacron -50
KPX A Uogonek -50
KPX A Uring -50
KPX A V -70
KPX A W -50
KPX A Y -100
KPX A Yacute -100
KPX A Ydieresis -100
KPX A u -30
KPX A uacute -30
KPX A ucircumflex -30
KPX A udieresis -30
KPX A ugrave -30
KPX A uhungarumlaut -30
KPX A umacron -30
KPX A uogonek -30
KPX A uring -30
KPX A v -40
KPX A w -40
KPX A y -40
KPX A yacute -40
KPX A ydieresis -40
KPX Aacute C -30
KPX Aacute Cacute -30
KPX Aacute Ccaron -30
KPX Aacute Ccedilla -30
KPX Aacute G -30
KPX Aacute Gbreve -30
KPX Aacute Gcommaaccent -30
KPX Aacute O -30
KPX Aacute Oacute -30
KPX Aacute Ocircumflex -30
KPX Aacute Odieresis -30
KPX Aacute Ograve -30
KPX Aacute Ohungarumlaut -30
KPX Aacute Omacron -30
KPX Aacute Oslash -30
KPX Aacute Otilde -30
KPX Aacute Q -30
KPX Aacute T -120
KPX Aacute Tcaron -120
KPX Aacute Tcommaaccent -120
KPX Aacute U -50
KPX Aacute Uacute -50
KPX Aacute Ucircumflex -50
KPX Aacute Udieresis -50
KPX Aacute Ugrave -50
KPX Aacute Uhungarumlaut -50
KPX Aacute Umacron -50
KPX Aacute Uogonek -50
KPX Aacute Uring -50
KPX Aacute V -70
KPX Aacute W -50
KPX Aacute Y -100
KPX Aacute Yacute -100
KPX Aacute Ydieresis -100
KPX Aacute u -30
KPX Aacute uacute -30
KPX Aacute ucircumflex -30
KPX Aacute udieresis -30
KPX Aacute ugrave -30
KPX Aacute uhungarumlaut -30
KPX Aacute umacron -30
KPX Aacute uogonek -30
KPX Aacute uring -30
KPX Aacute v -40
KPX Aacute w -40
KPX Aacute y -40
KPX Aacute yacute -40
KPX Aacute ydieresis -40
KPX Abreve C -30
KPX Abreve Cacute -30
KPX Abreve Ccaron -30
KPX Abreve Ccedilla -30
KPX Abreve G -30
KPX Abreve Gbreve -30
KPX Abreve Gcommaaccent -30
KPX Abreve O -30
KPX Abreve Oacute -30
KPX Abreve Ocircumflex -30
KPX Abreve Odieresis -30
KPX Abreve Ograve -30
KPX Abreve Ohungarumlaut -30
KPX Abreve Omacron -30
KPX Abreve Oslash -30
KPX Abreve Otilde -30
KPX Abreve Q -30
KPX Abreve T -120
KPX Abreve Tcaron -120
KPX Abreve Tcommaaccent -120
KPX Abreve U -50
KPX Abreve Uacute -50
KPX Abreve Ucircumflex -50
KPX Abreve Udieresis -50
KPX Abreve Ugrave -50
KPX Abreve Uhungarumlaut -50
KPX Abreve Umacron -50
KPX Abreve Uogonek -50
KPX Abreve Uring -50
KPX Abreve V -70
KPX Abreve W -50
KPX Abreve Y -100
KPX Abreve Yacute -100
KPX Abreve Ydieresis -100
KPX Abreve u -30
KPX Abreve uacute -30
KPX Abreve ucircumflex -30
KPX Abreve udieresis -30
KPX Abreve ugrave -30
KPX Abreve uhungarumlaut -30
KPX Abreve umacron -30
KPX Abreve uogonek -30
KPX Abreve uring -30
KPX Abreve v -40
KPX Abreve w -40
KPX Abreve y -40
KPX Abreve yacute -40
KPX Abreve ydieresis -40
KPX Acircumflex C -30
KPX Acircumflex Cacute -30
KPX Acircumflex Ccaron -30
KPX Acircumflex Ccedilla -30
KPX Acircumflex G -30
KPX Acircumflex Gbreve -30
KPX Acircumflex Gcommaaccent -30
KPX Acircumflex O -30
KPX Acircumflex Oacute -30
KPX Acircumflex Ocircumflex -30
KPX Acircumflex Odieresis -30
KPX Acircumflex Ograve -30
KPX Acircumflex Ohungarumlaut -30
KPX Acircumflex Omacron -30
KPX Acircumflex Oslash -30
KPX Acircumflex Otilde -30
KPX Acircumflex Q -30
KPX Acircumflex T -120
KPX Acircumflex Tcaron -120
KPX Acircumflex Tcommaaccent -120
KPX Acircumflex U -50
KPX Acircumflex Uacute -50
KPX Acircumflex Ucircumflex -50
KPX Acircumflex Udieresis -50
KPX Acircumflex Ugrave -50
KPX Acircumflex Uhungarumlaut -50
KPX Acircumflex Umacron -50
KPX Acircumflex Uogonek -50
KPX Acircumflex Uring -50
KPX Acircumflex V -70
KPX Acircumflex W -50
KPX Acircumflex Y -100
KPX Acircumflex Yacute -100
KPX Acircumflex Ydieresis -100
KPX Acircumflex u -30
KPX Acircumflex uacute -30
KPX Acircumflex ucircumflex -30
KPX Acircumflex udieresis -30
KPX Acircumflex ugrave -30
KPX Acircumflex uhungarumlaut -30
KPX Acircumflex umacron -30
KPX Acircumflex uogonek -30
KPX Acircumflex uring -30
KPX Acircumflex v -40
KPX Acircumflex w -40
KPX Acircumflex y -40
KPX Acircumflex yacute -40
KPX Acircumflex ydieresis -40
KPX Adieresis C -30
KPX Adieresis Cacute -30
KPX Adieresis Ccaron -30
KPX Adieresis Ccedilla -30
KPX Adieresis G -30
KPX Adieresis Gbreve -30
KPX Adieresis Gcommaaccent -30
KPX Adieresis O -30
KPX Adieresis Oacute -30
KPX Adieresis Ocircumflex -30
KPX Adieresis Odieresis -30
KPX Adieresis Ograve -30
KPX Adieresis Ohungarumlaut -30
KPX Adieresis Omacron -30
KPX Adieresis Oslash -30
KPX Adieresis Otilde -30
KPX Adieresis Q -30
KPX Adieresis T -120
KPX Adieresis Tcaron -120
KPX Adieresis Tcommaaccent -120
KPX Adieresis U -50
KPX Adieresis Uacute -50
KPX Adieresis Ucircumflex -50
KPX Adieresis Udieresis -50
KPX Adieresis Ugrave -50
KPX Adieresis Uhungarumlaut -50
KPX Adieresis Umacron -50
KPX Adieresis Uogonek -50
KPX Adieresis Uring -50
KPX Adieresis V -70
KPX Adieresis W -50
KPX Adieresis Y -100
KPX Adieresis Yacute -100
KPX Adieresis Ydieresis -100
KPX Adieresis u -30
KPX Adieresis uacute -30
KPX Adieresis ucircumflex -30
KPX Adieresis udieresis -30
KPX Adieresis ugrave -30
KPX Adieresis uhungarumlaut -30
KPX Adieresis umacron -30
KPX Adieresis uogonek -30
KPX Adieresis uring -30
KPX Adieresis v -40
KPX Adieresis w -40
KPX Adieresis y -40
KPX Adieresis yacute -40
KPX Adieresis ydieresis -40
KPX Agrave C -30
KPX Agrave Cacute -30
KPX Agrave Ccaron -30
KPX Agrave Ccedilla -30
KPX Agrave G -30
KPX Agrave Gbreve -30
KPX Agrave Gcommaaccent -30
KPX Agrave O -30
KPX Agrave Oacute -30
KPX Agrave Ocircumflex -30
KPX Agrave Odieresis -30
KPX Agrave Ograve -30
KPX Agrave Ohungarumlaut -30
KPX Agrave Omacron -30
KPX Agrave Oslash -30
KPX Agrave Otilde -30
KPX Agrave Q -30
KPX Agrave T -120
KPX Agrave Tcaron -120
KPX Agrave Tcommaaccent -120
KPX Agrave U -50
KPX Agrave Uacute -50
KPX Agrave Ucircumflex -50
KPX Agrave Udieresis -50
KPX Agrave Ugrave -50
KPX Agrave Uhungarumlaut -50
KPX Agrave Umacron -50
KPX Agrave Uogonek -50
KPX Agrave Uring -50
KPX Agrave V -70
KPX Agrave W -50
KPX Agrave Y -100
KPX Agrave Yacute -100
KPX Agrave Ydieresis -100
KPX Agrave u -30
KPX Agrave uacute -30
KPX Agrave ucircumflex -30
KPX Agrave udieresis -30
KPX Agrave ugrave -30
KPX Agrave uhungarumlaut -30
KPX Agrave umacron -30
KPX Agrave uogonek -30
KPX Agrave uring -30
KPX Agrave v -40
KPX Agrave w -40
KPX Agrave y -40
KPX Agrave yacute -40
KPX Agrave ydieresis -40
KPX Amacron C -30
KPX Amacron Cacute -30
KPX Amacron Ccaron -30
KPX Amacron Ccedilla -30
KPX Amacron G -30
KPX Amacron Gbreve -30
KPX Amacron Gcommaaccent -30
KPX Amacron O -30
KPX Amacron Oacute -30
KPX Amacron Ocircumflex -30
KPX Amacron Odieresis -30
KPX Amacron Ograve -30
KPX Amacron Ohungarumlaut -30
KPX Amacron Omacron -30
KPX Amacron Oslash -30
KPX Amacron Otilde -30
KPX Amacron Q -30
KPX Amacron T -120
KPX Amacron Tcaron -120
KPX Amacron Tcommaaccent -120
KPX Amacron U -50
KPX Amacron Uacute -50
KPX Amacron Ucircumflex -50
KPX Amacron Udieresis -50
KPX Amacron Ugrave -50
KPX Amacron Uhungarumlaut -50
KPX Amacron Umacron -50
KPX Amacron Uogonek -50
KPX Amacron Uring -50
KPX Amacron V -70
KPX Amacron W -50
KPX Amacron Y -100
KPX Amacron Yacute -100
KPX Amacron Ydieresis -100
KPX Amacron u -30
KPX Amacron uacute -30
KPX Amacron ucircumflex -30
KPX Amacron udieresis -30
KPX Amacron ugrave -30
KPX Amacron uhungarumlaut -30
KPX Amacron umacron -30
KPX Amacron uogonek -30
KPX Amacron uring -30
KPX Amacron v -40
KPX Amacron w -40
KPX Amacron y -40
KPX Amacron yacute -40
KPX Amacron ydieresis -40
KPX Aogonek C -30
KPX Aogonek Cacute -30
KPX Aogonek Ccaron -30
KPX Aogonek Ccedilla -30
KPX Aogonek G -30
KPX Aogonek Gbreve -30
KPX Aogonek Gcommaaccent -30
KPX Aogonek O -30
KPX Aogonek Oacute -30
KPX Aogonek Ocircumflex -30
KPX Aogonek Odieresis -30
KPX Aogonek Ograve -30
KPX Aogonek Ohungarumlaut -30
KPX Aogonek Omacron -30
KPX Aogonek Oslash -30
KPX Aogonek Otilde -30
KPX Aogonek Q -30
KPX Aogonek T -120
KPX Aogonek Tcaron -120
KPX Aogonek Tcommaaccent -120
KPX Aogonek U -50
KPX Aogonek Uacute -50
KPX Aogonek Ucircumflex -50
KPX Aogonek Udieresis -50
KPX Aogonek Ugrave -50
KPX Aogonek Uhungarumlaut -50
KPX Aogonek Umacron -50
KPX Aogonek Uogonek -50
KPX Aogonek Uring -50
KPX Aogonek V -70
KPX Aogonek W -50
KPX Aogonek Y -100
KPX Aogonek Yacute -100
KPX Aogonek Ydieresis -100
KPX Aogonek u -30
KPX Aogonek uacute -30
KPX Aogonek ucircumflex -30
KPX Aogonek udieresis -30
KPX Aogonek ugrave -30
KPX Aogonek uhungarumlaut -30
KPX Aogonek umacron -30
KPX Aogonek uogonek -30
KPX Aogonek uring -30
KPX Aogonek v -40
KPX Aogonek w -40
KPX Aogonek y -40
KPX Aogonek yacute -40
KPX Aogonek ydieresis -40
KPX Aring C -30
KPX Aring Cacute -30
KPX Aring Ccaron -30
KPX Aring Ccedilla -30
KPX Aring G -30
KPX Aring Gbreve -30
KPX Aring Gcommaaccent -30
KPX Aring O -30
KPX Aring Oacute -30
KPX Aring Ocircumflex -30
KPX Aring Odieresis -30
KPX Aring Ograve -30
KPX Aring Ohungarumlaut -30
KPX Aring Omacron -30
KPX Aring Oslash -30
KPX Aring Otilde -30
KPX Aring Q -30
KPX Aring T -120
KPX Aring Tcaron -120
KPX Aring Tcommaaccent -120
KPX Aring U -50
KPX Aring Uacute -50
KPX Aring Ucircumflex -50
KPX Aring Udieresis -50
KPX Aring Ugrave -50
KPX Aring Uhungarumlaut -50
KPX Aring Umacron -50
KPX Aring Uogonek -50
KPX Aring Uring -50
KPX Aring V -70
KPX Aring W -50
KPX Aring Y -100
KPX Aring Yacute -100
KPX Aring Ydieresis -100
KPX Aring u -30
KPX Aring uacute -30
KPX Aring ucircumflex -30
KPX Aring udieresis -30
KPX Aring ugrave -30
KPX Aring uhungarumlaut -30
KPX Aring umacron -30
KPX Aring uogonek -30
KPX Aring uring -30
KPX Aring v -40
KPX Aring w -40
KPX Aring y -40
KPX Aring yacute -40
KPX Aring ydieresis -40
KPX Atilde C -30
KPX Atilde Cacute -30
KPX Atilde Ccaron -30
KPX Atilde Ccedilla -30
KPX Atilde G -30
KPX Atilde Gbreve -30
KPX Atilde Gcommaaccent -30
KPX Atilde O -30
KPX Atilde Oacute -30
KPX Atilde Ocircumflex -30
KPX Atilde Odieresis -30
KPX Atilde Ograve -30
KPX Atilde Ohungarumlaut -30
KPX Atilde Omacron -30
KPX Atilde Oslash -30
KPX Atilde Otilde -30
KPX Atilde Q -30
KPX Atilde T -120
KPX Atilde Tcaron -120
KPX Atilde Tcommaaccent -120
KPX Atilde U -50
KPX Atilde Uacute -50
KPX Atilde Ucircumflex -50
KPX Atilde Udieresis -50
KPX Atilde Ugrave -50
KPX Atilde Uhungarumlaut -50
KPX Atilde Umacron -50
KPX Atilde Uogonek -50
KPX Atilde Uring -50
KPX Atilde V -70
KPX Atilde W -50
KPX Atilde Y -100
KPX Atilde Yacute -100
KPX Atilde Ydieresis -100
KPX Atilde u -30
KPX Atilde uacute -30
KPX Atilde ucircumflex -30
KPX Atilde udieresis -30
KPX Atilde ugrave -30
KPX Atilde uhungarumlaut -30
KPX Atilde umacron -30
KPX Atilde uogonek -30
KPX Atilde uring -30
KPX Atilde v -40
KPX Atilde w -40
KPX Atilde y -40
KPX Atilde yacute -40
KPX Atilde ydieresis -40
KPX B U -10
KPX B Uacute -10
KPX B Ucircumflex -10
KPX B Udieresis -10
KPX B Ugrave -10
KPX B Uhungarumlaut -10
KPX B Umacron -10
KPX B Uogonek -10
KPX B Uring -10
KPX B comma -20
KPX B period -20
KPX C comma -30
KPX C period -30
KPX Cacute comma -30
KPX Cacute period -30
KPX Ccaron comma -30
KPX Ccaron period -30
KPX Ccedilla comma -30
KPX Ccedilla period -30
KPX D A -40
KPX D Aacute -40
KPX D Abreve -40
KPX D Acircumflex -40
KPX D Adieresis -40
KPX D Agrave -40
KPX D Amacron -40
KPX D Aogonek -40
KPX D Aring -40
KPX D Atilde -40
KPX D V -70
KPX D W -40
KPX D Y -90
KPX D Yacute -90
KPX D Ydieresis -90
KPX D comma -70
KPX D period -70
KPX Dcaron A -40
KPX Dcaron Aacute -40
KPX Dcaron Abreve -40
KPX Dcaron Acircumflex -40
KPX Dcaron Adieresis -40
KPX Dcaron Agrave -40
KPX Dcaron Amacron -40
KPX Dcaron Aogonek -40
KPX Dcaron Aring -40
KPX Dcaron Atilde -40
KPX Dcaron V -70
KPX Dcaron W -40
KPX Dcaron Y -90
KPX Dcaron Yacute -90
KPX Dcaron Ydieresis -90
KPX Dcaron comma -70
KPX Dcaron period -70
KPX Dcroat A -40
KPX Dcroat Aacute -40
KPX Dcroat Abreve -40
KPX Dcroat Acircumflex -40
KPX Dcroat Adieresis -40
KPX Dcroat Agrave -40
KPX Dcroat Amacron -40
KPX Dcroat Aogonek -40
KPX Dcroat Aring -40
KPX Dcroat Atilde -40
KPX Dcroat V -70
KPX Dcroat W -40
KPX Dcroat Y -90
KPX Dcroat Yacute -90
KPX Dcroat Ydieresis -90
KPX Dcroat comma -70
KPX Dcroat period -70
KPX F A -80
KPX F Aacute -80
KPX F Abreve -80
KPX F Acircumflex -80
KPX F Adieresis -80
KPX F Agrave -80
KPX F Amacron -80
KPX F Aogonek -80
KPX F Aring -80
KPX F Atilde -80
KPX F a -50
KPX F aacute -50
KPX F abreve -50
KPX F acircumflex -50
KPX F adieresis -50
KPX F agrave -50
KPX F amacron -50
KPX F aogonek -50
KPX F aring -50
KPX F atilde -50
KPX F comma -150
KPX F e -30
KPX F eacute -30
KPX F ecaron -30
KPX F ecircumflex -30
KPX F edieresis -30
KPX F edotaccent -30
KPX F egrave -30
KPX F emacron -30
KPX F eogonek -30
KPX F o -30
KPX F oacute -30
KPX F ocircumflex -30
KPX F odieresis -30
KPX F ograve -30
KPX F ohungarumlaut -30
KPX F omacron -30
KPX F oslash -30
KPX F otilde -30
KPX F period -150
KPX F r -45
KPX F racute -45
KPX F rcaron -45
KPX F rcommaaccent -45
KPX J A -20
KPX J Aacute -20
KPX J Abreve -20
KPX J Acircumflex -20
KPX J Adieresis -20
KPX J Agrave -20
KPX J Amacron -20
KPX J Aogonek -20
KPX J Aring -20
KPX J Atilde -20
KPX J a -20
KPX J aacute -20
KPX J abreve -20
KPX J acircumflex -20
KPX J adieresis -20
KPX J agrave -20
KPX J amacron -20
KPX J aogonek -20
KPX J aring -20
KPX J atilde -20
KPX J comma -30
KPX J period -30
KPX J u -20
KPX J uacute -20
KPX J ucircumflex -20
KPX J udieresis -20
KPX J ugrave -20
KPX J uhungarumlaut -20
KPX J umacron -20
KPX J uogonek -20
KPX J uring -20
KPX K O -50
KPX K Oacute -50
KPX K Ocircumflex -50
KPX K Odieresis -50
KPX K Ograve -50
KPX K Ohungarumlaut -50
KPX K Omacron -50
KPX K Oslash -50
KPX K Otilde -50
KPX K e -40
KPX K eacute -40
KPX K ecaron -40
KPX K ecircumflex -40
KPX K edieresis -40
KPX K edotaccent -40
KPX K egrave -40
KPX K emacron -40
KPX K eogonek -40
KPX K o -40
KPX K oacute -40
KPX K ocircumflex -40
KPX K odieresis -40
KPX K ograve -40
KPX K ohungarumlaut -40
KPX K omacron -40
KPX K oslash -40
KPX K otilde -40
KPX K u -30
KPX K uacute -30
KPX K ucircumflex -30
KPX K udieresis -30
KPX K ugrave -30
KPX K uhungarumlaut -30
KPX K umacron -30
KPX K uogonek -30
KPX K uring -30
KPX K y -50
KPX K yacute -50
KPX K ydieresis -50
KPX Kcommaaccent O -50
KPX Kcommaaccent Oacute -50
KPX Kcommaaccent Ocircumflex -50
KPX Kcommaaccent Odieresis -50
KPX Kcommaaccent Ograve -50
KPX Kcommaaccent Ohungarumlaut -50
KPX Kcommaaccent Omacron -50
KPX Kcommaaccent Oslash -50
KPX Kcommaaccent Otilde -50
KPX Kcommaaccent e -40
KPX Kcommaaccent eacute -40
KPX Kcommaaccent ecaron -40
KPX Kcommaaccent ecircumflex -40
KPX Kcommaaccent edieresis -40
KPX Kcommaaccent edotaccent -40
KPX Kcommaaccent egrave -40
KPX Kcommaaccent emacron -40
KPX Kcommaaccent eogonek -40
KPX Kcommaaccent o -40
KPX Kcommaaccent oacute -40
KPX Kcommaaccent ocircumflex -40
KPX Kcommaaccent odieresis -40
KPX Kcommaaccent ograve -40
KPX Kcommaaccent ohungarumlaut -40
KPX Kcommaaccent omacron -40
KPX Kcommaaccent oslash -40
KPX Kcommaaccent otilde -40
KPX Kcommaaccent u -30
KPX Kcommaaccent uacute -30
KPX Kcommaaccent ucircumflex -30
KPX Kcommaaccent udieresis -30
KPX Kcommaaccent ugrave -30
KPX Kcommaaccent uhungarumlaut -30
KPX Kcommaaccent umacron -30
KPX Kcommaaccent uogonek -30
KPX Kcommaaccent uring -30
KPX Kcommaaccent y -50
KPX Kcommaaccent yacute -50
KPX Kcommaaccent ydieresis -50
KPX L T -110
KPX L Tcaron -110
KPX L Tcommaaccent -110
KPX L V -110
KPX L W -70
KPX L Y -140
KPX L Yacute -140
KPX L Ydieresis -140
KPX L quotedblright -140
KPX L quoteright -160
KPX L y -30
KPX L yacute -30
KPX L ydieresis -30
KPX Lacute T -110
KPX Lacute Tcaron -110
KPX Lacute Tcommaaccent -110
KPX Lacute V -110
KPX Lacute W -70
KPX Lacute Y -140
KPX Lacute Yacute -140
KPX Lacute Ydieresis -140
KPX Lacute quotedblright -140
KPX Lacute quoteright -160
KPX Lacute y -30
KPX Lacute yacute -30
KPX Lacute ydieresis -30
KPX Lcaron T -110
KPX Lcaron Tcaron -110
KPX Lcaron Tcommaaccent -110
KPX Lcaron V -110
KPX Lcaron W -70
KPX Lcaron Y -140
KPX Lcaron Yacute -140
KPX Lcaron Ydieresis -140
KPX Lcaron quotedblright -140
KPX Lcaron quoteright -160
KPX Lcaron y -30
KPX Lcaron yacute -30
KPX Lcaron ydieresis -30
KPX Lcommaaccent T -110
KPX Lcommaaccent Tcaron -110
KPX Lcommaaccent Tcommaaccent -110
KPX Lcommaaccent V -110
KPX Lcommaaccent W -70
KPX Lcommaaccent Y -140
KPX Lcommaaccent Yacute -140
KPX Lcommaaccent Ydieresis -140
KPX Lcommaaccent quotedblright -140
KPX Lcommaaccent quoteright -160
KPX Lcommaaccent y -30
KPX Lcommaaccent yacute -30
KPX Lcommaaccent ydieresis -30
KPX Lslash T -110
KPX Lslash Tcaron -110
KPX Lslash Tcommaaccent -110
KPX Lslash V -110
KPX Lslash W -70
KPX Lslash Y -140
KPX Lslash Yacute -140
KPX Lslash Ydieresis -140
KPX Lslash quotedblright -140
KPX Lslash quoteright -160
KPX Lslash y -30
KPX Lslash yacute -30
KPX Lslash ydieresis -30
KPX O A -20
KPX O Aacute -20
KPX O Abreve -20
KPX O Acircumflex -20
KPX O Adieresis -20
KPX O Agrave -20
KPX O Amacron -20
KPX O Aogonek -20
KPX O Aring -20
KPX O Atilde -20
KPX O T -40
KPX O Tcaron -40
KPX O Tcommaaccent -40
KPX O V -50
KPX O W -30
KPX O X -60
KPX O Y -70
KPX O Yacute -70
KPX O Ydieresis -70
KPX O comma -40
KPX O period -40
KPX Oacute A -20
KPX Oacute Aacute -20
KPX Oacute Abreve -20
KPX Oacute Acircumflex -20
KPX Oacute Adieresis -20
KPX Oacute Agrave -20
KPX Oacute Amacron -20
KPX Oacute Aogonek -20
KPX Oacute Aring -20
KPX Oacute Atilde -20
KPX Oacute T -40
KPX Oacute Tcaron -40
KPX Oacute Tcommaaccent -40
KPX Oacute V -50
KPX Oacute W -30
KPX Oacute X -60
KPX Oacute Y -70
KPX Oacute Yacute -70
KPX Oacute Ydieresis -70
KPX Oacute comma -40
KPX Oacute period -40
KPX Ocircumflex A -20
KPX Ocircumflex Aacute -20
KPX Ocircumflex Abreve -20
KPX Ocircumflex Acircumflex -20
KPX Ocircumflex Adieresis -20
KPX Ocircumflex Agrave -20
KPX Ocircumflex Amacron -20
KPX Ocircumflex Aogonek -20
KPX Ocircumflex Aring -20
KPX Ocircumflex Atilde -20
KPX Ocircumflex T -40
KPX Ocircumflex Tcaron -40
KPX Ocircumflex Tcommaaccent -40
KPX Ocircumflex V -50
KPX Ocircumflex W -30
KPX Ocircumflex X -60
KPX Ocircumflex Y -70
KPX Ocircumflex Yacute -70
KPX Ocircumflex Ydieresis -70
KPX Ocircumflex comma -40
KPX Ocircumflex period -40
KPX Odieresis A -20
KPX Odieresis Aacute -20
KPX Odieresis Abreve -20
KPX Odieresis Acircumflex -20
KPX Odieresis Adieresis -20
KPX Odieresis Agrave -20
KPX Odieresis Amacron -20
KPX Odieresis Aogonek -20
KPX Odieresis Aring -20
KPX Odieresis Atilde -20
KPX Odieresis T -40
KPX Odieresis Tcaron -40
KPX Odieresis Tcommaaccent -40
KPX Odieresis V -50
KPX Odieresis W -30
KPX Odieresis X -60
KPX Odieresis Y -70
KPX Odieresis Yacute -70
KPX Odieresis Ydieresis -70
KPX Odieresis comma -40
KPX Odieresis period -40
KPX Ograve A -20
KPX Ograve Aacute -20
KPX Ograve Abreve -20
KPX Ograve Acircumflex -20
KPX Ograve Adieresis -20
KPX Ograve Agrave -20
KPX Ograve Amacron -20
KPX Ograve Aogonek -20
KPX Ograve Aring -20
KPX Ograve Atilde -20
KPX Ograve T -40
KPX Ograve Tcaron -40
KPX Ograve Tcommaaccent -40
KPX Ograve V -50
KPX Ograve W -30
KPX Ograve X -60
KPX Ograve Y -70
KPX Ograve Yacute -70
KPX Ograve Ydieresis -70
KPX Ograve comma -40
KPX Ograve period -40
KPX Ohungarumlaut A -20
KPX Ohungarumlaut Aacute -20
KPX Ohungarumlaut Abreve -20
KPX Ohungarumlaut Acircumflex -20
KPX Ohungarumlaut Adieresis -20
KPX Ohungarumlaut Agrave -20
KPX Ohungarumlaut Amacron -20
KPX Ohungarumlaut Aogonek -20
KPX Ohungarumlaut Aring -20
KPX Ohungarumlaut Atilde -20
KPX Ohungarumlaut T -40
KPX Ohungarumlaut Tcaron -40
KPX Ohungarumlaut Tcommaaccent -40
KPX Ohungarumlaut V -50
KPX Ohungarumlaut W -30
KPX Ohungarumlaut X -60
KPX Ohungarumlaut Y -70
KPX Ohungarumlaut Yacute -70
KPX Ohungarumlaut Ydieresis -70
KPX Ohungarumlaut comma -40
KPX Ohungarumlaut period -40
KPX Omacron A -20
KPX Omacron Aacute -20
KPX Omacron Abreve -20
KPX Omacron Acircumflex -20
KPX Omacron Adieresis -20
KPX Omacron Agrave -20
KPX Omacron Amacron -20
KPX Omacron Aogonek -20
KPX Omacron Aring -20
KPX Omacron Atilde -20
KPX Omacron T -40
KPX Omacron Tcaron -40
KPX Omacron Tcommaaccent -40
KPX Omacron V -50
KPX Omacron W -30
KPX Omacron X -60
KPX Omacron Y -70
KPX Omacron Yacute -70
KPX Omacron Ydieresis -70
KPX Omacron comma -40
KPX Omacron period -40
KPX Oslash A -20
KPX Oslash Aacute -20
KPX Oslash Abreve -20
KPX Oslash Acircumflex -20
KPX Oslash Adieresis -20
KPX Oslash Agrave -20
KPX Oslash Amacron -20
KPX Oslash Aogonek -20
KPX Oslash Aring -20
KPX Oslash Atilde -20
KPX Oslash T -40
KPX Oslash Tcaron -40
KPX Oslash Tcommaaccent -40
KPX Oslash V -50
KPX Oslash W -30
KPX Oslash X -60
KPX Oslash Y -70
KPX Oslash Yacute -70
KPX Oslash Ydieresis -70
KPX Oslash comma -40
KPX Oslash period -40
KPX Otilde A -20
KPX Otilde Aacute -20
KPX Otilde Abreve -20
KPX Otilde Acircumflex -20
KPX Otilde Adieresis -20
KPX Otilde Agrave -20
KPX Otilde Amacron -20
KPX Otilde Aogonek -20
KPX Otilde Aring -20
KPX Otilde Atilde -20
KPX Otilde T -40
KPX Otilde Tcaron -40
KPX Otilde Tcommaaccent -40
KPX Otilde V -50
KPX Otilde W -30
KPX Otilde X -60
KPX Otilde Y -70
KPX Otilde Yacute -70
KPX Otilde Ydieresis -70
KPX Otilde comma -40
KPX Otilde period -40
KPX P A -120
KPX P Aacute -120
KPX P Abreve -120
KPX P Acircumflex -120
KPX P Adieresis -120
KPX P Agrave -120
KPX P Amacron -120
KPX P Aogonek -120
KPX P Aring -120
KPX P Atilde -120
KPX P a -40
KPX P aacute -40
KPX P abreve -40
KPX P acircumflex -40
KPX P adieresis -40
KPX P agrave -40
KPX P amacron -40
KPX P aogonek -40
KPX P aring -40
KPX P atilde -40
KPX P comma -180
KPX P e -50
KPX P eacute -50
KPX P ecaron -50
KPX P ecircumflex -50
KPX P edieresis -50
KPX P edotaccent -50
KPX P egrave -50
KPX P emacron -50
KPX P eogonek -50
KPX P o -50
KPX P oacute -50
KPX P ocircumflex -50
KPX P odieresis -50
KPX P ograve -50
KPX P ohungarumlaut -50
KPX P omacron -50
KPX P oslash -50
KPX P otilde -50
KPX P period -180
KPX Q U -10
KPX Q Uacute -10
KPX Q Ucircumflex -10
KPX Q Udieresis -10
KPX Q Ugrave -10
KPX Q Uhungarumlaut -10
KPX Q Umacron -10
KPX Q Uogonek -10
KPX Q Uring -10
KPX R O -20
KPX R Oacute -20
KPX R Ocircumflex -20
KPX R Odieresis -20
KPX R Ograve -20
KPX R Ohungarumlaut -20
KPX R Omacron -20
KPX R Oslash -20
KPX R Otilde -20
KPX R T -30
KPX R Tcaron -30
KPX R Tcommaaccent -30
KPX R U -40
KPX R Uacute -40
KPX R Ucircumflex -40
KPX R Udieresis -40
KPX R Ugrave -40
KPX R Uhungarumlaut -40
KPX R Umacron -40
KPX R Uogonek -40
KPX R Uring -40
KPX R V -50
KPX R W -30
KPX R Y -50
KPX R Yacute -50
KPX R Ydieresis -50
KPX Racute O -20
KPX Racute Oacute -20
KPX Racute Ocircumflex -20
KPX Racute Odieresis -20
KPX Racute Ograve -20
KPX Racute Ohungarumlaut -20
KPX Racute Omacron -20
KPX Racute Oslash -20
KPX Racute Otilde -20
KPX Racute T -30
KPX Racute Tcaron -30
KPX Racute Tcommaaccent -30
KPX Racute U -40
KPX Racute Uacute -40
KPX Racute Ucircumflex -40
KPX Racute Udieresis -40
KPX Racute Ugrave -40
KPX Racute Uhungarumlaut -40
KPX Racute Umacron -40
KPX Racute Uogonek -40
KPX Racute Uring -40
KPX Racute V -50
KPX Racute W -30
KPX Racute Y -50
KPX Racute Yacute -50
KPX Racute Ydieresis -50
KPX Rcaron O -20
KPX Rcaron Oacute -20
KPX Rcaron Ocircumflex -20
KPX Rcaron Odieresis -20
KPX Rcaron Ograve -20
KPX Rcaron Ohungarumlaut -20
KPX Rcaron Omacron -20
KPX Rcaron Oslash -20
KPX Rcaron Otilde -20
KPX Rcaron T -30
KPX Rcaron Tcaron -30
KPX Rcaron Tcommaaccent -30
KPX Rcaron U -40
KPX Rcaron Uacute -40
KPX Rcaron Ucircumflex -40
KPX Rcaron Udieresis -40
KPX Rcaron Ugrave -40
KPX Rcaron Uhungarumlaut -40
KPX Rcaron Umacron -40
KPX Rcaron Uogonek -40
KPX Rcaron Uring -40
KPX Rcaron V -50
KPX Rcaron W -30
KPX Rcaron Y -50
KPX Rcaron Yacute -50
KPX Rcaron Ydieresis -50
KPX Rcommaaccent O -20
KPX Rcommaaccent Oacute -20
KPX Rcommaaccent Ocircumflex -20
KPX Rcommaaccent Odieresis -20
KPX Rcommaaccent Ograve -20
KPX Rcommaaccent Ohungarumlaut -20
KPX Rcommaaccent Omacron -20
KPX Rcommaaccent Oslash -20
KPX Rcommaaccent Otilde -20
KPX Rcommaaccent T -30
KPX Rcommaaccent Tcaron -30
KPX Rcommaaccent Tcommaaccent -30
KPX Rcommaaccent U -40
KPX Rcommaaccent Uacute -40
KPX Rcommaaccent Ucircumflex -40
KPX Rcommaaccent Udieresis -40
KPX Rcommaaccent Ugrave -40
KPX Rcommaaccent Uhungarumlaut -40
KPX Rcommaaccent Umacron -40
KPX Rcommaaccent Uogonek -40
KPX Rcommaaccent Uring -40
KPX Rcommaaccent V -50
KPX Rcommaaccent W -30
KPX Rcommaaccent Y -50
KPX Rcommaaccent Yacute -50
KPX Rcommaaccent Ydieresis -50
KPX S comma -20
KPX S period -20
KPX Sacute comma -20
KPX Sacute period -20
KPX Scaron comma -20
KPX Scaron period -20
KPX Scedilla comma -20
KPX Scedilla period -20
KPX Scommaaccent comma -20
KPX Scommaaccent period -20
KPX T A -120
KPX T Aacute -120
KPX T Abreve -120
KPX T Acircumflex -120
KPX T Adieresis -120
KPX T Agrave -120
KPX T Amacron -120
KPX T Aogonek -120
KPX T Aring -120
KPX T Atilde -120
KPX T O -40
KPX T Oacute -40
KPX T Ocircumflex -40
KPX T Odieresis -40
KPX T Ograve -40
KPX T Ohungarumlaut -40
KPX T Omacron -40
KPX T Oslash -40
KPX T Otilde -40
KPX T a -120
KPX T aacute -120
KPX T abreve -60
KPX T acircumflex -120
KPX T adieresis -120
KPX T agrave -120
KPX T amacron -60
KPX T aogonek -120
KPX T aring -120
KPX T atilde -60
KPX T colon -20
KPX T comma -120
KPX T e -120
KPX T eacute -120
KPX T ecaron -120
KPX T ecircumflex -120
KPX T edieresis -120
KPX T edotaccent -120
KPX T egrave -60
KPX T emacron -60
KPX T eogonek -120
KPX T hyphen -140
KPX T o -120
KPX T oacute -120
KPX T ocircumflex -120
KPX T odieresis -120
KPX T ograve -120
KPX T ohungarumlaut -120
KPX T omacron -60
KPX T oslash -120
KPX T otilde -60
KPX T period -120
KPX T r -120
KPX T racute -120
KPX T rcaron -120
KPX T rcommaaccent -120
KPX T semicolon -20
KPX T u -120
KPX T uacute -120
KPX T ucircumflex -120
KPX T udieresis -120
KPX T ugrave -120
KPX T uhungarumlaut -120
KPX T umacron -60
KPX T uogonek -120
KPX T uring -120
KPX T w -120
KPX T y -120
KPX T yacute -120
KPX T ydieresis -60
KPX Tcaron A -120
KPX Tcaron Aacute -120
KPX Tcaron Abreve -120
KPX Tcaron Acircumflex -120
KPX Tcaron Adieresis -120
KPX Tcaron Agrave -120
KPX Tcaron Amacron -120
KPX Tcaron Aogonek -120
KPX Tcaron Aring -120
KPX Tcaron Atilde -120
KPX Tcaron O -40
KPX Tcaron Oacute -40
KPX Tcaron Ocircumflex -40
KPX Tcaron Odieresis -40
KPX Tcaron Ograve -40
KPX Tcaron Ohungarumlaut -40
KPX Tcaron Omacron -40
KPX Tcaron Oslash -40
KPX Tcaron Otilde -40
KPX Tcaron a -120
KPX Tcaron aacute -120
KPX Tcaron abreve -60
KPX Tcaron acircumflex -120
KPX Tcaron adieresis -120
KPX Tcaron agrave -120
KPX Tcaron amacron -60
KPX Tcaron aogonek -120
KPX Tcaron aring -120
KPX Tcaron atilde -60
KPX Tcaron colon -20
KPX Tcaron comma -120
KPX Tcaron e -120
KPX Tcaron eacute -120
KPX Tcaron ecaron -120
KPX Tcaron ecircumflex -120
KPX Tcaron edieresis -120
KPX Tcaron edotaccent -120
KPX Tcaron egrave -60
KPX Tcaron emacron -60
KPX Tcaron eogonek -120
KPX Tcaron hyphen -140
KPX Tcaron o -120
KPX Tcaron oacute -120
KPX Tcaron ocircumflex -120
KPX Tcaron odieresis -120
KPX Tcaron ograve -120
KPX Tcaron ohungarumlaut -120
KPX Tcaron omacron -60
KPX Tcaron oslash -120
KPX Tcaron otilde -60
KPX Tcaron period -120
KPX Tcaron r -120
KPX Tcaron racute -120
KPX Tcaron rcaron -120
KPX Tcaron rcommaaccent -120
KPX Tcaron semicolon -20
KPX Tcaron u -120
KPX Tcaron uacute -120
KPX Tcaron ucircumflex -120
KPX Tcaron udieresis -120
KPX Tcaron ugrave -120
KPX Tcaron uhungarumlaut -120
KPX Tcaron umacron -60
KPX Tcaron uogonek -120
KPX Tcaron uring -120
KPX Tcaron w -120
KPX Tcaron y -120
KPX Tcaron yacute -120
KPX Tcaron ydieresis -60
KPX Tcommaaccent A -120
KPX Tcommaaccent Aacute -120
KPX Tcommaaccent Abreve -120
KPX Tcommaaccent Acircumflex -120
KPX Tcommaaccent Adieresis -120
KPX Tcommaaccent Agrave -120
KPX Tcommaaccent Amacron -120
KPX Tcommaaccent Aogonek -120
KPX Tcommaaccent Aring -120
KPX Tcommaaccent Atilde -120
KPX Tcommaaccent O -40
KPX Tcommaaccent Oacute -40
KPX Tcommaaccent Ocircumflex -40
KPX Tcommaaccent Odieresis -40
KPX Tcommaaccent Ograve -40
KPX Tcommaaccent Ohungarumlaut -40
KPX Tcommaaccent Omacron -40
KPX Tcommaaccent Oslash -40
KPX Tcommaaccent Otilde -40
KPX Tcommaaccent a -120
KPX Tcommaaccent aacute -120
KPX Tcommaaccent abreve -60
KPX Tcommaaccent acircumflex -120
KPX Tcommaaccent adieresis -120
KPX Tcommaaccent agrave -120
KPX Tcommaaccent amacron -60
KPX Tcommaaccent aogonek -120
KPX Tcommaaccent aring -120
KPX Tcommaaccent atilde -60
KPX Tcommaaccent colon -20
KPX Tcommaaccent comma -120
KPX Tcommaaccent e -120
KPX Tcommaaccent eacute -120
KPX Tcommaaccent ecaron -120
KPX Tcommaaccent ecircumflex -120
KPX Tcommaaccent edieresis -120
KPX Tcommaaccent edotaccent -120
KPX Tcommaaccent egrave -60
KPX Tcommaaccent emacron -60
KPX Tcommaaccent eogonek -120
KPX Tcommaaccent hyphen -140
KPX Tcommaaccent o -120
KPX Tcommaaccent oacute -120
KPX Tcommaaccent ocircumflex -120
KPX Tcommaaccent odieresis -120
KPX Tcommaaccent ograve -120
KPX Tcommaaccent ohungarumlaut -120
KPX Tcommaaccent omacron -60
KPX Tcommaaccent oslash -120
KPX Tcommaaccent otilde -60
KPX Tcommaaccent period -120
KPX Tcommaaccent r -120
KPX Tcommaaccent racute -120
KPX Tcommaaccent rcaron -120
KPX Tcommaaccent rcommaaccent -120
KPX Tcommaaccent semicolon -20
KPX Tcommaaccent u -120
KPX Tcommaaccent uacute -120
KPX Tcommaaccent ucircumflex -120
KPX Tcommaaccent udieresis -120
KPX Tcommaaccent ugrave -120
KPX Tcommaaccent uhungarumlaut -120
KPX Tcommaaccent umacron -60
KPX Tcommaaccent uogonek -120
KPX Tcommaaccent uring -120
KPX Tcommaaccent w -120
KPX Tcommaaccent y -120
KPX Tcommaaccent yacute -120
KPX Tcommaaccent ydieresis -60
KPX U A -40
KPX U Aacute -40
KPX U Abreve -40
KPX U Acircumflex -40
KPX U Adieresis -40
KPX U Agrave -40
KPX U Amacron -40
KPX U Aogonek -40
KPX U Aring -40
KPX U Atilde -40
KPX U comma -40
KPX U period -40
KPX Uacute A -40
KPX Uacute Aacute -40
KPX Uacute Abreve -40
KPX Uacute Acircumflex -40
KPX Uacute Adieresis -40
KPX Uacute Agrave -40
KPX Uacute Amacron -40
KPX Uacute Aogonek -40
KPX Uacute Aring -40
KPX Uacute Atilde -40
KPX Uacute comma -40
KPX Uacute period -40
KPX Ucircumflex A -40
KPX Ucircumflex Aacute -40
KPX Ucircumflex Abreve -40
KPX Ucircumflex Acircumflex -40
KPX Ucircumflex Adieresis -40
KPX Ucircumflex Agrave -40
KPX Ucircumflex Amacron -40
KPX Ucircumflex Aogonek -40
KPX Ucircumflex Aring -40
KPX Ucircumflex Atilde -40
KPX Ucircumflex comma -40
KPX Ucircumflex period -40
KPX Udieresis A -40
KPX Udieresis Aacute -40
KPX Udieresis Abreve -40
KPX Udieresis Acircumflex -40
KPX Udieresis Adieresis -40
KPX Udieresis Agrave -40
KPX Udieresis Amacron -40
KPX Udieresis Aogonek -40
KPX Udieresis Aring -40
KPX Udieresis Atilde -40
KPX Udieresis comma -40
KPX Udieresis period -40
KPX Ugrave A -40
KPX Ugrave Aacute -40
KPX Ugrave Abreve -40
KPX Ugrave Acircumflex -40
KPX Ugrave Adieresis -40
KPX Ugrave Agrave -40
KPX Ugrave Amacron -40
KPX Ugrave Aogonek -40
KPX Ugrave Aring -40
KPX Ugrave Atilde -40
KPX Ugrave comma -40
KPX Ugrave period -40
KPX Uhungarumlaut A -40
KPX Uhungarumlaut Aacute -40
KPX Uhungarumlaut Abreve -40
KPX Uhungarumlaut Acircumflex -40
KPX Uhungarumlaut Adieresis -40
KPX Uhungarumlaut Agrave -40
KPX Uhungarumlaut Amacron -40
KPX Uhungarumlaut Aogonek -40
KPX Uhungarumlaut Aring -40
KPX Uhungarumlaut Atilde -40
KPX Uhungarumlaut comma -40
KPX Uhungarumlaut period -40
KPX Umacron A -40
KPX Umacron Aacute -40
KPX Umacron Abreve -40
KPX Umacron Acircumflex -40
KPX Umacron Adieresis -40
KPX Umacron Agrave -40
KPX Umacron Amacron -40
KPX Umacron Aogonek -40
KPX Umacron Aring -40
KPX Umacron Atilde -40
KPX Umacron comma -40
KPX Umacron period -40
KPX Uogonek A -40
KPX Uogonek Aacute -40
KPX Uogonek Abreve -40
KPX Uogonek Acircumflex -40
KPX Uogonek Adieresis -40
KPX Uogonek Agrave -40
KPX Uogonek Amacron -40
KPX Uogonek Aogonek -40
KPX Uogonek Aring -40
KPX Uogonek Atilde -40
KPX Uogonek comma -40
KPX Uogonek period -40
KPX Uring A -40
KPX Uring Aacute -40
KPX Uring Abreve -40
KPX Uring Acircumflex -40
KPX Uring Adieresis -40
KPX Uring Agrave -40
KPX Uring Amacron -40
KPX Uring Aogonek -40
KPX Uring Aring -40
KPX Uring Atilde -40
KPX Uring comma -40
KPX Uring period -40
KPX V A -80
KPX V Aacute -80
KPX V Abreve -80
KPX V Acircumflex -80
KPX V Adieresis -80
KPX V Agrave -80
KPX V Amacron -80
KPX V Aogonek -80
KPX V Aring -80
KPX V Atilde -80
KPX V G -40
KPX V Gbreve -40
KPX V Gcommaaccent -40
KPX V O -40
KPX V Oacute -40
KPX V Ocircumflex -40
KPX V Odieresis -40
KPX V Ograve -40
KPX V Ohungarumlaut -40
KPX V Omacron -40
KPX V Oslash -40
KPX V Otilde -40
KPX V a -70
KPX V aacute -70
KPX V abreve -70
KPX V acircumflex -70
KPX V adieresis -70
KPX V agrave -70
KPX V amacron -70
KPX V aogonek -70
KPX V aring -70
KPX V atilde -70
KPX V colon -40
KPX V comma -125
KPX V e -80
KPX V eacute -80
KPX V ecaron -80
KPX V ecircumflex -80
KPX V edieresis -80
KPX V edotaccent -80
KPX V egrave -80
KPX V emacron -80
KPX V eogonek -80
KPX V hyphen -80
KPX V o -80
KPX V oacute -80
KPX V ocircumflex -80
KPX V odieresis -80
KPX V ograve -80
KPX V ohungarumlaut -80
KPX V omacron -80
KPX V oslash -80
KPX V otilde -80
KPX V period -125
KPX V semicolon -40
KPX V u -70
KPX V uacute -70
KPX V ucircumflex -70
KPX V udieresis -70
KPX V ugrave -70
KPX V uhungarumlaut -70
KPX V umacron -70
KPX V uogonek -70
KPX V uring -70
KPX W A -50
KPX W Aacute -50
KPX W Abreve -50
KPX W Acircumflex -50
KPX W Adieresis -50
KPX W Agrave -50
KPX W Amacron -50
KPX W Aogonek -50
KPX W Aring -50
KPX W Atilde -50
KPX W O -20
KPX W Oacute -20
KPX W Ocircumflex -20
KPX W Odieresis -20
KPX W Ograve -20
KPX W Ohungarumlaut -20
KPX W Omacron -20
KPX W Oslash -20
KPX W Otilde -20
KPX W a -40
KPX W aacute -40
KPX W abreve -40
KPX W acircumflex -40
KPX W adieresis -40
KPX W agrave -40
KPX W amacron -40
KPX W aogonek -40
KPX W aring -40
KPX W atilde -40
KPX W comma -80
KPX W e -30
KPX W eacute -30
KPX W ecaron -30
KPX W ecircumflex -30
KPX W edieresis -30
KPX W edotaccent -30
KPX W egrave -30
KPX W emacron -30
KPX W eogonek -30
KPX W hyphen -40
KPX W o -30
KPX W oacute -30
KPX W ocircumflex -30
KPX W odieresis -30
KPX W ograve -30
KPX W ohungarumlaut -30
KPX W omacron -30
KPX W oslash -30
KPX W otilde -30
KPX W period -80
KPX W u -30
KPX W uacute -30
KPX W ucircumflex -30
KPX W udieresis -30
KPX W ugrave -30
KPX W uhungarumlaut -30
KPX W umacron -30
KPX W uogonek -30
KPX W uring -30
KPX W y -20
KPX W yacute -20
KPX W ydieresis -20
KPX Y A -110
KPX Y Aacute -110
KPX Y Abreve -110
KPX Y Acircumflex -110
KPX Y Adieresis -110
KPX Y Agrave -110
KPX Y Amacron -110
KPX Y Aogonek -110
KPX Y Aring -110
KPX Y Atilde -110
KPX Y O -85
KPX Y Oacute -85
KPX Y Ocircumflex -85
KPX Y Odieresis -85
KPX Y Ograve -85
KPX Y Ohungarumlaut -85
KPX Y Omacron -85
KPX Y Oslash -85
KPX Y Otilde -85
KPX Y a -140
KPX Y aacute -140
KPX Y abreve -70
KPX Y acircumflex -140
KPX Y adieresis -140
KPX Y agrave -140
KPX Y amacron -70
KPX Y aogonek -140
KPX Y aring -140
KPX Y atilde -140
KPX Y colon -60
KPX Y comma -140
KPX Y e -140
KPX Y eacute -140
KPX Y ecaron -140
KPX Y ecircumflex -140
KPX Y edieresis -140
KPX Y edotaccent -140
KPX Y egrave -140
KPX Y emacron -70
KPX Y eogonek -140
KPX Y hyphen -140
KPX Y i -20
KPX Y iacute -20
KPX Y iogonek -20
KPX Y o -140
KPX Y oacute -140
KPX Y ocircumflex -140
KPX Y odieresis -140
KPX Y ograve -140
KPX Y ohungarumlaut -140
KPX Y omacron -140
KPX Y oslash -140
KPX Y otilde -140
KPX Y period -140
KPX Y semicolon -60
KPX Y u -110
KPX Y uacute -110
KPX Y ucircumflex -110
KPX Y udieresis -110
KPX Y ugrave -110
KPX Y uhungarumlaut -110
KPX Y umacron -110
KPX Y uogonek -110
KPX Y uring -110
KPX Yacute A -110
KPX Yacute Aacute -110
KPX Yacute Abreve -110
KPX Yacute Acircumflex -110
KPX Yacute Adieresis -110
KPX Yacute Agrave -110
KPX Yacute Amacron -110
KPX Yacute Aogonek -110
KPX Yacute Aring -110
KPX Yacute Atilde -110
KPX Yacute O -85
KPX Yacute Oacute -85
KPX Yacute Ocircumflex -85
KPX Yacute Odieresis -85
KPX Yacute Ograve -85
KPX Yacute Ohungarumlaut -85
KPX Yacute Omacron -85
KPX Yacute Oslash -85
KPX Yacute Otilde -85
KPX Yacute a -140
KPX Yacute aacute -140
KPX Yacute abreve -70
KPX Yacute acircumflex -140
KPX Yacute adieresis -140
KPX Yacute agrave -140
KPX Yacute amacron -70
KPX Yacute aogonek -140
KPX Yacute aring -140
KPX Yacute atilde -70
KPX Yacute colon -60
KPX Yacute comma -140
KPX Yacute e -140
KPX Yacute eacute -140
KPX Yacute ecaron -140
KPX Yacute ecircumflex -140
KPX Yacute edieresis -140
KPX Yacute edotaccent -140
KPX Yacute egrave -140
KPX Yacute emacron -70
KPX Yacute eogonek -140
KPX Yacute hyphen -140
KPX Yacute i -20
KPX Yacute iacute -20
KPX Yacute iogonek -20
KPX Yacute o -140
KPX Yacute oacute -140
KPX Yacute ocircumflex -140
KPX Yacute odieresis -140
KPX Yacute ograve -140
KPX Yacute ohungarumlaut -140
KPX Yacute omacron -70
KPX Yacute oslash -140
KPX Yacute otilde -140
KPX Yacute period -140
KPX Yacute semicolon -60
KPX Yacute u -110
KPX Yacute uacute -110
KPX Yacute ucircumflex -110
KPX Yacute udieresis -110
KPX Yacute ugrave -110
KPX Yacute uhungarumlaut -110
KPX Yacute umacron -110
KPX Yacute uogonek -110
KPX Yacute uring -110
KPX Ydieresis A -110
KPX Ydieresis Aacute -110
KPX Ydieresis Abreve -110
KPX Ydieresis Acircumflex -110
KPX Ydieresis Adieresis -110
KPX Ydieresis Agrave -110
KPX Ydieresis Amacron -110
KPX Ydieresis Aogonek -110
KPX Ydieresis Aring -110
KPX Ydieresis Atilde -110
KPX Ydieresis O -85
KPX Ydieresis Oacute -85
KPX Ydieresis Ocircumflex -85
KPX Ydieresis Odieresis -85
KPX Ydieresis Ograve -85
KPX Ydieresis Ohungarumlaut -85
KPX Ydieresis Omacron -85
KPX Ydieresis Oslash -85
KPX Ydieresis Otilde -85
KPX Ydieresis a -140
KPX Ydieresis aacute -140
KPX Ydieresis abreve -70
KPX Ydieresis acircumflex -140
KPX Ydieresis adieresis -140
KPX Ydieresis agrave -140
KPX Ydieresis amacron -70
KPX Ydieresis aogonek -140
KPX Ydieresis aring -140
KPX Ydieresis atilde -70
KPX Ydieresis colon -60
KPX Ydieresis comma -140
KPX Ydieresis e -140
KPX Ydieresis eacute -140
KPX Ydieresis ecaron -140
KPX Ydieresis ecircumflex -140
KPX Ydieresis edieresis -140
KPX Ydieresis edotaccent -140
KPX Ydieresis egrave -140
KPX Ydieresis emacron -70
KPX Ydieresis eogonek -140
KPX Ydieresis hyphen -140
KPX Ydieresis i -20
KPX Ydieresis iacute -20
KPX Ydieresis iogonek -20
KPX Ydieresis o -140
KPX Ydieresis oacute -140
KPX Ydieresis ocircumflex -140
KPX Ydieresis odieresis -140
KPX Ydieresis ograve -140
KPX Ydieresis ohungarumlaut -140
KPX Ydieresis omacron -140
KPX Ydieresis oslash -140
KPX Ydieresis otilde -140
KPX Ydieresis period -140
KPX Ydieresis semicolon -60
KPX Ydieresis u -110
KPX Ydieresis uacute -110
KPX Ydieresis ucircumflex -110
KPX Ydieresis udieresis -110
KPX Ydieresis ugrave -110
KPX Ydieresis uhungarumlaut -110
KPX Ydieresis umacron -110
KPX Ydieresis uogonek -110
KPX Ydieresis uring -110
KPX a v -20
KPX a w -20
KPX a y -30
KPX a yacute -30
KPX a ydieresis -30
KPX aacute v -20
KPX aacute w -20
KPX aacute y -30
KPX aacute yacute -30
KPX aacute ydieresis -30
KPX abreve v -20
KPX abreve w -20
KPX abreve y -30
KPX abreve yacute -30
KPX abreve ydieresis -30
KPX acircumflex v -20
KPX acircumflex w -20
KPX acircumflex y -30
KPX acircumflex yacute -30
KPX acircumflex ydieresis -30
KPX adieresis v -20
KPX adieresis w -20
KPX adieresis y -30
KPX adieresis yacute -30
KPX adieresis ydieresis -30
KPX agrave v -20
KPX agrave w -20
KPX agrave y -30
KPX agrave yacute -30
KPX agrave ydieresis -30
KPX amacron v -20
KPX amacron w -20
KPX amacron y -30
KPX amacron yacute -30
KPX amacron ydieresis -30
KPX aogonek v -20
KPX aogonek w -20
KPX aogonek y -30
KPX aogonek yacute -30
KPX aogonek ydieresis -30
KPX aring v -20
KPX aring w -20
KPX aring y -30
KPX aring yacute -30
KPX aring ydieresis -30
KPX atilde v -20
KPX atilde w -20
KPX atilde y -30
KPX atilde yacute -30
KPX atilde ydieresis -30
KPX b b -10
KPX b comma -40
KPX b l -20
KPX b lacute -20
KPX b lcommaaccent -20
KPX b lslash -20
KPX b period -40
KPX b u -20
KPX b uacute -20
KPX b ucircumflex -20
KPX b udieresis -20
KPX b ugrave -20
KPX b uhungarumlaut -20
KPX b umacron -20
KPX b uogonek -20
KPX b uring -20
KPX b v -20
KPX b y -20
KPX b yacute -20
KPX b ydieresis -20
KPX c comma -15
KPX c k -20
KPX c kcommaaccent -20
KPX cacute comma -15
KPX cacute k -20
KPX cacute kcommaaccent -20
KPX ccaron comma -15
KPX ccaron k -20
KPX ccaron kcommaaccent -20
KPX ccedilla comma -15
KPX ccedilla k -20
KPX ccedilla kcommaaccent -20
KPX colon space -50
KPX comma quotedblright -100
KPX comma quoteright -100
KPX e comma -15
KPX e period -15
KPX e v -30
KPX e w -20
KPX e x -30
KPX e y -20
KPX e yacute -20
KPX e ydieresis -20
KPX eacute comma -15
KPX eacute period -15
KPX eacute v -30
KPX eacute w -20
KPX eacute x -30
KPX eacute y -20
KPX eacute yacute -20
KPX eacute ydieresis -20
KPX ecaron comma -15
KPX ecaron period -15
KPX ecaron v -30
KPX ecaron w -20
KPX ecaron x -30
KPX ecaron y -20
KPX ecaron yacute -20
KPX ecaron ydieresis -20
KPX ecircumflex comma -15
KPX ecircumflex period -15
KPX ecircumflex v -30
KPX ecircumflex w -20
KPX ecircumflex x -30
KPX ecircumflex y -20
KPX ecircumflex yacute -20
KPX ecircumflex ydieresis -20
KPX edieresis comma -15
KPX edieresis period -15
KPX edieresis v -30
KPX edieresis w -20
KPX edieresis x -30
KPX edieresis y -20
KPX edieresis yacute -20
KPX edieresis ydieresis -20
KPX edotaccent comma -15
KPX edotaccent period -15
KPX edotaccent v -30
KPX edotaccent w -20
KPX edotaccent x -30
KPX edotaccent y -20
KPX edotaccent yacute -20
KPX edotaccent ydieresis -20
KPX egrave comma -15
KPX egrave period -15
KPX egrave v -30
KPX egrave w -20
KPX egrave x -30
KPX egrave y -20
KPX egrave yacute -20
KPX egrave ydieresis -20
KPX emacron comma -15
KPX emacron period -15
KPX emacron v -30
KPX emacron w -20
KPX emacron x -30
KPX emacron y -20
KPX emacron yacute -20
KPX emacron ydieresis -20
KPX eogonek comma -15
KPX eogonek period -15
KPX eogonek v -30
KPX eogonek w -20
KPX eogonek x -30
KPX eogonek y -20
KPX eogonek yacute -20
KPX eogonek ydieresis -20
KPX f a -30
KPX f aacute -30
KPX f abreve -30
KPX f acircumflex -30
KPX f adieresis -30
KPX f agrave -30
KPX f amacron -30
KPX f aogonek -30
KPX f aring -30
KPX f atilde -30
KPX f comma -30
KPX f dotlessi -28
KPX f e -30
KPX f eacute -30
KPX f ecaron -30
KPX f ecircumflex -30
KPX f edieresis -30
KPX f edotaccent -30
KPX f egrave -30
KPX f emacron -30
KPX f eogonek -30
KPX f o -30
KPX f oacute -30
KPX f ocircumflex -30
KPX f odieresis -30
KPX f ograve -30
KPX f ohungarumlaut -30
KPX f omacron -30
KPX f oslash -30
KPX f otilde -30
KPX f period -30
KPX f quotedblright 60
KPX f quoteright 50
KPX g r -10
KPX g racute -10
KPX g rcaron -10
KPX g rcommaaccent -10
KPX gbreve r -10
KPX gbreve racute -10
KPX gbreve rcaron -10
KPX gbreve rcommaaccent -10
KPX gcommaaccent r -10
KPX gcommaaccent racute -10
KPX gcommaaccent rcaron -10
KPX gcommaaccent rcommaaccent -10
KPX h y -30
KPX h yacute -30
KPX h ydieresis -30
KPX k e -20
KPX k eacute -20
KPX k ecaron -20
KPX k ecircumflex -20
KPX k edieresis -20
KPX k edotaccent -20
KPX k egrave -20
KPX k emacron -20
KPX k eogonek -20
KPX k o -20
KPX k oacute -20
KPX k ocircumflex -20
KPX k odieresis -20
KPX k ograve -20
KPX k ohungarumlaut -20
KPX k omacron -20
KPX k oslash -20
KPX k otilde -20
KPX kcommaaccent e -20
KPX kcommaaccent eacute -20
KPX kcommaaccent ecaron -20
KPX kcommaaccent ecircumflex -20
KPX kcommaaccent edieresis -20
KPX kcommaaccent edotaccent -20
KPX kcommaaccent egrave -20
KPX kcommaaccent emacron -20
KPX kcommaaccent eogonek -20
KPX kcommaaccent o -20
KPX kcommaaccent oacute -20
KPX kcommaaccent ocircumflex -20
KPX kcommaaccent odieresis -20
KPX kcommaaccent ograve -20
KPX kcommaaccent ohungarumlaut -20
KPX kcommaaccent omacron -20
KPX kcommaaccent oslash -20
KPX kcommaaccent otilde -20
KPX m u -10
KPX m uacute -10
KPX m ucircumflex -10
KPX m udieresis -10
KPX m ugrave -10
KPX m uhungarumlaut -10
KPX m umacron -10
KPX m uogonek -10
KPX m uring -10
KPX m y -15
KPX m yacute -15
KPX m ydieresis -15
KPX n u -10
KPX n uacute -10
KPX n ucircumflex -10
KPX n udieresis -10
KPX n ugrave -10
KPX n uhungarumlaut -10
KPX n umacron -10
KPX n uogonek -10
KPX n uring -10
KPX n v -20
KPX n y -15
KPX n yacute -15
KPX n ydieresis -15
KPX nacute u -10
KPX nacute uacute -10
KPX nacute ucircumflex -10
KPX nacute udieresis -10
KPX nacute ugrave -10
KPX nacute uhungarumlaut -10
KPX nacute umacron -10
KPX nacute uogonek -10
KPX nacute uring -10
KPX nacute v -20
KPX nacute y -15
KPX nacute yacute -15
KPX nacute ydieresis -15
KPX ncaron u -10
KPX ncaron uacute -10
KPX ncaron ucircumflex -10
KPX ncaron udieresis -10
KPX ncaron ugrave -10
KPX ncaron uhungarumlaut -10
KPX ncaron umacron -10
KPX ncaron uogonek -10
KPX ncaron uring -10
KPX ncaron v -20
KPX ncaron y -15
KPX ncaron yacute -15
KPX ncaron ydieresis -15
KPX ncommaaccent u -10
KPX ncommaaccent uacute -10
KPX ncommaaccent ucircumflex -10
KPX ncommaaccent udieresis -10
KPX ncommaaccent ugrave -10
KPX ncommaaccent uhungarumlaut -10
KPX ncommaaccent umacron -10
KPX ncommaaccent uogonek -10
KPX ncommaaccent uring -10
KPX ncommaaccent v -20
KPX ncommaaccent y -15
KPX ncommaaccent yacute -15
KPX ncommaaccent ydieresis -15
KPX ntilde u -10
KPX ntilde uacute -10
KPX ntilde ucircumflex -10
KPX ntilde udieresis -10
KPX ntilde ugrave -10
KPX ntilde uhungarumlaut -10
KPX ntilde umacron -10
KPX ntilde uogonek -10
KPX ntilde uring -10
KPX ntilde v -20
KPX ntilde y -15
KPX ntilde yacute -15
KPX ntilde ydieresis -15
KPX o comma -40
KPX o period -40
KPX o v -15
KPX o w -15
KPX o x -30
KPX o y -30
KPX o yacute -30
KPX o ydieresis -30
KPX oacute comma -40
KPX oacute period -40
KPX oacute v -15
KPX oacute w -15
KPX oacute x -30
KPX oacute y -30
KPX oacute yacute -30
KPX oacute ydieresis -30
KPX ocircumflex comma -40
KPX ocircumflex period -40
KPX ocircumflex v -15
KPX ocircumflex w -15
KPX ocircumflex x -30
KPX ocircumflex y -30
KPX ocircumflex yacute -30
KPX ocircumflex ydieresis -30
KPX odieresis comma -40
KPX odieresis period -40
KPX odieresis v -15
KPX odieresis w -15
KPX odieresis x -30
KPX odieresis y -30
KPX odieresis yacute -30
KPX odieresis ydieresis -30
KPX ograve comma -40
KPX ograve period -40
KPX ograve v -15
KPX ograve w -15
KPX ograve x -30
KPX ograve y -30
KPX ograve yacute -30
KPX ograve ydieresis -30
KPX ohungarumlaut comma -40
KPX ohungarumlaut period -40
KPX ohungarumlaut v -15
KPX ohungarumlaut w -15
KPX ohungarumlaut x -30
KPX ohungarumlaut y -30
KPX ohungarumlaut yacute -30
KPX ohungarumlaut ydieresis -30
KPX omacron comma -40
KPX omacron period -40
KPX omacron v -15
KPX omacron w -15
KPX omacron x -30
KPX omacron y -30
KPX omacron yacute -30
KPX omacron ydieresis -30
KPX oslash a -55
KPX oslash aacute -55
KPX oslash abreve -55
KPX oslash acircumflex -55
KPX oslash adieresis -55
KPX oslash agrave -55
KPX oslash amacron -55
KPX oslash aogonek -55
KPX oslash aring -55
KPX oslash atilde -55
KPX oslash b -55
KPX oslash c -55
KPX oslash cacute -55
KPX oslash ccaron -55
KPX oslash ccedilla -55
KPX oslash comma -95
KPX oslash d -55
KPX oslash dcroat -55
KPX oslash e -55
KPX oslash eacute -55
KPX oslash ecaron -55
KPX oslash ecircumflex -55
KPX oslash edieresis -55
KPX oslash edotaccent -55
KPX oslash egrave -55
KPX oslash emacron -55
KPX oslash eogonek -55
KPX oslash f -55
KPX oslash g -55
KPX oslash gbreve -55
KPX oslash gcommaaccent -55
KPX oslash h -55
KPX oslash i -55
KPX oslash iacute -55
KPX oslash icircumflex -55
KPX oslash idieresis -55
KPX oslash igrave -55
KPX oslash imacron -55
KPX oslash iogonek -55
KPX oslash j -55
KPX oslash k -55
KPX oslash kcommaaccent -55
KPX oslash l -55
KPX oslash lacute -55
KPX oslash lcommaaccent -55
KPX oslash lslash -55
KPX oslash m -55
KPX oslash n -55
KPX oslash nacute -55
KPX oslash ncaron -55
KPX oslash ncommaaccent -55
KPX oslash ntilde -55
KPX oslash o -55
KPX oslash oacute -55
KPX oslash ocircumflex -55
KPX oslash odieresis -55
KPX oslash ograve -55
KPX oslash ohungarumlaut -55
KPX oslash omacron -55
KPX oslash oslash -55
KPX oslash otilde -55
KPX oslash p -55
KPX oslash period -95
KPX oslash q -55
KPX oslash r -55
KPX oslash racute -55
KPX oslash rcaron -55
KPX oslash rcommaaccent -55
KPX oslash s -55
KPX oslash sacute -55
KPX oslash scaron -55
KPX oslash scedilla -55
KPX oslash scommaaccent -55
KPX oslash t -55
KPX oslash tcommaaccent -55
KPX oslash u -55
KPX oslash uacute -55
KPX oslash ucircumflex -55
KPX oslash udieresis -55
KPX oslash ugrave -55
KPX oslash uhungarumlaut -55
KPX oslash umacron -55
KPX oslash uogonek -55
KPX oslash uring -55
KPX oslash v -70
KPX oslash w -70
KPX oslash x -85
KPX oslash y -70
KPX oslash yacute -70
KPX oslash ydieresis -70
KPX oslash z -55
KPX oslash zacute -55
KPX oslash zcaron -55
KPX oslash zdotaccent -55
KPX otilde comma -40
KPX otilde period -40
KPX otilde v -15
KPX otilde w -15
KPX otilde x -30
KPX otilde y -30
KPX otilde yacute -30
KPX otilde ydieresis -30
KPX p comma -35
KPX p period -35
KPX p y -30
KPX p yacute -30
KPX p ydieresis -30
KPX period quotedblright -100
KPX period quoteright -100
KPX period space -60
KPX quotedblright space -40
KPX quoteleft quoteleft -57
KPX quoteright d -50
KPX quoteright dcroat -50
KPX quoteright quoteright -57
KPX quoteright r -50
KPX quoteright racute -50
KPX quoteright rcaron -50
KPX quoteright rcommaaccent -50
KPX quoteright s -50
KPX quoteright sacute -50
KPX quoteright scaron -50
KPX quoteright scedilla -50
KPX quoteright scommaaccent -50
KPX quoteright space -70
KPX r a -10
KPX r aacute -10
KPX r abreve -10
KPX r acircumflex -10
KPX r adieresis -10
KPX r agrave -10
KPX r amacron -10
KPX r aogonek -10
KPX r aring -10
KPX r atilde -10
KPX r colon 30
KPX r comma -50
KPX r i 15
KPX r iacute 15
KPX r icircumflex 15
KPX r idieresis 15
KPX r igrave 15
KPX r imacron 15
KPX r iogonek 15
KPX r k 15
KPX r kcommaaccent 15
KPX r l 15
KPX r lacute 15
KPX r lcommaaccent 15
KPX r lslash 15
KPX r m 25
KPX r n 25
KPX r nacute 25
KPX r ncaron 25
KPX r ncommaaccent 25
KPX r ntilde 25
KPX r p 30
KPX r period -50
KPX r semicolon 30
KPX r t 40
KPX r tcommaaccent 40
KPX r u 15
KPX r uacute 15
KPX r ucircumflex 15
KPX r udieresis 15
KPX r ugrave 15
KPX r uhungarumlaut 15
KPX r umacron 15
KPX r uogonek 15
KPX r uring 15
KPX r v 30
KPX r y 30
KPX r yacute 30
KPX r ydieresis 30
KPX racute a -10
KPX racute aacute -10
KPX racute abreve -10
KPX racute acircumflex -10
KPX racute adieresis -10
KPX racute agrave -10
KPX racute amacron -10
KPX racute aogonek -10
KPX racute aring -10
KPX racute atilde -10
KPX racute colon 30
KPX racute comma -50
KPX racute i 15
KPX racute iacute 15
KPX racute icircumflex 15
KPX racute idieresis 15
KPX racute igrave 15
KPX racute imacron 15
KPX racute iogonek 15
KPX racute k 15
KPX racute kcommaaccent 15
KPX racute l 15
KPX racute lacute 15
KPX racute lcommaaccent 15
KPX racute lslash 15
KPX racute m 25
KPX racute n 25
KPX racute nacute 25
KPX racute ncaron 25
KPX racute ncommaaccent 25
KPX racute ntilde 25
KPX racute p 30
KPX racute period -50
KPX racute semicolon 30
KPX racute t 40
KPX racute tcommaaccent 40
KPX racute u 15
KPX racute uacute 15
KPX racute ucircumflex 15
KPX racute udieresis 15
KPX racute ugrave 15
KPX racute uhungarumlaut 15
KPX racute umacron 15
KPX racute uogonek 15
KPX racute uring 15
KPX racute v 30
KPX racute y 30
KPX racute yacute 30
KPX racute ydieresis 30
KPX rcaron a -10
KPX rcaron aacute -10
KPX rcaron abreve -10
KPX rcaron acircumflex -10
KPX rcaron adieresis -10
KPX rcaron agrave -10
KPX rcaron amacron -10
KPX rcaron aogonek -10
KPX rcaron aring -10
KPX rcaron atilde -10
KPX rcaron colon 30
KPX rcaron comma -50
KPX rcaron i 15
KPX rcaron iacute 15
KPX rcaron icircumflex 15
KPX rcaron idieresis 15
KPX rcaron igrave 15
KPX rcaron imacron 15
KPX rcaron iogonek 15
KPX rcaron k 15
KPX rcaron kcommaaccent 15
KPX rcaron l 15
KPX rcaron lacute 15
KPX rcaron lcommaaccent 15
KPX rcaron lslash 15
KPX rcaron m 25
KPX rcaron n 25
KPX rcaron nacute 25
KPX rcaron ncaron 25
KPX rcaron ncommaaccent 25
KPX rcaron ntilde 25
KPX rcaron p 30
KPX rcaron period -50
KPX rcaron semicolon 30
KPX rcaron t 40
KPX rcaron tcommaaccent 40
KPX rcaron u 15
KPX rcaron uacute 15
KPX rcaron ucircumflex 15
KPX rcaron udieresis 15
KPX rcaron ugrave 15
KPX rcaron uhungarumlaut 15
KPX rcaron umacron 15
KPX rcaron uogonek 15
KPX rcaron uring 15
KPX rcaron v 30
KPX rcaron y 30
KPX rcaron yacute 30
KPX rcaron ydieresis 30
KPX rcommaaccent a -10
KPX rcommaaccent aacute -10
KPX rcommaaccent abreve -10
KPX rcommaaccent acircumflex -10
KPX rcommaaccent adieresis -10
KPX rcommaaccent agrave -10
KPX rcommaaccent amacron -10
KPX rcommaaccent aogonek -10
KPX rcommaaccent aring -10
KPX rcommaaccent atilde -10
KPX rcommaaccent colon 30
KPX rcommaaccent comma -50
KPX rcommaaccent i 15
KPX rcommaaccent iacute 15
KPX rcommaaccent icircumflex 15
KPX rcommaaccent idieresis 15
KPX rcommaaccent igrave 15
KPX rcommaaccent imacron 15
KPX rcommaaccent iogonek 15
KPX rcommaaccent k 15
KPX rcommaaccent kcommaaccent 15
KPX rcommaaccent l 15
KPX rcommaaccent lacute 15
KPX rcommaaccent lcommaaccent 15
KPX rcommaaccent lslash 15
KPX rcommaaccent m 25
KPX rcommaaccent n 25
KPX rcommaaccent nacute 25
KPX rcommaaccent ncaron 25
KPX rcommaaccent ncommaaccent 25
KPX rcommaaccent ntilde 25
KPX rcommaaccent p 30
KPX rcommaaccent period -50
KPX rcommaaccent semicolon 30
KPX rcommaaccent t 40
KPX rcommaaccent tcommaaccent 40
KPX rcommaaccent u 15
KPX rcommaaccent uacute 15
KPX rcommaaccent ucircumflex 15
KPX rcommaaccent udieresis 15
KPX rcommaaccent ugrave 15
KPX rcommaaccent uhungarumlaut 15
KPX rcommaaccent umacron 15
KPX rcommaaccent uogonek 15
KPX rcommaaccent uring 15
KPX rcommaaccent v 30
KPX rcommaaccent y 30
KPX rcommaaccent yacute 30
KPX rcommaaccent ydieresis 30
KPX s comma -15
KPX s period -15
KPX s w -30
KPX sacute comma -15
KPX sacute period -15
KPX sacute w -30
KPX scaron comma -15
KPX scaron period -15
KPX scaron w -30
KPX scedilla comma -15
KPX scedilla period -15
KPX scedilla w -30
KPX scommaaccent comma -15
KPX scommaaccent period -15
KPX scommaaccent w -30
KPX semicolon space -50
KPX space T -50
KPX space Tcaron -50
KPX space Tcommaaccent -50
KPX space V -50
KPX space W -40
KPX space Y -90
KPX space Yacute -90
KPX space Ydieresis -90
KPX space quotedblleft -30
KPX space quoteleft -60
KPX v a -25
KPX v aacute -25
KPX v abreve -25
KPX v acircumflex -25
KPX v adieresis -25
KPX v agrave -25
KPX v amacron -25
KPX v aogonek -25
KPX v aring -25
KPX v atilde -25
KPX v comma -80
KPX v e -25
KPX v eacute -25
KPX v ecaron -25
KPX v ecircumflex -25
KPX v edieresis -25
KPX v edotaccent -25
KPX v egrave -25
KPX v emacron -25
KPX v eogonek -25
KPX v o -25
KPX v oacute -25
KPX v ocircumflex -25
KPX v odieresis -25
KPX v ograve -25
KPX v ohungarumlaut -25
KPX v omacron -25
KPX v oslash -25
KPX v otilde -25
KPX v period -80
KPX w a -15
KPX w aacute -15
KPX w abreve -15
KPX w acircumflex -15
KPX w adieresis -15
KPX w agrave -15
KPX w amacron -15
KPX w aogonek -15
KPX w aring -15
KPX w atilde -15
KPX w comma -60
KPX w e -10
KPX w eacute -10
KPX w ecaron -10
KPX w ecircumflex -10
KPX w edieresis -10
KPX w edotaccent -10
KPX w egrave -10
KPX w emacron -10
KPX w eogonek -10
KPX w o -10
KPX w oacute -10
KPX w ocircumflex -10
KPX w odieresis -10
KPX w ograve -10
KPX w ohungarumlaut -10
KPX w omacron -10
KPX w oslash -10
KPX w otilde -10
KPX w period -60
KPX x e -30
KPX x eacute -30
KPX x ecaron -30
KPX x ecircumflex -30
KPX x edieresis -30
KPX x edotaccent -30
KPX x egrave -30
KPX x emacron -30
KPX x eogonek -30
KPX y a -20
KPX y aacute -20
KPX y abreve -20
KPX y acircumflex -20
KPX y adieresis -20
KPX y agrave -20
KPX y amacron -20
KPX y aogonek -20
KPX y aring -20
KPX y atilde -20
KPX y comma -100
KPX y e -20
KPX y eacute -20
KPX y ecaron -20
KPX y ecircumflex -20
KPX y edieresis -20
KPX y edotaccent -20
KPX y egrave -20
KPX y emacron -20
KPX y eogonek -20
KPX y o -20
KPX y oacute -20
KPX y ocircumflex -20
KPX y odieresis -20
KPX y ograve -20
KPX y ohungarumlaut -20
KPX y omacron -20
KPX y oslash -20
KPX y otilde -20
KPX y period -100
KPX yacute a -20
KPX yacute aacute -20
KPX yacute abreve -20
KPX yacute acircumflex -20
KPX yacute adieresis -20
KPX yacute agrave -20
KPX yacute amacron -20
KPX yacute aogonek -20
KPX yacute aring -20
KPX yacute atilde -20
KPX yacute comma -100
KPX yacute e -20
KPX yacute eacute -20
KPX yacute ecaron -20
KPX yacute ecircumflex -20
KPX yacute edieresis -20
KPX yacute edotaccent -20
KPX yacute egrave -20
KPX yacute emacron -20
KPX yacute eogonek -20
KPX yacute o -20
KPX yacute oacute -20
KPX yacute ocircumflex -20
KPX yacute odieresis -20
KPX yacute ograve -20
KPX yacute ohungarumlaut -20
KPX yacute omacron -20
KPX yacute oslash -20
KPX yacute otilde -20
KPX yacute period -100
KPX ydieresis a -20
KPX ydieresis aacute -20
KPX ydieresis abreve -20
KPX ydieresis acircumflex -20
KPX ydieresis adieresis -20
KPX ydieresis agrave -20
KPX ydieresis amacron -20
KPX ydieresis aogonek -20
KPX ydieresis aring -20
KPX ydieresis atilde -20
KPX ydieresis comma -100
KPX ydieresis e -20
KPX ydieresis eacute -20
KPX ydieresis ecaron -20
KPX ydieresis ecircumflex -20
KPX ydieresis edieresis -20
KPX ydieresis edotaccent -20
KPX ydieresis egrave -20
KPX ydieresis emacron -20
KPX ydieresis eogonek -20
KPX ydieresis o -20
KPX ydieresis oacute -20
KPX ydieresis ocircumflex -20
KPX ydieresis odieresis -20
KPX ydieresis ograve -20
KPX ydieresis ohungarumlaut -20
KPX ydieresis omacron -20
KPX ydieresis oslash -20
KPX ydieresis otilde -20
KPX ydieresis period -100
KPX z e -15
KPX z eacute -15
KPX z ecaron -15
KPX z ecircumflex -15
KPX z edieresis -15
KPX z edotaccent -15
KPX z egrave -15
KPX z emacron -15
KPX z eogonek -15
KPX z o -15
KPX z oacute -15
KPX z ocircumflex -15
KPX z odieresis -15
KPX z ograve -15
KPX z ohungarumlaut -15
KPX z omacron -15
KPX z oslash -15
KPX z otilde -15
KPX zacute e -15
KPX zacute eacute -15
KPX zacute ecaron -15
KPX zacute ecircumflex -15
KPX zacute edieresis -15
KPX zacute edotaccent -15
KPX zacute egrave -15
KPX zacute emacron -15
KPX zacute eogonek -15
KPX zacute o -15
KPX zacute oacute -15
KPX zacute ocircumflex -15
KPX zacute odieresis -15
KPX zacute ograve -15
KPX zacute ohungarumlaut -15
KPX zacute omacron -15
KPX zacute oslash -15
KPX zacute otilde -15
KPX zcaron e -15
KPX zcaron eacute -15
KPX zcaron ecaron -15
KPX zcaron ecircumflex -15
KPX zcaron edieresis -15
KPX zcaron edotaccent -15
KPX zcaron egrave -15
KPX zcaron emacron -15
KPX zcaron eogonek -15
KPX zcaron o -15
KPX zcaron oacute -15
KPX zcaron ocircumflex -15
KPX zcaron odieresis -15
KPX zcaron ograve -15
KPX zcaron ohungarumlaut -15
KPX zcaron omacron -15
KPX zcaron oslash -15
KPX zcaron otilde -15
KPX zdotaccent e -15
KPX zdotaccent eacute -15
KPX zdotaccent ecaron -15
KPX zdotaccent ecircumflex -15
KPX zdotaccent edieresis -15
KPX zdotaccent edotaccent -15
KPX zdotaccent egrave -15
KPX zdotaccent emacron -15
KPX zdotaccent eogonek -15
KPX zdotaccent o -15
KPX zdotaccent oacute -15
KPX zdotaccent ocircumflex -15
KPX zdotaccent odieresis -15
KPX zdotaccent ograve -15
KPX zdotaccent ohungarumlaut -15
KPX zdotaccent omacron -15
KPX zdotaccent oslash -15
KPX zdotaccent otilde -15
EndKernPairs
EndKernData
EndFontMetrics
'
%
classmethod: StandardFont
helveticaBold
	"from http://www.adobe.com/devnet/font.html "

	<font: #'Helvetica-Bold'>
	^self
		windowsName: 'Arial'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.
Comment Creation Date: Thu May  1 12:43:52 1997
Comment UniqueID 43052
Comment VMusage 37169 48194
FontName Helvetica-Bold
FullName Helvetica Bold
FamilyName Helvetica
Weight Bold
ItalicAngle 0
IsFixedPitch false
CharacterSet ExtendedRoman
FontBBox -170 -228 1003 962 
UnderlinePosition -100
UnderlineThickness 50
Version 002.000
Notice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.
EncodingScheme AdobeStandardEncoding
CapHeight 718
XHeight 532
Ascender 718
Descender -207
StdHW 118
StdVW 140
StartCharMetrics 315
C 32 ; WX 278 ; N space ; B 0 0 0 0 ;
C 33 ; WX 333 ; N exclam ; B 90 0 244 718 ;
C 34 ; WX 474 ; N quotedbl ; B 98 447 376 718 ;
C 35 ; WX 556 ; N numbersign ; B 18 0 538 698 ;
C 36 ; WX 556 ; N dollar ; B 30 -115 523 775 ;
C 37 ; WX 889 ; N percent ; B 28 -19 861 710 ;
C 38 ; WX 722 ; N ampersand ; B 54 -19 701 718 ;
C 39 ; WX 278 ; N quoteright ; B 69 445 209 718 ;
C 40 ; WX 333 ; N parenleft ; B 35 -208 314 734 ;
C 41 ; WX 333 ; N parenright ; B 19 -208 298 734 ;
C 42 ; WX 389 ; N asterisk ; B 27 387 362 718 ;
C 43 ; WX 584 ; N plus ; B 40 0 544 506 ;
C 44 ; WX 278 ; N comma ; B 64 -168 214 146 ;
C 45 ; WX 333 ; N hyphen ; B 27 215 306 345 ;
C 46 ; WX 278 ; N period ; B 64 0 214 146 ;
C 47 ; WX 278 ; N slash ; B -33 -19 311 737 ;
C 48 ; WX 556 ; N zero ; B 32 -19 524 710 ;
C 49 ; WX 556 ; N one ; B 69 0 378 710 ;
C 50 ; WX 556 ; N two ; B 26 0 511 710 ;
C 51 ; WX 556 ; N three ; B 27 -19 516 710 ;
C 52 ; WX 556 ; N four ; B 27 0 526 710 ;
C 53 ; WX 556 ; N five ; B 27 -19 516 698 ;
C 54 ; WX 556 ; N six ; B 31 -19 520 710 ;
C 55 ; WX 556 ; N seven ; B 25 0 528 698 ;
C 56 ; WX 556 ; N eight ; B 32 -19 524 710 ;
C 57 ; WX 556 ; N nine ; B 30 -19 522 710 ;
C 58 ; WX 333 ; N colon ; B 92 0 242 512 ;
C 59 ; WX 333 ; N semicolon ; B 92 -168 242 512 ;
C 60 ; WX 584 ; N less ; B 38 -8 546 514 ;
C 61 ; WX 584 ; N equal ; B 40 87 544 419 ;
C 62 ; WX 584 ; N greater ; B 38 -8 546 514 ;
C 63 ; WX 611 ; N question ; B 60 0 556 727 ;
C 64 ; WX 975 ; N at ; B 118 -19 856 737 ;
C 65 ; WX 722 ; N A ; B 20 0 702 718 ;
C 66 ; WX 722 ; N B ; B 76 0 669 718 ;
C 67 ; WX 722 ; N C ; B 44 -19 684 737 ;
C 68 ; WX 722 ; N D ; B 76 0 685 718 ;
C 69 ; WX 667 ; N E ; B 76 0 621 718 ;
C 70 ; WX 611 ; N F ; B 76 0 587 718 ;
C 71 ; WX 778 ; N G ; B 44 -19 713 737 ;
C 72 ; WX 722 ; N H ; B 71 0 651 718 ;
C 73 ; WX 278 ; N I ; B 64 0 214 718 ;
C 74 ; WX 556 ; N J ; B 22 -18 484 718 ;
C 75 ; WX 722 ; N K ; B 87 0 722 718 ;
C 76 ; WX 611 ; N L ; B 76 0 583 718 ;
C 77 ; WX 833 ; N M ; B 69 0 765 718 ;
C 78 ; WX 722 ; N N ; B 69 0 654 718 ;
C 79 ; WX 778 ; N O ; B 44 -19 734 737 ;
C 80 ; WX 667 ; N P ; B 76 0 627 718 ;
C 81 ; WX 778 ; N Q ; B 44 -52 737 737 ;
C 82 ; WX 722 ; N R ; B 76 0 677 718 ;
C 83 ; WX 667 ; N S ; B 39 -19 629 737 ;
C 84 ; WX 611 ; N T ; B 14 0 598 718 ;
C 85 ; WX 722 ; N U ; B 72 -19 651 718 ;
C 86 ; WX 667 ; N V ; B 19 0 648 718 ;
C 87 ; WX 944 ; N W ; B 16 0 929 718 ;
C 88 ; WX 667 ; N X ; B 14 0 653 718 ;
C 89 ; WX 667 ; N Y ; B 15 0 653 718 ;
C 90 ; WX 611 ; N Z ; B 25 0 586 718 ;
C 91 ; WX 333 ; N bracketleft ; B 63 -196 309 722 ;
C 92 ; WX 278 ; N backslash ; B -33 -19 311 737 ;
C 93 ; WX 333 ; N bracketright ; B 24 -196 270 722 ;
C 94 ; WX 584 ; N asciicircum ; B 62 323 522 698 ;
C 95 ; WX 556 ; N underscore ; B 0 -125 556 -75 ;
C 96 ; WX 278 ; N quoteleft ; B 69 454 209 727 ;
C 97 ; WX 556 ; N a ; B 29 -14 527 546 ;
C 98 ; WX 611 ; N b ; B 61 -14 578 718 ;
C 99 ; WX 556 ; N c ; B 34 -14 524 546 ;
C 100 ; WX 611 ; N d ; B 34 -14 551 718 ;
C 101 ; WX 556 ; N e ; B 23 -14 528 546 ;
C 102 ; WX 333 ; N f ; B 10 0 318 727 ; L i fi ; L l fl ;
C 103 ; WX 611 ; N g ; B 40 -217 553 546 ;
C 104 ; WX 611 ; N h ; B 65 0 546 718 ;
C 105 ; WX 278 ; N i ; B 69 0 209 725 ;
C 106 ; WX 278 ; N j ; B 3 -214 209 725 ;
C 107 ; WX 556 ; N k ; B 69 0 562 718 ;
C 108 ; WX 278 ; N l ; B 69 0 209 718 ;
C 109 ; WX 889 ; N m ; B 64 0 826 546 ;
C 110 ; WX 611 ; N n ; B 65 0 546 546 ;
C 111 ; WX 611 ; N o ; B 34 -14 578 546 ;
C 112 ; WX 611 ; N p ; B 62 -207 578 546 ;
C 113 ; WX 611 ; N q ; B 34 -207 552 546 ;
C 114 ; WX 389 ; N r ; B 64 0 373 546 ;
C 115 ; WX 556 ; N s ; B 30 -14 519 546 ;
C 116 ; WX 333 ; N t ; B 10 -6 309 676 ;
C 117 ; WX 611 ; N u ; B 66 -14 545 532 ;
C 118 ; WX 556 ; N v ; B 13 0 543 532 ;
C 119 ; WX 778 ; N w ; B 10 0 769 532 ;
C 120 ; WX 556 ; N x ; B 15 0 541 532 ;
C 121 ; WX 556 ; N y ; B 10 -214 539 532 ;
C 122 ; WX 500 ; N z ; B 20 0 480 532 ;
C 123 ; WX 389 ; N braceleft ; B 48 -196 365 722 ;
C 124 ; WX 280 ; N bar ; B 84 -225 196 775 ;
C 125 ; WX 389 ; N braceright ; B 24 -196 341 722 ;
C 126 ; WX 584 ; N asciitilde ; B 61 163 523 343 ;
C 161 ; WX 333 ; N exclamdown ; B 90 -186 244 532 ;
C 162 ; WX 556 ; N cent ; B 34 -118 524 628 ;
C 163 ; WX 556 ; N sterling ; B 28 -16 541 718 ;
C 164 ; WX 167 ; N fraction ; B -170 -19 336 710 ;
C 165 ; WX 556 ; N yen ; B -9 0 565 698 ;
C 166 ; WX 556 ; N florin ; B -10 -210 516 737 ;
C 167 ; WX 556 ; N section ; B 34 -184 522 727 ;
C 168 ; WX 556 ; N currency ; B -3 76 559 636 ;
C 169 ; WX 238 ; N quotesingle ; B 70 447 168 718 ;
C 170 ; WX 500 ; N quotedblleft ; B 64 454 436 727 ;
C 171 ; WX 556 ; N guillemotleft ; B 88 76 468 484 ;
C 172 ; WX 333 ; N guilsinglleft ; B 83 76 250 484 ;
C 173 ; WX 333 ; N guilsinglright ; B 83 76 250 484 ;
C 174 ; WX 611 ; N fi ; B 10 0 542 727 ;
C 175 ; WX 611 ; N fl ; B 10 0 542 727 ;
C 177 ; WX 556 ; N endash ; B 0 227 556 333 ;
C 178 ; WX 556 ; N dagger ; B 36 -171 520 718 ;
C 179 ; WX 556 ; N daggerdbl ; B 36 -171 520 718 ;
C 180 ; WX 278 ; N periodcentered ; B 58 172 220 334 ;
C 182 ; WX 556 ; N paragraph ; B -8 -191 539 700 ;
C 183 ; WX 350 ; N bullet ; B 10 194 340 524 ;
C 184 ; WX 278 ; N quotesinglbase ; B 69 -146 209 127 ;
C 185 ; WX 500 ; N quotedblbase ; B 64 -146 436 127 ;
C 186 ; WX 500 ; N quotedblright ; B 64 445 436 718 ;
C 187 ; WX 556 ; N guillemotright ; B 88 76 468 484 ;
C 188 ; WX 1000 ; N ellipsis ; B 92 0 908 146 ;
C 189 ; WX 1000 ; N perthousand ; B -3 -19 1003 710 ;
C 191 ; WX 611 ; N questiondown ; B 55 -195 551 532 ;
C 193 ; WX 333 ; N grave ; B -23 604 225 750 ;
C 194 ; WX 333 ; N acute ; B 108 604 356 750 ;
C 195 ; WX 333 ; N circumflex ; B -10 604 343 750 ;
C 196 ; WX 333 ; N tilde ; B -17 610 350 737 ;
C 197 ; WX 333 ; N macron ; B -6 604 339 678 ;
C 198 ; WX 333 ; N breve ; B -2 604 335 750 ;
C 199 ; WX 333 ; N dotaccent ; B 104 614 230 729 ;
C 200 ; WX 333 ; N dieresis ; B 6 614 327 729 ;
C 202 ; WX 333 ; N ring ; B 59 568 275 776 ;
C 203 ; WX 333 ; N cedilla ; B 6 -228 245 0 ;
C 205 ; WX 333 ; N hungarumlaut ; B 9 604 486 750 ;
C 206 ; WX 333 ; N ogonek ; B 71 -228 304 0 ;
C 207 ; WX 333 ; N caron ; B -10 604 343 750 ;
C 208 ; WX 1000 ; N emdash ; B 0 227 1000 333 ;
C 225 ; WX 1000 ; N AE ; B 5 0 954 718 ;
C 227 ; WX 370 ; N ordfeminine ; B 22 401 347 737 ;
C 232 ; WX 611 ; N Lslash ; B -20 0 583 718 ;
C 233 ; WX 778 ; N Oslash ; B 33 -27 744 745 ;
C 234 ; WX 1000 ; N OE ; B 37 -19 961 737 ;
C 235 ; WX 365 ; N ordmasculine ; B 6 401 360 737 ;
C 241 ; WX 889 ; N ae ; B 29 -14 858 546 ;
C 245 ; WX 278 ; N dotlessi ; B 69 0 209 532 ;
C 248 ; WX 278 ; N lslash ; B -18 0 296 718 ;
C 249 ; WX 611 ; N oslash ; B 22 -29 589 560 ;
C 250 ; WX 944 ; N oe ; B 34 -14 912 546 ;
C 251 ; WX 611 ; N germandbls ; B 69 -14 579 731 ;
C -1 ; WX 278 ; N Idieresis ; B -21 0 300 915 ;
C -1 ; WX 556 ; N eacute ; B 23 -14 528 750 ;
C -1 ; WX 556 ; N abreve ; B 29 -14 527 750 ;
C -1 ; WX 611 ; N uhungarumlaut ; B 66 -14 625 750 ;
C -1 ; WX 556 ; N ecaron ; B 23 -14 528 750 ;
C -1 ; WX 667 ; N Ydieresis ; B 15 0 653 915 ;
C -1 ; WX 584 ; N divide ; B 40 -42 544 548 ;
C -1 ; WX 667 ; N Yacute ; B 15 0 653 936 ;
C -1 ; WX 722 ; N Acircumflex ; B 20 0 702 936 ;
C -1 ; WX 556 ; N aacute ; B 29 -14 527 750 ;
C -1 ; WX 722 ; N Ucircumflex ; B 72 -19 651 936 ;
C -1 ; WX 556 ; N yacute ; B 10 -214 539 750 ;
C -1 ; WX 556 ; N scommaaccent ; B 30 -228 519 546 ;
C -1 ; WX 556 ; N ecircumflex ; B 23 -14 528 750 ;
C -1 ; WX 722 ; N Uring ; B 72 -19 651 962 ;
C -1 ; WX 722 ; N Udieresis ; B 72 -19 651 915 ;
C -1 ; WX 556 ; N aogonek ; B 29 -224 545 546 ;
C -1 ; WX 722 ; N Uacute ; B 72 -19 651 936 ;
C -1 ; WX 611 ; N uogonek ; B 66 -228 545 532 ;
C -1 ; WX 667 ; N Edieresis ; B 76 0 621 915 ;
C -1 ; WX 722 ; N Dcroat ; B -5 0 685 718 ;
C -1 ; WX 250 ; N commaaccent ; B 64 -228 199 -50 ;
C -1 ; WX 737 ; N copyright ; B -11 -19 749 737 ;
C -1 ; WX 667 ; N Emacron ; B 76 0 621 864 ;
C -1 ; WX 556 ; N ccaron ; B 34 -14 524 750 ;
C -1 ; WX 556 ; N aring ; B 29 -14 527 776 ;
C -1 ; WX 722 ; N Ncommaaccent ; B 69 -228 654 718 ;
C -1 ; WX 278 ; N lacute ; B 69 0 329 936 ;
C -1 ; WX 556 ; N agrave ; B 29 -14 527 750 ;
C -1 ; WX 611 ; N Tcommaaccent ; B 14 -228 598 718 ;
C -1 ; WX 722 ; N Cacute ; B 44 -19 684 936 ;
C -1 ; WX 556 ; N atilde ; B 29 -14 527 737 ;
C -1 ; WX 667 ; N Edotaccent ; B 76 0 621 915 ;
C -1 ; WX 556 ; N scaron ; B 30 -14 519 750 ;
C -1 ; WX 556 ; N scedilla ; B 30 -228 519 546 ;
C -1 ; WX 278 ; N iacute ; B 69 0 329 750 ;
C -1 ; WX 494 ; N lozenge ; B 10 0 484 745 ;
C -1 ; WX 722 ; N Rcaron ; B 76 0 677 936 ;
C -1 ; WX 778 ; N Gcommaaccent ; B 44 -228 713 737 ;
C -1 ; WX 611 ; N ucircumflex ; B 66 -14 545 750 ;
C -1 ; WX 556 ; N acircumflex ; B 29 -14 527 750 ;
C -1 ; WX 722 ; N Amacron ; B 20 0 702 864 ;
C -1 ; WX 389 ; N rcaron ; B 18 0 373 750 ;
C -1 ; WX 556 ; N ccedilla ; B 34 -228 524 546 ;
C -1 ; WX 611 ; N Zdotaccent ; B 25 0 586 915 ;
C -1 ; WX 667 ; N Thorn ; B 76 0 627 718 ;
C -1 ; WX 778 ; N Omacron ; B 44 -19 734 864 ;
C -1 ; WX 722 ; N Racute ; B 76 0 677 936 ;
C -1 ; WX 667 ; N Sacute ; B 39 -19 629 936 ;
C -1 ; WX 743 ; N dcaron ; B 34 -14 750 718 ;
C -1 ; WX 722 ; N Umacron ; B 72 -19 651 864 ;
C -1 ; WX 611 ; N uring ; B 66 -14 545 776 ;
C -1 ; WX 333 ; N threesuperior ; B 8 271 326 710 ;
C -1 ; WX 778 ; N Ograve ; B 44 -19 734 936 ;
C -1 ; WX 722 ; N Agrave ; B 20 0 702 936 ;
C -1 ; WX 722 ; N Abreve ; B 20 0 702 936 ;
C -1 ; WX 584 ; N multiply ; B 40 1 545 505 ;
C -1 ; WX 611 ; N uacute ; B 66 -14 545 750 ;
C -1 ; WX 611 ; N Tcaron ; B 14 0 598 936 ;
C -1 ; WX 494 ; N partialdiff ; B 11 -21 494 750 ;
C -1 ; WX 556 ; N ydieresis ; B 10 -214 539 729 ;
C -1 ; WX 722 ; N Nacute ; B 69 0 654 936 ;
C -1 ; WX 278 ; N icircumflex ; B -37 0 316 750 ;
C -1 ; WX 667 ; N Ecircumflex ; B 76 0 621 936 ;
C -1 ; WX 556 ; N adieresis ; B 29 -14 527 729 ;
C -1 ; WX 556 ; N edieresis ; B 23 -14 528 729 ;
C -1 ; WX 556 ; N cacute ; B 34 -14 524 750 ;
C -1 ; WX 611 ; N nacute ; B 65 0 546 750 ;
C -1 ; WX 611 ; N umacron ; B 66 -14 545 678 ;
C -1 ; WX 722 ; N Ncaron ; B 69 0 654 936 ;
C -1 ; WX 278 ; N Iacute ; B 64 0 329 936 ;
C -1 ; WX 584 ; N plusminus ; B 40 0 544 506 ;
C -1 ; WX 280 ; N brokenbar ; B 84 -150 196 700 ;
C -1 ; WX 737 ; N registered ; B -11 -19 748 737 ;
C -1 ; WX 778 ; N Gbreve ; B 44 -19 713 936 ;
C -1 ; WX 278 ; N Idotaccent ; B 64 0 214 915 ;
C -1 ; WX 600 ; N summation ; B 14 -10 585 706 ;
C -1 ; WX 667 ; N Egrave ; B 76 0 621 936 ;
C -1 ; WX 389 ; N racute ; B 64 0 384 750 ;
C -1 ; WX 611 ; N omacron ; B 34 -14 578 678 ;
C -1 ; WX 611 ; N Zacute ; B 25 0 586 936 ;
C -1 ; WX 611 ; N Zcaron ; B 25 0 586 936 ;
C -1 ; WX 549 ; N greaterequal ; B 26 0 523 704 ;
C -1 ; WX 722 ; N Eth ; B -5 0 685 718 ;
C -1 ; WX 722 ; N Ccedilla ; B 44 -228 684 737 ;
C -1 ; WX 278 ; N lcommaaccent ; B 69 -228 213 718 ;
C -1 ; WX 389 ; N tcaron ; B 10 -6 421 878 ;
C -1 ; WX 556 ; N eogonek ; B 23 -228 528 546 ;
C -1 ; WX 722 ; N Uogonek ; B 72 -228 651 718 ;
C -1 ; WX 722 ; N Aacute ; B 20 0 702 936 ;
C -1 ; WX 722 ; N Adieresis ; B 20 0 702 915 ;
C -1 ; WX 556 ; N egrave ; B 23 -14 528 750 ;
C -1 ; WX 500 ; N zacute ; B 20 0 480 750 ;
C -1 ; WX 278 ; N iogonek ; B 16 -224 249 725 ;
C -1 ; WX 778 ; N Oacute ; B 44 -19 734 936 ;
C -1 ; WX 611 ; N oacute ; B 34 -14 578 750 ;
C -1 ; WX 556 ; N amacron ; B 29 -14 527 678 ;
C -1 ; WX 556 ; N sacute ; B 30 -14 519 750 ;
C -1 ; WX 278 ; N idieresis ; B -21 0 300 729 ;
C -1 ; WX 778 ; N Ocircumflex ; B 44 -19 734 936 ;
C -1 ; WX 722 ; N Ugrave ; B 72 -19 651 936 ;
C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;
C -1 ; WX 611 ; N thorn ; B 62 -208 578 718 ;
C -1 ; WX 333 ; N twosuperior ; B 9 283 324 710 ;
C -1 ; WX 778 ; N Odieresis ; B 44 -19 734 915 ;
C -1 ; WX 611 ; N mu ; B 66 -207 545 532 ;
C -1 ; WX 278 ; N igrave ; B -50 0 209 750 ;
C -1 ; WX 611 ; N ohungarumlaut ; B 34 -14 625 750 ;
C -1 ; WX 667 ; N Eogonek ; B 76 -224 639 718 ;
C -1 ; WX 611 ; N dcroat ; B 34 -14 650 718 ;
C -1 ; WX 834 ; N threequarters ; B 16 -19 799 710 ;
C -1 ; WX 667 ; N Scedilla ; B 39 -228 629 737 ;
C -1 ; WX 400 ; N lcaron ; B 69 0 408 718 ;
C -1 ; WX 722 ; N Kcommaaccent ; B 87 -228 722 718 ;
C -1 ; WX 611 ; N Lacute ; B 76 0 583 936 ;
C -1 ; WX 1000 ; N trademark ; B 44 306 956 718 ;
C -1 ; WX 556 ; N edotaccent ; B 23 -14 528 729 ;
C -1 ; WX 278 ; N Igrave ; B -50 0 214 936 ;
C -1 ; WX 278 ; N Imacron ; B -33 0 312 864 ;
C -1 ; WX 611 ; N Lcaron ; B 76 0 583 718 ;
C -1 ; WX 834 ; N onehalf ; B 26 -19 794 710 ;
C -1 ; WX 549 ; N lessequal ; B 29 0 526 704 ;
C -1 ; WX 611 ; N ocircumflex ; B 34 -14 578 750 ;
C -1 ; WX 611 ; N ntilde ; B 65 0 546 737 ;
C -1 ; WX 722 ; N Uhungarumlaut ; B 72 -19 681 936 ;
C -1 ; WX 667 ; N Eacute ; B 76 0 621 936 ;
C -1 ; WX 556 ; N emacron ; B 23 -14 528 678 ;
C -1 ; WX 611 ; N gbreve ; B 40 -217 553 750 ;
C -1 ; WX 834 ; N onequarter ; B 26 -19 766 710 ;
C -1 ; WX 667 ; N Scaron ; B 39 -19 629 936 ;
C -1 ; WX 667 ; N Scommaaccent ; B 39 -228 629 737 ;
C -1 ; WX 778 ; N Ohungarumlaut ; B 44 -19 734 936 ;
C -1 ; WX 400 ; N degree ; B 57 426 343 712 ;
C -1 ; WX 611 ; N ograve ; B 34 -14 578 750 ;
C -1 ; WX 722 ; N Ccaron ; B 44 -19 684 936 ;
C -1 ; WX 611 ; N ugrave ; B 66 -14 545 750 ;
C -1 ; WX 549 ; N radical ; B 10 -46 512 850 ;
C -1 ; WX 722 ; N Dcaron ; B 76 0 685 936 ;
C -1 ; WX 389 ; N rcommaaccent ; B 64 -228 373 546 ;
C -1 ; WX 722 ; N Ntilde ; B 69 0 654 923 ;
C -1 ; WX 611 ; N otilde ; B 34 -14 578 737 ;
C -1 ; WX 722 ; N Rcommaaccent ; B 76 -228 677 718 ;
C -1 ; WX 611 ; N Lcommaaccent ; B 76 -228 583 718 ;
C -1 ; WX 722 ; N Atilde ; B 20 0 702 923 ;
C -1 ; WX 722 ; N Aogonek ; B 20 -224 742 718 ;
C -1 ; WX 722 ; N Aring ; B 20 0 702 962 ;
C -1 ; WX 778 ; N Otilde ; B 44 -19 734 923 ;
C -1 ; WX 500 ; N zdotaccent ; B 20 0 480 729 ;
C -1 ; WX 667 ; N Ecaron ; B 76 0 621 936 ;
C -1 ; WX 278 ; N Iogonek ; B -11 -228 222 718 ;
C -1 ; WX 556 ; N kcommaaccent ; B 69 -228 562 718 ;
C -1 ; WX 584 ; N minus ; B 40 197 544 309 ;
C -1 ; WX 278 ; N Icircumflex ; B -37 0 316 936 ;
C -1 ; WX 611 ; N ncaron ; B 65 0 546 750 ;
C -1 ; WX 333 ; N tcommaaccent ; B 10 -228 309 676 ;
C -1 ; WX 584 ; N logicalnot ; B 40 108 544 419 ;
C -1 ; WX 611 ; N odieresis ; B 34 -14 578 729 ;
C -1 ; WX 611 ; N udieresis ; B 66 -14 545 729 ;
C -1 ; WX 549 ; N notequal ; B 15 -49 540 570 ;
C -1 ; WX 611 ; N gcommaaccent ; B 40 -217 553 850 ;
C -1 ; WX 611 ; N eth ; B 34 -14 578 737 ;
C -1 ; WX 500 ; N zcaron ; B 20 0 480 750 ;
C -1 ; WX 611 ; N ncommaaccent ; B 65 -228 546 546 ;
C -1 ; WX 333 ; N onesuperior ; B 26 283 237 710 ;
C -1 ; WX 278 ; N imacron ; B -8 0 285 678 ;
C -1 ; WX 556 ; N Euro ; B 0 0 0 0 ;
EndCharMetrics
StartKernData
StartKernPairs 2481
KPX A C -40
KPX A Cacute -40
KPX A Ccaron -40
KPX A Ccedilla -40
KPX A G -50
KPX A Gbreve -50
KPX A Gcommaaccent -50
KPX A O -40
KPX A Oacute -40
KPX A Ocircumflex -40
KPX A Odieresis -40
KPX A Ograve -40
KPX A Ohungarumlaut -40
KPX A Omacron -40
KPX A Oslash -40
KPX A Otilde -40
KPX A Q -40
KPX A T -90
KPX A Tcaron -90
KPX A Tcommaaccent -90
KPX A U -50
KPX A Uacute -50
KPX A Ucircumflex -50
KPX A Udieresis -50
KPX A Ugrave -50
KPX A Uhungarumlaut -50
KPX A Umacron -50
KPX A Uogonek -50
KPX A Uring -50
KPX A V -80
KPX A W -60
KPX A Y -110
KPX A Yacute -110
KPX A Ydieresis -110
KPX A u -30
KPX A uacute -30
KPX A ucircumflex -30
KPX A udieresis -30
KPX A ugrave -30
KPX A uhungarumlaut -30
KPX A umacron -30
KPX A uogonek -30
KPX A uring -30
KPX A v -40
KPX A w -30
KPX A y -30
KPX A yacute -30
KPX A ydieresis -30
KPX Aacute C -40
KPX Aacute Cacute -40
KPX Aacute Ccaron -40
KPX Aacute Ccedilla -40
KPX Aacute G -50
KPX Aacute Gbreve -50
KPX Aacute Gcommaaccent -50
KPX Aacute O -40
KPX Aacute Oacute -40
KPX Aacute Ocircumflex -40
KPX Aacute Odieresis -40
KPX Aacute Ograve -40
KPX Aacute Ohungarumlaut -40
KPX Aacute Omacron -40
KPX Aacute Oslash -40
KPX Aacute Otilde -40
KPX Aacute Q -40
KPX Aacute T -90
KPX Aacute Tcaron -90
KPX Aacute Tcommaaccent -90
KPX Aacute U -50
KPX Aacute Uacute -50
KPX Aacute Ucircumflex -50
KPX Aacute Udieresis -50
KPX Aacute Ugrave -50
KPX Aacute Uhungarumlaut -50
KPX Aacute Umacron -50
KPX Aacute Uogonek -50
KPX Aacute Uring -50
KPX Aacute V -80
KPX Aacute W -60
KPX Aacute Y -110
KPX Aacute Yacute -110
KPX Aacute Ydieresis -110
KPX Aacute u -30
KPX Aacute uacute -30
KPX Aacute ucircumflex -30
KPX Aacute udieresis -30
KPX Aacute ugrave -30
KPX Aacute uhungarumlaut -30
KPX Aacute umacron -30
KPX Aacute uogonek -30
KPX Aacute uring -30
KPX Aacute v -40
KPX Aacute w -30
KPX Aacute y -30
KPX Aacute yacute -30
KPX Aacute ydieresis -30
KPX Abreve C -40
KPX Abreve Cacute -40
KPX Abreve Ccaron -40
KPX Abreve Ccedilla -40
KPX Abreve G -50
KPX Abreve Gbreve -50
KPX Abreve Gcommaaccent -50
KPX Abreve O -40
KPX Abreve Oacute -40
KPX Abreve Ocircumflex -40
KPX Abreve Odieresis -40
KPX Abreve Ograve -40
KPX Abreve Ohungarumlaut -40
KPX Abreve Omacron -40
KPX Abreve Oslash -40
KPX Abreve Otilde -40
KPX Abreve Q -40
KPX Abreve T -90
KPX Abreve Tcaron -90
KPX Abreve Tcommaaccent -90
KPX Abreve U -50
KPX Abreve Uacute -50
KPX Abreve Ucircumflex -50
KPX Abreve Udieresis -50
KPX Abreve Ugrave -50
KPX Abreve Uhungarumlaut -50
KPX Abreve Umacron -50
KPX Abreve Uogonek -50
KPX Abreve Uring -50
KPX Abreve V -80
KPX Abreve W -60
KPX Abreve Y -110
KPX Abreve Yacute -110
KPX Abreve Ydieresis -110
KPX Abreve u -30
KPX Abreve uacute -30
KPX Abreve ucircumflex -30
KPX Abreve udieresis -30
KPX Abreve ugrave -30
KPX Abreve uhungarumlaut -30
KPX Abreve umacron -30
KPX Abreve uogonek -30
KPX Abreve uring -30
KPX Abreve v -40
KPX Abreve w -30
KPX Abreve y -30
KPX Abreve yacute -30
KPX Abreve ydieresis -30
KPX Acircumflex C -40
KPX Acircumflex Cacute -40
KPX Acircumflex Ccaron -40
KPX Acircumflex Ccedilla -40
KPX Acircumflex G -50
KPX Acircumflex Gbreve -50
KPX Acircumflex Gcommaaccent -50
KPX Acircumflex O -40
KPX Acircumflex Oacute -40
KPX Acircumflex Ocircumflex -40
KPX Acircumflex Odieresis -40
KPX Acircumflex Ograve -40
KPX Acircumflex Ohungarumlaut -40
KPX Acircumflex Omacron -40
KPX Acircumflex Oslash -40
KPX Acircumflex Otilde -40
KPX Acircumflex Q -40
KPX Acircumflex T -90
KPX Acircumflex Tcaron -90
KPX Acircumflex Tcommaaccent -90
KPX Acircumflex U -50
KPX Acircumflex Uacute -50
KPX Acircumflex Ucircumflex -50
KPX Acircumflex Udieresis -50
KPX Acircumflex Ugrave -50
KPX Acircumflex Uhungarumlaut -50
KPX Acircumflex Umacron -50
KPX Acircumflex Uogonek -50
KPX Acircumflex Uring -50
KPX Acircumflex V -80
KPX Acircumflex W -60
KPX Acircumflex Y -110
KPX Acircumflex Yacute -110
KPX Acircumflex Ydieresis -110
KPX Acircumflex u -30
KPX Acircumflex uacute -30
KPX Acircumflex ucircumflex -30
KPX Acircumflex udieresis -30
KPX Acircumflex ugrave -30
KPX Acircumflex uhungarumlaut -30
KPX Acircumflex umacron -30
KPX Acircumflex uogonek -30
KPX Acircumflex uring -30
KPX Acircumflex v -40
KPX Acircumflex w -30
KPX Acircumflex y -30
KPX Acircumflex yacute -30
KPX Acircumflex ydieresis -30
KPX Adieresis C -40
KPX Adieresis Cacute -40
KPX Adieresis Ccaron -40
KPX Adieresis Ccedilla -40
KPX Adieresis G -50
KPX Adieresis Gbreve -50
KPX Adieresis Gcommaaccent -50
KPX Adieresis O -40
KPX Adieresis Oacute -40
KPX Adieresis Ocircumflex -40
KPX Adieresis Odieresis -40
KPX Adieresis Ograve -40
KPX Adieresis Ohungarumlaut -40
KPX Adieresis Omacron -40
KPX Adieresis Oslash -40
KPX Adieresis Otilde -40
KPX Adieresis Q -40
KPX Adieresis T -90
KPX Adieresis Tcaron -90
KPX Adieresis Tcommaaccent -90
KPX Adieresis U -50
KPX Adieresis Uacute -50
KPX Adieresis Ucircumflex -50
KPX Adieresis Udieresis -50
KPX Adieresis Ugrave -50
KPX Adieresis Uhungarumlaut -50
KPX Adieresis Umacron -50
KPX Adieresis Uogonek -50
KPX Adieresis Uring -50
KPX Adieresis V -80
KPX Adieresis W -60
KPX Adieresis Y -110
KPX Adieresis Yacute -110
KPX Adieresis Ydieresis -110
KPX Adieresis u -30
KPX Adieresis uacute -30
KPX Adieresis ucircumflex -30
KPX Adieresis udieresis -30
KPX Adieresis ugrave -30
KPX Adieresis uhungarumlaut -30
KPX Adieresis umacron -30
KPX Adieresis uogonek -30
KPX Adieresis uring -30
KPX Adieresis v -40
KPX Adieresis w -30
KPX Adieresis y -30
KPX Adieresis yacute -30
KPX Adieresis ydieresis -30
KPX Agrave C -40
KPX Agrave Cacute -40
KPX Agrave Ccaron -40
KPX Agrave Ccedilla -40
KPX Agrave G -50
KPX Agrave Gbreve -50
KPX Agrave Gcommaaccent -50
KPX Agrave O -40
KPX Agrave Oacute -40
KPX Agrave Ocircumflex -40
KPX Agrave Odieresis -40
KPX Agrave Ograve -40
KPX Agrave Ohungarumlaut -40
KPX Agrave Omacron -40
KPX Agrave Oslash -40
KPX Agrave Otilde -40
KPX Agrave Q -40
KPX Agrave T -90
KPX Agrave Tcaron -90
KPX Agrave Tcommaaccent -90
KPX Agrave U -50
KPX Agrave Uacute -50
KPX Agrave Ucircumflex -50
KPX Agrave Udieresis -50
KPX Agrave Ugrave -50
KPX Agrave Uhungarumlaut -50
KPX Agrave Umacron -50
KPX Agrave Uogonek -50
KPX Agrave Uring -50
KPX Agrave V -80
KPX Agrave W -60
KPX Agrave Y -110
KPX Agrave Yacute -110
KPX Agrave Ydieresis -110
KPX Agrave u -30
KPX Agrave uacute -30
KPX Agrave ucircumflex -30
KPX Agrave udieresis -30
KPX Agrave ugrave -30
KPX Agrave uhungarumlaut -30
KPX Agrave umacron -30
KPX Agrave uogonek -30
KPX Agrave uring -30
KPX Agrave v -40
KPX Agrave w -30
KPX Agrave y -30
KPX Agrave yacute -30
KPX Agrave ydieresis -30
KPX Amacron C -40
KPX Amacron Cacute -40
KPX Amacron Ccaron -40
KPX Amacron Ccedilla -40
KPX Amacron G -50
KPX Amacron Gbreve -50
KPX Amacron Gcommaaccent -50
KPX Amacron O -40
KPX Amacron Oacute -40
KPX Amacron Ocircumflex -40
KPX Amacron Odieresis -40
KPX Amacron Ograve -40
KPX Amacron Ohungarumlaut -40
KPX Amacron Omacron -40
KPX Amacron Oslash -40
KPX Amacron Otilde -40
KPX Amacron Q -40
KPX Amacron T -90
KPX Amacron Tcaron -90
KPX Amacron Tcommaaccent -90
KPX Amacron U -50
KPX Amacron Uacute -50
KPX Amacron Ucircumflex -50
KPX Amacron Udieresis -50
KPX Amacron Ugrave -50
KPX Amacron Uhungarumlaut -50
KPX Amacron Umacron -50
KPX Amacron Uogonek -50
KPX Amacron Uring -50
KPX Amacron V -80
KPX Amacron W -60
KPX Amacron Y -110
KPX Amacron Yacute -110
KPX Amacron Ydieresis -110
KPX Amacron u -30
KPX Amacron uacute -30
KPX Amacron ucircumflex -30
KPX Amacron udieresis -30
KPX Amacron ugrave -30
KPX Amacron uhungarumlaut -30
KPX Amacron umacron -30
KPX Amacron uogonek -30
KPX Amacron uring -30
KPX Amacron v -40
KPX Amacron w -30
KPX Amacron y -30
KPX Amacron yacute -30
KPX Amacron ydieresis -30
KPX Aogonek C -40
KPX Aogonek Cacute -40
KPX Aogonek Ccaron -40
KPX Aogonek Ccedilla -40
KPX Aogonek G -50
KPX Aogonek Gbreve -50
KPX Aogonek Gcommaaccent -50
KPX Aogonek O -40
KPX Aogonek Oacute -40
KPX Aogonek Ocircumflex -40
KPX Aogonek Odieresis -40
KPX Aogonek Ograve -40
KPX Aogonek Ohungarumlaut -40
KPX Aogonek Omacron -40
KPX Aogonek Oslash -40
KPX Aogonek Otilde -40
KPX Aogonek Q -40
KPX Aogonek T -90
KPX Aogonek Tcaron -90
KPX Aogonek Tcommaaccent -90
KPX Aogonek U -50
KPX Aogonek Uacute -50
KPX Aogonek Ucircumflex -50
KPX Aogonek Udieresis -50
KPX Aogonek Ugrave -50
KPX Aogonek Uhungarumlaut -50
KPX Aogonek Umacron -50
KPX Aogonek Uogonek -50
KPX Aogonek Uring -50
KPX Aogonek V -80
KPX Aogonek W -60
KPX Aogonek Y -110
KPX Aogonek Yacute -110
KPX Aogonek Ydieresis -110
KPX Aogonek u -30
KPX Aogonek uacute -30
KPX Aogonek ucircumflex -30
KPX Aogonek udieresis -30
KPX Aogonek ugrave -30
KPX Aogonek uhungarumlaut -30
KPX Aogonek umacron -30
KPX Aogonek uogonek -30
KPX Aogonek uring -30
KPX Aogonek v -40
KPX Aogonek w -30
KPX Aogonek y -30
KPX Aogonek yacute -30
KPX Aogonek ydieresis -30
KPX Aring C -40
KPX Aring Cacute -40
KPX Aring Ccaron -40
KPX Aring Ccedilla -40
KPX Aring G -50
KPX Aring Gbreve -50
KPX Aring Gcommaaccent -50
KPX Aring O -40
KPX Aring Oacute -40
KPX Aring Ocircumflex -40
KPX Aring Odieresis -40
KPX Aring Ograve -40
KPX Aring Ohungarumlaut -40
KPX Aring Omacron -40
KPX Aring Oslash -40
KPX Aring Otilde -40
KPX Aring Q -40
KPX Aring T -90
KPX Aring Tcaron -90
KPX Aring Tcommaaccent -90
KPX Aring U -50
KPX Aring Uacute -50
KPX Aring Ucircumflex -50
KPX Aring Udieresis -50
KPX Aring Ugrave -50
KPX Aring Uhungarumlaut -50
KPX Aring Umacron -50
KPX Aring Uogonek -50
KPX Aring Uring -50
KPX Aring V -80
KPX Aring W -60
KPX Aring Y -110
KPX Aring Yacute -110
KPX Aring Ydieresis -110
KPX Aring u -30
KPX Aring uacute -30
KPX Aring ucircumflex -30
KPX Aring udieresis -30
KPX Aring ugrave -30
KPX Aring uhungarumlaut -30
KPX Aring umacron -30
KPX Aring uogonek -30
KPX Aring uring -30
KPX Aring v -40
KPX Aring w -30
KPX Aring y -30
KPX Aring yacute -30
KPX Aring ydieresis -30
KPX Atilde C -40
KPX Atilde Cacute -40
KPX Atilde Ccaron -40
KPX Atilde Ccedilla -40
KPX Atilde G -50
KPX Atilde Gbreve -50
KPX Atilde Gcommaaccent -50
KPX Atilde O -40
KPX Atilde Oacute -40
KPX Atilde Ocircumflex -40
KPX Atilde Odieresis -40
KPX Atilde Ograve -40
KPX Atilde Ohungarumlaut -40
KPX Atilde Omacron -40
KPX Atilde Oslash -40
KPX Atilde Otilde -40
KPX Atilde Q -40
KPX Atilde T -90
KPX Atilde Tcaron -90
KPX Atilde Tcommaaccent -90
KPX Atilde U -50
KPX Atilde Uacute -50
KPX Atilde Ucircumflex -50
KPX Atilde Udieresis -50
KPX Atilde Ugrave -50
KPX Atilde Uhungarumlaut -50
KPX Atilde Umacron -50
KPX Atilde Uogonek -50
KPX Atilde Uring -50
KPX Atilde V -80
KPX Atilde W -60
KPX Atilde Y -110
KPX Atilde Yacute -110
KPX Atilde Ydieresis -110
KPX Atilde u -30
KPX Atilde uacute -30
KPX Atilde ucircumflex -30
KPX Atilde udieresis -30
KPX Atilde ugrave -30
KPX Atilde uhungarumlaut -30
KPX Atilde umacron -30
KPX Atilde uogonek -30
KPX Atilde uring -30
KPX Atilde v -40
KPX Atilde w -30
KPX Atilde y -30
KPX Atilde yacute -30
KPX Atilde ydieresis -30
KPX B A -30
KPX B Aacute -30
KPX B Abreve -30
KPX B Acircumflex -30
KPX B Adieresis -30
KPX B Agrave -30
KPX B Amacron -30
KPX B Aogonek -30
KPX B Aring -30
KPX B Atilde -30
KPX B U -10
KPX B Uacute -10
KPX B Ucircumflex -10
KPX B Udieresis -10
KPX B Ugrave -10
KPX B Uhungarumlaut -10
KPX B Umacron -10
KPX B Uogonek -10
KPX B Uring -10
KPX D A -40
KPX D Aacute -40
KPX D Abreve -40
KPX D Acircumflex -40
KPX D Adieresis -40
KPX D Agrave -40
KPX D Amacron -40
KPX D Aogonek -40
KPX D Aring -40
KPX D Atilde -40
KPX D V -40
KPX D W -40
KPX D Y -70
KPX D Yacute -70
KPX D Ydieresis -70
KPX D comma -30
KPX D period -30
KPX Dcaron A -40
KPX Dcaron Aacute -40
KPX Dcaron Abreve -40
KPX Dcaron Acircumflex -40
KPX Dcaron Adieresis -40
KPX Dcaron Agrave -40
KPX Dcaron Amacron -40
KPX Dcaron Aogonek -40
KPX Dcaron Aring -40
KPX Dcaron Atilde -40
KPX Dcaron V -40
KPX Dcaron W -40
KPX Dcaron Y -70
KPX Dcaron Yacute -70
KPX Dcaron Ydieresis -70
KPX Dcaron comma -30
KPX Dcaron period -30
KPX Dcroat A -40
KPX Dcroat Aacute -40
KPX Dcroat Abreve -40
KPX Dcroat Acircumflex -40
KPX Dcroat Adieresis -40
KPX Dcroat Agrave -40
KPX Dcroat Amacron -40
KPX Dcroat Aogonek -40
KPX Dcroat Aring -40
KPX Dcroat Atilde -40
KPX Dcroat V -40
KPX Dcroat W -40
KPX Dcroat Y -70
KPX Dcroat Yacute -70
KPX Dcroat Ydieresis -70
KPX Dcroat comma -30
KPX Dcroat period -30
KPX F A -80
KPX F Aacute -80
KPX F Abreve -80
KPX F Acircumflex -80
KPX F Adieresis -80
KPX F Agrave -80
KPX F Amacron -80
KPX F Aogonek -80
KPX F Aring -80
KPX F Atilde -80
KPX F a -20
KPX F aacute -20
KPX F abreve -20
KPX F acircumflex -20
KPX F adieresis -20
KPX F agrave -20
KPX F amacron -20
KPX F aogonek -20
KPX F aring -20
KPX F atilde -20
KPX F comma -100
KPX F period -100
KPX J A -20
KPX J Aacute -20
KPX J Abreve -20
KPX J Acircumflex -20
KPX J Adieresis -20
KPX J Agrave -20
KPX J Amacron -20
KPX J Aogonek -20
KPX J Aring -20
KPX J Atilde -20
KPX J comma -20
KPX J period -20
KPX J u -20
KPX J uacute -20
KPX J ucircumflex -20
KPX J udieresis -20
KPX J ugrave -20
KPX J uhungarumlaut -20
KPX J umacron -20
KPX J uogonek -20
KPX J uring -20
KPX K O -30
KPX K Oacute -30
KPX K Ocircumflex -30
KPX K Odieresis -30
KPX K Ograve -30
KPX K Ohungarumlaut -30
KPX K Omacron -30
KPX K Oslash -30
KPX K Otilde -30
KPX K e -15
KPX K eacute -15
KPX K ecaron -15
KPX K ecircumflex -15
KPX K edieresis -15
KPX K edotaccent -15
KPX K egrave -15
KPX K emacron -15
KPX K eogonek -15
KPX K o -35
KPX K oacute -35
KPX K ocircumflex -35
KPX K odieresis -35
KPX K ograve -35
KPX K ohungarumlaut -35
KPX K omacron -35
KPX K oslash -35
KPX K otilde -35
KPX K u -30
KPX K uacute -30
KPX K ucircumflex -30
KPX K udieresis -30
KPX K ugrave -30
KPX K uhungarumlaut -30
KPX K umacron -30
KPX K uogonek -30
KPX K uring -30
KPX K y -40
KPX K yacute -40
KPX K ydieresis -40
KPX Kcommaaccent O -30
KPX Kcommaaccent Oacute -30
KPX Kcommaaccent Ocircumflex -30
KPX Kcommaaccent Odieresis -30
KPX Kcommaaccent Ograve -30
KPX Kcommaaccent Ohungarumlaut -30
KPX Kcommaaccent Omacron -30
KPX Kcommaaccent Oslash -30
KPX Kcommaaccent Otilde -30
KPX Kcommaaccent e -15
KPX Kcommaaccent eacute -15
KPX Kcommaaccent ecaron -15
KPX Kcommaaccent ecircumflex -15
KPX Kcommaaccent edieresis -15
KPX Kcommaaccent edotaccent -15
KPX Kcommaaccent egrave -15
KPX Kcommaaccent emacron -15
KPX Kcommaaccent eogonek -15
KPX Kcommaaccent o -35
KPX Kcommaaccent oacute -35
KPX Kcommaaccent ocircumflex -35
KPX Kcommaaccent odieresis -35
KPX Kcommaaccent ograve -35
KPX Kcommaaccent ohungarumlaut -35
KPX Kcommaaccent omacron -35
KPX Kcommaaccent oslash -35
KPX Kcommaaccent otilde -35
KPX Kcommaaccent u -30
KPX Kcommaaccent uacute -30
KPX Kcommaaccent ucircumflex -30
KPX Kcommaaccent udieresis -30
KPX Kcommaaccent ugrave -30
KPX Kcommaaccent uhungarumlaut -30
KPX Kcommaaccent umacron -30
KPX Kcommaaccent uogonek -30
KPX Kcommaaccent uring -30
KPX Kcommaaccent y -40
KPX Kcommaaccent yacute -40
KPX Kcommaaccent ydieresis -40
KPX L T -90
KPX L Tcaron -90
KPX L Tcommaaccent -90
KPX L V -110
KPX L W -80
KPX L Y -120
KPX L Yacute -120
KPX L Ydieresis -120
KPX L quotedblright -140
KPX L quoteright -140
KPX L y -30
KPX L yacute -30
KPX L ydieresis -30
KPX Lacute T -90
KPX Lacute Tcaron -90
KPX Lacute Tcommaaccent -90
KPX Lacute V -110
KPX Lacute W -80
KPX Lacute Y -120
KPX Lacute Yacute -120
KPX Lacute Ydieresis -120
KPX Lacute quotedblright -140
KPX Lacute quoteright -140
KPX Lacute y -30
KPX Lacute yacute -30
KPX Lacute ydieresis -30
KPX Lcommaaccent T -90
KPX Lcommaaccent Tcaron -90
KPX Lcommaaccent Tcommaaccent -90
KPX Lcommaaccent V -110
KPX Lcommaaccent W -80
KPX Lcommaaccent Y -120
KPX Lcommaaccent Yacute -120
KPX Lcommaaccent Ydieresis -120
KPX Lcommaaccent quotedblright -140
KPX Lcommaaccent quoteright -140
KPX Lcommaaccent y -30
KPX Lcommaaccent yacute -30
KPX Lcommaaccent ydieresis -30
KPX Lslash T -90
KPX Lslash Tcaron -90
KPX Lslash Tcommaaccent -90
KPX Lslash V -110
KPX Lslash W -80
KPX Lslash Y -120
KPX Lslash Yacute -120
KPX Lslash Ydieresis -120
KPX Lslash quotedblright -140
KPX Lslash quoteright -140
KPX Lslash y -30
KPX Lslash yacute -30
KPX Lslash ydieresis -30
KPX O A -50
KPX O Aacute -50
KPX O Abreve -50
KPX O Acircumflex -50
KPX O Adieresis -50
KPX O Agrave -50
KPX O Amacron -50
KPX O Aogonek -50
KPX O Aring -50
KPX O Atilde -50
KPX O T -40
KPX O Tcaron -40
KPX O Tcommaaccent -40
KPX O V -50
KPX O W -50
KPX O X -50
KPX O Y -70
KPX O Yacute -70
KPX O Ydieresis -70
KPX O comma -40
KPX O period -40
KPX Oacute A -50
KPX Oacute Aacute -50
KPX Oacute Abreve -50
KPX Oacute Acircumflex -50
KPX Oacute Adieresis -50
KPX Oacute Agrave -50
KPX Oacute Amacron -50
KPX Oacute Aogonek -50
KPX Oacute Aring -50
KPX Oacute Atilde -50
KPX Oacute T -40
KPX Oacute Tcaron -40
KPX Oacute Tcommaaccent -40
KPX Oacute V -50
KPX Oacute W -50
KPX Oacute X -50
KPX Oacute Y -70
KPX Oacute Yacute -70
KPX Oacute Ydieresis -70
KPX Oacute comma -40
KPX Oacute period -40
KPX Ocircumflex A -50
KPX Ocircumflex Aacute -50
KPX Ocircumflex Abreve -50
KPX Ocircumflex Acircumflex -50
KPX Ocircumflex Adieresis -50
KPX Ocircumflex Agrave -50
KPX Ocircumflex Amacron -50
KPX Ocircumflex Aogonek -50
KPX Ocircumflex Aring -50
KPX Ocircumflex Atilde -50
KPX Ocircumflex T -40
KPX Ocircumflex Tcaron -40
KPX Ocircumflex Tcommaaccent -40
KPX Ocircumflex V -50
KPX Ocircumflex W -50
KPX Ocircumflex X -50
KPX Ocircumflex Y -70
KPX Ocircumflex Yacute -70
KPX Ocircumflex Ydieresis -70
KPX Ocircumflex comma -40
KPX Ocircumflex period -40
KPX Odieresis A -50
KPX Odieresis Aacute -50
KPX Odieresis Abreve -50
KPX Odieresis Acircumflex -50
KPX Odieresis Adieresis -50
KPX Odieresis Agrave -50
KPX Odieresis Amacron -50
KPX Odieresis Aogonek -50
KPX Odieresis Aring -50
KPX Odieresis Atilde -50
KPX Odieresis T -40
KPX Odieresis Tcaron -40
KPX Odieresis Tcommaaccent -40
KPX Odieresis V -50
KPX Odieresis W -50
KPX Odieresis X -50
KPX Odieresis Y -70
KPX Odieresis Yacute -70
KPX Odieresis Ydieresis -70
KPX Odieresis comma -40
KPX Odieresis period -40
KPX Ograve A -50
KPX Ograve Aacute -50
KPX Ograve Abreve -50
KPX Ograve Acircumflex -50
KPX Ograve Adieresis -50
KPX Ograve Agrave -50
KPX Ograve Amacron -50
KPX Ograve Aogonek -50
KPX Ograve Aring -50
KPX Ograve Atilde -50
KPX Ograve T -40
KPX Ograve Tcaron -40
KPX Ograve Tcommaaccent -40
KPX Ograve V -50
KPX Ograve W -50
KPX Ograve X -50
KPX Ograve Y -70
KPX Ograve Yacute -70
KPX Ograve Ydieresis -70
KPX Ograve comma -40
KPX Ograve period -40
KPX Ohungarumlaut A -50
KPX Ohungarumlaut Aacute -50
KPX Ohungarumlaut Abreve -50
KPX Ohungarumlaut Acircumflex -50
KPX Ohungarumlaut Adieresis -50
KPX Ohungarumlaut Agrave -50
KPX Ohungarumlaut Amacron -50
KPX Ohungarumlaut Aogonek -50
KPX Ohungarumlaut Aring -50
KPX Ohungarumlaut Atilde -50
KPX Ohungarumlaut T -40
KPX Ohungarumlaut Tcaron -40
KPX Ohungarumlaut Tcommaaccent -40
KPX Ohungarumlaut V -50
KPX Ohungarumlaut W -50
KPX Ohungarumlaut X -50
KPX Ohungarumlaut Y -70
KPX Ohungarumlaut Yacute -70
KPX Ohungarumlaut Ydieresis -70
KPX Ohungarumlaut comma -40
KPX Ohungarumlaut period -40
KPX Omacron A -50
KPX Omacron Aacute -50
KPX Omacron Abreve -50
KPX Omacron Acircumflex -50
KPX Omacron Adieresis -50
KPX Omacron Agrave -50
KPX Omacron Amacron -50
KPX Omacron Aogonek -50
KPX Omacron Aring -50
KPX Omacron Atilde -50
KPX Omacron T -40
KPX Omacron Tcaron -40
KPX Omacron Tcommaaccent -40
KPX Omacron V -50
KPX Omacron W -50
KPX Omacron X -50
KPX Omacron Y -70
KPX Omacron Yacute -70
KPX Omacron Ydieresis -70
KPX Omacron comma -40
KPX Omacron period -40
KPX Oslash A -50
KPX Oslash Aacute -50
KPX Oslash Abreve -50
KPX Oslash Acircumflex -50
KPX Oslash Adieresis -50
KPX Oslash Agrave -50
KPX Oslash Amacron -50
KPX Oslash Aogonek -50
KPX Oslash Aring -50
KPX Oslash Atilde -50
KPX Oslash T -40
KPX Oslash Tcaron -40
KPX Oslash Tcommaaccent -40
KPX Oslash V -50
KPX Oslash W -50
KPX Oslash X -50
KPX Oslash Y -70
KPX Oslash Yacute -70
KPX Oslash Ydieresis -70
KPX Oslash comma -40
KPX Oslash period -40
KPX Otilde A -50
KPX Otilde Aacute -50
KPX Otilde Abreve -50
KPX Otilde Acircumflex -50
KPX Otilde Adieresis -50
KPX Otilde Agrave -50
KPX Otilde Amacron -50
KPX Otilde Aogonek -50
KPX Otilde Aring -50
KPX Otilde Atilde -50
KPX Otilde T -40
KPX Otilde Tcaron -40
KPX Otilde Tcommaaccent -40
KPX Otilde V -50
KPX Otilde W -50
KPX Otilde X -50
KPX Otilde Y -70
KPX Otilde Yacute -70
KPX Otilde Ydieresis -70
KPX Otilde comma -40
KPX Otilde period -40
KPX P A -100
KPX P Aacute -100
KPX P Abreve -100
KPX P Acircumflex -100
KPX P Adieresis -100
KPX P Agrave -100
KPX P Amacron -100
KPX P Aogonek -100
KPX P Aring -100
KPX P Atilde -100
KPX P a -30
KPX P aacute -30
KPX P abreve -30
KPX P acircumflex -30
KPX P adieresis -30
KPX P agrave -30
KPX P amacron -30
KPX P aogonek -30
KPX P aring -30
KPX P atilde -30
KPX P comma -120
KPX P e -30
KPX P eacute -30
KPX P ecaron -30
KPX P ecircumflex -30
KPX P edieresis -30
KPX P edotaccent -30
KPX P egrave -30
KPX P emacron -30
KPX P eogonek -30
KPX P o -40
KPX P oacute -40
KPX P ocircumflex -40
KPX P odieresis -40
KPX P ograve -40
KPX P ohungarumlaut -40
KPX P omacron -40
KPX P oslash -40
KPX P otilde -40
KPX P period -120
KPX Q U -10
KPX Q Uacute -10
KPX Q Ucircumflex -10
KPX Q Udieresis -10
KPX Q Ugrave -10
KPX Q Uhungarumlaut -10
KPX Q Umacron -10
KPX Q Uogonek -10
KPX Q Uring -10
KPX Q comma 20
KPX Q period 20
KPX R O -20
KPX R Oacute -20
KPX R Ocircumflex -20
KPX R Odieresis -20
KPX R Ograve -20
KPX R Ohungarumlaut -20
KPX R Omacron -20
KPX R Oslash -20
KPX R Otilde -20
KPX R T -20
KPX R Tcaron -20
KPX R Tcommaaccent -20
KPX R U -20
KPX R Uacute -20
KPX R Ucircumflex -20
KPX R Udieresis -20
KPX R Ugrave -20
KPX R Uhungarumlaut -20
KPX R Umacron -20
KPX R Uogonek -20
KPX R Uring -20
KPX R V -50
KPX R W -40
KPX R Y -50
KPX R Yacute -50
KPX R Ydieresis -50
KPX Racute O -20
KPX Racute Oacute -20
KPX Racute Ocircumflex -20
KPX Racute Odieresis -20
KPX Racute Ograve -20
KPX Racute Ohungarumlaut -20
KPX Racute Omacron -20
KPX Racute Oslash -20
KPX Racute Otilde -20
KPX Racute T -20
KPX Racute Tcaron -20
KPX Racute Tcommaaccent -20
KPX Racute U -20
KPX Racute Uacute -20
KPX Racute Ucircumflex -20
KPX Racute Udieresis -20
KPX Racute Ugrave -20
KPX Racute Uhungarumlaut -20
KPX Racute Umacron -20
KPX Racute Uogonek -20
KPX Racute Uring -20
KPX Racute V -50
KPX Racute W -40
KPX Racute Y -50
KPX Racute Yacute -50
KPX Racute Ydieresis -50
KPX Rcaron O -20
KPX Rcaron Oacute -20
KPX Rcaron Ocircumflex -20
KPX Rcaron Odieresis -20
KPX Rcaron Ograve -20
KPX Rcaron Ohungarumlaut -20
KPX Rcaron Omacron -20
KPX Rcaron Oslash -20
KPX Rcaron Otilde -20
KPX Rcaron T -20
KPX Rcaron Tcaron -20
KPX Rcaron Tcommaaccent -20
KPX Rcaron U -20
KPX Rcaron Uacute -20
KPX Rcaron Ucircumflex -20
KPX Rcaron Udieresis -20
KPX Rcaron Ugrave -20
KPX Rcaron Uhungarumlaut -20
KPX Rcaron Umacron -20
KPX Rcaron Uogonek -20
KPX Rcaron Uring -20
KPX Rcaron V -50
KPX Rcaron W -40
KPX Rcaron Y -50
KPX Rcaron Yacute -50
KPX Rcaron Ydieresis -50
KPX Rcommaaccent O -20
KPX Rcommaaccent Oacute -20
KPX Rcommaaccent Ocircumflex -20
KPX Rcommaaccent Odieresis -20
KPX Rcommaaccent Ograve -20
KPX Rcommaaccent Ohungarumlaut -20
KPX Rcommaaccent Omacron -20
KPX Rcommaaccent Oslash -20
KPX Rcommaaccent Otilde -20
KPX Rcommaaccent T -20
KPX Rcommaaccent Tcaron -20
KPX Rcommaaccent Tcommaaccent -20
KPX Rcommaaccent U -20
KPX Rcommaaccent Uacute -20
KPX Rcommaaccent Ucircumflex -20
KPX Rcommaaccent Udieresis -20
KPX Rcommaaccent Ugrave -20
KPX Rcommaaccent Uhungarumlaut -20
KPX Rcommaaccent Umacron -20
KPX Rcommaaccent Uogonek -20
KPX Rcommaaccent Uring -20
KPX Rcommaaccent V -50
KPX Rcommaaccent W -40
KPX Rcommaaccent Y -50
KPX Rcommaaccent Yacute -50
KPX Rcommaaccent Ydieresis -50
KPX T A -90
KPX T Aacute -90
KPX T Abreve -90
KPX T Acircumflex -90
KPX T Adieresis -90
KPX T Agrave -90
KPX T Amacron -90
KPX T Aogonek -90
KPX T Aring -90
KPX T Atilde -90
KPX T O -40
KPX T Oacute -40
KPX T Ocircumflex -40
KPX T Odieresis -40
KPX T Ograve -40
KPX T Ohungarumlaut -40
KPX T Omacron -40
KPX T Oslash -40
KPX T Otilde -40
KPX T a -80
KPX T aacute -80
KPX T abreve -80
KPX T acircumflex -80
KPX T adieresis -80
KPX T agrave -80
KPX T amacron -80
KPX T aogonek -80
KPX T aring -80
KPX T atilde -80
KPX T colon -40
KPX T comma -80
KPX T e -60
KPX T eacute -60
KPX T ecaron -60
KPX T ecircumflex -60
KPX T edieresis -60
KPX T edotaccent -60
KPX T egrave -60
KPX T emacron -60
KPX T eogonek -60
KPX T hyphen -120
KPX T o -80
KPX T oacute -80
KPX T ocircumflex -80
KPX T odieresis -80
KPX T ograve -80
KPX T ohungarumlaut -80
KPX T omacron -80
KPX T oslash -80
KPX T otilde -80
KPX T period -80
KPX T r -80
KPX T racute -80
KPX T rcommaaccent -80
KPX T semicolon -40
KPX T u -90
KPX T uacute -90
KPX T ucircumflex -90
KPX T udieresis -90
KPX T ugrave -90
KPX T uhungarumlaut -90
KPX T umacron -90
KPX T uogonek -90
KPX T uring -90
KPX T w -60
KPX T y -60
KPX T yacute -60
KPX T ydieresis -60
KPX Tcaron A -90
KPX Tcaron Aacute -90
KPX Tcaron Abreve -90
KPX Tcaron Acircumflex -90
KPX Tcaron Adieresis -90
KPX Tcaron Agrave -90
KPX Tcaron Amacron -90
KPX Tcaron Aogonek -90
KPX Tcaron Aring -90
KPX Tcaron Atilde -90
KPX Tcaron O -40
KPX Tcaron Oacute -40
KPX Tcaron Ocircumflex -40
KPX Tcaron Odieresis -40
KPX Tcaron Ograve -40
KPX Tcaron Ohungarumlaut -40
KPX Tcaron Omacron -40
KPX Tcaron Oslash -40
KPX Tcaron Otilde -40
KPX Tcaron a -80
KPX Tcaron aacute -80
KPX Tcaron abreve -80
KPX Tcaron acircumflex -80
KPX Tcaron adieresis -80
KPX Tcaron agrave -80
KPX Tcaron amacron -80
KPX Tcaron aogonek -80
KPX Tcaron aring -80
KPX Tcaron atilde -80
KPX Tcaron colon -40
KPX Tcaron comma -80
KPX Tcaron e -60
KPX Tcaron eacute -60
KPX Tcaron ecaron -60
KPX Tcaron ecircumflex -60
KPX Tcaron edieresis -60
KPX Tcaron edotaccent -60
KPX Tcaron egrave -60
KPX Tcaron emacron -60
KPX Tcaron eogonek -60
KPX Tcaron hyphen -120
KPX Tcaron o -80
KPX Tcaron oacute -80
KPX Tcaron ocircumflex -80
KPX Tcaron odieresis -80
KPX Tcaron ograve -80
KPX Tcaron ohungarumlaut -80
KPX Tcaron omacron -80
KPX Tcaron oslash -80
KPX Tcaron otilde -80
KPX Tcaron period -80
KPX Tcaron r -80
KPX Tcaron racute -80
KPX Tcaron rcommaaccent -80
KPX Tcaron semicolon -40
KPX Tcaron u -90
KPX Tcaron uacute -90
KPX Tcaron ucircumflex -90
KPX Tcaron udieresis -90
KPX Tcaron ugrave -90
KPX Tcaron uhungarumlaut -90
KPX Tcaron umacron -90
KPX Tcaron uogonek -90
KPX Tcaron uring -90
KPX Tcaron w -60
KPX Tcaron y -60
KPX Tcaron yacute -60
KPX Tcaron ydieresis -60
KPX Tcommaaccent A -90
KPX Tcommaaccent Aacute -90
KPX Tcommaaccent Abreve -90
KPX Tcommaaccent Acircumflex -90
KPX Tcommaaccent Adieresis -90
KPX Tcommaaccent Agrave -90
KPX Tcommaaccent Amacron -90
KPX Tcommaaccent Aogonek -90
KPX Tcommaaccent Aring -90
KPX Tcommaaccent Atilde -90
KPX Tcommaaccent O -40
KPX Tcommaaccent Oacute -40
KPX Tcommaaccent Ocircumflex -40
KPX Tcommaaccent Odieresis -40
KPX Tcommaaccent Ograve -40
KPX Tcommaaccent Ohungarumlaut -40
KPX Tcommaaccent Omacron -40
KPX Tcommaaccent Oslash -40
KPX Tcommaaccent Otilde -40
KPX Tcommaaccent a -80
KPX Tcommaaccent aacute -80
KPX Tcommaaccent abreve -80
KPX Tcommaaccent acircumflex -80
KPX Tcommaaccent adieresis -80
KPX Tcommaaccent agrave -80
KPX Tcommaaccent amacron -80
KPX Tcommaaccent aogonek -80
KPX Tcommaaccent aring -80
KPX Tcommaaccent atilde -80
KPX Tcommaaccent colon -40
KPX Tcommaaccent comma -80
KPX Tcommaaccent e -60
KPX Tcommaaccent eacute -60
KPX Tcommaaccent ecaron -60
KPX Tcommaaccent ecircumflex -60
KPX Tcommaaccent edieresis -60
KPX Tcommaaccent edotaccent -60
KPX Tcommaaccent egrave -60
KPX Tcommaaccent emacron -60
KPX Tcommaaccent eogonek -60
KPX Tcommaaccent hyphen -120
KPX Tcommaaccent o -80
KPX Tcommaaccent oacute -80
KPX Tcommaaccent ocircumflex -80
KPX Tcommaaccent odieresis -80
KPX Tcommaaccent ograve -80
KPX Tcommaaccent ohungarumlaut -80
KPX Tcommaaccent omacron -80
KPX Tcommaaccent oslash -80
KPX Tcommaaccent otilde -80
KPX Tcommaaccent period -80
KPX Tcommaaccent r -80
KPX Tcommaaccent racute -80
KPX Tcommaaccent rcommaaccent -80
KPX Tcommaaccent semicolon -40
KPX Tcommaaccent u -90
KPX Tcommaaccent uacute -90
KPX Tcommaaccent ucircumflex -90
KPX Tcommaaccent udieresis -90
KPX Tcommaaccent ugrave -90
KPX Tcommaaccent uhungarumlaut -90
KPX Tcommaaccent umacron -90
KPX Tcommaaccent uogonek -90
KPX Tcommaaccent uring -90
KPX Tcommaaccent w -60
KPX Tcommaaccent y -60
KPX Tcommaaccent yacute -60
KPX Tcommaaccent ydieresis -60
KPX U A -50
KPX U Aacute -50
KPX U Abreve -50
KPX U Acircumflex -50
KPX U Adieresis -50
KPX U Agrave -50
KPX U Amacron -50
KPX U Aogonek -50
KPX U Aring -50
KPX U Atilde -50
KPX U comma -30
KPX U period -30
KPX Uacute A -50
KPX Uacute Aacute -50
KPX Uacute Abreve -50
KPX Uacute Acircumflex -50
KPX Uacute Adieresis -50
KPX Uacute Agrave -50
KPX Uacute Amacron -50
KPX Uacute Aogonek -50
KPX Uacute Aring -50
KPX Uacute Atilde -50
KPX Uacute comma -30
KPX Uacute period -30
KPX Ucircumflex A -50
KPX Ucircumflex Aacute -50
KPX Ucircumflex Abreve -50
KPX Ucircumflex Acircumflex -50
KPX Ucircumflex Adieresis -50
KPX Ucircumflex Agrave -50
KPX Ucircumflex Amacron -50
KPX Ucircumflex Aogonek -50
KPX Ucircumflex Aring -50
KPX Ucircumflex Atilde -50
KPX Ucircumflex comma -30
KPX Ucircumflex period -30
KPX Udieresis A -50
KPX Udieresis Aacute -50
KPX Udieresis Abreve -50
KPX Udieresis Acircumflex -50
KPX Udieresis Adieresis -50
KPX Udieresis Agrave -50
KPX Udieresis Amacron -50
KPX Udieresis Aogonek -50
KPX Udieresis Aring -50
KPX Udieresis Atilde -50
KPX Udieresis comma -30
KPX Udieresis period -30
KPX Ugrave A -50
KPX Ugrave Aacute -50
KPX Ugrave Abreve -50
KPX Ugrave Acircumflex -50
KPX Ugrave Adieresis -50
KPX Ugrave Agrave -50
KPX Ugrave Amacron -50
KPX Ugrave Aogonek -50
KPX Ugrave Aring -50
KPX Ugrave Atilde -50
KPX Ugrave comma -30
KPX Ugrave period -30
KPX Uhungarumlaut A -50
KPX Uhungarumlaut Aacute -50
KPX Uhungarumlaut Abreve -50
KPX Uhungarumlaut Acircumflex -50
KPX Uhungarumlaut Adieresis -50
KPX Uhungarumlaut Agrave -50
KPX Uhungarumlaut Amacron -50
KPX Uhungarumlaut Aogonek -50
KPX Uhungarumlaut Aring -50
KPX Uhungarumlaut Atilde -50
KPX Uhungarumlaut comma -30
KPX Uhungarumlaut period -30
KPX Umacron A -50
KPX Umacron Aacute -50
KPX Umacron Abreve -50
KPX Umacron Acircumflex -50
KPX Umacron Adieresis -50
KPX Umacron Agrave -50
KPX Umacron Amacron -50
KPX Umacron Aogonek -50
KPX Umacron Aring -50
KPX Umacron Atilde -50
KPX Umacron comma -30
KPX Umacron period -30
KPX Uogonek A -50
KPX Uogonek Aacute -50
KPX Uogonek Abreve -50
KPX Uogonek Acircumflex -50
KPX Uogonek Adieresis -50
KPX Uogonek Agrave -50
KPX Uogonek Amacron -50
KPX Uogonek Aogonek -50
KPX Uogonek Aring -50
KPX Uogonek Atilde -50
KPX Uogonek comma -30
KPX Uogonek period -30
KPX Uring A -50
KPX Uring Aacute -50
KPX Uring Abreve -50
KPX Uring Acircumflex -50
KPX Uring Adieresis -50
KPX Uring Agrave -50
KPX Uring Amacron -50
KPX Uring Aogonek -50
KPX Uring Aring -50
KPX Uring Atilde -50
KPX Uring comma -30
KPX Uring period -30
KPX V A -80
KPX V Aacute -80
KPX V Abreve -80
KPX V Acircumflex -80
KPX V Adieresis -80
KPX V Agrave -80
KPX V Amacron -80
KPX V Aogonek -80
KPX V Aring -80
KPX V Atilde -80
KPX V G -50
KPX V Gbreve -50
KPX V Gcommaaccent -50
KPX V O -50
KPX V Oacute -50
KPX V Ocircumflex -50
KPX V Odieresis -50
KPX V Ograve -50
KPX V Ohungarumlaut -50
KPX V Omacron -50
KPX V Oslash -50
KPX V Otilde -50
KPX V a -60
KPX V aacute -60
KPX V abreve -60
KPX V acircumflex -60
KPX V adieresis -60
KPX V agrave -60
KPX V amacron -60
KPX V aogonek -60
KPX V aring -60
KPX V atilde -60
KPX V colon -40
KPX V comma -120
KPX V e -50
KPX V eacute -50
KPX V ecaron -50
KPX V ecircumflex -50
KPX V edieresis -50
KPX V edotaccent -50
KPX V egrave -50
KPX V emacron -50
KPX V eogonek -50
KPX V hyphen -80
KPX V o -90
KPX V oacute -90
KPX V ocircumflex -90
KPX V odieresis -90
KPX V ograve -90
KPX V ohungarumlaut -90
KPX V omacron -90
KPX V oslash -90
KPX V otilde -90
KPX V period -120
KPX V semicolon -40
KPX V u -60
KPX V uacute -60
KPX V ucircumflex -60
KPX V udieresis -60
KPX V ugrave -60
KPX V uhungarumlaut -60
KPX V umacron -60
KPX V uogonek -60
KPX V uring -60
KPX W A -60
KPX W Aacute -60
KPX W Abreve -60
KPX W Acircumflex -60
KPX W Adieresis -60
KPX W Agrave -60
KPX W Amacron -60
KPX W Aogonek -60
KPX W Aring -60
KPX W Atilde -60
KPX W O -20
KPX W Oacute -20
KPX W Ocircumflex -20
KPX W Odieresis -20
KPX W Ograve -20
KPX W Ohungarumlaut -20
KPX W Omacron -20
KPX W Oslash -20
KPX W Otilde -20
KPX W a -40
KPX W aacute -40
KPX W abreve -40
KPX W acircumflex -40
KPX W adieresis -40
KPX W agrave -40
KPX W amacron -40
KPX W aogonek -40
KPX W aring -40
KPX W atilde -40
KPX W colon -10
KPX W comma -80
KPX W e -35
KPX W eacute -35
KPX W ecaron -35
KPX W ecircumflex -35
KPX W edieresis -35
KPX W edotaccent -35
KPX W egrave -35
KPX W emacron -35
KPX W eogonek -35
KPX W hyphen -40
KPX W o -60
KPX W oacute -60
KPX W ocircumflex -60
KPX W odieresis -60
KPX W ograve -60
KPX W ohungarumlaut -60
KPX W omacron -60
KPX W oslash -60
KPX W otilde -60
KPX W period -80
KPX W semicolon -10
KPX W u -45
KPX W uacute -45
KPX W ucircumflex -45
KPX W udieresis -45
KPX W ugrave -45
KPX W uhungarumlaut -45
KPX W umacron -45
KPX W uogonek -45
KPX W uring -45
KPX W y -20
KPX W yacute -20
KPX W ydieresis -20
KPX Y A -110
KPX Y Aacute -110
KPX Y Abreve -110
KPX Y Acircumflex -110
KPX Y Adieresis -110
KPX Y Agrave -110
KPX Y Amacron -110
KPX Y Aogonek -110
KPX Y Aring -110
KPX Y Atilde -110
KPX Y O -70
KPX Y Oacute -70
KPX Y Ocircumflex -70
KPX Y Odieresis -70
KPX Y Ograve -70
KPX Y Ohungarumlaut -70
KPX Y Omacron -70
KPX Y Oslash -70
KPX Y Otilde -70
KPX Y a -90
KPX Y aacute -90
KPX Y abreve -90
KPX Y acircumflex -90
KPX Y adieresis -90
KPX Y agrave -90
KPX Y amacron -90
KPX Y aogonek -90
KPX Y aring -90
KPX Y atilde -90
KPX Y colon -50
KPX Y comma -100
KPX Y e -80
KPX Y eacute -80
KPX Y ecaron -80
KPX Y ecircumflex -80
KPX Y edieresis -80
KPX Y edotaccent -80
KPX Y egrave -80
KPX Y emacron -80
KPX Y eogonek -80
KPX Y o -100
KPX Y oacute -100
KPX Y ocircumflex -100
KPX Y odieresis -100
KPX Y ograve -100
KPX Y ohungarumlaut -100
KPX Y omacron -100
KPX Y oslash -100
KPX Y otilde -100
KPX Y period -100
KPX Y semicolon -50
KPX Y u -100
KPX Y uacute -100
KPX Y ucircumflex -100
KPX Y udieresis -100
KPX Y ugrave -100
KPX Y uhungarumlaut -100
KPX Y umacron -100
KPX Y uogonek -100
KPX Y uring -100
KPX Yacute A -110
KPX Yacute Aacute -110
KPX Yacute Abreve -110
KPX Yacute Acircumflex -110
KPX Yacute Adieresis -110
KPX Yacute Agrave -110
KPX Yacute Amacron -110
KPX Yacute Aogonek -110
KPX Yacute Aring -110
KPX Yacute Atilde -110
KPX Yacute O -70
KPX Yacute Oacute -70
KPX Yacute Ocircumflex -70
KPX Yacute Odieresis -70
KPX Yacute Ograve -70
KPX Yacute Ohungarumlaut -70
KPX Yacute Omacron -70
KPX Yacute Oslash -70
KPX Yacute Otilde -70
KPX Yacute a -90
KPX Yacute aacute -90
KPX Yacute abreve -90
KPX Yacute acircumflex -90
KPX Yacute adieresis -90
KPX Yacute agrave -90
KPX Yacute amacron -90
KPX Yacute aogonek -90
KPX Yacute aring -90
KPX Yacute atilde -90
KPX Yacute colon -50
KPX Yacute comma -100
KPX Yacute e -80
KPX Yacute eacute -80
KPX Yacute ecaron -80
KPX Yacute ecircumflex -80
KPX Yacute edieresis -80
KPX Yacute edotaccent -80
KPX Yacute egrave -80
KPX Yacute emacron -80
KPX Yacute eogonek -80
KPX Yacute o -100
KPX Yacute oacute -100
KPX Yacute ocircumflex -100
KPX Yacute odieresis -100
KPX Yacute ograve -100
KPX Yacute ohungarumlaut -100
KPX Yacute omacron -100
KPX Yacute oslash -100
KPX Yacute otilde -100
KPX Yacute period -100
KPX Yacute semicolon -50
KPX Yacute u -100
KPX Yacute uacute -100
KPX Yacute ucircumflex -100
KPX Yacute udieresis -100
KPX Yacute ugrave -100
KPX Yacute uhungarumlaut -100
KPX Yacute umacron -100
KPX Yacute uogonek -100
KPX Yacute uring -100
KPX Ydieresis A -110
KPX Ydieresis Aacute -110
KPX Ydieresis Abreve -110
KPX Ydieresis Acircumflex -110
KPX Ydieresis Adieresis -110
KPX Ydieresis Agrave -110
KPX Ydieresis Amacron -110
KPX Ydieresis Aogonek -110
KPX Ydieresis Aring -110
KPX Ydieresis Atilde -110
KPX Ydieresis O -70
KPX Ydieresis Oacute -70
KPX Ydieresis Ocircumflex -70
KPX Ydieresis Odieresis -70
KPX Ydieresis Ograve -70
KPX Ydieresis Ohungarumlaut -70
KPX Ydieresis Omacron -70
KPX Ydieresis Oslash -70
KPX Ydieresis Otilde -70
KPX Ydieresis a -90
KPX Ydieresis aacute -90
KPX Ydieresis abreve -90
KPX Ydieresis acircumflex -90
KPX Ydieresis adieresis -90
KPX Ydieresis agrave -90
KPX Ydieresis amacron -90
KPX Ydieresis aogonek -90
KPX Ydieresis aring -90
KPX Ydieresis atilde -90
KPX Ydieresis colon -50
KPX Ydieresis comma -100
KPX Ydieresis e -80
KPX Ydieresis eacute -80
KPX Ydieresis ecaron -80
KPX Ydieresis ecircumflex -80
KPX Ydieresis edieresis -80
KPX Ydieresis edotaccent -80
KPX Ydieresis egrave -80
KPX Ydieresis emacron -80
KPX Ydieresis eogonek -80
KPX Ydieresis o -100
KPX Ydieresis oacute -100
KPX Ydieresis ocircumflex -100
KPX Ydieresis odieresis -100
KPX Ydieresis ograve -100
KPX Ydieresis ohungarumlaut -100
KPX Ydieresis omacron -100
KPX Ydieresis oslash -100
KPX Ydieresis otilde -100
KPX Ydieresis period -100
KPX Ydieresis semicolon -50
KPX Ydieresis u -100
KPX Ydieresis uacute -100
KPX Ydieresis ucircumflex -100
KPX Ydieresis udieresis -100
KPX Ydieresis ugrave -100
KPX Ydieresis uhungarumlaut -100
KPX Ydieresis umacron -100
KPX Ydieresis uogonek -100
KPX Ydieresis uring -100
KPX a g -10
KPX a gbreve -10
KPX a gcommaaccent -10
KPX a v -15
KPX a w -15
KPX a y -20
KPX a yacute -20
KPX a ydieresis -20
KPX aacute g -10
KPX aacute gbreve -10
KPX aacute gcommaaccent -10
KPX aacute v -15
KPX aacute w -15
KPX aacute y -20
KPX aacute yacute -20
KPX aacute ydieresis -20
KPX abreve g -10
KPX abreve gbreve -10
KPX abreve gcommaaccent -10
KPX abreve v -15
KPX abreve w -15
KPX abreve y -20
KPX abreve yacute -20
KPX abreve ydieresis -20
KPX acircumflex g -10
KPX acircumflex gbreve -10
KPX acircumflex gcommaaccent -10
KPX acircumflex v -15
KPX acircumflex w -15
KPX acircumflex y -20
KPX acircumflex yacute -20
KPX acircumflex ydieresis -20
KPX adieresis g -10
KPX adieresis gbreve -10
KPX adieresis gcommaaccent -10
KPX adieresis v -15
KPX adieresis w -15
KPX adieresis y -20
KPX adieresis yacute -20
KPX adieresis ydieresis -20
KPX agrave g -10
KPX agrave gbreve -10
KPX agrave gcommaaccent -10
KPX agrave v -15
KPX agrave w -15
KPX agrave y -20
KPX agrave yacute -20
KPX agrave ydieresis -20
KPX amacron g -10
KPX amacron gbreve -10
KPX amacron gcommaaccent -10
KPX amacron v -15
KPX amacron w -15
KPX amacron y -20
KPX amacron yacute -20
KPX amacron ydieresis -20
KPX aogonek g -10
KPX aogonek gbreve -10
KPX aogonek gcommaaccent -10
KPX aogonek v -15
KPX aogonek w -15
KPX aogonek y -20
KPX aogonek yacute -20
KPX aogonek ydieresis -20
KPX aring g -10
KPX aring gbreve -10
KPX aring gcommaaccent -10
KPX aring v -15
KPX aring w -15
KPX aring y -20
KPX aring yacute -20
KPX aring ydieresis -20
KPX atilde g -10
KPX atilde gbreve -10
KPX atilde gcommaaccent -10
KPX atilde v -15
KPX atilde w -15
KPX atilde y -20
KPX atilde yacute -20
KPX atilde ydieresis -20
KPX b l -10
KPX b lacute -10
KPX b lcommaaccent -10
KPX b lslash -10
KPX b u -20
KPX b uacute -20
KPX b ucircumflex -20
KPX b udieresis -20
KPX b ugrave -20
KPX b uhungarumlaut -20
KPX b umacron -20
KPX b uogonek -20
KPX b uring -20
KPX b v -20
KPX b y -20
KPX b yacute -20
KPX b ydieresis -20
KPX c h -10
KPX c k -20
KPX c kcommaaccent -20
KPX c l -20
KPX c lacute -20
KPX c lcommaaccent -20
KPX c lslash -20
KPX c y -10
KPX c yacute -10
KPX c ydieresis -10
KPX cacute h -10
KPX cacute k -20
KPX cacute kcommaaccent -20
KPX cacute l -20
KPX cacute lacute -20
KPX cacute lcommaaccent -20
KPX cacute lslash -20
KPX cacute y -10
KPX cacute yacute -10
KPX cacute ydieresis -10
KPX ccaron h -10
KPX ccaron k -20
KPX ccaron kcommaaccent -20
KPX ccaron l -20
KPX ccaron lacute -20
KPX ccaron lcommaaccent -20
KPX ccaron lslash -20
KPX ccaron y -10
KPX ccaron yacute -10
KPX ccaron ydieresis -10
KPX ccedilla h -10
KPX ccedilla k -20
KPX ccedilla kcommaaccent -20
KPX ccedilla l -20
KPX ccedilla lacute -20
KPX ccedilla lcommaaccent -20
KPX ccedilla lslash -20
KPX ccedilla y -10
KPX ccedilla yacute -10
KPX ccedilla ydieresis -10
KPX colon space -40
KPX comma quotedblright -120
KPX comma quoteright -120
KPX comma space -40
KPX d d -10
KPX d dcroat -10
KPX d v -15
KPX d w -15
KPX d y -15
KPX d yacute -15
KPX d ydieresis -15
KPX dcroat d -10
KPX dcroat dcroat -10
KPX dcroat v -15
KPX dcroat w -15
KPX dcroat y -15
KPX dcroat yacute -15
KPX dcroat ydieresis -15
KPX e comma 10
KPX e period 20
KPX e v -15
KPX e w -15
KPX e x -15
KPX e y -15
KPX e yacute -15
KPX e ydieresis -15
KPX eacute comma 10
KPX eacute period 20
KPX eacute v -15
KPX eacute w -15
KPX eacute x -15
KPX eacute y -15
KPX eacute yacute -15
KPX eacute ydieresis -15
KPX ecaron comma 10
KPX ecaron period 20
KPX ecaron v -15
KPX ecaron w -15
KPX ecaron x -15
KPX ecaron y -15
KPX ecaron yacute -15
KPX ecaron ydieresis -15
KPX ecircumflex comma 10
KPX ecircumflex period 20
KPX ecircumflex v -15
KPX ecircumflex w -15
KPX ecircumflex x -15
KPX ecircumflex y -15
KPX ecircumflex yacute -15
KPX ecircumflex ydieresis -15
KPX edieresis comma 10
KPX edieresis period 20
KPX edieresis v -15
KPX edieresis w -15
KPX edieresis x -15
KPX edieresis y -15
KPX edieresis yacute -15
KPX edieresis ydieresis -15
KPX edotaccent comma 10
KPX edotaccent period 20
KPX edotaccent v -15
KPX edotaccent w -15
KPX edotaccent x -15
KPX edotaccent y -15
KPX edotaccent yacute -15
KPX edotaccent ydieresis -15
KPX egrave comma 10
KPX egrave period 20
KPX egrave v -15
KPX egrave w -15
KPX egrave x -15
KPX egrave y -15
KPX egrave yacute -15
KPX egrave ydieresis -15
KPX emacron comma 10
KPX emacron period 20
KPX emacron v -15
KPX emacron w -15
KPX emacron x -15
KPX emacron y -15
KPX emacron yacute -15
KPX emacron ydieresis -15
KPX eogonek comma 10
KPX eogonek period 20
KPX eogonek v -15
KPX eogonek w -15
KPX eogonek x -15
KPX eogonek y -15
KPX eogonek yacute -15
KPX eogonek ydieresis -15
KPX f comma -10
KPX f e -10
KPX f eacute -10
KPX f ecaron -10
KPX f ecircumflex -10
KPX f edieresis -10
KPX f edotaccent -10
KPX f egrave -10
KPX f emacron -10
KPX f eogonek -10
KPX f o -20
KPX f oacute -20
KPX f ocircumflex -20
KPX f odieresis -20
KPX f ograve -20
KPX f ohungarumlaut -20
KPX f omacron -20
KPX f oslash -20
KPX f otilde -20
KPX f period -10
KPX f quotedblright 30
KPX f quoteright 30
KPX g e 10
KPX g eacute 10
KPX g ecaron 10
KPX g ecircumflex 10
KPX g edieresis 10
KPX g edotaccent 10
KPX g egrave 10
KPX g emacron 10
KPX g eogonek 10
KPX g g -10
KPX g gbreve -10
KPX g gcommaaccent -10
KPX gbreve e 10
KPX gbreve eacute 10
KPX gbreve ecaron 10
KPX gbreve ecircumflex 10
KPX gbreve edieresis 10
KPX gbreve edotaccent 10
KPX gbreve egrave 10
KPX gbreve emacron 10
KPX gbreve eogonek 10
KPX gbreve g -10
KPX gbreve gbreve -10
KPX gbreve gcommaaccent -10
KPX gcommaaccent e 10
KPX gcommaaccent eacute 10
KPX gcommaaccent ecaron 10
KPX gcommaaccent ecircumflex 10
KPX gcommaaccent edieresis 10
KPX gcommaaccent edotaccent 10
KPX gcommaaccent egrave 10
KPX gcommaaccent emacron 10
KPX gcommaaccent eogonek 10
KPX gcommaaccent g -10
KPX gcommaaccent gbreve -10
KPX gcommaaccent gcommaaccent -10
KPX h y -20
KPX h yacute -20
KPX h ydieresis -20
KPX k o -15
KPX k oacute -15
KPX k ocircumflex -15
KPX k odieresis -15
KPX k ograve -15
KPX k ohungarumlaut -15
KPX k omacron -15
KPX k oslash -15
KPX k otilde -15
KPX kcommaaccent o -15
KPX kcommaaccent oacute -15
KPX kcommaaccent ocircumflex -15
KPX kcommaaccent odieresis -15
KPX kcommaaccent ograve -15
KPX kcommaaccent ohungarumlaut -15
KPX kcommaaccent omacron -15
KPX kcommaaccent oslash -15
KPX kcommaaccent otilde -15
KPX l w -15
KPX l y -15
KPX l yacute -15
KPX l ydieresis -15
KPX lacute w -15
KPX lacute y -15
KPX lacute yacute -15
KPX lacute ydieresis -15
KPX lcommaaccent w -15
KPX lcommaaccent y -15
KPX lcommaaccent yacute -15
KPX lcommaaccent ydieresis -15
KPX lslash w -15
KPX lslash y -15
KPX lslash yacute -15
KPX lslash ydieresis -15
KPX m u -20
KPX m uacute -20
KPX m ucircumflex -20
KPX m udieresis -20
KPX m ugrave -20
KPX m uhungarumlaut -20
KPX m umacron -20
KPX m uogonek -20
KPX m uring -20
KPX m y -30
KPX m yacute -30
KPX m ydieresis -30
KPX n u -10
KPX n uacute -10
KPX n ucircumflex -10
KPX n udieresis -10
KPX n ugrave -10
KPX n uhungarumlaut -10
KPX n umacron -10
KPX n uogonek -10
KPX n uring -10
KPX n v -40
KPX n y -20
KPX n yacute -20
KPX n ydieresis -20
KPX nacute u -10
KPX nacute uacute -10
KPX nacute ucircumflex -10
KPX nacute udieresis -10
KPX nacute ugrave -10
KPX nacute uhungarumlaut -10
KPX nacute umacron -10
KPX nacute uogonek -10
KPX nacute uring -10
KPX nacute v -40
KPX nacute y -20
KPX nacute yacute -20
KPX nacute ydieresis -20
KPX ncaron u -10
KPX ncaron uacute -10
KPX ncaron ucircumflex -10
KPX ncaron udieresis -10
KPX ncaron ugrave -10
KPX ncaron uhungarumlaut -10
KPX ncaron umacron -10
KPX ncaron uogonek -10
KPX ncaron uring -10
KPX ncaron v -40
KPX ncaron y -20
KPX ncaron yacute -20
KPX ncaron ydieresis -20
KPX ncommaaccent u -10
KPX ncommaaccent uacute -10
KPX ncommaaccent ucircumflex -10
KPX ncommaaccent udieresis -10
KPX ncommaaccent ugrave -10
KPX ncommaaccent uhungarumlaut -10
KPX ncommaaccent umacron -10
KPX ncommaaccent uogonek -10
KPX ncommaaccent uring -10
KPX ncommaaccent v -40
KPX ncommaaccent y -20
KPX ncommaaccent yacute -20
KPX ncommaaccent ydieresis -20
KPX ntilde u -10
KPX ntilde uacute -10
KPX ntilde ucircumflex -10
KPX ntilde udieresis -10
KPX ntilde ugrave -10
KPX ntilde uhungarumlaut -10
KPX ntilde umacron -10
KPX ntilde uogonek -10
KPX ntilde uring -10
KPX ntilde v -40
KPX ntilde y -20
KPX ntilde yacute -20
KPX ntilde ydieresis -20
KPX o v -20
KPX o w -15
KPX o x -30
KPX o y -20
KPX o yacute -20
KPX o ydieresis -20
KPX oacute v -20
KPX oacute w -15
KPX oacute x -30
KPX oacute y -20
KPX oacute yacute -20
KPX oacute ydieresis -20
KPX ocircumflex v -20
KPX ocircumflex w -15
KPX ocircumflex x -30
KPX ocircumflex y -20
KPX ocircumflex yacute -20
KPX ocircumflex ydieresis -20
KPX odieresis v -20
KPX odieresis w -15
KPX odieresis x -30
KPX odieresis y -20
KPX odieresis yacute -20
KPX odieresis ydieresis -20
KPX ograve v -20
KPX ograve w -15
KPX ograve x -30
KPX ograve y -20
KPX ograve yacute -20
KPX ograve ydieresis -20
KPX ohungarumlaut v -20
KPX ohungarumlaut w -15
KPX ohungarumlaut x -30
KPX ohungarumlaut y -20
KPX ohungarumlaut yacute -20
KPX ohungarumlaut ydieresis -20
KPX omacron v -20
KPX omacron w -15
KPX omacron x -30
KPX omacron y -20
KPX omacron yacute -20
KPX omacron ydieresis -20
KPX oslash v -20
KPX oslash w -15
KPX oslash x -30
KPX oslash y -20
KPX oslash yacute -20
KPX oslash ydieresis -20
KPX otilde v -20
KPX otilde w -15
KPX otilde x -30
KPX otilde y -20
KPX otilde yacute -20
KPX otilde ydieresis -20
KPX p y -15
KPX p yacute -15
KPX p ydieresis -15
KPX period quotedblright -120
KPX period quoteright -120
KPX period space -40
KPX quotedblright space -80
KPX quoteleft quoteleft -46
KPX quoteright d -80
KPX quoteright dcroat -80
KPX quoteright l -20
KPX quoteright lacute -20
KPX quoteright lcommaaccent -20
KPX quoteright lslash -20
KPX quoteright quoteright -46
KPX quoteright r -40
KPX quoteright racute -40
KPX quoteright rcaron -40
KPX quoteright rcommaaccent -40
KPX quoteright s -60
KPX quoteright sacute -60
KPX quoteright scaron -60
KPX quoteright scedilla -60
KPX quoteright scommaaccent -60
KPX quoteright space -80
KPX quoteright v -20
KPX r c -20
KPX r cacute -20
KPX r ccaron -20
KPX r ccedilla -20
KPX r comma -60
KPX r d -20
KPX r dcroat -20
KPX r g -15
KPX r gbreve -15
KPX r gcommaaccent -15
KPX r hyphen -20
KPX r o -20
KPX r oacute -20
KPX r ocircumflex -20
KPX r odieresis -20
KPX r ograve -20
KPX r ohungarumlaut -20
KPX r omacron -20
KPX r oslash -20
KPX r otilde -20
KPX r period -60
KPX r q -20
KPX r s -15
KPX r sacute -15
KPX r scaron -15
KPX r scedilla -15
KPX r scommaaccent -15
KPX r t 20
KPX r tcommaaccent 20
KPX r v 10
KPX r y 10
KPX r yacute 10
KPX r ydieresis 10
KPX racute c -20
KPX racute cacute -20
KPX racute ccaron -20
KPX racute ccedilla -20
KPX racute comma -60
KPX racute d -20
KPX racute dcroat -20
KPX racute g -15
KPX racute gbreve -15
KPX racute gcommaaccent -15
KPX racute hyphen -20
KPX racute o -20
KPX racute oacute -20
KPX racute ocircumflex -20
KPX racute odieresis -20
KPX racute ograve -20
KPX racute ohungarumlaut -20
KPX racute omacron -20
KPX racute oslash -20
KPX racute otilde -20
KPX racute period -60
KPX racute q -20
KPX racute s -15
KPX racute sacute -15
KPX racute scaron -15
KPX racute scedilla -15
KPX racute scommaaccent -15
KPX racute t 20
KPX racute tcommaaccent 20
KPX racute v 10
KPX racute y 10
KPX racute yacute 10
KPX racute ydieresis 10
KPX rcaron c -20
KPX rcaron cacute -20
KPX rcaron ccaron -20
KPX rcaron ccedilla -20
KPX rcaron comma -60
KPX rcaron d -20
KPX rcaron dcroat -20
KPX rcaron g -15
KPX rcaron gbreve -15
KPX rcaron gcommaaccent -15
KPX rcaron hyphen -20
KPX rcaron o -20
KPX rcaron oacute -20
KPX rcaron ocircumflex -20
KPX rcaron odieresis -20
KPX rcaron ograve -20
KPX rcaron ohungarumlaut -20
KPX rcaron omacron -20
KPX rcaron oslash -20
KPX rcaron otilde -20
KPX rcaron period -60
KPX rcaron q -20
KPX rcaron s -15
KPX rcaron sacute -15
KPX rcaron scaron -15
KPX rcaron scedilla -15
KPX rcaron scommaaccent -15
KPX rcaron t 20
KPX rcaron tcommaaccent 20
KPX rcaron v 10
KPX rcaron y 10
KPX rcaron yacute 10
KPX rcaron ydieresis 10
KPX rcommaaccent c -20
KPX rcommaaccent cacute -20
KPX rcommaaccent ccaron -20
KPX rcommaaccent ccedilla -20
KPX rcommaaccent comma -60
KPX rcommaaccent d -20
KPX rcommaaccent dcroat -20
KPX rcommaaccent g -15
KPX rcommaaccent gbreve -15
KPX rcommaaccent gcommaaccent -15
KPX rcommaaccent hyphen -20
KPX rcommaaccent o -20
KPX rcommaaccent oacute -20
KPX rcommaaccent ocircumflex -20
KPX rcommaaccent odieresis -20
KPX rcommaaccent ograve -20
KPX rcommaaccent ohungarumlaut -20
KPX rcommaaccent omacron -20
KPX rcommaaccent oslash -20
KPX rcommaaccent otilde -20
KPX rcommaaccent period -60
KPX rcommaaccent q -20
KPX rcommaaccent s -15
KPX rcommaaccent sacute -15
KPX rcommaaccent scaron -15
KPX rcommaaccent scedilla -15
KPX rcommaaccent scommaaccent -15
KPX rcommaaccent t 20
KPX rcommaaccent tcommaaccent 20
KPX rcommaaccent v 10
KPX rcommaaccent y 10
KPX rcommaaccent yacute 10
KPX rcommaaccent ydieresis 10
KPX s w -15
KPX sacute w -15
KPX scaron w -15
KPX scedilla w -15
KPX scommaaccent w -15
KPX semicolon space -40
KPX space T -100
KPX space Tcaron -100
KPX space Tcommaaccent -100
KPX space V -80
KPX space W -80
KPX space Y -120
KPX space Yacute -120
KPX space Ydieresis -120
KPX space quotedblleft -80
KPX space quoteleft -60
KPX v a -20
KPX v aacute -20
KPX v abreve -20
KPX v acircumflex -20
KPX v adieresis -20
KPX v agrave -20
KPX v amacron -20
KPX v aogonek -20
KPX v aring -20
KPX v atilde -20
KPX v comma -80
KPX v o -30
KPX v oacute -30
KPX v ocircumflex -30
KPX v odieresis -30
KPX v ograve -30
KPX v ohungarumlaut -30
KPX v omacron -30
KPX v oslash -30
KPX v otilde -30
KPX v period -80
KPX w comma -40
KPX w o -20
KPX w oacute -20
KPX w ocircumflex -20
KPX w odieresis -20
KPX w ograve -20
KPX w ohungarumlaut -20
KPX w omacron -20
KPX w oslash -20
KPX w otilde -20
KPX w period -40
KPX x e -10
KPX x eacute -10
KPX x ecaron -10
KPX x ecircumflex -10
KPX x edieresis -10
KPX x edotaccent -10
KPX x egrave -10
KPX x emacron -10
KPX x eogonek -10
KPX y a -30
KPX y aacute -30
KPX y abreve -30
KPX y acircumflex -30
KPX y adieresis -30
KPX y agrave -30
KPX y amacron -30
KPX y aogonek -30
KPX y aring -30
KPX y atilde -30
KPX y comma -80
KPX y e -10
KPX y eacute -10
KPX y ecaron -10
KPX y ecircumflex -10
KPX y edieresis -10
KPX y edotaccent -10
KPX y egrave -10
KPX y emacron -10
KPX y eogonek -10
KPX y o -25
KPX y oacute -25
KPX y ocircumflex -25
KPX y odieresis -25
KPX y ograve -25
KPX y ohungarumlaut -25
KPX y omacron -25
KPX y oslash -25
KPX y otilde -25
KPX y period -80
KPX yacute a -30
KPX yacute aacute -30
KPX yacute abreve -30
KPX yacute acircumflex -30
KPX yacute adieresis -30
KPX yacute agrave -30
KPX yacute amacron -30
KPX yacute aogonek -30
KPX yacute aring -30
KPX yacute atilde -30
KPX yacute comma -80
KPX yacute e -10
KPX yacute eacute -10
KPX yacute ecaron -10
KPX yacute ecircumflex -10
KPX yacute edieresis -10
KPX yacute edotaccent -10
KPX yacute egrave -10
KPX yacute emacron -10
KPX yacute eogonek -10
KPX yacute o -25
KPX yacute oacute -25
KPX yacute ocircumflex -25
KPX yacute odieresis -25
KPX yacute ograve -25
KPX yacute ohungarumlaut -25
KPX yacute omacron -25
KPX yacute oslash -25
KPX yacute otilde -25
KPX yacute period -80
KPX ydieresis a -30
KPX ydieresis aacute -30
KPX ydieresis abreve -30
KPX ydieresis acircumflex -30
KPX ydieresis adieresis -30
KPX ydieresis agrave -30
KPX ydieresis amacron -30
KPX ydieresis aogonek -30
KPX ydieresis aring -30
KPX ydieresis atilde -30
KPX ydieresis comma -80
KPX ydieresis e -10
KPX ydieresis eacute -10
KPX ydieresis ecaron -10
KPX ydieresis ecircumflex -10
KPX ydieresis edieresis -10
KPX ydieresis edotaccent -10
KPX ydieresis egrave -10
KPX ydieresis emacron -10
KPX ydieresis eogonek -10
KPX ydieresis o -25
KPX ydieresis oacute -25
KPX ydieresis ocircumflex -25
KPX ydieresis odieresis -25
KPX ydieresis ograve -25
KPX ydieresis ohungarumlaut -25
KPX ydieresis omacron -25
KPX ydieresis oslash -25
KPX ydieresis otilde -25
KPX ydieresis period -80
KPX z e 10
KPX z eacute 10
KPX z ecaron 10
KPX z ecircumflex 10
KPX z edieresis 10
KPX z edotaccent 10
KPX z egrave 10
KPX z emacron 10
KPX z eogonek 10
KPX zacute e 10
KPX zacute eacute 10
KPX zacute ecaron 10
KPX zacute ecircumflex 10
KPX zacute edieresis 10
KPX zacute edotaccent 10
KPX zacute egrave 10
KPX zacute emacron 10
KPX zacute eogonek 10
KPX zcaron e 10
KPX zcaron eacute 10
KPX zcaron ecaron 10
KPX zcaron ecircumflex 10
KPX zcaron edieresis 10
KPX zcaron edotaccent 10
KPX zcaron egrave 10
KPX zcaron emacron 10
KPX zcaron eogonek 10
KPX zdotaccent e 10
KPX zdotaccent eacute 10
KPX zdotaccent ecaron 10
KPX zdotaccent ecircumflex 10
KPX zdotaccent edieresis 10
KPX zdotaccent edotaccent 10
KPX zdotaccent egrave 10
KPX zdotaccent emacron 10
KPX zdotaccent eogonek 10
EndKernPairs
EndKernData
EndFontMetrics
'
%
classmethod: StandardFont
helveticaBoldOblique
	"from http://www.adobe.com/devnet/font.html "

	<font: #'Helvetica-BoldOblique'>
	^self
		windowsName: 'Arial'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.
Comment Creation Date: Thu May  1 12:45:12 1997
Comment UniqueID 43053
Comment VMusage 14482 68586
FontName Helvetica-BoldOblique
FullName Helvetica Bold Oblique
FamilyName Helvetica
Weight Bold
ItalicAngle -12
IsFixedPitch false
CharacterSet ExtendedRoman
FontBBox -174 -228 1114 962 
UnderlinePosition -100
UnderlineThickness 50
Version 002.000
Notice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.
EncodingScheme AdobeStandardEncoding
CapHeight 718
XHeight 532
Ascender 718
Descender -207
StdHW 118
StdVW 140
StartCharMetrics 315
C 32 ; WX 278 ; N space ; B 0 0 0 0 ;
C 33 ; WX 333 ; N exclam ; B 94 0 397 718 ;
C 34 ; WX 474 ; N quotedbl ; B 193 447 529 718 ;
C 35 ; WX 556 ; N numbersign ; B 60 0 644 698 ;
C 36 ; WX 556 ; N dollar ; B 67 -115 622 775 ;
C 37 ; WX 889 ; N percent ; B 136 -19 901 710 ;
C 38 ; WX 722 ; N ampersand ; B 89 -19 732 718 ;
C 39 ; WX 278 ; N quoteright ; B 167 445 362 718 ;
C 40 ; WX 333 ; N parenleft ; B 76 -208 470 734 ;
C 41 ; WX 333 ; N parenright ; B -25 -208 369 734 ;
C 42 ; WX 389 ; N asterisk ; B 146 387 481 718 ;
C 43 ; WX 584 ; N plus ; B 82 0 610 506 ;
C 44 ; WX 278 ; N comma ; B 28 -168 245 146 ;
C 45 ; WX 333 ; N hyphen ; B 73 215 379 345 ;
C 46 ; WX 278 ; N period ; B 64 0 245 146 ;
C 47 ; WX 278 ; N slash ; B -37 -19 468 737 ;
C 48 ; WX 556 ; N zero ; B 86 -19 617 710 ;
C 49 ; WX 556 ; N one ; B 173 0 529 710 ;
C 50 ; WX 556 ; N two ; B 26 0 619 710 ;
C 51 ; WX 556 ; N three ; B 65 -19 608 710 ;
C 52 ; WX 556 ; N four ; B 60 0 598 710 ;
C 53 ; WX 556 ; N five ; B 64 -19 636 698 ;
C 54 ; WX 556 ; N six ; B 85 -19 619 710 ;
C 55 ; WX 556 ; N seven ; B 125 0 676 698 ;
C 56 ; WX 556 ; N eight ; B 69 -19 616 710 ;
C 57 ; WX 556 ; N nine ; B 78 -19 615 710 ;
C 58 ; WX 333 ; N colon ; B 92 0 351 512 ;
C 59 ; WX 333 ; N semicolon ; B 56 -168 351 512 ;
C 60 ; WX 584 ; N less ; B 82 -8 655 514 ;
C 61 ; WX 584 ; N equal ; B 58 87 633 419 ;
C 62 ; WX 584 ; N greater ; B 36 -8 609 514 ;
C 63 ; WX 611 ; N question ; B 165 0 671 727 ;
C 64 ; WX 975 ; N at ; B 186 -19 954 737 ;
C 65 ; WX 722 ; N A ; B 20 0 702 718 ;
C 66 ; WX 722 ; N B ; B 76 0 764 718 ;
C 67 ; WX 722 ; N C ; B 107 -19 789 737 ;
C 68 ; WX 722 ; N D ; B 76 0 777 718 ;
C 69 ; WX 667 ; N E ; B 76 0 757 718 ;
C 70 ; WX 611 ; N F ; B 76 0 740 718 ;
C 71 ; WX 778 ; N G ; B 108 -19 817 737 ;
C 72 ; WX 722 ; N H ; B 71 0 804 718 ;
C 73 ; WX 278 ; N I ; B 64 0 367 718 ;
C 74 ; WX 556 ; N J ; B 60 -18 637 718 ;
C 75 ; WX 722 ; N K ; B 87 0 858 718 ;
C 76 ; WX 611 ; N L ; B 76 0 611 718 ;
C 77 ; WX 833 ; N M ; B 69 0 918 718 ;
C 78 ; WX 722 ; N N ; B 69 0 807 718 ;
C 79 ; WX 778 ; N O ; B 107 -19 823 737 ;
C 80 ; WX 667 ; N P ; B 76 0 738 718 ;
C 81 ; WX 778 ; N Q ; B 107 -52 823 737 ;
C 82 ; WX 722 ; N R ; B 76 0 778 718 ;
C 83 ; WX 667 ; N S ; B 81 -19 718 737 ;
C 84 ; WX 611 ; N T ; B 140 0 751 718 ;
C 85 ; WX 722 ; N U ; B 116 -19 804 718 ;
C 86 ; WX 667 ; N V ; B 172 0 801 718 ;
C 87 ; WX 944 ; N W ; B 169 0 1082 718 ;
C 88 ; WX 667 ; N X ; B 14 0 791 718 ;
C 89 ; WX 667 ; N Y ; B 168 0 806 718 ;
C 90 ; WX 611 ; N Z ; B 25 0 737 718 ;
C 91 ; WX 333 ; N bracketleft ; B 21 -196 462 722 ;
C 92 ; WX 278 ; N backslash ; B 124 -19 307 737 ;
C 93 ; WX 333 ; N bracketright ; B -18 -196 423 722 ;
C 94 ; WX 584 ; N asciicircum ; B 131 323 591 698 ;
C 95 ; WX 556 ; N underscore ; B -27 -125 540 -75 ;
C 96 ; WX 278 ; N quoteleft ; B 165 454 361 727 ;
C 97 ; WX 556 ; N a ; B 55 -14 583 546 ;
C 98 ; WX 611 ; N b ; B 61 -14 645 718 ;
C 99 ; WX 556 ; N c ; B 79 -14 599 546 ;
C 100 ; WX 611 ; N d ; B 82 -14 704 718 ;
C 101 ; WX 556 ; N e ; B 70 -14 593 546 ;
C 102 ; WX 333 ; N f ; B 87 0 469 727 ; L i fi ; L l fl ;
C 103 ; WX 611 ; N g ; B 38 -217 666 546 ;
C 104 ; WX 611 ; N h ; B 65 0 629 718 ;
C 105 ; WX 278 ; N i ; B 69 0 363 725 ;
C 106 ; WX 278 ; N j ; B -42 -214 363 725 ;
C 107 ; WX 556 ; N k ; B 69 0 670 718 ;
C 108 ; WX 278 ; N l ; B 69 0 362 718 ;
C 109 ; WX 889 ; N m ; B 64 0 909 546 ;
C 110 ; WX 611 ; N n ; B 65 0 629 546 ;
C 111 ; WX 611 ; N o ; B 82 -14 643 546 ;
C 112 ; WX 611 ; N p ; B 18 -207 645 546 ;
C 113 ; WX 611 ; N q ; B 80 -207 665 546 ;
C 114 ; WX 389 ; N r ; B 64 0 489 546 ;
C 115 ; WX 556 ; N s ; B 63 -14 584 546 ;
C 116 ; WX 333 ; N t ; B 100 -6 422 676 ;
C 117 ; WX 611 ; N u ; B 98 -14 658 532 ;
C 118 ; WX 556 ; N v ; B 126 0 656 532 ;
C 119 ; WX 778 ; N w ; B 123 0 882 532 ;
C 120 ; WX 556 ; N x ; B 15 0 648 532 ;
C 121 ; WX 556 ; N y ; B 42 -214 652 532 ;
C 122 ; WX 500 ; N z ; B 20 0 583 532 ;
C 123 ; WX 389 ; N braceleft ; B 94 -196 518 722 ;
C 124 ; WX 280 ; N bar ; B 36 -225 361 775 ;
C 125 ; WX 389 ; N braceright ; B -18 -196 407 722 ;
C 126 ; WX 584 ; N asciitilde ; B 115 163 577 343 ;
C 161 ; WX 333 ; N exclamdown ; B 50 -186 353 532 ;
C 162 ; WX 556 ; N cent ; B 79 -118 599 628 ;
C 163 ; WX 556 ; N sterling ; B 50 -16 635 718 ;
C 164 ; WX 167 ; N fraction ; B -174 -19 487 710 ;
C 165 ; WX 556 ; N yen ; B 60 0 713 698 ;
C 166 ; WX 556 ; N florin ; B -50 -210 669 737 ;
C 167 ; WX 556 ; N section ; B 61 -184 598 727 ;
C 168 ; WX 556 ; N currency ; B 27 76 680 636 ;
C 169 ; WX 238 ; N quotesingle ; B 165 447 321 718 ;
C 170 ; WX 500 ; N quotedblleft ; B 160 454 588 727 ;
C 171 ; WX 556 ; N guillemotleft ; B 135 76 571 484 ;
C 172 ; WX 333 ; N guilsinglleft ; B 130 76 353 484 ;
C 173 ; WX 333 ; N guilsinglright ; B 99 76 322 484 ;
C 174 ; WX 611 ; N fi ; B 87 0 696 727 ;
C 175 ; WX 611 ; N fl ; B 87 0 695 727 ;
C 177 ; WX 556 ; N endash ; B 48 227 627 333 ;
C 178 ; WX 556 ; N dagger ; B 118 -171 626 718 ;
C 179 ; WX 556 ; N daggerdbl ; B 46 -171 628 718 ;
C 180 ; WX 278 ; N periodcentered ; B 110 172 276 334 ;
C 182 ; WX 556 ; N paragraph ; B 98 -191 688 700 ;
C 183 ; WX 350 ; N bullet ; B 83 194 420 524 ;
C 184 ; WX 278 ; N quotesinglbase ; B 41 -146 236 127 ;
C 185 ; WX 500 ; N quotedblbase ; B 36 -146 463 127 ;
C 186 ; WX 500 ; N quotedblright ; B 162 445 589 718 ;
C 187 ; WX 556 ; N guillemotright ; B 104 76 540 484 ;
C 188 ; WX 1000 ; N ellipsis ; B 92 0 939 146 ;
C 189 ; WX 1000 ; N perthousand ; B 76 -19 1038 710 ;
C 191 ; WX 611 ; N questiondown ; B 53 -195 559 532 ;
C 193 ; WX 333 ; N grave ; B 136 604 353 750 ;
C 194 ; WX 333 ; N acute ; B 236 604 515 750 ;
C 195 ; WX 333 ; N circumflex ; B 118 604 471 750 ;
C 196 ; WX 333 ; N tilde ; B 113 610 507 737 ;
C 197 ; WX 333 ; N macron ; B 122 604 483 678 ;
C 198 ; WX 333 ; N breve ; B 156 604 494 750 ;
C 199 ; WX 333 ; N dotaccent ; B 235 614 385 729 ;
C 200 ; WX 333 ; N dieresis ; B 137 614 482 729 ;
C 202 ; WX 333 ; N ring ; B 200 568 420 776 ;
C 203 ; WX 333 ; N cedilla ; B -37 -228 220 0 ;
C 205 ; WX 333 ; N hungarumlaut ; B 137 604 645 750 ;
C 206 ; WX 333 ; N ogonek ; B 41 -228 264 0 ;
C 207 ; WX 333 ; N caron ; B 149 604 502 750 ;
C 208 ; WX 1000 ; N emdash ; B 48 227 1071 333 ;
C 225 ; WX 1000 ; N AE ; B 5 0 1100 718 ;
C 227 ; WX 370 ; N ordfeminine ; B 125 401 465 737 ;
C 232 ; WX 611 ; N Lslash ; B 34 0 611 718 ;
C 233 ; WX 778 ; N Oslash ; B 35 -27 894 745 ;
C 234 ; WX 1000 ; N OE ; B 99 -19 1114 737 ;
C 235 ; WX 365 ; N ordmasculine ; B 123 401 485 737 ;
C 241 ; WX 889 ; N ae ; B 56 -14 923 546 ;
C 245 ; WX 278 ; N dotlessi ; B 69 0 322 532 ;
C 248 ; WX 278 ; N lslash ; B 40 0 407 718 ;
C 249 ; WX 611 ; N oslash ; B 22 -29 701 560 ;
C 250 ; WX 944 ; N oe ; B 82 -14 977 546 ;
C 251 ; WX 611 ; N germandbls ; B 69 -14 657 731 ;
C -1 ; WX 278 ; N Idieresis ; B 64 0 494 915 ;
C -1 ; WX 556 ; N eacute ; B 70 -14 627 750 ;
C -1 ; WX 556 ; N abreve ; B 55 -14 606 750 ;
C -1 ; WX 611 ; N uhungarumlaut ; B 98 -14 784 750 ;
C -1 ; WX 556 ; N ecaron ; B 70 -14 614 750 ;
C -1 ; WX 667 ; N Ydieresis ; B 168 0 806 915 ;
C -1 ; WX 584 ; N divide ; B 82 -42 610 548 ;
C -1 ; WX 667 ; N Yacute ; B 168 0 806 936 ;
C -1 ; WX 722 ; N Acircumflex ; B 20 0 706 936 ;
C -1 ; WX 556 ; N aacute ; B 55 -14 627 750 ;
C -1 ; WX 722 ; N Ucircumflex ; B 116 -19 804 936 ;
C -1 ; WX 556 ; N yacute ; B 42 -214 652 750 ;
C -1 ; WX 556 ; N scommaaccent ; B 63 -228 584 546 ;
C -1 ; WX 556 ; N ecircumflex ; B 70 -14 593 750 ;
C -1 ; WX 722 ; N Uring ; B 116 -19 804 962 ;
C -1 ; WX 722 ; N Udieresis ; B 116 -19 804 915 ;
C -1 ; WX 556 ; N aogonek ; B 55 -224 583 546 ;
C -1 ; WX 722 ; N Uacute ; B 116 -19 804 936 ;
C -1 ; WX 611 ; N uogonek ; B 98 -228 658 532 ;
C -1 ; WX 667 ; N Edieresis ; B 76 0 757 915 ;
C -1 ; WX 722 ; N Dcroat ; B 62 0 777 718 ;
C -1 ; WX 250 ; N commaaccent ; B 16 -228 188 -50 ;
C -1 ; WX 737 ; N copyright ; B 56 -19 835 737 ;
C -1 ; WX 667 ; N Emacron ; B 76 0 757 864 ;
C -1 ; WX 556 ; N ccaron ; B 79 -14 614 750 ;
C -1 ; WX 556 ; N aring ; B 55 -14 583 776 ;
C -1 ; WX 722 ; N Ncommaaccent ; B 69 -228 807 718 ;
C -1 ; WX 278 ; N lacute ; B 69 0 528 936 ;
C -1 ; WX 556 ; N agrave ; B 55 -14 583 750 ;
C -1 ; WX 611 ; N Tcommaaccent ; B 140 -228 751 718 ;
C -1 ; WX 722 ; N Cacute ; B 107 -19 789 936 ;
C -1 ; WX 556 ; N atilde ; B 55 -14 619 737 ;
C -1 ; WX 667 ; N Edotaccent ; B 76 0 757 915 ;
C -1 ; WX 556 ; N scaron ; B 63 -14 614 750 ;
C -1 ; WX 556 ; N scedilla ; B 63 -228 584 546 ;
C -1 ; WX 278 ; N iacute ; B 69 0 488 750 ;
C -1 ; WX 494 ; N lozenge ; B 90 0 564 745 ;
C -1 ; WX 722 ; N Rcaron ; B 76 0 778 936 ;
C -1 ; WX 778 ; N Gcommaaccent ; B 108 -228 817 737 ;
C -1 ; WX 611 ; N ucircumflex ; B 98 -14 658 750 ;
C -1 ; WX 556 ; N acircumflex ; B 55 -14 583 750 ;
C -1 ; WX 722 ; N Amacron ; B 20 0 718 864 ;
C -1 ; WX 389 ; N rcaron ; B 64 0 530 750 ;
C -1 ; WX 556 ; N ccedilla ; B 79 -228 599 546 ;
C -1 ; WX 611 ; N Zdotaccent ; B 25 0 737 915 ;
C -1 ; WX 667 ; N Thorn ; B 76 0 716 718 ;
C -1 ; WX 778 ; N Omacron ; B 107 -19 823 864 ;
C -1 ; WX 722 ; N Racute ; B 76 0 778 936 ;
C -1 ; WX 667 ; N Sacute ; B 81 -19 722 936 ;
C -1 ; WX 743 ; N dcaron ; B 82 -14 903 718 ;
C -1 ; WX 722 ; N Umacron ; B 116 -19 804 864 ;
C -1 ; WX 611 ; N uring ; B 98 -14 658 776 ;
C -1 ; WX 333 ; N threesuperior ; B 91 271 441 710 ;
C -1 ; WX 778 ; N Ograve ; B 107 -19 823 936 ;
C -1 ; WX 722 ; N Agrave ; B 20 0 702 936 ;
C -1 ; WX 722 ; N Abreve ; B 20 0 729 936 ;
C -1 ; WX 584 ; N multiply ; B 57 1 635 505 ;
C -1 ; WX 611 ; N uacute ; B 98 -14 658 750 ;
C -1 ; WX 611 ; N Tcaron ; B 140 0 751 936 ;
C -1 ; WX 494 ; N partialdiff ; B 43 -21 585 750 ;
C -1 ; WX 556 ; N ydieresis ; B 42 -214 652 729 ;
C -1 ; WX 722 ; N Nacute ; B 69 0 807 936 ;
C -1 ; WX 278 ; N icircumflex ; B 69 0 444 750 ;
C -1 ; WX 667 ; N Ecircumflex ; B 76 0 757 936 ;
C -1 ; WX 556 ; N adieresis ; B 55 -14 594 729 ;
C -1 ; WX 556 ; N edieresis ; B 70 -14 594 729 ;
C -1 ; WX 556 ; N cacute ; B 79 -14 627 750 ;
C -1 ; WX 611 ; N nacute ; B 65 0 654 750 ;
C -1 ; WX 611 ; N umacron ; B 98 -14 658 678 ;
C -1 ; WX 722 ; N Ncaron ; B 69 0 807 936 ;
C -1 ; WX 278 ; N Iacute ; B 64 0 528 936 ;
C -1 ; WX 584 ; N plusminus ; B 40 0 625 506 ;
C -1 ; WX 280 ; N brokenbar ; B 52 -150 345 700 ;
C -1 ; WX 737 ; N registered ; B 55 -19 834 737 ;
C -1 ; WX 778 ; N Gbreve ; B 108 -19 817 936 ;
C -1 ; WX 278 ; N Idotaccent ; B 64 0 397 915 ;
C -1 ; WX 600 ; N summation ; B 14 -10 670 706 ;
C -1 ; WX 667 ; N Egrave ; B 76 0 757 936 ;
C -1 ; WX 389 ; N racute ; B 64 0 543 750 ;
C -1 ; WX 611 ; N omacron ; B 82 -14 643 678 ;
C -1 ; WX 611 ; N Zacute ; B 25 0 737 936 ;
C -1 ; WX 611 ; N Zcaron ; B 25 0 737 936 ;
C -1 ; WX 549 ; N greaterequal ; B 26 0 629 704 ;
C -1 ; WX 722 ; N Eth ; B 62 0 777 718 ;
C -1 ; WX 722 ; N Ccedilla ; B 107 -228 789 737 ;
C -1 ; WX 278 ; N lcommaaccent ; B 30 -228 362 718 ;
C -1 ; WX 389 ; N tcaron ; B 100 -6 608 878 ;
C -1 ; WX 556 ; N eogonek ; B 70 -228 593 546 ;
C -1 ; WX 722 ; N Uogonek ; B 116 -228 804 718 ;
C -1 ; WX 722 ; N Aacute ; B 20 0 750 936 ;
C -1 ; WX 722 ; N Adieresis ; B 20 0 716 915 ;
C -1 ; WX 556 ; N egrave ; B 70 -14 593 750 ;
C -1 ; WX 500 ; N zacute ; B 20 0 599 750 ;
C -1 ; WX 278 ; N iogonek ; B -14 -224 363 725 ;
C -1 ; WX 778 ; N Oacute ; B 107 -19 823 936 ;
C -1 ; WX 611 ; N oacute ; B 82 -14 654 750 ;
C -1 ; WX 556 ; N amacron ; B 55 -14 595 678 ;
C -1 ; WX 556 ; N sacute ; B 63 -14 627 750 ;
C -1 ; WX 278 ; N idieresis ; B 69 0 455 729 ;
C -1 ; WX 778 ; N Ocircumflex ; B 107 -19 823 936 ;
C -1 ; WX 722 ; N Ugrave ; B 116 -19 804 936 ;
C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;
C -1 ; WX 611 ; N thorn ; B 18 -208 645 718 ;
C -1 ; WX 333 ; N twosuperior ; B 69 283 449 710 ;
C -1 ; WX 778 ; N Odieresis ; B 107 -19 823 915 ;
C -1 ; WX 611 ; N mu ; B 22 -207 658 532 ;
C -1 ; WX 278 ; N igrave ; B 69 0 326 750 ;
C -1 ; WX 611 ; N ohungarumlaut ; B 82 -14 784 750 ;
C -1 ; WX 667 ; N Eogonek ; B 76 -224 757 718 ;
C -1 ; WX 611 ; N dcroat ; B 82 -14 789 718 ;
C -1 ; WX 834 ; N threequarters ; B 99 -19 839 710 ;
C -1 ; WX 667 ; N Scedilla ; B 81 -228 718 737 ;
C -1 ; WX 400 ; N lcaron ; B 69 0 561 718 ;
C -1 ; WX 722 ; N Kcommaaccent ; B 87 -228 858 718 ;
C -1 ; WX 611 ; N Lacute ; B 76 0 611 936 ;
C -1 ; WX 1000 ; N trademark ; B 179 306 1109 718 ;
C -1 ; WX 556 ; N edotaccent ; B 70 -14 593 729 ;
C -1 ; WX 278 ; N Igrave ; B 64 0 367 936 ;
C -1 ; WX 278 ; N Imacron ; B 64 0 496 864 ;
C -1 ; WX 611 ; N Lcaron ; B 76 0 643 718 ;
C -1 ; WX 834 ; N onehalf ; B 132 -19 858 710 ;
C -1 ; WX 549 ; N lessequal ; B 29 0 676 704 ;
C -1 ; WX 611 ; N ocircumflex ; B 82 -14 643 750 ;
C -1 ; WX 611 ; N ntilde ; B 65 0 646 737 ;
C -1 ; WX 722 ; N Uhungarumlaut ; B 116 -19 880 936 ;
C -1 ; WX 667 ; N Eacute ; B 76 0 757 936 ;
C -1 ; WX 556 ; N emacron ; B 70 -14 595 678 ;
C -1 ; WX 611 ; N gbreve ; B 38 -217 666 750 ;
C -1 ; WX 834 ; N onequarter ; B 132 -19 806 710 ;
C -1 ; WX 667 ; N Scaron ; B 81 -19 718 936 ;
C -1 ; WX 667 ; N Scommaaccent ; B 81 -228 718 737 ;
C -1 ; WX 778 ; N Ohungarumlaut ; B 107 -19 908 936 ;
C -1 ; WX 400 ; N degree ; B 175 426 467 712 ;
C -1 ; WX 611 ; N ograve ; B 82 -14 643 750 ;
C -1 ; WX 722 ; N Ccaron ; B 107 -19 789 936 ;
C -1 ; WX 611 ; N ugrave ; B 98 -14 658 750 ;
C -1 ; WX 549 ; N radical ; B 112 -46 689 850 ;
C -1 ; WX 722 ; N Dcaron ; B 76 0 777 936 ;
C -1 ; WX 389 ; N rcommaaccent ; B 26 -228 489 546 ;
C -1 ; WX 722 ; N Ntilde ; B 69 0 807 923 ;
C -1 ; WX 611 ; N otilde ; B 82 -14 646 737 ;
C -1 ; WX 722 ; N Rcommaaccent ; B 76 -228 778 718 ;
C -1 ; WX 611 ; N Lcommaaccent ; B 76 -228 611 718 ;
C -1 ; WX 722 ; N Atilde ; B 20 0 741 923 ;
C -1 ; WX 722 ; N Aogonek ; B 20 -224 702 718 ;
C -1 ; WX 722 ; N Aring ; B 20 0 702 962 ;
C -1 ; WX 778 ; N Otilde ; B 107 -19 823 923 ;
C -1 ; WX 500 ; N zdotaccent ; B 20 0 583 729 ;
C -1 ; WX 667 ; N Ecaron ; B 76 0 757 936 ;
C -1 ; WX 278 ; N Iogonek ; B -41 -228 367 718 ;
C -1 ; WX 556 ; N kcommaaccent ; B 69 -228 670 718 ;
C -1 ; WX 584 ; N minus ; B 82 197 610 309 ;
C -1 ; WX 278 ; N Icircumflex ; B 64 0 484 936 ;
C -1 ; WX 611 ; N ncaron ; B 65 0 641 750 ;
C -1 ; WX 333 ; N tcommaaccent ; B 58 -228 422 676 ;
C -1 ; WX 584 ; N logicalnot ; B 105 108 633 419 ;
C -1 ; WX 611 ; N odieresis ; B 82 -14 643 729 ;
C -1 ; WX 611 ; N udieresis ; B 98 -14 658 729 ;
C -1 ; WX 549 ; N notequal ; B 32 -49 630 570 ;
C -1 ; WX 611 ; N gcommaaccent ; B 38 -217 666 850 ;
C -1 ; WX 611 ; N eth ; B 82 -14 670 737 ;
C -1 ; WX 500 ; N zcaron ; B 20 0 586 750 ;
C -1 ; WX 611 ; N ncommaaccent ; B 65 -228 629 546 ;
C -1 ; WX 333 ; N onesuperior ; B 148 283 388 710 ;
C -1 ; WX 278 ; N imacron ; B 69 0 429 678 ;
C -1 ; WX 556 ; N Euro ; B 0 0 0 0 ;
EndCharMetrics
StartKernData
StartKernPairs 2481
KPX A C -40
KPX A Cacute -40
KPX A Ccaron -40
KPX A Ccedilla -40
KPX A G -50
KPX A Gbreve -50
KPX A Gcommaaccent -50
KPX A O -40
KPX A Oacute -40
KPX A Ocircumflex -40
KPX A Odieresis -40
KPX A Ograve -40
KPX A Ohungarumlaut -40
KPX A Omacron -40
KPX A Oslash -40
KPX A Otilde -40
KPX A Q -40
KPX A T -90
KPX A Tcaron -90
KPX A Tcommaaccent -90
KPX A U -50
KPX A Uacute -50
KPX A Ucircumflex -50
KPX A Udieresis -50
KPX A Ugrave -50
KPX A Uhungarumlaut -50
KPX A Umacron -50
KPX A Uogonek -50
KPX A Uring -50
KPX A V -80
KPX A W -60
KPX A Y -110
KPX A Yacute -110
KPX A Ydieresis -110
KPX A u -30
KPX A uacute -30
KPX A ucircumflex -30
KPX A udieresis -30
KPX A ugrave -30
KPX A uhungarumlaut -30
KPX A umacron -30
KPX A uogonek -30
KPX A uring -30
KPX A v -40
KPX A w -30
KPX A y -30
KPX A yacute -30
KPX A ydieresis -30
KPX Aacute C -40
KPX Aacute Cacute -40
KPX Aacute Ccaron -40
KPX Aacute Ccedilla -40
KPX Aacute G -50
KPX Aacute Gbreve -50
KPX Aacute Gcommaaccent -50
KPX Aacute O -40
KPX Aacute Oacute -40
KPX Aacute Ocircumflex -40
KPX Aacute Odieresis -40
KPX Aacute Ograve -40
KPX Aacute Ohungarumlaut -40
KPX Aacute Omacron -40
KPX Aacute Oslash -40
KPX Aacute Otilde -40
KPX Aacute Q -40
KPX Aacute T -90
KPX Aacute Tcaron -90
KPX Aacute Tcommaaccent -90
KPX Aacute U -50
KPX Aacute Uacute -50
KPX Aacute Ucircumflex -50
KPX Aacute Udieresis -50
KPX Aacute Ugrave -50
KPX Aacute Uhungarumlaut -50
KPX Aacute Umacron -50
KPX Aacute Uogonek -50
KPX Aacute Uring -50
KPX Aacute V -80
KPX Aacute W -60
KPX Aacute Y -110
KPX Aacute Yacute -110
KPX Aacute Ydieresis -110
KPX Aacute u -30
KPX Aacute uacute -30
KPX Aacute ucircumflex -30
KPX Aacute udieresis -30
KPX Aacute ugrave -30
KPX Aacute uhungarumlaut -30
KPX Aacute umacron -30
KPX Aacute uogonek -30
KPX Aacute uring -30
KPX Aacute v -40
KPX Aacute w -30
KPX Aacute y -30
KPX Aacute yacute -30
KPX Aacute ydieresis -30
KPX Abreve C -40
KPX Abreve Cacute -40
KPX Abreve Ccaron -40
KPX Abreve Ccedilla -40
KPX Abreve G -50
KPX Abreve Gbreve -50
KPX Abreve Gcommaaccent -50
KPX Abreve O -40
KPX Abreve Oacute -40
KPX Abreve Ocircumflex -40
KPX Abreve Odieresis -40
KPX Abreve Ograve -40
KPX Abreve Ohungarumlaut -40
KPX Abreve Omacron -40
KPX Abreve Oslash -40
KPX Abreve Otilde -40
KPX Abreve Q -40
KPX Abreve T -90
KPX Abreve Tcaron -90
KPX Abreve Tcommaaccent -90
KPX Abreve U -50
KPX Abreve Uacute -50
KPX Abreve Ucircumflex -50
KPX Abreve Udieresis -50
KPX Abreve Ugrave -50
KPX Abreve Uhungarumlaut -50
KPX Abreve Umacron -50
KPX Abreve Uogonek -50
KPX Abreve Uring -50
KPX Abreve V -80
KPX Abreve W -60
KPX Abreve Y -110
KPX Abreve Yacute -110
KPX Abreve Ydieresis -110
KPX Abreve u -30
KPX Abreve uacute -30
KPX Abreve ucircumflex -30
KPX Abreve udieresis -30
KPX Abreve ugrave -30
KPX Abreve uhungarumlaut -30
KPX Abreve umacron -30
KPX Abreve uogonek -30
KPX Abreve uring -30
KPX Abreve v -40
KPX Abreve w -30
KPX Abreve y -30
KPX Abreve yacute -30
KPX Abreve ydieresis -30
KPX Acircumflex C -40
KPX Acircumflex Cacute -40
KPX Acircumflex Ccaron -40
KPX Acircumflex Ccedilla -40
KPX Acircumflex G -50
KPX Acircumflex Gbreve -50
KPX Acircumflex Gcommaaccent -50
KPX Acircumflex O -40
KPX Acircumflex Oacute -40
KPX Acircumflex Ocircumflex -40
KPX Acircumflex Odieresis -40
KPX Acircumflex Ograve -40
KPX Acircumflex Ohungarumlaut -40
KPX Acircumflex Omacron -40
KPX Acircumflex Oslash -40
KPX Acircumflex Otilde -40
KPX Acircumflex Q -40
KPX Acircumflex T -90
KPX Acircumflex Tcaron -90
KPX Acircumflex Tcommaaccent -90
KPX Acircumflex U -50
KPX Acircumflex Uacute -50
KPX Acircumflex Ucircumflex -50
KPX Acircumflex Udieresis -50
KPX Acircumflex Ugrave -50
KPX Acircumflex Uhungarumlaut -50
KPX Acircumflex Umacron -50
KPX Acircumflex Uogonek -50
KPX Acircumflex Uring -50
KPX Acircumflex V -80
KPX Acircumflex W -60
KPX Acircumflex Y -110
KPX Acircumflex Yacute -110
KPX Acircumflex Ydieresis -110
KPX Acircumflex u -30
KPX Acircumflex uacute -30
KPX Acircumflex ucircumflex -30
KPX Acircumflex udieresis -30
KPX Acircumflex ugrave -30
KPX Acircumflex uhungarumlaut -30
KPX Acircumflex umacron -30
KPX Acircumflex uogonek -30
KPX Acircumflex uring -30
KPX Acircumflex v -40
KPX Acircumflex w -30
KPX Acircumflex y -30
KPX Acircumflex yacute -30
KPX Acircumflex ydieresis -30
KPX Adieresis C -40
KPX Adieresis Cacute -40
KPX Adieresis Ccaron -40
KPX Adieresis Ccedilla -40
KPX Adieresis G -50
KPX Adieresis Gbreve -50
KPX Adieresis Gcommaaccent -50
KPX Adieresis O -40
KPX Adieresis Oacute -40
KPX Adieresis Ocircumflex -40
KPX Adieresis Odieresis -40
KPX Adieresis Ograve -40
KPX Adieresis Ohungarumlaut -40
KPX Adieresis Omacron -40
KPX Adieresis Oslash -40
KPX Adieresis Otilde -40
KPX Adieresis Q -40
KPX Adieresis T -90
KPX Adieresis Tcaron -90
KPX Adieresis Tcommaaccent -90
KPX Adieresis U -50
KPX Adieresis Uacute -50
KPX Adieresis Ucircumflex -50
KPX Adieresis Udieresis -50
KPX Adieresis Ugrave -50
KPX Adieresis Uhungarumlaut -50
KPX Adieresis Umacron -50
KPX Adieresis Uogonek -50
KPX Adieresis Uring -50
KPX Adieresis V -80
KPX Adieresis W -60
KPX Adieresis Y -110
KPX Adieresis Yacute -110
KPX Adieresis Ydieresis -110
KPX Adieresis u -30
KPX Adieresis uacute -30
KPX Adieresis ucircumflex -30
KPX Adieresis udieresis -30
KPX Adieresis ugrave -30
KPX Adieresis uhungarumlaut -30
KPX Adieresis umacron -30
KPX Adieresis uogonek -30
KPX Adieresis uring -30
KPX Adieresis v -40
KPX Adieresis w -30
KPX Adieresis y -30
KPX Adieresis yacute -30
KPX Adieresis ydieresis -30
KPX Agrave C -40
KPX Agrave Cacute -40
KPX Agrave Ccaron -40
KPX Agrave Ccedilla -40
KPX Agrave G -50
KPX Agrave Gbreve -50
KPX Agrave Gcommaaccent -50
KPX Agrave O -40
KPX Agrave Oacute -40
KPX Agrave Ocircumflex -40
KPX Agrave Odieresis -40
KPX Agrave Ograve -40
KPX Agrave Ohungarumlaut -40
KPX Agrave Omacron -40
KPX Agrave Oslash -40
KPX Agrave Otilde -40
KPX Agrave Q -40
KPX Agrave T -90
KPX Agrave Tcaron -90
KPX Agrave Tcommaaccent -90
KPX Agrave U -50
KPX Agrave Uacute -50
KPX Agrave Ucircumflex -50
KPX Agrave Udieresis -50
KPX Agrave Ugrave -50
KPX Agrave Uhungarumlaut -50
KPX Agrave Umacron -50
KPX Agrave Uogonek -50
KPX Agrave Uring -50
KPX Agrave V -80
KPX Agrave W -60
KPX Agrave Y -110
KPX Agrave Yacute -110
KPX Agrave Ydieresis -110
KPX Agrave u -30
KPX Agrave uacute -30
KPX Agrave ucircumflex -30
KPX Agrave udieresis -30
KPX Agrave ugrave -30
KPX Agrave uhungarumlaut -30
KPX Agrave umacron -30
KPX Agrave uogonek -30
KPX Agrave uring -30
KPX Agrave v -40
KPX Agrave w -30
KPX Agrave y -30
KPX Agrave yacute -30
KPX Agrave ydieresis -30
KPX Amacron C -40
KPX Amacron Cacute -40
KPX Amacron Ccaron -40
KPX Amacron Ccedilla -40
KPX Amacron G -50
KPX Amacron Gbreve -50
KPX Amacron Gcommaaccent -50
KPX Amacron O -40
KPX Amacron Oacute -40
KPX Amacron Ocircumflex -40
KPX Amacron Odieresis -40
KPX Amacron Ograve -40
KPX Amacron Ohungarumlaut -40
KPX Amacron Omacron -40
KPX Amacron Oslash -40
KPX Amacron Otilde -40
KPX Amacron Q -40
KPX Amacron T -90
KPX Amacron Tcaron -90
KPX Amacron Tcommaaccent -90
KPX Amacron U -50
KPX Amacron Uacute -50
KPX Amacron Ucircumflex -50
KPX Amacron Udieresis -50
KPX Amacron Ugrave -50
KPX Amacron Uhungarumlaut -50
KPX Amacron Umacron -50
KPX Amacron Uogonek -50
KPX Amacron Uring -50
KPX Amacron V -80
KPX Amacron W -60
KPX Amacron Y -110
KPX Amacron Yacute -110
KPX Amacron Ydieresis -110
KPX Amacron u -30
KPX Amacron uacute -30
KPX Amacron ucircumflex -30
KPX Amacron udieresis -30
KPX Amacron ugrave -30
KPX Amacron uhungarumlaut -30
KPX Amacron umacron -30
KPX Amacron uogonek -30
KPX Amacron uring -30
KPX Amacron v -40
KPX Amacron w -30
KPX Amacron y -30
KPX Amacron yacute -30
KPX Amacron ydieresis -30
KPX Aogonek C -40
KPX Aogonek Cacute -40
KPX Aogonek Ccaron -40
KPX Aogonek Ccedilla -40
KPX Aogonek G -50
KPX Aogonek Gbreve -50
KPX Aogonek Gcommaaccent -50
KPX Aogonek O -40
KPX Aogonek Oacute -40
KPX Aogonek Ocircumflex -40
KPX Aogonek Odieresis -40
KPX Aogonek Ograve -40
KPX Aogonek Ohungarumlaut -40
KPX Aogonek Omacron -40
KPX Aogonek Oslash -40
KPX Aogonek Otilde -40
KPX Aogonek Q -40
KPX Aogonek T -90
KPX Aogonek Tcaron -90
KPX Aogonek Tcommaaccent -90
KPX Aogonek U -50
KPX Aogonek Uacute -50
KPX Aogonek Ucircumflex -50
KPX Aogonek Udieresis -50
KPX Aogonek Ugrave -50
KPX Aogonek Uhungarumlaut -50
KPX Aogonek Umacron -50
KPX Aogonek Uogonek -50
KPX Aogonek Uring -50
KPX Aogonek V -80
KPX Aogonek W -60
KPX Aogonek Y -110
KPX Aogonek Yacute -110
KPX Aogonek Ydieresis -110
KPX Aogonek u -30
KPX Aogonek uacute -30
KPX Aogonek ucircumflex -30
KPX Aogonek udieresis -30
KPX Aogonek ugrave -30
KPX Aogonek uhungarumlaut -30
KPX Aogonek umacron -30
KPX Aogonek uogonek -30
KPX Aogonek uring -30
KPX Aogonek v -40
KPX Aogonek w -30
KPX Aogonek y -30
KPX Aogonek yacute -30
KPX Aogonek ydieresis -30
KPX Aring C -40
KPX Aring Cacute -40
KPX Aring Ccaron -40
KPX Aring Ccedilla -40
KPX Aring G -50
KPX Aring Gbreve -50
KPX Aring Gcommaaccent -50
KPX Aring O -40
KPX Aring Oacute -40
KPX Aring Ocircumflex -40
KPX Aring Odieresis -40
KPX Aring Ograve -40
KPX Aring Ohungarumlaut -40
KPX Aring Omacron -40
KPX Aring Oslash -40
KPX Aring Otilde -40
KPX Aring Q -40
KPX Aring T -90
KPX Aring Tcaron -90
KPX Aring Tcommaaccent -90
KPX Aring U -50
KPX Aring Uacute -50
KPX Aring Ucircumflex -50
KPX Aring Udieresis -50
KPX Aring Ugrave -50
KPX Aring Uhungarumlaut -50
KPX Aring Umacron -50
KPX Aring Uogonek -50
KPX Aring Uring -50
KPX Aring V -80
KPX Aring W -60
KPX Aring Y -110
KPX Aring Yacute -110
KPX Aring Ydieresis -110
KPX Aring u -30
KPX Aring uacute -30
KPX Aring ucircumflex -30
KPX Aring udieresis -30
KPX Aring ugrave -30
KPX Aring uhungarumlaut -30
KPX Aring umacron -30
KPX Aring uogonek -30
KPX Aring uring -30
KPX Aring v -40
KPX Aring w -30
KPX Aring y -30
KPX Aring yacute -30
KPX Aring ydieresis -30
KPX Atilde C -40
KPX Atilde Cacute -40
KPX Atilde Ccaron -40
KPX Atilde Ccedilla -40
KPX Atilde G -50
KPX Atilde Gbreve -50
KPX Atilde Gcommaaccent -50
KPX Atilde O -40
KPX Atilde Oacute -40
KPX Atilde Ocircumflex -40
KPX Atilde Odieresis -40
KPX Atilde Ograve -40
KPX Atilde Ohungarumlaut -40
KPX Atilde Omacron -40
KPX Atilde Oslash -40
KPX Atilde Otilde -40
KPX Atilde Q -40
KPX Atilde T -90
KPX Atilde Tcaron -90
KPX Atilde Tcommaaccent -90
KPX Atilde U -50
KPX Atilde Uacute -50
KPX Atilde Ucircumflex -50
KPX Atilde Udieresis -50
KPX Atilde Ugrave -50
KPX Atilde Uhungarumlaut -50
KPX Atilde Umacron -50
KPX Atilde Uogonek -50
KPX Atilde Uring -50
KPX Atilde V -80
KPX Atilde W -60
KPX Atilde Y -110
KPX Atilde Yacute -110
KPX Atilde Ydieresis -110
KPX Atilde u -30
KPX Atilde uacute -30
KPX Atilde ucircumflex -30
KPX Atilde udieresis -30
KPX Atilde ugrave -30
KPX Atilde uhungarumlaut -30
KPX Atilde umacron -30
KPX Atilde uogonek -30
KPX Atilde uring -30
KPX Atilde v -40
KPX Atilde w -30
KPX Atilde y -30
KPX Atilde yacute -30
KPX Atilde ydieresis -30
KPX B A -30
KPX B Aacute -30
KPX B Abreve -30
KPX B Acircumflex -30
KPX B Adieresis -30
KPX B Agrave -30
KPX B Amacron -30
KPX B Aogonek -30
KPX B Aring -30
KPX B Atilde -30
KPX B U -10
KPX B Uacute -10
KPX B Ucircumflex -10
KPX B Udieresis -10
KPX B Ugrave -10
KPX B Uhungarumlaut -10
KPX B Umacron -10
KPX B Uogonek -10
KPX B Uring -10
KPX D A -40
KPX D Aacute -40
KPX D Abreve -40
KPX D Acircumflex -40
KPX D Adieresis -40
KPX D Agrave -40
KPX D Amacron -40
KPX D Aogonek -40
KPX D Aring -40
KPX D Atilde -40
KPX D V -40
KPX D W -40
KPX D Y -70
KPX D Yacute -70
KPX D Ydieresis -70
KPX D comma -30
KPX D period -30
KPX Dcaron A -40
KPX Dcaron Aacute -40
KPX Dcaron Abreve -40
KPX Dcaron Acircumflex -40
KPX Dcaron Adieresis -40
KPX Dcaron Agrave -40
KPX Dcaron Amacron -40
KPX Dcaron Aogonek -40
KPX Dcaron Aring -40
KPX Dcaron Atilde -40
KPX Dcaron V -40
KPX Dcaron W -40
KPX Dcaron Y -70
KPX Dcaron Yacute -70
KPX Dcaron Ydieresis -70
KPX Dcaron comma -30
KPX Dcaron period -30
KPX Dcroat A -40
KPX Dcroat Aacute -40
KPX Dcroat Abreve -40
KPX Dcroat Acircumflex -40
KPX Dcroat Adieresis -40
KPX Dcroat Agrave -40
KPX Dcroat Amacron -40
KPX Dcroat Aogonek -40
KPX Dcroat Aring -40
KPX Dcroat Atilde -40
KPX Dcroat V -40
KPX Dcroat W -40
KPX Dcroat Y -70
KPX Dcroat Yacute -70
KPX Dcroat Ydieresis -70
KPX Dcroat comma -30
KPX Dcroat period -30
KPX F A -80
KPX F Aacute -80
KPX F Abreve -80
KPX F Acircumflex -80
KPX F Adieresis -80
KPX F Agrave -80
KPX F Amacron -80
KPX F Aogonek -80
KPX F Aring -80
KPX F Atilde -80
KPX F a -20
KPX F aacute -20
KPX F abreve -20
KPX F acircumflex -20
KPX F adieresis -20
KPX F agrave -20
KPX F amacron -20
KPX F aogonek -20
KPX F aring -20
KPX F atilde -20
KPX F comma -100
KPX F period -100
KPX J A -20
KPX J Aacute -20
KPX J Abreve -20
KPX J Acircumflex -20
KPX J Adieresis -20
KPX J Agrave -20
KPX J Amacron -20
KPX J Aogonek -20
KPX J Aring -20
KPX J Atilde -20
KPX J comma -20
KPX J period -20
KPX J u -20
KPX J uacute -20
KPX J ucircumflex -20
KPX J udieresis -20
KPX J ugrave -20
KPX J uhungarumlaut -20
KPX J umacron -20
KPX J uogonek -20
KPX J uring -20
KPX K O -30
KPX K Oacute -30
KPX K Ocircumflex -30
KPX K Odieresis -30
KPX K Ograve -30
KPX K Ohungarumlaut -30
KPX K Omacron -30
KPX K Oslash -30
KPX K Otilde -30
KPX K e -15
KPX K eacute -15
KPX K ecaron -15
KPX K ecircumflex -15
KPX K edieresis -15
KPX K edotaccent -15
KPX K egrave -15
KPX K emacron -15
KPX K eogonek -15
KPX K o -35
KPX K oacute -35
KPX K ocircumflex -35
KPX K odieresis -35
KPX K ograve -35
KPX K ohungarumlaut -35
KPX K omacron -35
KPX K oslash -35
KPX K otilde -35
KPX K u -30
KPX K uacute -30
KPX K ucircumflex -30
KPX K udieresis -30
KPX K ugrave -30
KPX K uhungarumlaut -30
KPX K umacron -30
KPX K uogonek -30
KPX K uring -30
KPX K y -40
KPX K yacute -40
KPX K ydieresis -40
KPX Kcommaaccent O -30
KPX Kcommaaccent Oacute -30
KPX Kcommaaccent Ocircumflex -30
KPX Kcommaaccent Odieresis -30
KPX Kcommaaccent Ograve -30
KPX Kcommaaccent Ohungarumlaut -30
KPX Kcommaaccent Omacron -30
KPX Kcommaaccent Oslash -30
KPX Kcommaaccent Otilde -30
KPX Kcommaaccent e -15
KPX Kcommaaccent eacute -15
KPX Kcommaaccent ecaron -15
KPX Kcommaaccent ecircumflex -15
KPX Kcommaaccent edieresis -15
KPX Kcommaaccent edotaccent -15
KPX Kcommaaccent egrave -15
KPX Kcommaaccent emacron -15
KPX Kcommaaccent eogonek -15
KPX Kcommaaccent o -35
KPX Kcommaaccent oacute -35
KPX Kcommaaccent ocircumflex -35
KPX Kcommaaccent odieresis -35
KPX Kcommaaccent ograve -35
KPX Kcommaaccent ohungarumlaut -35
KPX Kcommaaccent omacron -35
KPX Kcommaaccent oslash -35
KPX Kcommaaccent otilde -35
KPX Kcommaaccent u -30
KPX Kcommaaccent uacute -30
KPX Kcommaaccent ucircumflex -30
KPX Kcommaaccent udieresis -30
KPX Kcommaaccent ugrave -30
KPX Kcommaaccent uhungarumlaut -30
KPX Kcommaaccent umacron -30
KPX Kcommaaccent uogonek -30
KPX Kcommaaccent uring -30
KPX Kcommaaccent y -40
KPX Kcommaaccent yacute -40
KPX Kcommaaccent ydieresis -40
KPX L T -90
KPX L Tcaron -90
KPX L Tcommaaccent -90
KPX L V -110
KPX L W -80
KPX L Y -120
KPX L Yacute -120
KPX L Ydieresis -120
KPX L quotedblright -140
KPX L quoteright -140
KPX L y -30
KPX L yacute -30
KPX L ydieresis -30
KPX Lacute T -90
KPX Lacute Tcaron -90
KPX Lacute Tcommaaccent -90
KPX Lacute V -110
KPX Lacute W -80
KPX Lacute Y -120
KPX Lacute Yacute -120
KPX Lacute Ydieresis -120
KPX Lacute quotedblright -140
KPX Lacute quoteright -140
KPX Lacute y -30
KPX Lacute yacute -30
KPX Lacute ydieresis -30
KPX Lcommaaccent T -90
KPX Lcommaaccent Tcaron -90
KPX Lcommaaccent Tcommaaccent -90
KPX Lcommaaccent V -110
KPX Lcommaaccent W -80
KPX Lcommaaccent Y -120
KPX Lcommaaccent Yacute -120
KPX Lcommaaccent Ydieresis -120
KPX Lcommaaccent quotedblright -140
KPX Lcommaaccent quoteright -140
KPX Lcommaaccent y -30
KPX Lcommaaccent yacute -30
KPX Lcommaaccent ydieresis -30
KPX Lslash T -90
KPX Lslash Tcaron -90
KPX Lslash Tcommaaccent -90
KPX Lslash V -110
KPX Lslash W -80
KPX Lslash Y -120
KPX Lslash Yacute -120
KPX Lslash Ydieresis -120
KPX Lslash quotedblright -140
KPX Lslash quoteright -140
KPX Lslash y -30
KPX Lslash yacute -30
KPX Lslash ydieresis -30
KPX O A -50
KPX O Aacute -50
KPX O Abreve -50
KPX O Acircumflex -50
KPX O Adieresis -50
KPX O Agrave -50
KPX O Amacron -50
KPX O Aogonek -50
KPX O Aring -50
KPX O Atilde -50
KPX O T -40
KPX O Tcaron -40
KPX O Tcommaaccent -40
KPX O V -50
KPX O W -50
KPX O X -50
KPX O Y -70
KPX O Yacute -70
KPX O Ydieresis -70
KPX O comma -40
KPX O period -40
KPX Oacute A -50
KPX Oacute Aacute -50
KPX Oacute Abreve -50
KPX Oacute Acircumflex -50
KPX Oacute Adieresis -50
KPX Oacute Agrave -50
KPX Oacute Amacron -50
KPX Oacute Aogonek -50
KPX Oacute Aring -50
KPX Oacute Atilde -50
KPX Oacute T -40
KPX Oacute Tcaron -40
KPX Oacute Tcommaaccent -40
KPX Oacute V -50
KPX Oacute W -50
KPX Oacute X -50
KPX Oacute Y -70
KPX Oacute Yacute -70
KPX Oacute Ydieresis -70
KPX Oacute comma -40
KPX Oacute period -40
KPX Ocircumflex A -50
KPX Ocircumflex Aacute -50
KPX Ocircumflex Abreve -50
KPX Ocircumflex Acircumflex -50
KPX Ocircumflex Adieresis -50
KPX Ocircumflex Agrave -50
KPX Ocircumflex Amacron -50
KPX Ocircumflex Aogonek -50
KPX Ocircumflex Aring -50
KPX Ocircumflex Atilde -50
KPX Ocircumflex T -40
KPX Ocircumflex Tcaron -40
KPX Ocircumflex Tcommaaccent -40
KPX Ocircumflex V -50
KPX Ocircumflex W -50
KPX Ocircumflex X -50
KPX Ocircumflex Y -70
KPX Ocircumflex Yacute -70
KPX Ocircumflex Ydieresis -70
KPX Ocircumflex comma -40
KPX Ocircumflex period -40
KPX Odieresis A -50
KPX Odieresis Aacute -50
KPX Odieresis Abreve -50
KPX Odieresis Acircumflex -50
KPX Odieresis Adieresis -50
KPX Odieresis Agrave -50
KPX Odieresis Amacron -50
KPX Odieresis Aogonek -50
KPX Odieresis Aring -50
KPX Odieresis Atilde -50
KPX Odieresis T -40
KPX Odieresis Tcaron -40
KPX Odieresis Tcommaaccent -40
KPX Odieresis V -50
KPX Odieresis W -50
KPX Odieresis X -50
KPX Odieresis Y -70
KPX Odieresis Yacute -70
KPX Odieresis Ydieresis -70
KPX Odieresis comma -40
KPX Odieresis period -40
KPX Ograve A -50
KPX Ograve Aacute -50
KPX Ograve Abreve -50
KPX Ograve Acircumflex -50
KPX Ograve Adieresis -50
KPX Ograve Agrave -50
KPX Ograve Amacron -50
KPX Ograve Aogonek -50
KPX Ograve Aring -50
KPX Ograve Atilde -50
KPX Ograve T -40
KPX Ograve Tcaron -40
KPX Ograve Tcommaaccent -40
KPX Ograve V -50
KPX Ograve W -50
KPX Ograve X -50
KPX Ograve Y -70
KPX Ograve Yacute -70
KPX Ograve Ydieresis -70
KPX Ograve comma -40
KPX Ograve period -40
KPX Ohungarumlaut A -50
KPX Ohungarumlaut Aacute -50
KPX Ohungarumlaut Abreve -50
KPX Ohungarumlaut Acircumflex -50
KPX Ohungarumlaut Adieresis -50
KPX Ohungarumlaut Agrave -50
KPX Ohungarumlaut Amacron -50
KPX Ohungarumlaut Aogonek -50
KPX Ohungarumlaut Aring -50
KPX Ohungarumlaut Atilde -50
KPX Ohungarumlaut T -40
KPX Ohungarumlaut Tcaron -40
KPX Ohungarumlaut Tcommaaccent -40
KPX Ohungarumlaut V -50
KPX Ohungarumlaut W -50
KPX Ohungarumlaut X -50
KPX Ohungarumlaut Y -70
KPX Ohungarumlaut Yacute -70
KPX Ohungarumlaut Ydieresis -70
KPX Ohungarumlaut comma -40
KPX Ohungarumlaut period -40
KPX Omacron A -50
KPX Omacron Aacute -50
KPX Omacron Abreve -50
KPX Omacron Acircumflex -50
KPX Omacron Adieresis -50
KPX Omacron Agrave -50
KPX Omacron Amacron -50
KPX Omacron Aogonek -50
KPX Omacron Aring -50
KPX Omacron Atilde -50
KPX Omacron T -40
KPX Omacron Tcaron -40
KPX Omacron Tcommaaccent -40
KPX Omacron V -50
KPX Omacron W -50
KPX Omacron X -50
KPX Omacron Y -70
KPX Omacron Yacute -70
KPX Omacron Ydieresis -70
KPX Omacron comma -40
KPX Omacron period -40
KPX Oslash A -50
KPX Oslash Aacute -50
KPX Oslash Abreve -50
KPX Oslash Acircumflex -50
KPX Oslash Adieresis -50
KPX Oslash Agrave -50
KPX Oslash Amacron -50
KPX Oslash Aogonek -50
KPX Oslash Aring -50
KPX Oslash Atilde -50
KPX Oslash T -40
KPX Oslash Tcaron -40
KPX Oslash Tcommaaccent -40
KPX Oslash V -50
KPX Oslash W -50
KPX Oslash X -50
KPX Oslash Y -70
KPX Oslash Yacute -70
KPX Oslash Ydieresis -70
KPX Oslash comma -40
KPX Oslash period -40
KPX Otilde A -50
KPX Otilde Aacute -50
KPX Otilde Abreve -50
KPX Otilde Acircumflex -50
KPX Otilde Adieresis -50
KPX Otilde Agrave -50
KPX Otilde Amacron -50
KPX Otilde Aogonek -50
KPX Otilde Aring -50
KPX Otilde Atilde -50
KPX Otilde T -40
KPX Otilde Tcaron -40
KPX Otilde Tcommaaccent -40
KPX Otilde V -50
KPX Otilde W -50
KPX Otilde X -50
KPX Otilde Y -70
KPX Otilde Yacute -70
KPX Otilde Ydieresis -70
KPX Otilde comma -40
KPX Otilde period -40
KPX P A -100
KPX P Aacute -100
KPX P Abreve -100
KPX P Acircumflex -100
KPX P Adieresis -100
KPX P Agrave -100
KPX P Amacron -100
KPX P Aogonek -100
KPX P Aring -100
KPX P Atilde -100
KPX P a -30
KPX P aacute -30
KPX P abreve -30
KPX P acircumflex -30
KPX P adieresis -30
KPX P agrave -30
KPX P amacron -30
KPX P aogonek -30
KPX P aring -30
KPX P atilde -30
KPX P comma -120
KPX P e -30
KPX P eacute -30
KPX P ecaron -30
KPX P ecircumflex -30
KPX P edieresis -30
KPX P edotaccent -30
KPX P egrave -30
KPX P emacron -30
KPX P eogonek -30
KPX P o -40
KPX P oacute -40
KPX P ocircumflex -40
KPX P odieresis -40
KPX P ograve -40
KPX P ohungarumlaut -40
KPX P omacron -40
KPX P oslash -40
KPX P otilde -40
KPX P period -120
KPX Q U -10
KPX Q Uacute -10
KPX Q Ucircumflex -10
KPX Q Udieresis -10
KPX Q Ugrave -10
KPX Q Uhungarumlaut -10
KPX Q Umacron -10
KPX Q Uogonek -10
KPX Q Uring -10
KPX Q comma 20
KPX Q period 20
KPX R O -20
KPX R Oacute -20
KPX R Ocircumflex -20
KPX R Odieresis -20
KPX R Ograve -20
KPX R Ohungarumlaut -20
KPX R Omacron -20
KPX R Oslash -20
KPX R Otilde -20
KPX R T -20
KPX R Tcaron -20
KPX R Tcommaaccent -20
KPX R U -20
KPX R Uacute -20
KPX R Ucircumflex -20
KPX R Udieresis -20
KPX R Ugrave -20
KPX R Uhungarumlaut -20
KPX R Umacron -20
KPX R Uogonek -20
KPX R Uring -20
KPX R V -50
KPX R W -40
KPX R Y -50
KPX R Yacute -50
KPX R Ydieresis -50
KPX Racute O -20
KPX Racute Oacute -20
KPX Racute Ocircumflex -20
KPX Racute Odieresis -20
KPX Racute Ograve -20
KPX Racute Ohungarumlaut -20
KPX Racute Omacron -20
KPX Racute Oslash -20
KPX Racute Otilde -20
KPX Racute T -20
KPX Racute Tcaron -20
KPX Racute Tcommaaccent -20
KPX Racute U -20
KPX Racute Uacute -20
KPX Racute Ucircumflex -20
KPX Racute Udieresis -20
KPX Racute Ugrave -20
KPX Racute Uhungarumlaut -20
KPX Racute Umacron -20
KPX Racute Uogonek -20
KPX Racute Uring -20
KPX Racute V -50
KPX Racute W -40
KPX Racute Y -50
KPX Racute Yacute -50
KPX Racute Ydieresis -50
KPX Rcaron O -20
KPX Rcaron Oacute -20
KPX Rcaron Ocircumflex -20
KPX Rcaron Odieresis -20
KPX Rcaron Ograve -20
KPX Rcaron Ohungarumlaut -20
KPX Rcaron Omacron -20
KPX Rcaron Oslash -20
KPX Rcaron Otilde -20
KPX Rcaron T -20
KPX Rcaron Tcaron -20
KPX Rcaron Tcommaaccent -20
KPX Rcaron U -20
KPX Rcaron Uacute -20
KPX Rcaron Ucircumflex -20
KPX Rcaron Udieresis -20
KPX Rcaron Ugrave -20
KPX Rcaron Uhungarumlaut -20
KPX Rcaron Umacron -20
KPX Rcaron Uogonek -20
KPX Rcaron Uring -20
KPX Rcaron V -50
KPX Rcaron W -40
KPX Rcaron Y -50
KPX Rcaron Yacute -50
KPX Rcaron Ydieresis -50
KPX Rcommaaccent O -20
KPX Rcommaaccent Oacute -20
KPX Rcommaaccent Ocircumflex -20
KPX Rcommaaccent Odieresis -20
KPX Rcommaaccent Ograve -20
KPX Rcommaaccent Ohungarumlaut -20
KPX Rcommaaccent Omacron -20
KPX Rcommaaccent Oslash -20
KPX Rcommaaccent Otilde -20
KPX Rcommaaccent T -20
KPX Rcommaaccent Tcaron -20
KPX Rcommaaccent Tcommaaccent -20
KPX Rcommaaccent U -20
KPX Rcommaaccent Uacute -20
KPX Rcommaaccent Ucircumflex -20
KPX Rcommaaccent Udieresis -20
KPX Rcommaaccent Ugrave -20
KPX Rcommaaccent Uhungarumlaut -20
KPX Rcommaaccent Umacron -20
KPX Rcommaaccent Uogonek -20
KPX Rcommaaccent Uring -20
KPX Rcommaaccent V -50
KPX Rcommaaccent W -40
KPX Rcommaaccent Y -50
KPX Rcommaaccent Yacute -50
KPX Rcommaaccent Ydieresis -50
KPX T A -90
KPX T Aacute -90
KPX T Abreve -90
KPX T Acircumflex -90
KPX T Adieresis -90
KPX T Agrave -90
KPX T Amacron -90
KPX T Aogonek -90
KPX T Aring -90
KPX T Atilde -90
KPX T O -40
KPX T Oacute -40
KPX T Ocircumflex -40
KPX T Odieresis -40
KPX T Ograve -40
KPX T Ohungarumlaut -40
KPX T Omacron -40
KPX T Oslash -40
KPX T Otilde -40
KPX T a -80
KPX T aacute -80
KPX T abreve -80
KPX T acircumflex -80
KPX T adieresis -80
KPX T agrave -80
KPX T amacron -80
KPX T aogonek -80
KPX T aring -80
KPX T atilde -80
KPX T colon -40
KPX T comma -80
KPX T e -60
KPX T eacute -60
KPX T ecaron -60
KPX T ecircumflex -60
KPX T edieresis -60
KPX T edotaccent -60
KPX T egrave -60
KPX T emacron -60
KPX T eogonek -60
KPX T hyphen -120
KPX T o -80
KPX T oacute -80
KPX T ocircumflex -80
KPX T odieresis -80
KPX T ograve -80
KPX T ohungarumlaut -80
KPX T omacron -80
KPX T oslash -80
KPX T otilde -80
KPX T period -80
KPX T r -80
KPX T racute -80
KPX T rcommaaccent -80
KPX T semicolon -40
KPX T u -90
KPX T uacute -90
KPX T ucircumflex -90
KPX T udieresis -90
KPX T ugrave -90
KPX T uhungarumlaut -90
KPX T umacron -90
KPX T uogonek -90
KPX T uring -90
KPX T w -60
KPX T y -60
KPX T yacute -60
KPX T ydieresis -60
KPX Tcaron A -90
KPX Tcaron Aacute -90
KPX Tcaron Abreve -90
KPX Tcaron Acircumflex -90
KPX Tcaron Adieresis -90
KPX Tcaron Agrave -90
KPX Tcaron Amacron -90
KPX Tcaron Aogonek -90
KPX Tcaron Aring -90
KPX Tcaron Atilde -90
KPX Tcaron O -40
KPX Tcaron Oacute -40
KPX Tcaron Ocircumflex -40
KPX Tcaron Odieresis -40
KPX Tcaron Ograve -40
KPX Tcaron Ohungarumlaut -40
KPX Tcaron Omacron -40
KPX Tcaron Oslash -40
KPX Tcaron Otilde -40
KPX Tcaron a -80
KPX Tcaron aacute -80
KPX Tcaron abreve -80
KPX Tcaron acircumflex -80
KPX Tcaron adieresis -80
KPX Tcaron agrave -80
KPX Tcaron amacron -80
KPX Tcaron aogonek -80
KPX Tcaron aring -80
KPX Tcaron atilde -80
KPX Tcaron colon -40
KPX Tcaron comma -80
KPX Tcaron e -60
KPX Tcaron eacute -60
KPX Tcaron ecaron -60
KPX Tcaron ecircumflex -60
KPX Tcaron edieresis -60
KPX Tcaron edotaccent -60
KPX Tcaron egrave -60
KPX Tcaron emacron -60
KPX Tcaron eogonek -60
KPX Tcaron hyphen -120
KPX Tcaron o -80
KPX Tcaron oacute -80
KPX Tcaron ocircumflex -80
KPX Tcaron odieresis -80
KPX Tcaron ograve -80
KPX Tcaron ohungarumlaut -80
KPX Tcaron omacron -80
KPX Tcaron oslash -80
KPX Tcaron otilde -80
KPX Tcaron period -80
KPX Tcaron r -80
KPX Tcaron racute -80
KPX Tcaron rcommaaccent -80
KPX Tcaron semicolon -40
KPX Tcaron u -90
KPX Tcaron uacute -90
KPX Tcaron ucircumflex -90
KPX Tcaron udieresis -90
KPX Tcaron ugrave -90
KPX Tcaron uhungarumlaut -90
KPX Tcaron umacron -90
KPX Tcaron uogonek -90
KPX Tcaron uring -90
KPX Tcaron w -60
KPX Tcaron y -60
KPX Tcaron yacute -60
KPX Tcaron ydieresis -60
KPX Tcommaaccent A -90
KPX Tcommaaccent Aacute -90
KPX Tcommaaccent Abreve -90
KPX Tcommaaccent Acircumflex -90
KPX Tcommaaccent Adieresis -90
KPX Tcommaaccent Agrave -90
KPX Tcommaaccent Amacron -90
KPX Tcommaaccent Aogonek -90
KPX Tcommaaccent Aring -90
KPX Tcommaaccent Atilde -90
KPX Tcommaaccent O -40
KPX Tcommaaccent Oacute -40
KPX Tcommaaccent Ocircumflex -40
KPX Tcommaaccent Odieresis -40
KPX Tcommaaccent Ograve -40
KPX Tcommaaccent Ohungarumlaut -40
KPX Tcommaaccent Omacron -40
KPX Tcommaaccent Oslash -40
KPX Tcommaaccent Otilde -40
KPX Tcommaaccent a -80
KPX Tcommaaccent aacute -80
KPX Tcommaaccent abreve -80
KPX Tcommaaccent acircumflex -80
KPX Tcommaaccent adieresis -80
KPX Tcommaaccent agrave -80
KPX Tcommaaccent amacron -80
KPX Tcommaaccent aogonek -80
KPX Tcommaaccent aring -80
KPX Tcommaaccent atilde -80
KPX Tcommaaccent colon -40
KPX Tcommaaccent comma -80
KPX Tcommaaccent e -60
KPX Tcommaaccent eacute -60
KPX Tcommaaccent ecaron -60
KPX Tcommaaccent ecircumflex -60
KPX Tcommaaccent edieresis -60
KPX Tcommaaccent edotaccent -60
KPX Tcommaaccent egrave -60
KPX Tcommaaccent emacron -60
KPX Tcommaaccent eogonek -60
KPX Tcommaaccent hyphen -120
KPX Tcommaaccent o -80
KPX Tcommaaccent oacute -80
KPX Tcommaaccent ocircumflex -80
KPX Tcommaaccent odieresis -80
KPX Tcommaaccent ograve -80
KPX Tcommaaccent ohungarumlaut -80
KPX Tcommaaccent omacron -80
KPX Tcommaaccent oslash -80
KPX Tcommaaccent otilde -80
KPX Tcommaaccent period -80
KPX Tcommaaccent r -80
KPX Tcommaaccent racute -80
KPX Tcommaaccent rcommaaccent -80
KPX Tcommaaccent semicolon -40
KPX Tcommaaccent u -90
KPX Tcommaaccent uacute -90
KPX Tcommaaccent ucircumflex -90
KPX Tcommaaccent udieresis -90
KPX Tcommaaccent ugrave -90
KPX Tcommaaccent uhungarumlaut -90
KPX Tcommaaccent umacron -90
KPX Tcommaaccent uogonek -90
KPX Tcommaaccent uring -90
KPX Tcommaaccent w -60
KPX Tcommaaccent y -60
KPX Tcommaaccent yacute -60
KPX Tcommaaccent ydieresis -60
KPX U A -50
KPX U Aacute -50
KPX U Abreve -50
KPX U Acircumflex -50
KPX U Adieresis -50
KPX U Agrave -50
KPX U Amacron -50
KPX U Aogonek -50
KPX U Aring -50
KPX U Atilde -50
KPX U comma -30
KPX U period -30
KPX Uacute A -50
KPX Uacute Aacute -50
KPX Uacute Abreve -50
KPX Uacute Acircumflex -50
KPX Uacute Adieresis -50
KPX Uacute Agrave -50
KPX Uacute Amacron -50
KPX Uacute Aogonek -50
KPX Uacute Aring -50
KPX Uacute Atilde -50
KPX Uacute comma -30
KPX Uacute period -30
KPX Ucircumflex A -50
KPX Ucircumflex Aacute -50
KPX Ucircumflex Abreve -50
KPX Ucircumflex Acircumflex -50
KPX Ucircumflex Adieresis -50
KPX Ucircumflex Agrave -50
KPX Ucircumflex Amacron -50
KPX Ucircumflex Aogonek -50
KPX Ucircumflex Aring -50
KPX Ucircumflex Atilde -50
KPX Ucircumflex comma -30
KPX Ucircumflex period -30
KPX Udieresis A -50
KPX Udieresis Aacute -50
KPX Udieresis Abreve -50
KPX Udieresis Acircumflex -50
KPX Udieresis Adieresis -50
KPX Udieresis Agrave -50
KPX Udieresis Amacron -50
KPX Udieresis Aogonek -50
KPX Udieresis Aring -50
KPX Udieresis Atilde -50
KPX Udieresis comma -30
KPX Udieresis period -30
KPX Ugrave A -50
KPX Ugrave Aacute -50
KPX Ugrave Abreve -50
KPX Ugrave Acircumflex -50
KPX Ugrave Adieresis -50
KPX Ugrave Agrave -50
KPX Ugrave Amacron -50
KPX Ugrave Aogonek -50
KPX Ugrave Aring -50
KPX Ugrave Atilde -50
KPX Ugrave comma -30
KPX Ugrave period -30
KPX Uhungarumlaut A -50
KPX Uhungarumlaut Aacute -50
KPX Uhungarumlaut Abreve -50
KPX Uhungarumlaut Acircumflex -50
KPX Uhungarumlaut Adieresis -50
KPX Uhungarumlaut Agrave -50
KPX Uhungarumlaut Amacron -50
KPX Uhungarumlaut Aogonek -50
KPX Uhungarumlaut Aring -50
KPX Uhungarumlaut Atilde -50
KPX Uhungarumlaut comma -30
KPX Uhungarumlaut period -30
KPX Umacron A -50
KPX Umacron Aacute -50
KPX Umacron Abreve -50
KPX Umacron Acircumflex -50
KPX Umacron Adieresis -50
KPX Umacron Agrave -50
KPX Umacron Amacron -50
KPX Umacron Aogonek -50
KPX Umacron Aring -50
KPX Umacron Atilde -50
KPX Umacron comma -30
KPX Umacron period -30
KPX Uogonek A -50
KPX Uogonek Aacute -50
KPX Uogonek Abreve -50
KPX Uogonek Acircumflex -50
KPX Uogonek Adieresis -50
KPX Uogonek Agrave -50
KPX Uogonek Amacron -50
KPX Uogonek Aogonek -50
KPX Uogonek Aring -50
KPX Uogonek Atilde -50
KPX Uogonek comma -30
KPX Uogonek period -30
KPX Uring A -50
KPX Uring Aacute -50
KPX Uring Abreve -50
KPX Uring Acircumflex -50
KPX Uring Adieresis -50
KPX Uring Agrave -50
KPX Uring Amacron -50
KPX Uring Aogonek -50
KPX Uring Aring -50
KPX Uring Atilde -50
KPX Uring comma -30
KPX Uring period -30
KPX V A -80
KPX V Aacute -80
KPX V Abreve -80
KPX V Acircumflex -80
KPX V Adieresis -80
KPX V Agrave -80
KPX V Amacron -80
KPX V Aogonek -80
KPX V Aring -80
KPX V Atilde -80
KPX V G -50
KPX V Gbreve -50
KPX V Gcommaaccent -50
KPX V O -50
KPX V Oacute -50
KPX V Ocircumflex -50
KPX V Odieresis -50
KPX V Ograve -50
KPX V Ohungarumlaut -50
KPX V Omacron -50
KPX V Oslash -50
KPX V Otilde -50
KPX V a -60
KPX V aacute -60
KPX V abreve -60
KPX V acircumflex -60
KPX V adieresis -60
KPX V agrave -60
KPX V amacron -60
KPX V aogonek -60
KPX V aring -60
KPX V atilde -60
KPX V colon -40
KPX V comma -120
KPX V e -50
KPX V eacute -50
KPX V ecaron -50
KPX V ecircumflex -50
KPX V edieresis -50
KPX V edotaccent -50
KPX V egrave -50
KPX V emacron -50
KPX V eogonek -50
KPX V hyphen -80
KPX V o -90
KPX V oacute -90
KPX V ocircumflex -90
KPX V odieresis -90
KPX V ograve -90
KPX V ohungarumlaut -90
KPX V omacron -90
KPX V oslash -90
KPX V otilde -90
KPX V period -120
KPX V semicolon -40
KPX V u -60
KPX V uacute -60
KPX V ucircumflex -60
KPX V udieresis -60
KPX V ugrave -60
KPX V uhungarumlaut -60
KPX V umacron -60
KPX V uogonek -60
KPX V uring -60
KPX W A -60
KPX W Aacute -60
KPX W Abreve -60
KPX W Acircumflex -60
KPX W Adieresis -60
KPX W Agrave -60
KPX W Amacron -60
KPX W Aogonek -60
KPX W Aring -60
KPX W Atilde -60
KPX W O -20
KPX W Oacute -20
KPX W Ocircumflex -20
KPX W Odieresis -20
KPX W Ograve -20
KPX W Ohungarumlaut -20
KPX W Omacron -20
KPX W Oslash -20
KPX W Otilde -20
KPX W a -40
KPX W aacute -40
KPX W abreve -40
KPX W acircumflex -40
KPX W adieresis -40
KPX W agrave -40
KPX W amacron -40
KPX W aogonek -40
KPX W aring -40
KPX W atilde -40
KPX W colon -10
KPX W comma -80
KPX W e -35
KPX W eacute -35
KPX W ecaron -35
KPX W ecircumflex -35
KPX W edieresis -35
KPX W edotaccent -35
KPX W egrave -35
KPX W emacron -35
KPX W eogonek -35
KPX W hyphen -40
KPX W o -60
KPX W oacute -60
KPX W ocircumflex -60
KPX W odieresis -60
KPX W ograve -60
KPX W ohungarumlaut -60
KPX W omacron -60
KPX W oslash -60
KPX W otilde -60
KPX W period -80
KPX W semicolon -10
KPX W u -45
KPX W uacute -45
KPX W ucircumflex -45
KPX W udieresis -45
KPX W ugrave -45
KPX W uhungarumlaut -45
KPX W umacron -45
KPX W uogonek -45
KPX W uring -45
KPX W y -20
KPX W yacute -20
KPX W ydieresis -20
KPX Y A -110
KPX Y Aacute -110
KPX Y Abreve -110
KPX Y Acircumflex -110
KPX Y Adieresis -110
KPX Y Agrave -110
KPX Y Amacron -110
KPX Y Aogonek -110
KPX Y Aring -110
KPX Y Atilde -110
KPX Y O -70
KPX Y Oacute -70
KPX Y Ocircumflex -70
KPX Y Odieresis -70
KPX Y Ograve -70
KPX Y Ohungarumlaut -70
KPX Y Omacron -70
KPX Y Oslash -70
KPX Y Otilde -70
KPX Y a -90
KPX Y aacute -90
KPX Y abreve -90
KPX Y acircumflex -90
KPX Y adieresis -90
KPX Y agrave -90
KPX Y amacron -90
KPX Y aogonek -90
KPX Y aring -90
KPX Y atilde -90
KPX Y colon -50
KPX Y comma -100
KPX Y e -80
KPX Y eacute -80
KPX Y ecaron -80
KPX Y ecircumflex -80
KPX Y edieresis -80
KPX Y edotaccent -80
KPX Y egrave -80
KPX Y emacron -80
KPX Y eogonek -80
KPX Y o -100
KPX Y oacute -100
KPX Y ocircumflex -100
KPX Y odieresis -100
KPX Y ograve -100
KPX Y ohungarumlaut -100
KPX Y omacron -100
KPX Y oslash -100
KPX Y otilde -100
KPX Y period -100
KPX Y semicolon -50
KPX Y u -100
KPX Y uacute -100
KPX Y ucircumflex -100
KPX Y udieresis -100
KPX Y ugrave -100
KPX Y uhungarumlaut -100
KPX Y umacron -100
KPX Y uogonek -100
KPX Y uring -100
KPX Yacute A -110
KPX Yacute Aacute -110
KPX Yacute Abreve -110
KPX Yacute Acircumflex -110
KPX Yacute Adieresis -110
KPX Yacute Agrave -110
KPX Yacute Amacron -110
KPX Yacute Aogonek -110
KPX Yacute Aring -110
KPX Yacute Atilde -110
KPX Yacute O -70
KPX Yacute Oacute -70
KPX Yacute Ocircumflex -70
KPX Yacute Odieresis -70
KPX Yacute Ograve -70
KPX Yacute Ohungarumlaut -70
KPX Yacute Omacron -70
KPX Yacute Oslash -70
KPX Yacute Otilde -70
KPX Yacute a -90
KPX Yacute aacute -90
KPX Yacute abreve -90
KPX Yacute acircumflex -90
KPX Yacute adieresis -90
KPX Yacute agrave -90
KPX Yacute amacron -90
KPX Yacute aogonek -90
KPX Yacute aring -90
KPX Yacute atilde -90
KPX Yacute colon -50
KPX Yacute comma -100
KPX Yacute e -80
KPX Yacute eacute -80
KPX Yacute ecaron -80
KPX Yacute ecircumflex -80
KPX Yacute edieresis -80
KPX Yacute edotaccent -80
KPX Yacute egrave -80
KPX Yacute emacron -80
KPX Yacute eogonek -80
KPX Yacute o -100
KPX Yacute oacute -100
KPX Yacute ocircumflex -100
KPX Yacute odieresis -100
KPX Yacute ograve -100
KPX Yacute ohungarumlaut -100
KPX Yacute omacron -100
KPX Yacute oslash -100
KPX Yacute otilde -100
KPX Yacute period -100
KPX Yacute semicolon -50
KPX Yacute u -100
KPX Yacute uacute -100
KPX Yacute ucircumflex -100
KPX Yacute udieresis -100
KPX Yacute ugrave -100
KPX Yacute uhungarumlaut -100
KPX Yacute umacron -100
KPX Yacute uogonek -100
KPX Yacute uring -100
KPX Ydieresis A -110
KPX Ydieresis Aacute -110
KPX Ydieresis Abreve -110
KPX Ydieresis Acircumflex -110
KPX Ydieresis Adieresis -110
KPX Ydieresis Agrave -110
KPX Ydieresis Amacron -110
KPX Ydieresis Aogonek -110
KPX Ydieresis Aring -110
KPX Ydieresis Atilde -110
KPX Ydieresis O -70
KPX Ydieresis Oacute -70
KPX Ydieresis Ocircumflex -70
KPX Ydieresis Odieresis -70
KPX Ydieresis Ograve -70
KPX Ydieresis Ohungarumlaut -70
KPX Ydieresis Omacron -70
KPX Ydieresis Oslash -70
KPX Ydieresis Otilde -70
KPX Ydieresis a -90
KPX Ydieresis aacute -90
KPX Ydieresis abreve -90
KPX Ydieresis acircumflex -90
KPX Ydieresis adieresis -90
KPX Ydieresis agrave -90
KPX Ydieresis amacron -90
KPX Ydieresis aogonek -90
KPX Ydieresis aring -90
KPX Ydieresis atilde -90
KPX Ydieresis colon -50
KPX Ydieresis comma -100
KPX Ydieresis e -80
KPX Ydieresis eacute -80
KPX Ydieresis ecaron -80
KPX Ydieresis ecircumflex -80
KPX Ydieresis edieresis -80
KPX Ydieresis edotaccent -80
KPX Ydieresis egrave -80
KPX Ydieresis emacron -80
KPX Ydieresis eogonek -80
KPX Ydieresis o -100
KPX Ydieresis oacute -100
KPX Ydieresis ocircumflex -100
KPX Ydieresis odieresis -100
KPX Ydieresis ograve -100
KPX Ydieresis ohungarumlaut -100
KPX Ydieresis omacron -100
KPX Ydieresis oslash -100
KPX Ydieresis otilde -100
KPX Ydieresis period -100
KPX Ydieresis semicolon -50
KPX Ydieresis u -100
KPX Ydieresis uacute -100
KPX Ydieresis ucircumflex -100
KPX Ydieresis udieresis -100
KPX Ydieresis ugrave -100
KPX Ydieresis uhungarumlaut -100
KPX Ydieresis umacron -100
KPX Ydieresis uogonek -100
KPX Ydieresis uring -100
KPX a g -10
KPX a gbreve -10
KPX a gcommaaccent -10
KPX a v -15
KPX a w -15
KPX a y -20
KPX a yacute -20
KPX a ydieresis -20
KPX aacute g -10
KPX aacute gbreve -10
KPX aacute gcommaaccent -10
KPX aacute v -15
KPX aacute w -15
KPX aacute y -20
KPX aacute yacute -20
KPX aacute ydieresis -20
KPX abreve g -10
KPX abreve gbreve -10
KPX abreve gcommaaccent -10
KPX abreve v -15
KPX abreve w -15
KPX abreve y -20
KPX abreve yacute -20
KPX abreve ydieresis -20
KPX acircumflex g -10
KPX acircumflex gbreve -10
KPX acircumflex gcommaaccent -10
KPX acircumflex v -15
KPX acircumflex w -15
KPX acircumflex y -20
KPX acircumflex yacute -20
KPX acircumflex ydieresis -20
KPX adieresis g -10
KPX adieresis gbreve -10
KPX adieresis gcommaaccent -10
KPX adieresis v -15
KPX adieresis w -15
KPX adieresis y -20
KPX adieresis yacute -20
KPX adieresis ydieresis -20
KPX agrave g -10
KPX agrave gbreve -10
KPX agrave gcommaaccent -10
KPX agrave v -15
KPX agrave w -15
KPX agrave y -20
KPX agrave yacute -20
KPX agrave ydieresis -20
KPX amacron g -10
KPX amacron gbreve -10
KPX amacron gcommaaccent -10
KPX amacron v -15
KPX amacron w -15
KPX amacron y -20
KPX amacron yacute -20
KPX amacron ydieresis -20
KPX aogonek g -10
KPX aogonek gbreve -10
KPX aogonek gcommaaccent -10
KPX aogonek v -15
KPX aogonek w -15
KPX aogonek y -20
KPX aogonek yacute -20
KPX aogonek ydieresis -20
KPX aring g -10
KPX aring gbreve -10
KPX aring gcommaaccent -10
KPX aring v -15
KPX aring w -15
KPX aring y -20
KPX aring yacute -20
KPX aring ydieresis -20
KPX atilde g -10
KPX atilde gbreve -10
KPX atilde gcommaaccent -10
KPX atilde v -15
KPX atilde w -15
KPX atilde y -20
KPX atilde yacute -20
KPX atilde ydieresis -20
KPX b l -10
KPX b lacute -10
KPX b lcommaaccent -10
KPX b lslash -10
KPX b u -20
KPX b uacute -20
KPX b ucircumflex -20
KPX b udieresis -20
KPX b ugrave -20
KPX b uhungarumlaut -20
KPX b umacron -20
KPX b uogonek -20
KPX b uring -20
KPX b v -20
KPX b y -20
KPX b yacute -20
KPX b ydieresis -20
KPX c h -10
KPX c k -20
KPX c kcommaaccent -20
KPX c l -20
KPX c lacute -20
KPX c lcommaaccent -20
KPX c lslash -20
KPX c y -10
KPX c yacute -10
KPX c ydieresis -10
KPX cacute h -10
KPX cacute k -20
KPX cacute kcommaaccent -20
KPX cacute l -20
KPX cacute lacute -20
KPX cacute lcommaaccent -20
KPX cacute lslash -20
KPX cacute y -10
KPX cacute yacute -10
KPX cacute ydieresis -10
KPX ccaron h -10
KPX ccaron k -20
KPX ccaron kcommaaccent -20
KPX ccaron l -20
KPX ccaron lacute -20
KPX ccaron lcommaaccent -20
KPX ccaron lslash -20
KPX ccaron y -10
KPX ccaron yacute -10
KPX ccaron ydieresis -10
KPX ccedilla h -10
KPX ccedilla k -20
KPX ccedilla kcommaaccent -20
KPX ccedilla l -20
KPX ccedilla lacute -20
KPX ccedilla lcommaaccent -20
KPX ccedilla lslash -20
KPX ccedilla y -10
KPX ccedilla yacute -10
KPX ccedilla ydieresis -10
KPX colon space -40
KPX comma quotedblright -120
KPX comma quoteright -120
KPX comma space -40
KPX d d -10
KPX d dcroat -10
KPX d v -15
KPX d w -15
KPX d y -15
KPX d yacute -15
KPX d ydieresis -15
KPX dcroat d -10
KPX dcroat dcroat -10
KPX dcroat v -15
KPX dcroat w -15
KPX dcroat y -15
KPX dcroat yacute -15
KPX dcroat ydieresis -15
KPX e comma 10
KPX e period 20
KPX e v -15
KPX e w -15
KPX e x -15
KPX e y -15
KPX e yacute -15
KPX e ydieresis -15
KPX eacute comma 10
KPX eacute period 20
KPX eacute v -15
KPX eacute w -15
KPX eacute x -15
KPX eacute y -15
KPX eacute yacute -15
KPX eacute ydieresis -15
KPX ecaron comma 10
KPX ecaron period 20
KPX ecaron v -15
KPX ecaron w -15
KPX ecaron x -15
KPX ecaron y -15
KPX ecaron yacute -15
KPX ecaron ydieresis -15
KPX ecircumflex comma 10
KPX ecircumflex period 20
KPX ecircumflex v -15
KPX ecircumflex w -15
KPX ecircumflex x -15
KPX ecircumflex y -15
KPX ecircumflex yacute -15
KPX ecircumflex ydieresis -15
KPX edieresis comma 10
KPX edieresis period 20
KPX edieresis v -15
KPX edieresis w -15
KPX edieresis x -15
KPX edieresis y -15
KPX edieresis yacute -15
KPX edieresis ydieresis -15
KPX edotaccent comma 10
KPX edotaccent period 20
KPX edotaccent v -15
KPX edotaccent w -15
KPX edotaccent x -15
KPX edotaccent y -15
KPX edotaccent yacute -15
KPX edotaccent ydieresis -15
KPX egrave comma 10
KPX egrave period 20
KPX egrave v -15
KPX egrave w -15
KPX egrave x -15
KPX egrave y -15
KPX egrave yacute -15
KPX egrave ydieresis -15
KPX emacron comma 10
KPX emacron period 20
KPX emacron v -15
KPX emacron w -15
KPX emacron x -15
KPX emacron y -15
KPX emacron yacute -15
KPX emacron ydieresis -15
KPX eogonek comma 10
KPX eogonek period 20
KPX eogonek v -15
KPX eogonek w -15
KPX eogonek x -15
KPX eogonek y -15
KPX eogonek yacute -15
KPX eogonek ydieresis -15
KPX f comma -10
KPX f e -10
KPX f eacute -10
KPX f ecaron -10
KPX f ecircumflex -10
KPX f edieresis -10
KPX f edotaccent -10
KPX f egrave -10
KPX f emacron -10
KPX f eogonek -10
KPX f o -20
KPX f oacute -20
KPX f ocircumflex -20
KPX f odieresis -20
KPX f ograve -20
KPX f ohungarumlaut -20
KPX f omacron -20
KPX f oslash -20
KPX f otilde -20
KPX f period -10
KPX f quotedblright 30
KPX f quoteright 30
KPX g e 10
KPX g eacute 10
KPX g ecaron 10
KPX g ecircumflex 10
KPX g edieresis 10
KPX g edotaccent 10
KPX g egrave 10
KPX g emacron 10
KPX g eogonek 10
KPX g g -10
KPX g gbreve -10
KPX g gcommaaccent -10
KPX gbreve e 10
KPX gbreve eacute 10
KPX gbreve ecaron 10
KPX gbreve ecircumflex 10
KPX gbreve edieresis 10
KPX gbreve edotaccent 10
KPX gbreve egrave 10
KPX gbreve emacron 10
KPX gbreve eogonek 10
KPX gbreve g -10
KPX gbreve gbreve -10
KPX gbreve gcommaaccent -10
KPX gcommaaccent e 10
KPX gcommaaccent eacute 10
KPX gcommaaccent ecaron 10
KPX gcommaaccent ecircumflex 10
KPX gcommaaccent edieresis 10
KPX gcommaaccent edotaccent 10
KPX gcommaaccent egrave 10
KPX gcommaaccent emacron 10
KPX gcommaaccent eogonek 10
KPX gcommaaccent g -10
KPX gcommaaccent gbreve -10
KPX gcommaaccent gcommaaccent -10
KPX h y -20
KPX h yacute -20
KPX h ydieresis -20
KPX k o -15
KPX k oacute -15
KPX k ocircumflex -15
KPX k odieresis -15
KPX k ograve -15
KPX k ohungarumlaut -15
KPX k omacron -15
KPX k oslash -15
KPX k otilde -15
KPX kcommaaccent o -15
KPX kcommaaccent oacute -15
KPX kcommaaccent ocircumflex -15
KPX kcommaaccent odieresis -15
KPX kcommaaccent ograve -15
KPX kcommaaccent ohungarumlaut -15
KPX kcommaaccent omacron -15
KPX kcommaaccent oslash -15
KPX kcommaaccent otilde -15
KPX l w -15
KPX l y -15
KPX l yacute -15
KPX l ydieresis -15
KPX lacute w -15
KPX lacute y -15
KPX lacute yacute -15
KPX lacute ydieresis -15
KPX lcommaaccent w -15
KPX lcommaaccent y -15
KPX lcommaaccent yacute -15
KPX lcommaaccent ydieresis -15
KPX lslash w -15
KPX lslash y -15
KPX lslash yacute -15
KPX lslash ydieresis -15
KPX m u -20
KPX m uacute -20
KPX m ucircumflex -20
KPX m udieresis -20
KPX m ugrave -20
KPX m uhungarumlaut -20
KPX m umacron -20
KPX m uogonek -20
KPX m uring -20
KPX m y -30
KPX m yacute -30
KPX m ydieresis -30
KPX n u -10
KPX n uacute -10
KPX n ucircumflex -10
KPX n udieresis -10
KPX n ugrave -10
KPX n uhungarumlaut -10
KPX n umacron -10
KPX n uogonek -10
KPX n uring -10
KPX n v -40
KPX n y -20
KPX n yacute -20
KPX n ydieresis -20
KPX nacute u -10
KPX nacute uacute -10
KPX nacute ucircumflex -10
KPX nacute udieresis -10
KPX nacute ugrave -10
KPX nacute uhungarumlaut -10
KPX nacute umacron -10
KPX nacute uogonek -10
KPX nacute uring -10
KPX nacute v -40
KPX nacute y -20
KPX nacute yacute -20
KPX nacute ydieresis -20
KPX ncaron u -10
KPX ncaron uacute -10
KPX ncaron ucircumflex -10
KPX ncaron udieresis -10
KPX ncaron ugrave -10
KPX ncaron uhungarumlaut -10
KPX ncaron umacron -10
KPX ncaron uogonek -10
KPX ncaron uring -10
KPX ncaron v -40
KPX ncaron y -20
KPX ncaron yacute -20
KPX ncaron ydieresis -20
KPX ncommaaccent u -10
KPX ncommaaccent uacute -10
KPX ncommaaccent ucircumflex -10
KPX ncommaaccent udieresis -10
KPX ncommaaccent ugrave -10
KPX ncommaaccent uhungarumlaut -10
KPX ncommaaccent umacron -10
KPX ncommaaccent uogonek -10
KPX ncommaaccent uring -10
KPX ncommaaccent v -40
KPX ncommaaccent y -20
KPX ncommaaccent yacute -20
KPX ncommaaccent ydieresis -20
KPX ntilde u -10
KPX ntilde uacute -10
KPX ntilde ucircumflex -10
KPX ntilde udieresis -10
KPX ntilde ugrave -10
KPX ntilde uhungarumlaut -10
KPX ntilde umacron -10
KPX ntilde uogonek -10
KPX ntilde uring -10
KPX ntilde v -40
KPX ntilde y -20
KPX ntilde yacute -20
KPX ntilde ydieresis -20
KPX o v -20
KPX o w -15
KPX o x -30
KPX o y -20
KPX o yacute -20
KPX o ydieresis -20
KPX oacute v -20
KPX oacute w -15
KPX oacute x -30
KPX oacute y -20
KPX oacute yacute -20
KPX oacute ydieresis -20
KPX ocircumflex v -20
KPX ocircumflex w -15
KPX ocircumflex x -30
KPX ocircumflex y -20
KPX ocircumflex yacute -20
KPX ocircumflex ydieresis -20
KPX odieresis v -20
KPX odieresis w -15
KPX odieresis x -30
KPX odieresis y -20
KPX odieresis yacute -20
KPX odieresis ydieresis -20
KPX ograve v -20
KPX ograve w -15
KPX ograve x -30
KPX ograve y -20
KPX ograve yacute -20
KPX ograve ydieresis -20
KPX ohungarumlaut v -20
KPX ohungarumlaut w -15
KPX ohungarumlaut x -30
KPX ohungarumlaut y -20
KPX ohungarumlaut yacute -20
KPX ohungarumlaut ydieresis -20
KPX omacron v -20
KPX omacron w -15
KPX omacron x -30
KPX omacron y -20
KPX omacron yacute -20
KPX omacron ydieresis -20
KPX oslash v -20
KPX oslash w -15
KPX oslash x -30
KPX oslash y -20
KPX oslash yacute -20
KPX oslash ydieresis -20
KPX otilde v -20
KPX otilde w -15
KPX otilde x -30
KPX otilde y -20
KPX otilde yacute -20
KPX otilde ydieresis -20
KPX p y -15
KPX p yacute -15
KPX p ydieresis -15
KPX period quotedblright -120
KPX period quoteright -120
KPX period space -40
KPX quotedblright space -80
KPX quoteleft quoteleft -46
KPX quoteright d -80
KPX quoteright dcroat -80
KPX quoteright l -20
KPX quoteright lacute -20
KPX quoteright lcommaaccent -20
KPX quoteright lslash -20
KPX quoteright quoteright -46
KPX quoteright r -40
KPX quoteright racute -40
KPX quoteright rcaron -40
KPX quoteright rcommaaccent -40
KPX quoteright s -60
KPX quoteright sacute -60
KPX quoteright scaron -60
KPX quoteright scedilla -60
KPX quoteright scommaaccent -60
KPX quoteright space -80
KPX quoteright v -20
KPX r c -20
KPX r cacute -20
KPX r ccaron -20
KPX r ccedilla -20
KPX r comma -60
KPX r d -20
KPX r dcroat -20
KPX r g -15
KPX r gbreve -15
KPX r gcommaaccent -15
KPX r hyphen -20
KPX r o -20
KPX r oacute -20
KPX r ocircumflex -20
KPX r odieresis -20
KPX r ograve -20
KPX r ohungarumlaut -20
KPX r omacron -20
KPX r oslash -20
KPX r otilde -20
KPX r period -60
KPX r q -20
KPX r s -15
KPX r sacute -15
KPX r scaron -15
KPX r scedilla -15
KPX r scommaaccent -15
KPX r t 20
KPX r tcommaaccent 20
KPX r v 10
KPX r y 10
KPX r yacute 10
KPX r ydieresis 10
KPX racute c -20
KPX racute cacute -20
KPX racute ccaron -20
KPX racute ccedilla -20
KPX racute comma -60
KPX racute d -20
KPX racute dcroat -20
KPX racute g -15
KPX racute gbreve -15
KPX racute gcommaaccent -15
KPX racute hyphen -20
KPX racute o -20
KPX racute oacute -20
KPX racute ocircumflex -20
KPX racute odieresis -20
KPX racute ograve -20
KPX racute ohungarumlaut -20
KPX racute omacron -20
KPX racute oslash -20
KPX racute otilde -20
KPX racute period -60
KPX racute q -20
KPX racute s -15
KPX racute sacute -15
KPX racute scaron -15
KPX racute scedilla -15
KPX racute scommaaccent -15
KPX racute t 20
KPX racute tcommaaccent 20
KPX racute v 10
KPX racute y 10
KPX racute yacute 10
KPX racute ydieresis 10
KPX rcaron c -20
KPX rcaron cacute -20
KPX rcaron ccaron -20
KPX rcaron ccedilla -20
KPX rcaron comma -60
KPX rcaron d -20
KPX rcaron dcroat -20
KPX rcaron g -15
KPX rcaron gbreve -15
KPX rcaron gcommaaccent -15
KPX rcaron hyphen -20
KPX rcaron o -20
KPX rcaron oacute -20
KPX rcaron ocircumflex -20
KPX rcaron odieresis -20
KPX rcaron ograve -20
KPX rcaron ohungarumlaut -20
KPX rcaron omacron -20
KPX rcaron oslash -20
KPX rcaron otilde -20
KPX rcaron period -60
KPX rcaron q -20
KPX rcaron s -15
KPX rcaron sacute -15
KPX rcaron scaron -15
KPX rcaron scedilla -15
KPX rcaron scommaaccent -15
KPX rcaron t 20
KPX rcaron tcommaaccent 20
KPX rcaron v 10
KPX rcaron y 10
KPX rcaron yacute 10
KPX rcaron ydieresis 10
KPX rcommaaccent c -20
KPX rcommaaccent cacute -20
KPX rcommaaccent ccaron -20
KPX rcommaaccent ccedilla -20
KPX rcommaaccent comma -60
KPX rcommaaccent d -20
KPX rcommaaccent dcroat -20
KPX rcommaaccent g -15
KPX rcommaaccent gbreve -15
KPX rcommaaccent gcommaaccent -15
KPX rcommaaccent hyphen -20
KPX rcommaaccent o -20
KPX rcommaaccent oacute -20
KPX rcommaaccent ocircumflex -20
KPX rcommaaccent odieresis -20
KPX rcommaaccent ograve -20
KPX rcommaaccent ohungarumlaut -20
KPX rcommaaccent omacron -20
KPX rcommaaccent oslash -20
KPX rcommaaccent otilde -20
KPX rcommaaccent period -60
KPX rcommaaccent q -20
KPX rcommaaccent s -15
KPX rcommaaccent sacute -15
KPX rcommaaccent scaron -15
KPX rcommaaccent scedilla -15
KPX rcommaaccent scommaaccent -15
KPX rcommaaccent t 20
KPX rcommaaccent tcommaaccent 20
KPX rcommaaccent v 10
KPX rcommaaccent y 10
KPX rcommaaccent yacute 10
KPX rcommaaccent ydieresis 10
KPX s w -15
KPX sacute w -15
KPX scaron w -15
KPX scedilla w -15
KPX scommaaccent w -15
KPX semicolon space -40
KPX space T -100
KPX space Tcaron -100
KPX space Tcommaaccent -100
KPX space V -80
KPX space W -80
KPX space Y -120
KPX space Yacute -120
KPX space Ydieresis -120
KPX space quotedblleft -80
KPX space quoteleft -60
KPX v a -20
KPX v aacute -20
KPX v abreve -20
KPX v acircumflex -20
KPX v adieresis -20
KPX v agrave -20
KPX v amacron -20
KPX v aogonek -20
KPX v aring -20
KPX v atilde -20
KPX v comma -80
KPX v o -30
KPX v oacute -30
KPX v ocircumflex -30
KPX v odieresis -30
KPX v ograve -30
KPX v ohungarumlaut -30
KPX v omacron -30
KPX v oslash -30
KPX v otilde -30
KPX v period -80
KPX w comma -40
KPX w o -20
KPX w oacute -20
KPX w ocircumflex -20
KPX w odieresis -20
KPX w ograve -20
KPX w ohungarumlaut -20
KPX w omacron -20
KPX w oslash -20
KPX w otilde -20
KPX w period -40
KPX x e -10
KPX x eacute -10
KPX x ecaron -10
KPX x ecircumflex -10
KPX x edieresis -10
KPX x edotaccent -10
KPX x egrave -10
KPX x emacron -10
KPX x eogonek -10
KPX y a -30
KPX y aacute -30
KPX y abreve -30
KPX y acircumflex -30
KPX y adieresis -30
KPX y agrave -30
KPX y amacron -30
KPX y aogonek -30
KPX y aring -30
KPX y atilde -30
KPX y comma -80
KPX y e -10
KPX y eacute -10
KPX y ecaron -10
KPX y ecircumflex -10
KPX y edieresis -10
KPX y edotaccent -10
KPX y egrave -10
KPX y emacron -10
KPX y eogonek -10
KPX y o -25
KPX y oacute -25
KPX y ocircumflex -25
KPX y odieresis -25
KPX y ograve -25
KPX y ohungarumlaut -25
KPX y omacron -25
KPX y oslash -25
KPX y otilde -25
KPX y period -80
KPX yacute a -30
KPX yacute aacute -30
KPX yacute abreve -30
KPX yacute acircumflex -30
KPX yacute adieresis -30
KPX yacute agrave -30
KPX yacute amacron -30
KPX yacute aogonek -30
KPX yacute aring -30
KPX yacute atilde -30
KPX yacute comma -80
KPX yacute e -10
KPX yacute eacute -10
KPX yacute ecaron -10
KPX yacute ecircumflex -10
KPX yacute edieresis -10
KPX yacute edotaccent -10
KPX yacute egrave -10
KPX yacute emacron -10
KPX yacute eogonek -10
KPX yacute o -25
KPX yacute oacute -25
KPX yacute ocircumflex -25
KPX yacute odieresis -25
KPX yacute ograve -25
KPX yacute ohungarumlaut -25
KPX yacute omacron -25
KPX yacute oslash -25
KPX yacute otilde -25
KPX yacute period -80
KPX ydieresis a -30
KPX ydieresis aacute -30
KPX ydieresis abreve -30
KPX ydieresis acircumflex -30
KPX ydieresis adieresis -30
KPX ydieresis agrave -30
KPX ydieresis amacron -30
KPX ydieresis aogonek -30
KPX ydieresis aring -30
KPX ydieresis atilde -30
KPX ydieresis comma -80
KPX ydieresis e -10
KPX ydieresis eacute -10
KPX ydieresis ecaron -10
KPX ydieresis ecircumflex -10
KPX ydieresis edieresis -10
KPX ydieresis edotaccent -10
KPX ydieresis egrave -10
KPX ydieresis emacron -10
KPX ydieresis eogonek -10
KPX ydieresis o -25
KPX ydieresis oacute -25
KPX ydieresis ocircumflex -25
KPX ydieresis odieresis -25
KPX ydieresis ograve -25
KPX ydieresis ohungarumlaut -25
KPX ydieresis omacron -25
KPX ydieresis oslash -25
KPX ydieresis otilde -25
KPX ydieresis period -80
KPX z e 10
KPX z eacute 10
KPX z ecaron 10
KPX z ecircumflex 10
KPX z edieresis 10
KPX z edotaccent 10
KPX z egrave 10
KPX z emacron 10
KPX z eogonek 10
KPX zacute e 10
KPX zacute eacute 10
KPX zacute ecaron 10
KPX zacute ecircumflex 10
KPX zacute edieresis 10
KPX zacute edotaccent 10
KPX zacute egrave 10
KPX zacute emacron 10
KPX zacute eogonek 10
KPX zcaron e 10
KPX zcaron eacute 10
KPX zcaron ecaron 10
KPX zcaron ecircumflex 10
KPX zcaron edieresis 10
KPX zcaron edotaccent 10
KPX zcaron egrave 10
KPX zcaron emacron 10
KPX zcaron eogonek 10
KPX zdotaccent e 10
KPX zdotaccent eacute 10
KPX zdotaccent ecaron 10
KPX zdotaccent ecircumflex 10
KPX zdotaccent edieresis 10
KPX zdotaccent edotaccent 10
KPX zdotaccent egrave 10
KPX zdotaccent emacron 10
KPX zdotaccent eogonek 10
EndKernPairs
EndKernData
EndFontMetrics
'
%
classmethod: StandardFont
helveticaOblique
	"from http://www.adobe.com/devnet/font.html "

	<font: #'Helvetica-Oblique'>
	^self
		windowsName: 'Arial'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.
Comment Creation Date: Thu May  1 12:44:31 1997
Comment UniqueID 43055
Comment VMusage 14960 69346
FontName Helvetica-Oblique
FullName Helvetica Oblique
FamilyName Helvetica
Weight Medium
ItalicAngle -12
IsFixedPitch false
CharacterSet ExtendedRoman
FontBBox -170 -225 1116 931 
UnderlinePosition -100
UnderlineThickness 50
Version 002.000
Notice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.
EncodingScheme AdobeStandardEncoding
CapHeight 718
XHeight 523
Ascender 718
Descender -207
StdHW 76
StdVW 88
StartCharMetrics 315
C 32 ; WX 278 ; N space ; B 0 0 0 0 ;
C 33 ; WX 278 ; N exclam ; B 90 0 340 718 ;
C 34 ; WX 355 ; N quotedbl ; B 168 463 438 718 ;
C 35 ; WX 556 ; N numbersign ; B 73 0 631 688 ;
C 36 ; WX 556 ; N dollar ; B 69 -115 617 775 ;
C 37 ; WX 889 ; N percent ; B 147 -19 889 703 ;
C 38 ; WX 667 ; N ampersand ; B 77 -15 647 718 ;
C 39 ; WX 222 ; N quoteright ; B 151 463 310 718 ;
C 40 ; WX 333 ; N parenleft ; B 108 -207 454 733 ;
C 41 ; WX 333 ; N parenright ; B -9 -207 337 733 ;
C 42 ; WX 389 ; N asterisk ; B 165 431 475 718 ;
C 43 ; WX 584 ; N plus ; B 85 0 606 505 ;
C 44 ; WX 278 ; N comma ; B 56 -147 214 106 ;
C 45 ; WX 333 ; N hyphen ; B 93 232 357 322 ;
C 46 ; WX 278 ; N period ; B 87 0 214 106 ;
C 47 ; WX 278 ; N slash ; B -21 -19 452 737 ;
C 48 ; WX 556 ; N zero ; B 93 -19 608 703 ;
C 49 ; WX 556 ; N one ; B 207 0 508 703 ;
C 50 ; WX 556 ; N two ; B 26 0 617 703 ;
C 51 ; WX 556 ; N three ; B 75 -19 610 703 ;
C 52 ; WX 556 ; N four ; B 61 0 576 703 ;
C 53 ; WX 556 ; N five ; B 68 -19 621 688 ;
C 54 ; WX 556 ; N six ; B 91 -19 615 703 ;
C 55 ; WX 556 ; N seven ; B 137 0 669 688 ;
C 56 ; WX 556 ; N eight ; B 74 -19 607 703 ;
C 57 ; WX 556 ; N nine ; B 82 -19 609 703 ;
C 58 ; WX 278 ; N colon ; B 87 0 301 516 ;
C 59 ; WX 278 ; N semicolon ; B 56 -147 301 516 ;
C 60 ; WX 584 ; N less ; B 94 11 641 495 ;
C 61 ; WX 584 ; N equal ; B 63 115 628 390 ;
C 62 ; WX 584 ; N greater ; B 50 11 597 495 ;
C 63 ; WX 556 ; N question ; B 161 0 610 727 ;
C 64 ; WX 1015 ; N at ; B 215 -19 965 737 ;
C 65 ; WX 667 ; N A ; B 14 0 654 718 ;
C 66 ; WX 667 ; N B ; B 74 0 712 718 ;
C 67 ; WX 722 ; N C ; B 108 -19 782 737 ;
C 68 ; WX 722 ; N D ; B 81 0 764 718 ;
C 69 ; WX 667 ; N E ; B 86 0 762 718 ;
C 70 ; WX 611 ; N F ; B 86 0 736 718 ;
C 71 ; WX 778 ; N G ; B 111 -19 799 737 ;
C 72 ; WX 722 ; N H ; B 77 0 799 718 ;
C 73 ; WX 278 ; N I ; B 91 0 341 718 ;
C 74 ; WX 500 ; N J ; B 47 -19 581 718 ;
C 75 ; WX 667 ; N K ; B 76 0 808 718 ;
C 76 ; WX 556 ; N L ; B 76 0 555 718 ;
C 77 ; WX 833 ; N M ; B 73 0 914 718 ;
C 78 ; WX 722 ; N N ; B 76 0 799 718 ;
C 79 ; WX 778 ; N O ; B 105 -19 826 737 ;
C 80 ; WX 667 ; N P ; B 86 0 737 718 ;
C 81 ; WX 778 ; N Q ; B 105 -56 826 737 ;
C 82 ; WX 722 ; N R ; B 88 0 773 718 ;
C 83 ; WX 667 ; N S ; B 90 -19 713 737 ;
C 84 ; WX 611 ; N T ; B 148 0 750 718 ;
C 85 ; WX 722 ; N U ; B 123 -19 797 718 ;
C 86 ; WX 667 ; N V ; B 173 0 800 718 ;
C 87 ; WX 944 ; N W ; B 169 0 1081 718 ;
C 88 ; WX 667 ; N X ; B 19 0 790 718 ;
C 89 ; WX 667 ; N Y ; B 167 0 806 718 ;
C 90 ; WX 611 ; N Z ; B 23 0 741 718 ;
C 91 ; WX 278 ; N bracketleft ; B 21 -196 403 722 ;
C 92 ; WX 278 ; N backslash ; B 140 -19 291 737 ;
C 93 ; WX 278 ; N bracketright ; B -14 -196 368 722 ;
C 94 ; WX 469 ; N asciicircum ; B 42 264 539 688 ;
C 95 ; WX 556 ; N underscore ; B -27 -125 540 -75 ;
C 96 ; WX 222 ; N quoteleft ; B 165 470 323 725 ;
C 97 ; WX 556 ; N a ; B 61 -15 559 538 ;
C 98 ; WX 556 ; N b ; B 58 -15 584 718 ;
C 99 ; WX 500 ; N c ; B 74 -15 553 538 ;
C 100 ; WX 556 ; N d ; B 84 -15 652 718 ;
C 101 ; WX 556 ; N e ; B 84 -15 578 538 ;
C 102 ; WX 278 ; N f ; B 86 0 416 728 ; L i fi ; L l fl ;
C 103 ; WX 556 ; N g ; B 42 -220 610 538 ;
C 104 ; WX 556 ; N h ; B 65 0 573 718 ;
C 105 ; WX 222 ; N i ; B 67 0 308 718 ;
C 106 ; WX 222 ; N j ; B -60 -210 308 718 ;
C 107 ; WX 500 ; N k ; B 67 0 600 718 ;
C 108 ; WX 222 ; N l ; B 67 0 308 718 ;
C 109 ; WX 833 ; N m ; B 65 0 852 538 ;
C 110 ; WX 556 ; N n ; B 65 0 573 538 ;
C 111 ; WX 556 ; N o ; B 83 -14 585 538 ;
C 112 ; WX 556 ; N p ; B 14 -207 584 538 ;
C 113 ; WX 556 ; N q ; B 84 -207 605 538 ;
C 114 ; WX 333 ; N r ; B 77 0 446 538 ;
C 115 ; WX 500 ; N s ; B 63 -15 529 538 ;
C 116 ; WX 278 ; N t ; B 102 -7 368 669 ;
C 117 ; WX 556 ; N u ; B 94 -15 600 523 ;
C 118 ; WX 500 ; N v ; B 119 0 603 523 ;
C 119 ; WX 722 ; N w ; B 125 0 820 523 ;
C 120 ; WX 500 ; N x ; B 11 0 594 523 ;
C 121 ; WX 500 ; N y ; B 15 -214 600 523 ;
C 122 ; WX 500 ; N z ; B 31 0 571 523 ;
C 123 ; WX 334 ; N braceleft ; B 92 -196 445 722 ;
C 124 ; WX 260 ; N bar ; B 46 -225 332 775 ;
C 125 ; WX 334 ; N braceright ; B 0 -196 354 722 ;
C 126 ; WX 584 ; N asciitilde ; B 111 180 580 326 ;
C 161 ; WX 333 ; N exclamdown ; B 77 -195 326 523 ;
C 162 ; WX 556 ; N cent ; B 95 -115 584 623 ;
C 163 ; WX 556 ; N sterling ; B 49 -16 634 718 ;
C 164 ; WX 167 ; N fraction ; B -170 -19 482 703 ;
C 165 ; WX 556 ; N yen ; B 81 0 699 688 ;
C 166 ; WX 556 ; N florin ; B -52 -207 654 737 ;
C 167 ; WX 556 ; N section ; B 76 -191 584 737 ;
C 168 ; WX 556 ; N currency ; B 60 99 646 603 ;
C 169 ; WX 191 ; N quotesingle ; B 157 463 285 718 ;
C 170 ; WX 333 ; N quotedblleft ; B 138 470 461 725 ;
C 171 ; WX 556 ; N guillemotleft ; B 146 108 554 446 ;
C 172 ; WX 333 ; N guilsinglleft ; B 137 108 340 446 ;
C 173 ; WX 333 ; N guilsinglright ; B 111 108 314 446 ;
C 174 ; WX 500 ; N fi ; B 86 0 587 728 ;
C 175 ; WX 500 ; N fl ; B 86 0 585 728 ;
C 177 ; WX 556 ; N endash ; B 51 240 623 313 ;
C 178 ; WX 556 ; N dagger ; B 135 -159 622 718 ;
C 179 ; WX 556 ; N daggerdbl ; B 52 -159 623 718 ;
C 180 ; WX 278 ; N periodcentered ; B 129 190 257 315 ;
C 182 ; WX 537 ; N paragraph ; B 126 -173 650 718 ;
C 183 ; WX 350 ; N bullet ; B 91 202 413 517 ;
C 184 ; WX 222 ; N quotesinglbase ; B 21 -149 180 106 ;
C 185 ; WX 333 ; N quotedblbase ; B -6 -149 318 106 ;
C 186 ; WX 333 ; N quotedblright ; B 124 463 448 718 ;
C 187 ; WX 556 ; N guillemotright ; B 120 108 528 446 ;
C 188 ; WX 1000 ; N ellipsis ; B 115 0 908 106 ;
C 189 ; WX 1000 ; N perthousand ; B 88 -19 1029 703 ;
C 191 ; WX 611 ; N questiondown ; B 85 -201 534 525 ;
C 193 ; WX 333 ; N grave ; B 170 593 337 734 ;
C 194 ; WX 333 ; N acute ; B 248 593 475 734 ;
C 195 ; WX 333 ; N circumflex ; B 147 593 438 734 ;
C 196 ; WX 333 ; N tilde ; B 125 606 490 722 ;
C 197 ; WX 333 ; N macron ; B 143 627 468 684 ;
C 198 ; WX 333 ; N breve ; B 167 595 476 731 ;
C 199 ; WX 333 ; N dotaccent ; B 249 604 362 706 ;
C 200 ; WX 333 ; N dieresis ; B 168 604 443 706 ;
C 202 ; WX 333 ; N ring ; B 214 572 402 756 ;
C 203 ; WX 333 ; N cedilla ; B 2 -225 232 0 ;
C 205 ; WX 333 ; N hungarumlaut ; B 157 593 565 734 ;
C 206 ; WX 333 ; N ogonek ; B 43 -225 249 0 ;
C 207 ; WX 333 ; N caron ; B 177 593 468 734 ;
C 208 ; WX 1000 ; N emdash ; B 51 240 1067 313 ;
C 225 ; WX 1000 ; N AE ; B 8 0 1097 718 ;
C 227 ; WX 370 ; N ordfeminine ; B 127 405 449 737 ;
C 232 ; WX 556 ; N Lslash ; B 41 0 555 718 ;
C 233 ; WX 778 ; N Oslash ; B 43 -19 890 737 ;
C 234 ; WX 1000 ; N OE ; B 98 -19 1116 737 ;
C 235 ; WX 365 ; N ordmasculine ; B 141 405 468 737 ;
C 241 ; WX 889 ; N ae ; B 61 -15 909 538 ;
C 245 ; WX 278 ; N dotlessi ; B 95 0 294 523 ;
C 248 ; WX 222 ; N lslash ; B 41 0 347 718 ;
C 249 ; WX 611 ; N oslash ; B 29 -22 647 545 ;
C 250 ; WX 944 ; N oe ; B 83 -15 964 538 ;
C 251 ; WX 611 ; N germandbls ; B 67 -15 658 728 ;
C -1 ; WX 278 ; N Idieresis ; B 91 0 458 901 ;
C -1 ; WX 556 ; N eacute ; B 84 -15 587 734 ;
C -1 ; WX 556 ; N abreve ; B 61 -15 578 731 ;
C -1 ; WX 556 ; N uhungarumlaut ; B 94 -15 677 734 ;
C -1 ; WX 556 ; N ecaron ; B 84 -15 580 734 ;
C -1 ; WX 667 ; N Ydieresis ; B 167 0 806 901 ;
C -1 ; WX 584 ; N divide ; B 85 -19 606 524 ;
C -1 ; WX 667 ; N Yacute ; B 167 0 806 929 ;
C -1 ; WX 667 ; N Acircumflex ; B 14 0 654 929 ;
C -1 ; WX 556 ; N aacute ; B 61 -15 587 734 ;
C -1 ; WX 722 ; N Ucircumflex ; B 123 -19 797 929 ;
C -1 ; WX 500 ; N yacute ; B 15 -214 600 734 ;
C -1 ; WX 500 ; N scommaaccent ; B 63 -225 529 538 ;
C -1 ; WX 556 ; N ecircumflex ; B 84 -15 578 734 ;
C -1 ; WX 722 ; N Uring ; B 123 -19 797 931 ;
C -1 ; WX 722 ; N Udieresis ; B 123 -19 797 901 ;
C -1 ; WX 556 ; N aogonek ; B 61 -220 559 538 ;
C -1 ; WX 722 ; N Uacute ; B 123 -19 797 929 ;
C -1 ; WX 556 ; N uogonek ; B 94 -225 600 523 ;
C -1 ; WX 667 ; N Edieresis ; B 86 0 762 901 ;
C -1 ; WX 722 ; N Dcroat ; B 69 0 764 718 ;
C -1 ; WX 250 ; N commaaccent ; B 39 -225 172 -40 ;
C -1 ; WX 737 ; N copyright ; B 54 -19 837 737 ;
C -1 ; WX 667 ; N Emacron ; B 86 0 762 879 ;
C -1 ; WX 500 ; N ccaron ; B 74 -15 553 734 ;
C -1 ; WX 556 ; N aring ; B 61 -15 559 756 ;
C -1 ; WX 722 ; N Ncommaaccent ; B 76 -225 799 718 ;
C -1 ; WX 222 ; N lacute ; B 67 0 461 929 ;
C -1 ; WX 556 ; N agrave ; B 61 -15 559 734 ;
C -1 ; WX 611 ; N Tcommaaccent ; B 148 -225 750 718 ;
C -1 ; WX 722 ; N Cacute ; B 108 -19 782 929 ;
C -1 ; WX 556 ; N atilde ; B 61 -15 592 722 ;
C -1 ; WX 667 ; N Edotaccent ; B 86 0 762 901 ;
C -1 ; WX 500 ; N scaron ; B 63 -15 552 734 ;
C -1 ; WX 500 ; N scedilla ; B 63 -225 529 538 ;
C -1 ; WX 278 ; N iacute ; B 95 0 448 734 ;
C -1 ; WX 471 ; N lozenge ; B 88 0 540 728 ;
C -1 ; WX 722 ; N Rcaron ; B 88 0 773 929 ;
C -1 ; WX 778 ; N Gcommaaccent ; B 111 -225 799 737 ;
C -1 ; WX 556 ; N ucircumflex ; B 94 -15 600 734 ;
C -1 ; WX 556 ; N acircumflex ; B 61 -15 559 734 ;
C -1 ; WX 667 ; N Amacron ; B 14 0 677 879 ;
C -1 ; WX 333 ; N rcaron ; B 77 0 508 734 ;
C -1 ; WX 500 ; N ccedilla ; B 74 -225 553 538 ;
C -1 ; WX 611 ; N Zdotaccent ; B 23 0 741 901 ;
C -1 ; WX 667 ; N Thorn ; B 86 0 712 718 ;
C -1 ; WX 778 ; N Omacron ; B 105 -19 826 879 ;
C -1 ; WX 722 ; N Racute ; B 88 0 773 929 ;
C -1 ; WX 667 ; N Sacute ; B 90 -19 713 929 ;
C -1 ; WX 643 ; N dcaron ; B 84 -15 808 718 ;
C -1 ; WX 722 ; N Umacron ; B 123 -19 797 879 ;
C -1 ; WX 556 ; N uring ; B 94 -15 600 756 ;
C -1 ; WX 333 ; N threesuperior ; B 90 270 436 703 ;
C -1 ; WX 778 ; N Ograve ; B 105 -19 826 929 ;
C -1 ; WX 667 ; N Agrave ; B 14 0 654 929 ;
C -1 ; WX 667 ; N Abreve ; B 14 0 685 926 ;
C -1 ; WX 584 ; N multiply ; B 50 0 642 506 ;
C -1 ; WX 556 ; N uacute ; B 94 -15 600 734 ;
C -1 ; WX 611 ; N Tcaron ; B 148 0 750 929 ;
C -1 ; WX 476 ; N partialdiff ; B 41 -38 550 714 ;
C -1 ; WX 500 ; N ydieresis ; B 15 -214 600 706 ;
C -1 ; WX 722 ; N Nacute ; B 76 0 799 929 ;
C -1 ; WX 278 ; N icircumflex ; B 95 0 411 734 ;
C -1 ; WX 667 ; N Ecircumflex ; B 86 0 762 929 ;
C -1 ; WX 556 ; N adieresis ; B 61 -15 559 706 ;
C -1 ; WX 556 ; N edieresis ; B 84 -15 578 706 ;
C -1 ; WX 500 ; N cacute ; B 74 -15 559 734 ;
C -1 ; WX 556 ; N nacute ; B 65 0 587 734 ;
C -1 ; WX 556 ; N umacron ; B 94 -15 600 684 ;
C -1 ; WX 722 ; N Ncaron ; B 76 0 799 929 ;
C -1 ; WX 278 ; N Iacute ; B 91 0 489 929 ;
C -1 ; WX 584 ; N plusminus ; B 39 0 618 506 ;
C -1 ; WX 260 ; N brokenbar ; B 62 -150 316 700 ;
C -1 ; WX 737 ; N registered ; B 54 -19 837 737 ;
C -1 ; WX 778 ; N Gbreve ; B 111 -19 799 926 ;
C -1 ; WX 278 ; N Idotaccent ; B 91 0 377 901 ;
C -1 ; WX 600 ; N summation ; B 15 -10 671 706 ;
C -1 ; WX 667 ; N Egrave ; B 86 0 762 929 ;
C -1 ; WX 333 ; N racute ; B 77 0 475 734 ;
C -1 ; WX 556 ; N omacron ; B 83 -14 585 684 ;
C -1 ; WX 611 ; N Zacute ; B 23 0 741 929 ;
C -1 ; WX 611 ; N Zcaron ; B 23 0 741 929 ;
C -1 ; WX 549 ; N greaterequal ; B 26 0 620 674 ;
C -1 ; WX 722 ; N Eth ; B 69 0 764 718 ;
C -1 ; WX 722 ; N Ccedilla ; B 108 -225 782 737 ;
C -1 ; WX 222 ; N lcommaaccent ; B 25 -225 308 718 ;
C -1 ; WX 317 ; N tcaron ; B 102 -7 501 808 ;
C -1 ; WX 556 ; N eogonek ; B 84 -225 578 538 ;
C -1 ; WX 722 ; N Uogonek ; B 123 -225 797 718 ;
C -1 ; WX 667 ; N Aacute ; B 14 0 683 929 ;
C -1 ; WX 667 ; N Adieresis ; B 14 0 654 901 ;
C -1 ; WX 556 ; N egrave ; B 84 -15 578 734 ;
C -1 ; WX 500 ; N zacute ; B 31 0 571 734 ;
C -1 ; WX 222 ; N iogonek ; B -61 -225 308 718 ;
C -1 ; WX 778 ; N Oacute ; B 105 -19 826 929 ;
C -1 ; WX 556 ; N oacute ; B 83 -14 587 734 ;
C -1 ; WX 556 ; N amacron ; B 61 -15 580 684 ;
C -1 ; WX 500 ; N sacute ; B 63 -15 559 734 ;
C -1 ; WX 278 ; N idieresis ; B 95 0 416 706 ;
C -1 ; WX 778 ; N Ocircumflex ; B 105 -19 826 929 ;
C -1 ; WX 722 ; N Ugrave ; B 123 -19 797 929 ;
C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;
C -1 ; WX 556 ; N thorn ; B 14 -207 584 718 ;
C -1 ; WX 333 ; N twosuperior ; B 64 281 449 703 ;
C -1 ; WX 778 ; N Odieresis ; B 105 -19 826 901 ;
C -1 ; WX 556 ; N mu ; B 24 -207 600 523 ;
C -1 ; WX 278 ; N igrave ; B 95 0 310 734 ;
C -1 ; WX 556 ; N ohungarumlaut ; B 83 -14 677 734 ;
C -1 ; WX 667 ; N Eogonek ; B 86 -220 762 718 ;
C -1 ; WX 556 ; N dcroat ; B 84 -15 689 718 ;
C -1 ; WX 834 ; N threequarters ; B 130 -19 861 703 ;
C -1 ; WX 667 ; N Scedilla ; B 90 -225 713 737 ;
C -1 ; WX 299 ; N lcaron ; B 67 0 464 718 ;
C -1 ; WX 667 ; N Kcommaaccent ; B 76 -225 808 718 ;
C -1 ; WX 556 ; N Lacute ; B 76 0 555 929 ;
C -1 ; WX 1000 ; N trademark ; B 186 306 1056 718 ;
C -1 ; WX 556 ; N edotaccent ; B 84 -15 578 706 ;
C -1 ; WX 278 ; N Igrave ; B 91 0 351 929 ;
C -1 ; WX 278 ; N Imacron ; B 91 0 483 879 ;
C -1 ; WX 556 ; N Lcaron ; B 76 0 570 718 ;
C -1 ; WX 834 ; N onehalf ; B 114 -19 839 703 ;
C -1 ; WX 549 ; N lessequal ; B 26 0 666 674 ;
C -1 ; WX 556 ; N ocircumflex ; B 83 -14 585 734 ;
C -1 ; WX 556 ; N ntilde ; B 65 0 592 722 ;
C -1 ; WX 722 ; N Uhungarumlaut ; B 123 -19 801 929 ;
C -1 ; WX 667 ; N Eacute ; B 86 0 762 929 ;
C -1 ; WX 556 ; N emacron ; B 84 -15 580 684 ;
C -1 ; WX 556 ; N gbreve ; B 42 -220 610 731 ;
C -1 ; WX 834 ; N onequarter ; B 150 -19 802 703 ;
C -1 ; WX 667 ; N Scaron ; B 90 -19 713 929 ;
C -1 ; WX 667 ; N Scommaaccent ; B 90 -225 713 737 ;
C -1 ; WX 778 ; N Ohungarumlaut ; B 105 -19 829 929 ;
C -1 ; WX 400 ; N degree ; B 169 411 468 703 ;
C -1 ; WX 556 ; N ograve ; B 83 -14 585 734 ;
C -1 ; WX 722 ; N Ccaron ; B 108 -19 782 929 ;
C -1 ; WX 556 ; N ugrave ; B 94 -15 600 734 ;
C -1 ; WX 453 ; N radical ; B 79 -80 617 762 ;
C -1 ; WX 722 ; N Dcaron ; B 81 0 764 929 ;
C -1 ; WX 333 ; N rcommaaccent ; B 30 -225 446 538 ;
C -1 ; WX 722 ; N Ntilde ; B 76 0 799 917 ;
C -1 ; WX 556 ; N otilde ; B 83 -14 602 722 ;
C -1 ; WX 722 ; N Rcommaaccent ; B 88 -225 773 718 ;
C -1 ; WX 556 ; N Lcommaaccent ; B 76 -225 555 718 ;
C -1 ; WX 667 ; N Atilde ; B 14 0 699 917 ;
C -1 ; WX 667 ; N Aogonek ; B 14 -225 654 718 ;
C -1 ; WX 667 ; N Aring ; B 14 0 654 931 ;
C -1 ; WX 778 ; N Otilde ; B 105 -19 826 917 ;
C -1 ; WX 500 ; N zdotaccent ; B 31 0 571 706 ;
C -1 ; WX 667 ; N Ecaron ; B 86 0 762 929 ;
C -1 ; WX 278 ; N Iogonek ; B -33 -225 341 718 ;
C -1 ; WX 500 ; N kcommaaccent ; B 67 -225 600 718 ;
C -1 ; WX 584 ; N minus ; B 85 216 606 289 ;
C -1 ; WX 278 ; N Icircumflex ; B 91 0 452 929 ;
C -1 ; WX 556 ; N ncaron ; B 65 0 580 734 ;
C -1 ; WX 278 ; N tcommaaccent ; B 63 -225 368 669 ;
C -1 ; WX 584 ; N logicalnot ; B 106 108 628 390 ;
C -1 ; WX 556 ; N odieresis ; B 83 -14 585 706 ;
C -1 ; WX 556 ; N udieresis ; B 94 -15 600 706 ;
C -1 ; WX 549 ; N notequal ; B 34 -35 623 551 ;
C -1 ; WX 556 ; N gcommaaccent ; B 42 -220 610 822 ;
C -1 ; WX 556 ; N eth ; B 81 -15 617 737 ;
C -1 ; WX 500 ; N zcaron ; B 31 0 571 734 ;
C -1 ; WX 556 ; N ncommaaccent ; B 65 -225 573 538 ;
C -1 ; WX 333 ; N onesuperior ; B 166 281 371 703 ;
C -1 ; WX 278 ; N imacron ; B 95 0 417 684 ;
C -1 ; WX 556 ; N Euro ; B 0 0 0 0 ;
EndCharMetrics
StartKernData
StartKernPairs 2705
KPX A C -30
KPX A Cacute -30
KPX A Ccaron -30
KPX A Ccedilla -30
KPX A G -30
KPX A Gbreve -30
KPX A Gcommaaccent -30
KPX A O -30
KPX A Oacute -30
KPX A Ocircumflex -30
KPX A Odieresis -30
KPX A Ograve -30
KPX A Ohungarumlaut -30
KPX A Omacron -30
KPX A Oslash -30
KPX A Otilde -30
KPX A Q -30
KPX A T -120
KPX A Tcaron -120
KPX A Tcommaaccent -120
KPX A U -50
KPX A Uacute -50
KPX A Ucircumflex -50
KPX A Udieresis -50
KPX A Ugrave -50
KPX A Uhungarumlaut -50
KPX A Umacron -50
KPX A Uogonek -50
KPX A Uring -50
KPX A V -70
KPX A W -50
KPX A Y -100
KPX A Yacute -100
KPX A Ydieresis -100
KPX A u -30
KPX A uacute -30
KPX A ucircumflex -30
KPX A udieresis -30
KPX A ugrave -30
KPX A uhungarumlaut -30
KPX A umacron -30
KPX A uogonek -30
KPX A uring -30
KPX A v -40
KPX A w -40
KPX A y -40
KPX A yacute -40
KPX A ydieresis -40
KPX Aacute C -30
KPX Aacute Cacute -30
KPX Aacute Ccaron -30
KPX Aacute Ccedilla -30
KPX Aacute G -30
KPX Aacute Gbreve -30
KPX Aacute Gcommaaccent -30
KPX Aacute O -30
KPX Aacute Oacute -30
KPX Aacute Ocircumflex -30
KPX Aacute Odieresis -30
KPX Aacute Ograve -30
KPX Aacute Ohungarumlaut -30
KPX Aacute Omacron -30
KPX Aacute Oslash -30
KPX Aacute Otilde -30
KPX Aacute Q -30
KPX Aacute T -120
KPX Aacute Tcaron -120
KPX Aacute Tcommaaccent -120
KPX Aacute U -50
KPX Aacute Uacute -50
KPX Aacute Ucircumflex -50
KPX Aacute Udieresis -50
KPX Aacute Ugrave -50
KPX Aacute Uhungarumlaut -50
KPX Aacute Umacron -50
KPX Aacute Uogonek -50
KPX Aacute Uring -50
KPX Aacute V -70
KPX Aacute W -50
KPX Aacute Y -100
KPX Aacute Yacute -100
KPX Aacute Ydieresis -100
KPX Aacute u -30
KPX Aacute uacute -30
KPX Aacute ucircumflex -30
KPX Aacute udieresis -30
KPX Aacute ugrave -30
KPX Aacute uhungarumlaut -30
KPX Aacute umacron -30
KPX Aacute uogonek -30
KPX Aacute uring -30
KPX Aacute v -40
KPX Aacute w -40
KPX Aacute y -40
KPX Aacute yacute -40
KPX Aacute ydieresis -40
KPX Abreve C -30
KPX Abreve Cacute -30
KPX Abreve Ccaron -30
KPX Abreve Ccedilla -30
KPX Abreve G -30
KPX Abreve Gbreve -30
KPX Abreve Gcommaaccent -30
KPX Abreve O -30
KPX Abreve Oacute -30
KPX Abreve Ocircumflex -30
KPX Abreve Odieresis -30
KPX Abreve Ograve -30
KPX Abreve Ohungarumlaut -30
KPX Abreve Omacron -30
KPX Abreve Oslash -30
KPX Abreve Otilde -30
KPX Abreve Q -30
KPX Abreve T -120
KPX Abreve Tcaron -120
KPX Abreve Tcommaaccent -120
KPX Abreve U -50
KPX Abreve Uacute -50
KPX Abreve Ucircumflex -50
KPX Abreve Udieresis -50
KPX Abreve Ugrave -50
KPX Abreve Uhungarumlaut -50
KPX Abreve Umacron -50
KPX Abreve Uogonek -50
KPX Abreve Uring -50
KPX Abreve V -70
KPX Abreve W -50
KPX Abreve Y -100
KPX Abreve Yacute -100
KPX Abreve Ydieresis -100
KPX Abreve u -30
KPX Abreve uacute -30
KPX Abreve ucircumflex -30
KPX Abreve udieresis -30
KPX Abreve ugrave -30
KPX Abreve uhungarumlaut -30
KPX Abreve umacron -30
KPX Abreve uogonek -30
KPX Abreve uring -30
KPX Abreve v -40
KPX Abreve w -40
KPX Abreve y -40
KPX Abreve yacute -40
KPX Abreve ydieresis -40
KPX Acircumflex C -30
KPX Acircumflex Cacute -30
KPX Acircumflex Ccaron -30
KPX Acircumflex Ccedilla -30
KPX Acircumflex G -30
KPX Acircumflex Gbreve -30
KPX Acircumflex Gcommaaccent -30
KPX Acircumflex O -30
KPX Acircumflex Oacute -30
KPX Acircumflex Ocircumflex -30
KPX Acircumflex Odieresis -30
KPX Acircumflex Ograve -30
KPX Acircumflex Ohungarumlaut -30
KPX Acircumflex Omacron -30
KPX Acircumflex Oslash -30
KPX Acircumflex Otilde -30
KPX Acircumflex Q -30
KPX Acircumflex T -120
KPX Acircumflex Tcaron -120
KPX Acircumflex Tcommaaccent -120
KPX Acircumflex U -50
KPX Acircumflex Uacute -50
KPX Acircumflex Ucircumflex -50
KPX Acircumflex Udieresis -50
KPX Acircumflex Ugrave -50
KPX Acircumflex Uhungarumlaut -50
KPX Acircumflex Umacron -50
KPX Acircumflex Uogonek -50
KPX Acircumflex Uring -50
KPX Acircumflex V -70
KPX Acircumflex W -50
KPX Acircumflex Y -100
KPX Acircumflex Yacute -100
KPX Acircumflex Ydieresis -100
KPX Acircumflex u -30
KPX Acircumflex uacute -30
KPX Acircumflex ucircumflex -30
KPX Acircumflex udieresis -30
KPX Acircumflex ugrave -30
KPX Acircumflex uhungarumlaut -30
KPX Acircumflex umacron -30
KPX Acircumflex uogonek -30
KPX Acircumflex uring -30
KPX Acircumflex v -40
KPX Acircumflex w -40
KPX Acircumflex y -40
KPX Acircumflex yacute -40
KPX Acircumflex ydieresis -40
KPX Adieresis C -30
KPX Adieresis Cacute -30
KPX Adieresis Ccaron -30
KPX Adieresis Ccedilla -30
KPX Adieresis G -30
KPX Adieresis Gbreve -30
KPX Adieresis Gcommaaccent -30
KPX Adieresis O -30
KPX Adieresis Oacute -30
KPX Adieresis Ocircumflex -30
KPX Adieresis Odieresis -30
KPX Adieresis Ograve -30
KPX Adieresis Ohungarumlaut -30
KPX Adieresis Omacron -30
KPX Adieresis Oslash -30
KPX Adieresis Otilde -30
KPX Adieresis Q -30
KPX Adieresis T -120
KPX Adieresis Tcaron -120
KPX Adieresis Tcommaaccent -120
KPX Adieresis U -50
KPX Adieresis Uacute -50
KPX Adieresis Ucircumflex -50
KPX Adieresis Udieresis -50
KPX Adieresis Ugrave -50
KPX Adieresis Uhungarumlaut -50
KPX Adieresis Umacron -50
KPX Adieresis Uogonek -50
KPX Adieresis Uring -50
KPX Adieresis V -70
KPX Adieresis W -50
KPX Adieresis Y -100
KPX Adieresis Yacute -100
KPX Adieresis Ydieresis -100
KPX Adieresis u -30
KPX Adieresis uacute -30
KPX Adieresis ucircumflex -30
KPX Adieresis udieresis -30
KPX Adieresis ugrave -30
KPX Adieresis uhungarumlaut -30
KPX Adieresis umacron -30
KPX Adieresis uogonek -30
KPX Adieresis uring -30
KPX Adieresis v -40
KPX Adieresis w -40
KPX Adieresis y -40
KPX Adieresis yacute -40
KPX Adieresis ydieresis -40
KPX Agrave C -30
KPX Agrave Cacute -30
KPX Agrave Ccaron -30
KPX Agrave Ccedilla -30
KPX Agrave G -30
KPX Agrave Gbreve -30
KPX Agrave Gcommaaccent -30
KPX Agrave O -30
KPX Agrave Oacute -30
KPX Agrave Ocircumflex -30
KPX Agrave Odieresis -30
KPX Agrave Ograve -30
KPX Agrave Ohungarumlaut -30
KPX Agrave Omacron -30
KPX Agrave Oslash -30
KPX Agrave Otilde -30
KPX Agrave Q -30
KPX Agrave T -120
KPX Agrave Tcaron -120
KPX Agrave Tcommaaccent -120
KPX Agrave U -50
KPX Agrave Uacute -50
KPX Agrave Ucircumflex -50
KPX Agrave Udieresis -50
KPX Agrave Ugrave -50
KPX Agrave Uhungarumlaut -50
KPX Agrave Umacron -50
KPX Agrave Uogonek -50
KPX Agrave Uring -50
KPX Agrave V -70
KPX Agrave W -50
KPX Agrave Y -100
KPX Agrave Yacute -100
KPX Agrave Ydieresis -100
KPX Agrave u -30
KPX Agrave uacute -30
KPX Agrave ucircumflex -30
KPX Agrave udieresis -30
KPX Agrave ugrave -30
KPX Agrave uhungarumlaut -30
KPX Agrave umacron -30
KPX Agrave uogonek -30
KPX Agrave uring -30
KPX Agrave v -40
KPX Agrave w -40
KPX Agrave y -40
KPX Agrave yacute -40
KPX Agrave ydieresis -40
KPX Amacron C -30
KPX Amacron Cacute -30
KPX Amacron Ccaron -30
KPX Amacron Ccedilla -30
KPX Amacron G -30
KPX Amacron Gbreve -30
KPX Amacron Gcommaaccent -30
KPX Amacron O -30
KPX Amacron Oacute -30
KPX Amacron Ocircumflex -30
KPX Amacron Odieresis -30
KPX Amacron Ograve -30
KPX Amacron Ohungarumlaut -30
KPX Amacron Omacron -30
KPX Amacron Oslash -30
KPX Amacron Otilde -30
KPX Amacron Q -30
KPX Amacron T -120
KPX Amacron Tcaron -120
KPX Amacron Tcommaaccent -120
KPX Amacron U -50
KPX Amacron Uacute -50
KPX Amacron Ucircumflex -50
KPX Amacron Udieresis -50
KPX Amacron Ugrave -50
KPX Amacron Uhungarumlaut -50
KPX Amacron Umacron -50
KPX Amacron Uogonek -50
KPX Amacron Uring -50
KPX Amacron V -70
KPX Amacron W -50
KPX Amacron Y -100
KPX Amacron Yacute -100
KPX Amacron Ydieresis -100
KPX Amacron u -30
KPX Amacron uacute -30
KPX Amacron ucircumflex -30
KPX Amacron udieresis -30
KPX Amacron ugrave -30
KPX Amacron uhungarumlaut -30
KPX Amacron umacron -30
KPX Amacron uogonek -30
KPX Amacron uring -30
KPX Amacron v -40
KPX Amacron w -40
KPX Amacron y -40
KPX Amacron yacute -40
KPX Amacron ydieresis -40
KPX Aogonek C -30
KPX Aogonek Cacute -30
KPX Aogonek Ccaron -30
KPX Aogonek Ccedilla -30
KPX Aogonek G -30
KPX Aogonek Gbreve -30
KPX Aogonek Gcommaaccent -30
KPX Aogonek O -30
KPX Aogonek Oacute -30
KPX Aogonek Ocircumflex -30
KPX Aogonek Odieresis -30
KPX Aogonek Ograve -30
KPX Aogonek Ohungarumlaut -30
KPX Aogonek Omacron -30
KPX Aogonek Oslash -30
KPX Aogonek Otilde -30
KPX Aogonek Q -30
KPX Aogonek T -120
KPX Aogonek Tcaron -120
KPX Aogonek Tcommaaccent -120
KPX Aogonek U -50
KPX Aogonek Uacute -50
KPX Aogonek Ucircumflex -50
KPX Aogonek Udieresis -50
KPX Aogonek Ugrave -50
KPX Aogonek Uhungarumlaut -50
KPX Aogonek Umacron -50
KPX Aogonek Uogonek -50
KPX Aogonek Uring -50
KPX Aogonek V -70
KPX Aogonek W -50
KPX Aogonek Y -100
KPX Aogonek Yacute -100
KPX Aogonek Ydieresis -100
KPX Aogonek u -30
KPX Aogonek uacute -30
KPX Aogonek ucircumflex -30
KPX Aogonek udieresis -30
KPX Aogonek ugrave -30
KPX Aogonek uhungarumlaut -30
KPX Aogonek umacron -30
KPX Aogonek uogonek -30
KPX Aogonek uring -30
KPX Aogonek v -40
KPX Aogonek w -40
KPX Aogonek y -40
KPX Aogonek yacute -40
KPX Aogonek ydieresis -40
KPX Aring C -30
KPX Aring Cacute -30
KPX Aring Ccaron -30
KPX Aring Ccedilla -30
KPX Aring G -30
KPX Aring Gbreve -30
KPX Aring Gcommaaccent -30
KPX Aring O -30
KPX Aring Oacute -30
KPX Aring Ocircumflex -30
KPX Aring Odieresis -30
KPX Aring Ograve -30
KPX Aring Ohungarumlaut -30
KPX Aring Omacron -30
KPX Aring Oslash -30
KPX Aring Otilde -30
KPX Aring Q -30
KPX Aring T -120
KPX Aring Tcaron -120
KPX Aring Tcommaaccent -120
KPX Aring U -50
KPX Aring Uacute -50
KPX Aring Ucircumflex -50
KPX Aring Udieresis -50
KPX Aring Ugrave -50
KPX Aring Uhungarumlaut -50
KPX Aring Umacron -50
KPX Aring Uogonek -50
KPX Aring Uring -50
KPX Aring V -70
KPX Aring W -50
KPX Aring Y -100
KPX Aring Yacute -100
KPX Aring Ydieresis -100
KPX Aring u -30
KPX Aring uacute -30
KPX Aring ucircumflex -30
KPX Aring udieresis -30
KPX Aring ugrave -30
KPX Aring uhungarumlaut -30
KPX Aring umacron -30
KPX Aring uogonek -30
KPX Aring uring -30
KPX Aring v -40
KPX Aring w -40
KPX Aring y -40
KPX Aring yacute -40
KPX Aring ydieresis -40
KPX Atilde C -30
KPX Atilde Cacute -30
KPX Atilde Ccaron -30
KPX Atilde Ccedilla -30
KPX Atilde G -30
KPX Atilde Gbreve -30
KPX Atilde Gcommaaccent -30
KPX Atilde O -30
KPX Atilde Oacute -30
KPX Atilde Ocircumflex -30
KPX Atilde Odieresis -30
KPX Atilde Ograve -30
KPX Atilde Ohungarumlaut -30
KPX Atilde Omacron -30
KPX Atilde Oslash -30
KPX Atilde Otilde -30
KPX Atilde Q -30
KPX Atilde T -120
KPX Atilde Tcaron -120
KPX Atilde Tcommaaccent -120
KPX Atilde U -50
KPX Atilde Uacute -50
KPX Atilde Ucircumflex -50
KPX Atilde Udieresis -50
KPX Atilde Ugrave -50
KPX Atilde Uhungarumlaut -50
KPX Atilde Umacron -50
KPX Atilde Uogonek -50
KPX Atilde Uring -50
KPX Atilde V -70
KPX Atilde W -50
KPX Atilde Y -100
KPX Atilde Yacute -100
KPX Atilde Ydieresis -100
KPX Atilde u -30
KPX Atilde uacute -30
KPX Atilde ucircumflex -30
KPX Atilde udieresis -30
KPX Atilde ugrave -30
KPX Atilde uhungarumlaut -30
KPX Atilde umacron -30
KPX Atilde uogonek -30
KPX Atilde uring -30
KPX Atilde v -40
KPX Atilde w -40
KPX Atilde y -40
KPX Atilde yacute -40
KPX Atilde ydieresis -40
KPX B U -10
KPX B Uacute -10
KPX B Ucircumflex -10
KPX B Udieresis -10
KPX B Ugrave -10
KPX B Uhungarumlaut -10
KPX B Umacron -10
KPX B Uogonek -10
KPX B Uring -10
KPX B comma -20
KPX B period -20
KPX C comma -30
KPX C period -30
KPX Cacute comma -30
KPX Cacute period -30
KPX Ccaron comma -30
KPX Ccaron period -30
KPX Ccedilla comma -30
KPX Ccedilla period -30
KPX D A -40
KPX D Aacute -40
KPX D Abreve -40
KPX D Acircumflex -40
KPX D Adieresis -40
KPX D Agrave -40
KPX D Amacron -40
KPX D Aogonek -40
KPX D Aring -40
KPX D Atilde -40
KPX D V -70
KPX D W -40
KPX D Y -90
KPX D Yacute -90
KPX D Ydieresis -90
KPX D comma -70
KPX D period -70
KPX Dcaron A -40
KPX Dcaron Aacute -40
KPX Dcaron Abreve -40
KPX Dcaron Acircumflex -40
KPX Dcaron Adieresis -40
KPX Dcaron Agrave -40
KPX Dcaron Amacron -40
KPX Dcaron Aogonek -40
KPX Dcaron Aring -40
KPX Dcaron Atilde -40
KPX Dcaron V -70
KPX Dcaron W -40
KPX Dcaron Y -90
KPX Dcaron Yacute -90
KPX Dcaron Ydieresis -90
KPX Dcaron comma -70
KPX Dcaron period -70
KPX Dcroat A -40
KPX Dcroat Aacute -40
KPX Dcroat Abreve -40
KPX Dcroat Acircumflex -40
KPX Dcroat Adieresis -40
KPX Dcroat Agrave -40
KPX Dcroat Amacron -40
KPX Dcroat Aogonek -40
KPX Dcroat Aring -40
KPX Dcroat Atilde -40
KPX Dcroat V -70
KPX Dcroat W -40
KPX Dcroat Y -90
KPX Dcroat Yacute -90
KPX Dcroat Ydieresis -90
KPX Dcroat comma -70
KPX Dcroat period -70
KPX F A -80
KPX F Aacute -80
KPX F Abreve -80
KPX F Acircumflex -80
KPX F Adieresis -80
KPX F Agrave -80
KPX F Amacron -80
KPX F Aogonek -80
KPX F Aring -80
KPX F Atilde -80
KPX F a -50
KPX F aacute -50
KPX F abreve -50
KPX F acircumflex -50
KPX F adieresis -50
KPX F agrave -50
KPX F amacron -50
KPX F aogonek -50
KPX F aring -50
KPX F atilde -50
KPX F comma -150
KPX F e -30
KPX F eacute -30
KPX F ecaron -30
KPX F ecircumflex -30
KPX F edieresis -30
KPX F edotaccent -30
KPX F egrave -30
KPX F emacron -30
KPX F eogonek -30
KPX F o -30
KPX F oacute -30
KPX F ocircumflex -30
KPX F odieresis -30
KPX F ograve -30
KPX F ohungarumlaut -30
KPX F omacron -30
KPX F oslash -30
KPX F otilde -30
KPX F period -150
KPX F r -45
KPX F racute -45
KPX F rcaron -45
KPX F rcommaaccent -45
KPX J A -20
KPX J Aacute -20
KPX J Abreve -20
KPX J Acircumflex -20
KPX J Adieresis -20
KPX J Agrave -20
KPX J Amacron -20
KPX J Aogonek -20
KPX J Aring -20
KPX J Atilde -20
KPX J a -20
KPX J aacute -20
KPX J abreve -20
KPX J acircumflex -20
KPX J adieresis -20
KPX J agrave -20
KPX J amacron -20
KPX J aogonek -20
KPX J aring -20
KPX J atilde -20
KPX J comma -30
KPX J period -30
KPX J u -20
KPX J uacute -20
KPX J ucircumflex -20
KPX J udieresis -20
KPX J ugrave -20
KPX J uhungarumlaut -20
KPX J umacron -20
KPX J uogonek -20
KPX J uring -20
KPX K O -50
KPX K Oacute -50
KPX K Ocircumflex -50
KPX K Odieresis -50
KPX K Ograve -50
KPX K Ohungarumlaut -50
KPX K Omacron -50
KPX K Oslash -50
KPX K Otilde -50
KPX K e -40
KPX K eacute -40
KPX K ecaron -40
KPX K ecircumflex -40
KPX K edieresis -40
KPX K edotaccent -40
KPX K egrave -40
KPX K emacron -40
KPX K eogonek -40
KPX K o -40
KPX K oacute -40
KPX K ocircumflex -40
KPX K odieresis -40
KPX K ograve -40
KPX K ohungarumlaut -40
KPX K omacron -40
KPX K oslash -40
KPX K otilde -40
KPX K u -30
KPX K uacute -30
KPX K ucircumflex -30
KPX K udieresis -30
KPX K ugrave -30
KPX K uhungarumlaut -30
KPX K umacron -30
KPX K uogonek -30
KPX K uring -30
KPX K y -50
KPX K yacute -50
KPX K ydieresis -50
KPX Kcommaaccent O -50
KPX Kcommaaccent Oacute -50
KPX Kcommaaccent Ocircumflex -50
KPX Kcommaaccent Odieresis -50
KPX Kcommaaccent Ograve -50
KPX Kcommaaccent Ohungarumlaut -50
KPX Kcommaaccent Omacron -50
KPX Kcommaaccent Oslash -50
KPX Kcommaaccent Otilde -50
KPX Kcommaaccent e -40
KPX Kcommaaccent eacute -40
KPX Kcommaaccent ecaron -40
KPX Kcommaaccent ecircumflex -40
KPX Kcommaaccent edieresis -40
KPX Kcommaaccent edotaccent -40
KPX Kcommaaccent egrave -40
KPX Kcommaaccent emacron -40
KPX Kcommaaccent eogonek -40
KPX Kcommaaccent o -40
KPX Kcommaaccent oacute -40
KPX Kcommaaccent ocircumflex -40
KPX Kcommaaccent odieresis -40
KPX Kcommaaccent ograve -40
KPX Kcommaaccent ohungarumlaut -40
KPX Kcommaaccent omacron -40
KPX Kcommaaccent oslash -40
KPX Kcommaaccent otilde -40
KPX Kcommaaccent u -30
KPX Kcommaaccent uacute -30
KPX Kcommaaccent ucircumflex -30
KPX Kcommaaccent udieresis -30
KPX Kcommaaccent ugrave -30
KPX Kcommaaccent uhungarumlaut -30
KPX Kcommaaccent umacron -30
KPX Kcommaaccent uogonek -30
KPX Kcommaaccent uring -30
KPX Kcommaaccent y -50
KPX Kcommaaccent yacute -50
KPX Kcommaaccent ydieresis -50
KPX L T -110
KPX L Tcaron -110
KPX L Tcommaaccent -110
KPX L V -110
KPX L W -70
KPX L Y -140
KPX L Yacute -140
KPX L Ydieresis -140
KPX L quotedblright -140
KPX L quoteright -160
KPX L y -30
KPX L yacute -30
KPX L ydieresis -30
KPX Lacute T -110
KPX Lacute Tcaron -110
KPX Lacute Tcommaaccent -110
KPX Lacute V -110
KPX Lacute W -70
KPX Lacute Y -140
KPX Lacute Yacute -140
KPX Lacute Ydieresis -140
KPX Lacute quotedblright -140
KPX Lacute quoteright -160
KPX Lacute y -30
KPX Lacute yacute -30
KPX Lacute ydieresis -30
KPX Lcaron T -110
KPX Lcaron Tcaron -110
KPX Lcaron Tcommaaccent -110
KPX Lcaron V -110
KPX Lcaron W -70
KPX Lcaron Y -140
KPX Lcaron Yacute -140
KPX Lcaron Ydieresis -140
KPX Lcaron quotedblright -140
KPX Lcaron quoteright -160
KPX Lcaron y -30
KPX Lcaron yacute -30
KPX Lcaron ydieresis -30
KPX Lcommaaccent T -110
KPX Lcommaaccent Tcaron -110
KPX Lcommaaccent Tcommaaccent -110
KPX Lcommaaccent V -110
KPX Lcommaaccent W -70
KPX Lcommaaccent Y -140
KPX Lcommaaccent Yacute -140
KPX Lcommaaccent Ydieresis -140
KPX Lcommaaccent quotedblright -140
KPX Lcommaaccent quoteright -160
KPX Lcommaaccent y -30
KPX Lcommaaccent yacute -30
KPX Lcommaaccent ydieresis -30
KPX Lslash T -110
KPX Lslash Tcaron -110
KPX Lslash Tcommaaccent -110
KPX Lslash V -110
KPX Lslash W -70
KPX Lslash Y -140
KPX Lslash Yacute -140
KPX Lslash Ydieresis -140
KPX Lslash quotedblright -140
KPX Lslash quoteright -160
KPX Lslash y -30
KPX Lslash yacute -30
KPX Lslash ydieresis -30
KPX O A -20
KPX O Aacute -20
KPX O Abreve -20
KPX O Acircumflex -20
KPX O Adieresis -20
KPX O Agrave -20
KPX O Amacron -20
KPX O Aogonek -20
KPX O Aring -20
KPX O Atilde -20
KPX O T -40
KPX O Tcaron -40
KPX O Tcommaaccent -40
KPX O V -50
KPX O W -30
KPX O X -60
KPX O Y -70
KPX O Yacute -70
KPX O Ydieresis -70
KPX O comma -40
KPX O period -40
KPX Oacute A -20
KPX Oacute Aacute -20
KPX Oacute Abreve -20
KPX Oacute Acircumflex -20
KPX Oacute Adieresis -20
KPX Oacute Agrave -20
KPX Oacute Amacron -20
KPX Oacute Aogonek -20
KPX Oacute Aring -20
KPX Oacute Atilde -20
KPX Oacute T -40
KPX Oacute Tcaron -40
KPX Oacute Tcommaaccent -40
KPX Oacute V -50
KPX Oacute W -30
KPX Oacute X -60
KPX Oacute Y -70
KPX Oacute Yacute -70
KPX Oacute Ydieresis -70
KPX Oacute comma -40
KPX Oacute period -40
KPX Ocircumflex A -20
KPX Ocircumflex Aacute -20
KPX Ocircumflex Abreve -20
KPX Ocircumflex Acircumflex -20
KPX Ocircumflex Adieresis -20
KPX Ocircumflex Agrave -20
KPX Ocircumflex Amacron -20
KPX Ocircumflex Aogonek -20
KPX Ocircumflex Aring -20
KPX Ocircumflex Atilde -20
KPX Ocircumflex T -40
KPX Ocircumflex Tcaron -40
KPX Ocircumflex Tcommaaccent -40
KPX Ocircumflex V -50
KPX Ocircumflex W -30
KPX Ocircumflex X -60
KPX Ocircumflex Y -70
KPX Ocircumflex Yacute -70
KPX Ocircumflex Ydieresis -70
KPX Ocircumflex comma -40
KPX Ocircumflex period -40
KPX Odieresis A -20
KPX Odieresis Aacute -20
KPX Odieresis Abreve -20
KPX Odieresis Acircumflex -20
KPX Odieresis Adieresis -20
KPX Odieresis Agrave -20
KPX Odieresis Amacron -20
KPX Odieresis Aogonek -20
KPX Odieresis Aring -20
KPX Odieresis Atilde -20
KPX Odieresis T -40
KPX Odieresis Tcaron -40
KPX Odieresis Tcommaaccent -40
KPX Odieresis V -50
KPX Odieresis W -30
KPX Odieresis X -60
KPX Odieresis Y -70
KPX Odieresis Yacute -70
KPX Odieresis Ydieresis -70
KPX Odieresis comma -40
KPX Odieresis period -40
KPX Ograve A -20
KPX Ograve Aacute -20
KPX Ograve Abreve -20
KPX Ograve Acircumflex -20
KPX Ograve Adieresis -20
KPX Ograve Agrave -20
KPX Ograve Amacron -20
KPX Ograve Aogonek -20
KPX Ograve Aring -20
KPX Ograve Atilde -20
KPX Ograve T -40
KPX Ograve Tcaron -40
KPX Ograve Tcommaaccent -40
KPX Ograve V -50
KPX Ograve W -30
KPX Ograve X -60
KPX Ograve Y -70
KPX Ograve Yacute -70
KPX Ograve Ydieresis -70
KPX Ograve comma -40
KPX Ograve period -40
KPX Ohungarumlaut A -20
KPX Ohungarumlaut Aacute -20
KPX Ohungarumlaut Abreve -20
KPX Ohungarumlaut Acircumflex -20
KPX Ohungarumlaut Adieresis -20
KPX Ohungarumlaut Agrave -20
KPX Ohungarumlaut Amacron -20
KPX Ohungarumlaut Aogonek -20
KPX Ohungarumlaut Aring -20
KPX Ohungarumlaut Atilde -20
KPX Ohungarumlaut T -40
KPX Ohungarumlaut Tcaron -40
KPX Ohungarumlaut Tcommaaccent -40
KPX Ohungarumlaut V -50
KPX Ohungarumlaut W -30
KPX Ohungarumlaut X -60
KPX Ohungarumlaut Y -70
KPX Ohungarumlaut Yacute -70
KPX Ohungarumlaut Ydieresis -70
KPX Ohungarumlaut comma -40
KPX Ohungarumlaut period -40
KPX Omacron A -20
KPX Omacron Aacute -20
KPX Omacron Abreve -20
KPX Omacron Acircumflex -20
KPX Omacron Adieresis -20
KPX Omacron Agrave -20
KPX Omacron Amacron -20
KPX Omacron Aogonek -20
KPX Omacron Aring -20
KPX Omacron Atilde -20
KPX Omacron T -40
KPX Omacron Tcaron -40
KPX Omacron Tcommaaccent -40
KPX Omacron V -50
KPX Omacron W -30
KPX Omacron X -60
KPX Omacron Y -70
KPX Omacron Yacute -70
KPX Omacron Ydieresis -70
KPX Omacron comma -40
KPX Omacron period -40
KPX Oslash A -20
KPX Oslash Aacute -20
KPX Oslash Abreve -20
KPX Oslash Acircumflex -20
KPX Oslash Adieresis -20
KPX Oslash Agrave -20
KPX Oslash Amacron -20
KPX Oslash Aogonek -20
KPX Oslash Aring -20
KPX Oslash Atilde -20
KPX Oslash T -40
KPX Oslash Tcaron -40
KPX Oslash Tcommaaccent -40
KPX Oslash V -50
KPX Oslash W -30
KPX Oslash X -60
KPX Oslash Y -70
KPX Oslash Yacute -70
KPX Oslash Ydieresis -70
KPX Oslash comma -40
KPX Oslash period -40
KPX Otilde A -20
KPX Otilde Aacute -20
KPX Otilde Abreve -20
KPX Otilde Acircumflex -20
KPX Otilde Adieresis -20
KPX Otilde Agrave -20
KPX Otilde Amacron -20
KPX Otilde Aogonek -20
KPX Otilde Aring -20
KPX Otilde Atilde -20
KPX Otilde T -40
KPX Otilde Tcaron -40
KPX Otilde Tcommaaccent -40
KPX Otilde V -50
KPX Otilde W -30
KPX Otilde X -60
KPX Otilde Y -70
KPX Otilde Yacute -70
KPX Otilde Ydieresis -70
KPX Otilde comma -40
KPX Otilde period -40
KPX P A -120
KPX P Aacute -120
KPX P Abreve -120
KPX P Acircumflex -120
KPX P Adieresis -120
KPX P Agrave -120
KPX P Amacron -120
KPX P Aogonek -120
KPX P Aring -120
KPX P Atilde -120
KPX P a -40
KPX P aacute -40
KPX P abreve -40
KPX P acircumflex -40
KPX P adieresis -40
KPX P agrave -40
KPX P amacron -40
KPX P aogonek -40
KPX P aring -40
KPX P atilde -40
KPX P comma -180
KPX P e -50
KPX P eacute -50
KPX P ecaron -50
KPX P ecircumflex -50
KPX P edieresis -50
KPX P edotaccent -50
KPX P egrave -50
KPX P emacron -50
KPX P eogonek -50
KPX P o -50
KPX P oacute -50
KPX P ocircumflex -50
KPX P odieresis -50
KPX P ograve -50
KPX P ohungarumlaut -50
KPX P omacron -50
KPX P oslash -50
KPX P otilde -50
KPX P period -180
KPX Q U -10
KPX Q Uacute -10
KPX Q Ucircumflex -10
KPX Q Udieresis -10
KPX Q Ugrave -10
KPX Q Uhungarumlaut -10
KPX Q Umacron -10
KPX Q Uogonek -10
KPX Q Uring -10
KPX R O -20
KPX R Oacute -20
KPX R Ocircumflex -20
KPX R Odieresis -20
KPX R Ograve -20
KPX R Ohungarumlaut -20
KPX R Omacron -20
KPX R Oslash -20
KPX R Otilde -20
KPX R T -30
KPX R Tcaron -30
KPX R Tcommaaccent -30
KPX R U -40
KPX R Uacute -40
KPX R Ucircumflex -40
KPX R Udieresis -40
KPX R Ugrave -40
KPX R Uhungarumlaut -40
KPX R Umacron -40
KPX R Uogonek -40
KPX R Uring -40
KPX R V -50
KPX R W -30
KPX R Y -50
KPX R Yacute -50
KPX R Ydieresis -50
KPX Racute O -20
KPX Racute Oacute -20
KPX Racute Ocircumflex -20
KPX Racute Odieresis -20
KPX Racute Ograve -20
KPX Racute Ohungarumlaut -20
KPX Racute Omacron -20
KPX Racute Oslash -20
KPX Racute Otilde -20
KPX Racute T -30
KPX Racute Tcaron -30
KPX Racute Tcommaaccent -30
KPX Racute U -40
KPX Racute Uacute -40
KPX Racute Ucircumflex -40
KPX Racute Udieresis -40
KPX Racute Ugrave -40
KPX Racute Uhungarumlaut -40
KPX Racute Umacron -40
KPX Racute Uogonek -40
KPX Racute Uring -40
KPX Racute V -50
KPX Racute W -30
KPX Racute Y -50
KPX Racute Yacute -50
KPX Racute Ydieresis -50
KPX Rcaron O -20
KPX Rcaron Oacute -20
KPX Rcaron Ocircumflex -20
KPX Rcaron Odieresis -20
KPX Rcaron Ograve -20
KPX Rcaron Ohungarumlaut -20
KPX Rcaron Omacron -20
KPX Rcaron Oslash -20
KPX Rcaron Otilde -20
KPX Rcaron T -30
KPX Rcaron Tcaron -30
KPX Rcaron Tcommaaccent -30
KPX Rcaron U -40
KPX Rcaron Uacute -40
KPX Rcaron Ucircumflex -40
KPX Rcaron Udieresis -40
KPX Rcaron Ugrave -40
KPX Rcaron Uhungarumlaut -40
KPX Rcaron Umacron -40
KPX Rcaron Uogonek -40
KPX Rcaron Uring -40
KPX Rcaron V -50
KPX Rcaron W -30
KPX Rcaron Y -50
KPX Rcaron Yacute -50
KPX Rcaron Ydieresis -50
KPX Rcommaaccent O -20
KPX Rcommaaccent Oacute -20
KPX Rcommaaccent Ocircumflex -20
KPX Rcommaaccent Odieresis -20
KPX Rcommaaccent Ograve -20
KPX Rcommaaccent Ohungarumlaut -20
KPX Rcommaaccent Omacron -20
KPX Rcommaaccent Oslash -20
KPX Rcommaaccent Otilde -20
KPX Rcommaaccent T -30
KPX Rcommaaccent Tcaron -30
KPX Rcommaaccent Tcommaaccent -30
KPX Rcommaaccent U -40
KPX Rcommaaccent Uacute -40
KPX Rcommaaccent Ucircumflex -40
KPX Rcommaaccent Udieresis -40
KPX Rcommaaccent Ugrave -40
KPX Rcommaaccent Uhungarumlaut -40
KPX Rcommaaccent Umacron -40
KPX Rcommaaccent Uogonek -40
KPX Rcommaaccent Uring -40
KPX Rcommaaccent V -50
KPX Rcommaaccent W -30
KPX Rcommaaccent Y -50
KPX Rcommaaccent Yacute -50
KPX Rcommaaccent Ydieresis -50
KPX S comma -20
KPX S period -20
KPX Sacute comma -20
KPX Sacute period -20
KPX Scaron comma -20
KPX Scaron period -20
KPX Scedilla comma -20
KPX Scedilla period -20
KPX Scommaaccent comma -20
KPX Scommaaccent period -20
KPX T A -120
KPX T Aacute -120
KPX T Abreve -120
KPX T Acircumflex -120
KPX T Adieresis -120
KPX T Agrave -120
KPX T Amacron -120
KPX T Aogonek -120
KPX T Aring -120
KPX T Atilde -120
KPX T O -40
KPX T Oacute -40
KPX T Ocircumflex -40
KPX T Odieresis -40
KPX T Ograve -40
KPX T Ohungarumlaut -40
KPX T Omacron -40
KPX T Oslash -40
KPX T Otilde -40
KPX T a -120
KPX T aacute -120
KPX T abreve -60
KPX T acircumflex -120
KPX T adieresis -120
KPX T agrave -120
KPX T amacron -60
KPX T aogonek -120
KPX T aring -120
KPX T atilde -60
KPX T colon -20
KPX T comma -120
KPX T e -120
KPX T eacute -120
KPX T ecaron -120
KPX T ecircumflex -120
KPX T edieresis -120
KPX T edotaccent -120
KPX T egrave -60
KPX T emacron -60
KPX T eogonek -120
KPX T hyphen -140
KPX T o -120
KPX T oacute -120
KPX T ocircumflex -120
KPX T odieresis -120
KPX T ograve -120
KPX T ohungarumlaut -120
KPX T omacron -60
KPX T oslash -120
KPX T otilde -60
KPX T period -120
KPX T r -120
KPX T racute -120
KPX T rcaron -120
KPX T rcommaaccent -120
KPX T semicolon -20
KPX T u -120
KPX T uacute -120
KPX T ucircumflex -120
KPX T udieresis -120
KPX T ugrave -120
KPX T uhungarumlaut -120
KPX T umacron -60
KPX T uogonek -120
KPX T uring -120
KPX T w -120
KPX T y -120
KPX T yacute -120
KPX T ydieresis -60
KPX Tcaron A -120
KPX Tcaron Aacute -120
KPX Tcaron Abreve -120
KPX Tcaron Acircumflex -120
KPX Tcaron Adieresis -120
KPX Tcaron Agrave -120
KPX Tcaron Amacron -120
KPX Tcaron Aogonek -120
KPX Tcaron Aring -120
KPX Tcaron Atilde -120
KPX Tcaron O -40
KPX Tcaron Oacute -40
KPX Tcaron Ocircumflex -40
KPX Tcaron Odieresis -40
KPX Tcaron Ograve -40
KPX Tcaron Ohungarumlaut -40
KPX Tcaron Omacron -40
KPX Tcaron Oslash -40
KPX Tcaron Otilde -40
KPX Tcaron a -120
KPX Tcaron aacute -120
KPX Tcaron abreve -60
KPX Tcaron acircumflex -120
KPX Tcaron adieresis -120
KPX Tcaron agrave -120
KPX Tcaron amacron -60
KPX Tcaron aogonek -120
KPX Tcaron aring -120
KPX Tcaron atilde -60
KPX Tcaron colon -20
KPX Tcaron comma -120
KPX Tcaron e -120
KPX Tcaron eacute -120
KPX Tcaron ecaron -120
KPX Tcaron ecircumflex -120
KPX Tcaron edieresis -120
KPX Tcaron edotaccent -120
KPX Tcaron egrave -60
KPX Tcaron emacron -60
KPX Tcaron eogonek -120
KPX Tcaron hyphen -140
KPX Tcaron o -120
KPX Tcaron oacute -120
KPX Tcaron ocircumflex -120
KPX Tcaron odieresis -120
KPX Tcaron ograve -120
KPX Tcaron ohungarumlaut -120
KPX Tcaron omacron -60
KPX Tcaron oslash -120
KPX Tcaron otilde -60
KPX Tcaron period -120
KPX Tcaron r -120
KPX Tcaron racute -120
KPX Tcaron rcaron -120
KPX Tcaron rcommaaccent -120
KPX Tcaron semicolon -20
KPX Tcaron u -120
KPX Tcaron uacute -120
KPX Tcaron ucircumflex -120
KPX Tcaron udieresis -120
KPX Tcaron ugrave -120
KPX Tcaron uhungarumlaut -120
KPX Tcaron umacron -60
KPX Tcaron uogonek -120
KPX Tcaron uring -120
KPX Tcaron w -120
KPX Tcaron y -120
KPX Tcaron yacute -120
KPX Tcaron ydieresis -60
KPX Tcommaaccent A -120
KPX Tcommaaccent Aacute -120
KPX Tcommaaccent Abreve -120
KPX Tcommaaccent Acircumflex -120
KPX Tcommaaccent Adieresis -120
KPX Tcommaaccent Agrave -120
KPX Tcommaaccent Amacron -120
KPX Tcommaaccent Aogonek -120
KPX Tcommaaccent Aring -120
KPX Tcommaaccent Atilde -120
KPX Tcommaaccent O -40
KPX Tcommaaccent Oacute -40
KPX Tcommaaccent Ocircumflex -40
KPX Tcommaaccent Odieresis -40
KPX Tcommaaccent Ograve -40
KPX Tcommaaccent Ohungarumlaut -40
KPX Tcommaaccent Omacron -40
KPX Tcommaaccent Oslash -40
KPX Tcommaaccent Otilde -40
KPX Tcommaaccent a -120
KPX Tcommaaccent aacute -120
KPX Tcommaaccent abreve -60
KPX Tcommaaccent acircumflex -120
KPX Tcommaaccent adieresis -120
KPX Tcommaaccent agrave -120
KPX Tcommaaccent amacron -60
KPX Tcommaaccent aogonek -120
KPX Tcommaaccent aring -120
KPX Tcommaaccent atilde -60
KPX Tcommaaccent colon -20
KPX Tcommaaccent comma -120
KPX Tcommaaccent e -120
KPX Tcommaaccent eacute -120
KPX Tcommaaccent ecaron -120
KPX Tcommaaccent ecircumflex -120
KPX Tcommaaccent edieresis -120
KPX Tcommaaccent edotaccent -120
KPX Tcommaaccent egrave -60
KPX Tcommaaccent emacron -60
KPX Tcommaaccent eogonek -120
KPX Tcommaaccent hyphen -140
KPX Tcommaaccent o -120
KPX Tcommaaccent oacute -120
KPX Tcommaaccent ocircumflex -120
KPX Tcommaaccent odieresis -120
KPX Tcommaaccent ograve -120
KPX Tcommaaccent ohungarumlaut -120
KPX Tcommaaccent omacron -60
KPX Tcommaaccent oslash -120
KPX Tcommaaccent otilde -60
KPX Tcommaaccent period -120
KPX Tcommaaccent r -120
KPX Tcommaaccent racute -120
KPX Tcommaaccent rcaron -120
KPX Tcommaaccent rcommaaccent -120
KPX Tcommaaccent semicolon -20
KPX Tcommaaccent u -120
KPX Tcommaaccent uacute -120
KPX Tcommaaccent ucircumflex -120
KPX Tcommaaccent udieresis -120
KPX Tcommaaccent ugrave -120
KPX Tcommaaccent uhungarumlaut -120
KPX Tcommaaccent umacron -60
KPX Tcommaaccent uogonek -120
KPX Tcommaaccent uring -120
KPX Tcommaaccent w -120
KPX Tcommaaccent y -120
KPX Tcommaaccent yacute -120
KPX Tcommaaccent ydieresis -60
KPX U A -40
KPX U Aacute -40
KPX U Abreve -40
KPX U Acircumflex -40
KPX U Adieresis -40
KPX U Agrave -40
KPX U Amacron -40
KPX U Aogonek -40
KPX U Aring -40
KPX U Atilde -40
KPX U comma -40
KPX U period -40
KPX Uacute A -40
KPX Uacute Aacute -40
KPX Uacute Abreve -40
KPX Uacute Acircumflex -40
KPX Uacute Adieresis -40
KPX Uacute Agrave -40
KPX Uacute Amacron -40
KPX Uacute Aogonek -40
KPX Uacute Aring -40
KPX Uacute Atilde -40
KPX Uacute comma -40
KPX Uacute period -40
KPX Ucircumflex A -40
KPX Ucircumflex Aacute -40
KPX Ucircumflex Abreve -40
KPX Ucircumflex Acircumflex -40
KPX Ucircumflex Adieresis -40
KPX Ucircumflex Agrave -40
KPX Ucircumflex Amacron -40
KPX Ucircumflex Aogonek -40
KPX Ucircumflex Aring -40
KPX Ucircumflex Atilde -40
KPX Ucircumflex comma -40
KPX Ucircumflex period -40
KPX Udieresis A -40
KPX Udieresis Aacute -40
KPX Udieresis Abreve -40
KPX Udieresis Acircumflex -40
KPX Udieresis Adieresis -40
KPX Udieresis Agrave -40
KPX Udieresis Amacron -40
KPX Udieresis Aogonek -40
KPX Udieresis Aring -40
KPX Udieresis Atilde -40
KPX Udieresis comma -40
KPX Udieresis period -40
KPX Ugrave A -40
KPX Ugrave Aacute -40
KPX Ugrave Abreve -40
KPX Ugrave Acircumflex -40
KPX Ugrave Adieresis -40
KPX Ugrave Agrave -40
KPX Ugrave Amacron -40
KPX Ugrave Aogonek -40
KPX Ugrave Aring -40
KPX Ugrave Atilde -40
KPX Ugrave comma -40
KPX Ugrave period -40
KPX Uhungarumlaut A -40
KPX Uhungarumlaut Aacute -40
KPX Uhungarumlaut Abreve -40
KPX Uhungarumlaut Acircumflex -40
KPX Uhungarumlaut Adieresis -40
KPX Uhungarumlaut Agrave -40
KPX Uhungarumlaut Amacron -40
KPX Uhungarumlaut Aogonek -40
KPX Uhungarumlaut Aring -40
KPX Uhungarumlaut Atilde -40
KPX Uhungarumlaut comma -40
KPX Uhungarumlaut period -40
KPX Umacron A -40
KPX Umacron Aacute -40
KPX Umacron Abreve -40
KPX Umacron Acircumflex -40
KPX Umacron Adieresis -40
KPX Umacron Agrave -40
KPX Umacron Amacron -40
KPX Umacron Aogonek -40
KPX Umacron Aring -40
KPX Umacron Atilde -40
KPX Umacron comma -40
KPX Umacron period -40
KPX Uogonek A -40
KPX Uogonek Aacute -40
KPX Uogonek Abreve -40
KPX Uogonek Acircumflex -40
KPX Uogonek Adieresis -40
KPX Uogonek Agrave -40
KPX Uogonek Amacron -40
KPX Uogonek Aogonek -40
KPX Uogonek Aring -40
KPX Uogonek Atilde -40
KPX Uogonek comma -40
KPX Uogonek period -40
KPX Uring A -40
KPX Uring Aacute -40
KPX Uring Abreve -40
KPX Uring Acircumflex -40
KPX Uring Adieresis -40
KPX Uring Agrave -40
KPX Uring Amacron -40
KPX Uring Aogonek -40
KPX Uring Aring -40
KPX Uring Atilde -40
KPX Uring comma -40
KPX Uring period -40
KPX V A -80
KPX V Aacute -80
KPX V Abreve -80
KPX V Acircumflex -80
KPX V Adieresis -80
KPX V Agrave -80
KPX V Amacron -80
KPX V Aogonek -80
KPX V Aring -80
KPX V Atilde -80
KPX V G -40
KPX V Gbreve -40
KPX V Gcommaaccent -40
KPX V O -40
KPX V Oacute -40
KPX V Ocircumflex -40
KPX V Odieresis -40
KPX V Ograve -40
KPX V Ohungarumlaut -40
KPX V Omacron -40
KPX V Oslash -40
KPX V Otilde -40
KPX V a -70
KPX V aacute -70
KPX V abreve -70
KPX V acircumflex -70
KPX V adieresis -70
KPX V agrave -70
KPX V amacron -70
KPX V aogonek -70
KPX V aring -70
KPX V atilde -70
KPX V colon -40
KPX V comma -125
KPX V e -80
KPX V eacute -80
KPX V ecaron -80
KPX V ecircumflex -80
KPX V edieresis -80
KPX V edotaccent -80
KPX V egrave -80
KPX V emacron -80
KPX V eogonek -80
KPX V hyphen -80
KPX V o -80
KPX V oacute -80
KPX V ocircumflex -80
KPX V odieresis -80
KPX V ograve -80
KPX V ohungarumlaut -80
KPX V omacron -80
KPX V oslash -80
KPX V otilde -80
KPX V period -125
KPX V semicolon -40
KPX V u -70
KPX V uacute -70
KPX V ucircumflex -70
KPX V udieresis -70
KPX V ugrave -70
KPX V uhungarumlaut -70
KPX V umacron -70
KPX V uogonek -70
KPX V uring -70
KPX W A -50
KPX W Aacute -50
KPX W Abreve -50
KPX W Acircumflex -50
KPX W Adieresis -50
KPX W Agrave -50
KPX W Amacron -50
KPX W Aogonek -50
KPX W Aring -50
KPX W Atilde -50
KPX W O -20
KPX W Oacute -20
KPX W Ocircumflex -20
KPX W Odieresis -20
KPX W Ograve -20
KPX W Ohungarumlaut -20
KPX W Omacron -20
KPX W Oslash -20
KPX W Otilde -20
KPX W a -40
KPX W aacute -40
KPX W abreve -40
KPX W acircumflex -40
KPX W adieresis -40
KPX W agrave -40
KPX W amacron -40
KPX W aogonek -40
KPX W aring -40
KPX W atilde -40
KPX W comma -80
KPX W e -30
KPX W eacute -30
KPX W ecaron -30
KPX W ecircumflex -30
KPX W edieresis -30
KPX W edotaccent -30
KPX W egrave -30
KPX W emacron -30
KPX W eogonek -30
KPX W hyphen -40
KPX W o -30
KPX W oacute -30
KPX W ocircumflex -30
KPX W odieresis -30
KPX W ograve -30
KPX W ohungarumlaut -30
KPX W omacron -30
KPX W oslash -30
KPX W otilde -30
KPX W period -80
KPX W u -30
KPX W uacute -30
KPX W ucircumflex -30
KPX W udieresis -30
KPX W ugrave -30
KPX W uhungarumlaut -30
KPX W umacron -30
KPX W uogonek -30
KPX W uring -30
KPX W y -20
KPX W yacute -20
KPX W ydieresis -20
KPX Y A -110
KPX Y Aacute -110
KPX Y Abreve -110
KPX Y Acircumflex -110
KPX Y Adieresis -110
KPX Y Agrave -110
KPX Y Amacron -110
KPX Y Aogonek -110
KPX Y Aring -110
KPX Y Atilde -110
KPX Y O -85
KPX Y Oacute -85
KPX Y Ocircumflex -85
KPX Y Odieresis -85
KPX Y Ograve -85
KPX Y Ohungarumlaut -85
KPX Y Omacron -85
KPX Y Oslash -85
KPX Y Otilde -85
KPX Y a -140
KPX Y aacute -140
KPX Y abreve -70
KPX Y acircumflex -140
KPX Y adieresis -140
KPX Y agrave -140
KPX Y amacron -70
KPX Y aogonek -140
KPX Y aring -140
KPX Y atilde -140
KPX Y colon -60
KPX Y comma -140
KPX Y e -140
KPX Y eacute -140
KPX Y ecaron -140
KPX Y ecircumflex -140
KPX Y edieresis -140
KPX Y edotaccent -140
KPX Y egrave -140
KPX Y emacron -70
KPX Y eogonek -140
KPX Y hyphen -140
KPX Y i -20
KPX Y iacute -20
KPX Y iogonek -20
KPX Y o -140
KPX Y oacute -140
KPX Y ocircumflex -140
KPX Y odieresis -140
KPX Y ograve -140
KPX Y ohungarumlaut -140
KPX Y omacron -140
KPX Y oslash -140
KPX Y otilde -140
KPX Y period -140
KPX Y semicolon -60
KPX Y u -110
KPX Y uacute -110
KPX Y ucircumflex -110
KPX Y udieresis -110
KPX Y ugrave -110
KPX Y uhungarumlaut -110
KPX Y umacron -110
KPX Y uogonek -110
KPX Y uring -110
KPX Yacute A -110
KPX Yacute Aacute -110
KPX Yacute Abreve -110
KPX Yacute Acircumflex -110
KPX Yacute Adieresis -110
KPX Yacute Agrave -110
KPX Yacute Amacron -110
KPX Yacute Aogonek -110
KPX Yacute Aring -110
KPX Yacute Atilde -110
KPX Yacute O -85
KPX Yacute Oacute -85
KPX Yacute Ocircumflex -85
KPX Yacute Odieresis -85
KPX Yacute Ograve -85
KPX Yacute Ohungarumlaut -85
KPX Yacute Omacron -85
KPX Yacute Oslash -85
KPX Yacute Otilde -85
KPX Yacute a -140
KPX Yacute aacute -140
KPX Yacute abreve -70
KPX Yacute acircumflex -140
KPX Yacute adieresis -140
KPX Yacute agrave -140
KPX Yacute amacron -70
KPX Yacute aogonek -140
KPX Yacute aring -140
KPX Yacute atilde -70
KPX Yacute colon -60
KPX Yacute comma -140
KPX Yacute e -140
KPX Yacute eacute -140
KPX Yacute ecaron -140
KPX Yacute ecircumflex -140
KPX Yacute edieresis -140
KPX Yacute edotaccent -140
KPX Yacute egrave -140
KPX Yacute emacron -70
KPX Yacute eogonek -140
KPX Yacute hyphen -140
KPX Yacute i -20
KPX Yacute iacute -20
KPX Yacute iogonek -20
KPX Yacute o -140
KPX Yacute oacute -140
KPX Yacute ocircumflex -140
KPX Yacute odieresis -140
KPX Yacute ograve -140
KPX Yacute ohungarumlaut -140
KPX Yacute omacron -70
KPX Yacute oslash -140
KPX Yacute otilde -140
KPX Yacute period -140
KPX Yacute semicolon -60
KPX Yacute u -110
KPX Yacute uacute -110
KPX Yacute ucircumflex -110
KPX Yacute udieresis -110
KPX Yacute ugrave -110
KPX Yacute uhungarumlaut -110
KPX Yacute umacron -110
KPX Yacute uogonek -110
KPX Yacute uring -110
KPX Ydieresis A -110
KPX Ydieresis Aacute -110
KPX Ydieresis Abreve -110
KPX Ydieresis Acircumflex -110
KPX Ydieresis Adieresis -110
KPX Ydieresis Agrave -110
KPX Ydieresis Amacron -110
KPX Ydieresis Aogonek -110
KPX Ydieresis Aring -110
KPX Ydieresis Atilde -110
KPX Ydieresis O -85
KPX Ydieresis Oacute -85
KPX Ydieresis Ocircumflex -85
KPX Ydieresis Odieresis -85
KPX Ydieresis Ograve -85
KPX Ydieresis Ohungarumlaut -85
KPX Ydieresis Omacron -85
KPX Ydieresis Oslash -85
KPX Ydieresis Otilde -85
KPX Ydieresis a -140
KPX Ydieresis aacute -140
KPX Ydieresis abreve -70
KPX Ydieresis acircumflex -140
KPX Ydieresis adieresis -140
KPX Ydieresis agrave -140
KPX Ydieresis amacron -70
KPX Ydieresis aogonek -140
KPX Ydieresis aring -140
KPX Ydieresis atilde -70
KPX Ydieresis colon -60
KPX Ydieresis comma -140
KPX Ydieresis e -140
KPX Ydieresis eacute -140
KPX Ydieresis ecaron -140
KPX Ydieresis ecircumflex -140
KPX Ydieresis edieresis -140
KPX Ydieresis edotaccent -140
KPX Ydieresis egrave -140
KPX Ydieresis emacron -70
KPX Ydieresis eogonek -140
KPX Ydieresis hyphen -140
KPX Ydieresis i -20
KPX Ydieresis iacute -20
KPX Ydieresis iogonek -20
KPX Ydieresis o -140
KPX Ydieresis oacute -140
KPX Ydieresis ocircumflex -140
KPX Ydieresis odieresis -140
KPX Ydieresis ograve -140
KPX Ydieresis ohungarumlaut -140
KPX Ydieresis omacron -140
KPX Ydieresis oslash -140
KPX Ydieresis otilde -140
KPX Ydieresis period -140
KPX Ydieresis semicolon -60
KPX Ydieresis u -110
KPX Ydieresis uacute -110
KPX Ydieresis ucircumflex -110
KPX Ydieresis udieresis -110
KPX Ydieresis ugrave -110
KPX Ydieresis uhungarumlaut -110
KPX Ydieresis umacron -110
KPX Ydieresis uogonek -110
KPX Ydieresis uring -110
KPX a v -20
KPX a w -20
KPX a y -30
KPX a yacute -30
KPX a ydieresis -30
KPX aacute v -20
KPX aacute w -20
KPX aacute y -30
KPX aacute yacute -30
KPX aacute ydieresis -30
KPX abreve v -20
KPX abreve w -20
KPX abreve y -30
KPX abreve yacute -30
KPX abreve ydieresis -30
KPX acircumflex v -20
KPX acircumflex w -20
KPX acircumflex y -30
KPX acircumflex yacute -30
KPX acircumflex ydieresis -30
KPX adieresis v -20
KPX adieresis w -20
KPX adieresis y -30
KPX adieresis yacute -30
KPX adieresis ydieresis -30
KPX agrave v -20
KPX agrave w -20
KPX agrave y -30
KPX agrave yacute -30
KPX agrave ydieresis -30
KPX amacron v -20
KPX amacron w -20
KPX amacron y -30
KPX amacron yacute -30
KPX amacron ydieresis -30
KPX aogonek v -20
KPX aogonek w -20
KPX aogonek y -30
KPX aogonek yacute -30
KPX aogonek ydieresis -30
KPX aring v -20
KPX aring w -20
KPX aring y -30
KPX aring yacute -30
KPX aring ydieresis -30
KPX atilde v -20
KPX atilde w -20
KPX atilde y -30
KPX atilde yacute -30
KPX atilde ydieresis -30
KPX b b -10
KPX b comma -40
KPX b l -20
KPX b lacute -20
KPX b lcommaaccent -20
KPX b lslash -20
KPX b period -40
KPX b u -20
KPX b uacute -20
KPX b ucircumflex -20
KPX b udieresis -20
KPX b ugrave -20
KPX b uhungarumlaut -20
KPX b umacron -20
KPX b uogonek -20
KPX b uring -20
KPX b v -20
KPX b y -20
KPX b yacute -20
KPX b ydieresis -20
KPX c comma -15
KPX c k -20
KPX c kcommaaccent -20
KPX cacute comma -15
KPX cacute k -20
KPX cacute kcommaaccent -20
KPX ccaron comma -15
KPX ccaron k -20
KPX ccaron kcommaaccent -20
KPX ccedilla comma -15
KPX ccedilla k -20
KPX ccedilla kcommaaccent -20
KPX colon space -50
KPX comma quotedblright -100
KPX comma quoteright -100
KPX e comma -15
KPX e period -15
KPX e v -30
KPX e w -20
KPX e x -30
KPX e y -20
KPX e yacute -20
KPX e ydieresis -20
KPX eacute comma -15
KPX eacute period -15
KPX eacute v -30
KPX eacute w -20
KPX eacute x -30
KPX eacute y -20
KPX eacute yacute -20
KPX eacute ydieresis -20
KPX ecaron comma -15
KPX ecaron period -15
KPX ecaron v -30
KPX ecaron w -20
KPX ecaron x -30
KPX ecaron y -20
KPX ecaron yacute -20
KPX ecaron ydieresis -20
KPX ecircumflex comma -15
KPX ecircumflex period -15
KPX ecircumflex v -30
KPX ecircumflex w -20
KPX ecircumflex x -30
KPX ecircumflex y -20
KPX ecircumflex yacute -20
KPX ecircumflex ydieresis -20
KPX edieresis comma -15
KPX edieresis period -15
KPX edieresis v -30
KPX edieresis w -20
KPX edieresis x -30
KPX edieresis y -20
KPX edieresis yacute -20
KPX edieresis ydieresis -20
KPX edotaccent comma -15
KPX edotaccent period -15
KPX edotaccent v -30
KPX edotaccent w -20
KPX edotaccent x -30
KPX edotaccent y -20
KPX edotaccent yacute -20
KPX edotaccent ydieresis -20
KPX egrave comma -15
KPX egrave period -15
KPX egrave v -30
KPX egrave w -20
KPX egrave x -30
KPX egrave y -20
KPX egrave yacute -20
KPX egrave ydieresis -20
KPX emacron comma -15
KPX emacron period -15
KPX emacron v -30
KPX emacron w -20
KPX emacron x -30
KPX emacron y -20
KPX emacron yacute -20
KPX emacron ydieresis -20
KPX eogonek comma -15
KPX eogonek period -15
KPX eogonek v -30
KPX eogonek w -20
KPX eogonek x -30
KPX eogonek y -20
KPX eogonek yacute -20
KPX eogonek ydieresis -20
KPX f a -30
KPX f aacute -30
KPX f abreve -30
KPX f acircumflex -30
KPX f adieresis -30
KPX f agrave -30
KPX f amacron -30
KPX f aogonek -30
KPX f aring -30
KPX f atilde -30
KPX f comma -30
KPX f dotlessi -28
KPX f e -30
KPX f eacute -30
KPX f ecaron -30
KPX f ecircumflex -30
KPX f edieresis -30
KPX f edotaccent -30
KPX f egrave -30
KPX f emacron -30
KPX f eogonek -30
KPX f o -30
KPX f oacute -30
KPX f ocircumflex -30
KPX f odieresis -30
KPX f ograve -30
KPX f ohungarumlaut -30
KPX f omacron -30
KPX f oslash -30
KPX f otilde -30
KPX f period -30
KPX f quotedblright 60
KPX f quoteright 50
KPX g r -10
KPX g racute -10
KPX g rcaron -10
KPX g rcommaaccent -10
KPX gbreve r -10
KPX gbreve racute -10
KPX gbreve rcaron -10
KPX gbreve rcommaaccent -10
KPX gcommaaccent r -10
KPX gcommaaccent racute -10
KPX gcommaaccent rcaron -10
KPX gcommaaccent rcommaaccent -10
KPX h y -30
KPX h yacute -30
KPX h ydieresis -30
KPX k e -20
KPX k eacute -20
KPX k ecaron -20
KPX k ecircumflex -20
KPX k edieresis -20
KPX k edotaccent -20
KPX k egrave -20
KPX k emacron -20
KPX k eogonek -20
KPX k o -20
KPX k oacute -20
KPX k ocircumflex -20
KPX k odieresis -20
KPX k ograve -20
KPX k ohungarumlaut -20
KPX k omacron -20
KPX k oslash -20
KPX k otilde -20
KPX kcommaaccent e -20
KPX kcommaaccent eacute -20
KPX kcommaaccent ecaron -20
KPX kcommaaccent ecircumflex -20
KPX kcommaaccent edieresis -20
KPX kcommaaccent edotaccent -20
KPX kcommaaccent egrave -20
KPX kcommaaccent emacron -20
KPX kcommaaccent eogonek -20
KPX kcommaaccent o -20
KPX kcommaaccent oacute -20
KPX kcommaaccent ocircumflex -20
KPX kcommaaccent odieresis -20
KPX kcommaaccent ograve -20
KPX kcommaaccent ohungarumlaut -20
KPX kcommaaccent omacron -20
KPX kcommaaccent oslash -20
KPX kcommaaccent otilde -20
KPX m u -10
KPX m uacute -10
KPX m ucircumflex -10
KPX m udieresis -10
KPX m ugrave -10
KPX m uhungarumlaut -10
KPX m umacron -10
KPX m uogonek -10
KPX m uring -10
KPX m y -15
KPX m yacute -15
KPX m ydieresis -15
KPX n u -10
KPX n uacute -10
KPX n ucircumflex -10
KPX n udieresis -10
KPX n ugrave -10
KPX n uhungarumlaut -10
KPX n umacron -10
KPX n uogonek -10
KPX n uring -10
KPX n v -20
KPX n y -15
KPX n yacute -15
KPX n ydieresis -15
KPX nacute u -10
KPX nacute uacute -10
KPX nacute ucircumflex -10
KPX nacute udieresis -10
KPX nacute ugrave -10
KPX nacute uhungarumlaut -10
KPX nacute umacron -10
KPX nacute uogonek -10
KPX nacute uring -10
KPX nacute v -20
KPX nacute y -15
KPX nacute yacute -15
KPX nacute ydieresis -15
KPX ncaron u -10
KPX ncaron uacute -10
KPX ncaron ucircumflex -10
KPX ncaron udieresis -10
KPX ncaron ugrave -10
KPX ncaron uhungarumlaut -10
KPX ncaron umacron -10
KPX ncaron uogonek -10
KPX ncaron uring -10
KPX ncaron v -20
KPX ncaron y -15
KPX ncaron yacute -15
KPX ncaron ydieresis -15
KPX ncommaaccent u -10
KPX ncommaaccent uacute -10
KPX ncommaaccent ucircumflex -10
KPX ncommaaccent udieresis -10
KPX ncommaaccent ugrave -10
KPX ncommaaccent uhungarumlaut -10
KPX ncommaaccent umacron -10
KPX ncommaaccent uogonek -10
KPX ncommaaccent uring -10
KPX ncommaaccent v -20
KPX ncommaaccent y -15
KPX ncommaaccent yacute -15
KPX ncommaaccent ydieresis -15
KPX ntilde u -10
KPX ntilde uacute -10
KPX ntilde ucircumflex -10
KPX ntilde udieresis -10
KPX ntilde ugrave -10
KPX ntilde uhungarumlaut -10
KPX ntilde umacron -10
KPX ntilde uogonek -10
KPX ntilde uring -10
KPX ntilde v -20
KPX ntilde y -15
KPX ntilde yacute -15
KPX ntilde ydieresis -15
KPX o comma -40
KPX o period -40
KPX o v -15
KPX o w -15
KPX o x -30
KPX o y -30
KPX o yacute -30
KPX o ydieresis -30
KPX oacute comma -40
KPX oacute period -40
KPX oacute v -15
KPX oacute w -15
KPX oacute x -30
KPX oacute y -30
KPX oacute yacute -30
KPX oacute ydieresis -30
KPX ocircumflex comma -40
KPX ocircumflex period -40
KPX ocircumflex v -15
KPX ocircumflex w -15
KPX ocircumflex x -30
KPX ocircumflex y -30
KPX ocircumflex yacute -30
KPX ocircumflex ydieresis -30
KPX odieresis comma -40
KPX odieresis period -40
KPX odieresis v -15
KPX odieresis w -15
KPX odieresis x -30
KPX odieresis y -30
KPX odieresis yacute -30
KPX odieresis ydieresis -30
KPX ograve comma -40
KPX ograve period -40
KPX ograve v -15
KPX ograve w -15
KPX ograve x -30
KPX ograve y -30
KPX ograve yacute -30
KPX ograve ydieresis -30
KPX ohungarumlaut comma -40
KPX ohungarumlaut period -40
KPX ohungarumlaut v -15
KPX ohungarumlaut w -15
KPX ohungarumlaut x -30
KPX ohungarumlaut y -30
KPX ohungarumlaut yacute -30
KPX ohungarumlaut ydieresis -30
KPX omacron comma -40
KPX omacron period -40
KPX omacron v -15
KPX omacron w -15
KPX omacron x -30
KPX omacron y -30
KPX omacron yacute -30
KPX omacron ydieresis -30
KPX oslash a -55
KPX oslash aacute -55
KPX oslash abreve -55
KPX oslash acircumflex -55
KPX oslash adieresis -55
KPX oslash agrave -55
KPX oslash amacron -55
KPX oslash aogonek -55
KPX oslash aring -55
KPX oslash atilde -55
KPX oslash b -55
KPX oslash c -55
KPX oslash cacute -55
KPX oslash ccaron -55
KPX oslash ccedilla -55
KPX oslash comma -95
KPX oslash d -55
KPX oslash dcroat -55
KPX oslash e -55
KPX oslash eacute -55
KPX oslash ecaron -55
KPX oslash ecircumflex -55
KPX oslash edieresis -55
KPX oslash edotaccent -55
KPX oslash egrave -55
KPX oslash emacron -55
KPX oslash eogonek -55
KPX oslash f -55
KPX oslash g -55
KPX oslash gbreve -55
KPX oslash gcommaaccent -55
KPX oslash h -55
KPX oslash i -55
KPX oslash iacute -55
KPX oslash icircumflex -55
KPX oslash idieresis -55
KPX oslash igrave -55
KPX oslash imacron -55
KPX oslash iogonek -55
KPX oslash j -55
KPX oslash k -55
KPX oslash kcommaaccent -55
KPX oslash l -55
KPX oslash lacute -55
KPX oslash lcommaaccent -55
KPX oslash lslash -55
KPX oslash m -55
KPX oslash n -55
KPX oslash nacute -55
KPX oslash ncaron -55
KPX oslash ncommaaccent -55
KPX oslash ntilde -55
KPX oslash o -55
KPX oslash oacute -55
KPX oslash ocircumflex -55
KPX oslash odieresis -55
KPX oslash ograve -55
KPX oslash ohungarumlaut -55
KPX oslash omacron -55
KPX oslash oslash -55
KPX oslash otilde -55
KPX oslash p -55
KPX oslash period -95
KPX oslash q -55
KPX oslash r -55
KPX oslash racute -55
KPX oslash rcaron -55
KPX oslash rcommaaccent -55
KPX oslash s -55
KPX oslash sacute -55
KPX oslash scaron -55
KPX oslash scedilla -55
KPX oslash scommaaccent -55
KPX oslash t -55
KPX oslash tcommaaccent -55
KPX oslash u -55
KPX oslash uacute -55
KPX oslash ucircumflex -55
KPX oslash udieresis -55
KPX oslash ugrave -55
KPX oslash uhungarumlaut -55
KPX oslash umacron -55
KPX oslash uogonek -55
KPX oslash uring -55
KPX oslash v -70
KPX oslash w -70
KPX oslash x -85
KPX oslash y -70
KPX oslash yacute -70
KPX oslash ydieresis -70
KPX oslash z -55
KPX oslash zacute -55
KPX oslash zcaron -55
KPX oslash zdotaccent -55
KPX otilde comma -40
KPX otilde period -40
KPX otilde v -15
KPX otilde w -15
KPX otilde x -30
KPX otilde y -30
KPX otilde yacute -30
KPX otilde ydieresis -30
KPX p comma -35
KPX p period -35
KPX p y -30
KPX p yacute -30
KPX p ydieresis -30
KPX period quotedblright -100
KPX period quoteright -100
KPX period space -60
KPX quotedblright space -40
KPX quoteleft quoteleft -57
KPX quoteright d -50
KPX quoteright dcroat -50
KPX quoteright quoteright -57
KPX quoteright r -50
KPX quoteright racute -50
KPX quoteright rcaron -50
KPX quoteright rcommaaccent -50
KPX quoteright s -50
KPX quoteright sacute -50
KPX quoteright scaron -50
KPX quoteright scedilla -50
KPX quoteright scommaaccent -50
KPX quoteright space -70
KPX r a -10
KPX r aacute -10
KPX r abreve -10
KPX r acircumflex -10
KPX r adieresis -10
KPX r agrave -10
KPX r amacron -10
KPX r aogonek -10
KPX r aring -10
KPX r atilde -10
KPX r colon 30
KPX r comma -50
KPX r i 15
KPX r iacute 15
KPX r icircumflex 15
KPX r idieresis 15
KPX r igrave 15
KPX r imacron 15
KPX r iogonek 15
KPX r k 15
KPX r kcommaaccent 15
KPX r l 15
KPX r lacute 15
KPX r lcommaaccent 15
KPX r lslash 15
KPX r m 25
KPX r n 25
KPX r nacute 25
KPX r ncaron 25
KPX r ncommaaccent 25
KPX r ntilde 25
KPX r p 30
KPX r period -50
KPX r semicolon 30
KPX r t 40
KPX r tcommaaccent 40
KPX r u 15
KPX r uacute 15
KPX r ucircumflex 15
KPX r udieresis 15
KPX r ugrave 15
KPX r uhungarumlaut 15
KPX r umacron 15
KPX r uogonek 15
KPX r uring 15
KPX r v 30
KPX r y 30
KPX r yacute 30
KPX r ydieresis 30
KPX racute a -10
KPX racute aacute -10
KPX racute abreve -10
KPX racute acircumflex -10
KPX racute adieresis -10
KPX racute agrave -10
KPX racute amacron -10
KPX racute aogonek -10
KPX racute aring -10
KPX racute atilde -10
KPX racute colon 30
KPX racute comma -50
KPX racute i 15
KPX racute iacute 15
KPX racute icircumflex 15
KPX racute idieresis 15
KPX racute igrave 15
KPX racute imacron 15
KPX racute iogonek 15
KPX racute k 15
KPX racute kcommaaccent 15
KPX racute l 15
KPX racute lacute 15
KPX racute lcommaaccent 15
KPX racute lslash 15
KPX racute m 25
KPX racute n 25
KPX racute nacute 25
KPX racute ncaron 25
KPX racute ncommaaccent 25
KPX racute ntilde 25
KPX racute p 30
KPX racute period -50
KPX racute semicolon 30
KPX racute t 40
KPX racute tcommaaccent 40
KPX racute u 15
KPX racute uacute 15
KPX racute ucircumflex 15
KPX racute udieresis 15
KPX racute ugrave 15
KPX racute uhungarumlaut 15
KPX racute umacron 15
KPX racute uogonek 15
KPX racute uring 15
KPX racute v 30
KPX racute y 30
KPX racute yacute 30
KPX racute ydieresis 30
KPX rcaron a -10
KPX rcaron aacute -10
KPX rcaron abreve -10
KPX rcaron acircumflex -10
KPX rcaron adieresis -10
KPX rcaron agrave -10
KPX rcaron amacron -10
KPX rcaron aogonek -10
KPX rcaron aring -10
KPX rcaron atilde -10
KPX rcaron colon 30
KPX rcaron comma -50
KPX rcaron i 15
KPX rcaron iacute 15
KPX rcaron icircumflex 15
KPX rcaron idieresis 15
KPX rcaron igrave 15
KPX rcaron imacron 15
KPX rcaron iogonek 15
KPX rcaron k 15
KPX rcaron kcommaaccent 15
KPX rcaron l 15
KPX rcaron lacute 15
KPX rcaron lcommaaccent 15
KPX rcaron lslash 15
KPX rcaron m 25
KPX rcaron n 25
KPX rcaron nacute 25
KPX rcaron ncaron 25
KPX rcaron ncommaaccent 25
KPX rcaron ntilde 25
KPX rcaron p 30
KPX rcaron period -50
KPX rcaron semicolon 30
KPX rcaron t 40
KPX rcaron tcommaaccent 40
KPX rcaron u 15
KPX rcaron uacute 15
KPX rcaron ucircumflex 15
KPX rcaron udieresis 15
KPX rcaron ugrave 15
KPX rcaron uhungarumlaut 15
KPX rcaron umacron 15
KPX rcaron uogonek 15
KPX rcaron uring 15
KPX rcaron v 30
KPX rcaron y 30
KPX rcaron yacute 30
KPX rcaron ydieresis 30
KPX rcommaaccent a -10
KPX rcommaaccent aacute -10
KPX rcommaaccent abreve -10
KPX rcommaaccent acircumflex -10
KPX rcommaaccent adieresis -10
KPX rcommaaccent agrave -10
KPX rcommaaccent amacron -10
KPX rcommaaccent aogonek -10
KPX rcommaaccent aring -10
KPX rcommaaccent atilde -10
KPX rcommaaccent colon 30
KPX rcommaaccent comma -50
KPX rcommaaccent i 15
KPX rcommaaccent iacute 15
KPX rcommaaccent icircumflex 15
KPX rcommaaccent idieresis 15
KPX rcommaaccent igrave 15
KPX rcommaaccent imacron 15
KPX rcommaaccent iogonek 15
KPX rcommaaccent k 15
KPX rcommaaccent kcommaaccent 15
KPX rcommaaccent l 15
KPX rcommaaccent lacute 15
KPX rcommaaccent lcommaaccent 15
KPX rcommaaccent lslash 15
KPX rcommaaccent m 25
KPX rcommaaccent n 25
KPX rcommaaccent nacute 25
KPX rcommaaccent ncaron 25
KPX rcommaaccent ncommaaccent 25
KPX rcommaaccent ntilde 25
KPX rcommaaccent p 30
KPX rcommaaccent period -50
KPX rcommaaccent semicolon 30
KPX rcommaaccent t 40
KPX rcommaaccent tcommaaccent 40
KPX rcommaaccent u 15
KPX rcommaaccent uacute 15
KPX rcommaaccent ucircumflex 15
KPX rcommaaccent udieresis 15
KPX rcommaaccent ugrave 15
KPX rcommaaccent uhungarumlaut 15
KPX rcommaaccent umacron 15
KPX rcommaaccent uogonek 15
KPX rcommaaccent uring 15
KPX rcommaaccent v 30
KPX rcommaaccent y 30
KPX rcommaaccent yacute 30
KPX rcommaaccent ydieresis 30
KPX s comma -15
KPX s period -15
KPX s w -30
KPX sacute comma -15
KPX sacute period -15
KPX sacute w -30
KPX scaron comma -15
KPX scaron period -15
KPX scaron w -30
KPX scedilla comma -15
KPX scedilla period -15
KPX scedilla w -30
KPX scommaaccent comma -15
KPX scommaaccent period -15
KPX scommaaccent w -30
KPX semicolon space -50
KPX space T -50
KPX space Tcaron -50
KPX space Tcommaaccent -50
KPX space V -50
KPX space W -40
KPX space Y -90
KPX space Yacute -90
KPX space Ydieresis -90
KPX space quotedblleft -30
KPX space quoteleft -60
KPX v a -25
KPX v aacute -25
KPX v abreve -25
KPX v acircumflex -25
KPX v adieresis -25
KPX v agrave -25
KPX v amacron -25
KPX v aogonek -25
KPX v aring -25
KPX v atilde -25
KPX v comma -80
KPX v e -25
KPX v eacute -25
KPX v ecaron -25
KPX v ecircumflex -25
KPX v edieresis -25
KPX v edotaccent -25
KPX v egrave -25
KPX v emacron -25
KPX v eogonek -25
KPX v o -25
KPX v oacute -25
KPX v ocircumflex -25
KPX v odieresis -25
KPX v ograve -25
KPX v ohungarumlaut -25
KPX v omacron -25
KPX v oslash -25
KPX v otilde -25
KPX v period -80
KPX w a -15
KPX w aacute -15
KPX w abreve -15
KPX w acircumflex -15
KPX w adieresis -15
KPX w agrave -15
KPX w amacron -15
KPX w aogonek -15
KPX w aring -15
KPX w atilde -15
KPX w comma -60
KPX w e -10
KPX w eacute -10
KPX w ecaron -10
KPX w ecircumflex -10
KPX w edieresis -10
KPX w edotaccent -10
KPX w egrave -10
KPX w emacron -10
KPX w eogonek -10
KPX w o -10
KPX w oacute -10
KPX w ocircumflex -10
KPX w odieresis -10
KPX w ograve -10
KPX w ohungarumlaut -10
KPX w omacron -10
KPX w oslash -10
KPX w otilde -10
KPX w period -60
KPX x e -30
KPX x eacute -30
KPX x ecaron -30
KPX x ecircumflex -30
KPX x edieresis -30
KPX x edotaccent -30
KPX x egrave -30
KPX x emacron -30
KPX x eogonek -30
KPX y a -20
KPX y aacute -20
KPX y abreve -20
KPX y acircumflex -20
KPX y adieresis -20
KPX y agrave -20
KPX y amacron -20
KPX y aogonek -20
KPX y aring -20
KPX y atilde -20
KPX y comma -100
KPX y e -20
KPX y eacute -20
KPX y ecaron -20
KPX y ecircumflex -20
KPX y edieresis -20
KPX y edotaccent -20
KPX y egrave -20
KPX y emacron -20
KPX y eogonek -20
KPX y o -20
KPX y oacute -20
KPX y ocircumflex -20
KPX y odieresis -20
KPX y ograve -20
KPX y ohungarumlaut -20
KPX y omacron -20
KPX y oslash -20
KPX y otilde -20
KPX y period -100
KPX yacute a -20
KPX yacute aacute -20
KPX yacute abreve -20
KPX yacute acircumflex -20
KPX yacute adieresis -20
KPX yacute agrave -20
KPX yacute amacron -20
KPX yacute aogonek -20
KPX yacute aring -20
KPX yacute atilde -20
KPX yacute comma -100
KPX yacute e -20
KPX yacute eacute -20
KPX yacute ecaron -20
KPX yacute ecircumflex -20
KPX yacute edieresis -20
KPX yacute edotaccent -20
KPX yacute egrave -20
KPX yacute emacron -20
KPX yacute eogonek -20
KPX yacute o -20
KPX yacute oacute -20
KPX yacute ocircumflex -20
KPX yacute odieresis -20
KPX yacute ograve -20
KPX yacute ohungarumlaut -20
KPX yacute omacron -20
KPX yacute oslash -20
KPX yacute otilde -20
KPX yacute period -100
KPX ydieresis a -20
KPX ydieresis aacute -20
KPX ydieresis abreve -20
KPX ydieresis acircumflex -20
KPX ydieresis adieresis -20
KPX ydieresis agrave -20
KPX ydieresis amacron -20
KPX ydieresis aogonek -20
KPX ydieresis aring -20
KPX ydieresis atilde -20
KPX ydieresis comma -100
KPX ydieresis e -20
KPX ydieresis eacute -20
KPX ydieresis ecaron -20
KPX ydieresis ecircumflex -20
KPX ydieresis edieresis -20
KPX ydieresis edotaccent -20
KPX ydieresis egrave -20
KPX ydieresis emacron -20
KPX ydieresis eogonek -20
KPX ydieresis o -20
KPX ydieresis oacute -20
KPX ydieresis ocircumflex -20
KPX ydieresis odieresis -20
KPX ydieresis ograve -20
KPX ydieresis ohungarumlaut -20
KPX ydieresis omacron -20
KPX ydieresis oslash -20
KPX ydieresis otilde -20
KPX ydieresis period -100
KPX z e -15
KPX z eacute -15
KPX z ecaron -15
KPX z ecircumflex -15
KPX z edieresis -15
KPX z edotaccent -15
KPX z egrave -15
KPX z emacron -15
KPX z eogonek -15
KPX z o -15
KPX z oacute -15
KPX z ocircumflex -15
KPX z odieresis -15
KPX z ograve -15
KPX z ohungarumlaut -15
KPX z omacron -15
KPX z oslash -15
KPX z otilde -15
KPX zacute e -15
KPX zacute eacute -15
KPX zacute ecaron -15
KPX zacute ecircumflex -15
KPX zacute edieresis -15
KPX zacute edotaccent -15
KPX zacute egrave -15
KPX zacute emacron -15
KPX zacute eogonek -15
KPX zacute o -15
KPX zacute oacute -15
KPX zacute ocircumflex -15
KPX zacute odieresis -15
KPX zacute ograve -15
KPX zacute ohungarumlaut -15
KPX zacute omacron -15
KPX zacute oslash -15
KPX zacute otilde -15
KPX zcaron e -15
KPX zcaron eacute -15
KPX zcaron ecaron -15
KPX zcaron ecircumflex -15
KPX zcaron edieresis -15
KPX zcaron edotaccent -15
KPX zcaron egrave -15
KPX zcaron emacron -15
KPX zcaron eogonek -15
KPX zcaron o -15
KPX zcaron oacute -15
KPX zcaron ocircumflex -15
KPX zcaron odieresis -15
KPX zcaron ograve -15
KPX zcaron ohungarumlaut -15
KPX zcaron omacron -15
KPX zcaron oslash -15
KPX zcaron otilde -15
KPX zdotaccent e -15
KPX zdotaccent eacute -15
KPX zdotaccent ecaron -15
KPX zdotaccent ecircumflex -15
KPX zdotaccent edieresis -15
KPX zdotaccent edotaccent -15
KPX zdotaccent egrave -15
KPX zdotaccent emacron -15
KPX zdotaccent eogonek -15
KPX zdotaccent o -15
KPX zdotaccent oacute -15
KPX zdotaccent ocircumflex -15
KPX zdotaccent odieresis -15
KPX zdotaccent ograve -15
KPX zdotaccent ohungarumlaut -15
KPX zdotaccent omacron -15
KPX zdotaccent oslash -15
KPX zdotaccent otilde -15
EndKernPairs
EndKernData
EndFontMetrics
'
%
classmethod: StandardFont
symbol
	"from http://www.adobe.com/devnet/font.html "

	<font: #Symbol>
	^self
		windowsName: 'Arial'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.
Comment Creation Date: Thu May  1 15:12:25 1997
Comment UniqueID 43064
Comment VMusage 30820 39997
FontName Symbol
FullName Symbol
FamilyName Symbol
Weight Medium
ItalicAngle 0
IsFixedPitch false
CharacterSet Special
FontBBox -180 -293 1090 1010 
UnderlinePosition -100
UnderlineThickness 50
Version 001.008
Notice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.
EncodingScheme FontSpecific
StdHW 92
StdVW 85
StartCharMetrics 190
C 32 ; WX 250 ; N space ; B 0 0 0 0 ;
C 33 ; WX 333 ; N exclam ; B 128 -17 240 672 ;
C 34 ; WX 713 ; N universal ; B 31 0 681 705 ;
C 35 ; WX 500 ; N numbersign ; B 20 -16 481 673 ;
C 36 ; WX 549 ; N existential ; B 25 0 478 707 ;
C 37 ; WX 833 ; N percent ; B 63 -36 771 655 ;
C 38 ; WX 778 ; N ampersand ; B 41 -18 750 661 ;
C 39 ; WX 439 ; N suchthat ; B 48 -17 414 500 ;
C 40 ; WX 333 ; N parenleft ; B 53 -191 300 673 ;
C 41 ; WX 333 ; N parenright ; B 30 -191 277 673 ;
C 42 ; WX 500 ; N asteriskmath ; B 65 134 427 551 ;
C 43 ; WX 549 ; N plus ; B 10 0 539 533 ;
C 44 ; WX 250 ; N comma ; B 56 -152 194 104 ;
C 45 ; WX 549 ; N minus ; B 11 233 535 288 ;
C 46 ; WX 250 ; N period ; B 69 -17 181 95 ;
C 47 ; WX 278 ; N slash ; B 0 -18 254 646 ;
C 48 ; WX 500 ; N zero ; B 24 -14 476 685 ;
C 49 ; WX 500 ; N one ; B 117 0 390 673 ;
C 50 ; WX 500 ; N two ; B 25 0 475 685 ;
C 51 ; WX 500 ; N three ; B 43 -14 435 685 ;
C 52 ; WX 500 ; N four ; B 15 0 469 685 ;
C 53 ; WX 500 ; N five ; B 32 -14 445 690 ;
C 54 ; WX 500 ; N six ; B 34 -14 468 685 ;
C 55 ; WX 500 ; N seven ; B 24 -16 448 673 ;
C 56 ; WX 500 ; N eight ; B 56 -14 445 685 ;
C 57 ; WX 500 ; N nine ; B 30 -18 459 685 ;
C 58 ; WX 278 ; N colon ; B 81 -17 193 460 ;
C 59 ; WX 278 ; N semicolon ; B 83 -152 221 460 ;
C 60 ; WX 549 ; N less ; B 26 0 523 522 ;
C 61 ; WX 549 ; N equal ; B 11 141 537 390 ;
C 62 ; WX 549 ; N greater ; B 26 0 523 522 ;
C 63 ; WX 444 ; N question ; B 70 -17 412 686 ;
C 64 ; WX 549 ; N congruent ; B 11 0 537 475 ;
C 65 ; WX 722 ; N Alpha ; B 4 0 684 673 ;
C 66 ; WX 667 ; N Beta ; B 29 0 592 673 ;
C 67 ; WX 722 ; N Chi ; B -9 0 704 673 ;
C 68 ; WX 612 ; N Delta ; B 6 0 608 688 ;
C 69 ; WX 611 ; N Epsilon ; B 32 0 617 673 ;
C 70 ; WX 763 ; N Phi ; B 26 0 741 673 ;
C 71 ; WX 603 ; N Gamma ; B 24 0 609 673 ;
C 72 ; WX 722 ; N Eta ; B 39 0 729 673 ;
C 73 ; WX 333 ; N Iota ; B 32 0 316 673 ;
C 74 ; WX 631 ; N theta1 ; B 18 -18 623 689 ;
C 75 ; WX 722 ; N Kappa ; B 35 0 722 673 ;
C 76 ; WX 686 ; N Lambda ; B 6 0 680 688 ;
C 77 ; WX 889 ; N Mu ; B 28 0 887 673 ;
C 78 ; WX 722 ; N Nu ; B 29 -8 720 673 ;
C 79 ; WX 722 ; N Omicron ; B 41 -17 715 685 ;
C 80 ; WX 768 ; N Pi ; B 25 0 745 673 ;
C 81 ; WX 741 ; N Theta ; B 41 -17 715 685 ;
C 82 ; WX 556 ; N Rho ; B 28 0 563 673 ;
C 83 ; WX 592 ; N Sigma ; B 5 0 589 673 ;
C 84 ; WX 611 ; N Tau ; B 33 0 607 673 ;
C 85 ; WX 690 ; N Upsilon ; B -8 0 694 673 ;
C 86 ; WX 439 ; N sigma1 ; B 40 -233 436 500 ;
C 87 ; WX 768 ; N Omega ; B 34 0 736 688 ;
C 88 ; WX 645 ; N Xi ; B 40 0 599 673 ;
C 89 ; WX 795 ; N Psi ; B 15 0 781 684 ;
C 90 ; WX 611 ; N Zeta ; B 44 0 636 673 ;
C 91 ; WX 333 ; N bracketleft ; B 86 -155 299 674 ;
C 92 ; WX 863 ; N therefore ; B 163 0 701 487 ;
C 93 ; WX 333 ; N bracketright ; B 33 -155 246 674 ;
C 94 ; WX 658 ; N perpendicular ; B 15 0 652 674 ;
C 95 ; WX 500 ; N underscore ; B -2 -125 502 -75 ;
C 96 ; WX 500 ; N radicalex ; B 480 881 1090 917 ;
C 97 ; WX 631 ; N alpha ; B 41 -18 622 500 ;
C 98 ; WX 549 ; N beta ; B 61 -223 515 741 ;
C 99 ; WX 549 ; N chi ; B 12 -231 522 499 ;
C 100 ; WX 494 ; N delta ; B 40 -19 481 740 ;
C 101 ; WX 439 ; N epsilon ; B 22 -19 427 502 ;
C 102 ; WX 521 ; N phi ; B 28 -224 492 673 ;
C 103 ; WX 411 ; N gamma ; B 5 -225 484 499 ;
C 104 ; WX 603 ; N eta ; B 0 -202 527 514 ;
C 105 ; WX 329 ; N iota ; B 0 -17 301 503 ;
C 106 ; WX 603 ; N phi1 ; B 36 -224 587 499 ;
C 107 ; WX 549 ; N kappa ; B 33 0 558 501 ;
C 108 ; WX 549 ; N lambda ; B 24 -17 548 739 ;
C 109 ; WX 576 ; N mu ; B 33 -223 567 500 ;
C 110 ; WX 521 ; N nu ; B -9 -16 475 507 ;
C 111 ; WX 549 ; N omicron ; B 35 -19 501 499 ;
C 112 ; WX 549 ; N pi ; B 10 -19 530 487 ;
C 113 ; WX 521 ; N theta ; B 43 -17 485 690 ;
C 114 ; WX 549 ; N rho ; B 50 -230 490 499 ;
C 115 ; WX 603 ; N sigma ; B 30 -21 588 500 ;
C 116 ; WX 439 ; N tau ; B 10 -19 418 500 ;
C 117 ; WX 576 ; N upsilon ; B 7 -18 535 507 ;
C 118 ; WX 713 ; N omega1 ; B 12 -18 671 583 ;
C 119 ; WX 686 ; N omega ; B 42 -17 684 500 ;
C 120 ; WX 493 ; N xi ; B 27 -224 469 766 ;
C 121 ; WX 686 ; N psi ; B 12 -228 701 500 ;
C 122 ; WX 494 ; N zeta ; B 60 -225 467 756 ;
C 123 ; WX 480 ; N braceleft ; B 58 -183 397 673 ;
C 124 ; WX 200 ; N bar ; B 65 -293 135 707 ;
C 125 ; WX 480 ; N braceright ; B 79 -183 418 673 ;
C 126 ; WX 549 ; N similar ; B 17 203 529 307 ;
C 160 ; WX 750 ; N Euro ; B 20 -12 714 685 ;
C 161 ; WX 620 ; N Upsilon1 ; B -2 0 610 685 ;
C 162 ; WX 247 ; N minute ; B 27 459 228 735 ;
C 163 ; WX 549 ; N lessequal ; B 29 0 526 639 ;
C 164 ; WX 167 ; N fraction ; B -180 -12 340 677 ;
C 165 ; WX 713 ; N infinity ; B 26 124 688 404 ;
C 166 ; WX 500 ; N florin ; B 2 -193 494 686 ;
C 167 ; WX 753 ; N club ; B 86 -26 660 533 ;
C 168 ; WX 753 ; N diamond ; B 142 -36 600 550 ;
C 169 ; WX 753 ; N heart ; B 117 -33 631 532 ;
C 170 ; WX 753 ; N spade ; B 113 -36 629 548 ;
C 171 ; WX 1042 ; N arrowboth ; B 24 -15 1024 511 ;
C 172 ; WX 987 ; N arrowleft ; B 32 -15 942 511 ;
C 173 ; WX 603 ; N arrowup ; B 45 0 571 910 ;
C 174 ; WX 987 ; N arrowright ; B 49 -15 959 511 ;
C 175 ; WX 603 ; N arrowdown ; B 45 -22 571 888 ;
C 176 ; WX 400 ; N degree ; B 50 385 350 685 ;
C 177 ; WX 549 ; N plusminus ; B 10 0 539 645 ;
C 178 ; WX 411 ; N second ; B 20 459 413 737 ;
C 179 ; WX 549 ; N greaterequal ; B 29 0 526 639 ;
C 180 ; WX 549 ; N multiply ; B 17 8 533 524 ;
C 181 ; WX 713 ; N proportional ; B 27 123 639 404 ;
C 182 ; WX 494 ; N partialdiff ; B 26 -20 462 746 ;
C 183 ; WX 460 ; N bullet ; B 50 113 410 473 ;
C 184 ; WX 549 ; N divide ; B 10 71 536 456 ;
C 185 ; WX 549 ; N notequal ; B 15 -25 540 549 ;
C 186 ; WX 549 ; N equivalence ; B 14 82 538 443 ;
C 187 ; WX 549 ; N approxequal ; B 14 135 527 394 ;
C 188 ; WX 1000 ; N ellipsis ; B 111 -17 889 95 ;
C 189 ; WX 603 ; N arrowvertex ; B 280 -120 336 1010 ;
C 190 ; WX 1000 ; N arrowhorizex ; B -60 220 1050 276 ;
C 191 ; WX 658 ; N carriagereturn ; B 15 -16 602 629 ;
C 192 ; WX 823 ; N aleph ; B 175 -18 661 658 ;
C 193 ; WX 686 ; N Ifraktur ; B 10 -53 578 740 ;
C 194 ; WX 795 ; N Rfraktur ; B 26 -15 759 734 ;
C 195 ; WX 987 ; N weierstrass ; B 159 -211 870 573 ;
C 196 ; WX 768 ; N circlemultiply ; B 43 -17 733 673 ;
C 197 ; WX 768 ; N circleplus ; B 43 -15 733 675 ;
C 198 ; WX 823 ; N emptyset ; B 39 -24 781 719 ;
C 199 ; WX 768 ; N intersection ; B 40 0 732 509 ;
C 200 ; WX 768 ; N union ; B 40 -17 732 492 ;
C 201 ; WX 713 ; N propersuperset ; B 20 0 673 470 ;
C 202 ; WX 713 ; N reflexsuperset ; B 20 -125 673 470 ;
C 203 ; WX 713 ; N notsubset ; B 36 -70 690 540 ;
C 204 ; WX 713 ; N propersubset ; B 37 0 690 470 ;
C 205 ; WX 713 ; N reflexsubset ; B 37 -125 690 470 ;
C 206 ; WX 713 ; N element ; B 45 0 505 468 ;
C 207 ; WX 713 ; N notelement ; B 45 -58 505 555 ;
C 208 ; WX 768 ; N angle ; B 26 0 738 673 ;
C 209 ; WX 713 ; N gradient ; B 36 -19 681 718 ;
C 210 ; WX 790 ; N registerserif ; B 50 -17 740 673 ;
C 211 ; WX 790 ; N copyrightserif ; B 51 -15 741 675 ;
C 212 ; WX 890 ; N trademarkserif ; B 18 293 855 673 ;
C 213 ; WX 823 ; N product ; B 25 -101 803 751 ;
C 214 ; WX 549 ; N radical ; B 10 -38 515 917 ;
C 215 ; WX 250 ; N dotmath ; B 69 210 169 310 ;
C 216 ; WX 713 ; N logicalnot ; B 15 0 680 288 ;
C 217 ; WX 603 ; N logicaland ; B 23 0 583 454 ;
C 218 ; WX 603 ; N logicalor ; B 30 0 578 477 ;
C 219 ; WX 1042 ; N arrowdblboth ; B 27 -20 1023 510 ;
C 220 ; WX 987 ; N arrowdblleft ; B 30 -15 939 513 ;
C 221 ; WX 603 ; N arrowdblup ; B 39 2 567 911 ;
C 222 ; WX 987 ; N arrowdblright ; B 45 -20 954 508 ;
C 223 ; WX 603 ; N arrowdbldown ; B 44 -19 572 890 ;
C 224 ; WX 494 ; N lozenge ; B 18 0 466 745 ;
C 225 ; WX 329 ; N angleleft ; B 25 -198 306 746 ;
C 226 ; WX 790 ; N registersans ; B 50 -20 740 670 ;
C 227 ; WX 790 ; N copyrightsans ; B 49 -15 739 675 ;
C 228 ; WX 786 ; N trademarksans ; B 5 293 725 673 ;
C 229 ; WX 713 ; N summation ; B 14 -108 695 752 ;
C 230 ; WX 384 ; N parenlefttp ; B 24 -293 436 926 ;
C 231 ; WX 384 ; N parenleftex ; B 24 -85 108 925 ;
C 232 ; WX 384 ; N parenleftbt ; B 24 -293 436 926 ;
C 233 ; WX 384 ; N bracketlefttp ; B 0 -80 349 926 ;
C 234 ; WX 384 ; N bracketleftex ; B 0 -79 77 925 ;
C 235 ; WX 384 ; N bracketleftbt ; B 0 -80 349 926 ;
C 236 ; WX 494 ; N bracelefttp ; B 209 -85 445 925 ;
C 237 ; WX 494 ; N braceleftmid ; B 20 -85 284 935 ;
C 238 ; WX 494 ; N braceleftbt ; B 209 -75 445 935 ;
C 239 ; WX 494 ; N braceex ; B 209 -85 284 935 ;
C 241 ; WX 329 ; N angleright ; B 21 -198 302 746 ;
C 242 ; WX 274 ; N integral ; B 2 -107 291 916 ;
C 243 ; WX 686 ; N integraltp ; B 308 -88 675 920 ;
C 244 ; WX 686 ; N integralex ; B 308 -88 378 975 ;
C 245 ; WX 686 ; N integralbt ; B 11 -87 378 921 ;
C 246 ; WX 384 ; N parenrighttp ; B 54 -293 466 926 ;
C 247 ; WX 384 ; N parenrightex ; B 382 -85 466 925 ;
C 248 ; WX 384 ; N parenrightbt ; B 54 -293 466 926 ;
C 249 ; WX 384 ; N bracketrighttp ; B 22 -80 371 926 ;
C 250 ; WX 384 ; N bracketrightex ; B 294 -79 371 925 ;
C 251 ; WX 384 ; N bracketrightbt ; B 22 -80 371 926 ;
C 252 ; WX 494 ; N bracerighttp ; B 48 -85 284 925 ;
C 253 ; WX 494 ; N bracerightmid ; B 209 -85 473 935 ;
C 254 ; WX 494 ; N bracerightbt ; B 48 -75 284 935 ;
C -1 ; WX 790 ; N apple ; B 56 -3 733 808 ;
EndCharMetrics
EndFontMetrics
'
%
classmethod: StandardFont
timesBold
	"from http://www.adobe.com/devnet/font.html "

	<font: #'Times-Bold'>
	^self
		windowsName: 'Times New Roman'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.
Comment Creation Date: Thu May  1 12:52:56 1997
Comment UniqueID 43065
Comment VMusage 41636 52661
FontName Times-Bold
FullName Times Bold
FamilyName Times
Weight Bold
ItalicAngle 0
IsFixedPitch false
CharacterSet ExtendedRoman
FontBBox -168 -218 1000 935 
UnderlinePosition -100
UnderlineThickness 50
Version 002.000
Notice Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.
EncodingScheme AdobeStandardEncoding
CapHeight 676
XHeight 461
Ascender 683
Descender -217
StdHW 44
StdVW 139
StartCharMetrics 315
C 32 ; WX 250 ; N space ; B 0 0 0 0 ;
C 33 ; WX 333 ; N exclam ; B 81 -13 251 691 ;
C 34 ; WX 555 ; N quotedbl ; B 83 404 472 691 ;
C 35 ; WX 500 ; N numbersign ; B 4 0 496 700 ;
C 36 ; WX 500 ; N dollar ; B 29 -99 472 750 ;
C 37 ; WX 1000 ; N percent ; B 124 -14 877 692 ;
C 38 ; WX 833 ; N ampersand ; B 62 -16 787 691 ;
C 39 ; WX 333 ; N quoteright ; B 79 356 263 691 ;
C 40 ; WX 333 ; N parenleft ; B 46 -168 306 694 ;
C 41 ; WX 333 ; N parenright ; B 27 -168 287 694 ;
C 42 ; WX 500 ; N asterisk ; B 56 255 447 691 ;
C 43 ; WX 570 ; N plus ; B 33 0 537 506 ;
C 44 ; WX 250 ; N comma ; B 39 -180 223 155 ;
C 45 ; WX 333 ; N hyphen ; B 44 171 287 287 ;
C 46 ; WX 250 ; N period ; B 41 -13 210 156 ;
C 47 ; WX 278 ; N slash ; B -24 -19 302 691 ;
C 48 ; WX 500 ; N zero ; B 24 -13 476 688 ;
C 49 ; WX 500 ; N one ; B 65 0 442 688 ;
C 50 ; WX 500 ; N two ; B 17 0 478 688 ;
C 51 ; WX 500 ; N three ; B 16 -14 468 688 ;
C 52 ; WX 500 ; N four ; B 19 0 475 688 ;
C 53 ; WX 500 ; N five ; B 22 -8 470 676 ;
C 54 ; WX 500 ; N six ; B 28 -13 475 688 ;
C 55 ; WX 500 ; N seven ; B 17 0 477 676 ;
C 56 ; WX 500 ; N eight ; B 28 -13 472 688 ;
C 57 ; WX 500 ; N nine ; B 26 -13 473 688 ;
C 58 ; WX 333 ; N colon ; B 82 -13 251 472 ;
C 59 ; WX 333 ; N semicolon ; B 82 -180 266 472 ;
C 60 ; WX 570 ; N less ; B 31 -8 539 514 ;
C 61 ; WX 570 ; N equal ; B 33 107 537 399 ;
C 62 ; WX 570 ; N greater ; B 31 -8 539 514 ;
C 63 ; WX 500 ; N question ; B 57 -13 445 689 ;
C 64 ; WX 930 ; N at ; B 108 -19 822 691 ;
C 65 ; WX 722 ; N A ; B 9 0 689 690 ;
C 66 ; WX 667 ; N B ; B 16 0 619 676 ;
C 67 ; WX 722 ; N C ; B 49 -19 687 691 ;
C 68 ; WX 722 ; N D ; B 14 0 690 676 ;
C 69 ; WX 667 ; N E ; B 16 0 641 676 ;
C 70 ; WX 611 ; N F ; B 16 0 583 676 ;
C 71 ; WX 778 ; N G ; B 37 -19 755 691 ;
C 72 ; WX 778 ; N H ; B 21 0 759 676 ;
C 73 ; WX 389 ; N I ; B 20 0 370 676 ;
C 74 ; WX 500 ; N J ; B 3 -96 479 676 ;
C 75 ; WX 778 ; N K ; B 30 0 769 676 ;
C 76 ; WX 667 ; N L ; B 19 0 638 676 ;
C 77 ; WX 944 ; N M ; B 14 0 921 676 ;
C 78 ; WX 722 ; N N ; B 16 -18 701 676 ;
C 79 ; WX 778 ; N O ; B 35 -19 743 691 ;
C 80 ; WX 611 ; N P ; B 16 0 600 676 ;
C 81 ; WX 778 ; N Q ; B 35 -176 743 691 ;
C 82 ; WX 722 ; N R ; B 26 0 715 676 ;
C 83 ; WX 556 ; N S ; B 35 -19 513 692 ;
C 84 ; WX 667 ; N T ; B 31 0 636 676 ;
C 85 ; WX 722 ; N U ; B 16 -19 701 676 ;
C 86 ; WX 722 ; N V ; B 16 -18 701 676 ;
C 87 ; WX 1000 ; N W ; B 19 -15 981 676 ;
C 88 ; WX 722 ; N X ; B 16 0 699 676 ;
C 89 ; WX 722 ; N Y ; B 15 0 699 676 ;
C 90 ; WX 667 ; N Z ; B 28 0 634 676 ;
C 91 ; WX 333 ; N bracketleft ; B 67 -149 301 678 ;
C 92 ; WX 278 ; N backslash ; B -25 -19 303 691 ;
C 93 ; WX 333 ; N bracketright ; B 32 -149 266 678 ;
C 94 ; WX 581 ; N asciicircum ; B 73 311 509 676 ;
C 95 ; WX 500 ; N underscore ; B 0 -125 500 -75 ;
C 96 ; WX 333 ; N quoteleft ; B 70 356 254 691 ;
C 97 ; WX 500 ; N a ; B 25 -14 488 473 ;
C 98 ; WX 556 ; N b ; B 17 -14 521 676 ;
C 99 ; WX 444 ; N c ; B 25 -14 430 473 ;
C 100 ; WX 556 ; N d ; B 25 -14 534 676 ;
C 101 ; WX 444 ; N e ; B 25 -14 426 473 ;
C 102 ; WX 333 ; N f ; B 14 0 389 691 ; L i fi ; L l fl ;
C 103 ; WX 500 ; N g ; B 28 -206 483 473 ;
C 104 ; WX 556 ; N h ; B 16 0 534 676 ;
C 105 ; WX 278 ; N i ; B 16 0 255 691 ;
C 106 ; WX 333 ; N j ; B -57 -203 263 691 ;
C 107 ; WX 556 ; N k ; B 22 0 543 676 ;
C 108 ; WX 278 ; N l ; B 16 0 255 676 ;
C 109 ; WX 833 ; N m ; B 16 0 814 473 ;
C 110 ; WX 556 ; N n ; B 21 0 539 473 ;
C 111 ; WX 500 ; N o ; B 25 -14 476 473 ;
C 112 ; WX 556 ; N p ; B 19 -205 524 473 ;
C 113 ; WX 556 ; N q ; B 34 -205 536 473 ;
C 114 ; WX 444 ; N r ; B 29 0 434 473 ;
C 115 ; WX 389 ; N s ; B 25 -14 361 473 ;
C 116 ; WX 333 ; N t ; B 20 -12 332 630 ;
C 117 ; WX 556 ; N u ; B 16 -14 537 461 ;
C 118 ; WX 500 ; N v ; B 21 -14 485 461 ;
C 119 ; WX 722 ; N w ; B 23 -14 707 461 ;
C 120 ; WX 500 ; N x ; B 12 0 484 461 ;
C 121 ; WX 500 ; N y ; B 16 -205 480 461 ;
C 122 ; WX 444 ; N z ; B 21 0 420 461 ;
C 123 ; WX 394 ; N braceleft ; B 22 -175 340 698 ;
C 124 ; WX 220 ; N bar ; B 66 -218 154 782 ;
C 125 ; WX 394 ; N braceright ; B 54 -175 372 698 ;
C 126 ; WX 520 ; N asciitilde ; B 29 173 491 333 ;
C 161 ; WX 333 ; N exclamdown ; B 82 -203 252 501 ;
C 162 ; WX 500 ; N cent ; B 53 -140 458 588 ;
C 163 ; WX 500 ; N sterling ; B 21 -14 477 684 ;
C 164 ; WX 167 ; N fraction ; B -168 -12 329 688 ;
C 165 ; WX 500 ; N yen ; B -64 0 547 676 ;
C 166 ; WX 500 ; N florin ; B 0 -155 498 706 ;
C 167 ; WX 500 ; N section ; B 57 -132 443 691 ;
C 168 ; WX 500 ; N currency ; B -26 61 526 613 ;
C 169 ; WX 278 ; N quotesingle ; B 75 404 204 691 ;
C 170 ; WX 500 ; N quotedblleft ; B 32 356 486 691 ;
C 171 ; WX 500 ; N guillemotleft ; B 23 36 473 415 ;
C 172 ; WX 333 ; N guilsinglleft ; B 51 36 305 415 ;
C 173 ; WX 333 ; N guilsinglright ; B 28 36 282 415 ;
C 174 ; WX 556 ; N fi ; B 14 0 536 691 ;
C 175 ; WX 556 ; N fl ; B 14 0 536 691 ;
C 177 ; WX 500 ; N endash ; B 0 181 500 271 ;
C 178 ; WX 500 ; N dagger ; B 47 -134 453 691 ;
C 179 ; WX 500 ; N daggerdbl ; B 45 -132 456 691 ;
C 180 ; WX 250 ; N periodcentered ; B 41 248 210 417 ;
C 182 ; WX 540 ; N paragraph ; B 0 -186 519 676 ;
C 183 ; WX 350 ; N bullet ; B 35 198 315 478 ;
C 184 ; WX 333 ; N quotesinglbase ; B 79 -180 263 155 ;
C 185 ; WX 500 ; N quotedblbase ; B 14 -180 468 155 ;
C 186 ; WX 500 ; N quotedblright ; B 14 356 468 691 ;
C 187 ; WX 500 ; N guillemotright ; B 27 36 477 415 ;
C 188 ; WX 1000 ; N ellipsis ; B 82 -13 917 156 ;
C 189 ; WX 1000 ; N perthousand ; B 7 -29 995 706 ;
C 191 ; WX 500 ; N questiondown ; B 55 -201 443 501 ;
C 193 ; WX 333 ; N grave ; B 8 528 246 713 ;
C 194 ; WX 333 ; N acute ; B 86 528 324 713 ;
C 195 ; WX 333 ; N circumflex ; B -2 528 335 704 ;
C 196 ; WX 333 ; N tilde ; B -16 547 349 674 ;
C 197 ; WX 333 ; N macron ; B 1 565 331 637 ;
C 198 ; WX 333 ; N breve ; B 15 528 318 691 ;
C 199 ; WX 333 ; N dotaccent ; B 103 536 258 691 ;
C 200 ; WX 333 ; N dieresis ; B -2 537 335 667 ;
C 202 ; WX 333 ; N ring ; B 60 527 273 740 ;
C 203 ; WX 333 ; N cedilla ; B 68 -218 294 0 ;
C 205 ; WX 333 ; N hungarumlaut ; B -13 528 425 713 ;
C 206 ; WX 333 ; N ogonek ; B 90 -193 319 24 ;
C 207 ; WX 333 ; N caron ; B -2 528 335 704 ;
C 208 ; WX 1000 ; N emdash ; B 0 181 1000 271 ;
C 225 ; WX 1000 ; N AE ; B 4 0 951 676 ;
C 227 ; WX 300 ; N ordfeminine ; B -1 397 301 688 ;
C 232 ; WX 667 ; N Lslash ; B 19 0 638 676 ;
C 233 ; WX 778 ; N Oslash ; B 35 -74 743 737 ;
C 234 ; WX 1000 ; N OE ; B 22 -5 981 684 ;
C 235 ; WX 330 ; N ordmasculine ; B 18 397 312 688 ;
C 241 ; WX 722 ; N ae ; B 33 -14 693 473 ;
C 245 ; WX 278 ; N dotlessi ; B 16 0 255 461 ;
C 248 ; WX 278 ; N lslash ; B -22 0 303 676 ;
C 249 ; WX 500 ; N oslash ; B 25 -92 476 549 ;
C 250 ; WX 722 ; N oe ; B 22 -14 696 473 ;
C 251 ; WX 556 ; N germandbls ; B 19 -12 517 691 ;
C -1 ; WX 389 ; N Idieresis ; B 20 0 370 877 ;
C -1 ; WX 444 ; N eacute ; B 25 -14 426 713 ;
C -1 ; WX 500 ; N abreve ; B 25 -14 488 691 ;
C -1 ; WX 556 ; N uhungarumlaut ; B 16 -14 557 713 ;
C -1 ; WX 444 ; N ecaron ; B 25 -14 426 704 ;
C -1 ; WX 722 ; N Ydieresis ; B 15 0 699 877 ;
C -1 ; WX 570 ; N divide ; B 33 -31 537 537 ;
C -1 ; WX 722 ; N Yacute ; B 15 0 699 923 ;
C -1 ; WX 722 ; N Acircumflex ; B 9 0 689 914 ;
C -1 ; WX 500 ; N aacute ; B 25 -14 488 713 ;
C -1 ; WX 722 ; N Ucircumflex ; B 16 -19 701 914 ;
C -1 ; WX 500 ; N yacute ; B 16 -205 480 713 ;
C -1 ; WX 389 ; N scommaaccent ; B 25 -218 361 473 ;
C -1 ; WX 444 ; N ecircumflex ; B 25 -14 426 704 ;
C -1 ; WX 722 ; N Uring ; B 16 -19 701 935 ;
C -1 ; WX 722 ; N Udieresis ; B 16 -19 701 877 ;
C -1 ; WX 500 ; N aogonek ; B 25 -193 504 473 ;
C -1 ; WX 722 ; N Uacute ; B 16 -19 701 923 ;
C -1 ; WX 556 ; N uogonek ; B 16 -193 539 461 ;
C -1 ; WX 667 ; N Edieresis ; B 16 0 641 877 ;
C -1 ; WX 722 ; N Dcroat ; B 6 0 690 676 ;
C -1 ; WX 250 ; N commaaccent ; B 47 -218 203 -50 ;
C -1 ; WX 747 ; N copyright ; B 26 -19 721 691 ;
C -1 ; WX 667 ; N Emacron ; B 16 0 641 847 ;
C -1 ; WX 444 ; N ccaron ; B 25 -14 430 704 ;
C -1 ; WX 500 ; N aring ; B 25 -14 488 740 ;
C -1 ; WX 722 ; N Ncommaaccent ; B 16 -188 701 676 ;
C -1 ; WX 278 ; N lacute ; B 16 0 297 923 ;
C -1 ; WX 500 ; N agrave ; B 25 -14 488 713 ;
C -1 ; WX 667 ; N Tcommaaccent ; B 31 -218 636 676 ;
C -1 ; WX 722 ; N Cacute ; B 49 -19 687 923 ;
C -1 ; WX 500 ; N atilde ; B 25 -14 488 674 ;
C -1 ; WX 667 ; N Edotaccent ; B 16 0 641 901 ;
C -1 ; WX 389 ; N scaron ; B 25 -14 363 704 ;
C -1 ; WX 389 ; N scedilla ; B 25 -218 361 473 ;
C -1 ; WX 278 ; N iacute ; B 16 0 289 713 ;
C -1 ; WX 494 ; N lozenge ; B 10 0 484 745 ;
C -1 ; WX 722 ; N Rcaron ; B 26 0 715 914 ;
C -1 ; WX 778 ; N Gcommaaccent ; B 37 -218 755 691 ;
C -1 ; WX 556 ; N ucircumflex ; B 16 -14 537 704 ;
C -1 ; WX 500 ; N acircumflex ; B 25 -14 488 704 ;
C -1 ; WX 722 ; N Amacron ; B 9 0 689 847 ;
C -1 ; WX 444 ; N rcaron ; B 29 0 434 704 ;
C -1 ; WX 444 ; N ccedilla ; B 25 -218 430 473 ;
C -1 ; WX 667 ; N Zdotaccent ; B 28 0 634 901 ;
C -1 ; WX 611 ; N Thorn ; B 16 0 600 676 ;
C -1 ; WX 778 ; N Omacron ; B 35 -19 743 847 ;
C -1 ; WX 722 ; N Racute ; B 26 0 715 923 ;
C -1 ; WX 556 ; N Sacute ; B 35 -19 513 923 ;
C -1 ; WX 672 ; N dcaron ; B 25 -14 681 682 ;
C -1 ; WX 722 ; N Umacron ; B 16 -19 701 847 ;
C -1 ; WX 556 ; N uring ; B 16 -14 537 740 ;
C -1 ; WX 300 ; N threesuperior ; B 3 268 297 688 ;
C -1 ; WX 778 ; N Ograve ; B 35 -19 743 923 ;
C -1 ; WX 722 ; N Agrave ; B 9 0 689 923 ;
C -1 ; WX 722 ; N Abreve ; B 9 0 689 901 ;
C -1 ; WX 570 ; N multiply ; B 48 16 522 490 ;
C -1 ; WX 556 ; N uacute ; B 16 -14 537 713 ;
C -1 ; WX 667 ; N Tcaron ; B 31 0 636 914 ;
C -1 ; WX 494 ; N partialdiff ; B 11 -21 494 750 ;
C -1 ; WX 500 ; N ydieresis ; B 16 -205 480 667 ;
C -1 ; WX 722 ; N Nacute ; B 16 -18 701 923 ;
C -1 ; WX 278 ; N icircumflex ; B -37 0 300 704 ;
C -1 ; WX 667 ; N Ecircumflex ; B 16 0 641 914 ;
C -1 ; WX 500 ; N adieresis ; B 25 -14 488 667 ;
C -1 ; WX 444 ; N edieresis ; B 25 -14 426 667 ;
C -1 ; WX 444 ; N cacute ; B 25 -14 430 713 ;
C -1 ; WX 556 ; N nacute ; B 21 0 539 713 ;
C -1 ; WX 556 ; N umacron ; B 16 -14 537 637 ;
C -1 ; WX 722 ; N Ncaron ; B 16 -18 701 914 ;
C -1 ; WX 389 ; N Iacute ; B 20 0 370 923 ;
C -1 ; WX 570 ; N plusminus ; B 33 0 537 506 ;
C -1 ; WX 220 ; N brokenbar ; B 66 -143 154 707 ;
C -1 ; WX 747 ; N registered ; B 26 -19 721 691 ;
C -1 ; WX 778 ; N Gbreve ; B 37 -19 755 901 ;
C -1 ; WX 389 ; N Idotaccent ; B 20 0 370 901 ;
C -1 ; WX 600 ; N summation ; B 14 -10 585 706 ;
C -1 ; WX 667 ; N Egrave ; B 16 0 641 923 ;
C -1 ; WX 444 ; N racute ; B 29 0 434 713 ;
C -1 ; WX 500 ; N omacron ; B 25 -14 476 637 ;
C -1 ; WX 667 ; N Zacute ; B 28 0 634 923 ;
C -1 ; WX 667 ; N Zcaron ; B 28 0 634 914 ;
C -1 ; WX 549 ; N greaterequal ; B 26 0 523 704 ;
C -1 ; WX 722 ; N Eth ; B 6 0 690 676 ;
C -1 ; WX 722 ; N Ccedilla ; B 49 -218 687 691 ;
C -1 ; WX 278 ; N lcommaaccent ; B 16 -218 255 676 ;
C -1 ; WX 416 ; N tcaron ; B 20 -12 425 815 ;
C -1 ; WX 444 ; N eogonek ; B 25 -193 426 473 ;
C -1 ; WX 722 ; N Uogonek ; B 16 -193 701 676 ;
C -1 ; WX 722 ; N Aacute ; B 9 0 689 923 ;
C -1 ; WX 722 ; N Adieresis ; B 9 0 689 877 ;
C -1 ; WX 444 ; N egrave ; B 25 -14 426 713 ;
C -1 ; WX 444 ; N zacute ; B 21 0 420 713 ;
C -1 ; WX 278 ; N iogonek ; B 16 -193 274 691 ;
C -1 ; WX 778 ; N Oacute ; B 35 -19 743 923 ;
C -1 ; WX 500 ; N oacute ; B 25 -14 476 713 ;
C -1 ; WX 500 ; N amacron ; B 25 -14 488 637 ;
C -1 ; WX 389 ; N sacute ; B 25 -14 361 713 ;
C -1 ; WX 278 ; N idieresis ; B -37 0 300 667 ;
C -1 ; WX 778 ; N Ocircumflex ; B 35 -19 743 914 ;
C -1 ; WX 722 ; N Ugrave ; B 16 -19 701 923 ;
C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;
C -1 ; WX 556 ; N thorn ; B 19 -205 524 676 ;
C -1 ; WX 300 ; N twosuperior ; B 0 275 300 688 ;
C -1 ; WX 778 ; N Odieresis ; B 35 -19 743 877 ;
C -1 ; WX 556 ; N mu ; B 33 -206 536 461 ;
C -1 ; WX 278 ; N igrave ; B -27 0 255 713 ;
C -1 ; WX 500 ; N ohungarumlaut ; B 25 -14 529 713 ;
C -1 ; WX 667 ; N Eogonek ; B 16 -193 644 676 ;
C -1 ; WX 556 ; N dcroat ; B 25 -14 534 676 ;
C -1 ; WX 750 ; N threequarters ; B 23 -12 733 688 ;
C -1 ; WX 556 ; N Scedilla ; B 35 -218 513 692 ;
C -1 ; WX 394 ; N lcaron ; B 16 0 412 682 ;
C -1 ; WX 778 ; N Kcommaaccent ; B 30 -218 769 676 ;
C -1 ; WX 667 ; N Lacute ; B 19 0 638 923 ;
C -1 ; WX 1000 ; N trademark ; B 24 271 977 676 ;
C -1 ; WX 444 ; N edotaccent ; B 25 -14 426 691 ;
C -1 ; WX 389 ; N Igrave ; B 20 0 370 923 ;
C -1 ; WX 389 ; N Imacron ; B 20 0 370 847 ;
C -1 ; WX 667 ; N Lcaron ; B 19 0 652 682 ;
C -1 ; WX 750 ; N onehalf ; B -7 -12 775 688 ;
C -1 ; WX 549 ; N lessequal ; B 29 0 526 704 ;
C -1 ; WX 500 ; N ocircumflex ; B 25 -14 476 704 ;
C -1 ; WX 556 ; N ntilde ; B 21 0 539 674 ;
C -1 ; WX 722 ; N Uhungarumlaut ; B 16 -19 701 923 ;
C -1 ; WX 667 ; N Eacute ; B 16 0 641 923 ;
C -1 ; WX 444 ; N emacron ; B 25 -14 426 637 ;
C -1 ; WX 500 ; N gbreve ; B 28 -206 483 691 ;
C -1 ; WX 750 ; N onequarter ; B 28 -12 743 688 ;
C -1 ; WX 556 ; N Scaron ; B 35 -19 513 914 ;
C -1 ; WX 556 ; N Scommaaccent ; B 35 -218 513 692 ;
C -1 ; WX 778 ; N Ohungarumlaut ; B 35 -19 743 923 ;
C -1 ; WX 400 ; N degree ; B 57 402 343 688 ;
C -1 ; WX 500 ; N ograve ; B 25 -14 476 713 ;
C -1 ; WX 722 ; N Ccaron ; B 49 -19 687 914 ;
C -1 ; WX 556 ; N ugrave ; B 16 -14 537 713 ;
C -1 ; WX 549 ; N radical ; B 10 -46 512 850 ;
C -1 ; WX 722 ; N Dcaron ; B 14 0 690 914 ;
C -1 ; WX 444 ; N rcommaaccent ; B 29 -218 434 473 ;
C -1 ; WX 722 ; N Ntilde ; B 16 -18 701 884 ;
C -1 ; WX 500 ; N otilde ; B 25 -14 476 674 ;
C -1 ; WX 722 ; N Rcommaaccent ; B 26 -218 715 676 ;
C -1 ; WX 667 ; N Lcommaaccent ; B 19 -218 638 676 ;
C -1 ; WX 722 ; N Atilde ; B 9 0 689 884 ;
C -1 ; WX 722 ; N Aogonek ; B 9 -193 699 690 ;
C -1 ; WX 722 ; N Aring ; B 9 0 689 935 ;
C -1 ; WX 778 ; N Otilde ; B 35 -19 743 884 ;
C -1 ; WX 444 ; N zdotaccent ; B 21 0 420 691 ;
C -1 ; WX 667 ; N Ecaron ; B 16 0 641 914 ;
C -1 ; WX 389 ; N Iogonek ; B 20 -193 370 676 ;
C -1 ; WX 556 ; N kcommaaccent ; B 22 -218 543 676 ;
C -1 ; WX 570 ; N minus ; B 33 209 537 297 ;
C -1 ; WX 389 ; N Icircumflex ; B 20 0 370 914 ;
C -1 ; WX 556 ; N ncaron ; B 21 0 539 704 ;
C -1 ; WX 333 ; N tcommaaccent ; B 20 -218 332 630 ;
C -1 ; WX 570 ; N logicalnot ; B 33 108 537 399 ;
C -1 ; WX 500 ; N odieresis ; B 25 -14 476 667 ;
C -1 ; WX 556 ; N udieresis ; B 16 -14 537 667 ;
C -1 ; WX 549 ; N notequal ; B 15 -49 540 570 ;
C -1 ; WX 500 ; N gcommaaccent ; B 28 -206 483 829 ;
C -1 ; WX 500 ; N eth ; B 25 -14 476 691 ;
C -1 ; WX 444 ; N zcaron ; B 21 0 420 704 ;
C -1 ; WX 556 ; N ncommaaccent ; B 21 -218 539 473 ;
C -1 ; WX 300 ; N onesuperior ; B 28 275 273 688 ;
C -1 ; WX 278 ; N imacron ; B -8 0 272 637 ;
C -1 ; WX 500 ; N Euro ; B 0 0 0 0 ;
EndCharMetrics
StartKernData
StartKernPairs 2242
KPX A C -55
KPX A Cacute -55
KPX A Ccaron -55
KPX A Ccedilla -55
KPX A G -55
KPX A Gbreve -55
KPX A Gcommaaccent -55
KPX A O -45
KPX A Oacute -45
KPX A Ocircumflex -45
KPX A Odieresis -45
KPX A Ograve -45
KPX A Ohungarumlaut -45
KPX A Omacron -45
KPX A Oslash -45
KPX A Otilde -45
KPX A Q -45
KPX A T -95
KPX A Tcaron -95
KPX A Tcommaaccent -95
KPX A U -50
KPX A Uacute -50
KPX A Ucircumflex -50
KPX A Udieresis -50
KPX A Ugrave -50
KPX A Uhungarumlaut -50
KPX A Umacron -50
KPX A Uogonek -50
KPX A Uring -50
KPX A V -145
KPX A W -130
KPX A Y -100
KPX A Yacute -100
KPX A Ydieresis -100
KPX A p -25
KPX A quoteright -74
KPX A u -50
KPX A uacute -50
KPX A ucircumflex -50
KPX A udieresis -50
KPX A ugrave -50
KPX A uhungarumlaut -50
KPX A umacron -50
KPX A uogonek -50
KPX A uring -50
KPX A v -100
KPX A w -90
KPX A y -74
KPX A yacute -74
KPX A ydieresis -74
KPX Aacute C -55
KPX Aacute Cacute -55
KPX Aacute Ccaron -55
KPX Aacute Ccedilla -55
KPX Aacute G -55
KPX Aacute Gbreve -55
KPX Aacute Gcommaaccent -55
KPX Aacute O -45
KPX Aacute Oacute -45
KPX Aacute Ocircumflex -45
KPX Aacute Odieresis -45
KPX Aacute Ograve -45
KPX Aacute Ohungarumlaut -45
KPX Aacute Omacron -45
KPX Aacute Oslash -45
KPX Aacute Otilde -45
KPX Aacute Q -45
KPX Aacute T -95
KPX Aacute Tcaron -95
KPX Aacute Tcommaaccent -95
KPX Aacute U -50
KPX Aacute Uacute -50
KPX Aacute Ucircumflex -50
KPX Aacute Udieresis -50
KPX Aacute Ugrave -50
KPX Aacute Uhungarumlaut -50
KPX Aacute Umacron -50
KPX Aacute Uogonek -50
KPX Aacute Uring -50
KPX Aacute V -145
KPX Aacute W -130
KPX Aacute Y -100
KPX Aacute Yacute -100
KPX Aacute Ydieresis -100
KPX Aacute p -25
KPX Aacute quoteright -74
KPX Aacute u -50
KPX Aacute uacute -50
KPX Aacute ucircumflex -50
KPX Aacute udieresis -50
KPX Aacute ugrave -50
KPX Aacute uhungarumlaut -50
KPX Aacute umacron -50
KPX Aacute uogonek -50
KPX Aacute uring -50
KPX Aacute v -100
KPX Aacute w -90
KPX Aacute y -74
KPX Aacute yacute -74
KPX Aacute ydieresis -74
KPX Abreve C -55
KPX Abreve Cacute -55
KPX Abreve Ccaron -55
KPX Abreve Ccedilla -55
KPX Abreve G -55
KPX Abreve Gbreve -55
KPX Abreve Gcommaaccent -55
KPX Abreve O -45
KPX Abreve Oacute -45
KPX Abreve Ocircumflex -45
KPX Abreve Odieresis -45
KPX Abreve Ograve -45
KPX Abreve Ohungarumlaut -45
KPX Abreve Omacron -45
KPX Abreve Oslash -45
KPX Abreve Otilde -45
KPX Abreve Q -45
KPX Abreve T -95
KPX Abreve Tcaron -95
KPX Abreve Tcommaaccent -95
KPX Abreve U -50
KPX Abreve Uacute -50
KPX Abreve Ucircumflex -50
KPX Abreve Udieresis -50
KPX Abreve Ugrave -50
KPX Abreve Uhungarumlaut -50
KPX Abreve Umacron -50
KPX Abreve Uogonek -50
KPX Abreve Uring -50
KPX Abreve V -145
KPX Abreve W -130
KPX Abreve Y -100
KPX Abreve Yacute -100
KPX Abreve Ydieresis -100
KPX Abreve p -25
KPX Abreve quoteright -74
KPX Abreve u -50
KPX Abreve uacute -50
KPX Abreve ucircumflex -50
KPX Abreve udieresis -50
KPX Abreve ugrave -50
KPX Abreve uhungarumlaut -50
KPX Abreve umacron -50
KPX Abreve uogonek -50
KPX Abreve uring -50
KPX Abreve v -100
KPX Abreve w -90
KPX Abreve y -74
KPX Abreve yacute -74
KPX Abreve ydieresis -74
KPX Acircumflex C -55
KPX Acircumflex Cacute -55
KPX Acircumflex Ccaron -55
KPX Acircumflex Ccedilla -55
KPX Acircumflex G -55
KPX Acircumflex Gbreve -55
KPX Acircumflex Gcommaaccent -55
KPX Acircumflex O -45
KPX Acircumflex Oacute -45
KPX Acircumflex Ocircumflex -45
KPX Acircumflex Odieresis -45
KPX Acircumflex Ograve -45
KPX Acircumflex Ohungarumlaut -45
KPX Acircumflex Omacron -45
KPX Acircumflex Oslash -45
KPX Acircumflex Otilde -45
KPX Acircumflex Q -45
KPX Acircumflex T -95
KPX Acircumflex Tcaron -95
KPX Acircumflex Tcommaaccent -95
KPX Acircumflex U -50
KPX Acircumflex Uacute -50
KPX Acircumflex Ucircumflex -50
KPX Acircumflex Udieresis -50
KPX Acircumflex Ugrave -50
KPX Acircumflex Uhungarumlaut -50
KPX Acircumflex Umacron -50
KPX Acircumflex Uogonek -50
KPX Acircumflex Uring -50
KPX Acircumflex V -145
KPX Acircumflex W -130
KPX Acircumflex Y -100
KPX Acircumflex Yacute -100
KPX Acircumflex Ydieresis -100
KPX Acircumflex p -25
KPX Acircumflex quoteright -74
KPX Acircumflex u -50
KPX Acircumflex uacute -50
KPX Acircumflex ucircumflex -50
KPX Acircumflex udieresis -50
KPX Acircumflex ugrave -50
KPX Acircumflex uhungarumlaut -50
KPX Acircumflex umacron -50
KPX Acircumflex uogonek -50
KPX Acircumflex uring -50
KPX Acircumflex v -100
KPX Acircumflex w -90
KPX Acircumflex y -74
KPX Acircumflex yacute -74
KPX Acircumflex ydieresis -74
KPX Adieresis C -55
KPX Adieresis Cacute -55
KPX Adieresis Ccaron -55
KPX Adieresis Ccedilla -55
KPX Adieresis G -55
KPX Adieresis Gbreve -55
KPX Adieresis Gcommaaccent -55
KPX Adieresis O -45
KPX Adieresis Oacute -45
KPX Adieresis Ocircumflex -45
KPX Adieresis Odieresis -45
KPX Adieresis Ograve -45
KPX Adieresis Ohungarumlaut -45
KPX Adieresis Omacron -45
KPX Adieresis Oslash -45
KPX Adieresis Otilde -45
KPX Adieresis Q -45
KPX Adieresis T -95
KPX Adieresis Tcaron -95
KPX Adieresis Tcommaaccent -95
KPX Adieresis U -50
KPX Adieresis Uacute -50
KPX Adieresis Ucircumflex -50
KPX Adieresis Udieresis -50
KPX Adieresis Ugrave -50
KPX Adieresis Uhungarumlaut -50
KPX Adieresis Umacron -50
KPX Adieresis Uogonek -50
KPX Adieresis Uring -50
KPX Adieresis V -145
KPX Adieresis W -130
KPX Adieresis Y -100
KPX Adieresis Yacute -100
KPX Adieresis Ydieresis -100
KPX Adieresis p -25
KPX Adieresis quoteright -74
KPX Adieresis u -50
KPX Adieresis uacute -50
KPX Adieresis ucircumflex -50
KPX Adieresis udieresis -50
KPX Adieresis ugrave -50
KPX Adieresis uhungarumlaut -50
KPX Adieresis umacron -50
KPX Adieresis uogonek -50
KPX Adieresis uring -50
KPX Adieresis v -100
KPX Adieresis w -90
KPX Adieresis y -74
KPX Adieresis yacute -74
KPX Adieresis ydieresis -74
KPX Agrave C -55
KPX Agrave Cacute -55
KPX Agrave Ccaron -55
KPX Agrave Ccedilla -55
KPX Agrave G -55
KPX Agrave Gbreve -55
KPX Agrave Gcommaaccent -55
KPX Agrave O -45
KPX Agrave Oacute -45
KPX Agrave Ocircumflex -45
KPX Agrave Odieresis -45
KPX Agrave Ograve -45
KPX Agrave Ohungarumlaut -45
KPX Agrave Omacron -45
KPX Agrave Oslash -45
KPX Agrave Otilde -45
KPX Agrave Q -45
KPX Agrave T -95
KPX Agrave Tcaron -95
KPX Agrave Tcommaaccent -95
KPX Agrave U -50
KPX Agrave Uacute -50
KPX Agrave Ucircumflex -50
KPX Agrave Udieresis -50
KPX Agrave Ugrave -50
KPX Agrave Uhungarumlaut -50
KPX Agrave Umacron -50
KPX Agrave Uogonek -50
KPX Agrave Uring -50
KPX Agrave V -145
KPX Agrave W -130
KPX Agrave Y -100
KPX Agrave Yacute -100
KPX Agrave Ydieresis -100
KPX Agrave p -25
KPX Agrave quoteright -74
KPX Agrave u -50
KPX Agrave uacute -50
KPX Agrave ucircumflex -50
KPX Agrave udieresis -50
KPX Agrave ugrave -50
KPX Agrave uhungarumlaut -50
KPX Agrave umacron -50
KPX Agrave uogonek -50
KPX Agrave uring -50
KPX Agrave v -100
KPX Agrave w -90
KPX Agrave y -74
KPX Agrave yacute -74
KPX Agrave ydieresis -74
KPX Amacron C -55
KPX Amacron Cacute -55
KPX Amacron Ccaron -55
KPX Amacron Ccedilla -55
KPX Amacron G -55
KPX Amacron Gbreve -55
KPX Amacron Gcommaaccent -55
KPX Amacron O -45
KPX Amacron Oacute -45
KPX Amacron Ocircumflex -45
KPX Amacron Odieresis -45
KPX Amacron Ograve -45
KPX Amacron Ohungarumlaut -45
KPX Amacron Omacron -45
KPX Amacron Oslash -45
KPX Amacron Otilde -45
KPX Amacron Q -45
KPX Amacron T -95
KPX Amacron Tcaron -95
KPX Amacron Tcommaaccent -95
KPX Amacron U -50
KPX Amacron Uacute -50
KPX Amacron Ucircumflex -50
KPX Amacron Udieresis -50
KPX Amacron Ugrave -50
KPX Amacron Uhungarumlaut -50
KPX Amacron Umacron -50
KPX Amacron Uogonek -50
KPX Amacron Uring -50
KPX Amacron V -145
KPX Amacron W -130
KPX Amacron Y -100
KPX Amacron Yacute -100
KPX Amacron Ydieresis -100
KPX Amacron p -25
KPX Amacron quoteright -74
KPX Amacron u -50
KPX Amacron uacute -50
KPX Amacron ucircumflex -50
KPX Amacron udieresis -50
KPX Amacron ugrave -50
KPX Amacron uhungarumlaut -50
KPX Amacron umacron -50
KPX Amacron uogonek -50
KPX Amacron uring -50
KPX Amacron v -100
KPX Amacron w -90
KPX Amacron y -74
KPX Amacron yacute -74
KPX Amacron ydieresis -74
KPX Aogonek C -55
KPX Aogonek Cacute -55
KPX Aogonek Ccaron -55
KPX Aogonek Ccedilla -55
KPX Aogonek G -55
KPX Aogonek Gbreve -55
KPX Aogonek Gcommaaccent -55
KPX Aogonek O -45
KPX Aogonek Oacute -45
KPX Aogonek Ocircumflex -45
KPX Aogonek Odieresis -45
KPX Aogonek Ograve -45
KPX Aogonek Ohungarumlaut -45
KPX Aogonek Omacron -45
KPX Aogonek Oslash -45
KPX Aogonek Otilde -45
KPX Aogonek Q -45
KPX Aogonek T -95
KPX Aogonek Tcaron -95
KPX Aogonek Tcommaaccent -95
KPX Aogonek U -50
KPX Aogonek Uacute -50
KPX Aogonek Ucircumflex -50
KPX Aogonek Udieresis -50
KPX Aogonek Ugrave -50
KPX Aogonek Uhungarumlaut -50
KPX Aogonek Umacron -50
KPX Aogonek Uogonek -50
KPX Aogonek Uring -50
KPX Aogonek V -145
KPX Aogonek W -130
KPX Aogonek Y -100
KPX Aogonek Yacute -100
KPX Aogonek Ydieresis -100
KPX Aogonek p -25
KPX Aogonek quoteright -74
KPX Aogonek u -50
KPX Aogonek uacute -50
KPX Aogonek ucircumflex -50
KPX Aogonek udieresis -50
KPX Aogonek ugrave -50
KPX Aogonek uhungarumlaut -50
KPX Aogonek umacron -50
KPX Aogonek uogonek -50
KPX Aogonek uring -50
KPX Aogonek v -100
KPX Aogonek w -90
KPX Aogonek y -34
KPX Aogonek yacute -34
KPX Aogonek ydieresis -34
KPX Aring C -55
KPX Aring Cacute -55
KPX Aring Ccaron -55
KPX Aring Ccedilla -55
KPX Aring G -55
KPX Aring Gbreve -55
KPX Aring Gcommaaccent -55
KPX Aring O -45
KPX Aring Oacute -45
KPX Aring Ocircumflex -45
KPX Aring Odieresis -45
KPX Aring Ograve -45
KPX Aring Ohungarumlaut -45
KPX Aring Omacron -45
KPX Aring Oslash -45
KPX Aring Otilde -45
KPX Aring Q -45
KPX Aring T -95
KPX Aring Tcaron -95
KPX Aring Tcommaaccent -95
KPX Aring U -50
KPX Aring Uacute -50
KPX Aring Ucircumflex -50
KPX Aring Udieresis -50
KPX Aring Ugrave -50
KPX Aring Uhungarumlaut -50
KPX Aring Umacron -50
KPX Aring Uogonek -50
KPX Aring Uring -50
KPX Aring V -145
KPX Aring W -130
KPX Aring Y -100
KPX Aring Yacute -100
KPX Aring Ydieresis -100
KPX Aring p -25
KPX Aring quoteright -74
KPX Aring u -50
KPX Aring uacute -50
KPX Aring ucircumflex -50
KPX Aring udieresis -50
KPX Aring ugrave -50
KPX Aring uhungarumlaut -50
KPX Aring umacron -50
KPX Aring uogonek -50
KPX Aring uring -50
KPX Aring v -100
KPX Aring w -90
KPX Aring y -74
KPX Aring yacute -74
KPX Aring ydieresis -74
KPX Atilde C -55
KPX Atilde Cacute -55
KPX Atilde Ccaron -55
KPX Atilde Ccedilla -55
KPX Atilde G -55
KPX Atilde Gbreve -55
KPX Atilde Gcommaaccent -55
KPX Atilde O -45
KPX Atilde Oacute -45
KPX Atilde Ocircumflex -45
KPX Atilde Odieresis -45
KPX Atilde Ograve -45
KPX Atilde Ohungarumlaut -45
KPX Atilde Omacron -45
KPX Atilde Oslash -45
KPX Atilde Otilde -45
KPX Atilde Q -45
KPX Atilde T -95
KPX Atilde Tcaron -95
KPX Atilde Tcommaaccent -95
KPX Atilde U -50
KPX Atilde Uacute -50
KPX Atilde Ucircumflex -50
KPX Atilde Udieresis -50
KPX Atilde Ugrave -50
KPX Atilde Uhungarumlaut -50
KPX Atilde Umacron -50
KPX Atilde Uogonek -50
KPX Atilde Uring -50
KPX Atilde V -145
KPX Atilde W -130
KPX Atilde Y -100
KPX Atilde Yacute -100
KPX Atilde Ydieresis -100
KPX Atilde p -25
KPX Atilde quoteright -74
KPX Atilde u -50
KPX Atilde uacute -50
KPX Atilde ucircumflex -50
KPX Atilde udieresis -50
KPX Atilde ugrave -50
KPX Atilde uhungarumlaut -50
KPX Atilde umacron -50
KPX Atilde uogonek -50
KPX Atilde uring -50
KPX Atilde v -100
KPX Atilde w -90
KPX Atilde y -74
KPX Atilde yacute -74
KPX Atilde ydieresis -74
KPX B A -30
KPX B Aacute -30
KPX B Abreve -30
KPX B Acircumflex -30
KPX B Adieresis -30
KPX B Agrave -30
KPX B Amacron -30
KPX B Aogonek -30
KPX B Aring -30
KPX B Atilde -30
KPX B U -10
KPX B Uacute -10
KPX B Ucircumflex -10
KPX B Udieresis -10
KPX B Ugrave -10
KPX B Uhungarumlaut -10
KPX B Umacron -10
KPX B Uogonek -10
KPX B Uring -10
KPX D A -35
KPX D Aacute -35
KPX D Abreve -35
KPX D Acircumflex -35
KPX D Adieresis -35
KPX D Agrave -35
KPX D Amacron -35
KPX D Aogonek -35
KPX D Aring -35
KPX D Atilde -35
KPX D V -40
KPX D W -40
KPX D Y -40
KPX D Yacute -40
KPX D Ydieresis -40
KPX D period -20
KPX Dcaron A -35
KPX Dcaron Aacute -35
KPX Dcaron Abreve -35
KPX Dcaron Acircumflex -35
KPX Dcaron Adieresis -35
KPX Dcaron Agrave -35
KPX Dcaron Amacron -35
KPX Dcaron Aogonek -35
KPX Dcaron Aring -35
KPX Dcaron Atilde -35
KPX Dcaron V -40
KPX Dcaron W -40
KPX Dcaron Y -40
KPX Dcaron Yacute -40
KPX Dcaron Ydieresis -40
KPX Dcaron period -20
KPX Dcroat A -35
KPX Dcroat Aacute -35
KPX Dcroat Abreve -35
KPX Dcroat Acircumflex -35
KPX Dcroat Adieresis -35
KPX Dcroat Agrave -35
KPX Dcroat Amacron -35
KPX Dcroat Aogonek -35
KPX Dcroat Aring -35
KPX Dcroat Atilde -35
KPX Dcroat V -40
KPX Dcroat W -40
KPX Dcroat Y -40
KPX Dcroat Yacute -40
KPX Dcroat Ydieresis -40
KPX Dcroat period -20
KPX F A -90
KPX F Aacute -90
KPX F Abreve -90
KPX F Acircumflex -90
KPX F Adieresis -90
KPX F Agrave -90
KPX F Amacron -90
KPX F Aogonek -90
KPX F Aring -90
KPX F Atilde -90
KPX F a -25
KPX F aacute -25
KPX F abreve -25
KPX F acircumflex -25
KPX F adieresis -25
KPX F agrave -25
KPX F amacron -25
KPX F aogonek -25
KPX F aring -25
KPX F atilde -25
KPX F comma -92
KPX F e -25
KPX F eacute -25
KPX F ecaron -25
KPX F ecircumflex -25
KPX F edieresis -25
KPX F edotaccent -25
KPX F egrave -25
KPX F emacron -25
KPX F eogonek -25
KPX F o -25
KPX F oacute -25
KPX F ocircumflex -25
KPX F odieresis -25
KPX F ograve -25
KPX F ohungarumlaut -25
KPX F omacron -25
KPX F oslash -25
KPX F otilde -25
KPX F period -110
KPX J A -30
KPX J Aacute -30
KPX J Abreve -30
KPX J Acircumflex -30
KPX J Adieresis -30
KPX J Agrave -30
KPX J Amacron -30
KPX J Aogonek -30
KPX J Aring -30
KPX J Atilde -30
KPX J a -15
KPX J aacute -15
KPX J abreve -15
KPX J acircumflex -15
KPX J adieresis -15
KPX J agrave -15
KPX J amacron -15
KPX J aogonek -15
KPX J aring -15
KPX J atilde -15
KPX J e -15
KPX J eacute -15
KPX J ecaron -15
KPX J ecircumflex -15
KPX J edieresis -15
KPX J edotaccent -15
KPX J egrave -15
KPX J emacron -15
KPX J eogonek -15
KPX J o -15
KPX J oacute -15
KPX J ocircumflex -15
KPX J odieresis -15
KPX J ograve -15
KPX J ohungarumlaut -15
KPX J omacron -15
KPX J oslash -15
KPX J otilde -15
KPX J period -20
KPX J u -15
KPX J uacute -15
KPX J ucircumflex -15
KPX J udieresis -15
KPX J ugrave -15
KPX J uhungarumlaut -15
KPX J umacron -15
KPX J uogonek -15
KPX J uring -15
KPX K O -30
KPX K Oacute -30
KPX K Ocircumflex -30
KPX K Odieresis -30
KPX K Ograve -30
KPX K Ohungarumlaut -30
KPX K Omacron -30
KPX K Oslash -30
KPX K Otilde -30
KPX K e -25
KPX K eacute -25
KPX K ecaron -25
KPX K ecircumflex -25
KPX K edieresis -25
KPX K edotaccent -25
KPX K egrave -25
KPX K emacron -25
KPX K eogonek -25
KPX K o -25
KPX K oacute -25
KPX K ocircumflex -25
KPX K odieresis -25
KPX K ograve -25
KPX K ohungarumlaut -25
KPX K omacron -25
KPX K oslash -25
KPX K otilde -25
KPX K u -15
KPX K uacute -15
KPX K ucircumflex -15
KPX K udieresis -15
KPX K ugrave -15
KPX K uhungarumlaut -15
KPX K umacron -15
KPX K uogonek -15
KPX K uring -15
KPX K y -45
KPX K yacute -45
KPX K ydieresis -45
KPX Kcommaaccent O -30
KPX Kcommaaccent Oacute -30
KPX Kcommaaccent Ocircumflex -30
KPX Kcommaaccent Odieresis -30
KPX Kcommaaccent Ograve -30
KPX Kcommaaccent Ohungarumlaut -30
KPX Kcommaaccent Omacron -30
KPX Kcommaaccent Oslash -30
KPX Kcommaaccent Otilde -30
KPX Kcommaaccent e -25
KPX Kcommaaccent eacute -25
KPX Kcommaaccent ecaron -25
KPX Kcommaaccent ecircumflex -25
KPX Kcommaaccent edieresis -25
KPX Kcommaaccent edotaccent -25
KPX Kcommaaccent egrave -25
KPX Kcommaaccent emacron -25
KPX Kcommaaccent eogonek -25
KPX Kcommaaccent o -25
KPX Kcommaaccent oacute -25
KPX Kcommaaccent ocircumflex -25
KPX Kcommaaccent odieresis -25
KPX Kcommaaccent ograve -25
KPX Kcommaaccent ohungarumlaut -25
KPX Kcommaaccent omacron -25
KPX Kcommaaccent oslash -25
KPX Kcommaaccent otilde -25
KPX Kcommaaccent u -15
KPX Kcommaaccent uacute -15
KPX Kcommaaccent ucircumflex -15
KPX Kcommaaccent udieresis -15
KPX Kcommaaccent ugrave -15
KPX Kcommaaccent uhungarumlaut -15
KPX Kcommaaccent umacron -15
KPX Kcommaaccent uogonek -15
KPX Kcommaaccent uring -15
KPX Kcommaaccent y -45
KPX Kcommaaccent yacute -45
KPX Kcommaaccent ydieresis -45
KPX L T -92
KPX L Tcaron -92
KPX L Tcommaaccent -92
KPX L V -92
KPX L W -92
KPX L Y -92
KPX L Yacute -92
KPX L Ydieresis -92
KPX L quotedblright -20
KPX L quoteright -110
KPX L y -55
KPX L yacute -55
KPX L ydieresis -55
KPX Lacute T -92
KPX Lacute Tcaron -92
KPX Lacute Tcommaaccent -92
KPX Lacute V -92
KPX Lacute W -92
KPX Lacute Y -92
KPX Lacute Yacute -92
KPX Lacute Ydieresis -92
KPX Lacute quotedblright -20
KPX Lacute quoteright -110
KPX Lacute y -55
KPX Lacute yacute -55
KPX Lacute ydieresis -55
KPX Lcommaaccent T -92
KPX Lcommaaccent Tcaron -92
KPX Lcommaaccent Tcommaaccent -92
KPX Lcommaaccent V -92
KPX Lcommaaccent W -92
KPX Lcommaaccent Y -92
KPX Lcommaaccent Yacute -92
KPX Lcommaaccent Ydieresis -92
KPX Lcommaaccent quotedblright -20
KPX Lcommaaccent quoteright -110
KPX Lcommaaccent y -55
KPX Lcommaaccent yacute -55
KPX Lcommaaccent ydieresis -55
KPX Lslash T -92
KPX Lslash Tcaron -92
KPX Lslash Tcommaaccent -92
KPX Lslash V -92
KPX Lslash W -92
KPX Lslash Y -92
KPX Lslash Yacute -92
KPX Lslash Ydieresis -92
KPX Lslash quotedblright -20
KPX Lslash quoteright -110
KPX Lslash y -55
KPX Lslash yacute -55
KPX Lslash ydieresis -55
KPX N A -20
KPX N Aacute -20
KPX N Abreve -20
KPX N Acircumflex -20
KPX N Adieresis -20
KPX N Agrave -20
KPX N Amacron -20
KPX N Aogonek -20
KPX N Aring -20
KPX N Atilde -20
KPX Nacute A -20
KPX Nacute Aacute -20
KPX Nacute Abreve -20
KPX Nacute Acircumflex -20
KPX Nacute Adieresis -20
KPX Nacute Agrave -20
KPX Nacute Amacron -20
KPX Nacute Aogonek -20
KPX Nacute Aring -20
KPX Nacute Atilde -20
KPX Ncaron A -20
KPX Ncaron Aacute -20
KPX Ncaron Abreve -20
KPX Ncaron Acircumflex -20
KPX Ncaron Adieresis -20
KPX Ncaron Agrave -20
KPX Ncaron Amacron -20
KPX Ncaron Aogonek -20
KPX Ncaron Aring -20
KPX Ncaron Atilde -20
KPX Ncommaaccent A -20
KPX Ncommaaccent Aacute -20
KPX Ncommaaccent Abreve -20
KPX Ncommaaccent Acircumflex -20
KPX Ncommaaccent Adieresis -20
KPX Ncommaaccent Agrave -20
KPX Ncommaaccent Amacron -20
KPX Ncommaaccent Aogonek -20
KPX Ncommaaccent Aring -20
KPX Ncommaaccent Atilde -20
KPX Ntilde A -20
KPX Ntilde Aacute -20
KPX Ntilde Abreve -20
KPX Ntilde Acircumflex -20
KPX Ntilde Adieresis -20
KPX Ntilde Agrave -20
KPX Ntilde Amacron -20
KPX Ntilde Aogonek -20
KPX Ntilde Aring -20
KPX Ntilde Atilde -20
KPX O A -40
KPX O Aacute -40
KPX O Abreve -40
KPX O Acircumflex -40
KPX O Adieresis -40
KPX O Agrave -40
KPX O Amacron -40
KPX O Aogonek -40
KPX O Aring -40
KPX O Atilde -40
KPX O T -40
KPX O Tcaron -40
KPX O Tcommaaccent -40
KPX O V -50
KPX O W -50
KPX O X -40
KPX O Y -50
KPX O Yacute -50
KPX O Ydieresis -50
KPX Oacute A -40
KPX Oacute Aacute -40
KPX Oacute Abreve -40
KPX Oacute Acircumflex -40
KPX Oacute Adieresis -40
KPX Oacute Agrave -40
KPX Oacute Amacron -40
KPX Oacute Aogonek -40
KPX Oacute Aring -40
KPX Oacute Atilde -40
KPX Oacute T -40
KPX Oacute Tcaron -40
KPX Oacute Tcommaaccent -40
KPX Oacute V -50
KPX Oacute W -50
KPX Oacute X -40
KPX Oacute Y -50
KPX Oacute Yacute -50
KPX Oacute Ydieresis -50
KPX Ocircumflex A -40
KPX Ocircumflex Aacute -40
KPX Ocircumflex Abreve -40
KPX Ocircumflex Acircumflex -40
KPX Ocircumflex Adieresis -40
KPX Ocircumflex Agrave -40
KPX Ocircumflex Amacron -40
KPX Ocircumflex Aogonek -40
KPX Ocircumflex Aring -40
KPX Ocircumflex Atilde -40
KPX Ocircumflex T -40
KPX Ocircumflex Tcaron -40
KPX Ocircumflex Tcommaaccent -40
KPX Ocircumflex V -50
KPX Ocircumflex W -50
KPX Ocircumflex X -40
KPX Ocircumflex Y -50
KPX Ocircumflex Yacute -50
KPX Ocircumflex Ydieresis -50
KPX Odieresis A -40
KPX Odieresis Aacute -40
KPX Odieresis Abreve -40
KPX Odieresis Acircumflex -40
KPX Odieresis Adieresis -40
KPX Odieresis Agrave -40
KPX Odieresis Amacron -40
KPX Odieresis Aogonek -40
KPX Odieresis Aring -40
KPX Odieresis Atilde -40
KPX Odieresis T -40
KPX Odieresis Tcaron -40
KPX Odieresis Tcommaaccent -40
KPX Odieresis V -50
KPX Odieresis W -50
KPX Odieresis X -40
KPX Odieresis Y -50
KPX Odieresis Yacute -50
KPX Odieresis Ydieresis -50
KPX Ograve A -40
KPX Ograve Aacute -40
KPX Ograve Abreve -40
KPX Ograve Acircumflex -40
KPX Ograve Adieresis -40
KPX Ograve Agrave -40
KPX Ograve Amacron -40
KPX Ograve Aogonek -40
KPX Ograve Aring -40
KPX Ograve Atilde -40
KPX Ograve T -40
KPX Ograve Tcaron -40
KPX Ograve Tcommaaccent -40
KPX Ograve V -50
KPX Ograve W -50
KPX Ograve X -40
KPX Ograve Y -50
KPX Ograve Yacute -50
KPX Ograve Ydieresis -50
KPX Ohungarumlaut A -40
KPX Ohungarumlaut Aacute -40
KPX Ohungarumlaut Abreve -40
KPX Ohungarumlaut Acircumflex -40
KPX Ohungarumlaut Adieresis -40
KPX Ohungarumlaut Agrave -40
KPX Ohungarumlaut Amacron -40
KPX Ohungarumlaut Aogonek -40
KPX Ohungarumlaut Aring -40
KPX Ohungarumlaut Atilde -40
KPX Ohungarumlaut T -40
KPX Ohungarumlaut Tcaron -40
KPX Ohungarumlaut Tcommaaccent -40
KPX Ohungarumlaut V -50
KPX Ohungarumlaut W -50
KPX Ohungarumlaut X -40
KPX Ohungarumlaut Y -50
KPX Ohungarumlaut Yacute -50
KPX Ohungarumlaut Ydieresis -50
KPX Omacron A -40
KPX Omacron Aacute -40
KPX Omacron Abreve -40
KPX Omacron Acircumflex -40
KPX Omacron Adieresis -40
KPX Omacron Agrave -40
KPX Omacron Amacron -40
KPX Omacron Aogonek -40
KPX Omacron Aring -40
KPX Omacron Atilde -40
KPX Omacron T -40
KPX Omacron Tcaron -40
KPX Omacron Tcommaaccent -40
KPX Omacron V -50
KPX Omacron W -50
KPX Omacron X -40
KPX Omacron Y -50
KPX Omacron Yacute -50
KPX Omacron Ydieresis -50
KPX Oslash A -40
KPX Oslash Aacute -40
KPX Oslash Abreve -40
KPX Oslash Acircumflex -40
KPX Oslash Adieresis -40
KPX Oslash Agrave -40
KPX Oslash Amacron -40
KPX Oslash Aogonek -40
KPX Oslash Aring -40
KPX Oslash Atilde -40
KPX Oslash T -40
KPX Oslash Tcaron -40
KPX Oslash Tcommaaccent -40
KPX Oslash V -50
KPX Oslash W -50
KPX Oslash X -40
KPX Oslash Y -50
KPX Oslash Yacute -50
KPX Oslash Ydieresis -50
KPX Otilde A -40
KPX Otilde Aacute -40
KPX Otilde Abreve -40
KPX Otilde Acircumflex -40
KPX Otilde Adieresis -40
KPX Otilde Agrave -40
KPX Otilde Amacron -40
KPX Otilde Aogonek -40
KPX Otilde Aring -40
KPX Otilde Atilde -40
KPX Otilde T -40
KPX Otilde Tcaron -40
KPX Otilde Tcommaaccent -40
KPX Otilde V -50
KPX Otilde W -50
KPX Otilde X -40
KPX Otilde Y -50
KPX Otilde Yacute -50
KPX Otilde Ydieresis -50
KPX P A -74
KPX P Aacute -74
KPX P Abreve -74
KPX P Acircumflex -74
KPX P Adieresis -74
KPX P Agrave -74
KPX P Amacron -74
KPX P Aogonek -74
KPX P Aring -74
KPX P Atilde -74
KPX P a -10
KPX P aacute -10
KPX P abreve -10
KPX P acircumflex -10
KPX P adieresis -10
KPX P agrave -10
KPX P amacron -10
KPX P aogonek -10
KPX P aring -10
KPX P atilde -10
KPX P comma -92
KPX P e -20
KPX P eacute -20
KPX P ecaron -20
KPX P ecircumflex -20
KPX P edieresis -20
KPX P edotaccent -20
KPX P egrave -20
KPX P emacron -20
KPX P eogonek -20
KPX P o -20
KPX P oacute -20
KPX P ocircumflex -20
KPX P odieresis -20
KPX P ograve -20
KPX P ohungarumlaut -20
KPX P omacron -20
KPX P oslash -20
KPX P otilde -20
KPX P period -110
KPX Q U -10
KPX Q Uacute -10
KPX Q Ucircumflex -10
KPX Q Udieresis -10
KPX Q Ugrave -10
KPX Q Uhungarumlaut -10
KPX Q Umacron -10
KPX Q Uogonek -10
KPX Q Uring -10
KPX Q period -20
KPX R O -30
KPX R Oacute -30
KPX R Ocircumflex -30
KPX R Odieresis -30
KPX R Ograve -30
KPX R Ohungarumlaut -30
KPX R Omacron -30
KPX R Oslash -30
KPX R Otilde -30
KPX R T -40
KPX R Tcaron -40
KPX R Tcommaaccent -40
KPX R U -30
KPX R Uacute -30
KPX R Ucircumflex -30
KPX R Udieresis -30
KPX R Ugrave -30
KPX R Uhungarumlaut -30
KPX R Umacron -30
KPX R Uogonek -30
KPX R Uring -30
KPX R V -55
KPX R W -35
KPX R Y -35
KPX R Yacute -35
KPX R Ydieresis -35
KPX Racute O -30
KPX Racute Oacute -30
KPX Racute Ocircumflex -30
KPX Racute Odieresis -30
KPX Racute Ograve -30
KPX Racute Ohungarumlaut -30
KPX Racute Omacron -30
KPX Racute Oslash -30
KPX Racute Otilde -30
KPX Racute T -40
KPX Racute Tcaron -40
KPX Racute Tcommaaccent -40
KPX Racute U -30
KPX Racute Uacute -30
KPX Racute Ucircumflex -30
KPX Racute Udieresis -30
KPX Racute Ugrave -30
KPX Racute Uhungarumlaut -30
KPX Racute Umacron -30
KPX Racute Uogonek -30
KPX Racute Uring -30
KPX Racute V -55
KPX Racute W -35
KPX Racute Y -35
KPX Racute Yacute -35
KPX Racute Ydieresis -35
KPX Rcaron O -30
KPX Rcaron Oacute -30
KPX Rcaron Ocircumflex -30
KPX Rcaron Odieresis -30
KPX Rcaron Ograve -30
KPX Rcaron Ohungarumlaut -30
KPX Rcaron Omacron -30
KPX Rcaron Oslash -30
KPX Rcaron Otilde -30
KPX Rcaron T -40
KPX Rcaron Tcaron -40
KPX Rcaron Tcommaaccent -40
KPX Rcaron U -30
KPX Rcaron Uacute -30
KPX Rcaron Ucircumflex -30
KPX Rcaron Udieresis -30
KPX Rcaron Ugrave -30
KPX Rcaron Uhungarumlaut -30
KPX Rcaron Umacron -30
KPX Rcaron Uogonek -30
KPX Rcaron Uring -30
KPX Rcaron V -55
KPX Rcaron W -35
KPX Rcaron Y -35
KPX Rcaron Yacute -35
KPX Rcaron Ydieresis -35
KPX Rcommaaccent O -30
KPX Rcommaaccent Oacute -30
KPX Rcommaaccent Ocircumflex -30
KPX Rcommaaccent Odieresis -30
KPX Rcommaaccent Ograve -30
KPX Rcommaaccent Ohungarumlaut -30
KPX Rcommaaccent Omacron -30
KPX Rcommaaccent Oslash -30
KPX Rcommaaccent Otilde -30
KPX Rcommaaccent T -40
KPX Rcommaaccent Tcaron -40
KPX Rcommaaccent Tcommaaccent -40
KPX Rcommaaccent U -30
KPX Rcommaaccent Uacute -30
KPX Rcommaaccent Ucircumflex -30
KPX Rcommaaccent Udieresis -30
KPX Rcommaaccent Ugrave -30
KPX Rcommaaccent Uhungarumlaut -30
KPX Rcommaaccent Umacron -30
KPX Rcommaaccent Uogonek -30
KPX Rcommaaccent Uring -30
KPX Rcommaaccent V -55
KPX Rcommaaccent W -35
KPX Rcommaaccent Y -35
KPX Rcommaaccent Yacute -35
KPX Rcommaaccent Ydieresis -35
KPX T A -90
KPX T Aacute -90
KPX T Abreve -90
KPX T Acircumflex -90
KPX T Adieresis -90
KPX T Agrave -90
KPX T Amacron -90
KPX T Aogonek -90
KPX T Aring -90
KPX T Atilde -90
KPX T O -18
KPX T Oacute -18
KPX T Ocircumflex -18
KPX T Odieresis -18
KPX T Ograve -18
KPX T Ohungarumlaut -18
KPX T Omacron -18
KPX T Oslash -18
KPX T Otilde -18
KPX T a -92
KPX T aacute -92
KPX T abreve -52
KPX T acircumflex -52
KPX T adieresis -52
KPX T agrave -52
KPX T amacron -52
KPX T aogonek -92
KPX T aring -92
KPX T atilde -52
KPX T colon -74
KPX T comma -74
KPX T e -92
KPX T eacute -92
KPX T ecaron -92
KPX T ecircumflex -92
KPX T edieresis -52
KPX T edotaccent -92
KPX T egrave -52
KPX T emacron -52
KPX T eogonek -92
KPX T hyphen -92
KPX T i -18
KPX T iacute -18
KPX T iogonek -18
KPX T o -92
KPX T oacute -92
KPX T ocircumflex -92
KPX T odieresis -92
KPX T ograve -92
KPX T ohungarumlaut -92
KPX T omacron -92
KPX T oslash -92
KPX T otilde -92
KPX T period -90
KPX T r -74
KPX T racute -74
KPX T rcaron -74
KPX T rcommaaccent -74
KPX T semicolon -74
KPX T u -92
KPX T uacute -92
KPX T ucircumflex -92
KPX T udieresis -92
KPX T ugrave -92
KPX T uhungarumlaut -92
KPX T umacron -92
KPX T uogonek -92
KPX T uring -92
KPX T w -74
KPX T y -34
KPX T yacute -34
KPX T ydieresis -34
KPX Tcaron A -90
KPX Tcaron Aacute -90
KPX Tcaron Abreve -90
KPX Tcaron Acircumflex -90
KPX Tcaron Adieresis -90
KPX Tcaron Agrave -90
KPX Tcaron Amacron -90
KPX Tcaron Aogonek -90
KPX Tcaron Aring -90
KPX Tcaron Atilde -90
KPX Tcaron O -18
KPX Tcaron Oacute -18
KPX Tcaron Ocircumflex -18
KPX Tcaron Odieresis -18
KPX Tcaron Ograve -18
KPX Tcaron Ohungarumlaut -18
KPX Tcaron Omacron -18
KPX Tcaron Oslash -18
KPX Tcaron Otilde -18
KPX Tcaron a -92
KPX Tcaron aacute -92
KPX Tcaron abreve -52
KPX Tcaron acircumflex -52
KPX Tcaron adieresis -52
KPX Tcaron agrave -52
KPX Tcaron amacron -52
KPX Tcaron aogonek -92
KPX Tcaron aring -92
KPX Tcaron atilde -52
KPX Tcaron colon -74
KPX Tcaron comma -74
KPX Tcaron e -92
KPX Tcaron eacute -92
KPX Tcaron ecaron -92
KPX Tcaron ecircumflex -92
KPX Tcaron edieresis -52
KPX Tcaron edotaccent -92
KPX Tcaron egrave -52
KPX Tcaron emacron -52
KPX Tcaron eogonek -92
KPX Tcaron hyphen -92
KPX Tcaron i -18
KPX Tcaron iacute -18
KPX Tcaron iogonek -18
KPX Tcaron o -92
KPX Tcaron oacute -92
KPX Tcaron ocircumflex -92
KPX Tcaron odieresis -92
KPX Tcaron ograve -92
KPX Tcaron ohungarumlaut -92
KPX Tcaron omacron -92
KPX Tcaron oslash -92
KPX Tcaron otilde -92
KPX Tcaron period -90
KPX Tcaron r -74
KPX Tcaron racute -74
KPX Tcaron rcaron -74
KPX Tcaron rcommaaccent -74
KPX Tcaron semicolon -74
KPX Tcaron u -92
KPX Tcaron uacute -92
KPX Tcaron ucircumflex -92
KPX Tcaron udieresis -92
KPX Tcaron ugrave -92
KPX Tcaron uhungarumlaut -92
KPX Tcaron umacron -92
KPX Tcaron uogonek -92
KPX Tcaron uring -92
KPX Tcaron w -74
KPX Tcaron y -34
KPX Tcaron yacute -34
KPX Tcaron ydieresis -34
KPX Tcommaaccent A -90
KPX Tcommaaccent Aacute -90
KPX Tcommaaccent Abreve -90
KPX Tcommaaccent Acircumflex -90
KPX Tcommaaccent Adieresis -90
KPX Tcommaaccent Agrave -90
KPX Tcommaaccent Amacron -90
KPX Tcommaaccent Aogonek -90
KPX Tcommaaccent Aring -90
KPX Tcommaaccent Atilde -90
KPX Tcommaaccent O -18
KPX Tcommaaccent Oacute -18
KPX Tcommaaccent Ocircumflex -18
KPX Tcommaaccent Odieresis -18
KPX Tcommaaccent Ograve -18
KPX Tcommaaccent Ohungarumlaut -18
KPX Tcommaaccent Omacron -18
KPX Tcommaaccent Oslash -18
KPX Tcommaaccent Otilde -18
KPX Tcommaaccent a -92
KPX Tcommaaccent aacute -92
KPX Tcommaaccent abreve -52
KPX Tcommaaccent acircumflex -52
KPX Tcommaaccent adieresis -52
KPX Tcommaaccent agrave -52
KPX Tcommaaccent amacron -52
KPX Tcommaaccent aogonek -92
KPX Tcommaaccent aring -92
KPX Tcommaaccent atilde -52
KPX Tcommaaccent colon -74
KPX Tcommaaccent comma -74
KPX Tcommaaccent e -92
KPX Tcommaaccent eacute -92
KPX Tcommaaccent ecaron -92
KPX Tcommaaccent ecircumflex -92
KPX Tcommaaccent edieresis -52
KPX Tcommaaccent edotaccent -92
KPX Tcommaaccent egrave -52
KPX Tcommaaccent emacron -52
KPX Tcommaaccent eogonek -92
KPX Tcommaaccent hyphen -92
KPX Tcommaaccent i -18
KPX Tcommaaccent iacute -18
KPX Tcommaaccent iogonek -18
KPX Tcommaaccent o -92
KPX Tcommaaccent oacute -92
KPX Tcommaaccent ocircumflex -92
KPX Tcommaaccent odieresis -92
KPX Tcommaaccent ograve -92
KPX Tcommaaccent ohungarumlaut -92
KPX Tcommaaccent omacron -92
KPX Tcommaaccent oslash -92
KPX Tcommaaccent otilde -92
KPX Tcommaaccent period -90
KPX Tcommaaccent r -74
KPX Tcommaaccent racute -74
KPX Tcommaaccent rcaron -74
KPX Tcommaaccent rcommaaccent -74
KPX Tcommaaccent semicolon -74
KPX Tcommaaccent u -92
KPX Tcommaaccent uacute -92
KPX Tcommaaccent ucircumflex -92
KPX Tcommaaccent udieresis -92
KPX Tcommaaccent ugrave -92
KPX Tcommaaccent uhungarumlaut -92
KPX Tcommaaccent umacron -92
KPX Tcommaaccent uogonek -92
KPX Tcommaaccent uring -92
KPX Tcommaaccent w -74
KPX Tcommaaccent y -34
KPX Tcommaaccent yacute -34
KPX Tcommaaccent ydieresis -34
KPX U A -60
KPX U Aacute -60
KPX U Abreve -60
KPX U Acircumflex -60
KPX U Adieresis -60
KPX U Agrave -60
KPX U Amacron -60
KPX U Aogonek -60
KPX U Aring -60
KPX U Atilde -60
KPX U comma -50
KPX U period -50
KPX Uacute A -60
KPX Uacute Aacute -60
KPX Uacute Abreve -60
KPX Uacute Acircumflex -60
KPX Uacute Adieresis -60
KPX Uacute Agrave -60
KPX Uacute Amacron -60
KPX Uacute Aogonek -60
KPX Uacute Aring -60
KPX Uacute Atilde -60
KPX Uacute comma -50
KPX Uacute period -50
KPX Ucircumflex A -60
KPX Ucircumflex Aacute -60
KPX Ucircumflex Abreve -60
KPX Ucircumflex Acircumflex -60
KPX Ucircumflex Adieresis -60
KPX Ucircumflex Agrave -60
KPX Ucircumflex Amacron -60
KPX Ucircumflex Aogonek -60
KPX Ucircumflex Aring -60
KPX Ucircumflex Atilde -60
KPX Ucircumflex comma -50
KPX Ucircumflex period -50
KPX Udieresis A -60
KPX Udieresis Aacute -60
KPX Udieresis Abreve -60
KPX Udieresis Acircumflex -60
KPX Udieresis Adieresis -60
KPX Udieresis Agrave -60
KPX Udieresis Amacron -60
KPX Udieresis Aogonek -60
KPX Udieresis Aring -60
KPX Udieresis Atilde -60
KPX Udieresis comma -50
KPX Udieresis period -50
KPX Ugrave A -60
KPX Ugrave Aacute -60
KPX Ugrave Abreve -60
KPX Ugrave Acircumflex -60
KPX Ugrave Adieresis -60
KPX Ugrave Agrave -60
KPX Ugrave Amacron -60
KPX Ugrave Aogonek -60
KPX Ugrave Aring -60
KPX Ugrave Atilde -60
KPX Ugrave comma -50
KPX Ugrave period -50
KPX Uhungarumlaut A -60
KPX Uhungarumlaut Aacute -60
KPX Uhungarumlaut Abreve -60
KPX Uhungarumlaut Acircumflex -60
KPX Uhungarumlaut Adieresis -60
KPX Uhungarumlaut Agrave -60
KPX Uhungarumlaut Amacron -60
KPX Uhungarumlaut Aogonek -60
KPX Uhungarumlaut Aring -60
KPX Uhungarumlaut Atilde -60
KPX Uhungarumlaut comma -50
KPX Uhungarumlaut period -50
KPX Umacron A -60
KPX Umacron Aacute -60
KPX Umacron Abreve -60
KPX Umacron Acircumflex -60
KPX Umacron Adieresis -60
KPX Umacron Agrave -60
KPX Umacron Amacron -60
KPX Umacron Aogonek -60
KPX Umacron Aring -60
KPX Umacron Atilde -60
KPX Umacron comma -50
KPX Umacron period -50
KPX Uogonek A -60
KPX Uogonek Aacute -60
KPX Uogonek Abreve -60
KPX Uogonek Acircumflex -60
KPX Uogonek Adieresis -60
KPX Uogonek Agrave -60
KPX Uogonek Amacron -60
KPX Uogonek Aogonek -60
KPX Uogonek Aring -60
KPX Uogonek Atilde -60
KPX Uogonek comma -50
KPX Uogonek period -50
KPX Uring A -60
KPX Uring Aacute -60
KPX Uring Abreve -60
KPX Uring Acircumflex -60
KPX Uring Adieresis -60
KPX Uring Agrave -60
KPX Uring Amacron -60
KPX Uring Aogonek -60
KPX Uring Aring -60
KPX Uring Atilde -60
KPX Uring comma -50
KPX Uring period -50
KPX V A -135
KPX V Aacute -135
KPX V Abreve -135
KPX V Acircumflex -135
KPX V Adieresis -135
KPX V Agrave -135
KPX V Amacron -135
KPX V Aogonek -135
KPX V Aring -135
KPX V Atilde -135
KPX V G -30
KPX V Gbreve -30
KPX V Gcommaaccent -30
KPX V O -45
KPX V Oacute -45
KPX V Ocircumflex -45
KPX V Odieresis -45
KPX V Ograve -45
KPX V Ohungarumlaut -45
KPX V Omacron -45
KPX V Oslash -45
KPX V Otilde -45
KPX V a -92
KPX V aacute -92
KPX V abreve -92
KPX V acircumflex -92
KPX V adieresis -92
KPX V agrave -92
KPX V amacron -92
KPX V aogonek -92
KPX V aring -92
KPX V atilde -92
KPX V colon -92
KPX V comma -129
KPX V e -100
KPX V eacute -100
KPX V ecaron -100
KPX V ecircumflex -100
KPX V edieresis -100
KPX V edotaccent -100
KPX V egrave -100
KPX V emacron -100
KPX V eogonek -100
KPX V hyphen -74
KPX V i -37
KPX V iacute -37
KPX V icircumflex -37
KPX V idieresis -37
KPX V igrave -37
KPX V imacron -37
KPX V iogonek -37
KPX V o -100
KPX V oacute -100
KPX V ocircumflex -100
KPX V odieresis -100
KPX V ograve -100
KPX V ohungarumlaut -100
KPX V omacron -100
KPX V oslash -100
KPX V otilde -100
KPX V period -145
KPX V semicolon -92
KPX V u -92
KPX V uacute -92
KPX V ucircumflex -92
KPX V udieresis -92
KPX V ugrave -92
KPX V uhungarumlaut -92
KPX V umacron -92
KPX V uogonek -92
KPX V uring -92
KPX W A -120
KPX W Aacute -120
KPX W Abreve -120
KPX W Acircumflex -120
KPX W Adieresis -120
KPX W Agrave -120
KPX W Amacron -120
KPX W Aogonek -120
KPX W Aring -120
KPX W Atilde -120
KPX W O -10
KPX W Oacute -10
KPX W Ocircumflex -10
KPX W Odieresis -10
KPX W Ograve -10
KPX W Ohungarumlaut -10
KPX W Omacron -10
KPX W Oslash -10
KPX W Otilde -10
KPX W a -65
KPX W aacute -65
KPX W abreve -65
KPX W acircumflex -65
KPX W adieresis -65
KPX W agrave -65
KPX W amacron -65
KPX W aogonek -65
KPX W aring -65
KPX W atilde -65
KPX W colon -55
KPX W comma -92
KPX W e -65
KPX W eacute -65
KPX W ecaron -65
KPX W ecircumflex -65
KPX W edieresis -65
KPX W edotaccent -65
KPX W egrave -65
KPX W emacron -65
KPX W eogonek -65
KPX W hyphen -37
KPX W i -18
KPX W iacute -18
KPX W iogonek -18
KPX W o -75
KPX W oacute -75
KPX W ocircumflex -75
KPX W odieresis -75
KPX W ograve -75
KPX W ohungarumlaut -75
KPX W omacron -75
KPX W oslash -75
KPX W otilde -75
KPX W period -92
KPX W semicolon -55
KPX W u -50
KPX W uacute -50
KPX W ucircumflex -50
KPX W udieresis -50
KPX W ugrave -50
KPX W uhungarumlaut -50
KPX W umacron -50
KPX W uogonek -50
KPX W uring -50
KPX W y -60
KPX W yacute -60
KPX W ydieresis -60
KPX Y A -110
KPX Y Aacute -110
KPX Y Abreve -110
KPX Y Acircumflex -110
KPX Y Adieresis -110
KPX Y Agrave -110
KPX Y Amacron -110
KPX Y Aogonek -110
KPX Y Aring -110
KPX Y Atilde -110
KPX Y O -35
KPX Y Oacute -35
KPX Y Ocircumflex -35
KPX Y Odieresis -35
KPX Y Ograve -35
KPX Y Ohungarumlaut -35
KPX Y Omacron -35
KPX Y Oslash -35
KPX Y Otilde -35
KPX Y a -85
KPX Y aacute -85
KPX Y abreve -85
KPX Y acircumflex -85
KPX Y adieresis -85
KPX Y agrave -85
KPX Y amacron -85
KPX Y aogonek -85
KPX Y aring -85
KPX Y atilde -85
KPX Y colon -92
KPX Y comma -92
KPX Y e -111
KPX Y eacute -111
KPX Y ecaron -111
KPX Y ecircumflex -111
KPX Y edieresis -71
KPX Y edotaccent -111
KPX Y egrave -71
KPX Y emacron -71
KPX Y eogonek -111
KPX Y hyphen -92
KPX Y i -37
KPX Y iacute -37
KPX Y iogonek -37
KPX Y o -111
KPX Y oacute -111
KPX Y ocircumflex -111
KPX Y odieresis -111
KPX Y ograve -111
KPX Y ohungarumlaut -111
KPX Y omacron -111
KPX Y oslash -111
KPX Y otilde -111
KPX Y period -92
KPX Y semicolon -92
KPX Y u -92
KPX Y uacute -92
KPX Y ucircumflex -92
KPX Y udieresis -92
KPX Y ugrave -92
KPX Y uhungarumlaut -92
KPX Y umacron -92
KPX Y uogonek -92
KPX Y uring -92
KPX Yacute A -110
KPX Yacute Aacute -110
KPX Yacute Abreve -110
KPX Yacute Acircumflex -110
KPX Yacute Adieresis -110
KPX Yacute Agrave -110
KPX Yacute Amacron -110
KPX Yacute Aogonek -110
KPX Yacute Aring -110
KPX Yacute Atilde -110
KPX Yacute O -35
KPX Yacute Oacute -35
KPX Yacute Ocircumflex -35
KPX Yacute Odieresis -35
KPX Yacute Ograve -35
KPX Yacute Ohungarumlaut -35
KPX Yacute Omacron -35
KPX Yacute Oslash -35
KPX Yacute Otilde -35
KPX Yacute a -85
KPX Yacute aacute -85
KPX Yacute abreve -85
KPX Yacute acircumflex -85
KPX Yacute adieresis -85
KPX Yacute agrave -85
KPX Yacute amacron -85
KPX Yacute aogonek -85
KPX Yacute aring -85
KPX Yacute atilde -85
KPX Yacute colon -92
KPX Yacute comma -92
KPX Yacute e -111
KPX Yacute eacute -111
KPX Yacute ecaron -111
KPX Yacute ecircumflex -111
KPX Yacute edieresis -71
KPX Yacute edotaccent -111
KPX Yacute egrave -71
KPX Yacute emacron -71
KPX Yacute eogonek -111
KPX Yacute hyphen -92
KPX Yacute i -37
KPX Yacute iacute -37
KPX Yacute iogonek -37
KPX Yacute o -111
KPX Yacute oacute -111
KPX Yacute ocircumflex -111
KPX Yacute odieresis -111
KPX Yacute ograve -111
KPX Yacute ohungarumlaut -111
KPX Yacute omacron -111
KPX Yacute oslash -111
KPX Yacute otilde -111
KPX Yacute period -92
KPX Yacute semicolon -92
KPX Yacute u -92
KPX Yacute uacute -92
KPX Yacute ucircumflex -92
KPX Yacute udieresis -92
KPX Yacute ugrave -92
KPX Yacute uhungarumlaut -92
KPX Yacute umacron -92
KPX Yacute uogonek -92
KPX Yacute uring -92
KPX Ydieresis A -110
KPX Ydieresis Aacute -110
KPX Ydieresis Abreve -110
KPX Ydieresis Acircumflex -110
KPX Ydieresis Adieresis -110
KPX Ydieresis Agrave -110
KPX Ydieresis Amacron -110
KPX Ydieresis Aogonek -110
KPX Ydieresis Aring -110
KPX Ydieresis Atilde -110
KPX Ydieresis O -35
KPX Ydieresis Oacute -35
KPX Ydieresis Ocircumflex -35
KPX Ydieresis Odieresis -35
KPX Ydieresis Ograve -35
KPX Ydieresis Ohungarumlaut -35
KPX Ydieresis Omacron -35
KPX Ydieresis Oslash -35
KPX Ydieresis Otilde -35
KPX Ydieresis a -85
KPX Ydieresis aacute -85
KPX Ydieresis abreve -85
KPX Ydieresis acircumflex -85
KPX Ydieresis adieresis -85
KPX Ydieresis agrave -85
KPX Ydieresis amacron -85
KPX Ydieresis aogonek -85
KPX Ydieresis aring -85
KPX Ydieresis atilde -85
KPX Ydieresis colon -92
KPX Ydieresis comma -92
KPX Ydieresis e -111
KPX Ydieresis eacute -111
KPX Ydieresis ecaron -111
KPX Ydieresis ecircumflex -111
KPX Ydieresis edieresis -71
KPX Ydieresis edotaccent -111
KPX Ydieresis egrave -71
KPX Ydieresis emacron -71
KPX Ydieresis eogonek -111
KPX Ydieresis hyphen -92
KPX Ydieresis i -37
KPX Ydieresis iacute -37
KPX Ydieresis iogonek -37
KPX Ydieresis o -111
KPX Ydieresis oacute -111
KPX Ydieresis ocircumflex -111
KPX Ydieresis odieresis -111
KPX Ydieresis ograve -111
KPX Ydieresis ohungarumlaut -111
KPX Ydieresis omacron -111
KPX Ydieresis oslash -111
KPX Ydieresis otilde -111
KPX Ydieresis period -92
KPX Ydieresis semicolon -92
KPX Ydieresis u -92
KPX Ydieresis uacute -92
KPX Ydieresis ucircumflex -92
KPX Ydieresis udieresis -92
KPX Ydieresis ugrave -92
KPX Ydieresis uhungarumlaut -92
KPX Ydieresis umacron -92
KPX Ydieresis uogonek -92
KPX Ydieresis uring -92
KPX a v -25
KPX aacute v -25
KPX abreve v -25
KPX acircumflex v -25
KPX adieresis v -25
KPX agrave v -25
KPX amacron v -25
KPX aogonek v -25
KPX aring v -25
KPX atilde v -25
KPX b b -10
KPX b period -40
KPX b u -20
KPX b uacute -20
KPX b ucircumflex -20
KPX b udieresis -20
KPX b ugrave -20
KPX b uhungarumlaut -20
KPX b umacron -20
KPX b uogonek -20
KPX b uring -20
KPX b v -15
KPX comma quotedblright -45
KPX comma quoteright -55
KPX d w -15
KPX dcroat w -15
KPX e v -15
KPX eacute v -15
KPX ecaron v -15
KPX ecircumflex v -15
KPX edieresis v -15
KPX edotaccent v -15
KPX egrave v -15
KPX emacron v -15
KPX eogonek v -15
KPX f comma -15
KPX f dotlessi -35
KPX f i -25
KPX f o -25
KPX f oacute -25
KPX f ocircumflex -25
KPX f odieresis -25
KPX f ograve -25
KPX f ohungarumlaut -25
KPX f omacron -25
KPX f oslash -25
KPX f otilde -25
KPX f period -15
KPX f quotedblright 50
KPX f quoteright 55
KPX g period -15
KPX gbreve period -15
KPX gcommaaccent period -15
KPX h y -15
KPX h yacute -15
KPX h ydieresis -15
KPX i v -10
KPX iacute v -10
KPX icircumflex v -10
KPX idieresis v -10
KPX igrave v -10
KPX imacron v -10
KPX iogonek v -10
KPX k e -10
KPX k eacute -10
KPX k ecaron -10
KPX k ecircumflex -10
KPX k edieresis -10
KPX k edotaccent -10
KPX k egrave -10
KPX k emacron -10
KPX k eogonek -10
KPX k o -15
KPX k oacute -15
KPX k ocircumflex -15
KPX k odieresis -15
KPX k ograve -15
KPX k ohungarumlaut -15
KPX k omacron -15
KPX k oslash -15
KPX k otilde -15
KPX k y -15
KPX k yacute -15
KPX k ydieresis -15
KPX kcommaaccent e -10
KPX kcommaaccent eacute -10
KPX kcommaaccent ecaron -10
KPX kcommaaccent ecircumflex -10
KPX kcommaaccent edieresis -10
KPX kcommaaccent edotaccent -10
KPX kcommaaccent egrave -10
KPX kcommaaccent emacron -10
KPX kcommaaccent eogonek -10
KPX kcommaaccent o -15
KPX kcommaaccent oacute -15
KPX kcommaaccent ocircumflex -15
KPX kcommaaccent odieresis -15
KPX kcommaaccent ograve -15
KPX kcommaaccent ohungarumlaut -15
KPX kcommaaccent omacron -15
KPX kcommaaccent oslash -15
KPX kcommaaccent otilde -15
KPX kcommaaccent y -15
KPX kcommaaccent yacute -15
KPX kcommaaccent ydieresis -15
KPX n v -40
KPX nacute v -40
KPX ncaron v -40
KPX ncommaaccent v -40
KPX ntilde v -40
KPX o v -10
KPX o w -10
KPX oacute v -10
KPX oacute w -10
KPX ocircumflex v -10
KPX ocircumflex w -10
KPX odieresis v -10
KPX odieresis w -10
KPX ograve v -10
KPX ograve w -10
KPX ohungarumlaut v -10
KPX ohungarumlaut w -10
KPX omacron v -10
KPX omacron w -10
KPX oslash v -10
KPX oslash w -10
KPX otilde v -10
KPX otilde w -10
KPX period quotedblright -55
KPX period quoteright -55
KPX quotedblleft A -10
KPX quotedblleft Aacute -10
KPX quotedblleft Abreve -10
KPX quotedblleft Acircumflex -10
KPX quotedblleft Adieresis -10
KPX quotedblleft Agrave -10
KPX quotedblleft Amacron -10
KPX quotedblleft Aogonek -10
KPX quotedblleft Aring -10
KPX quotedblleft Atilde -10
KPX quoteleft A -10
KPX quoteleft Aacute -10
KPX quoteleft Abreve -10
KPX quoteleft Acircumflex -10
KPX quoteleft Adieresis -10
KPX quoteleft Agrave -10
KPX quoteleft Amacron -10
KPX quoteleft Aogonek -10
KPX quoteleft Aring -10
KPX quoteleft Atilde -10
KPX quoteleft quoteleft -63
KPX quoteright d -20
KPX quoteright dcroat -20
KPX quoteright quoteright -63
KPX quoteright r -20
KPX quoteright racute -20
KPX quoteright rcaron -20
KPX quoteright rcommaaccent -20
KPX quoteright s -37
KPX quoteright sacute -37
KPX quoteright scaron -37
KPX quoteright scedilla -37
KPX quoteright scommaaccent -37
KPX quoteright space -74
KPX quoteright v -20
KPX r c -18
KPX r cacute -18
KPX r ccaron -18
KPX r ccedilla -18
KPX r comma -92
KPX r e -18
KPX r eacute -18
KPX r ecaron -18
KPX r ecircumflex -18
KPX r edieresis -18
KPX r edotaccent -18
KPX r egrave -18
KPX r emacron -18
KPX r eogonek -18
KPX r g -10
KPX r gbreve -10
KPX r gcommaaccent -10
KPX r hyphen -37
KPX r n -15
KPX r nacute -15
KPX r ncaron -15
KPX r ncommaaccent -15
KPX r ntilde -15
KPX r o -18
KPX r oacute -18
KPX r ocircumflex -18
KPX r odieresis -18
KPX r ograve -18
KPX r ohungarumlaut -18
KPX r omacron -18
KPX r oslash -18
KPX r otilde -18
KPX r p -10
KPX r period -100
KPX r q -18
KPX r v -10
KPX racute c -18
KPX racute cacute -18
KPX racute ccaron -18
KPX racute ccedilla -18
KPX racute comma -92
KPX racute e -18
KPX racute eacute -18
KPX racute ecaron -18
KPX racute ecircumflex -18
KPX racute edieresis -18
KPX racute edotaccent -18
KPX racute egrave -18
KPX racute emacron -18
KPX racute eogonek -18
KPX racute g -10
KPX racute gbreve -10
KPX racute gcommaaccent -10
KPX racute hyphen -37
KPX racute n -15
KPX racute nacute -15
KPX racute ncaron -15
KPX racute ncommaaccent -15
KPX racute ntilde -15
KPX racute o -18
KPX racute oacute -18
KPX racute ocircumflex -18
KPX racute odieresis -18
KPX racute ograve -18
KPX racute ohungarumlaut -18
KPX racute omacron -18
KPX racute oslash -18
KPX racute otilde -18
KPX racute p -10
KPX racute period -100
KPX racute q -18
KPX racute v -10
KPX rcaron c -18
KPX rcaron cacute -18
KPX rcaron ccaron -18
KPX rcaron ccedilla -18
KPX rcaron comma -92
KPX rcaron e -18
KPX rcaron eacute -18
KPX rcaron ecaron -18
KPX rcaron ecircumflex -18
KPX rcaron edieresis -18
KPX rcaron edotaccent -18
KPX rcaron egrave -18
KPX rcaron emacron -18
KPX rcaron eogonek -18
KPX rcaron g -10
KPX rcaron gbreve -10
KPX rcaron gcommaaccent -10
KPX rcaron hyphen -37
KPX rcaron n -15
KPX rcaron nacute -15
KPX rcaron ncaron -15
KPX rcaron ncommaaccent -15
KPX rcaron ntilde -15
KPX rcaron o -18
KPX rcaron oacute -18
KPX rcaron ocircumflex -18
KPX rcaron odieresis -18
KPX rcaron ograve -18
KPX rcaron ohungarumlaut -18
KPX rcaron omacron -18
KPX rcaron oslash -18
KPX rcaron otilde -18
KPX rcaron p -10
KPX rcaron period -100
KPX rcaron q -18
KPX rcaron v -10
KPX rcommaaccent c -18
KPX rcommaaccent cacute -18
KPX rcommaaccent ccaron -18
KPX rcommaaccent ccedilla -18
KPX rcommaaccent comma -92
KPX rcommaaccent e -18
KPX rcommaaccent eacute -18
KPX rcommaaccent ecaron -18
KPX rcommaaccent ecircumflex -18
KPX rcommaaccent edieresis -18
KPX rcommaaccent edotaccent -18
KPX rcommaaccent egrave -18
KPX rcommaaccent emacron -18
KPX rcommaaccent eogonek -18
KPX rcommaaccent g -10
KPX rcommaaccent gbreve -10
KPX rcommaaccent gcommaaccent -10
KPX rcommaaccent hyphen -37
KPX rcommaaccent n -15
KPX rcommaaccent nacute -15
KPX rcommaaccent ncaron -15
KPX rcommaaccent ncommaaccent -15
KPX rcommaaccent ntilde -15
KPX rcommaaccent o -18
KPX rcommaaccent oacute -18
KPX rcommaaccent ocircumflex -18
KPX rcommaaccent odieresis -18
KPX rcommaaccent ograve -18
KPX rcommaaccent ohungarumlaut -18
KPX rcommaaccent omacron -18
KPX rcommaaccent oslash -18
KPX rcommaaccent otilde -18
KPX rcommaaccent p -10
KPX rcommaaccent period -100
KPX rcommaaccent q -18
KPX rcommaaccent v -10
KPX space A -55
KPX space Aacute -55
KPX space Abreve -55
KPX space Acircumflex -55
KPX space Adieresis -55
KPX space Agrave -55
KPX space Amacron -55
KPX space Aogonek -55
KPX space Aring -55
KPX space Atilde -55
KPX space T -30
KPX space Tcaron -30
KPX space Tcommaaccent -30
KPX space V -45
KPX space W -30
KPX space Y -55
KPX space Yacute -55
KPX space Ydieresis -55
KPX v a -10
KPX v aacute -10
KPX v abreve -10
KPX v acircumflex -10
KPX v adieresis -10
KPX v agrave -10
KPX v amacron -10
KPX v aogonek -10
KPX v aring -10
KPX v atilde -10
KPX v comma -55
KPX v e -10
KPX v eacute -10
KPX v ecaron -10
KPX v ecircumflex -10
KPX v edieresis -10
KPX v edotaccent -10
KPX v egrave -10
KPX v emacron -10
KPX v eogonek -10
KPX v o -10
KPX v oacute -10
KPX v ocircumflex -10
KPX v odieresis -10
KPX v ograve -10
KPX v ohungarumlaut -10
KPX v omacron -10
KPX v oslash -10
KPX v otilde -10
KPX v period -70
KPX w comma -55
KPX w o -10
KPX w oacute -10
KPX w ocircumflex -10
KPX w odieresis -10
KPX w ograve -10
KPX w ohungarumlaut -10
KPX w omacron -10
KPX w oslash -10
KPX w otilde -10
KPX w period -70
KPX y comma -55
KPX y e -10
KPX y eacute -10
KPX y ecaron -10
KPX y ecircumflex -10
KPX y edieresis -10
KPX y edotaccent -10
KPX y egrave -10
KPX y emacron -10
KPX y eogonek -10
KPX y o -25
KPX y oacute -25
KPX y ocircumflex -25
KPX y odieresis -25
KPX y ograve -25
KPX y ohungarumlaut -25
KPX y omacron -25
KPX y oslash -25
KPX y otilde -25
KPX y period -70
KPX yacute comma -55
KPX yacute e -10
KPX yacute eacute -10
KPX yacute ecaron -10
KPX yacute ecircumflex -10
KPX yacute edieresis -10
KPX yacute edotaccent -10
KPX yacute egrave -10
KPX yacute emacron -10
KPX yacute eogonek -10
KPX yacute o -25
KPX yacute oacute -25
KPX yacute ocircumflex -25
KPX yacute odieresis -25
KPX yacute ograve -25
KPX yacute ohungarumlaut -25
KPX yacute omacron -25
KPX yacute oslash -25
KPX yacute otilde -25
KPX yacute period -70
KPX ydieresis comma -55
KPX ydieresis e -10
KPX ydieresis eacute -10
KPX ydieresis ecaron -10
KPX ydieresis ecircumflex -10
KPX ydieresis edieresis -10
KPX ydieresis edotaccent -10
KPX ydieresis egrave -10
KPX ydieresis emacron -10
KPX ydieresis eogonek -10
KPX ydieresis o -25
KPX ydieresis oacute -25
KPX ydieresis ocircumflex -25
KPX ydieresis odieresis -25
KPX ydieresis ograve -25
KPX ydieresis ohungarumlaut -25
KPX ydieresis omacron -25
KPX ydieresis oslash -25
KPX ydieresis otilde -25
KPX ydieresis period -70
EndKernPairs
EndKernData
EndFontMetrics
'
%
classmethod: StandardFont
timesBoldItalic
	"from http://www.adobe.com/devnet/font.html "

	<font: #'Times-BoldItalic'>
	^self
		windowsName: 'Times New Roman'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.
Comment Creation Date: Thu May  1 13:04:06 1997
Comment UniqueID 43066
Comment VMusage 45874 56899
FontName Times-BoldItalic
FullName Times Bold Italic
FamilyName Times
Weight Bold
ItalicAngle -15
IsFixedPitch false
CharacterSet ExtendedRoman
FontBBox -200 -218 996 921 
UnderlinePosition -100
UnderlineThickness 50
Version 002.000
Notice Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.
EncodingScheme AdobeStandardEncoding
CapHeight 669
XHeight 462
Ascender 683
Descender -217
StdHW 42
StdVW 121
StartCharMetrics 315
C 32 ; WX 250 ; N space ; B 0 0 0 0 ;
C 33 ; WX 389 ; N exclam ; B 67 -13 370 684 ;
C 34 ; WX 555 ; N quotedbl ; B 136 398 536 685 ;
C 35 ; WX 500 ; N numbersign ; B -33 0 533 700 ;
C 36 ; WX 500 ; N dollar ; B -20 -100 497 733 ;
C 37 ; WX 833 ; N percent ; B 39 -10 793 692 ;
C 38 ; WX 778 ; N ampersand ; B 5 -19 699 682 ;
C 39 ; WX 333 ; N quoteright ; B 98 369 302 685 ;
C 40 ; WX 333 ; N parenleft ; B 28 -179 344 685 ;
C 41 ; WX 333 ; N parenright ; B -44 -179 271 685 ;
C 42 ; WX 500 ; N asterisk ; B 65 249 456 685 ;
C 43 ; WX 570 ; N plus ; B 33 0 537 506 ;
C 44 ; WX 250 ; N comma ; B -60 -182 144 134 ;
C 45 ; WX 333 ; N hyphen ; B 2 166 271 282 ;
C 46 ; WX 250 ; N period ; B -9 -13 139 135 ;
C 47 ; WX 278 ; N slash ; B -64 -18 342 685 ;
C 48 ; WX 500 ; N zero ; B 17 -14 477 683 ;
C 49 ; WX 500 ; N one ; B 5 0 419 683 ;
C 50 ; WX 500 ; N two ; B -27 0 446 683 ;
C 51 ; WX 500 ; N three ; B -15 -13 450 683 ;
C 52 ; WX 500 ; N four ; B -15 0 503 683 ;
C 53 ; WX 500 ; N five ; B -11 -13 487 669 ;
C 54 ; WX 500 ; N six ; B 23 -15 509 679 ;
C 55 ; WX 500 ; N seven ; B 52 0 525 669 ;
C 56 ; WX 500 ; N eight ; B 3 -13 476 683 ;
C 57 ; WX 500 ; N nine ; B -12 -10 475 683 ;
C 58 ; WX 333 ; N colon ; B 23 -13 264 459 ;
C 59 ; WX 333 ; N semicolon ; B -25 -183 264 459 ;
C 60 ; WX 570 ; N less ; B 31 -8 539 514 ;
C 61 ; WX 570 ; N equal ; B 33 107 537 399 ;
C 62 ; WX 570 ; N greater ; B 31 -8 539 514 ;
C 63 ; WX 500 ; N question ; B 79 -13 470 684 ;
C 64 ; WX 832 ; N at ; B 63 -18 770 685 ;
C 65 ; WX 667 ; N A ; B -67 0 593 683 ;
C 66 ; WX 667 ; N B ; B -24 0 624 669 ;
C 67 ; WX 667 ; N C ; B 32 -18 677 685 ;
C 68 ; WX 722 ; N D ; B -46 0 685 669 ;
C 69 ; WX 667 ; N E ; B -27 0 653 669 ;
C 70 ; WX 667 ; N F ; B -13 0 660 669 ;
C 71 ; WX 722 ; N G ; B 21 -18 706 685 ;
C 72 ; WX 778 ; N H ; B -24 0 799 669 ;
C 73 ; WX 389 ; N I ; B -32 0 406 669 ;
C 74 ; WX 500 ; N J ; B -46 -99 524 669 ;
C 75 ; WX 667 ; N K ; B -21 0 702 669 ;
C 76 ; WX 611 ; N L ; B -22 0 590 669 ;
C 77 ; WX 889 ; N M ; B -29 -12 917 669 ;
C 78 ; WX 722 ; N N ; B -27 -15 748 669 ;
C 79 ; WX 722 ; N O ; B 27 -18 691 685 ;
C 80 ; WX 611 ; N P ; B -27 0 613 669 ;
C 81 ; WX 722 ; N Q ; B 27 -208 691 685 ;
C 82 ; WX 667 ; N R ; B -29 0 623 669 ;
C 83 ; WX 556 ; N S ; B 2 -18 526 685 ;
C 84 ; WX 611 ; N T ; B 50 0 650 669 ;
C 85 ; WX 722 ; N U ; B 67 -18 744 669 ;
C 86 ; WX 667 ; N V ; B 65 -18 715 669 ;
C 87 ; WX 889 ; N W ; B 65 -18 940 669 ;
C 88 ; WX 667 ; N X ; B -24 0 694 669 ;
C 89 ; WX 611 ; N Y ; B 73 0 659 669 ;
C 90 ; WX 611 ; N Z ; B -11 0 590 669 ;
C 91 ; WX 333 ; N bracketleft ; B -37 -159 362 674 ;
C 92 ; WX 278 ; N backslash ; B -1 -18 279 685 ;
C 93 ; WX 333 ; N bracketright ; B -56 -157 343 674 ;
C 94 ; WX 570 ; N asciicircum ; B 67 304 503 669 ;
C 95 ; WX 500 ; N underscore ; B 0 -125 500 -75 ;
C 96 ; WX 333 ; N quoteleft ; B 128 369 332 685 ;
C 97 ; WX 500 ; N a ; B -21 -14 455 462 ;
C 98 ; WX 500 ; N b ; B -14 -13 444 699 ;
C 99 ; WX 444 ; N c ; B -5 -13 392 462 ;
C 100 ; WX 500 ; N d ; B -21 -13 517 699 ;
C 101 ; WX 444 ; N e ; B 5 -13 398 462 ;
C 102 ; WX 333 ; N f ; B -169 -205 446 698 ; L i fi ; L l fl ;
C 103 ; WX 500 ; N g ; B -52 -203 478 462 ;
C 104 ; WX 556 ; N h ; B -13 -9 498 699 ;
C 105 ; WX 278 ; N i ; B 2 -9 263 684 ;
C 106 ; WX 278 ; N j ; B -189 -207 279 684 ;
C 107 ; WX 500 ; N k ; B -23 -8 483 699 ;
C 108 ; WX 278 ; N l ; B 2 -9 290 699 ;
C 109 ; WX 778 ; N m ; B -14 -9 722 462 ;
C 110 ; WX 556 ; N n ; B -6 -9 493 462 ;
C 111 ; WX 500 ; N o ; B -3 -13 441 462 ;
C 112 ; WX 500 ; N p ; B -120 -205 446 462 ;
C 113 ; WX 500 ; N q ; B 1 -205 471 462 ;
C 114 ; WX 389 ; N r ; B -21 0 389 462 ;
C 115 ; WX 389 ; N s ; B -19 -13 333 462 ;
C 116 ; WX 278 ; N t ; B -11 -9 281 594 ;
C 117 ; WX 556 ; N u ; B 15 -9 492 462 ;
C 118 ; WX 444 ; N v ; B 16 -13 401 462 ;
C 119 ; WX 667 ; N w ; B 16 -13 614 462 ;
C 120 ; WX 500 ; N x ; B -46 -13 469 462 ;
C 121 ; WX 444 ; N y ; B -94 -205 392 462 ;
C 122 ; WX 389 ; N z ; B -43 -78 368 449 ;
C 123 ; WX 348 ; N braceleft ; B 5 -187 436 686 ;
C 124 ; WX 220 ; N bar ; B 66 -218 154 782 ;
C 125 ; WX 348 ; N braceright ; B -129 -187 302 686 ;
C 126 ; WX 570 ; N asciitilde ; B 54 173 516 333 ;
C 161 ; WX 389 ; N exclamdown ; B 19 -205 322 492 ;
C 162 ; WX 500 ; N cent ; B 42 -143 439 576 ;
C 163 ; WX 500 ; N sterling ; B -32 -12 510 683 ;
C 164 ; WX 167 ; N fraction ; B -169 -14 324 683 ;
C 165 ; WX 500 ; N yen ; B 33 0 628 669 ;
C 166 ; WX 500 ; N florin ; B -87 -156 537 707 ;
C 167 ; WX 500 ; N section ; B 36 -143 459 685 ;
C 168 ; WX 500 ; N currency ; B -26 34 526 586 ;
C 169 ; WX 278 ; N quotesingle ; B 128 398 268 685 ;
C 170 ; WX 500 ; N quotedblleft ; B 53 369 513 685 ;
C 171 ; WX 500 ; N guillemotleft ; B 12 32 468 415 ;
C 172 ; WX 333 ; N guilsinglleft ; B 32 32 303 415 ;
C 173 ; WX 333 ; N guilsinglright ; B 10 32 281 415 ;
C 174 ; WX 556 ; N fi ; B -188 -205 514 703 ;
C 175 ; WX 556 ; N fl ; B -186 -205 553 704 ;
C 177 ; WX 500 ; N endash ; B -40 178 477 269 ;
C 178 ; WX 500 ; N dagger ; B 91 -145 494 685 ;
C 179 ; WX 500 ; N daggerdbl ; B 10 -139 493 685 ;
C 180 ; WX 250 ; N periodcentered ; B 51 257 199 405 ;
C 182 ; WX 500 ; N paragraph ; B -57 -193 562 669 ;
C 183 ; WX 350 ; N bullet ; B 0 175 350 525 ;
C 184 ; WX 333 ; N quotesinglbase ; B -5 -182 199 134 ;
C 185 ; WX 500 ; N quotedblbase ; B -57 -182 403 134 ;
C 186 ; WX 500 ; N quotedblright ; B 53 369 513 685 ;
C 187 ; WX 500 ; N guillemotright ; B 12 32 468 415 ;
C 188 ; WX 1000 ; N ellipsis ; B 40 -13 852 135 ;
C 189 ; WX 1000 ; N perthousand ; B 7 -29 996 706 ;
C 191 ; WX 500 ; N questiondown ; B 30 -205 421 492 ;
C 193 ; WX 333 ; N grave ; B 85 516 297 697 ;
C 194 ; WX 333 ; N acute ; B 139 516 379 697 ;
C 195 ; WX 333 ; N circumflex ; B 40 516 367 690 ;
C 196 ; WX 333 ; N tilde ; B 48 536 407 655 ;
C 197 ; WX 333 ; N macron ; B 51 553 393 623 ;
C 198 ; WX 333 ; N breve ; B 71 516 387 678 ;
C 199 ; WX 333 ; N dotaccent ; B 163 550 298 684 ;
C 200 ; WX 333 ; N dieresis ; B 55 550 402 684 ;
C 202 ; WX 333 ; N ring ; B 127 516 340 729 ;
C 203 ; WX 333 ; N cedilla ; B -80 -218 156 5 ;
C 205 ; WX 333 ; N hungarumlaut ; B 69 516 498 697 ;
C 206 ; WX 333 ; N ogonek ; B 15 -183 244 34 ;
C 207 ; WX 333 ; N caron ; B 79 516 411 690 ;
C 208 ; WX 1000 ; N emdash ; B -40 178 977 269 ;
C 225 ; WX 944 ; N AE ; B -64 0 918 669 ;
C 227 ; WX 266 ; N ordfeminine ; B 16 399 330 685 ;
C 232 ; WX 611 ; N Lslash ; B -22 0 590 669 ;
C 233 ; WX 722 ; N Oslash ; B 27 -125 691 764 ;
C 234 ; WX 944 ; N OE ; B 23 -8 946 677 ;
C 235 ; WX 300 ; N ordmasculine ; B 56 400 347 685 ;
C 241 ; WX 722 ; N ae ; B -5 -13 673 462 ;
C 245 ; WX 278 ; N dotlessi ; B 2 -9 238 462 ;
C 248 ; WX 278 ; N lslash ; B -7 -9 307 699 ;
C 249 ; WX 500 ; N oslash ; B -3 -119 441 560 ;
C 250 ; WX 722 ; N oe ; B 6 -13 674 462 ;
C 251 ; WX 500 ; N germandbls ; B -200 -200 473 705 ;
C -1 ; WX 389 ; N Idieresis ; B -32 0 450 862 ;
C -1 ; WX 444 ; N eacute ; B 5 -13 435 697 ;
C -1 ; WX 500 ; N abreve ; B -21 -14 471 678 ;
C -1 ; WX 556 ; N uhungarumlaut ; B 15 -9 610 697 ;
C -1 ; WX 444 ; N ecaron ; B 5 -13 467 690 ;
C -1 ; WX 611 ; N Ydieresis ; B 73 0 659 862 ;
C -1 ; WX 570 ; N divide ; B 33 -29 537 535 ;
C -1 ; WX 611 ; N Yacute ; B 73 0 659 904 ;
C -1 ; WX 667 ; N Acircumflex ; B -67 0 593 897 ;
C -1 ; WX 500 ; N aacute ; B -21 -14 463 697 ;
C -1 ; WX 722 ; N Ucircumflex ; B 67 -18 744 897 ;
C -1 ; WX 444 ; N yacute ; B -94 -205 435 697 ;
C -1 ; WX 389 ; N scommaaccent ; B -19 -218 333 462 ;
C -1 ; WX 444 ; N ecircumflex ; B 5 -13 423 690 ;
C -1 ; WX 722 ; N Uring ; B 67 -18 744 921 ;
C -1 ; WX 722 ; N Udieresis ; B 67 -18 744 862 ;
C -1 ; WX 500 ; N aogonek ; B -21 -183 455 462 ;
C -1 ; WX 722 ; N Uacute ; B 67 -18 744 904 ;
C -1 ; WX 556 ; N uogonek ; B 15 -183 492 462 ;
C -1 ; WX 667 ; N Edieresis ; B -27 0 653 862 ;
C -1 ; WX 722 ; N Dcroat ; B -31 0 700 669 ;
C -1 ; WX 250 ; N commaaccent ; B -36 -218 131 -50 ;
C -1 ; WX 747 ; N copyright ; B 30 -18 718 685 ;
C -1 ; WX 667 ; N Emacron ; B -27 0 653 830 ;
C -1 ; WX 444 ; N ccaron ; B -5 -13 467 690 ;
C -1 ; WX 500 ; N aring ; B -21 -14 455 729 ;
C -1 ; WX 722 ; N Ncommaaccent ; B -27 -218 748 669 ;
C -1 ; WX 278 ; N lacute ; B 2 -9 392 904 ;
C -1 ; WX 500 ; N agrave ; B -21 -14 455 697 ;
C -1 ; WX 611 ; N Tcommaaccent ; B 50 -218 650 669 ;
C -1 ; WX 667 ; N Cacute ; B 32 -18 677 904 ;
C -1 ; WX 500 ; N atilde ; B -21 -14 491 655 ;
C -1 ; WX 667 ; N Edotaccent ; B -27 0 653 862 ;
C -1 ; WX 389 ; N scaron ; B -19 -13 424 690 ;
C -1 ; WX 389 ; N scedilla ; B -19 -218 333 462 ;
C -1 ; WX 278 ; N iacute ; B 2 -9 352 697 ;
C -1 ; WX 494 ; N lozenge ; B 10 0 484 745 ;
C -1 ; WX 667 ; N Rcaron ; B -29 0 623 897 ;
C -1 ; WX 722 ; N Gcommaaccent ; B 21 -218 706 685 ;
C -1 ; WX 556 ; N ucircumflex ; B 15 -9 492 690 ;
C -1 ; WX 500 ; N acircumflex ; B -21 -14 455 690 ;
C -1 ; WX 667 ; N Amacron ; B -67 0 593 830 ;
C -1 ; WX 389 ; N rcaron ; B -21 0 424 690 ;
C -1 ; WX 444 ; N ccedilla ; B -5 -218 392 462 ;
C -1 ; WX 611 ; N Zdotaccent ; B -11 0 590 862 ;
C -1 ; WX 611 ; N Thorn ; B -27 0 573 669 ;
C -1 ; WX 722 ; N Omacron ; B 27 -18 691 830 ;
C -1 ; WX 667 ; N Racute ; B -29 0 623 904 ;
C -1 ; WX 556 ; N Sacute ; B 2 -18 531 904 ;
C -1 ; WX 608 ; N dcaron ; B -21 -13 675 708 ;
C -1 ; WX 722 ; N Umacron ; B 67 -18 744 830 ;
C -1 ; WX 556 ; N uring ; B 15 -9 492 729 ;
C -1 ; WX 300 ; N threesuperior ; B 17 265 321 683 ;
C -1 ; WX 722 ; N Ograve ; B 27 -18 691 904 ;
C -1 ; WX 667 ; N Agrave ; B -67 0 593 904 ;
C -1 ; WX 667 ; N Abreve ; B -67 0 593 885 ;
C -1 ; WX 570 ; N multiply ; B 48 16 522 490 ;
C -1 ; WX 556 ; N uacute ; B 15 -9 492 697 ;
C -1 ; WX 611 ; N Tcaron ; B 50 0 650 897 ;
C -1 ; WX 494 ; N partialdiff ; B 11 -21 494 750 ;
C -1 ; WX 444 ; N ydieresis ; B -94 -205 443 655 ;
C -1 ; WX 722 ; N Nacute ; B -27 -15 748 904 ;
C -1 ; WX 278 ; N icircumflex ; B -3 -9 324 690 ;
C -1 ; WX 667 ; N Ecircumflex ; B -27 0 653 897 ;
C -1 ; WX 500 ; N adieresis ; B -21 -14 476 655 ;
C -1 ; WX 444 ; N edieresis ; B 5 -13 448 655 ;
C -1 ; WX 444 ; N cacute ; B -5 -13 435 697 ;
C -1 ; WX 556 ; N nacute ; B -6 -9 493 697 ;
C -1 ; WX 556 ; N umacron ; B 15 -9 492 623 ;
C -1 ; WX 722 ; N Ncaron ; B -27 -15 748 897 ;
C -1 ; WX 389 ; N Iacute ; B -32 0 432 904 ;
C -1 ; WX 570 ; N plusminus ; B 33 0 537 506 ;
C -1 ; WX 220 ; N brokenbar ; B 66 -143 154 707 ;
C -1 ; WX 747 ; N registered ; B 30 -18 718 685 ;
C -1 ; WX 722 ; N Gbreve ; B 21 -18 706 885 ;
C -1 ; WX 389 ; N Idotaccent ; B -32 0 406 862 ;
C -1 ; WX 600 ; N summation ; B 14 -10 585 706 ;
C -1 ; WX 667 ; N Egrave ; B -27 0 653 904 ;
C -1 ; WX 389 ; N racute ; B -21 0 407 697 ;
C -1 ; WX 500 ; N omacron ; B -3 -13 462 623 ;
C -1 ; WX 611 ; N Zacute ; B -11 0 590 904 ;
C -1 ; WX 611 ; N Zcaron ; B -11 0 590 897 ;
C -1 ; WX 549 ; N greaterequal ; B 26 0 523 704 ;
C -1 ; WX 722 ; N Eth ; B -31 0 700 669 ;
C -1 ; WX 667 ; N Ccedilla ; B 32 -218 677 685 ;
C -1 ; WX 278 ; N lcommaaccent ; B -42 -218 290 699 ;
C -1 ; WX 366 ; N tcaron ; B -11 -9 434 754 ;
C -1 ; WX 444 ; N eogonek ; B 5 -183 398 462 ;
C -1 ; WX 722 ; N Uogonek ; B 67 -183 744 669 ;
C -1 ; WX 667 ; N Aacute ; B -67 0 593 904 ;
C -1 ; WX 667 ; N Adieresis ; B -67 0 593 862 ;
C -1 ; WX 444 ; N egrave ; B 5 -13 398 697 ;
C -1 ; WX 389 ; N zacute ; B -43 -78 407 697 ;
C -1 ; WX 278 ; N iogonek ; B -20 -183 263 684 ;
C -1 ; WX 722 ; N Oacute ; B 27 -18 691 904 ;
C -1 ; WX 500 ; N oacute ; B -3 -13 463 697 ;
C -1 ; WX 500 ; N amacron ; B -21 -14 467 623 ;
C -1 ; WX 389 ; N sacute ; B -19 -13 407 697 ;
C -1 ; WX 278 ; N idieresis ; B 2 -9 364 655 ;
C -1 ; WX 722 ; N Ocircumflex ; B 27 -18 691 897 ;
C -1 ; WX 722 ; N Ugrave ; B 67 -18 744 904 ;
C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;
C -1 ; WX 500 ; N thorn ; B -120 -205 446 699 ;
C -1 ; WX 300 ; N twosuperior ; B 2 274 313 683 ;
C -1 ; WX 722 ; N Odieresis ; B 27 -18 691 862 ;
C -1 ; WX 576 ; N mu ; B -60 -207 516 449 ;
C -1 ; WX 278 ; N igrave ; B 2 -9 259 697 ;
C -1 ; WX 500 ; N ohungarumlaut ; B -3 -13 582 697 ;
C -1 ; WX 667 ; N Eogonek ; B -27 -183 653 669 ;
C -1 ; WX 500 ; N dcroat ; B -21 -13 552 699 ;
C -1 ; WX 750 ; N threequarters ; B 7 -14 726 683 ;
C -1 ; WX 556 ; N Scedilla ; B 2 -218 526 685 ;
C -1 ; WX 382 ; N lcaron ; B 2 -9 448 708 ;
C -1 ; WX 667 ; N Kcommaaccent ; B -21 -218 702 669 ;
C -1 ; WX 611 ; N Lacute ; B -22 0 590 904 ;
C -1 ; WX 1000 ; N trademark ; B 32 263 968 669 ;
C -1 ; WX 444 ; N edotaccent ; B 5 -13 398 655 ;
C -1 ; WX 389 ; N Igrave ; B -32 0 406 904 ;
C -1 ; WX 389 ; N Imacron ; B -32 0 461 830 ;
C -1 ; WX 611 ; N Lcaron ; B -22 0 671 718 ;
C -1 ; WX 750 ; N onehalf ; B -9 -14 723 683 ;
C -1 ; WX 549 ; N lessequal ; B 29 0 526 704 ;
C -1 ; WX 500 ; N ocircumflex ; B -3 -13 451 690 ;
C -1 ; WX 556 ; N ntilde ; B -6 -9 504 655 ;
C -1 ; WX 722 ; N Uhungarumlaut ; B 67 -18 744 904 ;
C -1 ; WX 667 ; N Eacute ; B -27 0 653 904 ;
C -1 ; WX 444 ; N emacron ; B 5 -13 439 623 ;
C -1 ; WX 500 ; N gbreve ; B -52 -203 478 678 ;
C -1 ; WX 750 ; N onequarter ; B 7 -14 721 683 ;
C -1 ; WX 556 ; N Scaron ; B 2 -18 553 897 ;
C -1 ; WX 556 ; N Scommaaccent ; B 2 -218 526 685 ;
C -1 ; WX 722 ; N Ohungarumlaut ; B 27 -18 723 904 ;
C -1 ; WX 400 ; N degree ; B 83 397 369 683 ;
C -1 ; WX 500 ; N ograve ; B -3 -13 441 697 ;
C -1 ; WX 667 ; N Ccaron ; B 32 -18 677 897 ;
C -1 ; WX 556 ; N ugrave ; B 15 -9 492 697 ;
C -1 ; WX 549 ; N radical ; B 10 -46 512 850 ;
C -1 ; WX 722 ; N Dcaron ; B -46 0 685 897 ;
C -1 ; WX 389 ; N rcommaaccent ; B -67 -218 389 462 ;
C -1 ; WX 722 ; N Ntilde ; B -27 -15 748 862 ;
C -1 ; WX 500 ; N otilde ; B -3 -13 491 655 ;
C -1 ; WX 667 ; N Rcommaaccent ; B -29 -218 623 669 ;
C -1 ; WX 611 ; N Lcommaaccent ; B -22 -218 590 669 ;
C -1 ; WX 667 ; N Atilde ; B -67 0 593 862 ;
C -1 ; WX 667 ; N Aogonek ; B -67 -183 604 683 ;
C -1 ; WX 667 ; N Aring ; B -67 0 593 921 ;
C -1 ; WX 722 ; N Otilde ; B 27 -18 691 862 ;
C -1 ; WX 389 ; N zdotaccent ; B -43 -78 368 655 ;
C -1 ; WX 667 ; N Ecaron ; B -27 0 653 897 ;
C -1 ; WX 389 ; N Iogonek ; B -32 -183 406 669 ;
C -1 ; WX 500 ; N kcommaaccent ; B -23 -218 483 699 ;
C -1 ; WX 606 ; N minus ; B 51 209 555 297 ;
C -1 ; WX 389 ; N Icircumflex ; B -32 0 450 897 ;
C -1 ; WX 556 ; N ncaron ; B -6 -9 523 690 ;
C -1 ; WX 278 ; N tcommaaccent ; B -62 -218 281 594 ;
C -1 ; WX 606 ; N logicalnot ; B 51 108 555 399 ;
C -1 ; WX 500 ; N odieresis ; B -3 -13 471 655 ;
C -1 ; WX 556 ; N udieresis ; B 15 -9 499 655 ;
C -1 ; WX 549 ; N notequal ; B 15 -49 540 570 ;
C -1 ; WX 500 ; N gcommaaccent ; B -52 -203 478 767 ;
C -1 ; WX 500 ; N eth ; B -3 -13 454 699 ;
C -1 ; WX 389 ; N zcaron ; B -43 -78 424 690 ;
C -1 ; WX 556 ; N ncommaaccent ; B -6 -218 493 462 ;
C -1 ; WX 300 ; N onesuperior ; B 30 274 301 683 ;
C -1 ; WX 278 ; N imacron ; B 2 -9 294 623 ;
C -1 ; WX 500 ; N Euro ; B 0 0 0 0 ;
EndCharMetrics
StartKernData
StartKernPairs 2038
KPX A C -65
KPX A Cacute -65
KPX A Ccaron -65
KPX A Ccedilla -65
KPX A G -60
KPX A Gbreve -60
KPX A Gcommaaccent -60
KPX A O -50
KPX A Oacute -50
KPX A Ocircumflex -50
KPX A Odieresis -50
KPX A Ograve -50
KPX A Ohungarumlaut -50
KPX A Omacron -50
KPX A Oslash -50
KPX A Otilde -50
KPX A Q -55
KPX A T -55
KPX A Tcaron -55
KPX A Tcommaaccent -55
KPX A U -50
KPX A Uacute -50
KPX A Ucircumflex -50
KPX A Udieresis -50
KPX A Ugrave -50
KPX A Uhungarumlaut -50
KPX A Umacron -50
KPX A Uogonek -50
KPX A Uring -50
KPX A V -95
KPX A W -100
KPX A Y -70
KPX A Yacute -70
KPX A Ydieresis -70
KPX A quoteright -74
KPX A u -30
KPX A uacute -30
KPX A ucircumflex -30
KPX A udieresis -30
KPX A ugrave -30
KPX A uhungarumlaut -30
KPX A umacron -30
KPX A uogonek -30
KPX A uring -30
KPX A v -74
KPX A w -74
KPX A y -74
KPX A yacute -74
KPX A ydieresis -74
KPX Aacute C -65
KPX Aacute Cacute -65
KPX Aacute Ccaron -65
KPX Aacute Ccedilla -65
KPX Aacute G -60
KPX Aacute Gbreve -60
KPX Aacute Gcommaaccent -60
KPX Aacute O -50
KPX Aacute Oacute -50
KPX Aacute Ocircumflex -50
KPX Aacute Odieresis -50
KPX Aacute Ograve -50
KPX Aacute Ohungarumlaut -50
KPX Aacute Omacron -50
KPX Aacute Oslash -50
KPX Aacute Otilde -50
KPX Aacute Q -55
KPX Aacute T -55
KPX Aacute Tcaron -55
KPX Aacute Tcommaaccent -55
KPX Aacute U -50
KPX Aacute Uacute -50
KPX Aacute Ucircumflex -50
KPX Aacute Udieresis -50
KPX Aacute Ugrave -50
KPX Aacute Uhungarumlaut -50
KPX Aacute Umacron -50
KPX Aacute Uogonek -50
KPX Aacute Uring -50
KPX Aacute V -95
KPX Aacute W -100
KPX Aacute Y -70
KPX Aacute Yacute -70
KPX Aacute Ydieresis -70
KPX Aacute quoteright -74
KPX Aacute u -30
KPX Aacute uacute -30
KPX Aacute ucircumflex -30
KPX Aacute udieresis -30
KPX Aacute ugrave -30
KPX Aacute uhungarumlaut -30
KPX Aacute umacron -30
KPX Aacute uogonek -30
KPX Aacute uring -30
KPX Aacute v -74
KPX Aacute w -74
KPX Aacute y -74
KPX Aacute yacute -74
KPX Aacute ydieresis -74
KPX Abreve C -65
KPX Abreve Cacute -65
KPX Abreve Ccaron -65
KPX Abreve Ccedilla -65
KPX Abreve G -60
KPX Abreve Gbreve -60
KPX Abreve Gcommaaccent -60
KPX Abreve O -50
KPX Abreve Oacute -50
KPX Abreve Ocircumflex -50
KPX Abreve Odieresis -50
KPX Abreve Ograve -50
KPX Abreve Ohungarumlaut -50
KPX Abreve Omacron -50
KPX Abreve Oslash -50
KPX Abreve Otilde -50
KPX Abreve Q -55
KPX Abreve T -55
KPX Abreve Tcaron -55
KPX Abreve Tcommaaccent -55
KPX Abreve U -50
KPX Abreve Uacute -50
KPX Abreve Ucircumflex -50
KPX Abreve Udieresis -50
KPX Abreve Ugrave -50
KPX Abreve Uhungarumlaut -50
KPX Abreve Umacron -50
KPX Abreve Uogonek -50
KPX Abreve Uring -50
KPX Abreve V -95
KPX Abreve W -100
KPX Abreve Y -70
KPX Abreve Yacute -70
KPX Abreve Ydieresis -70
KPX Abreve quoteright -74
KPX Abreve u -30
KPX Abreve uacute -30
KPX Abreve ucircumflex -30
KPX Abreve udieresis -30
KPX Abreve ugrave -30
KPX Abreve uhungarumlaut -30
KPX Abreve umacron -30
KPX Abreve uogonek -30
KPX Abreve uring -30
KPX Abreve v -74
KPX Abreve w -74
KPX Abreve y -74
KPX Abreve yacute -74
KPX Abreve ydieresis -74
KPX Acircumflex C -65
KPX Acircumflex Cacute -65
KPX Acircumflex Ccaron -65
KPX Acircumflex Ccedilla -65
KPX Acircumflex G -60
KPX Acircumflex Gbreve -60
KPX Acircumflex Gcommaaccent -60
KPX Acircumflex O -50
KPX Acircumflex Oacute -50
KPX Acircumflex Ocircumflex -50
KPX Acircumflex Odieresis -50
KPX Acircumflex Ograve -50
KPX Acircumflex Ohungarumlaut -50
KPX Acircumflex Omacron -50
KPX Acircumflex Oslash -50
KPX Acircumflex Otilde -50
KPX Acircumflex Q -55
KPX Acircumflex T -55
KPX Acircumflex Tcaron -55
KPX Acircumflex Tcommaaccent -55
KPX Acircumflex U -50
KPX Acircumflex Uacute -50
KPX Acircumflex Ucircumflex -50
KPX Acircumflex Udieresis -50
KPX Acircumflex Ugrave -50
KPX Acircumflex Uhungarumlaut -50
KPX Acircumflex Umacron -50
KPX Acircumflex Uogonek -50
KPX Acircumflex Uring -50
KPX Acircumflex V -95
KPX Acircumflex W -100
KPX Acircumflex Y -70
KPX Acircumflex Yacute -70
KPX Acircumflex Ydieresis -70
KPX Acircumflex quoteright -74
KPX Acircumflex u -30
KPX Acircumflex uacute -30
KPX Acircumflex ucircumflex -30
KPX Acircumflex udieresis -30
KPX Acircumflex ugrave -30
KPX Acircumflex uhungarumlaut -30
KPX Acircumflex umacron -30
KPX Acircumflex uogonek -30
KPX Acircumflex uring -30
KPX Acircumflex v -74
KPX Acircumflex w -74
KPX Acircumflex y -74
KPX Acircumflex yacute -74
KPX Acircumflex ydieresis -74
KPX Adieresis C -65
KPX Adieresis Cacute -65
KPX Adieresis Ccaron -65
KPX Adieresis Ccedilla -65
KPX Adieresis G -60
KPX Adieresis Gbreve -60
KPX Adieresis Gcommaaccent -60
KPX Adieresis O -50
KPX Adieresis Oacute -50
KPX Adieresis Ocircumflex -50
KPX Adieresis Odieresis -50
KPX Adieresis Ograve -50
KPX Adieresis Ohungarumlaut -50
KPX Adieresis Omacron -50
KPX Adieresis Oslash -50
KPX Adieresis Otilde -50
KPX Adieresis Q -55
KPX Adieresis T -55
KPX Adieresis Tcaron -55
KPX Adieresis Tcommaaccent -55
KPX Adieresis U -50
KPX Adieresis Uacute -50
KPX Adieresis Ucircumflex -50
KPX Adieresis Udieresis -50
KPX Adieresis Ugrave -50
KPX Adieresis Uhungarumlaut -50
KPX Adieresis Umacron -50
KPX Adieresis Uogonek -50
KPX Adieresis Uring -50
KPX Adieresis V -95
KPX Adieresis W -100
KPX Adieresis Y -70
KPX Adieresis Yacute -70
KPX Adieresis Ydieresis -70
KPX Adieresis quoteright -74
KPX Adieresis u -30
KPX Adieresis uacute -30
KPX Adieresis ucircumflex -30
KPX Adieresis udieresis -30
KPX Adieresis ugrave -30
KPX Adieresis uhungarumlaut -30
KPX Adieresis umacron -30
KPX Adieresis uogonek -30
KPX Adieresis uring -30
KPX Adieresis v -74
KPX Adieresis w -74
KPX Adieresis y -74
KPX Adieresis yacute -74
KPX Adieresis ydieresis -74
KPX Agrave C -65
KPX Agrave Cacute -65
KPX Agrave Ccaron -65
KPX Agrave Ccedilla -65
KPX Agrave G -60
KPX Agrave Gbreve -60
KPX Agrave Gcommaaccent -60
KPX Agrave O -50
KPX Agrave Oacute -50
KPX Agrave Ocircumflex -50
KPX Agrave Odieresis -50
KPX Agrave Ograve -50
KPX Agrave Ohungarumlaut -50
KPX Agrave Omacron -50
KPX Agrave Oslash -50
KPX Agrave Otilde -50
KPX Agrave Q -55
KPX Agrave T -55
KPX Agrave Tcaron -55
KPX Agrave Tcommaaccent -55
KPX Agrave U -50
KPX Agrave Uacute -50
KPX Agrave Ucircumflex -50
KPX Agrave Udieresis -50
KPX Agrave Ugrave -50
KPX Agrave Uhungarumlaut -50
KPX Agrave Umacron -50
KPX Agrave Uogonek -50
KPX Agrave Uring -50
KPX Agrave V -95
KPX Agrave W -100
KPX Agrave Y -70
KPX Agrave Yacute -70
KPX Agrave Ydieresis -70
KPX Agrave quoteright -74
KPX Agrave u -30
KPX Agrave uacute -30
KPX Agrave ucircumflex -30
KPX Agrave udieresis -30
KPX Agrave ugrave -30
KPX Agrave uhungarumlaut -30
KPX Agrave umacron -30
KPX Agrave uogonek -30
KPX Agrave uring -30
KPX Agrave v -74
KPX Agrave w -74
KPX Agrave y -74
KPX Agrave yacute -74
KPX Agrave ydieresis -74
KPX Amacron C -65
KPX Amacron Cacute -65
KPX Amacron Ccaron -65
KPX Amacron Ccedilla -65
KPX Amacron G -60
KPX Amacron Gbreve -60
KPX Amacron Gcommaaccent -60
KPX Amacron O -50
KPX Amacron Oacute -50
KPX Amacron Ocircumflex -50
KPX Amacron Odieresis -50
KPX Amacron Ograve -50
KPX Amacron Ohungarumlaut -50
KPX Amacron Omacron -50
KPX Amacron Oslash -50
KPX Amacron Otilde -50
KPX Amacron Q -55
KPX Amacron T -55
KPX Amacron Tcaron -55
KPX Amacron Tcommaaccent -55
KPX Amacron U -50
KPX Amacron Uacute -50
KPX Amacron Ucircumflex -50
KPX Amacron Udieresis -50
KPX Amacron Ugrave -50
KPX Amacron Uhungarumlaut -50
KPX Amacron Umacron -50
KPX Amacron Uogonek -50
KPX Amacron Uring -50
KPX Amacron V -95
KPX Amacron W -100
KPX Amacron Y -70
KPX Amacron Yacute -70
KPX Amacron Ydieresis -70
KPX Amacron quoteright -74
KPX Amacron u -30
KPX Amacron uacute -30
KPX Amacron ucircumflex -30
KPX Amacron udieresis -30
KPX Amacron ugrave -30
KPX Amacron uhungarumlaut -30
KPX Amacron umacron -30
KPX Amacron uogonek -30
KPX Amacron uring -30
KPX Amacron v -74
KPX Amacron w -74
KPX Amacron y -74
KPX Amacron yacute -74
KPX Amacron ydieresis -74
KPX Aogonek C -65
KPX Aogonek Cacute -65
KPX Aogonek Ccaron -65
KPX Aogonek Ccedilla -65
KPX Aogonek G -60
KPX Aogonek Gbreve -60
KPX Aogonek Gcommaaccent -60
KPX Aogonek O -50
KPX Aogonek Oacute -50
KPX Aogonek Ocircumflex -50
KPX Aogonek Odieresis -50
KPX Aogonek Ograve -50
KPX Aogonek Ohungarumlaut -50
KPX Aogonek Omacron -50
KPX Aogonek Oslash -50
KPX Aogonek Otilde -50
KPX Aogonek Q -55
KPX Aogonek T -55
KPX Aogonek Tcaron -55
KPX Aogonek Tcommaaccent -55
KPX Aogonek U -50
KPX Aogonek Uacute -50
KPX Aogonek Ucircumflex -50
KPX Aogonek Udieresis -50
KPX Aogonek Ugrave -50
KPX Aogonek Uhungarumlaut -50
KPX Aogonek Umacron -50
KPX Aogonek Uogonek -50
KPX Aogonek Uring -50
KPX Aogonek V -95
KPX Aogonek W -100
KPX Aogonek Y -70
KPX Aogonek Yacute -70
KPX Aogonek Ydieresis -70
KPX Aogonek quoteright -74
KPX Aogonek u -30
KPX Aogonek uacute -30
KPX Aogonek ucircumflex -30
KPX Aogonek udieresis -30
KPX Aogonek ugrave -30
KPX Aogonek uhungarumlaut -30
KPX Aogonek umacron -30
KPX Aogonek uogonek -30
KPX Aogonek uring -30
KPX Aogonek v -74
KPX Aogonek w -74
KPX Aogonek y -34
KPX Aogonek yacute -34
KPX Aogonek ydieresis -34
KPX Aring C -65
KPX Aring Cacute -65
KPX Aring Ccaron -65
KPX Aring Ccedilla -65
KPX Aring G -60
KPX Aring Gbreve -60
KPX Aring Gcommaaccent -60
KPX Aring O -50
KPX Aring Oacute -50
KPX Aring Ocircumflex -50
KPX Aring Odieresis -50
KPX Aring Ograve -50
KPX Aring Ohungarumlaut -50
KPX Aring Omacron -50
KPX Aring Oslash -50
KPX Aring Otilde -50
KPX Aring Q -55
KPX Aring T -55
KPX Aring Tcaron -55
KPX Aring Tcommaaccent -55
KPX Aring U -50
KPX Aring Uacute -50
KPX Aring Ucircumflex -50
KPX Aring Udieresis -50
KPX Aring Ugrave -50
KPX Aring Uhungarumlaut -50
KPX Aring Umacron -50
KPX Aring Uogonek -50
KPX Aring Uring -50
KPX Aring V -95
KPX Aring W -100
KPX Aring Y -70
KPX Aring Yacute -70
KPX Aring Ydieresis -70
KPX Aring quoteright -74
KPX Aring u -30
KPX Aring uacute -30
KPX Aring ucircumflex -30
KPX Aring udieresis -30
KPX Aring ugrave -30
KPX Aring uhungarumlaut -30
KPX Aring umacron -30
KPX Aring uogonek -30
KPX Aring uring -30
KPX Aring v -74
KPX Aring w -74
KPX Aring y -74
KPX Aring yacute -74
KPX Aring ydieresis -74
KPX Atilde C -65
KPX Atilde Cacute -65
KPX Atilde Ccaron -65
KPX Atilde Ccedilla -65
KPX Atilde G -60
KPX Atilde Gbreve -60
KPX Atilde Gcommaaccent -60
KPX Atilde O -50
KPX Atilde Oacute -50
KPX Atilde Ocircumflex -50
KPX Atilde Odieresis -50
KPX Atilde Ograve -50
KPX Atilde Ohungarumlaut -50
KPX Atilde Omacron -50
KPX Atilde Oslash -50
KPX Atilde Otilde -50
KPX Atilde Q -55
KPX Atilde T -55
KPX Atilde Tcaron -55
KPX Atilde Tcommaaccent -55
KPX Atilde U -50
KPX Atilde Uacute -50
KPX Atilde Ucircumflex -50
KPX Atilde Udieresis -50
KPX Atilde Ugrave -50
KPX Atilde Uhungarumlaut -50
KPX Atilde Umacron -50
KPX Atilde Uogonek -50
KPX Atilde Uring -50
KPX Atilde V -95
KPX Atilde W -100
KPX Atilde Y -70
KPX Atilde Yacute -70
KPX Atilde Ydieresis -70
KPX Atilde quoteright -74
KPX Atilde u -30
KPX Atilde uacute -30
KPX Atilde ucircumflex -30
KPX Atilde udieresis -30
KPX Atilde ugrave -30
KPX Atilde uhungarumlaut -30
KPX Atilde umacron -30
KPX Atilde uogonek -30
KPX Atilde uring -30
KPX Atilde v -74
KPX Atilde w -74
KPX Atilde y -74
KPX Atilde yacute -74
KPX Atilde ydieresis -74
KPX B A -25
KPX B Aacute -25
KPX B Abreve -25
KPX B Acircumflex -25
KPX B Adieresis -25
KPX B Agrave -25
KPX B Amacron -25
KPX B Aogonek -25
KPX B Aring -25
KPX B Atilde -25
KPX B U -10
KPX B Uacute -10
KPX B Ucircumflex -10
KPX B Udieresis -10
KPX B Ugrave -10
KPX B Uhungarumlaut -10
KPX B Umacron -10
KPX B Uogonek -10
KPX B Uring -10
KPX D A -25
KPX D Aacute -25
KPX D Abreve -25
KPX D Acircumflex -25
KPX D Adieresis -25
KPX D Agrave -25
KPX D Amacron -25
KPX D Aogonek -25
KPX D Aring -25
KPX D Atilde -25
KPX D V -50
KPX D W -40
KPX D Y -50
KPX D Yacute -50
KPX D Ydieresis -50
KPX Dcaron A -25
KPX Dcaron Aacute -25
KPX Dcaron Abreve -25
KPX Dcaron Acircumflex -25
KPX Dcaron Adieresis -25
KPX Dcaron Agrave -25
KPX Dcaron Amacron -25
KPX Dcaron Aogonek -25
KPX Dcaron Aring -25
KPX Dcaron Atilde -25
KPX Dcaron V -50
KPX Dcaron W -40
KPX Dcaron Y -50
KPX Dcaron Yacute -50
KPX Dcaron Ydieresis -50
KPX Dcroat A -25
KPX Dcroat Aacute -25
KPX Dcroat Abreve -25
KPX Dcroat Acircumflex -25
KPX Dcroat Adieresis -25
KPX Dcroat Agrave -25
KPX Dcroat Amacron -25
KPX Dcroat Aogonek -25
KPX Dcroat Aring -25
KPX Dcroat Atilde -25
KPX Dcroat V -50
KPX Dcroat W -40
KPX Dcroat Y -50
KPX Dcroat Yacute -50
KPX Dcroat Ydieresis -50
KPX F A -100
KPX F Aacute -100
KPX F Abreve -100
KPX F Acircumflex -100
KPX F Adieresis -100
KPX F Agrave -100
KPX F Amacron -100
KPX F Aogonek -100
KPX F Aring -100
KPX F Atilde -100
KPX F a -95
KPX F aacute -95
KPX F abreve -95
KPX F acircumflex -95
KPX F adieresis -95
KPX F agrave -95
KPX F amacron -95
KPX F aogonek -95
KPX F aring -95
KPX F atilde -95
KPX F comma -129
KPX F e -100
KPX F eacute -100
KPX F ecaron -100
KPX F ecircumflex -100
KPX F edieresis -100
KPX F edotaccent -100
KPX F egrave -100
KPX F emacron -100
KPX F eogonek -100
KPX F i -40
KPX F iacute -40
KPX F icircumflex -40
KPX F idieresis -40
KPX F igrave -40
KPX F imacron -40
KPX F iogonek -40
KPX F o -70
KPX F oacute -70
KPX F ocircumflex -70
KPX F odieresis -70
KPX F ograve -70
KPX F ohungarumlaut -70
KPX F omacron -70
KPX F oslash -70
KPX F otilde -70
KPX F period -129
KPX F r -50
KPX F racute -50
KPX F rcaron -50
KPX F rcommaaccent -50
KPX J A -25
KPX J Aacute -25
KPX J Abreve -25
KPX J Acircumflex -25
KPX J Adieresis -25
KPX J Agrave -25
KPX J Amacron -25
KPX J Aogonek -25
KPX J Aring -25
KPX J Atilde -25
KPX J a -40
KPX J aacute -40
KPX J abreve -40
KPX J acircumflex -40
KPX J adieresis -40
KPX J agrave -40
KPX J amacron -40
KPX J aogonek -40
KPX J aring -40
KPX J atilde -40
KPX J comma -10
KPX J e -40
KPX J eacute -40
KPX J ecaron -40
KPX J ecircumflex -40
KPX J edieresis -40
KPX J edotaccent -40
KPX J egrave -40
KPX J emacron -40
KPX J eogonek -40
KPX J o -40
KPX J oacute -40
KPX J ocircumflex -40
KPX J odieresis -40
KPX J ograve -40
KPX J ohungarumlaut -40
KPX J omacron -40
KPX J oslash -40
KPX J otilde -40
KPX J period -10
KPX J u -40
KPX J uacute -40
KPX J ucircumflex -40
KPX J udieresis -40
KPX J ugrave -40
KPX J uhungarumlaut -40
KPX J umacron -40
KPX J uogonek -40
KPX J uring -40
KPX K O -30
KPX K Oacute -30
KPX K Ocircumflex -30
KPX K Odieresis -30
KPX K Ograve -30
KPX K Ohungarumlaut -30
KPX K Omacron -30
KPX K Oslash -30
KPX K Otilde -30
KPX K e -25
KPX K eacute -25
KPX K ecaron -25
KPX K ecircumflex -25
KPX K edieresis -25
KPX K edotaccent -25
KPX K egrave -25
KPX K emacron -25
KPX K eogonek -25
KPX K o -25
KPX K oacute -25
KPX K ocircumflex -25
KPX K odieresis -25
KPX K ograve -25
KPX K ohungarumlaut -25
KPX K omacron -25
KPX K oslash -25
KPX K otilde -25
KPX K u -20
KPX K uacute -20
KPX K ucircumflex -20
KPX K udieresis -20
KPX K ugrave -20
KPX K uhungarumlaut -20
KPX K umacron -20
KPX K uogonek -20
KPX K uring -20
KPX K y -20
KPX K yacute -20
KPX K ydieresis -20
KPX Kcommaaccent O -30
KPX Kcommaaccent Oacute -30
KPX Kcommaaccent Ocircumflex -30
KPX Kcommaaccent Odieresis -30
KPX Kcommaaccent Ograve -30
KPX Kcommaaccent Ohungarumlaut -30
KPX Kcommaaccent Omacron -30
KPX Kcommaaccent Oslash -30
KPX Kcommaaccent Otilde -30
KPX Kcommaaccent e -25
KPX Kcommaaccent eacute -25
KPX Kcommaaccent ecaron -25
KPX Kcommaaccent ecircumflex -25
KPX Kcommaaccent edieresis -25
KPX Kcommaaccent edotaccent -25
KPX Kcommaaccent egrave -25
KPX Kcommaaccent emacron -25
KPX Kcommaaccent eogonek -25
KPX Kcommaaccent o -25
KPX Kcommaaccent oacute -25
KPX Kcommaaccent ocircumflex -25
KPX Kcommaaccent odieresis -25
KPX Kcommaaccent ograve -25
KPX Kcommaaccent ohungarumlaut -25
KPX Kcommaaccent omacron -25
KPX Kcommaaccent oslash -25
KPX Kcommaaccent otilde -25
KPX Kcommaaccent u -20
KPX Kcommaaccent uacute -20
KPX Kcommaaccent ucircumflex -20
KPX Kcommaaccent udieresis -20
KPX Kcommaaccent ugrave -20
KPX Kcommaaccent uhungarumlaut -20
KPX Kcommaaccent umacron -20
KPX Kcommaaccent uogonek -20
KPX Kcommaaccent uring -20
KPX Kcommaaccent y -20
KPX Kcommaaccent yacute -20
KPX Kcommaaccent ydieresis -20
KPX L T -18
KPX L Tcaron -18
KPX L Tcommaaccent -18
KPX L V -37
KPX L W -37
KPX L Y -37
KPX L Yacute -37
KPX L Ydieresis -37
KPX L quoteright -55
KPX L y -37
KPX L yacute -37
KPX L ydieresis -37
KPX Lacute T -18
KPX Lacute Tcaron -18
KPX Lacute Tcommaaccent -18
KPX Lacute V -37
KPX Lacute W -37
KPX Lacute Y -37
KPX Lacute Yacute -37
KPX Lacute Ydieresis -37
KPX Lacute quoteright -55
KPX Lacute y -37
KPX Lacute yacute -37
KPX Lacute ydieresis -37
KPX Lcommaaccent T -18
KPX Lcommaaccent Tcaron -18
KPX Lcommaaccent Tcommaaccent -18
KPX Lcommaaccent V -37
KPX Lcommaaccent W -37
KPX Lcommaaccent Y -37
KPX Lcommaaccent Yacute -37
KPX Lcommaaccent Ydieresis -37
KPX Lcommaaccent quoteright -55
KPX Lcommaaccent y -37
KPX Lcommaaccent yacute -37
KPX Lcommaaccent ydieresis -37
KPX Lslash T -18
KPX Lslash Tcaron -18
KPX Lslash Tcommaaccent -18
KPX Lslash V -37
KPX Lslash W -37
KPX Lslash Y -37
KPX Lslash Yacute -37
KPX Lslash Ydieresis -37
KPX Lslash quoteright -55
KPX Lslash y -37
KPX Lslash yacute -37
KPX Lslash ydieresis -37
KPX N A -30
KPX N Aacute -30
KPX N Abreve -30
KPX N Acircumflex -30
KPX N Adieresis -30
KPX N Agrave -30
KPX N Amacron -30
KPX N Aogonek -30
KPX N Aring -30
KPX N Atilde -30
KPX Nacute A -30
KPX Nacute Aacute -30
KPX Nacute Abreve -30
KPX Nacute Acircumflex -30
KPX Nacute Adieresis -30
KPX Nacute Agrave -30
KPX Nacute Amacron -30
KPX Nacute Aogonek -30
KPX Nacute Aring -30
KPX Nacute Atilde -30
KPX Ncaron A -30
KPX Ncaron Aacute -30
KPX Ncaron Abreve -30
KPX Ncaron Acircumflex -30
KPX Ncaron Adieresis -30
KPX Ncaron Agrave -30
KPX Ncaron Amacron -30
KPX Ncaron Aogonek -30
KPX Ncaron Aring -30
KPX Ncaron Atilde -30
KPX Ncommaaccent A -30
KPX Ncommaaccent Aacute -30
KPX Ncommaaccent Abreve -30
KPX Ncommaaccent Acircumflex -30
KPX Ncommaaccent Adieresis -30
KPX Ncommaaccent Agrave -30
KPX Ncommaaccent Amacron -30
KPX Ncommaaccent Aogonek -30
KPX Ncommaaccent Aring -30
KPX Ncommaaccent Atilde -30
KPX Ntilde A -30
KPX Ntilde Aacute -30
KPX Ntilde Abreve -30
KPX Ntilde Acircumflex -30
KPX Ntilde Adieresis -30
KPX Ntilde Agrave -30
KPX Ntilde Amacron -30
KPX Ntilde Aogonek -30
KPX Ntilde Aring -30
KPX Ntilde Atilde -30
KPX O A -40
KPX O Aacute -40
KPX O Abreve -40
KPX O Acircumflex -40
KPX O Adieresis -40
KPX O Agrave -40
KPX O Amacron -40
KPX O Aogonek -40
KPX O Aring -40
KPX O Atilde -40
KPX O T -40
KPX O Tcaron -40
KPX O Tcommaaccent -40
KPX O V -50
KPX O W -50
KPX O X -40
KPX O Y -50
KPX O Yacute -50
KPX O Ydieresis -50
KPX Oacute A -40
KPX Oacute Aacute -40
KPX Oacute Abreve -40
KPX Oacute Acircumflex -40
KPX Oacute Adieresis -40
KPX Oacute Agrave -40
KPX Oacute Amacron -40
KPX Oacute Aogonek -40
KPX Oacute Aring -40
KPX Oacute Atilde -40
KPX Oacute T -40
KPX Oacute Tcaron -40
KPX Oacute Tcommaaccent -40
KPX Oacute V -50
KPX Oacute W -50
KPX Oacute X -40
KPX Oacute Y -50
KPX Oacute Yacute -50
KPX Oacute Ydieresis -50
KPX Ocircumflex A -40
KPX Ocircumflex Aacute -40
KPX Ocircumflex Abreve -40
KPX Ocircumflex Acircumflex -40
KPX Ocircumflex Adieresis -40
KPX Ocircumflex Agrave -40
KPX Ocircumflex Amacron -40
KPX Ocircumflex Aogonek -40
KPX Ocircumflex Aring -40
KPX Ocircumflex Atilde -40
KPX Ocircumflex T -40
KPX Ocircumflex Tcaron -40
KPX Ocircumflex Tcommaaccent -40
KPX Ocircumflex V -50
KPX Ocircumflex W -50
KPX Ocircumflex X -40
KPX Ocircumflex Y -50
KPX Ocircumflex Yacute -50
KPX Ocircumflex Ydieresis -50
KPX Odieresis A -40
KPX Odieresis Aacute -40
KPX Odieresis Abreve -40
KPX Odieresis Acircumflex -40
KPX Odieresis Adieresis -40
KPX Odieresis Agrave -40
KPX Odieresis Amacron -40
KPX Odieresis Aogonek -40
KPX Odieresis Aring -40
KPX Odieresis Atilde -40
KPX Odieresis T -40
KPX Odieresis Tcaron -40
KPX Odieresis Tcommaaccent -40
KPX Odieresis V -50
KPX Odieresis W -50
KPX Odieresis X -40
KPX Odieresis Y -50
KPX Odieresis Yacute -50
KPX Odieresis Ydieresis -50
KPX Ograve A -40
KPX Ograve Aacute -40
KPX Ograve Abreve -40
KPX Ograve Acircumflex -40
KPX Ograve Adieresis -40
KPX Ograve Agrave -40
KPX Ograve Amacron -40
KPX Ograve Aogonek -40
KPX Ograve Aring -40
KPX Ograve Atilde -40
KPX Ograve T -40
KPX Ograve Tcaron -40
KPX Ograve Tcommaaccent -40
KPX Ograve V -50
KPX Ograve W -50
KPX Ograve X -40
KPX Ograve Y -50
KPX Ograve Yacute -50
KPX Ograve Ydieresis -50
KPX Ohungarumlaut A -40
KPX Ohungarumlaut Aacute -40
KPX Ohungarumlaut Abreve -40
KPX Ohungarumlaut Acircumflex -40
KPX Ohungarumlaut Adieresis -40
KPX Ohungarumlaut Agrave -40
KPX Ohungarumlaut Amacron -40
KPX Ohungarumlaut Aogonek -40
KPX Ohungarumlaut Aring -40
KPX Ohungarumlaut Atilde -40
KPX Ohungarumlaut T -40
KPX Ohungarumlaut Tcaron -40
KPX Ohungarumlaut Tcommaaccent -40
KPX Ohungarumlaut V -50
KPX Ohungarumlaut W -50
KPX Ohungarumlaut X -40
KPX Ohungarumlaut Y -50
KPX Ohungarumlaut Yacute -50
KPX Ohungarumlaut Ydieresis -50
KPX Omacron A -40
KPX Omacron Aacute -40
KPX Omacron Abreve -40
KPX Omacron Acircumflex -40
KPX Omacron Adieresis -40
KPX Omacron Agrave -40
KPX Omacron Amacron -40
KPX Omacron Aogonek -40
KPX Omacron Aring -40
KPX Omacron Atilde -40
KPX Omacron T -40
KPX Omacron Tcaron -40
KPX Omacron Tcommaaccent -40
KPX Omacron V -50
KPX Omacron W -50
KPX Omacron X -40
KPX Omacron Y -50
KPX Omacron Yacute -50
KPX Omacron Ydieresis -50
KPX Oslash A -40
KPX Oslash Aacute -40
KPX Oslash Abreve -40
KPX Oslash Acircumflex -40
KPX Oslash Adieresis -40
KPX Oslash Agrave -40
KPX Oslash Amacron -40
KPX Oslash Aogonek -40
KPX Oslash Aring -40
KPX Oslash Atilde -40
KPX Oslash T -40
KPX Oslash Tcaron -40
KPX Oslash Tcommaaccent -40
KPX Oslash V -50
KPX Oslash W -50
KPX Oslash X -40
KPX Oslash Y -50
KPX Oslash Yacute -50
KPX Oslash Ydieresis -50
KPX Otilde A -40
KPX Otilde Aacute -40
KPX Otilde Abreve -40
KPX Otilde Acircumflex -40
KPX Otilde Adieresis -40
KPX Otilde Agrave -40
KPX Otilde Amacron -40
KPX Otilde Aogonek -40
KPX Otilde Aring -40
KPX Otilde Atilde -40
KPX Otilde T -40
KPX Otilde Tcaron -40
KPX Otilde Tcommaaccent -40
KPX Otilde V -50
KPX Otilde W -50
KPX Otilde X -40
KPX Otilde Y -50
KPX Otilde Yacute -50
KPX Otilde Ydieresis -50
KPX P A -85
KPX P Aacute -85
KPX P Abreve -85
KPX P Acircumflex -85
KPX P Adieresis -85
KPX P Agrave -85
KPX P Amacron -85
KPX P Aogonek -85
KPX P Aring -85
KPX P Atilde -85
KPX P a -40
KPX P aacute -40
KPX P abreve -40
KPX P acircumflex -40
KPX P adieresis -40
KPX P agrave -40
KPX P amacron -40
KPX P aogonek -40
KPX P aring -40
KPX P atilde -40
KPX P comma -129
KPX P e -50
KPX P eacute -50
KPX P ecaron -50
KPX P ecircumflex -50
KPX P edieresis -50
KPX P edotaccent -50
KPX P egrave -50
KPX P emacron -50
KPX P eogonek -50
KPX P o -55
KPX P oacute -55
KPX P ocircumflex -55
KPX P odieresis -55
KPX P ograve -55
KPX P ohungarumlaut -55
KPX P omacron -55
KPX P oslash -55
KPX P otilde -55
KPX P period -129
KPX Q U -10
KPX Q Uacute -10
KPX Q Ucircumflex -10
KPX Q Udieresis -10
KPX Q Ugrave -10
KPX Q Uhungarumlaut -10
KPX Q Umacron -10
KPX Q Uogonek -10
KPX Q Uring -10
KPX R O -40
KPX R Oacute -40
KPX R Ocircumflex -40
KPX R Odieresis -40
KPX R Ograve -40
KPX R Ohungarumlaut -40
KPX R Omacron -40
KPX R Oslash -40
KPX R Otilde -40
KPX R T -30
KPX R Tcaron -30
KPX R Tcommaaccent -30
KPX R U -40
KPX R Uacute -40
KPX R Ucircumflex -40
KPX R Udieresis -40
KPX R Ugrave -40
KPX R Uhungarumlaut -40
KPX R Umacron -40
KPX R Uogonek -40
KPX R Uring -40
KPX R V -18
KPX R W -18
KPX R Y -18
KPX R Yacute -18
KPX R Ydieresis -18
KPX Racute O -40
KPX Racute Oacute -40
KPX Racute Ocircumflex -40
KPX Racute Odieresis -40
KPX Racute Ograve -40
KPX Racute Ohungarumlaut -40
KPX Racute Omacron -40
KPX Racute Oslash -40
KPX Racute Otilde -40
KPX Racute T -30
KPX Racute Tcaron -30
KPX Racute Tcommaaccent -30
KPX Racute U -40
KPX Racute Uacute -40
KPX Racute Ucircumflex -40
KPX Racute Udieresis -40
KPX Racute Ugrave -40
KPX Racute Uhungarumlaut -40
KPX Racute Umacron -40
KPX Racute Uogonek -40
KPX Racute Uring -40
KPX Racute V -18
KPX Racute W -18
KPX Racute Y -18
KPX Racute Yacute -18
KPX Racute Ydieresis -18
KPX Rcaron O -40
KPX Rcaron Oacute -40
KPX Rcaron Ocircumflex -40
KPX Rcaron Odieresis -40
KPX Rcaron Ograve -40
KPX Rcaron Ohungarumlaut -40
KPX Rcaron Omacron -40
KPX Rcaron Oslash -40
KPX Rcaron Otilde -40
KPX Rcaron T -30
KPX Rcaron Tcaron -30
KPX Rcaron Tcommaaccent -30
KPX Rcaron U -40
KPX Rcaron Uacute -40
KPX Rcaron Ucircumflex -40
KPX Rcaron Udieresis -40
KPX Rcaron Ugrave -40
KPX Rcaron Uhungarumlaut -40
KPX Rcaron Umacron -40
KPX Rcaron Uogonek -40
KPX Rcaron Uring -40
KPX Rcaron V -18
KPX Rcaron W -18
KPX Rcaron Y -18
KPX Rcaron Yacute -18
KPX Rcaron Ydieresis -18
KPX Rcommaaccent O -40
KPX Rcommaaccent Oacute -40
KPX Rcommaaccent Ocircumflex -40
KPX Rcommaaccent Odieresis -40
KPX Rcommaaccent Ograve -40
KPX Rcommaaccent Ohungarumlaut -40
KPX Rcommaaccent Omacron -40
KPX Rcommaaccent Oslash -40
KPX Rcommaaccent Otilde -40
KPX Rcommaaccent T -30
KPX Rcommaaccent Tcaron -30
KPX Rcommaaccent Tcommaaccent -30
KPX Rcommaaccent U -40
KPX Rcommaaccent Uacute -40
KPX Rcommaaccent Ucircumflex -40
KPX Rcommaaccent Udieresis -40
KPX Rcommaaccent Ugrave -40
KPX Rcommaaccent Uhungarumlaut -40
KPX Rcommaaccent Umacron -40
KPX Rcommaaccent Uogonek -40
KPX Rcommaaccent Uring -40
KPX Rcommaaccent V -18
KPX Rcommaaccent W -18
KPX Rcommaaccent Y -18
KPX Rcommaaccent Yacute -18
KPX Rcommaaccent Ydieresis -18
KPX T A -55
KPX T Aacute -55
KPX T Abreve -55
KPX T Acircumflex -55
KPX T Adieresis -55
KPX T Agrave -55
KPX T Amacron -55
KPX T Aogonek -55
KPX T Aring -55
KPX T Atilde -55
KPX T O -18
KPX T Oacute -18
KPX T Ocircumflex -18
KPX T Odieresis -18
KPX T Ograve -18
KPX T Ohungarumlaut -18
KPX T Omacron -18
KPX T Oslash -18
KPX T Otilde -18
KPX T a -92
KPX T aacute -92
KPX T abreve -92
KPX T acircumflex -92
KPX T adieresis -92
KPX T agrave -92
KPX T amacron -92
KPX T aogonek -92
KPX T aring -92
KPX T atilde -92
KPX T colon -74
KPX T comma -92
KPX T e -92
KPX T eacute -92
KPX T ecaron -92
KPX T ecircumflex -92
KPX T edieresis -52
KPX T edotaccent -92
KPX T egrave -52
KPX T emacron -52
KPX T eogonek -92
KPX T hyphen -92
KPX T i -37
KPX T iacute -37
KPX T iogonek -37
KPX T o -95
KPX T oacute -95
KPX T ocircumflex -95
KPX T odieresis -95
KPX T ograve -95
KPX T ohungarumlaut -95
KPX T omacron -95
KPX T oslash -95
KPX T otilde -95
KPX T period -92
KPX T r -37
KPX T racute -37
KPX T rcaron -37
KPX T rcommaaccent -37
KPX T semicolon -74
KPX T u -37
KPX T uacute -37
KPX T ucircumflex -37
KPX T udieresis -37
KPX T ugrave -37
KPX T uhungarumlaut -37
KPX T umacron -37
KPX T uogonek -37
KPX T uring -37
KPX T w -37
KPX T y -37
KPX T yacute -37
KPX T ydieresis -37
KPX Tcaron A -55
KPX Tcaron Aacute -55
KPX Tcaron Abreve -55
KPX Tcaron Acircumflex -55
KPX Tcaron Adieresis -55
KPX Tcaron Agrave -55
KPX Tcaron Amacron -55
KPX Tcaron Aogonek -55
KPX Tcaron Aring -55
KPX Tcaron Atilde -55
KPX Tcaron O -18
KPX Tcaron Oacute -18
KPX Tcaron Ocircumflex -18
KPX Tcaron Odieresis -18
KPX Tcaron Ograve -18
KPX Tcaron Ohungarumlaut -18
KPX Tcaron Omacron -18
KPX Tcaron Oslash -18
KPX Tcaron Otilde -18
KPX Tcaron a -92
KPX Tcaron aacute -92
KPX Tcaron abreve -92
KPX Tcaron acircumflex -92
KPX Tcaron adieresis -92
KPX Tcaron agrave -92
KPX Tcaron amacron -92
KPX Tcaron aogonek -92
KPX Tcaron aring -92
KPX Tcaron atilde -92
KPX Tcaron colon -74
KPX Tcaron comma -92
KPX Tcaron e -92
KPX Tcaron eacute -92
KPX Tcaron ecaron -92
KPX Tcaron ecircumflex -92
KPX Tcaron edieresis -52
KPX Tcaron edotaccent -92
KPX Tcaron egrave -52
KPX Tcaron emacron -52
KPX Tcaron eogonek -92
KPX Tcaron hyphen -92
KPX Tcaron i -37
KPX Tcaron iacute -37
KPX Tcaron iogonek -37
KPX Tcaron o -95
KPX Tcaron oacute -95
KPX Tcaron ocircumflex -95
KPX Tcaron odieresis -95
KPX Tcaron ograve -95
KPX Tcaron ohungarumlaut -95
KPX Tcaron omacron -95
KPX Tcaron oslash -95
KPX Tcaron otilde -95
KPX Tcaron period -92
KPX Tcaron r -37
KPX Tcaron racute -37
KPX Tcaron rcaron -37
KPX Tcaron rcommaaccent -37
KPX Tcaron semicolon -74
KPX Tcaron u -37
KPX Tcaron uacute -37
KPX Tcaron ucircumflex -37
KPX Tcaron udieresis -37
KPX Tcaron ugrave -37
KPX Tcaron uhungarumlaut -37
KPX Tcaron umacron -37
KPX Tcaron uogonek -37
KPX Tcaron uring -37
KPX Tcaron w -37
KPX Tcaron y -37
KPX Tcaron yacute -37
KPX Tcaron ydieresis -37
KPX Tcommaaccent A -55
KPX Tcommaaccent Aacute -55
KPX Tcommaaccent Abreve -55
KPX Tcommaaccent Acircumflex -55
KPX Tcommaaccent Adieresis -55
KPX Tcommaaccent Agrave -55
KPX Tcommaaccent Amacron -55
KPX Tcommaaccent Aogonek -55
KPX Tcommaaccent Aring -55
KPX Tcommaaccent Atilde -55
KPX Tcommaaccent O -18
KPX Tcommaaccent Oacute -18
KPX Tcommaaccent Ocircumflex -18
KPX Tcommaaccent Odieresis -18
KPX Tcommaaccent Ograve -18
KPX Tcommaaccent Ohungarumlaut -18
KPX Tcommaaccent Omacron -18
KPX Tcommaaccent Oslash -18
KPX Tcommaaccent Otilde -18
KPX Tcommaaccent a -92
KPX Tcommaaccent aacute -92
KPX Tcommaaccent abreve -92
KPX Tcommaaccent acircumflex -92
KPX Tcommaaccent adieresis -92
KPX Tcommaaccent agrave -92
KPX Tcommaaccent amacron -92
KPX Tcommaaccent aogonek -92
KPX Tcommaaccent aring -92
KPX Tcommaaccent atilde -92
KPX Tcommaaccent colon -74
KPX Tcommaaccent comma -92
KPX Tcommaaccent e -92
KPX Tcommaaccent eacute -92
KPX Tcommaaccent ecaron -92
KPX Tcommaaccent ecircumflex -92
KPX Tcommaaccent edieresis -52
KPX Tcommaaccent edotaccent -92
KPX Tcommaaccent egrave -52
KPX Tcommaaccent emacron -52
KPX Tcommaaccent eogonek -92
KPX Tcommaaccent hyphen -92
KPX Tcommaaccent i -37
KPX Tcommaaccent iacute -37
KPX Tcommaaccent iogonek -37
KPX Tcommaaccent o -95
KPX Tcommaaccent oacute -95
KPX Tcommaaccent ocircumflex -95
KPX Tcommaaccent odieresis -95
KPX Tcommaaccent ograve -95
KPX Tcommaaccent ohungarumlaut -95
KPX Tcommaaccent omacron -95
KPX Tcommaaccent oslash -95
KPX Tcommaaccent otilde -95
KPX Tcommaaccent period -92
KPX Tcommaaccent r -37
KPX Tcommaaccent racute -37
KPX Tcommaaccent rcaron -37
KPX Tcommaaccent rcommaaccent -37
KPX Tcommaaccent semicolon -74
KPX Tcommaaccent u -37
KPX Tcommaaccent uacute -37
KPX Tcommaaccent ucircumflex -37
KPX Tcommaaccent udieresis -37
KPX Tcommaaccent ugrave -37
KPX Tcommaaccent uhungarumlaut -37
KPX Tcommaaccent umacron -37
KPX Tcommaaccent uogonek -37
KPX Tcommaaccent uring -37
KPX Tcommaaccent w -37
KPX Tcommaaccent y -37
KPX Tcommaaccent yacute -37
KPX Tcommaaccent ydieresis -37
KPX U A -45
KPX U Aacute -45
KPX U Abreve -45
KPX U Acircumflex -45
KPX U Adieresis -45
KPX U Agrave -45
KPX U Amacron -45
KPX U Aogonek -45
KPX U Aring -45
KPX U Atilde -45
KPX Uacute A -45
KPX Uacute Aacute -45
KPX Uacute Abreve -45
KPX Uacute Acircumflex -45
KPX Uacute Adieresis -45
KPX Uacute Agrave -45
KPX Uacute Amacron -45
KPX Uacute Aogonek -45
KPX Uacute Aring -45
KPX Uacute Atilde -45
KPX Ucircumflex A -45
KPX Ucircumflex Aacute -45
KPX Ucircumflex Abreve -45
KPX Ucircumflex Acircumflex -45
KPX Ucircumflex Adieresis -45
KPX Ucircumflex Agrave -45
KPX Ucircumflex Amacron -45
KPX Ucircumflex Aogonek -45
KPX Ucircumflex Aring -45
KPX Ucircumflex Atilde -45
KPX Udieresis A -45
KPX Udieresis Aacute -45
KPX Udieresis Abreve -45
KPX Udieresis Acircumflex -45
KPX Udieresis Adieresis -45
KPX Udieresis Agrave -45
KPX Udieresis Amacron -45
KPX Udieresis Aogonek -45
KPX Udieresis Aring -45
KPX Udieresis Atilde -45
KPX Ugrave A -45
KPX Ugrave Aacute -45
KPX Ugrave Abreve -45
KPX Ugrave Acircumflex -45
KPX Ugrave Adieresis -45
KPX Ugrave Agrave -45
KPX Ugrave Amacron -45
KPX Ugrave Aogonek -45
KPX Ugrave Aring -45
KPX Ugrave Atilde -45
KPX Uhungarumlaut A -45
KPX Uhungarumlaut Aacute -45
KPX Uhungarumlaut Abreve -45
KPX Uhungarumlaut Acircumflex -45
KPX Uhungarumlaut Adieresis -45
KPX Uhungarumlaut Agrave -45
KPX Uhungarumlaut Amacron -45
KPX Uhungarumlaut Aogonek -45
KPX Uhungarumlaut Aring -45
KPX Uhungarumlaut Atilde -45
KPX Umacron A -45
KPX Umacron Aacute -45
KPX Umacron Abreve -45
KPX Umacron Acircumflex -45
KPX Umacron Adieresis -45
KPX Umacron Agrave -45
KPX Umacron Amacron -45
KPX Umacron Aogonek -45
KPX Umacron Aring -45
KPX Umacron Atilde -45
KPX Uogonek A -45
KPX Uogonek Aacute -45
KPX Uogonek Abreve -45
KPX Uogonek Acircumflex -45
KPX Uogonek Adieresis -45
KPX Uogonek Agrave -45
KPX Uogonek Amacron -45
KPX Uogonek Aogonek -45
KPX Uogonek Aring -45
KPX Uogonek Atilde -45
KPX Uring A -45
KPX Uring Aacute -45
KPX Uring Abreve -45
KPX Uring Acircumflex -45
KPX Uring Adieresis -45
KPX Uring Agrave -45
KPX Uring Amacron -45
KPX Uring Aogonek -45
KPX Uring Aring -45
KPX Uring Atilde -45
KPX V A -85
KPX V Aacute -85
KPX V Abreve -85
KPX V Acircumflex -85
KPX V Adieresis -85
KPX V Agrave -85
KPX V Amacron -85
KPX V Aogonek -85
KPX V Aring -85
KPX V Atilde -85
KPX V G -10
KPX V Gbreve -10
KPX V Gcommaaccent -10
KPX V O -30
KPX V Oacute -30
KPX V Ocircumflex -30
KPX V Odieresis -30
KPX V Ograve -30
KPX V Ohungarumlaut -30
KPX V Omacron -30
KPX V Oslash -30
KPX V Otilde -30
KPX V a -111
KPX V aacute -111
KPX V abreve -111
KPX V acircumflex -111
KPX V adieresis -111
KPX V agrave -111
KPX V amacron -111
KPX V aogonek -111
KPX V aring -111
KPX V atilde -111
KPX V colon -74
KPX V comma -129
KPX V e -111
KPX V eacute -111
KPX V ecaron -111
KPX V ecircumflex -111
KPX V edieresis -71
KPX V edotaccent -111
KPX V egrave -71
KPX V emacron -71
KPX V eogonek -111
KPX V hyphen -70
KPX V i -55
KPX V iacute -55
KPX V iogonek -55
KPX V o -111
KPX V oacute -111
KPX V ocircumflex -111
KPX V odieresis -111
KPX V ograve -111
KPX V ohungarumlaut -111
KPX V omacron -111
KPX V oslash -111
KPX V otilde -111
KPX V period -129
KPX V semicolon -74
KPX V u -55
KPX V uacute -55
KPX V ucircumflex -55
KPX V udieresis -55
KPX V ugrave -55
KPX V uhungarumlaut -55
KPX V umacron -55
KPX V uogonek -55
KPX V uring -55
KPX W A -74
KPX W Aacute -74
KPX W Abreve -74
KPX W Acircumflex -74
KPX W Adieresis -74
KPX W Agrave -74
KPX W Amacron -74
KPX W Aogonek -74
KPX W Aring -74
KPX W Atilde -74
KPX W O -15
KPX W Oacute -15
KPX W Ocircumflex -15
KPX W Odieresis -15
KPX W Ograve -15
KPX W Ohungarumlaut -15
KPX W Omacron -15
KPX W Oslash -15
KPX W Otilde -15
KPX W a -85
KPX W aacute -85
KPX W abreve -85
KPX W acircumflex -85
KPX W adieresis -85
KPX W agrave -85
KPX W amacron -85
KPX W aogonek -85
KPX W aring -85
KPX W atilde -85
KPX W colon -55
KPX W comma -74
KPX W e -90
KPX W eacute -90
KPX W ecaron -90
KPX W ecircumflex -90
KPX W edieresis -50
KPX W edotaccent -90
KPX W egrave -50
KPX W emacron -50
KPX W eogonek -90
KPX W hyphen -50
KPX W i -37
KPX W iacute -37
KPX W iogonek -37
KPX W o -80
KPX W oacute -80
KPX W ocircumflex -80
KPX W odieresis -80
KPX W ograve -80
KPX W ohungarumlaut -80
KPX W omacron -80
KPX W oslash -80
KPX W otilde -80
KPX W period -74
KPX W semicolon -55
KPX W u -55
KPX W uacute -55
KPX W ucircumflex -55
KPX W udieresis -55
KPX W ugrave -55
KPX W uhungarumlaut -55
KPX W umacron -55
KPX W uogonek -55
KPX W uring -55
KPX W y -55
KPX W yacute -55
KPX W ydieresis -55
KPX Y A -74
KPX Y Aacute -74
KPX Y Abreve -74
KPX Y Acircumflex -74
KPX Y Adieresis -74
KPX Y Agrave -74
KPX Y Amacron -74
KPX Y Aogonek -74
KPX Y Aring -74
KPX Y Atilde -74
KPX Y O -25
KPX Y Oacute -25
KPX Y Ocircumflex -25
KPX Y Odieresis -25
KPX Y Ograve -25
KPX Y Ohungarumlaut -25
KPX Y Omacron -25
KPX Y Oslash -25
KPX Y Otilde -25
KPX Y a -92
KPX Y aacute -92
KPX Y abreve -92
KPX Y acircumflex -92
KPX Y adieresis -92
KPX Y agrave -92
KPX Y amacron -92
KPX Y aogonek -92
KPX Y aring -92
KPX Y atilde -92
KPX Y colon -92
KPX Y comma -92
KPX Y e -111
KPX Y eacute -111
KPX Y ecaron -111
KPX Y ecircumflex -71
KPX Y edieresis -71
KPX Y edotaccent -111
KPX Y egrave -71
KPX Y emacron -71
KPX Y eogonek -111
KPX Y hyphen -92
KPX Y i -55
KPX Y iacute -55
KPX Y iogonek -55
KPX Y o -111
KPX Y oacute -111
KPX Y ocircumflex -111
KPX Y odieresis -111
KPX Y ograve -111
KPX Y ohungarumlaut -111
KPX Y omacron -111
KPX Y oslash -111
KPX Y otilde -111
KPX Y period -74
KPX Y semicolon -92
KPX Y u -92
KPX Y uacute -92
KPX Y ucircumflex -92
KPX Y udieresis -92
KPX Y ugrave -92
KPX Y uhungarumlaut -92
KPX Y umacron -92
KPX Y uogonek -92
KPX Y uring -92
KPX Yacute A -74
KPX Yacute Aacute -74
KPX Yacute Abreve -74
KPX Yacute Acircumflex -74
KPX Yacute Adieresis -74
KPX Yacute Agrave -74
KPX Yacute Amacron -74
KPX Yacute Aogonek -74
KPX Yacute Aring -74
KPX Yacute Atilde -74
KPX Yacute O -25
KPX Yacute Oacute -25
KPX Yacute Ocircumflex -25
KPX Yacute Odieresis -25
KPX Yacute Ograve -25
KPX Yacute Ohungarumlaut -25
KPX Yacute Omacron -25
KPX Yacute Oslash -25
KPX Yacute Otilde -25
KPX Yacute a -92
KPX Yacute aacute -92
KPX Yacute abreve -92
KPX Yacute acircumflex -92
KPX Yacute adieresis -92
KPX Yacute agrave -92
KPX Yacute amacron -92
KPX Yacute aogonek -92
KPX Yacute aring -92
KPX Yacute atilde -92
KPX Yacute colon -92
KPX Yacute comma -92
KPX Yacute e -111
KPX Yacute eacute -111
KPX Yacute ecaron -111
KPX Yacute ecircumflex -71
KPX Yacute edieresis -71
KPX Yacute edotaccent -111
KPX Yacute egrave -71
KPX Yacute emacron -71
KPX Yacute eogonek -111
KPX Yacute hyphen -92
KPX Yacute i -55
KPX Yacute iacute -55
KPX Yacute iogonek -55
KPX Yacute o -111
KPX Yacute oacute -111
KPX Yacute ocircumflex -111
KPX Yacute odieresis -111
KPX Yacute ograve -111
KPX Yacute ohungarumlaut -111
KPX Yacute omacron -111
KPX Yacute oslash -111
KPX Yacute otilde -111
KPX Yacute period -74
KPX Yacute semicolon -92
KPX Yacute u -92
KPX Yacute uacute -92
KPX Yacute ucircumflex -92
KPX Yacute udieresis -92
KPX Yacute ugrave -92
KPX Yacute uhungarumlaut -92
KPX Yacute umacron -92
KPX Yacute uogonek -92
KPX Yacute uring -92
KPX Ydieresis A -74
KPX Ydieresis Aacute -74
KPX Ydieresis Abreve -74
KPX Ydieresis Acircumflex -74
KPX Ydieresis Adieresis -74
KPX Ydieresis Agrave -74
KPX Ydieresis Amacron -74
KPX Ydieresis Aogonek -74
KPX Ydieresis Aring -74
KPX Ydieresis Atilde -74
KPX Ydieresis O -25
KPX Ydieresis Oacute -25
KPX Ydieresis Ocircumflex -25
KPX Ydieresis Odieresis -25
KPX Ydieresis Ograve -25
KPX Ydieresis Ohungarumlaut -25
KPX Ydieresis Omacron -25
KPX Ydieresis Oslash -25
KPX Ydieresis Otilde -25
KPX Ydieresis a -92
KPX Ydieresis aacute -92
KPX Ydieresis abreve -92
KPX Ydieresis acircumflex -92
KPX Ydieresis adieresis -92
KPX Ydieresis agrave -92
KPX Ydieresis amacron -92
KPX Ydieresis aogonek -92
KPX Ydieresis aring -92
KPX Ydieresis atilde -92
KPX Ydieresis colon -92
KPX Ydieresis comma -92
KPX Ydieresis e -111
KPX Ydieresis eacute -111
KPX Ydieresis ecaron -111
KPX Ydieresis ecircumflex -71
KPX Ydieresis edieresis -71
KPX Ydieresis edotaccent -111
KPX Ydieresis egrave -71
KPX Ydieresis emacron -71
KPX Ydieresis eogonek -111
KPX Ydieresis hyphen -92
KPX Ydieresis i -55
KPX Ydieresis iacute -55
KPX Ydieresis iogonek -55
KPX Ydieresis o -111
KPX Ydieresis oacute -111
KPX Ydieresis ocircumflex -111
KPX Ydieresis odieresis -111
KPX Ydieresis ograve -111
KPX Ydieresis ohungarumlaut -111
KPX Ydieresis omacron -111
KPX Ydieresis oslash -111
KPX Ydieresis otilde -111
KPX Ydieresis period -74
KPX Ydieresis semicolon -92
KPX Ydieresis u -92
KPX Ydieresis uacute -92
KPX Ydieresis ucircumflex -92
KPX Ydieresis udieresis -92
KPX Ydieresis ugrave -92
KPX Ydieresis uhungarumlaut -92
KPX Ydieresis umacron -92
KPX Ydieresis uogonek -92
KPX Ydieresis uring -92
KPX b b -10
KPX b period -40
KPX b u -20
KPX b uacute -20
KPX b ucircumflex -20
KPX b udieresis -20
KPX b ugrave -20
KPX b uhungarumlaut -20
KPX b umacron -20
KPX b uogonek -20
KPX b uring -20
KPX c h -10
KPX c k -10
KPX c kcommaaccent -10
KPX cacute h -10
KPX cacute k -10
KPX cacute kcommaaccent -10
KPX ccaron h -10
KPX ccaron k -10
KPX ccaron kcommaaccent -10
KPX ccedilla h -10
KPX ccedilla k -10
KPX ccedilla kcommaaccent -10
KPX comma quotedblright -95
KPX comma quoteright -95
KPX e b -10
KPX eacute b -10
KPX ecaron b -10
KPX ecircumflex b -10
KPX edieresis b -10
KPX edotaccent b -10
KPX egrave b -10
KPX emacron b -10
KPX eogonek b -10
KPX f comma -10
KPX f dotlessi -30
KPX f e -10
KPX f eacute -10
KPX f edotaccent -10
KPX f eogonek -10
KPX f f -18
KPX f o -10
KPX f oacute -10
KPX f ocircumflex -10
KPX f ograve -10
KPX f ohungarumlaut -10
KPX f oslash -10
KPX f otilde -10
KPX f period -10
KPX f quoteright 55
KPX k e -30
KPX k eacute -30
KPX k ecaron -30
KPX k ecircumflex -30
KPX k edieresis -30
KPX k edotaccent -30
KPX k egrave -30
KPX k emacron -30
KPX k eogonek -30
KPX k o -10
KPX k oacute -10
KPX k ocircumflex -10
KPX k odieresis -10
KPX k ograve -10
KPX k ohungarumlaut -10
KPX k omacron -10
KPX k oslash -10
KPX k otilde -10
KPX kcommaaccent e -30
KPX kcommaaccent eacute -30
KPX kcommaaccent ecaron -30
KPX kcommaaccent ecircumflex -30
KPX kcommaaccent edieresis -30
KPX kcommaaccent edotaccent -30
KPX kcommaaccent egrave -30
KPX kcommaaccent emacron -30
KPX kcommaaccent eogonek -30
KPX kcommaaccent o -10
KPX kcommaaccent oacute -10
KPX kcommaaccent ocircumflex -10
KPX kcommaaccent odieresis -10
KPX kcommaaccent ograve -10
KPX kcommaaccent ohungarumlaut -10
KPX kcommaaccent omacron -10
KPX kcommaaccent oslash -10
KPX kcommaaccent otilde -10
KPX n v -40
KPX nacute v -40
KPX ncaron v -40
KPX ncommaaccent v -40
KPX ntilde v -40
KPX o v -15
KPX o w -25
KPX o x -10
KPX o y -10
KPX o yacute -10
KPX o ydieresis -10
KPX oacute v -15
KPX oacute w -25
KPX oacute x -10
KPX oacute y -10
KPX oacute yacute -10
KPX oacute ydieresis -10
KPX ocircumflex v -15
KPX ocircumflex w -25
KPX ocircumflex x -10
KPX ocircumflex y -10
KPX ocircumflex yacute -10
KPX ocircumflex ydieresis -10
KPX odieresis v -15
KPX odieresis w -25
KPX odieresis x -10
KPX odieresis y -10
KPX odieresis yacute -10
KPX odieresis ydieresis -10
KPX ograve v -15
KPX ograve w -25
KPX ograve x -10
KPX ograve y -10
KPX ograve yacute -10
KPX ograve ydieresis -10
KPX ohungarumlaut v -15
KPX ohungarumlaut w -25
KPX ohungarumlaut x -10
KPX ohungarumlaut y -10
KPX ohungarumlaut yacute -10
KPX ohungarumlaut ydieresis -10
KPX omacron v -15
KPX omacron w -25
KPX omacron x -10
KPX omacron y -10
KPX omacron yacute -10
KPX omacron ydieresis -10
KPX oslash v -15
KPX oslash w -25
KPX oslash x -10
KPX oslash y -10
KPX oslash yacute -10
KPX oslash ydieresis -10
KPX otilde v -15
KPX otilde w -25
KPX otilde x -10
KPX otilde y -10
KPX otilde yacute -10
KPX otilde ydieresis -10
KPX period quotedblright -95
KPX period quoteright -95
KPX quoteleft quoteleft -74
KPX quoteright d -15
KPX quoteright dcroat -15
KPX quoteright quoteright -74
KPX quoteright r -15
KPX quoteright racute -15
KPX quoteright rcaron -15
KPX quoteright rcommaaccent -15
KPX quoteright s -74
KPX quoteright sacute -74
KPX quoteright scaron -74
KPX quoteright scedilla -74
KPX quoteright scommaaccent -74
KPX quoteright space -74
KPX quoteright t -37
KPX quoteright tcommaaccent -37
KPX quoteright v -15
KPX r comma -65
KPX r period -65
KPX racute comma -65
KPX racute period -65
KPX rcaron comma -65
KPX rcaron period -65
KPX rcommaaccent comma -65
KPX rcommaaccent period -65
KPX space A -37
KPX space Aacute -37
KPX space Abreve -37
KPX space Acircumflex -37
KPX space Adieresis -37
KPX space Agrave -37
KPX space Amacron -37
KPX space Aogonek -37
KPX space Aring -37
KPX space Atilde -37
KPX space V -70
KPX space W -70
KPX space Y -70
KPX space Yacute -70
KPX space Ydieresis -70
KPX v comma -37
KPX v e -15
KPX v eacute -15
KPX v ecaron -15
KPX v ecircumflex -15
KPX v edieresis -15
KPX v edotaccent -15
KPX v egrave -15
KPX v emacron -15
KPX v eogonek -15
KPX v o -15
KPX v oacute -15
KPX v ocircumflex -15
KPX v odieresis -15
KPX v ograve -15
KPX v ohungarumlaut -15
KPX v omacron -15
KPX v oslash -15
KPX v otilde -15
KPX v period -37
KPX w a -10
KPX w aacute -10
KPX w abreve -10
KPX w acircumflex -10
KPX w adieresis -10
KPX w agrave -10
KPX w amacron -10
KPX w aogonek -10
KPX w aring -10
KPX w atilde -10
KPX w comma -37
KPX w e -10
KPX w eacute -10
KPX w ecaron -10
KPX w ecircumflex -10
KPX w edieresis -10
KPX w edotaccent -10
KPX w egrave -10
KPX w emacron -10
KPX w eogonek -10
KPX w o -15
KPX w oacute -15
KPX w ocircumflex -15
KPX w odieresis -15
KPX w ograve -15
KPX w ohungarumlaut -15
KPX w omacron -15
KPX w oslash -15
KPX w otilde -15
KPX w period -37
KPX x e -10
KPX x eacute -10
KPX x ecaron -10
KPX x ecircumflex -10
KPX x edieresis -10
KPX x edotaccent -10
KPX x egrave -10
KPX x emacron -10
KPX x eogonek -10
KPX y comma -37
KPX y period -37
KPX yacute comma -37
KPX yacute period -37
KPX ydieresis comma -37
KPX ydieresis period -37
EndKernPairs
EndKernData
EndFontMetrics
'
%
classmethod: StandardFont
timesItalic
	"from http://www.adobe.com/devnet/font.html "

	<font: #'Times-Italic'>
	^self
		windowsName: 'Times New Roman'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.
Comment Creation Date: Thu May  1 12:56:55 1997
Comment UniqueID 43067
Comment VMusage 47727 58752
FontName Times-Italic
FullName Times Italic
FamilyName Times
Weight Medium
ItalicAngle -15.5
IsFixedPitch false
CharacterSet ExtendedRoman
FontBBox -169 -217 1010 883 
UnderlinePosition -100
UnderlineThickness 50
Version 002.000
Notice Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.
EncodingScheme AdobeStandardEncoding
CapHeight 653
XHeight 441
Ascender 683
Descender -217
StdHW 32
StdVW 76
StartCharMetrics 315
C 32 ; WX 250 ; N space ; B 0 0 0 0 ;
C 33 ; WX 333 ; N exclam ; B 39 -11 302 667 ;
C 34 ; WX 420 ; N quotedbl ; B 144 421 432 666 ;
C 35 ; WX 500 ; N numbersign ; B 2 0 540 676 ;
C 36 ; WX 500 ; N dollar ; B 31 -89 497 731 ;
C 37 ; WX 833 ; N percent ; B 79 -13 790 676 ;
C 38 ; WX 778 ; N ampersand ; B 76 -18 723 666 ;
C 39 ; WX 333 ; N quoteright ; B 151 436 290 666 ;
C 40 ; WX 333 ; N parenleft ; B 42 -181 315 669 ;
C 41 ; WX 333 ; N parenright ; B 16 -180 289 669 ;
C 42 ; WX 500 ; N asterisk ; B 128 255 492 666 ;
C 43 ; WX 675 ; N plus ; B 86 0 590 506 ;
C 44 ; WX 250 ; N comma ; B -4 -129 135 101 ;
C 45 ; WX 333 ; N hyphen ; B 49 192 282 255 ;
C 46 ; WX 250 ; N period ; B 27 -11 138 100 ;
C 47 ; WX 278 ; N slash ; B -65 -18 386 666 ;
C 48 ; WX 500 ; N zero ; B 32 -7 497 676 ;
C 49 ; WX 500 ; N one ; B 49 0 409 676 ;
C 50 ; WX 500 ; N two ; B 12 0 452 676 ;
C 51 ; WX 500 ; N three ; B 15 -7 465 676 ;
C 52 ; WX 500 ; N four ; B 1 0 479 676 ;
C 53 ; WX 500 ; N five ; B 15 -7 491 666 ;
C 54 ; WX 500 ; N six ; B 30 -7 521 686 ;
C 55 ; WX 500 ; N seven ; B 75 -8 537 666 ;
C 56 ; WX 500 ; N eight ; B 30 -7 493 676 ;
C 57 ; WX 500 ; N nine ; B 23 -17 492 676 ;
C 58 ; WX 333 ; N colon ; B 50 -11 261 441 ;
C 59 ; WX 333 ; N semicolon ; B 27 -129 261 441 ;
C 60 ; WX 675 ; N less ; B 84 -8 592 514 ;
C 61 ; WX 675 ; N equal ; B 86 120 590 386 ;
C 62 ; WX 675 ; N greater ; B 84 -8 592 514 ;
C 63 ; WX 500 ; N question ; B 132 -12 472 664 ;
C 64 ; WX 920 ; N at ; B 118 -18 806 666 ;
C 65 ; WX 611 ; N A ; B -51 0 564 668 ;
C 66 ; WX 611 ; N B ; B -8 0 588 653 ;
C 67 ; WX 667 ; N C ; B 66 -18 689 666 ;
C 68 ; WX 722 ; N D ; B -8 0 700 653 ;
C 69 ; WX 611 ; N E ; B -1 0 634 653 ;
C 70 ; WX 611 ; N F ; B 8 0 645 653 ;
C 71 ; WX 722 ; N G ; B 52 -18 722 666 ;
C 72 ; WX 722 ; N H ; B -8 0 767 653 ;
C 73 ; WX 333 ; N I ; B -8 0 384 653 ;
C 74 ; WX 444 ; N J ; B -6 -18 491 653 ;
C 75 ; WX 667 ; N K ; B 7 0 722 653 ;
C 76 ; WX 556 ; N L ; B -8 0 559 653 ;
C 77 ; WX 833 ; N M ; B -18 0 873 653 ;
C 78 ; WX 667 ; N N ; B -20 -15 727 653 ;
C 79 ; WX 722 ; N O ; B 60 -18 699 666 ;
C 80 ; WX 611 ; N P ; B 0 0 605 653 ;
C 81 ; WX 722 ; N Q ; B 59 -182 699 666 ;
C 82 ; WX 611 ; N R ; B -13 0 588 653 ;
C 83 ; WX 500 ; N S ; B 17 -18 508 667 ;
C 84 ; WX 556 ; N T ; B 59 0 633 653 ;
C 85 ; WX 722 ; N U ; B 102 -18 765 653 ;
C 86 ; WX 611 ; N V ; B 76 -18 688 653 ;
C 87 ; WX 833 ; N W ; B 71 -18 906 653 ;
C 88 ; WX 611 ; N X ; B -29 0 655 653 ;
C 89 ; WX 556 ; N Y ; B 78 0 633 653 ;
C 90 ; WX 556 ; N Z ; B -6 0 606 653 ;
C 91 ; WX 389 ; N bracketleft ; B 21 -153 391 663 ;
C 92 ; WX 278 ; N backslash ; B -41 -18 319 666 ;
C 93 ; WX 389 ; N bracketright ; B 12 -153 382 663 ;
C 94 ; WX 422 ; N asciicircum ; B 0 301 422 666 ;
C 95 ; WX 500 ; N underscore ; B 0 -125 500 -75 ;
C 96 ; WX 333 ; N quoteleft ; B 171 436 310 666 ;
C 97 ; WX 500 ; N a ; B 17 -11 476 441 ;
C 98 ; WX 500 ; N b ; B 23 -11 473 683 ;
C 99 ; WX 444 ; N c ; B 30 -11 425 441 ;
C 100 ; WX 500 ; N d ; B 15 -13 527 683 ;
C 101 ; WX 444 ; N e ; B 31 -11 412 441 ;
C 102 ; WX 278 ; N f ; B -147 -207 424 678 ; L i fi ; L l fl ;
C 103 ; WX 500 ; N g ; B 8 -206 472 441 ;
C 104 ; WX 500 ; N h ; B 19 -9 478 683 ;
C 105 ; WX 278 ; N i ; B 49 -11 264 654 ;
C 106 ; WX 278 ; N j ; B -124 -207 276 654 ;
C 107 ; WX 444 ; N k ; B 14 -11 461 683 ;
C 108 ; WX 278 ; N l ; B 41 -11 279 683 ;
C 109 ; WX 722 ; N m ; B 12 -9 704 441 ;
C 110 ; WX 500 ; N n ; B 14 -9 474 441 ;
C 111 ; WX 500 ; N o ; B 27 -11 468 441 ;
C 112 ; WX 500 ; N p ; B -75 -205 469 441 ;
C 113 ; WX 500 ; N q ; B 25 -209 483 441 ;
C 114 ; WX 389 ; N r ; B 45 0 412 441 ;
C 115 ; WX 389 ; N s ; B 16 -13 366 442 ;
C 116 ; WX 278 ; N t ; B 37 -11 296 546 ;
C 117 ; WX 500 ; N u ; B 42 -11 475 441 ;
C 118 ; WX 444 ; N v ; B 21 -18 426 441 ;
C 119 ; WX 667 ; N w ; B 16 -18 648 441 ;
C 120 ; WX 444 ; N x ; B -27 -11 447 441 ;
C 121 ; WX 444 ; N y ; B -24 -206 426 441 ;
C 122 ; WX 389 ; N z ; B -2 -81 380 428 ;
C 123 ; WX 400 ; N braceleft ; B 51 -177 407 687 ;
C 124 ; WX 275 ; N bar ; B 105 -217 171 783 ;
C 125 ; WX 400 ; N braceright ; B -7 -177 349 687 ;
C 126 ; WX 541 ; N asciitilde ; B 40 183 502 323 ;
C 161 ; WX 389 ; N exclamdown ; B 59 -205 322 473 ;
C 162 ; WX 500 ; N cent ; B 77 -143 472 560 ;
C 163 ; WX 500 ; N sterling ; B 10 -6 517 670 ;
C 164 ; WX 167 ; N fraction ; B -169 -10 337 676 ;
C 165 ; WX 500 ; N yen ; B 27 0 603 653 ;
C 166 ; WX 500 ; N florin ; B 25 -182 507 682 ;
C 167 ; WX 500 ; N section ; B 53 -162 461 666 ;
C 168 ; WX 500 ; N currency ; B -22 53 522 597 ;
C 169 ; WX 214 ; N quotesingle ; B 132 421 241 666 ;
C 170 ; WX 556 ; N quotedblleft ; B 166 436 514 666 ;
C 171 ; WX 500 ; N guillemotleft ; B 53 37 445 403 ;
C 172 ; WX 333 ; N guilsinglleft ; B 51 37 281 403 ;
C 173 ; WX 333 ; N guilsinglright ; B 52 37 282 403 ;
C 174 ; WX 500 ; N fi ; B -141 -207 481 681 ;
C 175 ; WX 500 ; N fl ; B -141 -204 518 682 ;
C 177 ; WX 500 ; N endash ; B -6 197 505 243 ;
C 178 ; WX 500 ; N dagger ; B 101 -159 488 666 ;
C 179 ; WX 500 ; N daggerdbl ; B 22 -143 491 666 ;
C 180 ; WX 250 ; N periodcentered ; B 70 199 181 310 ;
C 182 ; WX 523 ; N paragraph ; B 55 -123 616 653 ;
C 183 ; WX 350 ; N bullet ; B 40 191 310 461 ;
C 184 ; WX 333 ; N quotesinglbase ; B 44 -129 183 101 ;
C 185 ; WX 556 ; N quotedblbase ; B 57 -129 405 101 ;
C 186 ; WX 556 ; N quotedblright ; B 151 436 499 666 ;
C 187 ; WX 500 ; N guillemotright ; B 55 37 447 403 ;
C 188 ; WX 889 ; N ellipsis ; B 57 -11 762 100 ;
C 189 ; WX 1000 ; N perthousand ; B 25 -19 1010 706 ;
C 191 ; WX 500 ; N questiondown ; B 28 -205 368 471 ;
C 193 ; WX 333 ; N grave ; B 121 492 311 664 ;
C 194 ; WX 333 ; N acute ; B 180 494 403 664 ;
C 195 ; WX 333 ; N circumflex ; B 91 492 385 661 ;
C 196 ; WX 333 ; N tilde ; B 100 517 427 624 ;
C 197 ; WX 333 ; N macron ; B 99 532 411 583 ;
C 198 ; WX 333 ; N breve ; B 117 492 418 650 ;
C 199 ; WX 333 ; N dotaccent ; B 207 548 305 646 ;
C 200 ; WX 333 ; N dieresis ; B 107 548 405 646 ;
C 202 ; WX 333 ; N ring ; B 155 492 355 691 ;
C 203 ; WX 333 ; N cedilla ; B -30 -217 182 0 ;
C 205 ; WX 333 ; N hungarumlaut ; B 93 494 486 664 ;
C 206 ; WX 333 ; N ogonek ; B 20 -169 203 40 ;
C 207 ; WX 333 ; N caron ; B 121 492 426 661 ;
C 208 ; WX 889 ; N emdash ; B -6 197 894 243 ;
C 225 ; WX 889 ; N AE ; B -27 0 911 653 ;
C 227 ; WX 276 ; N ordfeminine ; B 42 406 352 676 ;
C 232 ; WX 556 ; N Lslash ; B -8 0 559 653 ;
C 233 ; WX 722 ; N Oslash ; B 60 -105 699 722 ;
C 234 ; WX 944 ; N OE ; B 49 -8 964 666 ;
C 235 ; WX 310 ; N ordmasculine ; B 67 406 362 676 ;
C 241 ; WX 667 ; N ae ; B 23 -11 640 441 ;
C 245 ; WX 278 ; N dotlessi ; B 49 -11 235 441 ;
C 248 ; WX 278 ; N lslash ; B 41 -11 312 683 ;
C 249 ; WX 500 ; N oslash ; B 28 -135 469 554 ;
C 250 ; WX 667 ; N oe ; B 20 -12 646 441 ;
C 251 ; WX 500 ; N germandbls ; B -168 -207 493 679 ;
C -1 ; WX 333 ; N Idieresis ; B -8 0 435 818 ;
C -1 ; WX 444 ; N eacute ; B 31 -11 459 664 ;
C -1 ; WX 500 ; N abreve ; B 17 -11 502 650 ;
C -1 ; WX 500 ; N uhungarumlaut ; B 42 -11 580 664 ;
C -1 ; WX 444 ; N ecaron ; B 31 -11 482 661 ;
C -1 ; WX 556 ; N Ydieresis ; B 78 0 633 818 ;
C -1 ; WX 675 ; N divide ; B 86 -11 590 517 ;
C -1 ; WX 556 ; N Yacute ; B 78 0 633 876 ;
C -1 ; WX 611 ; N Acircumflex ; B -51 0 564 873 ;
C -1 ; WX 500 ; N aacute ; B 17 -11 487 664 ;
C -1 ; WX 722 ; N Ucircumflex ; B 102 -18 765 873 ;
C -1 ; WX 444 ; N yacute ; B -24 -206 459 664 ;
C -1 ; WX 389 ; N scommaaccent ; B 16 -217 366 442 ;
C -1 ; WX 444 ; N ecircumflex ; B 31 -11 441 661 ;
C -1 ; WX 722 ; N Uring ; B 102 -18 765 883 ;
C -1 ; WX 722 ; N Udieresis ; B 102 -18 765 818 ;
C -1 ; WX 500 ; N aogonek ; B 17 -169 476 441 ;
C -1 ; WX 722 ; N Uacute ; B 102 -18 765 876 ;
C -1 ; WX 500 ; N uogonek ; B 42 -169 477 441 ;
C -1 ; WX 611 ; N Edieresis ; B -1 0 634 818 ;
C -1 ; WX 722 ; N Dcroat ; B -8 0 700 653 ;
C -1 ; WX 250 ; N commaaccent ; B 8 -217 133 -50 ;
C -1 ; WX 760 ; N copyright ; B 41 -18 719 666 ;
C -1 ; WX 611 ; N Emacron ; B -1 0 634 795 ;
C -1 ; WX 444 ; N ccaron ; B 30 -11 482 661 ;
C -1 ; WX 500 ; N aring ; B 17 -11 476 691 ;
C -1 ; WX 667 ; N Ncommaaccent ; B -20 -187 727 653 ;
C -1 ; WX 278 ; N lacute ; B 41 -11 395 876 ;
C -1 ; WX 500 ; N agrave ; B 17 -11 476 664 ;
C -1 ; WX 556 ; N Tcommaaccent ; B 59 -217 633 653 ;
C -1 ; WX 667 ; N Cacute ; B 66 -18 690 876 ;
C -1 ; WX 500 ; N atilde ; B 17 -11 511 624 ;
C -1 ; WX 611 ; N Edotaccent ; B -1 0 634 818 ;
C -1 ; WX 389 ; N scaron ; B 16 -13 454 661 ;
C -1 ; WX 389 ; N scedilla ; B 16 -217 366 442 ;
C -1 ; WX 278 ; N iacute ; B 49 -11 355 664 ;
C -1 ; WX 471 ; N lozenge ; B 13 0 459 724 ;
C -1 ; WX 611 ; N Rcaron ; B -13 0 588 873 ;
C -1 ; WX 722 ; N Gcommaaccent ; B 52 -217 722 666 ;
C -1 ; WX 500 ; N ucircumflex ; B 42 -11 475 661 ;
C -1 ; WX 500 ; N acircumflex ; B 17 -11 476 661 ;
C -1 ; WX 611 ; N Amacron ; B -51 0 564 795 ;
C -1 ; WX 389 ; N rcaron ; B 45 0 434 661 ;
C -1 ; WX 444 ; N ccedilla ; B 30 -217 425 441 ;
C -1 ; WX 556 ; N Zdotaccent ; B -6 0 606 818 ;
C -1 ; WX 611 ; N Thorn ; B 0 0 569 653 ;
C -1 ; WX 722 ; N Omacron ; B 60 -18 699 795 ;
C -1 ; WX 611 ; N Racute ; B -13 0 588 876 ;
C -1 ; WX 500 ; N Sacute ; B 17 -18 508 876 ;
C -1 ; WX 544 ; N dcaron ; B 15 -13 658 683 ;
C -1 ; WX 722 ; N Umacron ; B 102 -18 765 795 ;
C -1 ; WX 500 ; N uring ; B 42 -11 475 691 ;
C -1 ; WX 300 ; N threesuperior ; B 43 268 339 676 ;
C -1 ; WX 722 ; N Ograve ; B 60 -18 699 876 ;
C -1 ; WX 611 ; N Agrave ; B -51 0 564 876 ;
C -1 ; WX 611 ; N Abreve ; B -51 0 564 862 ;
C -1 ; WX 675 ; N multiply ; B 93 8 582 497 ;
C -1 ; WX 500 ; N uacute ; B 42 -11 477 664 ;
C -1 ; WX 556 ; N Tcaron ; B 59 0 633 873 ;
C -1 ; WX 476 ; N partialdiff ; B 17 -38 459 710 ;
C -1 ; WX 444 ; N ydieresis ; B -24 -206 441 606 ;
C -1 ; WX 667 ; N Nacute ; B -20 -15 727 876 ;
C -1 ; WX 278 ; N icircumflex ; B 33 -11 327 661 ;
C -1 ; WX 611 ; N Ecircumflex ; B -1 0 634 873 ;
C -1 ; WX 500 ; N adieresis ; B 17 -11 489 606 ;
C -1 ; WX 444 ; N edieresis ; B 31 -11 451 606 ;
C -1 ; WX 444 ; N cacute ; B 30 -11 459 664 ;
C -1 ; WX 500 ; N nacute ; B 14 -9 477 664 ;
C -1 ; WX 500 ; N umacron ; B 42 -11 485 583 ;
C -1 ; WX 667 ; N Ncaron ; B -20 -15 727 873 ;
C -1 ; WX 333 ; N Iacute ; B -8 0 433 876 ;
C -1 ; WX 675 ; N plusminus ; B 86 0 590 506 ;
C -1 ; WX 275 ; N brokenbar ; B 105 -142 171 708 ;
C -1 ; WX 760 ; N registered ; B 41 -18 719 666 ;
C -1 ; WX 722 ; N Gbreve ; B 52 -18 722 862 ;
C -1 ; WX 333 ; N Idotaccent ; B -8 0 384 818 ;
C -1 ; WX 600 ; N summation ; B 15 -10 585 706 ;
C -1 ; WX 611 ; N Egrave ; B -1 0 634 876 ;
C -1 ; WX 389 ; N racute ; B 45 0 431 664 ;
C -1 ; WX 500 ; N omacron ; B 27 -11 495 583 ;
C -1 ; WX 556 ; N Zacute ; B -6 0 606 876 ;
C -1 ; WX 556 ; N Zcaron ; B -6 0 606 873 ;
C -1 ; WX 549 ; N greaterequal ; B 26 0 523 658 ;
C -1 ; WX 722 ; N Eth ; B -8 0 700 653 ;
C -1 ; WX 667 ; N Ccedilla ; B 66 -217 689 666 ;
C -1 ; WX 278 ; N lcommaaccent ; B 22 -217 279 683 ;
C -1 ; WX 300 ; N tcaron ; B 37 -11 407 681 ;
C -1 ; WX 444 ; N eogonek ; B 31 -169 412 441 ;
C -1 ; WX 722 ; N Uogonek ; B 102 -184 765 653 ;
C -1 ; WX 611 ; N Aacute ; B -51 0 564 876 ;
C -1 ; WX 611 ; N Adieresis ; B -51 0 564 818 ;
C -1 ; WX 444 ; N egrave ; B 31 -11 412 664 ;
C -1 ; WX 389 ; N zacute ; B -2 -81 431 664 ;
C -1 ; WX 278 ; N iogonek ; B 49 -169 264 654 ;
C -1 ; WX 722 ; N Oacute ; B 60 -18 699 876 ;
C -1 ; WX 500 ; N oacute ; B 27 -11 487 664 ;
C -1 ; WX 500 ; N amacron ; B 17 -11 495 583 ;
C -1 ; WX 389 ; N sacute ; B 16 -13 431 664 ;
C -1 ; WX 278 ; N idieresis ; B 49 -11 352 606 ;
C -1 ; WX 722 ; N Ocircumflex ; B 60 -18 699 873 ;
C -1 ; WX 722 ; N Ugrave ; B 102 -18 765 876 ;
C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;
C -1 ; WX 500 ; N thorn ; B -75 -205 469 683 ;
C -1 ; WX 300 ; N twosuperior ; B 33 271 324 676 ;
C -1 ; WX 722 ; N Odieresis ; B 60 -18 699 818 ;
C -1 ; WX 500 ; N mu ; B -30 -209 497 428 ;
C -1 ; WX 278 ; N igrave ; B 49 -11 284 664 ;
C -1 ; WX 500 ; N ohungarumlaut ; B 27 -11 590 664 ;
C -1 ; WX 611 ; N Eogonek ; B -1 -169 634 653 ;
C -1 ; WX 500 ; N dcroat ; B 15 -13 572 683 ;
C -1 ; WX 750 ; N threequarters ; B 23 -10 736 676 ;
C -1 ; WX 500 ; N Scedilla ; B 17 -217 508 667 ;
C -1 ; WX 300 ; N lcaron ; B 41 -11 407 683 ;
C -1 ; WX 667 ; N Kcommaaccent ; B 7 -217 722 653 ;
C -1 ; WX 556 ; N Lacute ; B -8 0 559 876 ;
C -1 ; WX 980 ; N trademark ; B 30 247 957 653 ;
C -1 ; WX 444 ; N edotaccent ; B 31 -11 412 606 ;
C -1 ; WX 333 ; N Igrave ; B -8 0 384 876 ;
C -1 ; WX 333 ; N Imacron ; B -8 0 441 795 ;
C -1 ; WX 611 ; N Lcaron ; B -8 0 586 653 ;
C -1 ; WX 750 ; N onehalf ; B 34 -10 749 676 ;
C -1 ; WX 549 ; N lessequal ; B 26 0 523 658 ;
C -1 ; WX 500 ; N ocircumflex ; B 27 -11 468 661 ;
C -1 ; WX 500 ; N ntilde ; B 14 -9 476 624 ;
C -1 ; WX 722 ; N Uhungarumlaut ; B 102 -18 765 876 ;
C -1 ; WX 611 ; N Eacute ; B -1 0 634 876 ;
C -1 ; WX 444 ; N emacron ; B 31 -11 457 583 ;
C -1 ; WX 500 ; N gbreve ; B 8 -206 487 650 ;
C -1 ; WX 750 ; N onequarter ; B 33 -10 736 676 ;
C -1 ; WX 500 ; N Scaron ; B 17 -18 520 873 ;
C -1 ; WX 500 ; N Scommaaccent ; B 17 -217 508 667 ;
C -1 ; WX 722 ; N Ohungarumlaut ; B 60 -18 699 876 ;
C -1 ; WX 400 ; N degree ; B 101 390 387 676 ;
C -1 ; WX 500 ; N ograve ; B 27 -11 468 664 ;
C -1 ; WX 667 ; N Ccaron ; B 66 -18 689 873 ;
C -1 ; WX 500 ; N ugrave ; B 42 -11 475 664 ;
C -1 ; WX 453 ; N radical ; B 2 -60 452 768 ;
C -1 ; WX 722 ; N Dcaron ; B -8 0 700 873 ;
C -1 ; WX 389 ; N rcommaaccent ; B -3 -217 412 441 ;
C -1 ; WX 667 ; N Ntilde ; B -20 -15 727 836 ;
C -1 ; WX 500 ; N otilde ; B 27 -11 496 624 ;
C -1 ; WX 611 ; N Rcommaaccent ; B -13 -187 588 653 ;
C -1 ; WX 556 ; N Lcommaaccent ; B -8 -217 559 653 ;
C -1 ; WX 611 ; N Atilde ; B -51 0 566 836 ;
C -1 ; WX 611 ; N Aogonek ; B -51 -169 566 668 ;
C -1 ; WX 611 ; N Aring ; B -51 0 564 883 ;
C -1 ; WX 722 ; N Otilde ; B 60 -18 699 836 ;
C -1 ; WX 389 ; N zdotaccent ; B -2 -81 380 606 ;
C -1 ; WX 611 ; N Ecaron ; B -1 0 634 873 ;
C -1 ; WX 333 ; N Iogonek ; B -8 -169 384 653 ;
C -1 ; WX 444 ; N kcommaaccent ; B 14 -187 461 683 ;
C -1 ; WX 675 ; N minus ; B 86 220 590 286 ;
C -1 ; WX 333 ; N Icircumflex ; B -8 0 425 873 ;
C -1 ; WX 500 ; N ncaron ; B 14 -9 510 661 ;
C -1 ; WX 278 ; N tcommaaccent ; B 2 -217 296 546 ;
C -1 ; WX 675 ; N logicalnot ; B 86 108 590 386 ;
C -1 ; WX 500 ; N odieresis ; B 27 -11 489 606 ;
C -1 ; WX 500 ; N udieresis ; B 42 -11 479 606 ;
C -1 ; WX 549 ; N notequal ; B 12 -29 537 541 ;
C -1 ; WX 500 ; N gcommaaccent ; B 8 -206 472 706 ;
C -1 ; WX 500 ; N eth ; B 27 -11 482 683 ;
C -1 ; WX 389 ; N zcaron ; B -2 -81 434 661 ;
C -1 ; WX 500 ; N ncommaaccent ; B 14 -187 474 441 ;
C -1 ; WX 300 ; N onesuperior ; B 43 271 284 676 ;
C -1 ; WX 278 ; N imacron ; B 46 -11 311 583 ;
C -1 ; WX 500 ; N Euro ; B 0 0 0 0 ;
EndCharMetrics
StartKernData
StartKernPairs 2321
KPX A C -30
KPX A Cacute -30
KPX A Ccaron -30
KPX A Ccedilla -30
KPX A G -35
KPX A Gbreve -35
KPX A Gcommaaccent -35
KPX A O -40
KPX A Oacute -40
KPX A Ocircumflex -40
KPX A Odieresis -40
KPX A Ograve -40
KPX A Ohungarumlaut -40
KPX A Omacron -40
KPX A Oslash -40
KPX A Otilde -40
KPX A Q -40
KPX A T -37
KPX A Tcaron -37
KPX A Tcommaaccent -37
KPX A U -50
KPX A Uacute -50
KPX A Ucircumflex -50
KPX A Udieresis -50
KPX A Ugrave -50
KPX A Uhungarumlaut -50
KPX A Umacron -50
KPX A Uogonek -50
KPX A Uring -50
KPX A V -105
KPX A W -95
KPX A Y -55
KPX A Yacute -55
KPX A Ydieresis -55
KPX A quoteright -37
KPX A u -20
KPX A uacute -20
KPX A ucircumflex -20
KPX A udieresis -20
KPX A ugrave -20
KPX A uhungarumlaut -20
KPX A umacron -20
KPX A uogonek -20
KPX A uring -20
KPX A v -55
KPX A w -55
KPX A y -55
KPX A yacute -55
KPX A ydieresis -55
KPX Aacute C -30
KPX Aacute Cacute -30
KPX Aacute Ccaron -30
KPX Aacute Ccedilla -30
KPX Aacute G -35
KPX Aacute Gbreve -35
KPX Aacute Gcommaaccent -35
KPX Aacute O -40
KPX Aacute Oacute -40
KPX Aacute Ocircumflex -40
KPX Aacute Odieresis -40
KPX Aacute Ograve -40
KPX Aacute Ohungarumlaut -40
KPX Aacute Omacron -40
KPX Aacute Oslash -40
KPX Aacute Otilde -40
KPX Aacute Q -40
KPX Aacute T -37
KPX Aacute Tcaron -37
KPX Aacute Tcommaaccent -37
KPX Aacute U -50
KPX Aacute Uacute -50
KPX Aacute Ucircumflex -50
KPX Aacute Udieresis -50
KPX Aacute Ugrave -50
KPX Aacute Uhungarumlaut -50
KPX Aacute Umacron -50
KPX Aacute Uogonek -50
KPX Aacute Uring -50
KPX Aacute V -105
KPX Aacute W -95
KPX Aacute Y -55
KPX Aacute Yacute -55
KPX Aacute Ydieresis -55
KPX Aacute quoteright -37
KPX Aacute u -20
KPX Aacute uacute -20
KPX Aacute ucircumflex -20
KPX Aacute udieresis -20
KPX Aacute ugrave -20
KPX Aacute uhungarumlaut -20
KPX Aacute umacron -20
KPX Aacute uogonek -20
KPX Aacute uring -20
KPX Aacute v -55
KPX Aacute w -55
KPX Aacute y -55
KPX Aacute yacute -55
KPX Aacute ydieresis -55
KPX Abreve C -30
KPX Abreve Cacute -30
KPX Abreve Ccaron -30
KPX Abreve Ccedilla -30
KPX Abreve G -35
KPX Abreve Gbreve -35
KPX Abreve Gcommaaccent -35
KPX Abreve O -40
KPX Abreve Oacute -40
KPX Abreve Ocircumflex -40
KPX Abreve Odieresis -40
KPX Abreve Ograve -40
KPX Abreve Ohungarumlaut -40
KPX Abreve Omacron -40
KPX Abreve Oslash -40
KPX Abreve Otilde -40
KPX Abreve Q -40
KPX Abreve T -37
KPX Abreve Tcaron -37
KPX Abreve Tcommaaccent -37
KPX Abreve U -50
KPX Abreve Uacute -50
KPX Abreve Ucircumflex -50
KPX Abreve Udieresis -50
KPX Abreve Ugrave -50
KPX Abreve Uhungarumlaut -50
KPX Abreve Umacron -50
KPX Abreve Uogonek -50
KPX Abreve Uring -50
KPX Abreve V -105
KPX Abreve W -95
KPX Abreve Y -55
KPX Abreve Yacute -55
KPX Abreve Ydieresis -55
KPX Abreve quoteright -37
KPX Abreve u -20
KPX Abreve uacute -20
KPX Abreve ucircumflex -20
KPX Abreve udieresis -20
KPX Abreve ugrave -20
KPX Abreve uhungarumlaut -20
KPX Abreve umacron -20
KPX Abreve uogonek -20
KPX Abreve uring -20
KPX Abreve v -55
KPX Abreve w -55
KPX Abreve y -55
KPX Abreve yacute -55
KPX Abreve ydieresis -55
KPX Acircumflex C -30
KPX Acircumflex Cacute -30
KPX Acircumflex Ccaron -30
KPX Acircumflex Ccedilla -30
KPX Acircumflex G -35
KPX Acircumflex Gbreve -35
KPX Acircumflex Gcommaaccent -35
KPX Acircumflex O -40
KPX Acircumflex Oacute -40
KPX Acircumflex Ocircumflex -40
KPX Acircumflex Odieresis -40
KPX Acircumflex Ograve -40
KPX Acircumflex Ohungarumlaut -40
KPX Acircumflex Omacron -40
KPX Acircumflex Oslash -40
KPX Acircumflex Otilde -40
KPX Acircumflex Q -40
KPX Acircumflex T -37
KPX Acircumflex Tcaron -37
KPX Acircumflex Tcommaaccent -37
KPX Acircumflex U -50
KPX Acircumflex Uacute -50
KPX Acircumflex Ucircumflex -50
KPX Acircumflex Udieresis -50
KPX Acircumflex Ugrave -50
KPX Acircumflex Uhungarumlaut -50
KPX Acircumflex Umacron -50
KPX Acircumflex Uogonek -50
KPX Acircumflex Uring -50
KPX Acircumflex V -105
KPX Acircumflex W -95
KPX Acircumflex Y -55
KPX Acircumflex Yacute -55
KPX Acircumflex Ydieresis -55
KPX Acircumflex quoteright -37
KPX Acircumflex u -20
KPX Acircumflex uacute -20
KPX Acircumflex ucircumflex -20
KPX Acircumflex udieresis -20
KPX Acircumflex ugrave -20
KPX Acircumflex uhungarumlaut -20
KPX Acircumflex umacron -20
KPX Acircumflex uogonek -20
KPX Acircumflex uring -20
KPX Acircumflex v -55
KPX Acircumflex w -55
KPX Acircumflex y -55
KPX Acircumflex yacute -55
KPX Acircumflex ydieresis -55
KPX Adieresis C -30
KPX Adieresis Cacute -30
KPX Adieresis Ccaron -30
KPX Adieresis Ccedilla -30
KPX Adieresis G -35
KPX Adieresis Gbreve -35
KPX Adieresis Gcommaaccent -35
KPX Adieresis O -40
KPX Adieresis Oacute -40
KPX Adieresis Ocircumflex -40
KPX Adieresis Odieresis -40
KPX Adieresis Ograve -40
KPX Adieresis Ohungarumlaut -40
KPX Adieresis Omacron -40
KPX Adieresis Oslash -40
KPX Adieresis Otilde -40
KPX Adieresis Q -40
KPX Adieresis T -37
KPX Adieresis Tcaron -37
KPX Adieresis Tcommaaccent -37
KPX Adieresis U -50
KPX Adieresis Uacute -50
KPX Adieresis Ucircumflex -50
KPX Adieresis Udieresis -50
KPX Adieresis Ugrave -50
KPX Adieresis Uhungarumlaut -50
KPX Adieresis Umacron -50
KPX Adieresis Uogonek -50
KPX Adieresis Uring -50
KPX Adieresis V -105
KPX Adieresis W -95
KPX Adieresis Y -55
KPX Adieresis Yacute -55
KPX Adieresis Ydieresis -55
KPX Adieresis quoteright -37
KPX Adieresis u -20
KPX Adieresis uacute -20
KPX Adieresis ucircumflex -20
KPX Adieresis udieresis -20
KPX Adieresis ugrave -20
KPX Adieresis uhungarumlaut -20
KPX Adieresis umacron -20
KPX Adieresis uogonek -20
KPX Adieresis uring -20
KPX Adieresis v -55
KPX Adieresis w -55
KPX Adieresis y -55
KPX Adieresis yacute -55
KPX Adieresis ydieresis -55
KPX Agrave C -30
KPX Agrave Cacute -30
KPX Agrave Ccaron -30
KPX Agrave Ccedilla -30
KPX Agrave G -35
KPX Agrave Gbreve -35
KPX Agrave Gcommaaccent -35
KPX Agrave O -40
KPX Agrave Oacute -40
KPX Agrave Ocircumflex -40
KPX Agrave Odieresis -40
KPX Agrave Ograve -40
KPX Agrave Ohungarumlaut -40
KPX Agrave Omacron -40
KPX Agrave Oslash -40
KPX Agrave Otilde -40
KPX Agrave Q -40
KPX Agrave T -37
KPX Agrave Tcaron -37
KPX Agrave Tcommaaccent -37
KPX Agrave U -50
KPX Agrave Uacute -50
KPX Agrave Ucircumflex -50
KPX Agrave Udieresis -50
KPX Agrave Ugrave -50
KPX Agrave Uhungarumlaut -50
KPX Agrave Umacron -50
KPX Agrave Uogonek -50
KPX Agrave Uring -50
KPX Agrave V -105
KPX Agrave W -95
KPX Agrave Y -55
KPX Agrave Yacute -55
KPX Agrave Ydieresis -55
KPX Agrave quoteright -37
KPX Agrave u -20
KPX Agrave uacute -20
KPX Agrave ucircumflex -20
KPX Agrave udieresis -20
KPX Agrave ugrave -20
KPX Agrave uhungarumlaut -20
KPX Agrave umacron -20
KPX Agrave uogonek -20
KPX Agrave uring -20
KPX Agrave v -55
KPX Agrave w -55
KPX Agrave y -55
KPX Agrave yacute -55
KPX Agrave ydieresis -55
KPX Amacron C -30
KPX Amacron Cacute -30
KPX Amacron Ccaron -30
KPX Amacron Ccedilla -30
KPX Amacron G -35
KPX Amacron Gbreve -35
KPX Amacron Gcommaaccent -35
KPX Amacron O -40
KPX Amacron Oacute -40
KPX Amacron Ocircumflex -40
KPX Amacron Odieresis -40
KPX Amacron Ograve -40
KPX Amacron Ohungarumlaut -40
KPX Amacron Omacron -40
KPX Amacron Oslash -40
KPX Amacron Otilde -40
KPX Amacron Q -40
KPX Amacron T -37
KPX Amacron Tcaron -37
KPX Amacron Tcommaaccent -37
KPX Amacron U -50
KPX Amacron Uacute -50
KPX Amacron Ucircumflex -50
KPX Amacron Udieresis -50
KPX Amacron Ugrave -50
KPX Amacron Uhungarumlaut -50
KPX Amacron Umacron -50
KPX Amacron Uogonek -50
KPX Amacron Uring -50
KPX Amacron V -105
KPX Amacron W -95
KPX Amacron Y -55
KPX Amacron Yacute -55
KPX Amacron Ydieresis -55
KPX Amacron quoteright -37
KPX Amacron u -20
KPX Amacron uacute -20
KPX Amacron ucircumflex -20
KPX Amacron udieresis -20
KPX Amacron ugrave -20
KPX Amacron uhungarumlaut -20
KPX Amacron umacron -20
KPX Amacron uogonek -20
KPX Amacron uring -20
KPX Amacron v -55
KPX Amacron w -55
KPX Amacron y -55
KPX Amacron yacute -55
KPX Amacron ydieresis -55
KPX Aogonek C -30
KPX Aogonek Cacute -30
KPX Aogonek Ccaron -30
KPX Aogonek Ccedilla -30
KPX Aogonek G -35
KPX Aogonek Gbreve -35
KPX Aogonek Gcommaaccent -35
KPX Aogonek O -40
KPX Aogonek Oacute -40
KPX Aogonek Ocircumflex -40
KPX Aogonek Odieresis -40
KPX Aogonek Ograve -40
KPX Aogonek Ohungarumlaut -40
KPX Aogonek Omacron -40
KPX Aogonek Oslash -40
KPX Aogonek Otilde -40
KPX Aogonek Q -40
KPX Aogonek T -37
KPX Aogonek Tcaron -37
KPX Aogonek Tcommaaccent -37
KPX Aogonek U -50
KPX Aogonek Uacute -50
KPX Aogonek Ucircumflex -50
KPX Aogonek Udieresis -50
KPX Aogonek Ugrave -50
KPX Aogonek Uhungarumlaut -50
KPX Aogonek Umacron -50
KPX Aogonek Uogonek -50
KPX Aogonek Uring -50
KPX Aogonek V -105
KPX Aogonek W -95
KPX Aogonek Y -55
KPX Aogonek Yacute -55
KPX Aogonek Ydieresis -55
KPX Aogonek quoteright -37
KPX Aogonek u -20
KPX Aogonek uacute -20
KPX Aogonek ucircumflex -20
KPX Aogonek udieresis -20
KPX Aogonek ugrave -20
KPX Aogonek uhungarumlaut -20
KPX Aogonek umacron -20
KPX Aogonek uogonek -20
KPX Aogonek uring -20
KPX Aogonek v -55
KPX Aogonek w -55
KPX Aogonek y -55
KPX Aogonek yacute -55
KPX Aogonek ydieresis -55
KPX Aring C -30
KPX Aring Cacute -30
KPX Aring Ccaron -30
KPX Aring Ccedilla -30
KPX Aring G -35
KPX Aring Gbreve -35
KPX Aring Gcommaaccent -35
KPX Aring O -40
KPX Aring Oacute -40
KPX Aring Ocircumflex -40
KPX Aring Odieresis -40
KPX Aring Ograve -40
KPX Aring Ohungarumlaut -40
KPX Aring Omacron -40
KPX Aring Oslash -40
KPX Aring Otilde -40
KPX Aring Q -40
KPX Aring T -37
KPX Aring Tcaron -37
KPX Aring Tcommaaccent -37
KPX Aring U -50
KPX Aring Uacute -50
KPX Aring Ucircumflex -50
KPX Aring Udieresis -50
KPX Aring Ugrave -50
KPX Aring Uhungarumlaut -50
KPX Aring Umacron -50
KPX Aring Uogonek -50
KPX Aring Uring -50
KPX Aring V -105
KPX Aring W -95
KPX Aring Y -55
KPX Aring Yacute -55
KPX Aring Ydieresis -55
KPX Aring quoteright -37
KPX Aring u -20
KPX Aring uacute -20
KPX Aring ucircumflex -20
KPX Aring udieresis -20
KPX Aring ugrave -20
KPX Aring uhungarumlaut -20
KPX Aring umacron -20
KPX Aring uogonek -20
KPX Aring uring -20
KPX Aring v -55
KPX Aring w -55
KPX Aring y -55
KPX Aring yacute -55
KPX Aring ydieresis -55
KPX Atilde C -30
KPX Atilde Cacute -30
KPX Atilde Ccaron -30
KPX Atilde Ccedilla -30
KPX Atilde G -35
KPX Atilde Gbreve -35
KPX Atilde Gcommaaccent -35
KPX Atilde O -40
KPX Atilde Oacute -40
KPX Atilde Ocircumflex -40
KPX Atilde Odieresis -40
KPX Atilde Ograve -40
KPX Atilde Ohungarumlaut -40
KPX Atilde Omacron -40
KPX Atilde Oslash -40
KPX Atilde Otilde -40
KPX Atilde Q -40
KPX Atilde T -37
KPX Atilde Tcaron -37
KPX Atilde Tcommaaccent -37
KPX Atilde U -50
KPX Atilde Uacute -50
KPX Atilde Ucircumflex -50
KPX Atilde Udieresis -50
KPX Atilde Ugrave -50
KPX Atilde Uhungarumlaut -50
KPX Atilde Umacron -50
KPX Atilde Uogonek -50
KPX Atilde Uring -50
KPX Atilde V -105
KPX Atilde W -95
KPX Atilde Y -55
KPX Atilde Yacute -55
KPX Atilde Ydieresis -55
KPX Atilde quoteright -37
KPX Atilde u -20
KPX Atilde uacute -20
KPX Atilde ucircumflex -20
KPX Atilde udieresis -20
KPX Atilde ugrave -20
KPX Atilde uhungarumlaut -20
KPX Atilde umacron -20
KPX Atilde uogonek -20
KPX Atilde uring -20
KPX Atilde v -55
KPX Atilde w -55
KPX Atilde y -55
KPX Atilde yacute -55
KPX Atilde ydieresis -55
KPX B A -25
KPX B Aacute -25
KPX B Abreve -25
KPX B Acircumflex -25
KPX B Adieresis -25
KPX B Agrave -25
KPX B Amacron -25
KPX B Aogonek -25
KPX B Aring -25
KPX B Atilde -25
KPX B U -10
KPX B Uacute -10
KPX B Ucircumflex -10
KPX B Udieresis -10
KPX B Ugrave -10
KPX B Uhungarumlaut -10
KPX B Umacron -10
KPX B Uogonek -10
KPX B Uring -10
KPX D A -35
KPX D Aacute -35
KPX D Abreve -35
KPX D Acircumflex -35
KPX D Adieresis -35
KPX D Agrave -35
KPX D Amacron -35
KPX D Aogonek -35
KPX D Aring -35
KPX D Atilde -35
KPX D V -40
KPX D W -40
KPX D Y -40
KPX D Yacute -40
KPX D Ydieresis -40
KPX Dcaron A -35
KPX Dcaron Aacute -35
KPX Dcaron Abreve -35
KPX Dcaron Acircumflex -35
KPX Dcaron Adieresis -35
KPX Dcaron Agrave -35
KPX Dcaron Amacron -35
KPX Dcaron Aogonek -35
KPX Dcaron Aring -35
KPX Dcaron Atilde -35
KPX Dcaron V -40
KPX Dcaron W -40
KPX Dcaron Y -40
KPX Dcaron Yacute -40
KPX Dcaron Ydieresis -40
KPX Dcroat A -35
KPX Dcroat Aacute -35
KPX Dcroat Abreve -35
KPX Dcroat Acircumflex -35
KPX Dcroat Adieresis -35
KPX Dcroat Agrave -35
KPX Dcroat Amacron -35
KPX Dcroat Aogonek -35
KPX Dcroat Aring -35
KPX Dcroat Atilde -35
KPX Dcroat V -40
KPX Dcroat W -40
KPX Dcroat Y -40
KPX Dcroat Yacute -40
KPX Dcroat Ydieresis -40
KPX F A -115
KPX F Aacute -115
KPX F Abreve -115
KPX F Acircumflex -115
KPX F Adieresis -115
KPX F Agrave -115
KPX F Amacron -115
KPX F Aogonek -115
KPX F Aring -115
KPX F Atilde -115
KPX F a -75
KPX F aacute -75
KPX F abreve -75
KPX F acircumflex -75
KPX F adieresis -75
KPX F agrave -75
KPX F amacron -75
KPX F aogonek -75
KPX F aring -75
KPX F atilde -75
KPX F comma -135
KPX F e -75
KPX F eacute -75
KPX F ecaron -75
KPX F ecircumflex -75
KPX F edieresis -75
KPX F edotaccent -75
KPX F egrave -75
KPX F emacron -75
KPX F eogonek -75
KPX F i -45
KPX F iacute -45
KPX F icircumflex -45
KPX F idieresis -45
KPX F igrave -45
KPX F imacron -45
KPX F iogonek -45
KPX F o -105
KPX F oacute -105
KPX F ocircumflex -105
KPX F odieresis -105
KPX F ograve -105
KPX F ohungarumlaut -105
KPX F omacron -105
KPX F oslash -105
KPX F otilde -105
KPX F period -135
KPX F r -55
KPX F racute -55
KPX F rcaron -55
KPX F rcommaaccent -55
KPX J A -40
KPX J Aacute -40
KPX J Abreve -40
KPX J Acircumflex -40
KPX J Adieresis -40
KPX J Agrave -40
KPX J Amacron -40
KPX J Aogonek -40
KPX J Aring -40
KPX J Atilde -40
KPX J a -35
KPX J aacute -35
KPX J abreve -35
KPX J acircumflex -35
KPX J adieresis -35
KPX J agrave -35
KPX J amacron -35
KPX J aogonek -35
KPX J aring -35
KPX J atilde -35
KPX J comma -25
KPX J e -25
KPX J eacute -25
KPX J ecaron -25
KPX J ecircumflex -25
KPX J edieresis -25
KPX J edotaccent -25
KPX J egrave -25
KPX J emacron -25
KPX J eogonek -25
KPX J o -25
KPX J oacute -25
KPX J ocircumflex -25
KPX J odieresis -25
KPX J ograve -25
KPX J ohungarumlaut -25
KPX J omacron -25
KPX J oslash -25
KPX J otilde -25
KPX J period -25
KPX J u -35
KPX J uacute -35
KPX J ucircumflex -35
KPX J udieresis -35
KPX J ugrave -35
KPX J uhungarumlaut -35
KPX J umacron -35
KPX J uogonek -35
KPX J uring -35
KPX K O -50
KPX K Oacute -50
KPX K Ocircumflex -50
KPX K Odieresis -50
KPX K Ograve -50
KPX K Ohungarumlaut -50
KPX K Omacron -50
KPX K Oslash -50
KPX K Otilde -50
KPX K e -35
KPX K eacute -35
KPX K ecaron -35
KPX K ecircumflex -35
KPX K edieresis -35
KPX K edotaccent -35
KPX K egrave -35
KPX K emacron -35
KPX K eogonek -35
KPX K o -40
KPX K oacute -40
KPX K ocircumflex -40
KPX K odieresis -40
KPX K ograve -40
KPX K ohungarumlaut -40
KPX K omacron -40
KPX K oslash -40
KPX K otilde -40
KPX K u -40
KPX K uacute -40
KPX K ucircumflex -40
KPX K udieresis -40
KPX K ugrave -40
KPX K uhungarumlaut -40
KPX K umacron -40
KPX K uogonek -40
KPX K uring -40
KPX K y -40
KPX K yacute -40
KPX K ydieresis -40
KPX Kcommaaccent O -50
KPX Kcommaaccent Oacute -50
KPX Kcommaaccent Ocircumflex -50
KPX Kcommaaccent Odieresis -50
KPX Kcommaaccent Ograve -50
KPX Kcommaaccent Ohungarumlaut -50
KPX Kcommaaccent Omacron -50
KPX Kcommaaccent Oslash -50
KPX Kcommaaccent Otilde -50
KPX Kcommaaccent e -35
KPX Kcommaaccent eacute -35
KPX Kcommaaccent ecaron -35
KPX Kcommaaccent ecircumflex -35
KPX Kcommaaccent edieresis -35
KPX Kcommaaccent edotaccent -35
KPX Kcommaaccent egrave -35
KPX Kcommaaccent emacron -35
KPX Kcommaaccent eogonek -35
KPX Kcommaaccent o -40
KPX Kcommaaccent oacute -40
KPX Kcommaaccent ocircumflex -40
KPX Kcommaaccent odieresis -40
KPX Kcommaaccent ograve -40
KPX Kcommaaccent ohungarumlaut -40
KPX Kcommaaccent omacron -40
KPX Kcommaaccent oslash -40
KPX Kcommaaccent otilde -40
KPX Kcommaaccent u -40
KPX Kcommaaccent uacute -40
KPX Kcommaaccent ucircumflex -40
KPX Kcommaaccent udieresis -40
KPX Kcommaaccent ugrave -40
KPX Kcommaaccent uhungarumlaut -40
KPX Kcommaaccent umacron -40
KPX Kcommaaccent uogonek -40
KPX Kcommaaccent uring -40
KPX Kcommaaccent y -40
KPX Kcommaaccent yacute -40
KPX Kcommaaccent ydieresis -40
KPX L T -20
KPX L Tcaron -20
KPX L Tcommaaccent -20
KPX L V -55
KPX L W -55
KPX L Y -20
KPX L Yacute -20
KPX L Ydieresis -20
KPX L quoteright -37
KPX L y -30
KPX L yacute -30
KPX L ydieresis -30
KPX Lacute T -20
KPX Lacute Tcaron -20
KPX Lacute Tcommaaccent -20
KPX Lacute V -55
KPX Lacute W -55
KPX Lacute Y -20
KPX Lacute Yacute -20
KPX Lacute Ydieresis -20
KPX Lacute quoteright -37
KPX Lacute y -30
KPX Lacute yacute -30
KPX Lacute ydieresis -30
KPX Lcommaaccent T -20
KPX Lcommaaccent Tcaron -20
KPX Lcommaaccent Tcommaaccent -20
KPX Lcommaaccent V -55
KPX Lcommaaccent W -55
KPX Lcommaaccent Y -20
KPX Lcommaaccent Yacute -20
KPX Lcommaaccent Ydieresis -20
KPX Lcommaaccent quoteright -37
KPX Lcommaaccent y -30
KPX Lcommaaccent yacute -30
KPX Lcommaaccent ydieresis -30
KPX Lslash T -20
KPX Lslash Tcaron -20
KPX Lslash Tcommaaccent -20
KPX Lslash V -55
KPX Lslash W -55
KPX Lslash Y -20
KPX Lslash Yacute -20
KPX Lslash Ydieresis -20
KPX Lslash quoteright -37
KPX Lslash y -30
KPX Lslash yacute -30
KPX Lslash ydieresis -30
KPX N A -27
KPX N Aacute -27
KPX N Abreve -27
KPX N Acircumflex -27
KPX N Adieresis -27
KPX N Agrave -27
KPX N Amacron -27
KPX N Aogonek -27
KPX N Aring -27
KPX N Atilde -27
KPX Nacute A -27
KPX Nacute Aacute -27
KPX Nacute Abreve -27
KPX Nacute Acircumflex -27
KPX Nacute Adieresis -27
KPX Nacute Agrave -27
KPX Nacute Amacron -27
KPX Nacute Aogonek -27
KPX Nacute Aring -27
KPX Nacute Atilde -27
KPX Ncaron A -27
KPX Ncaron Aacute -27
KPX Ncaron Abreve -27
KPX Ncaron Acircumflex -27
KPX Ncaron Adieresis -27
KPX Ncaron Agrave -27
KPX Ncaron Amacron -27
KPX Ncaron Aogonek -27
KPX Ncaron Aring -27
KPX Ncaron Atilde -27
KPX Ncommaaccent A -27
KPX Ncommaaccent Aacute -27
KPX Ncommaaccent Abreve -27
KPX Ncommaaccent Acircumflex -27
KPX Ncommaaccent Adieresis -27
KPX Ncommaaccent Agrave -27
KPX Ncommaaccent Amacron -27
KPX Ncommaaccent Aogonek -27
KPX Ncommaaccent Aring -27
KPX Ncommaaccent Atilde -27
KPX Ntilde A -27
KPX Ntilde Aacute -27
KPX Ntilde Abreve -27
KPX Ntilde Acircumflex -27
KPX Ntilde Adieresis -27
KPX Ntilde Agrave -27
KPX Ntilde Amacron -27
KPX Ntilde Aogonek -27
KPX Ntilde Aring -27
KPX Ntilde Atilde -27
KPX O A -55
KPX O Aacute -55
KPX O Abreve -55
KPX O Acircumflex -55
KPX O Adieresis -55
KPX O Agrave -55
KPX O Amacron -55
KPX O Aogonek -55
KPX O Aring -55
KPX O Atilde -55
KPX O T -40
KPX O Tcaron -40
KPX O Tcommaaccent -40
KPX O V -50
KPX O W -50
KPX O X -40
KPX O Y -50
KPX O Yacute -50
KPX O Ydieresis -50
KPX Oacute A -55
KPX Oacute Aacute -55
KPX Oacute Abreve -55
KPX Oacute Acircumflex -55
KPX Oacute Adieresis -55
KPX Oacute Agrave -55
KPX Oacute Amacron -55
KPX Oacute Aogonek -55
KPX Oacute Aring -55
KPX Oacute Atilde -55
KPX Oacute T -40
KPX Oacute Tcaron -40
KPX Oacute Tcommaaccent -40
KPX Oacute V -50
KPX Oacute W -50
KPX Oacute X -40
KPX Oacute Y -50
KPX Oacute Yacute -50
KPX Oacute Ydieresis -50
KPX Ocircumflex A -55
KPX Ocircumflex Aacute -55
KPX Ocircumflex Abreve -55
KPX Ocircumflex Acircumflex -55
KPX Ocircumflex Adieresis -55
KPX Ocircumflex Agrave -55
KPX Ocircumflex Amacron -55
KPX Ocircumflex Aogonek -55
KPX Ocircumflex Aring -55
KPX Ocircumflex Atilde -55
KPX Ocircumflex T -40
KPX Ocircumflex Tcaron -40
KPX Ocircumflex Tcommaaccent -40
KPX Ocircumflex V -50
KPX Ocircumflex W -50
KPX Ocircumflex X -40
KPX Ocircumflex Y -50
KPX Ocircumflex Yacute -50
KPX Ocircumflex Ydieresis -50
KPX Odieresis A -55
KPX Odieresis Aacute -55
KPX Odieresis Abreve -55
KPX Odieresis Acircumflex -55
KPX Odieresis Adieresis -55
KPX Odieresis Agrave -55
KPX Odieresis Amacron -55
KPX Odieresis Aogonek -55
KPX Odieresis Aring -55
KPX Odieresis Atilde -55
KPX Odieresis T -40
KPX Odieresis Tcaron -40
KPX Odieresis Tcommaaccent -40
KPX Odieresis V -50
KPX Odieresis W -50
KPX Odieresis X -40
KPX Odieresis Y -50
KPX Odieresis Yacute -50
KPX Odieresis Ydieresis -50
KPX Ograve A -55
KPX Ograve Aacute -55
KPX Ograve Abreve -55
KPX Ograve Acircumflex -55
KPX Ograve Adieresis -55
KPX Ograve Agrave -55
KPX Ograve Amacron -55
KPX Ograve Aogonek -55
KPX Ograve Aring -55
KPX Ograve Atilde -55
KPX Ograve T -40
KPX Ograve Tcaron -40
KPX Ograve Tcommaaccent -40
KPX Ograve V -50
KPX Ograve W -50
KPX Ograve X -40
KPX Ograve Y -50
KPX Ograve Yacute -50
KPX Ograve Ydieresis -50
KPX Ohungarumlaut A -55
KPX Ohungarumlaut Aacute -55
KPX Ohungarumlaut Abreve -55
KPX Ohungarumlaut Acircumflex -55
KPX Ohungarumlaut Adieresis -55
KPX Ohungarumlaut Agrave -55
KPX Ohungarumlaut Amacron -55
KPX Ohungarumlaut Aogonek -55
KPX Ohungarumlaut Aring -55
KPX Ohungarumlaut Atilde -55
KPX Ohungarumlaut T -40
KPX Ohungarumlaut Tcaron -40
KPX Ohungarumlaut Tcommaaccent -40
KPX Ohungarumlaut V -50
KPX Ohungarumlaut W -50
KPX Ohungarumlaut X -40
KPX Ohungarumlaut Y -50
KPX Ohungarumlaut Yacute -50
KPX Ohungarumlaut Ydieresis -50
KPX Omacron A -55
KPX Omacron Aacute -55
KPX Omacron Abreve -55
KPX Omacron Acircumflex -55
KPX Omacron Adieresis -55
KPX Omacron Agrave -55
KPX Omacron Amacron -55
KPX Omacron Aogonek -55
KPX Omacron Aring -55
KPX Omacron Atilde -55
KPX Omacron T -40
KPX Omacron Tcaron -40
KPX Omacron Tcommaaccent -40
KPX Omacron V -50
KPX Omacron W -50
KPX Omacron X -40
KPX Omacron Y -50
KPX Omacron Yacute -50
KPX Omacron Ydieresis -50
KPX Oslash A -55
KPX Oslash Aacute -55
KPX Oslash Abreve -55
KPX Oslash Acircumflex -55
KPX Oslash Adieresis -55
KPX Oslash Agrave -55
KPX Oslash Amacron -55
KPX Oslash Aogonek -55
KPX Oslash Aring -55
KPX Oslash Atilde -55
KPX Oslash T -40
KPX Oslash Tcaron -40
KPX Oslash Tcommaaccent -40
KPX Oslash V -50
KPX Oslash W -50
KPX Oslash X -40
KPX Oslash Y -50
KPX Oslash Yacute -50
KPX Oslash Ydieresis -50
KPX Otilde A -55
KPX Otilde Aacute -55
KPX Otilde Abreve -55
KPX Otilde Acircumflex -55
KPX Otilde Adieresis -55
KPX Otilde Agrave -55
KPX Otilde Amacron -55
KPX Otilde Aogonek -55
KPX Otilde Aring -55
KPX Otilde Atilde -55
KPX Otilde T -40
KPX Otilde Tcaron -40
KPX Otilde Tcommaaccent -40
KPX Otilde V -50
KPX Otilde W -50
KPX Otilde X -40
KPX Otilde Y -50
KPX Otilde Yacute -50
KPX Otilde Ydieresis -50
KPX P A -90
KPX P Aacute -90
KPX P Abreve -90
KPX P Acircumflex -90
KPX P Adieresis -90
KPX P Agrave -90
KPX P Amacron -90
KPX P Aogonek -90
KPX P Aring -90
KPX P Atilde -90
KPX P a -80
KPX P aacute -80
KPX P abreve -80
KPX P acircumflex -80
KPX P adieresis -80
KPX P agrave -80
KPX P amacron -80
KPX P aogonek -80
KPX P aring -80
KPX P atilde -80
KPX P comma -135
KPX P e -80
KPX P eacute -80
KPX P ecaron -80
KPX P ecircumflex -80
KPX P edieresis -80
KPX P edotaccent -80
KPX P egrave -80
KPX P emacron -80
KPX P eogonek -80
KPX P o -80
KPX P oacute -80
KPX P ocircumflex -80
KPX P odieresis -80
KPX P ograve -80
KPX P ohungarumlaut -80
KPX P omacron -80
KPX P oslash -80
KPX P otilde -80
KPX P period -135
KPX Q U -10
KPX Q Uacute -10
KPX Q Ucircumflex -10
KPX Q Udieresis -10
KPX Q Ugrave -10
KPX Q Uhungarumlaut -10
KPX Q Umacron -10
KPX Q Uogonek -10
KPX Q Uring -10
KPX R O -40
KPX R Oacute -40
KPX R Ocircumflex -40
KPX R Odieresis -40
KPX R Ograve -40
KPX R Ohungarumlaut -40
KPX R Omacron -40
KPX R Oslash -40
KPX R Otilde -40
KPX R U -40
KPX R Uacute -40
KPX R Ucircumflex -40
KPX R Udieresis -40
KPX R Ugrave -40
KPX R Uhungarumlaut -40
KPX R Umacron -40
KPX R Uogonek -40
KPX R Uring -40
KPX R V -18
KPX R W -18
KPX R Y -18
KPX R Yacute -18
KPX R Ydieresis -18
KPX Racute O -40
KPX Racute Oacute -40
KPX Racute Ocircumflex -40
KPX Racute Odieresis -40
KPX Racute Ograve -40
KPX Racute Ohungarumlaut -40
KPX Racute Omacron -40
KPX Racute Oslash -40
KPX Racute Otilde -40
KPX Racute U -40
KPX Racute Uacute -40
KPX Racute Ucircumflex -40
KPX Racute Udieresis -40
KPX Racute Ugrave -40
KPX Racute Uhungarumlaut -40
KPX Racute Umacron -40
KPX Racute Uogonek -40
KPX Racute Uring -40
KPX Racute V -18
KPX Racute W -18
KPX Racute Y -18
KPX Racute Yacute -18
KPX Racute Ydieresis -18
KPX Rcaron O -40
KPX Rcaron Oacute -40
KPX Rcaron Ocircumflex -40
KPX Rcaron Odieresis -40
KPX Rcaron Ograve -40
KPX Rcaron Ohungarumlaut -40
KPX Rcaron Omacron -40
KPX Rcaron Oslash -40
KPX Rcaron Otilde -40
KPX Rcaron U -40
KPX Rcaron Uacute -40
KPX Rcaron Ucircumflex -40
KPX Rcaron Udieresis -40
KPX Rcaron Ugrave -40
KPX Rcaron Uhungarumlaut -40
KPX Rcaron Umacron -40
KPX Rcaron Uogonek -40
KPX Rcaron Uring -40
KPX Rcaron V -18
KPX Rcaron W -18
KPX Rcaron Y -18
KPX Rcaron Yacute -18
KPX Rcaron Ydieresis -18
KPX Rcommaaccent O -40
KPX Rcommaaccent Oacute -40
KPX Rcommaaccent Ocircumflex -40
KPX Rcommaaccent Odieresis -40
KPX Rcommaaccent Ograve -40
KPX Rcommaaccent Ohungarumlaut -40
KPX Rcommaaccent Omacron -40
KPX Rcommaaccent Oslash -40
KPX Rcommaaccent Otilde -40
KPX Rcommaaccent U -40
KPX Rcommaaccent Uacute -40
KPX Rcommaaccent Ucircumflex -40
KPX Rcommaaccent Udieresis -40
KPX Rcommaaccent Ugrave -40
KPX Rcommaaccent Uhungarumlaut -40
KPX Rcommaaccent Umacron -40
KPX Rcommaaccent Uogonek -40
KPX Rcommaaccent Uring -40
KPX Rcommaaccent V -18
KPX Rcommaaccent W -18
KPX Rcommaaccent Y -18
KPX Rcommaaccent Yacute -18
KPX Rcommaaccent Ydieresis -18
KPX T A -50
KPX T Aacute -50
KPX T Abreve -50
KPX T Acircumflex -50
KPX T Adieresis -50
KPX T Agrave -50
KPX T Amacron -50
KPX T Aogonek -50
KPX T Aring -50
KPX T Atilde -50
KPX T O -18
KPX T Oacute -18
KPX T Ocircumflex -18
KPX T Odieresis -18
KPX T Ograve -18
KPX T Ohungarumlaut -18
KPX T Omacron -18
KPX T Oslash -18
KPX T Otilde -18
KPX T a -92
KPX T aacute -92
KPX T abreve -92
KPX T acircumflex -92
KPX T adieresis -92
KPX T agrave -92
KPX T amacron -92
KPX T aogonek -92
KPX T aring -92
KPX T atilde -92
KPX T colon -55
KPX T comma -74
KPX T e -92
KPX T eacute -92
KPX T ecaron -92
KPX T ecircumflex -52
KPX T edieresis -52
KPX T edotaccent -92
KPX T egrave -52
KPX T emacron -52
KPX T eogonek -92
KPX T hyphen -74
KPX T i -55
KPX T iacute -55
KPX T iogonek -55
KPX T o -92
KPX T oacute -92
KPX T ocircumflex -92
KPX T odieresis -92
KPX T ograve -92
KPX T ohungarumlaut -92
KPX T omacron -92
KPX T oslash -92
KPX T otilde -92
KPX T period -74
KPX T r -55
KPX T racute -55
KPX T rcaron -55
KPX T rcommaaccent -55
KPX T semicolon -65
KPX T u -55
KPX T uacute -55
KPX T ucircumflex -55
KPX T udieresis -55
KPX T ugrave -55
KPX T uhungarumlaut -55
KPX T umacron -55
KPX T uogonek -55
KPX T uring -55
KPX T w -74
KPX T y -74
KPX T yacute -74
KPX T ydieresis -34
KPX Tcaron A -50
KPX Tcaron Aacute -50
KPX Tcaron Abreve -50
KPX Tcaron Acircumflex -50
KPX Tcaron Adieresis -50
KPX Tcaron Agrave -50
KPX Tcaron Amacron -50
KPX Tcaron Aogonek -50
KPX Tcaron Aring -50
KPX Tcaron Atilde -50
KPX Tcaron O -18
KPX Tcaron Oacute -18
KPX Tcaron Ocircumflex -18
KPX Tcaron Odieresis -18
KPX Tcaron Ograve -18
KPX Tcaron Ohungarumlaut -18
KPX Tcaron Omacron -18
KPX Tcaron Oslash -18
KPX Tcaron Otilde -18
KPX Tcaron a -92
KPX Tcaron aacute -92
KPX Tcaron abreve -92
KPX Tcaron acircumflex -92
KPX Tcaron adieresis -92
KPX Tcaron agrave -92
KPX Tcaron amacron -92
KPX Tcaron aogonek -92
KPX Tcaron aring -92
KPX Tcaron atilde -92
KPX Tcaron colon -55
KPX Tcaron comma -74
KPX Tcaron e -92
KPX Tcaron eacute -92
KPX Tcaron ecaron -92
KPX Tcaron ecircumflex -52
KPX Tcaron edieresis -52
KPX Tcaron edotaccent -92
KPX Tcaron egrave -52
KPX Tcaron emacron -52
KPX Tcaron eogonek -92
KPX Tcaron hyphen -74
KPX Tcaron i -55
KPX Tcaron iacute -55
KPX Tcaron iogonek -55
KPX Tcaron o -92
KPX Tcaron oacute -92
KPX Tcaron ocircumflex -92
KPX Tcaron odieresis -92
KPX Tcaron ograve -92
KPX Tcaron ohungarumlaut -92
KPX Tcaron omacron -92
KPX Tcaron oslash -92
KPX Tcaron otilde -92
KPX Tcaron period -74
KPX Tcaron r -55
KPX Tcaron racute -55
KPX Tcaron rcaron -55
KPX Tcaron rcommaaccent -55
KPX Tcaron semicolon -65
KPX Tcaron u -55
KPX Tcaron uacute -55
KPX Tcaron ucircumflex -55
KPX Tcaron udieresis -55
KPX Tcaron ugrave -55
KPX Tcaron uhungarumlaut -55
KPX Tcaron umacron -55
KPX Tcaron uogonek -55
KPX Tcaron uring -55
KPX Tcaron w -74
KPX Tcaron y -74
KPX Tcaron yacute -74
KPX Tcaron ydieresis -34
KPX Tcommaaccent A -50
KPX Tcommaaccent Aacute -50
KPX Tcommaaccent Abreve -50
KPX Tcommaaccent Acircumflex -50
KPX Tcommaaccent Adieresis -50
KPX Tcommaaccent Agrave -50
KPX Tcommaaccent Amacron -50
KPX Tcommaaccent Aogonek -50
KPX Tcommaaccent Aring -50
KPX Tcommaaccent Atilde -50
KPX Tcommaaccent O -18
KPX Tcommaaccent Oacute -18
KPX Tcommaaccent Ocircumflex -18
KPX Tcommaaccent Odieresis -18
KPX Tcommaaccent Ograve -18
KPX Tcommaaccent Ohungarumlaut -18
KPX Tcommaaccent Omacron -18
KPX Tcommaaccent Oslash -18
KPX Tcommaaccent Otilde -18
KPX Tcommaaccent a -92
KPX Tcommaaccent aacute -92
KPX Tcommaaccent abreve -92
KPX Tcommaaccent acircumflex -92
KPX Tcommaaccent adieresis -92
KPX Tcommaaccent agrave -92
KPX Tcommaaccent amacron -92
KPX Tcommaaccent aogonek -92
KPX Tcommaaccent aring -92
KPX Tcommaaccent atilde -92
KPX Tcommaaccent colon -55
KPX Tcommaaccent comma -74
KPX Tcommaaccent e -92
KPX Tcommaaccent eacute -92
KPX Tcommaaccent ecaron -92
KPX Tcommaaccent ecircumflex -52
KPX Tcommaaccent edieresis -52
KPX Tcommaaccent edotaccent -92
KPX Tcommaaccent egrave -52
KPX Tcommaaccent emacron -52
KPX Tcommaaccent eogonek -92
KPX Tcommaaccent hyphen -74
KPX Tcommaaccent i -55
KPX Tcommaaccent iacute -55
KPX Tcommaaccent iogonek -55
KPX Tcommaaccent o -92
KPX Tcommaaccent oacute -92
KPX Tcommaaccent ocircumflex -92
KPX Tcommaaccent odieresis -92
KPX Tcommaaccent ograve -92
KPX Tcommaaccent ohungarumlaut -92
KPX Tcommaaccent omacron -92
KPX Tcommaaccent oslash -92
KPX Tcommaaccent otilde -92
KPX Tcommaaccent period -74
KPX Tcommaaccent r -55
KPX Tcommaaccent racute -55
KPX Tcommaaccent rcaron -55
KPX Tcommaaccent rcommaaccent -55
KPX Tcommaaccent semicolon -65
KPX Tcommaaccent u -55
KPX Tcommaaccent uacute -55
KPX Tcommaaccent ucircumflex -55
KPX Tcommaaccent udieresis -55
KPX Tcommaaccent ugrave -55
KPX Tcommaaccent uhungarumlaut -55
KPX Tcommaaccent umacron -55
KPX Tcommaaccent uogonek -55
KPX Tcommaaccent uring -55
KPX Tcommaaccent w -74
KPX Tcommaaccent y -74
KPX Tcommaaccent yacute -74
KPX Tcommaaccent ydieresis -34
KPX U A -40
KPX U Aacute -40
KPX U Abreve -40
KPX U Acircumflex -40
KPX U Adieresis -40
KPX U Agrave -40
KPX U Amacron -40
KPX U Aogonek -40
KPX U Aring -40
KPX U Atilde -40
KPX U comma -25
KPX U period -25
KPX Uacute A -40
KPX Uacute Aacute -40
KPX Uacute Abreve -40
KPX Uacute Acircumflex -40
KPX Uacute Adieresis -40
KPX Uacute Agrave -40
KPX Uacute Amacron -40
KPX Uacute Aogonek -40
KPX Uacute Aring -40
KPX Uacute Atilde -40
KPX Uacute comma -25
KPX Uacute period -25
KPX Ucircumflex A -40
KPX Ucircumflex Aacute -40
KPX Ucircumflex Abreve -40
KPX Ucircumflex Acircumflex -40
KPX Ucircumflex Adieresis -40
KPX Ucircumflex Agrave -40
KPX Ucircumflex Amacron -40
KPX Ucircumflex Aogonek -40
KPX Ucircumflex Aring -40
KPX Ucircumflex Atilde -40
KPX Ucircumflex comma -25
KPX Ucircumflex period -25
KPX Udieresis A -40
KPX Udieresis Aacute -40
KPX Udieresis Abreve -40
KPX Udieresis Acircumflex -40
KPX Udieresis Adieresis -40
KPX Udieresis Agrave -40
KPX Udieresis Amacron -40
KPX Udieresis Aogonek -40
KPX Udieresis Aring -40
KPX Udieresis Atilde -40
KPX Udieresis comma -25
KPX Udieresis period -25
KPX Ugrave A -40
KPX Ugrave Aacute -40
KPX Ugrave Abreve -40
KPX Ugrave Acircumflex -40
KPX Ugrave Adieresis -40
KPX Ugrave Agrave -40
KPX Ugrave Amacron -40
KPX Ugrave Aogonek -40
KPX Ugrave Aring -40
KPX Ugrave Atilde -40
KPX Ugrave comma -25
KPX Ugrave period -25
KPX Uhungarumlaut A -40
KPX Uhungarumlaut Aacute -40
KPX Uhungarumlaut Abreve -40
KPX Uhungarumlaut Acircumflex -40
KPX Uhungarumlaut Adieresis -40
KPX Uhungarumlaut Agrave -40
KPX Uhungarumlaut Amacron -40
KPX Uhungarumlaut Aogonek -40
KPX Uhungarumlaut Aring -40
KPX Uhungarumlaut Atilde -40
KPX Uhungarumlaut comma -25
KPX Uhungarumlaut period -25
KPX Umacron A -40
KPX Umacron Aacute -40
KPX Umacron Abreve -40
KPX Umacron Acircumflex -40
KPX Umacron Adieresis -40
KPX Umacron Agrave -40
KPX Umacron Amacron -40
KPX Umacron Aogonek -40
KPX Umacron Aring -40
KPX Umacron Atilde -40
KPX Umacron comma -25
KPX Umacron period -25
KPX Uogonek A -40
KPX Uogonek Aacute -40
KPX Uogonek Abreve -40
KPX Uogonek Acircumflex -40
KPX Uogonek Adieresis -40
KPX Uogonek Agrave -40
KPX Uogonek Amacron -40
KPX Uogonek Aogonek -40
KPX Uogonek Aring -40
KPX Uogonek Atilde -40
KPX Uogonek comma -25
KPX Uogonek period -25
KPX Uring A -40
KPX Uring Aacute -40
KPX Uring Abreve -40
KPX Uring Acircumflex -40
KPX Uring Adieresis -40
KPX Uring Agrave -40
KPX Uring Amacron -40
KPX Uring Aogonek -40
KPX Uring Aring -40
KPX Uring Atilde -40
KPX Uring comma -25
KPX Uring period -25
KPX V A -60
KPX V Aacute -60
KPX V Abreve -60
KPX V Acircumflex -60
KPX V Adieresis -60
KPX V Agrave -60
KPX V Amacron -60
KPX V Aogonek -60
KPX V Aring -60
KPX V Atilde -60
KPX V O -30
KPX V Oacute -30
KPX V Ocircumflex -30
KPX V Odieresis -30
KPX V Ograve -30
KPX V Ohungarumlaut -30
KPX V Omacron -30
KPX V Oslash -30
KPX V Otilde -30
KPX V a -111
KPX V aacute -111
KPX V abreve -111
KPX V acircumflex -111
KPX V adieresis -111
KPX V agrave -111
KPX V amacron -111
KPX V aogonek -111
KPX V aring -111
KPX V atilde -111
KPX V colon -65
KPX V comma -129
KPX V e -111
KPX V eacute -111
KPX V ecaron -111
KPX V ecircumflex -111
KPX V edieresis -71
KPX V edotaccent -111
KPX V egrave -71
KPX V emacron -71
KPX V eogonek -111
KPX V hyphen -55
KPX V i -74
KPX V iacute -74
KPX V icircumflex -34
KPX V idieresis -34
KPX V igrave -34
KPX V imacron -34
KPX V iogonek -74
KPX V o -111
KPX V oacute -111
KPX V ocircumflex -111
KPX V odieresis -111
KPX V ograve -111
KPX V ohungarumlaut -111
KPX V omacron -111
KPX V oslash -111
KPX V otilde -111
KPX V period -129
KPX V semicolon -74
KPX V u -74
KPX V uacute -74
KPX V ucircumflex -74
KPX V udieresis -74
KPX V ugrave -74
KPX V uhungarumlaut -74
KPX V umacron -74
KPX V uogonek -74
KPX V uring -74
KPX W A -60
KPX W Aacute -60
KPX W Abreve -60
KPX W Acircumflex -60
KPX W Adieresis -60
KPX W Agrave -60
KPX W Amacron -60
KPX W Aogonek -60
KPX W Aring -60
KPX W Atilde -60
KPX W O -25
KPX W Oacute -25
KPX W Ocircumflex -25
KPX W Odieresis -25
KPX W Ograve -25
KPX W Ohungarumlaut -25
KPX W Omacron -25
KPX W Oslash -25
KPX W Otilde -25
KPX W a -92
KPX W aacute -92
KPX W abreve -92
KPX W acircumflex -92
KPX W adieresis -92
KPX W agrave -92
KPX W amacron -92
KPX W aogonek -92
KPX W aring -92
KPX W atilde -92
KPX W colon -65
KPX W comma -92
KPX W e -92
KPX W eacute -92
KPX W ecaron -92
KPX W ecircumflex -92
KPX W edieresis -52
KPX W edotaccent -92
KPX W egrave -52
KPX W emacron -52
KPX W eogonek -92
KPX W hyphen -37
KPX W i -55
KPX W iacute -55
KPX W iogonek -55
KPX W o -92
KPX W oacute -92
KPX W ocircumflex -92
KPX W odieresis -92
KPX W ograve -92
KPX W ohungarumlaut -92
KPX W omacron -92
KPX W oslash -92
KPX W otilde -92
KPX W period -92
KPX W semicolon -65
KPX W u -55
KPX W uacute -55
KPX W ucircumflex -55
KPX W udieresis -55
KPX W ugrave -55
KPX W uhungarumlaut -55
KPX W umacron -55
KPX W uogonek -55
KPX W uring -55
KPX W y -70
KPX W yacute -70
KPX W ydieresis -70
KPX Y A -50
KPX Y Aacute -50
KPX Y Abreve -50
KPX Y Acircumflex -50
KPX Y Adieresis -50
KPX Y Agrave -50
KPX Y Amacron -50
KPX Y Aogonek -50
KPX Y Aring -50
KPX Y Atilde -50
KPX Y O -15
KPX Y Oacute -15
KPX Y Ocircumflex -15
KPX Y Odieresis -15
KPX Y Ograve -15
KPX Y Ohungarumlaut -15
KPX Y Omacron -15
KPX Y Oslash -15
KPX Y Otilde -15
KPX Y a -92
KPX Y aacute -92
KPX Y abreve -92
KPX Y acircumflex -92
KPX Y adieresis -92
KPX Y agrave -92
KPX Y amacron -92
KPX Y aogonek -92
KPX Y aring -92
KPX Y atilde -92
KPX Y colon -65
KPX Y comma -92
KPX Y e -92
KPX Y eacute -92
KPX Y ecaron -92
KPX Y ecircumflex -92
KPX Y edieresis -52
KPX Y edotaccent -92
KPX Y egrave -52
KPX Y emacron -52
KPX Y eogonek -92
KPX Y hyphen -74
KPX Y i -74
KPX Y iacute -74
KPX Y icircumflex -34
KPX Y idieresis -34
KPX Y igrave -34
KPX Y imacron -34
KPX Y iogonek -74
KPX Y o -92
KPX Y oacute -92
KPX Y ocircumflex -92
KPX Y odieresis -92
KPX Y ograve -92
KPX Y ohungarumlaut -92
KPX Y omacron -92
KPX Y oslash -92
KPX Y otilde -92
KPX Y period -92
KPX Y semicolon -65
KPX Y u -92
KPX Y uacute -92
KPX Y ucircumflex -92
KPX Y udieresis -92
KPX Y ugrave -92
KPX Y uhungarumlaut -92
KPX Y umacron -92
KPX Y uogonek -92
KPX Y uring -92
KPX Yacute A -50
KPX Yacute Aacute -50
KPX Yacute Abreve -50
KPX Yacute Acircumflex -50
KPX Yacute Adieresis -50
KPX Yacute Agrave -50
KPX Yacute Amacron -50
KPX Yacute Aogonek -50
KPX Yacute Aring -50
KPX Yacute Atilde -50
KPX Yacute O -15
KPX Yacute Oacute -15
KPX Yacute Ocircumflex -15
KPX Yacute Odieresis -15
KPX Yacute Ograve -15
KPX Yacute Ohungarumlaut -15
KPX Yacute Omacron -15
KPX Yacute Oslash -15
KPX Yacute Otilde -15
KPX Yacute a -92
KPX Yacute aacute -92
KPX Yacute abreve -92
KPX Yacute acircumflex -92
KPX Yacute adieresis -92
KPX Yacute agrave -92
KPX Yacute amacron -92
KPX Yacute aogonek -92
KPX Yacute aring -92
KPX Yacute atilde -92
KPX Yacute colon -65
KPX Yacute comma -92
KPX Yacute e -92
KPX Yacute eacute -92
KPX Yacute ecaron -92
KPX Yacute ecircumflex -92
KPX Yacute edieresis -52
KPX Yacute edotaccent -92
KPX Yacute egrave -52
KPX Yacute emacron -52
KPX Yacute eogonek -92
KPX Yacute hyphen -74
KPX Yacute i -74
KPX Yacute iacute -74
KPX Yacute icircumflex -34
KPX Yacute idieresis -34
KPX Yacute igrave -34
KPX Yacute imacron -34
KPX Yacute iogonek -74
KPX Yacute o -92
KPX Yacute oacute -92
KPX Yacute ocircumflex -92
KPX Yacute odieresis -92
KPX Yacute ograve -92
KPX Yacute ohungarumlaut -92
KPX Yacute omacron -92
KPX Yacute oslash -92
KPX Yacute otilde -92
KPX Yacute period -92
KPX Yacute semicolon -65
KPX Yacute u -92
KPX Yacute uacute -92
KPX Yacute ucircumflex -92
KPX Yacute udieresis -92
KPX Yacute ugrave -92
KPX Yacute uhungarumlaut -92
KPX Yacute umacron -92
KPX Yacute uogonek -92
KPX Yacute uring -92
KPX Ydieresis A -50
KPX Ydieresis Aacute -50
KPX Ydieresis Abreve -50
KPX Ydieresis Acircumflex -50
KPX Ydieresis Adieresis -50
KPX Ydieresis Agrave -50
KPX Ydieresis Amacron -50
KPX Ydieresis Aogonek -50
KPX Ydieresis Aring -50
KPX Ydieresis Atilde -50
KPX Ydieresis O -15
KPX Ydieresis Oacute -15
KPX Ydieresis Ocircumflex -15
KPX Ydieresis Odieresis -15
KPX Ydieresis Ograve -15
KPX Ydieresis Ohungarumlaut -15
KPX Ydieresis Omacron -15
KPX Ydieresis Oslash -15
KPX Ydieresis Otilde -15
KPX Ydieresis a -92
KPX Ydieresis aacute -92
KPX Ydieresis abreve -92
KPX Ydieresis acircumflex -92
KPX Ydieresis adieresis -92
KPX Ydieresis agrave -92
KPX Ydieresis amacron -92
KPX Ydieresis aogonek -92
KPX Ydieresis aring -92
KPX Ydieresis atilde -92
KPX Ydieresis colon -65
KPX Ydieresis comma -92
KPX Ydieresis e -92
KPX Ydieresis eacute -92
KPX Ydieresis ecaron -92
KPX Ydieresis ecircumflex -92
KPX Ydieresis edieresis -52
KPX Ydieresis edotaccent -92
KPX Ydieresis egrave -52
KPX Ydieresis emacron -52
KPX Ydieresis eogonek -92
KPX Ydieresis hyphen -74
KPX Ydieresis i -74
KPX Ydieresis iacute -74
KPX Ydieresis icircumflex -34
KPX Ydieresis idieresis -34
KPX Ydieresis igrave -34
KPX Ydieresis imacron -34
KPX Ydieresis iogonek -74
KPX Ydieresis o -92
KPX Ydieresis oacute -92
KPX Ydieresis ocircumflex -92
KPX Ydieresis odieresis -92
KPX Ydieresis ograve -92
KPX Ydieresis ohungarumlaut -92
KPX Ydieresis omacron -92
KPX Ydieresis oslash -92
KPX Ydieresis otilde -92
KPX Ydieresis period -92
KPX Ydieresis semicolon -65
KPX Ydieresis u -92
KPX Ydieresis uacute -92
KPX Ydieresis ucircumflex -92
KPX Ydieresis udieresis -92
KPX Ydieresis ugrave -92
KPX Ydieresis uhungarumlaut -92
KPX Ydieresis umacron -92
KPX Ydieresis uogonek -92
KPX Ydieresis uring -92
KPX a g -10
KPX a gbreve -10
KPX a gcommaaccent -10
KPX aacute g -10
KPX aacute gbreve -10
KPX aacute gcommaaccent -10
KPX abreve g -10
KPX abreve gbreve -10
KPX abreve gcommaaccent -10
KPX acircumflex g -10
KPX acircumflex gbreve -10
KPX acircumflex gcommaaccent -10
KPX adieresis g -10
KPX adieresis gbreve -10
KPX adieresis gcommaaccent -10
KPX agrave g -10
KPX agrave gbreve -10
KPX agrave gcommaaccent -10
KPX amacron g -10
KPX amacron gbreve -10
KPX amacron gcommaaccent -10
KPX aogonek g -10
KPX aogonek gbreve -10
KPX aogonek gcommaaccent -10
KPX aring g -10
KPX aring gbreve -10
KPX aring gcommaaccent -10
KPX atilde g -10
KPX atilde gbreve -10
KPX atilde gcommaaccent -10
KPX b period -40
KPX b u -20
KPX b uacute -20
KPX b ucircumflex -20
KPX b udieresis -20
KPX b ugrave -20
KPX b uhungarumlaut -20
KPX b umacron -20
KPX b uogonek -20
KPX b uring -20
KPX c h -15
KPX c k -20
KPX c kcommaaccent -20
KPX cacute h -15
KPX cacute k -20
KPX cacute kcommaaccent -20
KPX ccaron h -15
KPX ccaron k -20
KPX ccaron kcommaaccent -20
KPX ccedilla h -15
KPX ccedilla k -20
KPX ccedilla kcommaaccent -20
KPX comma quotedblright -140
KPX comma quoteright -140
KPX e comma -10
KPX e g -40
KPX e gbreve -40
KPX e gcommaaccent -40
KPX e period -15
KPX e v -15
KPX e w -15
KPX e x -20
KPX e y -30
KPX e yacute -30
KPX e ydieresis -30
KPX eacute comma -10
KPX eacute g -40
KPX eacute gbreve -40
KPX eacute gcommaaccent -40
KPX eacute period -15
KPX eacute v -15
KPX eacute w -15
KPX eacute x -20
KPX eacute y -30
KPX eacute yacute -30
KPX eacute ydieresis -30
KPX ecaron comma -10
KPX ecaron g -40
KPX ecaron gbreve -40
KPX ecaron gcommaaccent -40
KPX ecaron period -15
KPX ecaron v -15
KPX ecaron w -15
KPX ecaron x -20
KPX ecaron y -30
KPX ecaron yacute -30
KPX ecaron ydieresis -30
KPX ecircumflex comma -10
KPX ecircumflex g -40
KPX ecircumflex gbreve -40
KPX ecircumflex gcommaaccent -40
KPX ecircumflex period -15
KPX ecircumflex v -15
KPX ecircumflex w -15
KPX ecircumflex x -20
KPX ecircumflex y -30
KPX ecircumflex yacute -30
KPX ecircumflex ydieresis -30
KPX edieresis comma -10
KPX edieresis g -40
KPX edieresis gbreve -40
KPX edieresis gcommaaccent -40
KPX edieresis period -15
KPX edieresis v -15
KPX edieresis w -15
KPX edieresis x -20
KPX edieresis y -30
KPX edieresis yacute -30
KPX edieresis ydieresis -30
KPX edotaccent comma -10
KPX edotaccent g -40
KPX edotaccent gbreve -40
KPX edotaccent gcommaaccent -40
KPX edotaccent period -15
KPX edotaccent v -15
KPX edotaccent w -15
KPX edotaccent x -20
KPX edotaccent y -30
KPX edotaccent yacute -30
KPX edotaccent ydieresis -30
KPX egrave comma -10
KPX egrave g -40
KPX egrave gbreve -40
KPX egrave gcommaaccent -40
KPX egrave period -15
KPX egrave v -15
KPX egrave w -15
KPX egrave x -20
KPX egrave y -30
KPX egrave yacute -30
KPX egrave ydieresis -30
KPX emacron comma -10
KPX emacron g -40
KPX emacron gbreve -40
KPX emacron gcommaaccent -40
KPX emacron period -15
KPX emacron v -15
KPX emacron w -15
KPX emacron x -20
KPX emacron y -30
KPX emacron yacute -30
KPX emacron ydieresis -30
KPX eogonek comma -10
KPX eogonek g -40
KPX eogonek gbreve -40
KPX eogonek gcommaaccent -40
KPX eogonek period -15
KPX eogonek v -15
KPX eogonek w -15
KPX eogonek x -20
KPX eogonek y -30
KPX eogonek yacute -30
KPX eogonek ydieresis -30
KPX f comma -10
KPX f dotlessi -60
KPX f f -18
KPX f i -20
KPX f iogonek -20
KPX f period -15
KPX f quoteright 92
KPX g comma -10
KPX g e -10
KPX g eacute -10
KPX g ecaron -10
KPX g ecircumflex -10
KPX g edieresis -10
KPX g edotaccent -10
KPX g egrave -10
KPX g emacron -10
KPX g eogonek -10
KPX g g -10
KPX g gbreve -10
KPX g gcommaaccent -10
KPX g period -15
KPX gbreve comma -10
KPX gbreve e -10
KPX gbreve eacute -10
KPX gbreve ecaron -10
KPX gbreve ecircumflex -10
KPX gbreve edieresis -10
KPX gbreve edotaccent -10
KPX gbreve egrave -10
KPX gbreve emacron -10
KPX gbreve eogonek -10
KPX gbreve g -10
KPX gbreve gbreve -10
KPX gbreve gcommaaccent -10
KPX gbreve period -15
KPX gcommaaccent comma -10
KPX gcommaaccent e -10
KPX gcommaaccent eacute -10
KPX gcommaaccent ecaron -10
KPX gcommaaccent ecircumflex -10
KPX gcommaaccent edieresis -10
KPX gcommaaccent edotaccent -10
KPX gcommaaccent egrave -10
KPX gcommaaccent emacron -10
KPX gcommaaccent eogonek -10
KPX gcommaaccent g -10
KPX gcommaaccent gbreve -10
KPX gcommaaccent gcommaaccent -10
KPX gcommaaccent period -15
KPX k e -10
KPX k eacute -10
KPX k ecaron -10
KPX k ecircumflex -10
KPX k edieresis -10
KPX k edotaccent -10
KPX k egrave -10
KPX k emacron -10
KPX k eogonek -10
KPX k o -10
KPX k oacute -10
KPX k ocircumflex -10
KPX k odieresis -10
KPX k ograve -10
KPX k ohungarumlaut -10
KPX k omacron -10
KPX k oslash -10
KPX k otilde -10
KPX k y -10
KPX k yacute -10
KPX k ydieresis -10
KPX kcommaaccent e -10
KPX kcommaaccent eacute -10
KPX kcommaaccent ecaron -10
KPX kcommaaccent ecircumflex -10
KPX kcommaaccent edieresis -10
KPX kcommaaccent edotaccent -10
KPX kcommaaccent egrave -10
KPX kcommaaccent emacron -10
KPX kcommaaccent eogonek -10
KPX kcommaaccent o -10
KPX kcommaaccent oacute -10
KPX kcommaaccent ocircumflex -10
KPX kcommaaccent odieresis -10
KPX kcommaaccent ograve -10
KPX kcommaaccent ohungarumlaut -10
KPX kcommaaccent omacron -10
KPX kcommaaccent oslash -10
KPX kcommaaccent otilde -10
KPX kcommaaccent y -10
KPX kcommaaccent yacute -10
KPX kcommaaccent ydieresis -10
KPX n v -40
KPX nacute v -40
KPX ncaron v -40
KPX ncommaaccent v -40
KPX ntilde v -40
KPX o g -10
KPX o gbreve -10
KPX o gcommaaccent -10
KPX o v -10
KPX oacute g -10
KPX oacute gbreve -10
KPX oacute gcommaaccent -10
KPX oacute v -10
KPX ocircumflex g -10
KPX ocircumflex gbreve -10
KPX ocircumflex gcommaaccent -10
KPX ocircumflex v -10
KPX odieresis g -10
KPX odieresis gbreve -10
KPX odieresis gcommaaccent -10
KPX odieresis v -10
KPX ograve g -10
KPX ograve gbreve -10
KPX ograve gcommaaccent -10
KPX ograve v -10
KPX ohungarumlaut g -10
KPX ohungarumlaut gbreve -10
KPX ohungarumlaut gcommaaccent -10
KPX ohungarumlaut v -10
KPX omacron g -10
KPX omacron gbreve -10
KPX omacron gcommaaccent -10
KPX omacron v -10
KPX oslash g -10
KPX oslash gbreve -10
KPX oslash gcommaaccent -10
KPX oslash v -10
KPX otilde g -10
KPX otilde gbreve -10
KPX otilde gcommaaccent -10
KPX otilde v -10
KPX period quotedblright -140
KPX period quoteright -140
KPX quoteleft quoteleft -111
KPX quoteright d -25
KPX quoteright dcroat -25
KPX quoteright quoteright -111
KPX quoteright r -25
KPX quoteright racute -25
KPX quoteright rcaron -25
KPX quoteright rcommaaccent -25
KPX quoteright s -40
KPX quoteright sacute -40
KPX quoteright scaron -40
KPX quoteright scedilla -40
KPX quoteright scommaaccent -40
KPX quoteright space -111
KPX quoteright t -30
KPX quoteright tcommaaccent -30
KPX quoteright v -10
KPX r a -15
KPX r aacute -15
KPX r abreve -15
KPX r acircumflex -15
KPX r adieresis -15
KPX r agrave -15
KPX r amacron -15
KPX r aogonek -15
KPX r aring -15
KPX r atilde -15
KPX r c -37
KPX r cacute -37
KPX r ccaron -37
KPX r ccedilla -37
KPX r comma -111
KPX r d -37
KPX r dcroat -37
KPX r e -37
KPX r eacute -37
KPX r ecaron -37
KPX r ecircumflex -37
KPX r edieresis -37
KPX r edotaccent -37
KPX r egrave -37
KPX r emacron -37
KPX r eogonek -37
KPX r g -37
KPX r gbreve -37
KPX r gcommaaccent -37
KPX r hyphen -20
KPX r o -45
KPX r oacute -45
KPX r ocircumflex -45
KPX r odieresis -45
KPX r ograve -45
KPX r ohungarumlaut -45
KPX r omacron -45
KPX r oslash -45
KPX r otilde -45
KPX r period -111
KPX r q -37
KPX r s -10
KPX r sacute -10
KPX r scaron -10
KPX r scedilla -10
KPX r scommaaccent -10
KPX racute a -15
KPX racute aacute -15
KPX racute abreve -15
KPX racute acircumflex -15
KPX racute adieresis -15
KPX racute agrave -15
KPX racute amacron -15
KPX racute aogonek -15
KPX racute aring -15
KPX racute atilde -15
KPX racute c -37
KPX racute cacute -37
KPX racute ccaron -37
KPX racute ccedilla -37
KPX racute comma -111
KPX racute d -37
KPX racute dcroat -37
KPX racute e -37
KPX racute eacute -37
KPX racute ecaron -37
KPX racute ecircumflex -37
KPX racute edieresis -37
KPX racute edotaccent -37
KPX racute egrave -37
KPX racute emacron -37
KPX racute eogonek -37
KPX racute g -37
KPX racute gbreve -37
KPX racute gcommaaccent -37
KPX racute hyphen -20
KPX racute o -45
KPX racute oacute -45
KPX racute ocircumflex -45
KPX racute odieresis -45
KPX racute ograve -45
KPX racute ohungarumlaut -45
KPX racute omacron -45
KPX racute oslash -45
KPX racute otilde -45
KPX racute period -111
KPX racute q -37
KPX racute s -10
KPX racute sacute -10
KPX racute scaron -10
KPX racute scedilla -10
KPX racute scommaaccent -10
KPX rcaron a -15
KPX rcaron aacute -15
KPX rcaron abreve -15
KPX rcaron acircumflex -15
KPX rcaron adieresis -15
KPX rcaron agrave -15
KPX rcaron amacron -15
KPX rcaron aogonek -15
KPX rcaron aring -15
KPX rcaron atilde -15
KPX rcaron c -37
KPX rcaron cacute -37
KPX rcaron ccaron -37
KPX rcaron ccedilla -37
KPX rcaron comma -111
KPX rcaron d -37
KPX rcaron dcroat -37
KPX rcaron e -37
KPX rcaron eacute -37
KPX rcaron ecaron -37
KPX rcaron ecircumflex -37
KPX rcaron edieresis -37
KPX rcaron edotaccent -37
KPX rcaron egrave -37
KPX rcaron emacron -37
KPX rcaron eogonek -37
KPX rcaron g -37
KPX rcaron gbreve -37
KPX rcaron gcommaaccent -37
KPX rcaron hyphen -20
KPX rcaron o -45
KPX rcaron oacute -45
KPX rcaron ocircumflex -45
KPX rcaron odieresis -45
KPX rcaron ograve -45
KPX rcaron ohungarumlaut -45
KPX rcaron omacron -45
KPX rcaron oslash -45
KPX rcaron otilde -45
KPX rcaron period -111
KPX rcaron q -37
KPX rcaron s -10
KPX rcaron sacute -10
KPX rcaron scaron -10
KPX rcaron scedilla -10
KPX rcaron scommaaccent -10
KPX rcommaaccent a -15
KPX rcommaaccent aacute -15
KPX rcommaaccent abreve -15
KPX rcommaaccent acircumflex -15
KPX rcommaaccent adieresis -15
KPX rcommaaccent agrave -15
KPX rcommaaccent amacron -15
KPX rcommaaccent aogonek -15
KPX rcommaaccent aring -15
KPX rcommaaccent atilde -15
KPX rcommaaccent c -37
KPX rcommaaccent cacute -37
KPX rcommaaccent ccaron -37
KPX rcommaaccent ccedilla -37
KPX rcommaaccent comma -111
KPX rcommaaccent d -37
KPX rcommaaccent dcroat -37
KPX rcommaaccent e -37
KPX rcommaaccent eacute -37
KPX rcommaaccent ecaron -37
KPX rcommaaccent ecircumflex -37
KPX rcommaaccent edieresis -37
KPX rcommaaccent edotaccent -37
KPX rcommaaccent egrave -37
KPX rcommaaccent emacron -37
KPX rcommaaccent eogonek -37
KPX rcommaaccent g -37
KPX rcommaaccent gbreve -37
KPX rcommaaccent gcommaaccent -37
KPX rcommaaccent hyphen -20
KPX rcommaaccent o -45
KPX rcommaaccent oacute -45
KPX rcommaaccent ocircumflex -45
KPX rcommaaccent odieresis -45
KPX rcommaaccent ograve -45
KPX rcommaaccent ohungarumlaut -45
KPX rcommaaccent omacron -45
KPX rcommaaccent oslash -45
KPX rcommaaccent otilde -45
KPX rcommaaccent period -111
KPX rcommaaccent q -37
KPX rcommaaccent s -10
KPX rcommaaccent sacute -10
KPX rcommaaccent scaron -10
KPX rcommaaccent scedilla -10
KPX rcommaaccent scommaaccent -10
KPX space A -18
KPX space Aacute -18
KPX space Abreve -18
KPX space Acircumflex -18
KPX space Adieresis -18
KPX space Agrave -18
KPX space Amacron -18
KPX space Aogonek -18
KPX space Aring -18
KPX space Atilde -18
KPX space T -18
KPX space Tcaron -18
KPX space Tcommaaccent -18
KPX space V -35
KPX space W -40
KPX space Y -75
KPX space Yacute -75
KPX space Ydieresis -75
KPX v comma -74
KPX v period -74
KPX w comma -74
KPX w period -74
KPX y comma -55
KPX y period -55
KPX yacute comma -55
KPX yacute period -55
KPX ydieresis comma -55
KPX ydieresis period -55
EndKernPairs
EndKernData
EndFontMetrics
'
%
classmethod: StandardFont
timesRoman
	"from http://www.adobe.com/devnet/font.html "

	<font: #'Times-Roman'>
	^self
		windowsName: 'Times New Roman'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.
Comment Creation Date: Thu May  1 12:49:17 1997
Comment UniqueID 43068
Comment VMusage 43909 54934
FontName Times-Roman
FullName Times Roman
FamilyName Times
Weight Roman
ItalicAngle 0
IsFixedPitch false
CharacterSet ExtendedRoman
FontBBox -168 -218 1000 898 
UnderlinePosition -100
UnderlineThickness 50
Version 002.000
Notice Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.
EncodingScheme AdobeStandardEncoding
CapHeight 662
XHeight 450
Ascender 683
Descender -217
StdHW 28
StdVW 84
StartCharMetrics 315
C 32 ; WX 250 ; N space ; B 0 0 0 0 ;
C 33 ; WX 333 ; N exclam ; B 130 -9 238 676 ;
C 34 ; WX 408 ; N quotedbl ; B 77 431 331 676 ;
C 35 ; WX 500 ; N numbersign ; B 5 0 496 662 ;
C 36 ; WX 500 ; N dollar ; B 44 -87 457 727 ;
C 37 ; WX 833 ; N percent ; B 61 -13 772 676 ;
C 38 ; WX 778 ; N ampersand ; B 42 -13 750 676 ;
C 39 ; WX 333 ; N quoteright ; B 79 433 218 676 ;
C 40 ; WX 333 ; N parenleft ; B 48 -177 304 676 ;
C 41 ; WX 333 ; N parenright ; B 29 -177 285 676 ;
C 42 ; WX 500 ; N asterisk ; B 69 265 432 676 ;
C 43 ; WX 564 ; N plus ; B 30 0 534 506 ;
C 44 ; WX 250 ; N comma ; B 56 -141 195 102 ;
C 45 ; WX 333 ; N hyphen ; B 39 194 285 257 ;
C 46 ; WX 250 ; N period ; B 70 -11 181 100 ;
C 47 ; WX 278 ; N slash ; B -9 -14 287 676 ;
C 48 ; WX 500 ; N zero ; B 24 -14 476 676 ;
C 49 ; WX 500 ; N one ; B 111 0 394 676 ;
C 50 ; WX 500 ; N two ; B 30 0 475 676 ;
C 51 ; WX 500 ; N three ; B 43 -14 431 676 ;
C 52 ; WX 500 ; N four ; B 12 0 472 676 ;
C 53 ; WX 500 ; N five ; B 32 -14 438 688 ;
C 54 ; WX 500 ; N six ; B 34 -14 468 684 ;
C 55 ; WX 500 ; N seven ; B 20 -8 449 662 ;
C 56 ; WX 500 ; N eight ; B 56 -14 445 676 ;
C 57 ; WX 500 ; N nine ; B 30 -22 459 676 ;
C 58 ; WX 278 ; N colon ; B 81 -11 192 459 ;
C 59 ; WX 278 ; N semicolon ; B 80 -141 219 459 ;
C 60 ; WX 564 ; N less ; B 28 -8 536 514 ;
C 61 ; WX 564 ; N equal ; B 30 120 534 386 ;
C 62 ; WX 564 ; N greater ; B 28 -8 536 514 ;
C 63 ; WX 444 ; N question ; B 68 -8 414 676 ;
C 64 ; WX 921 ; N at ; B 116 -14 809 676 ;
C 65 ; WX 722 ; N A ; B 15 0 706 674 ;
C 66 ; WX 667 ; N B ; B 17 0 593 662 ;
C 67 ; WX 667 ; N C ; B 28 -14 633 676 ;
C 68 ; WX 722 ; N D ; B 16 0 685 662 ;
C 69 ; WX 611 ; N E ; B 12 0 597 662 ;
C 70 ; WX 556 ; N F ; B 12 0 546 662 ;
C 71 ; WX 722 ; N G ; B 32 -14 709 676 ;
C 72 ; WX 722 ; N H ; B 19 0 702 662 ;
C 73 ; WX 333 ; N I ; B 18 0 315 662 ;
C 74 ; WX 389 ; N J ; B 10 -14 370 662 ;
C 75 ; WX 722 ; N K ; B 34 0 723 662 ;
C 76 ; WX 611 ; N L ; B 12 0 598 662 ;
C 77 ; WX 889 ; N M ; B 12 0 863 662 ;
C 78 ; WX 722 ; N N ; B 12 -11 707 662 ;
C 79 ; WX 722 ; N O ; B 34 -14 688 676 ;
C 80 ; WX 556 ; N P ; B 16 0 542 662 ;
C 81 ; WX 722 ; N Q ; B 34 -178 701 676 ;
C 82 ; WX 667 ; N R ; B 17 0 659 662 ;
C 83 ; WX 556 ; N S ; B 42 -14 491 676 ;
C 84 ; WX 611 ; N T ; B 17 0 593 662 ;
C 85 ; WX 722 ; N U ; B 14 -14 705 662 ;
C 86 ; WX 722 ; N V ; B 16 -11 697 662 ;
C 87 ; WX 944 ; N W ; B 5 -11 932 662 ;
C 88 ; WX 722 ; N X ; B 10 0 704 662 ;
C 89 ; WX 722 ; N Y ; B 22 0 703 662 ;
C 90 ; WX 611 ; N Z ; B 9 0 597 662 ;
C 91 ; WX 333 ; N bracketleft ; B 88 -156 299 662 ;
C 92 ; WX 278 ; N backslash ; B -9 -14 287 676 ;
C 93 ; WX 333 ; N bracketright ; B 34 -156 245 662 ;
C 94 ; WX 469 ; N asciicircum ; B 24 297 446 662 ;
C 95 ; WX 500 ; N underscore ; B 0 -125 500 -75 ;
C 96 ; WX 333 ; N quoteleft ; B 115 433 254 676 ;
C 97 ; WX 444 ; N a ; B 37 -10 442 460 ;
C 98 ; WX 500 ; N b ; B 3 -10 468 683 ;
C 99 ; WX 444 ; N c ; B 25 -10 412 460 ;
C 100 ; WX 500 ; N d ; B 27 -10 491 683 ;
C 101 ; WX 444 ; N e ; B 25 -10 424 460 ;
C 102 ; WX 333 ; N f ; B 20 0 383 683 ; L i fi ; L l fl ;
C 103 ; WX 500 ; N g ; B 28 -218 470 460 ;
C 104 ; WX 500 ; N h ; B 9 0 487 683 ;
C 105 ; WX 278 ; N i ; B 16 0 253 683 ;
C 106 ; WX 278 ; N j ; B -70 -218 194 683 ;
C 107 ; WX 500 ; N k ; B 7 0 505 683 ;
C 108 ; WX 278 ; N l ; B 19 0 257 683 ;
C 109 ; WX 778 ; N m ; B 16 0 775 460 ;
C 110 ; WX 500 ; N n ; B 16 0 485 460 ;
C 111 ; WX 500 ; N o ; B 29 -10 470 460 ;
C 112 ; WX 500 ; N p ; B 5 -217 470 460 ;
C 113 ; WX 500 ; N q ; B 24 -217 488 460 ;
C 114 ; WX 333 ; N r ; B 5 0 335 460 ;
C 115 ; WX 389 ; N s ; B 51 -10 348 460 ;
C 116 ; WX 278 ; N t ; B 13 -10 279 579 ;
C 117 ; WX 500 ; N u ; B 9 -10 479 450 ;
C 118 ; WX 500 ; N v ; B 19 -14 477 450 ;
C 119 ; WX 722 ; N w ; B 21 -14 694 450 ;
C 120 ; WX 500 ; N x ; B 17 0 479 450 ;
C 121 ; WX 500 ; N y ; B 14 -218 475 450 ;
C 122 ; WX 444 ; N z ; B 27 0 418 450 ;
C 123 ; WX 480 ; N braceleft ; B 100 -181 350 680 ;
C 124 ; WX 200 ; N bar ; B 67 -218 133 782 ;
C 125 ; WX 480 ; N braceright ; B 130 -181 380 680 ;
C 126 ; WX 541 ; N asciitilde ; B 40 183 502 323 ;
C 161 ; WX 333 ; N exclamdown ; B 97 -218 205 467 ;
C 162 ; WX 500 ; N cent ; B 53 -138 448 579 ;
C 163 ; WX 500 ; N sterling ; B 12 -8 490 676 ;
C 164 ; WX 167 ; N fraction ; B -168 -14 331 676 ;
C 165 ; WX 500 ; N yen ; B -53 0 512 662 ;
C 166 ; WX 500 ; N florin ; B 7 -189 490 676 ;
C 167 ; WX 500 ; N section ; B 70 -148 426 676 ;
C 168 ; WX 500 ; N currency ; B -22 58 522 602 ;
C 169 ; WX 180 ; N quotesingle ; B 48 431 133 676 ;
C 170 ; WX 444 ; N quotedblleft ; B 43 433 414 676 ;
C 171 ; WX 500 ; N guillemotleft ; B 42 33 456 416 ;
C 172 ; WX 333 ; N guilsinglleft ; B 63 33 285 416 ;
C 173 ; WX 333 ; N guilsinglright ; B 48 33 270 416 ;
C 174 ; WX 556 ; N fi ; B 31 0 521 683 ;
C 175 ; WX 556 ; N fl ; B 32 0 521 683 ;
C 177 ; WX 500 ; N endash ; B 0 201 500 250 ;
C 178 ; WX 500 ; N dagger ; B 59 -149 442 676 ;
C 179 ; WX 500 ; N daggerdbl ; B 58 -153 442 676 ;
C 180 ; WX 250 ; N periodcentered ; B 70 199 181 310 ;
C 182 ; WX 453 ; N paragraph ; B -22 -154 450 662 ;
C 183 ; WX 350 ; N bullet ; B 40 196 310 466 ;
C 184 ; WX 333 ; N quotesinglbase ; B 79 -141 218 102 ;
C 185 ; WX 444 ; N quotedblbase ; B 45 -141 416 102 ;
C 186 ; WX 444 ; N quotedblright ; B 30 433 401 676 ;
C 187 ; WX 500 ; N guillemotright ; B 44 33 458 416 ;
C 188 ; WX 1000 ; N ellipsis ; B 111 -11 888 100 ;
C 189 ; WX 1000 ; N perthousand ; B 7 -19 994 706 ;
C 191 ; WX 444 ; N questiondown ; B 30 -218 376 466 ;
C 193 ; WX 333 ; N grave ; B 19 507 242 678 ;
C 194 ; WX 333 ; N acute ; B 93 507 317 678 ;
C 195 ; WX 333 ; N circumflex ; B 11 507 322 674 ;
C 196 ; WX 333 ; N tilde ; B 1 532 331 638 ;
C 197 ; WX 333 ; N macron ; B 11 547 322 601 ;
C 198 ; WX 333 ; N breve ; B 26 507 307 664 ;
C 199 ; WX 333 ; N dotaccent ; B 118 581 216 681 ;
C 200 ; WX 333 ; N dieresis ; B 18 581 315 681 ;
C 202 ; WX 333 ; N ring ; B 67 512 266 711 ;
C 203 ; WX 333 ; N cedilla ; B 52 -215 261 0 ;
C 205 ; WX 333 ; N hungarumlaut ; B -3 507 377 678 ;
C 206 ; WX 333 ; N ogonek ; B 62 -165 243 0 ;
C 207 ; WX 333 ; N caron ; B 11 507 322 674 ;
C 208 ; WX 1000 ; N emdash ; B 0 201 1000 250 ;
C 225 ; WX 889 ; N AE ; B 0 0 863 662 ;
C 227 ; WX 276 ; N ordfeminine ; B 4 394 270 676 ;
C 232 ; WX 611 ; N Lslash ; B 12 0 598 662 ;
C 233 ; WX 722 ; N Oslash ; B 34 -80 688 734 ;
C 234 ; WX 889 ; N OE ; B 30 -6 885 668 ;
C 235 ; WX 310 ; N ordmasculine ; B 6 394 304 676 ;
C 241 ; WX 667 ; N ae ; B 38 -10 632 460 ;
C 245 ; WX 278 ; N dotlessi ; B 16 0 253 460 ;
C 248 ; WX 278 ; N lslash ; B 19 0 259 683 ;
C 249 ; WX 500 ; N oslash ; B 29 -112 470 551 ;
C 250 ; WX 722 ; N oe ; B 30 -10 690 460 ;
C 251 ; WX 500 ; N germandbls ; B 12 -9 468 683 ;
C -1 ; WX 333 ; N Idieresis ; B 18 0 315 835 ;
C -1 ; WX 444 ; N eacute ; B 25 -10 424 678 ;
C -1 ; WX 444 ; N abreve ; B 37 -10 442 664 ;
C -1 ; WX 500 ; N uhungarumlaut ; B 9 -10 501 678 ;
C -1 ; WX 444 ; N ecaron ; B 25 -10 424 674 ;
C -1 ; WX 722 ; N Ydieresis ; B 22 0 703 835 ;
C -1 ; WX 564 ; N divide ; B 30 -10 534 516 ;
C -1 ; WX 722 ; N Yacute ; B 22 0 703 890 ;
C -1 ; WX 722 ; N Acircumflex ; B 15 0 706 886 ;
C -1 ; WX 444 ; N aacute ; B 37 -10 442 678 ;
C -1 ; WX 722 ; N Ucircumflex ; B 14 -14 705 886 ;
C -1 ; WX 500 ; N yacute ; B 14 -218 475 678 ;
C -1 ; WX 389 ; N scommaaccent ; B 51 -218 348 460 ;
C -1 ; WX 444 ; N ecircumflex ; B 25 -10 424 674 ;
C -1 ; WX 722 ; N Uring ; B 14 -14 705 898 ;
C -1 ; WX 722 ; N Udieresis ; B 14 -14 705 835 ;
C -1 ; WX 444 ; N aogonek ; B 37 -165 469 460 ;
C -1 ; WX 722 ; N Uacute ; B 14 -14 705 890 ;
C -1 ; WX 500 ; N uogonek ; B 9 -155 487 450 ;
C -1 ; WX 611 ; N Edieresis ; B 12 0 597 835 ;
C -1 ; WX 722 ; N Dcroat ; B 16 0 685 662 ;
C -1 ; WX 250 ; N commaaccent ; B 59 -218 184 -50 ;
C -1 ; WX 760 ; N copyright ; B 38 -14 722 676 ;
C -1 ; WX 611 ; N Emacron ; B 12 0 597 813 ;
C -1 ; WX 444 ; N ccaron ; B 25 -10 412 674 ;
C -1 ; WX 444 ; N aring ; B 37 -10 442 711 ;
C -1 ; WX 722 ; N Ncommaaccent ; B 12 -198 707 662 ;
C -1 ; WX 278 ; N lacute ; B 19 0 290 890 ;
C -1 ; WX 444 ; N agrave ; B 37 -10 442 678 ;
C -1 ; WX 611 ; N Tcommaaccent ; B 17 -218 593 662 ;
C -1 ; WX 667 ; N Cacute ; B 28 -14 633 890 ;
C -1 ; WX 444 ; N atilde ; B 37 -10 442 638 ;
C -1 ; WX 611 ; N Edotaccent ; B 12 0 597 835 ;
C -1 ; WX 389 ; N scaron ; B 39 -10 350 674 ;
C -1 ; WX 389 ; N scedilla ; B 51 -215 348 460 ;
C -1 ; WX 278 ; N iacute ; B 16 0 290 678 ;
C -1 ; WX 471 ; N lozenge ; B 13 0 459 724 ;
C -1 ; WX 667 ; N Rcaron ; B 17 0 659 886 ;
C -1 ; WX 722 ; N Gcommaaccent ; B 32 -218 709 676 ;
C -1 ; WX 500 ; N ucircumflex ; B 9 -10 479 674 ;
C -1 ; WX 444 ; N acircumflex ; B 37 -10 442 674 ;
C -1 ; WX 722 ; N Amacron ; B 15 0 706 813 ;
C -1 ; WX 333 ; N rcaron ; B 5 0 335 674 ;
C -1 ; WX 444 ; N ccedilla ; B 25 -215 412 460 ;
C -1 ; WX 611 ; N Zdotaccent ; B 9 0 597 835 ;
C -1 ; WX 556 ; N Thorn ; B 16 0 542 662 ;
C -1 ; WX 722 ; N Omacron ; B 34 -14 688 813 ;
C -1 ; WX 667 ; N Racute ; B 17 0 659 890 ;
C -1 ; WX 556 ; N Sacute ; B 42 -14 491 890 ;
C -1 ; WX 588 ; N dcaron ; B 27 -10 589 695 ;
C -1 ; WX 722 ; N Umacron ; B 14 -14 705 813 ;
C -1 ; WX 500 ; N uring ; B 9 -10 479 711 ;
C -1 ; WX 300 ; N threesuperior ; B 15 262 291 676 ;
C -1 ; WX 722 ; N Ograve ; B 34 -14 688 890 ;
C -1 ; WX 722 ; N Agrave ; B 15 0 706 890 ;
C -1 ; WX 722 ; N Abreve ; B 15 0 706 876 ;
C -1 ; WX 564 ; N multiply ; B 38 8 527 497 ;
C -1 ; WX 500 ; N uacute ; B 9 -10 479 678 ;
C -1 ; WX 611 ; N Tcaron ; B 17 0 593 886 ;
C -1 ; WX 476 ; N partialdiff ; B 17 -38 459 710 ;
C -1 ; WX 500 ; N ydieresis ; B 14 -218 475 623 ;
C -1 ; WX 722 ; N Nacute ; B 12 -11 707 890 ;
C -1 ; WX 278 ; N icircumflex ; B -16 0 295 674 ;
C -1 ; WX 611 ; N Ecircumflex ; B 12 0 597 886 ;
C -1 ; WX 444 ; N adieresis ; B 37 -10 442 623 ;
C -1 ; WX 444 ; N edieresis ; B 25 -10 424 623 ;
C -1 ; WX 444 ; N cacute ; B 25 -10 413 678 ;
C -1 ; WX 500 ; N nacute ; B 16 0 485 678 ;
C -1 ; WX 500 ; N umacron ; B 9 -10 479 601 ;
C -1 ; WX 722 ; N Ncaron ; B 12 -11 707 886 ;
C -1 ; WX 333 ; N Iacute ; B 18 0 317 890 ;
C -1 ; WX 564 ; N plusminus ; B 30 0 534 506 ;
C -1 ; WX 200 ; N brokenbar ; B 67 -143 133 707 ;
C -1 ; WX 760 ; N registered ; B 38 -14 722 676 ;
C -1 ; WX 722 ; N Gbreve ; B 32 -14 709 876 ;
C -1 ; WX 333 ; N Idotaccent ; B 18 0 315 835 ;
C -1 ; WX 600 ; N summation ; B 15 -10 585 706 ;
C -1 ; WX 611 ; N Egrave ; B 12 0 597 890 ;
C -1 ; WX 333 ; N racute ; B 5 0 335 678 ;
C -1 ; WX 500 ; N omacron ; B 29 -10 470 601 ;
C -1 ; WX 611 ; N Zacute ; B 9 0 597 890 ;
C -1 ; WX 611 ; N Zcaron ; B 9 0 597 886 ;
C -1 ; WX 549 ; N greaterequal ; B 26 0 523 666 ;
C -1 ; WX 722 ; N Eth ; B 16 0 685 662 ;
C -1 ; WX 667 ; N Ccedilla ; B 28 -215 633 676 ;
C -1 ; WX 278 ; N lcommaaccent ; B 19 -218 257 683 ;
C -1 ; WX 326 ; N tcaron ; B 13 -10 318 722 ;
C -1 ; WX 444 ; N eogonek ; B 25 -165 424 460 ;
C -1 ; WX 722 ; N Uogonek ; B 14 -165 705 662 ;
C -1 ; WX 722 ; N Aacute ; B 15 0 706 890 ;
C -1 ; WX 722 ; N Adieresis ; B 15 0 706 835 ;
C -1 ; WX 444 ; N egrave ; B 25 -10 424 678 ;
C -1 ; WX 444 ; N zacute ; B 27 0 418 678 ;
C -1 ; WX 278 ; N iogonek ; B 16 -165 265 683 ;
C -1 ; WX 722 ; N Oacute ; B 34 -14 688 890 ;
C -1 ; WX 500 ; N oacute ; B 29 -10 470 678 ;
C -1 ; WX 444 ; N amacron ; B 37 -10 442 601 ;
C -1 ; WX 389 ; N sacute ; B 51 -10 348 678 ;
C -1 ; WX 278 ; N idieresis ; B -9 0 288 623 ;
C -1 ; WX 722 ; N Ocircumflex ; B 34 -14 688 886 ;
C -1 ; WX 722 ; N Ugrave ; B 14 -14 705 890 ;
C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;
C -1 ; WX 500 ; N thorn ; B 5 -217 470 683 ;
C -1 ; WX 300 ; N twosuperior ; B 1 270 296 676 ;
C -1 ; WX 722 ; N Odieresis ; B 34 -14 688 835 ;
C -1 ; WX 500 ; N mu ; B 36 -218 512 450 ;
C -1 ; WX 278 ; N igrave ; B -8 0 253 678 ;
C -1 ; WX 500 ; N ohungarumlaut ; B 29 -10 491 678 ;
C -1 ; WX 611 ; N Eogonek ; B 12 -165 597 662 ;
C -1 ; WX 500 ; N dcroat ; B 27 -10 500 683 ;
C -1 ; WX 750 ; N threequarters ; B 15 -14 718 676 ;
C -1 ; WX 556 ; N Scedilla ; B 42 -215 491 676 ;
C -1 ; WX 344 ; N lcaron ; B 19 0 347 695 ;
C -1 ; WX 722 ; N Kcommaaccent ; B 34 -198 723 662 ;
C -1 ; WX 611 ; N Lacute ; B 12 0 598 890 ;
C -1 ; WX 980 ; N trademark ; B 30 256 957 662 ;
C -1 ; WX 444 ; N edotaccent ; B 25 -10 424 623 ;
C -1 ; WX 333 ; N Igrave ; B 18 0 315 890 ;
C -1 ; WX 333 ; N Imacron ; B 11 0 322 813 ;
C -1 ; WX 611 ; N Lcaron ; B 12 0 598 676 ;
C -1 ; WX 750 ; N onehalf ; B 31 -14 746 676 ;
C -1 ; WX 549 ; N lessequal ; B 26 0 523 666 ;
C -1 ; WX 500 ; N ocircumflex ; B 29 -10 470 674 ;
C -1 ; WX 500 ; N ntilde ; B 16 0 485 638 ;
C -1 ; WX 722 ; N Uhungarumlaut ; B 14 -14 705 890 ;
C -1 ; WX 611 ; N Eacute ; B 12 0 597 890 ;
C -1 ; WX 444 ; N emacron ; B 25 -10 424 601 ;
C -1 ; WX 500 ; N gbreve ; B 28 -218 470 664 ;
C -1 ; WX 750 ; N onequarter ; B 37 -14 718 676 ;
C -1 ; WX 556 ; N Scaron ; B 42 -14 491 886 ;
C -1 ; WX 556 ; N Scommaaccent ; B 42 -218 491 676 ;
C -1 ; WX 722 ; N Ohungarumlaut ; B 34 -14 688 890 ;
C -1 ; WX 400 ; N degree ; B 57 390 343 676 ;
C -1 ; WX 500 ; N ograve ; B 29 -10 470 678 ;
C -1 ; WX 667 ; N Ccaron ; B 28 -14 633 886 ;
C -1 ; WX 500 ; N ugrave ; B 9 -10 479 678 ;
C -1 ; WX 453 ; N radical ; B 2 -60 452 768 ;
C -1 ; WX 722 ; N Dcaron ; B 16 0 685 886 ;
C -1 ; WX 333 ; N rcommaaccent ; B 5 -218 335 460 ;
C -1 ; WX 722 ; N Ntilde ; B 12 -11 707 850 ;
C -1 ; WX 500 ; N otilde ; B 29 -10 470 638 ;
C -1 ; WX 667 ; N Rcommaaccent ; B 17 -198 659 662 ;
C -1 ; WX 611 ; N Lcommaaccent ; B 12 -218 598 662 ;
C -1 ; WX 722 ; N Atilde ; B 15 0 706 850 ;
C -1 ; WX 722 ; N Aogonek ; B 15 -165 738 674 ;
C -1 ; WX 722 ; N Aring ; B 15 0 706 898 ;
C -1 ; WX 722 ; N Otilde ; B 34 -14 688 850 ;
C -1 ; WX 444 ; N zdotaccent ; B 27 0 418 623 ;
C -1 ; WX 611 ; N Ecaron ; B 12 0 597 886 ;
C -1 ; WX 333 ; N Iogonek ; B 18 -165 315 662 ;
C -1 ; WX 500 ; N kcommaaccent ; B 7 -218 505 683 ;
C -1 ; WX 564 ; N minus ; B 30 220 534 286 ;
C -1 ; WX 333 ; N Icircumflex ; B 11 0 322 886 ;
C -1 ; WX 500 ; N ncaron ; B 16 0 485 674 ;
C -1 ; WX 278 ; N tcommaaccent ; B 13 -218 279 579 ;
C -1 ; WX 564 ; N logicalnot ; B 30 108 534 386 ;
C -1 ; WX 500 ; N odieresis ; B 29 -10 470 623 ;
C -1 ; WX 500 ; N udieresis ; B 9 -10 479 623 ;
C -1 ; WX 549 ; N notequal ; B 12 -31 537 547 ;
C -1 ; WX 500 ; N gcommaaccent ; B 28 -218 470 749 ;
C -1 ; WX 500 ; N eth ; B 29 -10 471 686 ;
C -1 ; WX 444 ; N zcaron ; B 27 0 418 674 ;
C -1 ; WX 500 ; N ncommaaccent ; B 16 -218 485 460 ;
C -1 ; WX 300 ; N onesuperior ; B 57 270 248 676 ;
C -1 ; WX 278 ; N imacron ; B 6 0 271 601 ;
C -1 ; WX 500 ; N Euro ; B 0 0 0 0 ;
EndCharMetrics
StartKernData
StartKernPairs 2073
KPX A C -40
KPX A Cacute -40
KPX A Ccaron -40
KPX A Ccedilla -40
KPX A G -40
KPX A Gbreve -40
KPX A Gcommaaccent -40
KPX A O -55
KPX A Oacute -55
KPX A Ocircumflex -55
KPX A Odieresis -55
KPX A Ograve -55
KPX A Ohungarumlaut -55
KPX A Omacron -55
KPX A Oslash -55
KPX A Otilde -55
KPX A Q -55
KPX A T -111
KPX A Tcaron -111
KPX A Tcommaaccent -111
KPX A U -55
KPX A Uacute -55
KPX A Ucircumflex -55
KPX A Udieresis -55
KPX A Ugrave -55
KPX A Uhungarumlaut -55
KPX A Umacron -55
KPX A Uogonek -55
KPX A Uring -55
KPX A V -135
KPX A W -90
KPX A Y -105
KPX A Yacute -105
KPX A Ydieresis -105
KPX A quoteright -111
KPX A v -74
KPX A w -92
KPX A y -92
KPX A yacute -92
KPX A ydieresis -92
KPX Aacute C -40
KPX Aacute Cacute -40
KPX Aacute Ccaron -40
KPX Aacute Ccedilla -40
KPX Aacute G -40
KPX Aacute Gbreve -40
KPX Aacute Gcommaaccent -40
KPX Aacute O -55
KPX Aacute Oacute -55
KPX Aacute Ocircumflex -55
KPX Aacute Odieresis -55
KPX Aacute Ograve -55
KPX Aacute Ohungarumlaut -55
KPX Aacute Omacron -55
KPX Aacute Oslash -55
KPX Aacute Otilde -55
KPX Aacute Q -55
KPX Aacute T -111
KPX Aacute Tcaron -111
KPX Aacute Tcommaaccent -111
KPX Aacute U -55
KPX Aacute Uacute -55
KPX Aacute Ucircumflex -55
KPX Aacute Udieresis -55
KPX Aacute Ugrave -55
KPX Aacute Uhungarumlaut -55
KPX Aacute Umacron -55
KPX Aacute Uogonek -55
KPX Aacute Uring -55
KPX Aacute V -135
KPX Aacute W -90
KPX Aacute Y -105
KPX Aacute Yacute -105
KPX Aacute Ydieresis -105
KPX Aacute quoteright -111
KPX Aacute v -74
KPX Aacute w -92
KPX Aacute y -92
KPX Aacute yacute -92
KPX Aacute ydieresis -92
KPX Abreve C -40
KPX Abreve Cacute -40
KPX Abreve Ccaron -40
KPX Abreve Ccedilla -40
KPX Abreve G -40
KPX Abreve Gbreve -40
KPX Abreve Gcommaaccent -40
KPX Abreve O -55
KPX Abreve Oacute -55
KPX Abreve Ocircumflex -55
KPX Abreve Odieresis -55
KPX Abreve Ograve -55
KPX Abreve Ohungarumlaut -55
KPX Abreve Omacron -55
KPX Abreve Oslash -55
KPX Abreve Otilde -55
KPX Abreve Q -55
KPX Abreve T -111
KPX Abreve Tcaron -111
KPX Abreve Tcommaaccent -111
KPX Abreve U -55
KPX Abreve Uacute -55
KPX Abreve Ucircumflex -55
KPX Abreve Udieresis -55
KPX Abreve Ugrave -55
KPX Abreve Uhungarumlaut -55
KPX Abreve Umacron -55
KPX Abreve Uogonek -55
KPX Abreve Uring -55
KPX Abreve V -135
KPX Abreve W -90
KPX Abreve Y -105
KPX Abreve Yacute -105
KPX Abreve Ydieresis -105
KPX Abreve quoteright -111
KPX Abreve v -74
KPX Abreve w -92
KPX Abreve y -92
KPX Abreve yacute -92
KPX Abreve ydieresis -92
KPX Acircumflex C -40
KPX Acircumflex Cacute -40
KPX Acircumflex Ccaron -40
KPX Acircumflex Ccedilla -40
KPX Acircumflex G -40
KPX Acircumflex Gbreve -40
KPX Acircumflex Gcommaaccent -40
KPX Acircumflex O -55
KPX Acircumflex Oacute -55
KPX Acircumflex Ocircumflex -55
KPX Acircumflex Odieresis -55
KPX Acircumflex Ograve -55
KPX Acircumflex Ohungarumlaut -55
KPX Acircumflex Omacron -55
KPX Acircumflex Oslash -55
KPX Acircumflex Otilde -55
KPX Acircumflex Q -55
KPX Acircumflex T -111
KPX Acircumflex Tcaron -111
KPX Acircumflex Tcommaaccent -111
KPX Acircumflex U -55
KPX Acircumflex Uacute -55
KPX Acircumflex Ucircumflex -55
KPX Acircumflex Udieresis -55
KPX Acircumflex Ugrave -55
KPX Acircumflex Uhungarumlaut -55
KPX Acircumflex Umacron -55
KPX Acircumflex Uogonek -55
KPX Acircumflex Uring -55
KPX Acircumflex V -135
KPX Acircumflex W -90
KPX Acircumflex Y -105
KPX Acircumflex Yacute -105
KPX Acircumflex Ydieresis -105
KPX Acircumflex quoteright -111
KPX Acircumflex v -74
KPX Acircumflex w -92
KPX Acircumflex y -92
KPX Acircumflex yacute -92
KPX Acircumflex ydieresis -92
KPX Adieresis C -40
KPX Adieresis Cacute -40
KPX Adieresis Ccaron -40
KPX Adieresis Ccedilla -40
KPX Adieresis G -40
KPX Adieresis Gbreve -40
KPX Adieresis Gcommaaccent -40
KPX Adieresis O -55
KPX Adieresis Oacute -55
KPX Adieresis Ocircumflex -55
KPX Adieresis Odieresis -55
KPX Adieresis Ograve -55
KPX Adieresis Ohungarumlaut -55
KPX Adieresis Omacron -55
KPX Adieresis Oslash -55
KPX Adieresis Otilde -55
KPX Adieresis Q -55
KPX Adieresis T -111
KPX Adieresis Tcaron -111
KPX Adieresis Tcommaaccent -111
KPX Adieresis U -55
KPX Adieresis Uacute -55
KPX Adieresis Ucircumflex -55
KPX Adieresis Udieresis -55
KPX Adieresis Ugrave -55
KPX Adieresis Uhungarumlaut -55
KPX Adieresis Umacron -55
KPX Adieresis Uogonek -55
KPX Adieresis Uring -55
KPX Adieresis V -135
KPX Adieresis W -90
KPX Adieresis Y -105
KPX Adieresis Yacute -105
KPX Adieresis Ydieresis -105
KPX Adieresis quoteright -111
KPX Adieresis v -74
KPX Adieresis w -92
KPX Adieresis y -92
KPX Adieresis yacute -92
KPX Adieresis ydieresis -92
KPX Agrave C -40
KPX Agrave Cacute -40
KPX Agrave Ccaron -40
KPX Agrave Ccedilla -40
KPX Agrave G -40
KPX Agrave Gbreve -40
KPX Agrave Gcommaaccent -40
KPX Agrave O -55
KPX Agrave Oacute -55
KPX Agrave Ocircumflex -55
KPX Agrave Odieresis -55
KPX Agrave Ograve -55
KPX Agrave Ohungarumlaut -55
KPX Agrave Omacron -55
KPX Agrave Oslash -55
KPX Agrave Otilde -55
KPX Agrave Q -55
KPX Agrave T -111
KPX Agrave Tcaron -111
KPX Agrave Tcommaaccent -111
KPX Agrave U -55
KPX Agrave Uacute -55
KPX Agrave Ucircumflex -55
KPX Agrave Udieresis -55
KPX Agrave Ugrave -55
KPX Agrave Uhungarumlaut -55
KPX Agrave Umacron -55
KPX Agrave Uogonek -55
KPX Agrave Uring -55
KPX Agrave V -135
KPX Agrave W -90
KPX Agrave Y -105
KPX Agrave Yacute -105
KPX Agrave Ydieresis -105
KPX Agrave quoteright -111
KPX Agrave v -74
KPX Agrave w -92
KPX Agrave y -92
KPX Agrave yacute -92
KPX Agrave ydieresis -92
KPX Amacron C -40
KPX Amacron Cacute -40
KPX Amacron Ccaron -40
KPX Amacron Ccedilla -40
KPX Amacron G -40
KPX Amacron Gbreve -40
KPX Amacron Gcommaaccent -40
KPX Amacron O -55
KPX Amacron Oacute -55
KPX Amacron Ocircumflex -55
KPX Amacron Odieresis -55
KPX Amacron Ograve -55
KPX Amacron Ohungarumlaut -55
KPX Amacron Omacron -55
KPX Amacron Oslash -55
KPX Amacron Otilde -55
KPX Amacron Q -55
KPX Amacron T -111
KPX Amacron Tcaron -111
KPX Amacron Tcommaaccent -111
KPX Amacron U -55
KPX Amacron Uacute -55
KPX Amacron Ucircumflex -55
KPX Amacron Udieresis -55
KPX Amacron Ugrave -55
KPX Amacron Uhungarumlaut -55
KPX Amacron Umacron -55
KPX Amacron Uogonek -55
KPX Amacron Uring -55
KPX Amacron V -135
KPX Amacron W -90
KPX Amacron Y -105
KPX Amacron Yacute -105
KPX Amacron Ydieresis -105
KPX Amacron quoteright -111
KPX Amacron v -74
KPX Amacron w -92
KPX Amacron y -92
KPX Amacron yacute -92
KPX Amacron ydieresis -92
KPX Aogonek C -40
KPX Aogonek Cacute -40
KPX Aogonek Ccaron -40
KPX Aogonek Ccedilla -40
KPX Aogonek G -40
KPX Aogonek Gbreve -40
KPX Aogonek Gcommaaccent -40
KPX Aogonek O -55
KPX Aogonek Oacute -55
KPX Aogonek Ocircumflex -55
KPX Aogonek Odieresis -55
KPX Aogonek Ograve -55
KPX Aogonek Ohungarumlaut -55
KPX Aogonek Omacron -55
KPX Aogonek Oslash -55
KPX Aogonek Otilde -55
KPX Aogonek Q -55
KPX Aogonek T -111
KPX Aogonek Tcaron -111
KPX Aogonek Tcommaaccent -111
KPX Aogonek U -55
KPX Aogonek Uacute -55
KPX Aogonek Ucircumflex -55
KPX Aogonek Udieresis -55
KPX Aogonek Ugrave -55
KPX Aogonek Uhungarumlaut -55
KPX Aogonek Umacron -55
KPX Aogonek Uogonek -55
KPX Aogonek Uring -55
KPX Aogonek V -135
KPX Aogonek W -90
KPX Aogonek Y -105
KPX Aogonek Yacute -105
KPX Aogonek Ydieresis -105
KPX Aogonek quoteright -111
KPX Aogonek v -74
KPX Aogonek w -52
KPX Aogonek y -52
KPX Aogonek yacute -52
KPX Aogonek ydieresis -52
KPX Aring C -40
KPX Aring Cacute -40
KPX Aring Ccaron -40
KPX Aring Ccedilla -40
KPX Aring G -40
KPX Aring Gbreve -40
KPX Aring Gcommaaccent -40
KPX Aring O -55
KPX Aring Oacute -55
KPX Aring Ocircumflex -55
KPX Aring Odieresis -55
KPX Aring Ograve -55
KPX Aring Ohungarumlaut -55
KPX Aring Omacron -55
KPX Aring Oslash -55
KPX Aring Otilde -55
KPX Aring Q -55
KPX Aring T -111
KPX Aring Tcaron -111
KPX Aring Tcommaaccent -111
KPX Aring U -55
KPX Aring Uacute -55
KPX Aring Ucircumflex -55
KPX Aring Udieresis -55
KPX Aring Ugrave -55
KPX Aring Uhungarumlaut -55
KPX Aring Umacron -55
KPX Aring Uogonek -55
KPX Aring Uring -55
KPX Aring V -135
KPX Aring W -90
KPX Aring Y -105
KPX Aring Yacute -105
KPX Aring Ydieresis -105
KPX Aring quoteright -111
KPX Aring v -74
KPX Aring w -92
KPX Aring y -92
KPX Aring yacute -92
KPX Aring ydieresis -92
KPX Atilde C -40
KPX Atilde Cacute -40
KPX Atilde Ccaron -40
KPX Atilde Ccedilla -40
KPX Atilde G -40
KPX Atilde Gbreve -40
KPX Atilde Gcommaaccent -40
KPX Atilde O -55
KPX Atilde Oacute -55
KPX Atilde Ocircumflex -55
KPX Atilde Odieresis -55
KPX Atilde Ograve -55
KPX Atilde Ohungarumlaut -55
KPX Atilde Omacron -55
KPX Atilde Oslash -55
KPX Atilde Otilde -55
KPX Atilde Q -55
KPX Atilde T -111
KPX Atilde Tcaron -111
KPX Atilde Tcommaaccent -111
KPX Atilde U -55
KPX Atilde Uacute -55
KPX Atilde Ucircumflex -55
KPX Atilde Udieresis -55
KPX Atilde Ugrave -55
KPX Atilde Uhungarumlaut -55
KPX Atilde Umacron -55
KPX Atilde Uogonek -55
KPX Atilde Uring -55
KPX Atilde V -135
KPX Atilde W -90
KPX Atilde Y -105
KPX Atilde Yacute -105
KPX Atilde Ydieresis -105
KPX Atilde quoteright -111
KPX Atilde v -74
KPX Atilde w -92
KPX Atilde y -92
KPX Atilde yacute -92
KPX Atilde ydieresis -92
KPX B A -35
KPX B Aacute -35
KPX B Abreve -35
KPX B Acircumflex -35
KPX B Adieresis -35
KPX B Agrave -35
KPX B Amacron -35
KPX B Aogonek -35
KPX B Aring -35
KPX B Atilde -35
KPX B U -10
KPX B Uacute -10
KPX B Ucircumflex -10
KPX B Udieresis -10
KPX B Ugrave -10
KPX B Uhungarumlaut -10
KPX B Umacron -10
KPX B Uogonek -10
KPX B Uring -10
KPX D A -40
KPX D Aacute -40
KPX D Abreve -40
KPX D Acircumflex -40
KPX D Adieresis -40
KPX D Agrave -40
KPX D Amacron -40
KPX D Aogonek -40
KPX D Aring -40
KPX D Atilde -40
KPX D V -40
KPX D W -30
KPX D Y -55
KPX D Yacute -55
KPX D Ydieresis -55
KPX Dcaron A -40
KPX Dcaron Aacute -40
KPX Dcaron Abreve -40
KPX Dcaron Acircumflex -40
KPX Dcaron Adieresis -40
KPX Dcaron Agrave -40
KPX Dcaron Amacron -40
KPX Dcaron Aogonek -40
KPX Dcaron Aring -40
KPX Dcaron Atilde -40
KPX Dcaron V -40
KPX Dcaron W -30
KPX Dcaron Y -55
KPX Dcaron Yacute -55
KPX Dcaron Ydieresis -55
KPX Dcroat A -40
KPX Dcroat Aacute -40
KPX Dcroat Abreve -40
KPX Dcroat Acircumflex -40
KPX Dcroat Adieresis -40
KPX Dcroat Agrave -40
KPX Dcroat Amacron -40
KPX Dcroat Aogonek -40
KPX Dcroat Aring -40
KPX Dcroat Atilde -40
KPX Dcroat V -40
KPX Dcroat W -30
KPX Dcroat Y -55
KPX Dcroat Yacute -55
KPX Dcroat Ydieresis -55
KPX F A -74
KPX F Aacute -74
KPX F Abreve -74
KPX F Acircumflex -74
KPX F Adieresis -74
KPX F Agrave -74
KPX F Amacron -74
KPX F Aogonek -74
KPX F Aring -74
KPX F Atilde -74
KPX F a -15
KPX F aacute -15
KPX F abreve -15
KPX F acircumflex -15
KPX F adieresis -15
KPX F agrave -15
KPX F amacron -15
KPX F aogonek -15
KPX F aring -15
KPX F atilde -15
KPX F comma -80
KPX F o -15
KPX F oacute -15
KPX F ocircumflex -15
KPX F odieresis -15
KPX F ograve -15
KPX F ohungarumlaut -15
KPX F omacron -15
KPX F oslash -15
KPX F otilde -15
KPX F period -80
KPX J A -60
KPX J Aacute -60
KPX J Abreve -60
KPX J Acircumflex -60
KPX J Adieresis -60
KPX J Agrave -60
KPX J Amacron -60
KPX J Aogonek -60
KPX J Aring -60
KPX J Atilde -60
KPX K O -30
KPX K Oacute -30
KPX K Ocircumflex -30
KPX K Odieresis -30
KPX K Ograve -30
KPX K Ohungarumlaut -30
KPX K Omacron -30
KPX K Oslash -30
KPX K Otilde -30
KPX K e -25
KPX K eacute -25
KPX K ecaron -25
KPX K ecircumflex -25
KPX K edieresis -25
KPX K edotaccent -25
KPX K egrave -25
KPX K emacron -25
KPX K eogonek -25
KPX K o -35
KPX K oacute -35
KPX K ocircumflex -35
KPX K odieresis -35
KPX K ograve -35
KPX K ohungarumlaut -35
KPX K omacron -35
KPX K oslash -35
KPX K otilde -35
KPX K u -15
KPX K uacute -15
KPX K ucircumflex -15
KPX K udieresis -15
KPX K ugrave -15
KPX K uhungarumlaut -15
KPX K umacron -15
KPX K uogonek -15
KPX K uring -15
KPX K y -25
KPX K yacute -25
KPX K ydieresis -25
KPX Kcommaaccent O -30
KPX Kcommaaccent Oacute -30
KPX Kcommaaccent Ocircumflex -30
KPX Kcommaaccent Odieresis -30
KPX Kcommaaccent Ograve -30
KPX Kcommaaccent Ohungarumlaut -30
KPX Kcommaaccent Omacron -30
KPX Kcommaaccent Oslash -30
KPX Kcommaaccent Otilde -30
KPX Kcommaaccent e -25
KPX Kcommaaccent eacute -25
KPX Kcommaaccent ecaron -25
KPX Kcommaaccent ecircumflex -25
KPX Kcommaaccent edieresis -25
KPX Kcommaaccent edotaccent -25
KPX Kcommaaccent egrave -25
KPX Kcommaaccent emacron -25
KPX Kcommaaccent eogonek -25
KPX Kcommaaccent o -35
KPX Kcommaaccent oacute -35
KPX Kcommaaccent ocircumflex -35
KPX Kcommaaccent odieresis -35
KPX Kcommaaccent ograve -35
KPX Kcommaaccent ohungarumlaut -35
KPX Kcommaaccent omacron -35
KPX Kcommaaccent oslash -35
KPX Kcommaaccent otilde -35
KPX Kcommaaccent u -15
KPX Kcommaaccent uacute -15
KPX Kcommaaccent ucircumflex -15
KPX Kcommaaccent udieresis -15
KPX Kcommaaccent ugrave -15
KPX Kcommaaccent uhungarumlaut -15
KPX Kcommaaccent umacron -15
KPX Kcommaaccent uogonek -15
KPX Kcommaaccent uring -15
KPX Kcommaaccent y -25
KPX Kcommaaccent yacute -25
KPX Kcommaaccent ydieresis -25
KPX L T -92
KPX L Tcaron -92
KPX L Tcommaaccent -92
KPX L V -100
KPX L W -74
KPX L Y -100
KPX L Yacute -100
KPX L Ydieresis -100
KPX L quoteright -92
KPX L y -55
KPX L yacute -55
KPX L ydieresis -55
KPX Lacute T -92
KPX Lacute Tcaron -92
KPX Lacute Tcommaaccent -92
KPX Lacute V -100
KPX Lacute W -74
KPX Lacute Y -100
KPX Lacute Yacute -100
KPX Lacute Ydieresis -100
KPX Lacute quoteright -92
KPX Lacute y -55
KPX Lacute yacute -55
KPX Lacute ydieresis -55
KPX Lcaron quoteright -92
KPX Lcaron y -55
KPX Lcaron yacute -55
KPX Lcaron ydieresis -55
KPX Lcommaaccent T -92
KPX Lcommaaccent Tcaron -92
KPX Lcommaaccent Tcommaaccent -92
KPX Lcommaaccent V -100
KPX Lcommaaccent W -74
KPX Lcommaaccent Y -100
KPX Lcommaaccent Yacute -100
KPX Lcommaaccent Ydieresis -100
KPX Lcommaaccent quoteright -92
KPX Lcommaaccent y -55
KPX Lcommaaccent yacute -55
KPX Lcommaaccent ydieresis -55
KPX Lslash T -92
KPX Lslash Tcaron -92
KPX Lslash Tcommaaccent -92
KPX Lslash V -100
KPX Lslash W -74
KPX Lslash Y -100
KPX Lslash Yacute -100
KPX Lslash Ydieresis -100
KPX Lslash quoteright -92
KPX Lslash y -55
KPX Lslash yacute -55
KPX Lslash ydieresis -55
KPX N A -35
KPX N Aacute -35
KPX N Abreve -35
KPX N Acircumflex -35
KPX N Adieresis -35
KPX N Agrave -35
KPX N Amacron -35
KPX N Aogonek -35
KPX N Aring -35
KPX N Atilde -35
KPX Nacute A -35
KPX Nacute Aacute -35
KPX Nacute Abreve -35
KPX Nacute Acircumflex -35
KPX Nacute Adieresis -35
KPX Nacute Agrave -35
KPX Nacute Amacron -35
KPX Nacute Aogonek -35
KPX Nacute Aring -35
KPX Nacute Atilde -35
KPX Ncaron A -35
KPX Ncaron Aacute -35
KPX Ncaron Abreve -35
KPX Ncaron Acircumflex -35
KPX Ncaron Adieresis -35
KPX Ncaron Agrave -35
KPX Ncaron Amacron -35
KPX Ncaron Aogonek -35
KPX Ncaron Aring -35
KPX Ncaron Atilde -35
KPX Ncommaaccent A -35
KPX Ncommaaccent Aacute -35
KPX Ncommaaccent Abreve -35
KPX Ncommaaccent Acircumflex -35
KPX Ncommaaccent Adieresis -35
KPX Ncommaaccent Agrave -35
KPX Ncommaaccent Amacron -35
KPX Ncommaaccent Aogonek -35
KPX Ncommaaccent Aring -35
KPX Ncommaaccent Atilde -35
KPX Ntilde A -35
KPX Ntilde Aacute -35
KPX Ntilde Abreve -35
KPX Ntilde Acircumflex -35
KPX Ntilde Adieresis -35
KPX Ntilde Agrave -35
KPX Ntilde Amacron -35
KPX Ntilde Aogonek -35
KPX Ntilde Aring -35
KPX Ntilde Atilde -35
KPX O A -35
KPX O Aacute -35
KPX O Abreve -35
KPX O Acircumflex -35
KPX O Adieresis -35
KPX O Agrave -35
KPX O Amacron -35
KPX O Aogonek -35
KPX O Aring -35
KPX O Atilde -35
KPX O T -40
KPX O Tcaron -40
KPX O Tcommaaccent -40
KPX O V -50
KPX O W -35
KPX O X -40
KPX O Y -50
KPX O Yacute -50
KPX O Ydieresis -50
KPX Oacute A -35
KPX Oacute Aacute -35
KPX Oacute Abreve -35
KPX Oacute Acircumflex -35
KPX Oacute Adieresis -35
KPX Oacute Agrave -35
KPX Oacute Amacron -35
KPX Oacute Aogonek -35
KPX Oacute Aring -35
KPX Oacute Atilde -35
KPX Oacute T -40
KPX Oacute Tcaron -40
KPX Oacute Tcommaaccent -40
KPX Oacute V -50
KPX Oacute W -35
KPX Oacute X -40
KPX Oacute Y -50
KPX Oacute Yacute -50
KPX Oacute Ydieresis -50
KPX Ocircumflex A -35
KPX Ocircumflex Aacute -35
KPX Ocircumflex Abreve -35
KPX Ocircumflex Acircumflex -35
KPX Ocircumflex Adieresis -35
KPX Ocircumflex Agrave -35
KPX Ocircumflex Amacron -35
KPX Ocircumflex Aogonek -35
KPX Ocircumflex Aring -35
KPX Ocircumflex Atilde -35
KPX Ocircumflex T -40
KPX Ocircumflex Tcaron -40
KPX Ocircumflex Tcommaaccent -40
KPX Ocircumflex V -50
KPX Ocircumflex W -35
KPX Ocircumflex X -40
KPX Ocircumflex Y -50
KPX Ocircumflex Yacute -50
KPX Ocircumflex Ydieresis -50
KPX Odieresis A -35
KPX Odieresis Aacute -35
KPX Odieresis Abreve -35
KPX Odieresis Acircumflex -35
KPX Odieresis Adieresis -35
KPX Odieresis Agrave -35
KPX Odieresis Amacron -35
KPX Odieresis Aogonek -35
KPX Odieresis Aring -35
KPX Odieresis Atilde -35
KPX Odieresis T -40
KPX Odieresis Tcaron -40
KPX Odieresis Tcommaaccent -40
KPX Odieresis V -50
KPX Odieresis W -35
KPX Odieresis X -40
KPX Odieresis Y -50
KPX Odieresis Yacute -50
KPX Odieresis Ydieresis -50
KPX Ograve A -35
KPX Ograve Aacute -35
KPX Ograve Abreve -35
KPX Ograve Acircumflex -35
KPX Ograve Adieresis -35
KPX Ograve Agrave -35
KPX Ograve Amacron -35
KPX Ograve Aogonek -35
KPX Ograve Aring -35
KPX Ograve Atilde -35
KPX Ograve T -40
KPX Ograve Tcaron -40
KPX Ograve Tcommaaccent -40
KPX Ograve V -50
KPX Ograve W -35
KPX Ograve X -40
KPX Ograve Y -50
KPX Ograve Yacute -50
KPX Ograve Ydieresis -50
KPX Ohungarumlaut A -35
KPX Ohungarumlaut Aacute -35
KPX Ohungarumlaut Abreve -35
KPX Ohungarumlaut Acircumflex -35
KPX Ohungarumlaut Adieresis -35
KPX Ohungarumlaut Agrave -35
KPX Ohungarumlaut Amacron -35
KPX Ohungarumlaut Aogonek -35
KPX Ohungarumlaut Aring -35
KPX Ohungarumlaut Atilde -35
KPX Ohungarumlaut T -40
KPX Ohungarumlaut Tcaron -40
KPX Ohungarumlaut Tcommaaccent -40
KPX Ohungarumlaut V -50
KPX Ohungarumlaut W -35
KPX Ohungarumlaut X -40
KPX Ohungarumlaut Y -50
KPX Ohungarumlaut Yacute -50
KPX Ohungarumlaut Ydieresis -50
KPX Omacron A -35
KPX Omacron Aacute -35
KPX Omacron Abreve -35
KPX Omacron Acircumflex -35
KPX Omacron Adieresis -35
KPX Omacron Agrave -35
KPX Omacron Amacron -35
KPX Omacron Aogonek -35
KPX Omacron Aring -35
KPX Omacron Atilde -35
KPX Omacron T -40
KPX Omacron Tcaron -40
KPX Omacron Tcommaaccent -40
KPX Omacron V -50
KPX Omacron W -35
KPX Omacron X -40
KPX Omacron Y -50
KPX Omacron Yacute -50
KPX Omacron Ydieresis -50
KPX Oslash A -35
KPX Oslash Aacute -35
KPX Oslash Abreve -35
KPX Oslash Acircumflex -35
KPX Oslash Adieresis -35
KPX Oslash Agrave -35
KPX Oslash Amacron -35
KPX Oslash Aogonek -35
KPX Oslash Aring -35
KPX Oslash Atilde -35
KPX Oslash T -40
KPX Oslash Tcaron -40
KPX Oslash Tcommaaccent -40
KPX Oslash V -50
KPX Oslash W -35
KPX Oslash X -40
KPX Oslash Y -50
KPX Oslash Yacute -50
KPX Oslash Ydieresis -50
KPX Otilde A -35
KPX Otilde Aacute -35
KPX Otilde Abreve -35
KPX Otilde Acircumflex -35
KPX Otilde Adieresis -35
KPX Otilde Agrave -35
KPX Otilde Amacron -35
KPX Otilde Aogonek -35
KPX Otilde Aring -35
KPX Otilde Atilde -35
KPX Otilde T -40
KPX Otilde Tcaron -40
KPX Otilde Tcommaaccent -40
KPX Otilde V -50
KPX Otilde W -35
KPX Otilde X -40
KPX Otilde Y -50
KPX Otilde Yacute -50
KPX Otilde Ydieresis -50
KPX P A -92
KPX P Aacute -92
KPX P Abreve -92
KPX P Acircumflex -92
KPX P Adieresis -92
KPX P Agrave -92
KPX P Amacron -92
KPX P Aogonek -92
KPX P Aring -92
KPX P Atilde -92
KPX P a -15
KPX P aacute -15
KPX P abreve -15
KPX P acircumflex -15
KPX P adieresis -15
KPX P agrave -15
KPX P amacron -15
KPX P aogonek -15
KPX P aring -15
KPX P atilde -15
KPX P comma -111
KPX P period -111
KPX Q U -10
KPX Q Uacute -10
KPX Q Ucircumflex -10
KPX Q Udieresis -10
KPX Q Ugrave -10
KPX Q Uhungarumlaut -10
KPX Q Umacron -10
KPX Q Uogonek -10
KPX Q Uring -10
KPX R O -40
KPX R Oacute -40
KPX R Ocircumflex -40
KPX R Odieresis -40
KPX R Ograve -40
KPX R Ohungarumlaut -40
KPX R Omacron -40
KPX R Oslash -40
KPX R Otilde -40
KPX R T -60
KPX R Tcaron -60
KPX R Tcommaaccent -60
KPX R U -40
KPX R Uacute -40
KPX R Ucircumflex -40
KPX R Udieresis -40
KPX R Ugrave -40
KPX R Uhungarumlaut -40
KPX R Umacron -40
KPX R Uogonek -40
KPX R Uring -40
KPX R V -80
KPX R W -55
KPX R Y -65
KPX R Yacute -65
KPX R Ydieresis -65
KPX Racute O -40
KPX Racute Oacute -40
KPX Racute Ocircumflex -40
KPX Racute Odieresis -40
KPX Racute Ograve -40
KPX Racute Ohungarumlaut -40
KPX Racute Omacron -40
KPX Racute Oslash -40
KPX Racute Otilde -40
KPX Racute T -60
KPX Racute Tcaron -60
KPX Racute Tcommaaccent -60
KPX Racute U -40
KPX Racute Uacute -40
KPX Racute Ucircumflex -40
KPX Racute Udieresis -40
KPX Racute Ugrave -40
KPX Racute Uhungarumlaut -40
KPX Racute Umacron -40
KPX Racute Uogonek -40
KPX Racute Uring -40
KPX Racute V -80
KPX Racute W -55
KPX Racute Y -65
KPX Racute Yacute -65
KPX Racute Ydieresis -65
KPX Rcaron O -40
KPX Rcaron Oacute -40
KPX Rcaron Ocircumflex -40
KPX Rcaron Odieresis -40
KPX Rcaron Ograve -40
KPX Rcaron Ohungarumlaut -40
KPX Rcaron Omacron -40
KPX Rcaron Oslash -40
KPX Rcaron Otilde -40
KPX Rcaron T -60
KPX Rcaron Tcaron -60
KPX Rcaron Tcommaaccent -60
KPX Rcaron U -40
KPX Rcaron Uacute -40
KPX Rcaron Ucircumflex -40
KPX Rcaron Udieresis -40
KPX Rcaron Ugrave -40
KPX Rcaron Uhungarumlaut -40
KPX Rcaron Umacron -40
KPX Rcaron Uogonek -40
KPX Rcaron Uring -40
KPX Rcaron V -80
KPX Rcaron W -55
KPX Rcaron Y -65
KPX Rcaron Yacute -65
KPX Rcaron Ydieresis -65
KPX Rcommaaccent O -40
KPX Rcommaaccent Oacute -40
KPX Rcommaaccent Ocircumflex -40
KPX Rcommaaccent Odieresis -40
KPX Rcommaaccent Ograve -40
KPX Rcommaaccent Ohungarumlaut -40
KPX Rcommaaccent Omacron -40
KPX Rcommaaccent Oslash -40
KPX Rcommaaccent Otilde -40
KPX Rcommaaccent T -60
KPX Rcommaaccent Tcaron -60
KPX Rcommaaccent Tcommaaccent -60
KPX Rcommaaccent U -40
KPX Rcommaaccent Uacute -40
KPX Rcommaaccent Ucircumflex -40
KPX Rcommaaccent Udieresis -40
KPX Rcommaaccent Ugrave -40
KPX Rcommaaccent Uhungarumlaut -40
KPX Rcommaaccent Umacron -40
KPX Rcommaaccent Uogonek -40
KPX Rcommaaccent Uring -40
KPX Rcommaaccent V -80
KPX Rcommaaccent W -55
KPX Rcommaaccent Y -65
KPX Rcommaaccent Yacute -65
KPX Rcommaaccent Ydieresis -65
KPX T A -93
KPX T Aacute -93
KPX T Abreve -93
KPX T Acircumflex -93
KPX T Adieresis -93
KPX T Agrave -93
KPX T Amacron -93
KPX T Aogonek -93
KPX T Aring -93
KPX T Atilde -93
KPX T O -18
KPX T Oacute -18
KPX T Ocircumflex -18
KPX T Odieresis -18
KPX T Ograve -18
KPX T Ohungarumlaut -18
KPX T Omacron -18
KPX T Oslash -18
KPX T Otilde -18
KPX T a -80
KPX T aacute -80
KPX T abreve -80
KPX T acircumflex -80
KPX T adieresis -40
KPX T agrave -40
KPX T amacron -40
KPX T aogonek -80
KPX T aring -80
KPX T atilde -40
KPX T colon -50
KPX T comma -74
KPX T e -70
KPX T eacute -70
KPX T ecaron -70
KPX T ecircumflex -70
KPX T edieresis -30
KPX T edotaccent -70
KPX T egrave -70
KPX T emacron -30
KPX T eogonek -70
KPX T hyphen -92
KPX T i -35
KPX T iacute -35
KPX T iogonek -35
KPX T o -80
KPX T oacute -80
KPX T ocircumflex -80
KPX T odieresis -80
KPX T ograve -80
KPX T ohungarumlaut -80
KPX T omacron -80
KPX T oslash -80
KPX T otilde -80
KPX T period -74
KPX T r -35
KPX T racute -35
KPX T rcaron -35
KPX T rcommaaccent -35
KPX T semicolon -55
KPX T u -45
KPX T uacute -45
KPX T ucircumflex -45
KPX T udieresis -45
KPX T ugrave -45
KPX T uhungarumlaut -45
KPX T umacron -45
KPX T uogonek -45
KPX T uring -45
KPX T w -80
KPX T y -80
KPX T yacute -80
KPX T ydieresis -80
KPX Tcaron A -93
KPX Tcaron Aacute -93
KPX Tcaron Abreve -93
KPX Tcaron Acircumflex -93
KPX Tcaron Adieresis -93
KPX Tcaron Agrave -93
KPX Tcaron Amacron -93
KPX Tcaron Aogonek -93
KPX Tcaron Aring -93
KPX Tcaron Atilde -93
KPX Tcaron O -18
KPX Tcaron Oacute -18
KPX Tcaron Ocircumflex -18
KPX Tcaron Odieresis -18
KPX Tcaron Ograve -18
KPX Tcaron Ohungarumlaut -18
KPX Tcaron Omacron -18
KPX Tcaron Oslash -18
KPX Tcaron Otilde -18
KPX Tcaron a -80
KPX Tcaron aacute -80
KPX Tcaron abreve -80
KPX Tcaron acircumflex -80
KPX Tcaron adieresis -40
KPX Tcaron agrave -40
KPX Tcaron amacron -40
KPX Tcaron aogonek -80
KPX Tcaron aring -80
KPX Tcaron atilde -40
KPX Tcaron colon -50
KPX Tcaron comma -74
KPX Tcaron e -70
KPX Tcaron eacute -70
KPX Tcaron ecaron -70
KPX Tcaron ecircumflex -30
KPX Tcaron edieresis -30
KPX Tcaron edotaccent -70
KPX Tcaron egrave -70
KPX Tcaron emacron -30
KPX Tcaron eogonek -70
KPX Tcaron hyphen -92
KPX Tcaron i -35
KPX Tcaron iacute -35
KPX Tcaron iogonek -35
KPX Tcaron o -80
KPX Tcaron oacute -80
KPX Tcaron ocircumflex -80
KPX Tcaron odieresis -80
KPX Tcaron ograve -80
KPX Tcaron ohungarumlaut -80
KPX Tcaron omacron -80
KPX Tcaron oslash -80
KPX Tcaron otilde -80
KPX Tcaron period -74
KPX Tcaron r -35
KPX Tcaron racute -35
KPX Tcaron rcaron -35
KPX Tcaron rcommaaccent -35
KPX Tcaron semicolon -55
KPX Tcaron u -45
KPX Tcaron uacute -45
KPX Tcaron ucircumflex -45
KPX Tcaron udieresis -45
KPX Tcaron ugrave -45
KPX Tcaron uhungarumlaut -45
KPX Tcaron umacron -45
KPX Tcaron uogonek -45
KPX Tcaron uring -45
KPX Tcaron w -80
KPX Tcaron y -80
KPX Tcaron yacute -80
KPX Tcaron ydieresis -80
KPX Tcommaaccent A -93
KPX Tcommaaccent Aacute -93
KPX Tcommaaccent Abreve -93
KPX Tcommaaccent Acircumflex -93
KPX Tcommaaccent Adieresis -93
KPX Tcommaaccent Agrave -93
KPX Tcommaaccent Amacron -93
KPX Tcommaaccent Aogonek -93
KPX Tcommaaccent Aring -93
KPX Tcommaaccent Atilde -93
KPX Tcommaaccent O -18
KPX Tcommaaccent Oacute -18
KPX Tcommaaccent Ocircumflex -18
KPX Tcommaaccent Odieresis -18
KPX Tcommaaccent Ograve -18
KPX Tcommaaccent Ohungarumlaut -18
KPX Tcommaaccent Omacron -18
KPX Tcommaaccent Oslash -18
KPX Tcommaaccent Otilde -18
KPX Tcommaaccent a -80
KPX Tcommaaccent aacute -80
KPX Tcommaaccent abreve -80
KPX Tcommaaccent acircumflex -80
KPX Tcommaaccent adieresis -40
KPX Tcommaaccent agrave -40
KPX Tcommaaccent amacron -40
KPX Tcommaaccent aogonek -80
KPX Tcommaaccent aring -80
KPX Tcommaaccent atilde -40
KPX Tcommaaccent colon -50
KPX Tcommaaccent comma -74
KPX Tcommaaccent e -70
KPX Tcommaaccent eacute -70
KPX Tcommaaccent ecaron -70
KPX Tcommaaccent ecircumflex -30
KPX Tcommaaccent edieresis -30
KPX Tcommaaccent edotaccent -70
KPX Tcommaaccent egrave -30
KPX Tcommaaccent emacron -70
KPX Tcommaaccent eogonek -70
KPX Tcommaaccent hyphen -92
KPX Tcommaaccent i -35
KPX Tcommaaccent iacute -35
KPX Tcommaaccent iogonek -35
KPX Tcommaaccent o -80
KPX Tcommaaccent oacute -80
KPX Tcommaaccent ocircumflex -80
KPX Tcommaaccent odieresis -80
KPX Tcommaaccent ograve -80
KPX Tcommaaccent ohungarumlaut -80
KPX Tcommaaccent omacron -80
KPX Tcommaaccent oslash -80
KPX Tcommaaccent otilde -80
KPX Tcommaaccent period -74
KPX Tcommaaccent r -35
KPX Tcommaaccent racute -35
KPX Tcommaaccent rcaron -35
KPX Tcommaaccent rcommaaccent -35
KPX Tcommaaccent semicolon -55
KPX Tcommaaccent u -45
KPX Tcommaaccent uacute -45
KPX Tcommaaccent ucircumflex -45
KPX Tcommaaccent udieresis -45
KPX Tcommaaccent ugrave -45
KPX Tcommaaccent uhungarumlaut -45
KPX Tcommaaccent umacron -45
KPX Tcommaaccent uogonek -45
KPX Tcommaaccent uring -45
KPX Tcommaaccent w -80
KPX Tcommaaccent y -80
KPX Tcommaaccent yacute -80
KPX Tcommaaccent ydieresis -80
KPX U A -40
KPX U Aacute -40
KPX U Abreve -40
KPX U Acircumflex -40
KPX U Adieresis -40
KPX U Agrave -40
KPX U Amacron -40
KPX U Aogonek -40
KPX U Aring -40
KPX U Atilde -40
KPX Uacute A -40
KPX Uacute Aacute -40
KPX Uacute Abreve -40
KPX Uacute Acircumflex -40
KPX Uacute Adieresis -40
KPX Uacute Agrave -40
KPX Uacute Amacron -40
KPX Uacute Aogonek -40
KPX Uacute Aring -40
KPX Uacute Atilde -40
KPX Ucircumflex A -40
KPX Ucircumflex Aacute -40
KPX Ucircumflex Abreve -40
KPX Ucircumflex Acircumflex -40
KPX Ucircumflex Adieresis -40
KPX Ucircumflex Agrave -40
KPX Ucircumflex Amacron -40
KPX Ucircumflex Aogonek -40
KPX Ucircumflex Aring -40
KPX Ucircumflex Atilde -40
KPX Udieresis A -40
KPX Udieresis Aacute -40
KPX Udieresis Abreve -40
KPX Udieresis Acircumflex -40
KPX Udieresis Adieresis -40
KPX Udieresis Agrave -40
KPX Udieresis Amacron -40
KPX Udieresis Aogonek -40
KPX Udieresis Aring -40
KPX Udieresis Atilde -40
KPX Ugrave A -40
KPX Ugrave Aacute -40
KPX Ugrave Abreve -40
KPX Ugrave Acircumflex -40
KPX Ugrave Adieresis -40
KPX Ugrave Agrave -40
KPX Ugrave Amacron -40
KPX Ugrave Aogonek -40
KPX Ugrave Aring -40
KPX Ugrave Atilde -40
KPX Uhungarumlaut A -40
KPX Uhungarumlaut Aacute -40
KPX Uhungarumlaut Abreve -40
KPX Uhungarumlaut Acircumflex -40
KPX Uhungarumlaut Adieresis -40
KPX Uhungarumlaut Agrave -40
KPX Uhungarumlaut Amacron -40
KPX Uhungarumlaut Aogonek -40
KPX Uhungarumlaut Aring -40
KPX Uhungarumlaut Atilde -40
KPX Umacron A -40
KPX Umacron Aacute -40
KPX Umacron Abreve -40
KPX Umacron Acircumflex -40
KPX Umacron Adieresis -40
KPX Umacron Agrave -40
KPX Umacron Amacron -40
KPX Umacron Aogonek -40
KPX Umacron Aring -40
KPX Umacron Atilde -40
KPX Uogonek A -40
KPX Uogonek Aacute -40
KPX Uogonek Abreve -40
KPX Uogonek Acircumflex -40
KPX Uogonek Adieresis -40
KPX Uogonek Agrave -40
KPX Uogonek Amacron -40
KPX Uogonek Aogonek -40
KPX Uogonek Aring -40
KPX Uogonek Atilde -40
KPX Uring A -40
KPX Uring Aacute -40
KPX Uring Abreve -40
KPX Uring Acircumflex -40
KPX Uring Adieresis -40
KPX Uring Agrave -40
KPX Uring Amacron -40
KPX Uring Aogonek -40
KPX Uring Aring -40
KPX Uring Atilde -40
KPX V A -135
KPX V Aacute -135
KPX V Abreve -135
KPX V Acircumflex -135
KPX V Adieresis -135
KPX V Agrave -135
KPX V Amacron -135
KPX V Aogonek -135
KPX V Aring -135
KPX V Atilde -135
KPX V G -15
KPX V Gbreve -15
KPX V Gcommaaccent -15
KPX V O -40
KPX V Oacute -40
KPX V Ocircumflex -40
KPX V Odieresis -40
KPX V Ograve -40
KPX V Ohungarumlaut -40
KPX V Omacron -40
KPX V Oslash -40
KPX V Otilde -40
KPX V a -111
KPX V aacute -111
KPX V abreve -111
KPX V acircumflex -71
KPX V adieresis -71
KPX V agrave -71
KPX V amacron -71
KPX V aogonek -111
KPX V aring -111
KPX V atilde -71
KPX V colon -74
KPX V comma -129
KPX V e -111
KPX V eacute -111
KPX V ecaron -71
KPX V ecircumflex -71
KPX V edieresis -71
KPX V edotaccent -111
KPX V egrave -71
KPX V emacron -71
KPX V eogonek -111
KPX V hyphen -100
KPX V i -60
KPX V iacute -60
KPX V icircumflex -20
KPX V idieresis -20
KPX V igrave -20
KPX V imacron -20
KPX V iogonek -60
KPX V o -129
KPX V oacute -129
KPX V ocircumflex -129
KPX V odieresis -89
KPX V ograve -89
KPX V ohungarumlaut -129
KPX V omacron -89
KPX V oslash -129
KPX V otilde -89
KPX V period -129
KPX V semicolon -74
KPX V u -75
KPX V uacute -75
KPX V ucircumflex -75
KPX V udieresis -75
KPX V ugrave -75
KPX V uhungarumlaut -75
KPX V umacron -75
KPX V uogonek -75
KPX V uring -75
KPX W A -120
KPX W Aacute -120
KPX W Abreve -120
KPX W Acircumflex -120
KPX W Adieresis -120
KPX W Agrave -120
KPX W Amacron -120
KPX W Aogonek -120
KPX W Aring -120
KPX W Atilde -120
KPX W O -10
KPX W Oacute -10
KPX W Ocircumflex -10
KPX W Odieresis -10
KPX W Ograve -10
KPX W Ohungarumlaut -10
KPX W Omacron -10
KPX W Oslash -10
KPX W Otilde -10
KPX W a -80
KPX W aacute -80
KPX W abreve -80
KPX W acircumflex -80
KPX W adieresis -80
KPX W agrave -80
KPX W amacron -80
KPX W aogonek -80
KPX W aring -80
KPX W atilde -80
KPX W colon -37
KPX W comma -92
KPX W e -80
KPX W eacute -80
KPX W ecaron -80
KPX W ecircumflex -80
KPX W edieresis -40
KPX W edotaccent -80
KPX W egrave -40
KPX W emacron -40
KPX W eogonek -80
KPX W hyphen -65
KPX W i -40
KPX W iacute -40
KPX W iogonek -40
KPX W o -80
KPX W oacute -80
KPX W ocircumflex -80
KPX W odieresis -80
KPX W ograve -80
KPX W ohungarumlaut -80
KPX W omacron -80
KPX W oslash -80
KPX W otilde -80
KPX W period -92
KPX W semicolon -37
KPX W u -50
KPX W uacute -50
KPX W ucircumflex -50
KPX W udieresis -50
KPX W ugrave -50
KPX W uhungarumlaut -50
KPX W umacron -50
KPX W uogonek -50
KPX W uring -50
KPX W y -73
KPX W yacute -73
KPX W ydieresis -73
KPX Y A -120
KPX Y Aacute -120
KPX Y Abreve -120
KPX Y Acircumflex -120
KPX Y Adieresis -120
KPX Y Agrave -120
KPX Y Amacron -120
KPX Y Aogonek -120
KPX Y Aring -120
KPX Y Atilde -120
KPX Y O -30
KPX Y Oacute -30
KPX Y Ocircumflex -30
KPX Y Odieresis -30
KPX Y Ograve -30
KPX Y Ohungarumlaut -30
KPX Y Omacron -30
KPX Y Oslash -30
KPX Y Otilde -30
KPX Y a -100
KPX Y aacute -100
KPX Y abreve -100
KPX Y acircumflex -100
KPX Y adieresis -60
KPX Y agrave -60
KPX Y amacron -60
KPX Y aogonek -100
KPX Y aring -100
KPX Y atilde -60
KPX Y colon -92
KPX Y comma -129
KPX Y e -100
KPX Y eacute -100
KPX Y ecaron -100
KPX Y ecircumflex -100
KPX Y edieresis -60
KPX Y edotaccent -100
KPX Y egrave -60
KPX Y emacron -60
KPX Y eogonek -100
KPX Y hyphen -111
KPX Y i -55
KPX Y iacute -55
KPX Y iogonek -55
KPX Y o -110
KPX Y oacute -110
KPX Y ocircumflex -110
KPX Y odieresis -70
KPX Y ograve -70
KPX Y ohungarumlaut -110
KPX Y omacron -70
KPX Y oslash -110
KPX Y otilde -70
KPX Y period -129
KPX Y semicolon -92
KPX Y u -111
KPX Y uacute -111
KPX Y ucircumflex -111
KPX Y udieresis -71
KPX Y ugrave -71
KPX Y uhungarumlaut -111
KPX Y umacron -71
KPX Y uogonek -111
KPX Y uring -111
KPX Yacute A -120
KPX Yacute Aacute -120
KPX Yacute Abreve -120
KPX Yacute Acircumflex -120
KPX Yacute Adieresis -120
KPX Yacute Agrave -120
KPX Yacute Amacron -120
KPX Yacute Aogonek -120
KPX Yacute Aring -120
KPX Yacute Atilde -120
KPX Yacute O -30
KPX Yacute Oacute -30
KPX Yacute Ocircumflex -30
KPX Yacute Odieresis -30
KPX Yacute Ograve -30
KPX Yacute Ohungarumlaut -30
KPX Yacute Omacron -30
KPX Yacute Oslash -30
KPX Yacute Otilde -30
KPX Yacute a -100
KPX Yacute aacute -100
KPX Yacute abreve -100
KPX Yacute acircumflex -100
KPX Yacute adieresis -60
KPX Yacute agrave -60
KPX Yacute amacron -60
KPX Yacute aogonek -100
KPX Yacute aring -100
KPX Yacute atilde -60
KPX Yacute colon -92
KPX Yacute comma -129
KPX Yacute e -100
KPX Yacute eacute -100
KPX Yacute ecaron -100
KPX Yacute ecircumflex -100
KPX Yacute edieresis -60
KPX Yacute edotaccent -100
KPX Yacute egrave -60
KPX Yacute emacron -60
KPX Yacute eogonek -100
KPX Yacute hyphen -111
KPX Yacute i -55
KPX Yacute iacute -55
KPX Yacute iogonek -55
KPX Yacute o -110
KPX Yacute oacute -110
KPX Yacute ocircumflex -110
KPX Yacute odieresis -70
KPX Yacute ograve -70
KPX Yacute ohungarumlaut -110
KPX Yacute omacron -70
KPX Yacute oslash -110
KPX Yacute otilde -70
KPX Yacute period -129
KPX Yacute semicolon -92
KPX Yacute u -111
KPX Yacute uacute -111
KPX Yacute ucircumflex -111
KPX Yacute udieresis -71
KPX Yacute ugrave -71
KPX Yacute uhungarumlaut -111
KPX Yacute umacron -71
KPX Yacute uogonek -111
KPX Yacute uring -111
KPX Ydieresis A -120
KPX Ydieresis Aacute -120
KPX Ydieresis Abreve -120
KPX Ydieresis Acircumflex -120
KPX Ydieresis Adieresis -120
KPX Ydieresis Agrave -120
KPX Ydieresis Amacron -120
KPX Ydieresis Aogonek -120
KPX Ydieresis Aring -120
KPX Ydieresis Atilde -120
KPX Ydieresis O -30
KPX Ydieresis Oacute -30
KPX Ydieresis Ocircumflex -30
KPX Ydieresis Odieresis -30
KPX Ydieresis Ograve -30
KPX Ydieresis Ohungarumlaut -30
KPX Ydieresis Omacron -30
KPX Ydieresis Oslash -30
KPX Ydieresis Otilde -30
KPX Ydieresis a -100
KPX Ydieresis aacute -100
KPX Ydieresis abreve -100
KPX Ydieresis acircumflex -100
KPX Ydieresis adieresis -60
KPX Ydieresis agrave -60
KPX Ydieresis amacron -60
KPX Ydieresis aogonek -100
KPX Ydieresis aring -100
KPX Ydieresis atilde -100
KPX Ydieresis colon -92
KPX Ydieresis comma -129
KPX Ydieresis e -100
KPX Ydieresis eacute -100
KPX Ydieresis ecaron -100
KPX Ydieresis ecircumflex -100
KPX Ydieresis edieresis -60
KPX Ydieresis edotaccent -100
KPX Ydieresis egrave -60
KPX Ydieresis emacron -60
KPX Ydieresis eogonek -100
KPX Ydieresis hyphen -111
KPX Ydieresis i -55
KPX Ydieresis iacute -55
KPX Ydieresis iogonek -55
KPX Ydieresis o -110
KPX Ydieresis oacute -110
KPX Ydieresis ocircumflex -110
KPX Ydieresis odieresis -70
KPX Ydieresis ograve -70
KPX Ydieresis ohungarumlaut -110
KPX Ydieresis omacron -70
KPX Ydieresis oslash -110
KPX Ydieresis otilde -70
KPX Ydieresis period -129
KPX Ydieresis semicolon -92
KPX Ydieresis u -111
KPX Ydieresis uacute -111
KPX Ydieresis ucircumflex -111
KPX Ydieresis udieresis -71
KPX Ydieresis ugrave -71
KPX Ydieresis uhungarumlaut -111
KPX Ydieresis umacron -71
KPX Ydieresis uogonek -111
KPX Ydieresis uring -111
KPX a v -20
KPX a w -15
KPX aacute v -20
KPX aacute w -15
KPX abreve v -20
KPX abreve w -15
KPX acircumflex v -20
KPX acircumflex w -15
KPX adieresis v -20
KPX adieresis w -15
KPX agrave v -20
KPX agrave w -15
KPX amacron v -20
KPX amacron w -15
KPX aogonek v -20
KPX aogonek w -15
KPX aring v -20
KPX aring w -15
KPX atilde v -20
KPX atilde w -15
KPX b period -40
KPX b u -20
KPX b uacute -20
KPX b ucircumflex -20
KPX b udieresis -20
KPX b ugrave -20
KPX b uhungarumlaut -20
KPX b umacron -20
KPX b uogonek -20
KPX b uring -20
KPX b v -15
KPX c y -15
KPX c yacute -15
KPX c ydieresis -15
KPX cacute y -15
KPX cacute yacute -15
KPX cacute ydieresis -15
KPX ccaron y -15
KPX ccaron yacute -15
KPX ccaron ydieresis -15
KPX ccedilla y -15
KPX ccedilla yacute -15
KPX ccedilla ydieresis -15
KPX comma quotedblright -70
KPX comma quoteright -70
KPX e g -15
KPX e gbreve -15
KPX e gcommaaccent -15
KPX e v -25
KPX e w -25
KPX e x -15
KPX e y -15
KPX e yacute -15
KPX e ydieresis -15
KPX eacute g -15
KPX eacute gbreve -15
KPX eacute gcommaaccent -15
KPX eacute v -25
KPX eacute w -25
KPX eacute x -15
KPX eacute y -15
KPX eacute yacute -15
KPX eacute ydieresis -15
KPX ecaron g -15
KPX ecaron gbreve -15
KPX ecaron gcommaaccent -15
KPX ecaron v -25
KPX ecaron w -25
KPX ecaron x -15
KPX ecaron y -15
KPX ecaron yacute -15
KPX ecaron ydieresis -15
KPX ecircumflex g -15
KPX ecircumflex gbreve -15
KPX ecircumflex gcommaaccent -15
KPX ecircumflex v -25
KPX ecircumflex w -25
KPX ecircumflex x -15
KPX ecircumflex y -15
KPX ecircumflex yacute -15
KPX ecircumflex ydieresis -15
KPX edieresis g -15
KPX edieresis gbreve -15
KPX edieresis gcommaaccent -15
KPX edieresis v -25
KPX edieresis w -25
KPX edieresis x -15
KPX edieresis y -15
KPX edieresis yacute -15
KPX edieresis ydieresis -15
KPX edotaccent g -15
KPX edotaccent gbreve -15
KPX edotaccent gcommaaccent -15
KPX edotaccent v -25
KPX edotaccent w -25
KPX edotaccent x -15
KPX edotaccent y -15
KPX edotaccent yacute -15
KPX edotaccent ydieresis -15
KPX egrave g -15
KPX egrave gbreve -15
KPX egrave gcommaaccent -15
KPX egrave v -25
KPX egrave w -25
KPX egrave x -15
KPX egrave y -15
KPX egrave yacute -15
KPX egrave ydieresis -15
KPX emacron g -15
KPX emacron gbreve -15
KPX emacron gcommaaccent -15
KPX emacron v -25
KPX emacron w -25
KPX emacron x -15
KPX emacron y -15
KPX emacron yacute -15
KPX emacron ydieresis -15
KPX eogonek g -15
KPX eogonek gbreve -15
KPX eogonek gcommaaccent -15
KPX eogonek v -25
KPX eogonek w -25
KPX eogonek x -15
KPX eogonek y -15
KPX eogonek yacute -15
KPX eogonek ydieresis -15
KPX f a -10
KPX f aacute -10
KPX f abreve -10
KPX f acircumflex -10
KPX f adieresis -10
KPX f agrave -10
KPX f amacron -10
KPX f aogonek -10
KPX f aring -10
KPX f atilde -10
KPX f dotlessi -50
KPX f f -25
KPX f i -20
KPX f iacute -20
KPX f quoteright 55
KPX g a -5
KPX g aacute -5
KPX g abreve -5
KPX g acircumflex -5
KPX g adieresis -5
KPX g agrave -5
KPX g amacron -5
KPX g aogonek -5
KPX g aring -5
KPX g atilde -5
KPX gbreve a -5
KPX gbreve aacute -5
KPX gbreve abreve -5
KPX gbreve acircumflex -5
KPX gbreve adieresis -5
KPX gbreve agrave -5
KPX gbreve amacron -5
KPX gbreve aogonek -5
KPX gbreve aring -5
KPX gbreve atilde -5
KPX gcommaaccent a -5
KPX gcommaaccent aacute -5
KPX gcommaaccent abreve -5
KPX gcommaaccent acircumflex -5
KPX gcommaaccent adieresis -5
KPX gcommaaccent agrave -5
KPX gcommaaccent amacron -5
KPX gcommaaccent aogonek -5
KPX gcommaaccent aring -5
KPX gcommaaccent atilde -5
KPX h y -5
KPX h yacute -5
KPX h ydieresis -5
KPX i v -25
KPX iacute v -25
KPX icircumflex v -25
KPX idieresis v -25
KPX igrave v -25
KPX imacron v -25
KPX iogonek v -25
KPX k e -10
KPX k eacute -10
KPX k ecaron -10
KPX k ecircumflex -10
KPX k edieresis -10
KPX k edotaccent -10
KPX k egrave -10
KPX k emacron -10
KPX k eogonek -10
KPX k o -10
KPX k oacute -10
KPX k ocircumflex -10
KPX k odieresis -10
KPX k ograve -10
KPX k ohungarumlaut -10
KPX k omacron -10
KPX k oslash -10
KPX k otilde -10
KPX k y -15
KPX k yacute -15
KPX k ydieresis -15
KPX kcommaaccent e -10
KPX kcommaaccent eacute -10
KPX kcommaaccent ecaron -10
KPX kcommaaccent ecircumflex -10
KPX kcommaaccent edieresis -10
KPX kcommaaccent edotaccent -10
KPX kcommaaccent egrave -10
KPX kcommaaccent emacron -10
KPX kcommaaccent eogonek -10
KPX kcommaaccent o -10
KPX kcommaaccent oacute -10
KPX kcommaaccent ocircumflex -10
KPX kcommaaccent odieresis -10
KPX kcommaaccent ograve -10
KPX kcommaaccent ohungarumlaut -10
KPX kcommaaccent omacron -10
KPX kcommaaccent oslash -10
KPX kcommaaccent otilde -10
KPX kcommaaccent y -15
KPX kcommaaccent yacute -15
KPX kcommaaccent ydieresis -15
KPX l w -10
KPX lacute w -10
KPX lcommaaccent w -10
KPX lslash w -10
KPX n v -40
KPX n y -15
KPX n yacute -15
KPX n ydieresis -15
KPX nacute v -40
KPX nacute y -15
KPX nacute yacute -15
KPX nacute ydieresis -15
KPX ncaron v -40
KPX ncaron y -15
KPX ncaron yacute -15
KPX ncaron ydieresis -15
KPX ncommaaccent v -40
KPX ncommaaccent y -15
KPX ncommaaccent yacute -15
KPX ncommaaccent ydieresis -15
KPX ntilde v -40
KPX ntilde y -15
KPX ntilde yacute -15
KPX ntilde ydieresis -15
KPX o v -15
KPX o w -25
KPX o y -10
KPX o yacute -10
KPX o ydieresis -10
KPX oacute v -15
KPX oacute w -25
KPX oacute y -10
KPX oacute yacute -10
KPX oacute ydieresis -10
KPX ocircumflex v -15
KPX ocircumflex w -25
KPX ocircumflex y -10
KPX ocircumflex yacute -10
KPX ocircumflex ydieresis -10
KPX odieresis v -15
KPX odieresis w -25
KPX odieresis y -10
KPX odieresis yacute -10
KPX odieresis ydieresis -10
KPX ograve v -15
KPX ograve w -25
KPX ograve y -10
KPX ograve yacute -10
KPX ograve ydieresis -10
KPX ohungarumlaut v -15
KPX ohungarumlaut w -25
KPX ohungarumlaut y -10
KPX ohungarumlaut yacute -10
KPX ohungarumlaut ydieresis -10
KPX omacron v -15
KPX omacron w -25
KPX omacron y -10
KPX omacron yacute -10
KPX omacron ydieresis -10
KPX oslash v -15
KPX oslash w -25
KPX oslash y -10
KPX oslash yacute -10
KPX oslash ydieresis -10
KPX otilde v -15
KPX otilde w -25
KPX otilde y -10
KPX otilde yacute -10
KPX otilde ydieresis -10
KPX p y -10
KPX p yacute -10
KPX p ydieresis -10
KPX period quotedblright -70
KPX period quoteright -70
KPX quotedblleft A -80
KPX quotedblleft Aacute -80
KPX quotedblleft Abreve -80
KPX quotedblleft Acircumflex -80
KPX quotedblleft Adieresis -80
KPX quotedblleft Agrave -80
KPX quotedblleft Amacron -80
KPX quotedblleft Aogonek -80
KPX quotedblleft Aring -80
KPX quotedblleft Atilde -80
KPX quoteleft A -80
KPX quoteleft Aacute -80
KPX quoteleft Abreve -80
KPX quoteleft Acircumflex -80
KPX quoteleft Adieresis -80
KPX quoteleft Agrave -80
KPX quoteleft Amacron -80
KPX quoteleft Aogonek -80
KPX quoteleft Aring -80
KPX quoteleft Atilde -80
KPX quoteleft quoteleft -74
KPX quoteright d -50
KPX quoteright dcroat -50
KPX quoteright l -10
KPX quoteright lacute -10
KPX quoteright lcommaaccent -10
KPX quoteright lslash -10
KPX quoteright quoteright -74
KPX quoteright r -50
KPX quoteright racute -50
KPX quoteright rcaron -50
KPX quoteright rcommaaccent -50
KPX quoteright s -55
KPX quoteright sacute -55
KPX quoteright scaron -55
KPX quoteright scedilla -55
KPX quoteright scommaaccent -55
KPX quoteright space -74
KPX quoteright t -18
KPX quoteright tcommaaccent -18
KPX quoteright v -50
KPX r comma -40
KPX r g -18
KPX r gbreve -18
KPX r gcommaaccent -18
KPX r hyphen -20
KPX r period -55
KPX racute comma -40
KPX racute g -18
KPX racute gbreve -18
KPX racute gcommaaccent -18
KPX racute hyphen -20
KPX racute period -55
KPX rcaron comma -40
KPX rcaron g -18
KPX rcaron gbreve -18
KPX rcaron gcommaaccent -18
KPX rcaron hyphen -20
KPX rcaron period -55
KPX rcommaaccent comma -40
KPX rcommaaccent g -18
KPX rcommaaccent gbreve -18
KPX rcommaaccent gcommaaccent -18
KPX rcommaaccent hyphen -20
KPX rcommaaccent period -55
KPX space A -55
KPX space Aacute -55
KPX space Abreve -55
KPX space Acircumflex -55
KPX space Adieresis -55
KPX space Agrave -55
KPX space Amacron -55
KPX space Aogonek -55
KPX space Aring -55
KPX space Atilde -55
KPX space T -18
KPX space Tcaron -18
KPX space Tcommaaccent -18
KPX space V -50
KPX space W -30
KPX space Y -90
KPX space Yacute -90
KPX space Ydieresis -90
KPX v a -25
KPX v aacute -25
KPX v abreve -25
KPX v acircumflex -25
KPX v adieresis -25
KPX v agrave -25
KPX v amacron -25
KPX v aogonek -25
KPX v aring -25
KPX v atilde -25
KPX v comma -65
KPX v e -15
KPX v eacute -15
KPX v ecaron -15
KPX v ecircumflex -15
KPX v edieresis -15
KPX v edotaccent -15
KPX v egrave -15
KPX v emacron -15
KPX v eogonek -15
KPX v o -20
KPX v oacute -20
KPX v ocircumflex -20
KPX v odieresis -20
KPX v ograve -20
KPX v ohungarumlaut -20
KPX v omacron -20
KPX v oslash -20
KPX v otilde -20
KPX v period -65
KPX w a -10
KPX w aacute -10
KPX w abreve -10
KPX w acircumflex -10
KPX w adieresis -10
KPX w agrave -10
KPX w amacron -10
KPX w aogonek -10
KPX w aring -10
KPX w atilde -10
KPX w comma -65
KPX w o -10
KPX w oacute -10
KPX w ocircumflex -10
KPX w odieresis -10
KPX w ograve -10
KPX w ohungarumlaut -10
KPX w omacron -10
KPX w oslash -10
KPX w otilde -10
KPX w period -65
KPX x e -15
KPX x eacute -15
KPX x ecaron -15
KPX x ecircumflex -15
KPX x edieresis -15
KPX x edotaccent -15
KPX x egrave -15
KPX x emacron -15
KPX x eogonek -15
KPX y comma -65
KPX y period -65
KPX yacute comma -65
KPX yacute period -65
KPX ydieresis comma -65
KPX ydieresis period -65
EndKernPairs
EndKernData
EndFontMetrics
'
%
classmethod: StandardFont
zapfDingbats
	"from http://www.adobe.com/devnet/font.html "

	<font: #ZapfDingbats>
	^self
		windowsName: 'Arial'
		afm: 'StartFontMetrics 4.1
Comment Copyright (c) 1985, 1987, 1988, 1989, 1997 Adobe Systems Incorporated. All Rights Reserved.
Comment Creation Date: Thu May  1 15:14:13 1997
Comment UniqueID 43082
Comment VMusage 45775 55535
FontName ZapfDingbats
FullName ITC Zapf Dingbats
FamilyName ZapfDingbats
Weight Medium
ItalicAngle 0
IsFixedPitch false
CharacterSet Special
FontBBox -1 -143 981 820 
UnderlinePosition -100
UnderlineThickness 50
Version 002.000
Notice Copyright (c) 1985, 1987, 1988, 1989, 1997 Adobe Systems Incorporated. All Rights Reserved.ITC Zapf Dingbats is a registered trademark of International Typeface Corporation.
EncodingScheme FontSpecific
StdHW 28
StdVW 90
StartCharMetrics 202
C 32 ; WX 278 ; N space ; B 0 0 0 0 ;
C 33 ; WX 974 ; N a1 ; B 35 72 939 621 ;
C 34 ; WX 961 ; N a2 ; B 35 81 927 611 ;
C 35 ; WX 974 ; N a202 ; B 35 72 939 621 ;
C 36 ; WX 980 ; N a3 ; B 35 0 945 692 ;
C 37 ; WX 719 ; N a4 ; B 34 139 685 566 ;
C 38 ; WX 789 ; N a5 ; B 35 -14 755 705 ;
C 39 ; WX 790 ; N a119 ; B 35 -14 755 705 ;
C 40 ; WX 791 ; N a118 ; B 35 -13 761 705 ;
C 41 ; WX 690 ; N a117 ; B 34 138 655 553 ;
C 42 ; WX 960 ; N a11 ; B 35 123 925 568 ;
C 43 ; WX 939 ; N a12 ; B 35 134 904 559 ;
C 44 ; WX 549 ; N a13 ; B 29 -11 516 705 ;
C 45 ; WX 855 ; N a14 ; B 34 59 820 632 ;
C 46 ; WX 911 ; N a15 ; B 35 50 876 642 ;
C 47 ; WX 933 ; N a16 ; B 35 139 899 550 ;
C 48 ; WX 911 ; N a105 ; B 35 50 876 642 ;
C 49 ; WX 945 ; N a17 ; B 35 139 909 553 ;
C 50 ; WX 974 ; N a18 ; B 35 104 938 587 ;
C 51 ; WX 755 ; N a19 ; B 34 -13 721 705 ;
C 52 ; WX 846 ; N a20 ; B 36 -14 811 705 ;
C 53 ; WX 762 ; N a21 ; B 35 0 727 692 ;
C 54 ; WX 761 ; N a22 ; B 35 0 727 692 ;
C 55 ; WX 571 ; N a23 ; B -1 -68 571 661 ;
C 56 ; WX 677 ; N a24 ; B 36 -13 642 705 ;
C 57 ; WX 763 ; N a25 ; B 35 0 728 692 ;
C 58 ; WX 760 ; N a26 ; B 35 0 726 692 ;
C 59 ; WX 759 ; N a27 ; B 35 0 725 692 ;
C 60 ; WX 754 ; N a28 ; B 35 0 720 692 ;
C 61 ; WX 494 ; N a6 ; B 35 0 460 692 ;
C 62 ; WX 552 ; N a7 ; B 35 0 517 692 ;
C 63 ; WX 537 ; N a8 ; B 35 0 503 692 ;
C 64 ; WX 577 ; N a9 ; B 35 96 542 596 ;
C 65 ; WX 692 ; N a10 ; B 35 -14 657 705 ;
C 66 ; WX 786 ; N a29 ; B 35 -14 751 705 ;
C 67 ; WX 788 ; N a30 ; B 35 -14 752 705 ;
C 68 ; WX 788 ; N a31 ; B 35 -14 753 705 ;
C 69 ; WX 790 ; N a32 ; B 35 -14 756 705 ;
C 70 ; WX 793 ; N a33 ; B 35 -13 759 705 ;
C 71 ; WX 794 ; N a34 ; B 35 -13 759 705 ;
C 72 ; WX 816 ; N a35 ; B 35 -14 782 705 ;
C 73 ; WX 823 ; N a36 ; B 35 -14 787 705 ;
C 74 ; WX 789 ; N a37 ; B 35 -14 754 705 ;
C 75 ; WX 841 ; N a38 ; B 35 -14 807 705 ;
C 76 ; WX 823 ; N a39 ; B 35 -14 789 705 ;
C 77 ; WX 833 ; N a40 ; B 35 -14 798 705 ;
C 78 ; WX 816 ; N a41 ; B 35 -13 782 705 ;
C 79 ; WX 831 ; N a42 ; B 35 -14 796 705 ;
C 80 ; WX 923 ; N a43 ; B 35 -14 888 705 ;
C 81 ; WX 744 ; N a44 ; B 35 0 710 692 ;
C 82 ; WX 723 ; N a45 ; B 35 0 688 692 ;
C 83 ; WX 749 ; N a46 ; B 35 0 714 692 ;
C 84 ; WX 790 ; N a47 ; B 34 -14 756 705 ;
C 85 ; WX 792 ; N a48 ; B 35 -14 758 705 ;
C 86 ; WX 695 ; N a49 ; B 35 -14 661 706 ;
C 87 ; WX 776 ; N a50 ; B 35 -6 741 699 ;
C 88 ; WX 768 ; N a51 ; B 35 -7 734 699 ;
C 89 ; WX 792 ; N a52 ; B 35 -14 757 705 ;
C 90 ; WX 759 ; N a53 ; B 35 0 725 692 ;
C 91 ; WX 707 ; N a54 ; B 35 -13 672 704 ;
C 92 ; WX 708 ; N a55 ; B 35 -14 672 705 ;
C 93 ; WX 682 ; N a56 ; B 35 -14 647 705 ;
C 94 ; WX 701 ; N a57 ; B 35 -14 666 705 ;
C 95 ; WX 826 ; N a58 ; B 35 -14 791 705 ;
C 96 ; WX 815 ; N a59 ; B 35 -14 780 705 ;
C 97 ; WX 789 ; N a60 ; B 35 -14 754 705 ;
C 98 ; WX 789 ; N a61 ; B 35 -14 754 705 ;
C 99 ; WX 707 ; N a62 ; B 34 -14 673 705 ;
C 100 ; WX 687 ; N a63 ; B 36 0 651 692 ;
C 101 ; WX 696 ; N a64 ; B 35 0 661 691 ;
C 102 ; WX 689 ; N a65 ; B 35 0 655 692 ;
C 103 ; WX 786 ; N a66 ; B 34 -14 751 705 ;
C 104 ; WX 787 ; N a67 ; B 35 -14 752 705 ;
C 105 ; WX 713 ; N a68 ; B 35 -14 678 705 ;
C 106 ; WX 791 ; N a69 ; B 35 -14 756 705 ;
C 107 ; WX 785 ; N a70 ; B 36 -14 751 705 ;
C 108 ; WX 791 ; N a71 ; B 35 -14 757 705 ;
C 109 ; WX 873 ; N a72 ; B 35 -14 838 705 ;
C 110 ; WX 761 ; N a73 ; B 35 0 726 692 ;
C 111 ; WX 762 ; N a74 ; B 35 0 727 692 ;
C 112 ; WX 762 ; N a203 ; B 35 0 727 692 ;
C 113 ; WX 759 ; N a75 ; B 35 0 725 692 ;
C 114 ; WX 759 ; N a204 ; B 35 0 725 692 ;
C 115 ; WX 892 ; N a76 ; B 35 0 858 705 ;
C 116 ; WX 892 ; N a77 ; B 35 -14 858 692 ;
C 117 ; WX 788 ; N a78 ; B 35 -14 754 705 ;
C 118 ; WX 784 ; N a79 ; B 35 -14 749 705 ;
C 119 ; WX 438 ; N a81 ; B 35 -14 403 705 ;
C 120 ; WX 138 ; N a82 ; B 35 0 104 692 ;
C 121 ; WX 277 ; N a83 ; B 35 0 242 692 ;
C 122 ; WX 415 ; N a84 ; B 35 0 380 692 ;
C 123 ; WX 392 ; N a97 ; B 35 263 357 705 ;
C 124 ; WX 392 ; N a98 ; B 34 263 357 705 ;
C 125 ; WX 668 ; N a99 ; B 35 263 633 705 ;
C 126 ; WX 668 ; N a100 ; B 36 263 634 705 ;
C 128 ; WX 390 ; N a89 ; B 35 -14 356 705 ;
C 129 ; WX 390 ; N a90 ; B 35 -14 355 705 ;
C 130 ; WX 317 ; N a93 ; B 35 0 283 692 ;
C 131 ; WX 317 ; N a94 ; B 35 0 283 692 ;
C 132 ; WX 276 ; N a91 ; B 35 0 242 692 ;
C 133 ; WX 276 ; N a92 ; B 35 0 242 692 ;
C 134 ; WX 509 ; N a205 ; B 35 0 475 692 ;
C 135 ; WX 509 ; N a85 ; B 35 0 475 692 ;
C 136 ; WX 410 ; N a206 ; B 35 0 375 692 ;
C 137 ; WX 410 ; N a86 ; B 35 0 375 692 ;
C 138 ; WX 234 ; N a87 ; B 35 -14 199 705 ;
C 139 ; WX 234 ; N a88 ; B 35 -14 199 705 ;
C 140 ; WX 334 ; N a95 ; B 35 0 299 692 ;
C 141 ; WX 334 ; N a96 ; B 35 0 299 692 ;
C 161 ; WX 732 ; N a101 ; B 35 -143 697 806 ;
C 162 ; WX 544 ; N a102 ; B 56 -14 488 706 ;
C 163 ; WX 544 ; N a103 ; B 34 -14 508 705 ;
C 164 ; WX 910 ; N a104 ; B 35 40 875 651 ;
C 165 ; WX 667 ; N a106 ; B 35 -14 633 705 ;
C 166 ; WX 760 ; N a107 ; B 35 -14 726 705 ;
C 167 ; WX 760 ; N a108 ; B 0 121 758 569 ;
C 168 ; WX 776 ; N a112 ; B 35 0 741 705 ;
C 169 ; WX 595 ; N a111 ; B 34 -14 560 705 ;
C 170 ; WX 694 ; N a110 ; B 35 -14 659 705 ;
C 171 ; WX 626 ; N a109 ; B 34 0 591 705 ;
C 172 ; WX 788 ; N a120 ; B 35 -14 754 705 ;
C 173 ; WX 788 ; N a121 ; B 35 -14 754 705 ;
C 174 ; WX 788 ; N a122 ; B 35 -14 754 705 ;
C 175 ; WX 788 ; N a123 ; B 35 -14 754 705 ;
C 176 ; WX 788 ; N a124 ; B 35 -14 754 705 ;
C 177 ; WX 788 ; N a125 ; B 35 -14 754 705 ;
C 178 ; WX 788 ; N a126 ; B 35 -14 754 705 ;
C 179 ; WX 788 ; N a127 ; B 35 -14 754 705 ;
C 180 ; WX 788 ; N a128 ; B 35 -14 754 705 ;
C 181 ; WX 788 ; N a129 ; B 35 -14 754 705 ;
C 182 ; WX 788 ; N a130 ; B 35 -14 754 705 ;
C 183 ; WX 788 ; N a131 ; B 35 -14 754 705 ;
C 184 ; WX 788 ; N a132 ; B 35 -14 754 705 ;
C 185 ; WX 788 ; N a133 ; B 35 -14 754 705 ;
C 186 ; WX 788 ; N a134 ; B 35 -14 754 705 ;
C 187 ; WX 788 ; N a135 ; B 35 -14 754 705 ;
C 188 ; WX 788 ; N a136 ; B 35 -14 754 705 ;
C 189 ; WX 788 ; N a137 ; B 35 -14 754 705 ;
C 190 ; WX 788 ; N a138 ; B 35 -14 754 705 ;
C 191 ; WX 788 ; N a139 ; B 35 -14 754 705 ;
C 192 ; WX 788 ; N a140 ; B 35 -14 754 705 ;
C 193 ; WX 788 ; N a141 ; B 35 -14 754 705 ;
C 194 ; WX 788 ; N a142 ; B 35 -14 754 705 ;
C 195 ; WX 788 ; N a143 ; B 35 -14 754 705 ;
C 196 ; WX 788 ; N a144 ; B 35 -14 754 705 ;
C 197 ; WX 788 ; N a145 ; B 35 -14 754 705 ;
C 198 ; WX 788 ; N a146 ; B 35 -14 754 705 ;
C 199 ; WX 788 ; N a147 ; B 35 -14 754 705 ;
C 200 ; WX 788 ; N a148 ; B 35 -14 754 705 ;
C 201 ; WX 788 ; N a149 ; B 35 -14 754 705 ;
C 202 ; WX 788 ; N a150 ; B 35 -14 754 705 ;
C 203 ; WX 788 ; N a151 ; B 35 -14 754 705 ;
C 204 ; WX 788 ; N a152 ; B 35 -14 754 705 ;
C 205 ; WX 788 ; N a153 ; B 35 -14 754 705 ;
C 206 ; WX 788 ; N a154 ; B 35 -14 754 705 ;
C 207 ; WX 788 ; N a155 ; B 35 -14 754 705 ;
C 208 ; WX 788 ; N a156 ; B 35 -14 754 705 ;
C 209 ; WX 788 ; N a157 ; B 35 -14 754 705 ;
C 210 ; WX 788 ; N a158 ; B 35 -14 754 705 ;
C 211 ; WX 788 ; N a159 ; B 35 -14 754 705 ;
C 212 ; WX 894 ; N a160 ; B 35 58 860 634 ;
C 213 ; WX 838 ; N a161 ; B 35 152 803 540 ;
C 214 ; WX 1016 ; N a163 ; B 34 152 981 540 ;
C 215 ; WX 458 ; N a164 ; B 35 -127 422 820 ;
C 216 ; WX 748 ; N a196 ; B 35 94 698 597 ;
C 217 ; WX 924 ; N a165 ; B 35 140 890 552 ;
C 218 ; WX 748 ; N a192 ; B 35 94 698 597 ;
C 219 ; WX 918 ; N a166 ; B 35 166 884 526 ;
C 220 ; WX 927 ; N a167 ; B 35 32 892 660 ;
C 221 ; WX 928 ; N a168 ; B 35 129 891 562 ;
C 222 ; WX 928 ; N a169 ; B 35 128 893 563 ;
C 223 ; WX 834 ; N a170 ; B 35 155 799 537 ;
C 224 ; WX 873 ; N a171 ; B 35 93 838 599 ;
C 225 ; WX 828 ; N a172 ; B 35 104 791 588 ;
C 226 ; WX 924 ; N a173 ; B 35 98 889 594 ;
C 227 ; WX 924 ; N a162 ; B 35 98 889 594 ;
C 228 ; WX 917 ; N a174 ; B 35 0 882 692 ;
C 229 ; WX 930 ; N a175 ; B 35 84 896 608 ;
C 230 ; WX 931 ; N a176 ; B 35 84 896 608 ;
C 231 ; WX 463 ; N a177 ; B 35 -99 429 791 ;
C 232 ; WX 883 ; N a178 ; B 35 71 848 623 ;
C 233 ; WX 836 ; N a179 ; B 35 44 802 648 ;
C 234 ; WX 836 ; N a193 ; B 35 44 802 648 ;
C 235 ; WX 867 ; N a180 ; B 35 101 832 591 ;
C 236 ; WX 867 ; N a199 ; B 35 101 832 591 ;
C 237 ; WX 696 ; N a181 ; B 35 44 661 648 ;
C 238 ; WX 696 ; N a200 ; B 35 44 661 648 ;
C 239 ; WX 874 ; N a182 ; B 35 77 840 619 ;
C 241 ; WX 874 ; N a201 ; B 35 73 840 615 ;
C 242 ; WX 760 ; N a183 ; B 35 0 725 692 ;
C 243 ; WX 946 ; N a184 ; B 35 160 911 533 ;
C 244 ; WX 771 ; N a197 ; B 34 37 736 655 ;
C 245 ; WX 865 ; N a185 ; B 35 207 830 481 ;
C 246 ; WX 771 ; N a194 ; B 34 37 736 655 ;
C 247 ; WX 888 ; N a198 ; B 34 -19 853 712 ;
C 248 ; WX 967 ; N a186 ; B 35 124 932 568 ;
C 249 ; WX 888 ; N a195 ; B 34 -19 853 712 ;
C 250 ; WX 831 ; N a187 ; B 35 113 796 579 ;
C 251 ; WX 873 ; N a188 ; B 36 118 838 578 ;
C 252 ; WX 927 ; N a189 ; B 35 150 891 542 ;
C 253 ; WX 970 ; N a190 ; B 35 76 931 616 ;
C 254 ; WX 918 ; N a191 ; B 34 99 884 593 ;
EndCharMetrics
EndFontMetrics
'
%
category: 'instance creation'
classmethod: StandardFont
windowsName: nameString afm: afmString
	| inst |
	inst := self new.
	inst
		initializeWindowsFaceName: nameString
		metrics: (AdobeFontMetric fromAfm: afmString readStream).
	^inst
%
category: 'accessing'
method: StandardFont
faceName
	^self windowsFaceName
%
method: StandardFont
familyName
	^self metrics familyName
%
method: StandardFont
filename
	^self postScriptName
%
method: StandardFont
screenFamilyName
	"the windows equivalent for a standard font.
	need to be implemented differently for other OSes"

	^self windowsFaceName
%
method: StandardFont
setWidth
	^0.5
%
method: StandardFont
windowsFaceName
	"<String>
	the name of the corresponding windows font face used in a LOGFONT, normally without suffixes like Â»-BoldÂ«, Â»-ItalicÂ« etc."

	^windowsFaceName
%
category: 'initialize-release'
method: StandardFont
initializeWindowsFaceName: nameString metrics: anAdobeFontMetric
	windowsFaceName := nameString.
	self initializeMetrics: anAdobeFontMetric
%
category: 'accessing'
method: Type1Font
characterCodeOf: aCharacter
	^self encoder encode: aCharacter
%
method: Type1Font
characterGlyphs
	^self glyphs
%
method: Type1Font
encoder
	^self class winAnsiEncoder
%
method: Type1Font
file
	^self
%
method: Type1Font
glyphOrNilAtUnicode: aUnicodeInteger
	| code |
	aUnicodeInteger = Character illegalCode ifTrue: [
		^nil].
	code := self characterCodeOf: aUnicodeInteger asCharacter.
	code = Character illegalCode ifTrue: [
		^nil].
	((PostScript at: #CharacterNames) characterNamesAtUnicode: aUnicodeInteger) do: [:psName |
		(self glyphs detect: [:glyph | glyph postScriptName = psName] ifNone: [nil]) ifNotNil: [:glyph |
			^glyph]].
	^nil
%
method: Type1Font
glyphs
	^self metrics charMetrics
%
method: Type1Font
italicAngle
	^self metrics italicAngle
%
method: Type1Font
name
	^self postScriptName
%
method: Type1Font
postScriptName
	"<String>
	the name as used by PostScript and PDF"

	^self metrics postScriptName
%
method: Type1Font
undefinedGlyph
	"sometimes there is no .notdef glyph in the font - a space is returned, if even this is not available, the first glyph is returned"

	^self glyphs detect: [:glyph | glyph postScriptName asString = '.notdef'] ifNone: [
		self glyphs detect: [:glyph | glyph postScriptName asString = 'space'] ifNone: [
			self glyphs first]]
%
method: Type1Font
weight
	^self metrics weightNumber
%
category: 'accessing metrics'
method: Type1Font
ascender
	^self metrics ascender
%
method: Type1Font
capHeight
	| height |
	height := self metrics capHeight.
	height isZero ifTrue: [
		^self ascender].
	^height
%
method: Type1Font
descender
	^self metrics descender
%
method: Type1Font
fontBBox
	^self metrics fontBBox
%
method: Type1Font
leftSideBearingOfUnicode: unicode
	^(self metrics charMetricAt: unicode) ifNil: [0] ifNotNil: [:metric | metric leftSideBearing]
%
method: Type1Font
metrics
	"<AdobeFontMetrics>
	the metrics from a .AFM file (.PFM are not sufficient)"

	^metrics
%
method: Type1Font
stemV
	^self metrics stemV
%
method: Type1Font
underlinePosition
	^self metrics underlinePosition
%
method: Type1Font
underlineThickness
	^self metrics underlineThickness
%
method: Type1Font
widthOfUndefinedGlyph
	^self unitsPerEm
%
method: Type1Font
xHeight
	^self metrics xHeight
%
category: 'initialize-release'
method: Type1Font
initializeMetrics: aFontMetrics
	aFontMetrics font: self.
	metrics := aFontMetrics
%
category: 'printing'
method: Type1Font
printOn: stream
	stream
		nextPutAll: 'Type1(';
		nextPutAll: self postScriptName;
		nextPut: $)
%
category: 'testing'
method: Type1Font
canDisplayCharacter: aCharacter
	^(self characterCodeOf: aCharacter) ~= Character illegalCode
%
method: Type1Font
isFixedPitch
	^self metrics isFixedPitch
%
method: Type1Font
isItalic
	^self metrics isItalic
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Fonts CompactFontFormat'.
	dict at: #comment put: '"The Compact Font Format Specification", Adobe Technical Note #5176.

This document describes the specification of a font format that is suitable for compactly representing one or more Type 1 or CID-keyed fonts. 
Unlike previous Type 1 and CID-keyed font formats, CFF allows multiple fonts to be stored together in a unit called a FontSet. 
Principal space savings are a result of using a compact binary representation for most of the information, sharing of common data between fonts, and defaulting frequently occurring data.

The CFF format is designed to be used in conjunction with Type 2 charstrings for the character description procedures (see Adobe Technical Note #5177: âThe Type 2 Charstring Formatâ).
The design supports the embedding of PostScriptÂ® language code which permits additional flexibility and extensibility of the format when used in printer environments.'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Fonts CompactFontFormat'.
	dict at: #storeVersion put: '2.2.0.0'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components := (components at:  #'PDFtalk Fonts') at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: (PDFtalk at: #Fonts) at: 1.
%
# Define namespace CFF
DoIt
	| newDictionary |
	newDictionary := SymbolDictionary new.
	newDictionary at: #CFF put: newDictionary.
	Fonts at: #CFF put: newDictionary
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: ((PDFtalk at: #Fonts) at: #CFF) at: 1.
%
# Define class Dict
DoIt
Value
	subclass: 'Dict'
	instVarNames: #(operations)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Dict category: 'PDFtalk Fonts CompactFontFormat'.
	Dict comment: 'Font dictionary data comprising key-value pairs is represented in a compact tokenized format that is similar to that used to represent Type 1 charstrings.
Dictionary keys are encoded as 1- or 2-byte operators and dictionary values are encoded as variable-size numeric operands that represent either integer or real values.
An operator is preceded by the operand(s) that specify its value.
A DICT is simply a sequence of operand(s)/operator bytes concatenated together.'.
	Dict namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class PrivateDict
DoIt
Dict
	subclass: 'PrivateDict'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	PrivateDict category: 'PDFtalk Fonts CompactFontFormat'.
	PrivateDict comment: 'Private DICT

The names of the Private DICT operators are, where possible, the same as the corresponding Type 1 dict keys.'.
	PrivateDict namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Mapping
DoIt
Value
	subclass: 'Mapping'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Mapping category: 'PDFtalk Fonts CompactFontFormat'.
	Mapping comment: 'a Mapping is the superclass of several unrelated but similar structures used for mapping'.
	Mapping namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Operator
DoIt
Value
	subclass: 'Operator'
	instVarNames: #(value)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Operator category: 'PDFtalk Fonts CompactFontFormat'.
	Operator comment: 'an Operator in a CFF DICT'.
	Operator namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class DictOperator
DoIt
Operator
	subclass: 'DictOperator'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	DictOperator category: 'PDFtalk Fonts CompactFontFormat'.
	DictOperator comment: 'single byte operator occuring in DICTs
'.
	DictOperator namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class TwoByteOperator
DoIt
Operator
	subclass: 'TwoByteOperator'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	TwoByteOperator category: 'PDFtalk Fonts CompactFontFormat'.
	TwoByteOperator comment: 'An Operator encoded with two bytes (first byte is 12)'.
	TwoByteOperator namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Charset
DoIt
Mapping
	subclass: 'Charset'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Charset category: 'PDFtalk Fonts CompactFontFormat'.
	Charset comment: 'Charset data is located via the offset operand to the charset operator in the Top DICT.
Each charset is described by a formattype identifier byte followed by format-specific data.
Three formats are currently defined.'.
	Charset namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class StandardCharset
DoIt
Charset
	subclass: 'StandardCharset'
	instVarNames: #(name glyphs)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	StandardCharset category: 'PDFtalk Fonts CompactFontFormat'.
	StandardCharset comment: 'A standard charset'.
	StandardCharset namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class TwoByteDictOperator
DoIt
TwoByteOperator
	subclass: 'TwoByteDictOperator'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	TwoByteDictOperator category: 'PDFtalk Fonts CompactFontFormat'.
	TwoByteDictOperator comment: 'two byte operator occuring in DICTs
'.
	TwoByteDictOperator namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class CharstringOperator
DoIt
Operator
	subclass: 'CharstringOperator'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	CharstringOperator category: 'PDFtalk Fonts CompactFontFormat'.
	CharstringOperator comment: 'single byte operator occuring in CharStrings'.
	CharstringOperator namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class TopDict
DoIt
Dict
	subclass: 'TopDict'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	TopDict category: 'PDFtalk Fonts CompactFontFormat'.
	TopDict comment: 'Top DICT

The names of the Top DICT operators are, where possible, the same as the corresponding Type 1 dict key.

Several operators have been derived from FontInfo dict keys but have been grouped together with the Top DICT operators for simplicity.'.
	TopDict namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class CIDTopDict
DoIt
TopDict
	subclass: 'CIDTopDict'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	CIDTopDict category: 'PDFtalk Fonts CompactFontFormat'.
	CIDTopDict comment: 'Top DICT for CIDFonts'.
	CIDTopDict namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Charstring
DoIt
Value
	subclass: 'Charstring'
	instVarNames: #(bytes)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Charstring category: 'PDFtalk Fonts CompactFontFormat'.
	Charstring comment: 'The Type 2 Charstring Format, Adobe Technical Note #5177, 16 March 2000

The Type 2 format provides a method for compact encoding of glyph procedures in an outline font program. 
Type 2 charstrings must be used in a CFF (Compact Font Format) or OpenType font file to create a complete font program.'.
	Charstring namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class FontSet
DoIt
Object
	subclass: 'FontSet'
	instVarNames: #(version fonts)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	FontSet category: 'PDFtalk Fonts CompactFontFormat'.
	FontSet comment: '"The Compact Font Format Specification", Adobe Technical Note #5176.

This document describes the specification of a font format that is suitable for compactly representing one or more Type 1 or CID-keyed fonts. 
Unlike previous Type 1 and CID-keyed font formats, CFF allows multiple fonts to be stored together in a unit called a FontSet. 
Principal space savings are a result of using a compact binary representation for most of the information, sharing of common data between fonts, and defaulting frequently occurring data.

The CFF format is designed to be used in conjunction with Type 2 charstrings for the character description procedures (see Adobe Technical Note #5177: âThe Type 2 Charstring Formatâ).
The design supports the embedding of PostScriptÂ® language code which permits additional flexibility and extensibility of the format when used in printer environments.'.
	FontSet namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Encoding
DoIt
Mapping
	subclass: 'Encoding'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Encoding category: 'PDFtalk Fonts CompactFontFormat'.
	Encoding comment: 'Superclass of the encoding formats'.
	Encoding namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class StandardEncoding
DoIt
Encoding
	subclass: 'StandardEncoding'
	instVarNames: #(name codes)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	StandardEncoding category: 'PDFtalk Fonts CompactFontFormat'.
	StandardEncoding comment: 'A standard encoding vector (Array[256])'.
	StandardEncoding namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Encoding0
DoIt
Encoding
	subclass: 'Encoding0'
	instVarNames: #(codes supplement)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Encoding0 category: 'PDFtalk Fonts CompactFontFormat'.
	Encoding0 comment: 'Encoding Format 0

Each element of the code array represents the encoding for the corresponding glyph.
This format should be used when the codes are in a fairly random order.'.
	Encoding0 namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Range
DoIt
Value
	subclass: 'Range'
	instVarNames: #(first nLeft)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Range category: 'PDFtalk Fonts CompactFontFormat'.
	Range comment: 'A Range encodes consecutive numbers.

For example, the codes 51 52 53 54 55 could be represented by the Range: 51 4, and a perfectly ordered encoding of 256 codes can be described with the Range: 0 255.'.
	Range namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Charset1
DoIt
Charset
	subclass: 'Charset1'
	instVarNames: #(ranges)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Charset1 category: 'PDFtalk Fonts CompactFontFormat'.
	Charset1 comment: 'Each Range describes a group of sequential SIDs.
The number of ranges is not explicitly specified in the font.
Instead, software utilizing this data simply processes ranges until all glyphs in the font are covered.
This format is particularly suited to charsets that are well ordered.'.
	Charset1 namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Subroutine
DoIt
Value
	subclass: 'Subroutine'
	instVarNames: #(bytes)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Subroutine category: 'PDFtalk Fonts CompactFontFormat'.
	Subroutine comment: 'Both Type 1 and Type 2 charstrings support the notion of subroutines or subrs.
A subr is typically a sequence of charstring bytes representing a sub-program that occurs in more than one place in a fontâs charstring data.
This subr may be stored once but referenced many times from within one or more charstrings by the use of the callsubr operator whose operand is the number of the subr to be called.
The subrs are local to a particular font and cannot be shared between fonts.
Type 2 charstrings also permit global subrs which function in the same way but are called by the callgsubr operator and may be shared across fonts.'.
	Subroutine namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Charset0
DoIt
Charset
	subclass: 'Charset0'
	instVarNames: #(glyphs)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Charset0 category: 'PDFtalk Fonts CompactFontFormat'.
	Charset0 comment: 'Each element of the glyph array represents the name of the corresponding glyph.
This format should be used when the SIDs are in a fairly random order.
The number of glyphs (nGlyphs) is the value of the count field in the CharStrings INDEX.
(There is one less element in the glyph name array than nGlyphs because the .notdef glyph name is omitted.)'.
	Charset0 namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Font
DoIt
Object
	subclass: 'Font'
	instVarNames: #(file name topDict encoding charset privateDict charStrings strings localSubr globalSubr)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Font category: 'PDFtalk Fonts CompactFontFormat'.
	Font comment: 'A font stored in a font set of a CFF file'.
	Font namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class EncodingSupplement
DoIt
Mapping
	subclass: 'EncodingSupplement'
	instVarNames: #(glyphsAtCode)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	EncodingSupplement category: 'PDFtalk Fonts CompactFontFormat'.
	EncodingSupplement comment: 'Encoding Supplement

A few fonts have multiply-encoded glyphs which are not supported directly by any of the above formats.
This situation is indicated by setting the high-order bit in the format byte and supplementing the encoding, regardless of format type.

Each Supplement describes a single code-to-glyph mapping which provides another encoding for a glyph that has already been mentioned in the main encoding table.'.
	EncodingSupplement namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class CIDFont
DoIt
Font
	subclass: 'CIDFont'
	instVarNames: #(fontDicts fdSelect)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	CIDFont category: 'PDFtalk Fonts CompactFontFormat'.
	CIDFont comment: 'The representation of a CIDFont is designed to be separable from its encoding. In keeping with this strategy, the CFF representation does not include any encoding information which instead resides in a CMap file. If a need arises for a more compact representation of the CMap file, CFF can be extended to accommodate it.

A CFF CIDFont has the CIDFontName in the Name INDEX and a corresponding Top DICT. The Top DICT begins with ROS operator which specifies the Registry-Ordering-Supplement for the font. This will indicate to a CFF parser that special CID processing should be applied to this font. Specifically:

â¢ The FDArray operator is expected to be present, with a single argument specifying an offset to the Font DICT INDEX. Each Font DICT in this array specifies information unique to a particular group of glyphs in the font. The mapping of glyphs to Font DICTs is specified by the FDSelect structure described below. Each Font DICT will specify a corresponding Private DICT with the Private DICT operator.

â¢ The charset data, although in the same format as non-CIDFonts, will represent CIDs rather than SIDs, i.e. charstrings are ânamedâ by CIDs in a CIDFont. In a complete CIDFont the charset table will specify an identity mapping (where GID equals CID for all glyphs) as a single range beginning at CID 1 (CID 0, the .notdef glyph, is omitted) that covers all the glyphs in the font. Subset CIDFonts will generally need to use a more complex charset table representing a non-identity mapping (where CID doesnât equal GID).

â¢ The Top DICT will include an FDSelect operator specifying an offset to a charset-like data structure (see next section) which contains a, possibly range-encoded, list of indexes, from which a single index may be derived for each glyph. The index identifies the Font DICT, and therefore the Private DICT, to be used when rasterizing a glyph.

â¢ The encoding data is omitted (see above); no Encoding operator will be present and the default StandardEncoding should not be applied.

There are no predefined charsets for CID fonts.'.
	CIDFont namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Index
DoIt
Value
	subclass: 'Index'
	instVarNames: #(count offSize offset data)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Index category: 'PDFtalk Fonts CompactFontFormat'.
	Index comment: '5. INDEX Data, pp.10

An INDEX is an array of variable-sized objects. It comprises a header, an offset array, and object data. 
The offset array specifies offsets within the object data. 
An object is retrieved by indexing the offset array and fetching the object at the specified offset. 
The objectâs length can be determined by subtracting its offset from the next offset in the offset array. 
An additional offset is added at the end of the offset array so the length of the last object may be determined. '.
	Index namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Type1Font
DoIt
Font
	subclass: 'Type1Font'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Type1Font category: 'PDFtalk Fonts CompactFontFormat'.
	Type1Font comment: 'A Type-1 font stored in a font set of a CFF file
'.
	Type1Font namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Charset2
DoIt
Charset1
	subclass: 'Charset2'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Charset2 category: 'PDFtalk Fonts CompactFontFormat'.
	Charset2 comment: 'Format 2 differs from format 1 only in the size of the nLeft field in each range.
This format is most suitable for fonts with a large well-ordered charset â for example, for Asian CIDFonts.'.
	Charset2 namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class TwoByteCharstringOperator
DoIt
TwoByteOperator
	subclass: 'TwoByteCharstringOperator'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	TwoByteCharstringOperator category: 'PDFtalk Fonts CompactFontFormat'.
	TwoByteCharstringOperator comment: 'two byte operator occuring in CharStrings
'.
	TwoByteCharstringOperator namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Header
DoIt
Value
	subclass: 'Header'
	instVarNames: #(major minor hdrSize offSize)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Header category: 'PDFtalk Fonts CompactFontFormat'.
	Header comment: '6. Header, pp.11

The binary data begins with a header'.
	Header namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Encoding1
DoIt
Encoding
	subclass: 'Encoding1'
	instVarNames: #(ranges supplement)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Encoding1 category: 'PDFtalk Fonts CompactFontFormat'.
	Encoding1 comment: 'Encoding Format 1

Each Range1 describes a group of sequential codes.
For example, the codes 51 52 53 54 55 could be represented by the Range1: 51 4,
and a perfectly ordered encoding of 256 codes can be described with the Range1: 0 255.

This format is particularly suited to encodings that are well ordered.'.
	Encoding1 namespacePath: #(#PDFtalk #Fonts #CFF).
%
# Define class Operation
DoIt
Value
	subclass: 'Operation'
	instVarNames: #(operator operands)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: CFF
%
DoIt
	Operation category: 'PDFtalk Fonts CompactFontFormat'.
	Operation comment: 'a CFF operation with operands and operator'.
	Operation namespacePath: #(#PDFtalk #Fonts #CFF).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: ((PDFtalk at: #Fonts) at: #CFF) at: 1.
%
category: 'accessing'
method: Charset
sids
	"<Array of: SID>"

	^self subclassResponsibility
%
category: 'instance creation'
classmethod: Charset0
glyphs: glyphsArray
	| inst |
	inst := self new.
	inst initializeGlyphs: glyphsArray.
	^inst
%
classmethod: Charset0
numberOfGlyphs: numberOfGlyphs fromBytes: aByteStream
	| glyphs |
	glyphs := OrderedCollection new: numberOfGlyphs - 1.
	numberOfGlyphs - 1 timesRepeat: [glyphs add: (self sidFrom: aByteStream)].
	^self glyphs: glyphs
%
category: 'specification'
classmethod: Charset0
localSpecification
	<sequence: #glyphs comment: 'Glyph name array'>
%
category: 'accessing'
method: Charset0
glyphs
	"<Array>
	Glyph name array"

	^glyphs ifNil: [#()]
%
method: Charset0
sids
	^#(0), self glyphs
%
category: 'initialize-release'
method: Charset0
initializeGlyphs: glyphsArray
	(glyphsArray notNil and: [
	glyphsArray notEmpty]) ifTrue: [
			glyphs := (Array withAll: glyphsArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: Charset0
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer array: 'glyphs' value: self glyphs).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: Charset1
nLeftFrom: aByteStream
	^aByteStream next
%
classmethod: Charset1
numberOfGlyphs: numberOfGlyphs fromBytes: aByteStream
	| ranges namesToRead |
	ranges := OrderedCollection new.
	namesToRead := numberOfGlyphs - 1.
	[namesToRead strictlyPositive] whileTrue: [
		| range |
		range := Range first: (self sidFrom: aByteStream) nLeft: (self nLeftFrom: aByteStream).
		ranges add: range.
		namesToRead := namesToRead - (range nLeft + 1)].
	^self ranges: ranges
%
classmethod: Charset1
ranges: rangesArray
	| inst |
	inst := self new.
	inst initializeRanges: rangesArray.
	^inst
%
category: 'specification'
classmethod: Charset1
localSpecification
	<sequence: #ranges>
%
category: 'accessing'
method: Charset1
ranges
	"<Array>"

	^ranges ifNil: [#()]
%
method: Charset1
sids
	| wst |
	wst := WriteStream on: Array new.
	wst nextPut: 0.
	self ranges do: [:range | wst nextPutAll: range values].
	^wst contents
%
category: 'initialize-release'
method: Charset1
initializeRanges: rangesArray
	(rangesArray notNil and: [
	rangesArray notEmpty]) ifTrue: [
			ranges := (Array withAll: rangesArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: Charset1
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer array: 'ranges' value: self ranges).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: Charset2
nLeftFrom: aByteStream
	^(ByteReadStream bigEndianOn: (aByteStream next: 2)) nextUnsignedShort
%
category: 'instance creation'
classmethod: Charstring
bytes: bytesArray
	| inst |
	inst := self new.
	inst initializeBytes: bytesArray.
	^inst
%
category: 'specification'
classmethod: Charstring
localSpecification
	<sequence: #bytes>
%
category: 'accessing'
method: Charstring
bytes
	"<Array>"

	^bytes ifNil: [#()]
%
method: Charstring
operations
	"<SequenceableCollection of: Operation>"

	| operations args rst |
	operations := OrderedCollection new.
	args := OrderedCollection new.
	rst := self bytes readStream.
	[rst atEnd] whileFalse: [
		| element |
		element := self readElementFrom: rst.
		element respondsToArithmetic
			ifTrue: [args add: element]
			ifFalse: [
			operations add: (Operation operator: element operands: args).
			args := OrderedCollection new]].
	^operations
%
category: 'initialize-release'
method: Charstring
initializeBytes: bytesArray
	(bytesArray notNil and: [
	bytesArray notEmpty]) ifTrue: [
			bytes := (Array withAll: bytesArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: Charstring
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer array: 'bytes' value: self bytes).
	^printer printvalue: self arguments: args
%
category: 'reading'
method: Charstring
integerFrom: byteStream
	"<Integer>"

	| b0 b1 |
	b0 := byteStream next.
	(b0 between: 32 and: 246) ifTrue: [
		^b0 - 139].
	b1 := byteStream next.
	(b0 between: 247 and: 250) ifTrue: [
		^(b0 - 247) * 256 + b1 + 108].
	(b0 between: 251 and: 254) ifTrue: [
		^(b0 - 251) negated * 256 - b1 - 108].
	self error: 'no Integer operand'
%
method: Charstring
operatorFrom: byteStream
	"<Operator>"

	| byte |
	byte := byteStream next.
	byte = 12 ifTrue: [
		^TwoByteCharstringOperator value: byteStream next].
	^CharstringOperator value: byte
%
method: Charstring
readElementFrom: byteStream
	"<Operator | Number>"

	| byte |
	byte := byteStream peek.
	byte = 28 ifTrue: [
		^self shortIntFrom: byteStream].
	(byte between: 0 and: 31) ifTrue: [
		^self operatorFrom: byteStream].
	byte = 255 ifTrue: [
		^self signedFractionFrom: byteStream].
	^self integerFrom: byteStream
%
method: Charstring
shortIntFrom: byteStream
	"<Integer>"

	byteStream next = 28 ifFalse: [
		^self error: 'no Integer operand'].
	^(ByteReadStream bigEndianOn: (byteStream next: 2)) nextShort
%
method: Charstring
signedFractionFrom: byteStream
	"<Number>"

	| integer fraction rst |
	byteStream next = 255 ifFalse: [
		^self error: 'no Integer operand'].
	rst := ByteReadStream bigEndianOn: (byteStream next: 4).
	integer := rst nextShort.
	fraction := rst nextShort.
	^integer + (fraction / 256)
%
category: 'accessing'
classmethod: CharstringOperator
namesDictionary
	| dict |
	dict := Dictionary new.
	"0 reserverd"
	dict at: 1 put: 'hstem'.
	"2 reserverd"
	dict at: 3 put: 'vstem'.
	dict at: 4 put: 'vmoveto'.
	dict at: 5 put: 'rlineto'.
	dict at: 6 put: 'hlineto'.
	dict at: 7 put: 'vlineto'.
	dict at: 8 put: 'rrcurveto'.
	"9 reserverd"
	dict at: 10 put: 'callsubr'.
	dict at: 11 put: 'return'.
	"12 escape for TwoByteOperators"
	"13 reserverd"
	dict at: 14 put: 'endchar'.
	"15 - 17 reserverd"
	dict at: 18 put: 'hstemhm'.
	dict at: 19 put: 'hintmask'.
	dict at: 20 put: 'cntrmask'.
	dict at: 21 put: 'rmoveto'.
	dict at: 22 put: 'hmoveto'.
	dict at: 23 put: 'vstemhm'.
	dict at: 24 put: 'rcurveline'.
	dict at: 25 put: 'rlinecurve'.
	dict at: 26 put: 'vvcurveto'.
	dict at: 27 put: 'hhcurveto'.
	"28 shortint"
	dict at: 29 put: 'callgsubr'.
	dict at: 30 put: 'vhcurveto'.
	dict at: 31 put: 'hvcurveto'.
	^dict
%
category: 'instance creation'
classmethod: CIDFont
name: nameString topDict: topDictTopDict encoding: encodingEncoding charset: charsetCharset privateDict: privateDictPrivateDict charStrings: charStringsArray strings: stringsArray localSubr: localSubrArray globalSubr: globalSubrArray fontDicts: fontDictsArray fdSelect: fdSelectValue
	| inst |
	inst := self new.
	inst
		initializeName: nameString
		topDict: topDictTopDict
		encoding: encodingEncoding
		charset: charsetCharset
		privateDict: privateDictPrivateDict
		charStrings: charStringsArray
		strings: stringsArray
		localSubr: localSubrArray
		globalSubr: globalSubrArray
		fontDicts: fontDictsArray
		fdSelect: fdSelectValue.
	^inst
%
category: 'accessing'
method: CIDFont
fdSelect
	"<Value>
	Glyph-Font mapping. Not implemented."

	^fdSelect
%
method: CIDFont
fontDicts
	"<Array>"

	^fontDicts ifNil: [#()]
%
category: 'initialize-release'
method: CIDFont
initializeName: nameString topDict: topDictTopDict encoding: encodingEncoding charset: charsetCharset privateDict: privateDictPrivateDict charStrings: charStringsArray strings: stringsArray localSubr: localSubrArray globalSubr: globalSubrArray fontDicts: fontDictsArray fdSelect: fdSelectValue
	name := nameString.
	topDict := topDictTopDict.
	encoding := encodingEncoding.
	charset := charsetCharset.
	privateDict := privateDictPrivateDict.
	(charStringsArray notNil and: [
	charStringsArray notEmpty]) ifTrue: [
			charStrings := (Array withAll: charStringsArray) beImmutable].
	(stringsArray notNil and: [
	stringsArray notEmpty]) ifTrue: [
			strings := (Array withAll: stringsArray) beImmutable].
	(localSubrArray notNil and: [
	localSubrArray notEmpty]) ifTrue: [
			localSubr := (Array withAll: localSubrArray) beImmutable].
	(globalSubrArray notNil and: [
	globalSubrArray notEmpty]) ifTrue: [
			globalSubr := (Array withAll: globalSubrArray) beImmutable].
	(fontDictsArray notNil and: [
	fontDictsArray notEmpty]) ifTrue: [
			fontDicts := (Array withAll: fontDictsArray) beImmutable].
	fdSelect := fdSelectValue.
	self beImmutable
%
category: 'printing'
method: CIDFont
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'name' value: self name).
	args add: (printer constant: 'topDict' value: self topDict).
	args add: (printer constant: 'encoding' value: self encoding).
	args add: (printer constant: 'charset' value: self charset).
	args add: (printer constant: 'privateDict' value: self privateDict).
	args add: (printer array: 'charStrings' value: self charStrings).
	args add: (printer array: 'strings' value: self strings).
	args add: (printer array: 'localSubr' value: self localSubr).
	args add: (printer array: 'globalSubr' value: self globalSubr).
	args add: (printer array: 'fontDicts' value: self fontDicts).
	args add: (printer constant: 'fdSelect' value: self fdSelect).
	^printer printvalue: self arguments: args
%
category: 'accessing'
method: CIDTopDict
cIDCount
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 34] ifNone: [
		^8720].
	^op operands first
%
method: CIDTopDict
cIDFontRevision
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 32] ifNone: [
		^0].
	^op operands first
%
method: CIDTopDict
cIDFontType
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 33] ifNone: [
		^0].
	^op operands first
%
method: CIDTopDict
cIDFontVersion
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 31] ifNone: [
		^0].
	^op operands first
%
method: CIDTopDict
fdArray
	"<Number>
	Font DICT (FD) INDEX offset (0)"

	| op |
	op := self operations detect: [:operation | operation isExtended: 36] ifNone: [
		^0].
	^op operands first
%
method: CIDTopDict
fdSelect
	"<Number>
	FDSelect offset (0)"

	| op |
	op := self operations detect: [:operation | operation isExtended: 37] ifNone: [
		^0].
	^op operands first
%
method: CIDTopDict
fontClass
	^CIDFont
%
method: CIDTopDict
fontName
	"<SID>
	FD FontName"

	| op |
	op := self operations detect: [:operation | operation isExtended: 38] ifNone: [
		^0].
	^op operands first
%
method: CIDTopDict
ros
	"<[SID SID Number]>
	Registry Ordering Supplement"

	| op |
	op := self operations detect: [:operation | operation isExtended: 30] ifNone: [
		^#()].
	^op operands
%
method: CIDTopDict
uIDBase
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 35] ifNone: [
		^0].
	^op operands first
%
category: 'accessing'
classmethod: Dict
integerFrom: byteStream
	"<Integer>"

	| b0 b1 b2 b3 b4 |
	b0 := byteStream next.
	(b0 between: 32 and: 246) ifTrue: [
		^b0 - 139].
	b1 := byteStream next.
	(b0 between: 247 and: 250) ifTrue: [
		^(b0 - 247) * 256 + b1 + 108].
	(b0 between: 251 and: 254) ifTrue: [
		^(b0 - 251) negated * 256 - b1 - 108].
	b2 := byteStream next.
	b0 = 28 ifTrue: [
		^(ByteReadStream bigEndianOn: (ByteArray
			with: b1
			with: b2)) nextShort].
	b0 = 29 ifTrue: [
		b3 := byteStream next.
		b4 := byteStream next.
		^(ByteReadStream bigEndianOn: (ByteArray
			with: b1
			with: b2
			with: b3
			with: b4)) nextLong].
	self error: 'no Integer operand'
%
classmethod: Dict
operatorFrom: byteStream
	"<Operator>"

	| byte |
	byte := byteStream next.
	byte = 12 ifTrue: [
		^TwoByteDictOperator value: byteStream next].
	^DictOperator value: byte
%
classmethod: Dict
readElementFrom: byteStream
	"<Operator | Number>"

	| byte |
	byte := byteStream peek.
	(byte between: 0 and: 21) ifTrue: [
		^self operatorFrom: byteStream].
	byte = 30 ifTrue: [
		^self realFrom: byteStream].
	^self integerFrom: byteStream
%
classmethod: Dict
realFrom: byteStream
	"<Number>"

	^Float fromStringLocaleC: (self realStringFrom: byteStream)
%
classmethod: Dict
realStringFrom: byteStream
	"<String>"

	| wst |
	byteStream next = 30 ifFalse: [
		^self error: 'no Real operand'].
	wst := String new writeStream.
	[
	| byte nibble1 nibble2 |
	byte := byteStream next.
	nibble1 := byte bitShift: -4.
	nibble1 = 16rF ifTrue: [
		^wst contents].
	wst nextPutAll: (self stringForRealNibble: nibble1).
	nibble2 := byte bitAnd: 16rF.
	nibble2 = 16rF ifTrue: [
		^wst contents].
	wst nextPutAll: (self stringForRealNibble: nibble2)] repeat
%
classmethod: Dict
stringForRealNibble: aNibble
	"<String>"

	(aNibble between: 0 and: 9) ifTrue: [
		^aNibble printString].
	aNibble = 16rA ifTrue: [
		^'.'].
	aNibble = 16rB ifTrue: [
		^'e'].
	aNibble = 16rC ifTrue: [
		^'e-'].
	aNibble = 16rE ifTrue: [
		^'-'].
	aNibble = 16rD ifTrue: [
		self error: 'reserved Real nibble']
%
category: 'instance creation'
classmethod: Dict
fromBytes: aByteStream
	| list args |
	list := OrderedCollection new.
	args := OrderedCollection new.
	[aByteStream atEnd] whileFalse: [
		| element |
		element := self readElementFrom: aByteStream.
		element isNumber
			ifTrue: [args add: element]
			ifFalse: [
			list add: (Operation operator: element operands: args).
			args := OrderedCollection new]].
	^self operations: list
%
classmethod: Dict
operations: operationsArray
	| inst |
	inst := self new.
	inst initializeOperations: operationsArray.
	^inst
%
category: 'specification'
classmethod: Dict
localSpecification
	<sequence: #operations>
%
category: 'accessing'
method: Dict
operations
	"<Array>"

	^operations ifNil: [#()]
%
category: 'initialize-release'
method: Dict
initializeOperations: operationsArray
	(operationsArray notNil and: [
	operationsArray notEmpty]) ifTrue: [
			operations := (Array withAll: operationsArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: Dict
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer array: 'operations' value: self operations).
	^printer printvalue: self arguments: args
%
category: 'accessing'
classmethod: DictOperator
namesDictionary
	| dict |
	dict := Dictionary new.
	dict at: 0 put: 'version'.
	dict at: 1 put: 'Notice'.
	dict at: 2 put: 'FullName'.
	dict at: 3 put: 'FamilyName'.
	dict at: 4 put: 'Weight'.
	dict at: 5 put: 'FontBBox'.
	dict at: 6 put: 'BlueValues'.
	dict at: 7 put: 'OtherBlues'.
	dict at: 8 put: 'FamilyBlues'.
	dict at: 9 put: 'FamilyOtherBlues'.
	dict at: 10 put: 'StdHW'.
	dict at: 11 put: 'StdVW'.
	"12 escape for TwoByteOperators"
	dict at: 13 put: 'UniqueID'.
	dict at: 14 put: 'XUID'.
	dict at: 15 put: 'charset'.
	dict at: 16 put: 'Encoding'.
	dict at: 17 put: 'CharStrings'.
	dict at: 18 put: 'Private'.
	dict at: 19 put: 'Subrs'.
	dict at: 20 put: 'defaultWidthX'.
	dict at: 21 put: 'nominalWidthX'.
	^dict
%
category: 'instance creation'
classmethod: Encoding
fromBytes: aByteStream
	| formatByte dataFormat |
	formatByte := aByteStream peek.
	dataFormat := formatByte bitAnd: 16r7F.
	dataFormat = 0 ifTrue: [
		^Encoding0 fromBytes: aByteStream].
	dataFormat = 1 ifTrue: [
		^Encoding1 fromBytes: aByteStream].
	self error: 'wrong format'
%
category: 'instance creation'
classmethod: Encoding0
codes: codesArray supplement: supplementEncodingSupplement
	| inst |
	inst := self new.
	inst initializeCodes: codesArray supplement: supplementEncodingSupplement.
	^inst
%
classmethod: Encoding0
fromBytes: aByteStream
	| formatByte hasSupplement nCodes codes |
	formatByte := aByteStream next.
	hasSupplement := (formatByte bitAnd: 16r80) isZero not.
	nCodes := aByteStream next.
	codes := aByteStream next: nCodes.
	hasSupplement ifFalse: [
		^self codes: codes].
	^self codes: codes supplement: (EncodingSupplement fromBytes: aByteStream)
%
category: 'instance creation optional'
classmethod: Encoding0
codes: codesArray
	| inst |
	inst := self new.
	inst initializeCodes: codesArray supplement: nil.
	^inst
%
classmethod: Encoding0
supplement: supplementEncodingSupplement
	| inst |
	inst := self new.
	inst initializeCodes: nil supplement: supplementEncodingSupplement.
	^inst
%
category: 'specification'
classmethod: Encoding0
localSpecification
	<sequence: #codes>
	<optional: #supplement class: #(#EncodingSupplement) default: 'EncodingSupplement new'>
%
category: 'accessing'
method: Encoding0
codes
	"<Array>"

	^codes ifNil: [#()]
%
method: Encoding0
supplement
	"<EncodingSupplement>"

	^supplement ifNil: [EncodingSupplement new]
%
category: 'initialize-release'
method: Encoding0
initializeCodes: codesArray supplement: supplementEncodingSupplement
	(codesArray notNil and: [
	codesArray notEmpty]) ifTrue: [
			codes := (Array withAll: codesArray) beImmutable].
	(supplementEncodingSupplement notNil and: [
	self supplement ~= supplementEncodingSupplement]) ifTrue: [
			supplement := supplementEncodingSupplement].
	self beImmutable
%
category: 'printing'
method: Encoding0
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer array: 'codes' value: self codes).
	args add: (printer optional: 'supplement' value: supplement).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: Encoding1
fromBytes: aByteStream
	| formatByte hasSupplement nRanges ranges |
	formatByte := aByteStream next.
	hasSupplement := (formatByte bitAnd: 16r80) isZero not.
	nRanges := aByteStream next.
	ranges := OrderedCollection new: nRanges.
	nRanges timesRepeat: [
		ranges add: (Range first: aByteStream next nLeft: aByteStream next)].
	hasSupplement ifFalse: [
		^self ranges: ranges].
	^self ranges: ranges supplement: (EncodingSupplement fromBytes: aByteStream)
%
classmethod: Encoding1
ranges: rangesArray supplement: supplementEncodingSupplement
	| inst |
	inst := self new.
	inst initializeRanges: rangesArray supplement: supplementEncodingSupplement.
	^inst
%
category: 'instance creation optional'
classmethod: Encoding1
ranges: rangesArray
	| inst |
	inst := self new.
	inst initializeRanges: rangesArray supplement: nil.
	^inst
%
classmethod: Encoding1
supplement: supplementEncodingSupplement
	| inst |
	inst := self new.
	inst initializeRanges: nil supplement: supplementEncodingSupplement.
	^inst
%
category: 'specification'
classmethod: Encoding1
localSpecification
	<sequence: #ranges>
	<optional: #supplement class: #(#EncodingSupplement) default: 'EncodingSupplement new'>
%
category: 'accessing'
method: Encoding1
ranges
	"<Array>"

	^ranges ifNil: [#()]
%
method: Encoding1
supplement
	"<EncodingSupplement>"

	^supplement ifNil: [EncodingSupplement new]
%
category: 'initialize-release'
method: Encoding1
initializeRanges: rangesArray supplement: supplementEncodingSupplement
	(rangesArray notNil and: [
	rangesArray notEmpty]) ifTrue: [
			ranges := (Array withAll: rangesArray) beImmutable].
	(supplementEncodingSupplement notNil and: [
	self supplement ~= supplementEncodingSupplement]) ifTrue: [
			supplement := supplementEncodingSupplement].
	self beImmutable
%
category: 'printing'
method: Encoding1
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer array: 'ranges' value: self ranges).
	args add: (printer optional: 'supplement' value: supplement).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: EncodingSupplement
fromBytes: aByteStream
	| dict |
	dict := Valuemap new.
	aByteStream next timesRepeat: [
		dict at: aByteStream next put: (self sidFrom: aByteStream)].
	^self glyphsAtCode: dict
%
classmethod: EncodingSupplement
glyphsAtCode: glyphsAtCodeDictionary
	| inst |
	inst := self new.
	inst initializeGlyphsAtCode: glyphsAtCodeDictionary.
	^inst
%
category: 'specification'
classmethod: EncodingSupplement
localSpecification
	<map: #glyphsAtCode>
%
category: 'accessing'
method: EncodingSupplement
glyphsAtCode
	"<Dictionary>"

	^glyphsAtCode ifNil: [Dictionary new beImmutable]
%
category: 'initialize-release'
method: EncodingSupplement
initializeGlyphsAtCode: glyphsAtCodeDictionary
	(glyphsAtCodeDictionary notNil and: [
	glyphsAtCodeDictionary notEmpty]) ifTrue: [
			glyphsAtCode := (Valuemap withAll: glyphsAtCodeDictionary) beImmutable].
	self beImmutable
%
category: 'printing'
method: EncodingSupplement
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer dictionary: 'glyphsAtCode' value: self glyphsAtCode).
	^printer printvalue: self arguments: args
%
category: 'accessing'
classmethod: Font
standardStrings
	"from Appendix A"

	^#('.notdef' 'space' 'exclam' 'quotedbl' 'numbersign' 'dollar' 'percent' 'ampersand' 'quoteright' 'parenleft' 'parenright' 'asterisk' 'plus' 'comma' 'hyphen' 'period' 'slash' 'zero' 'one' 'two' 'three' 'four' 'five' 'six' 'seven' 'eight' 'nine' 'colon' 'semicolon' 'less' 'equal' 'greater' 'question' 'at' 'A' 'B' 'C' 'D' 'E' 'F' 'G' 'H' 'I' 'J' 'K' 'L' 'M' 'N' 'O' 'P' 'Q' 'R' 'S' 'T' 'U' 'V' 'W' 'X' 'Y' 'Z' 'bracketleft' 'backslash' 'bracketright' 'asciicircum' 'underscore' 'quoteleft' 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 'u' 'v' 'w' 'x' 'y' 'z' 'braceleft' 'bar' 'braceright' 'asciitilde' 'exclamdown' 'cent' 'sterling' 'fraction' 'yen' 'florin' 'section' 'currency' 'quotesingle' 'quotedblleft' 'guillemotleft' 'guilsinglleft' 'guilsinglright' 'fi' 'fl' 'endash' 'dagger' 'daggerdbl' 'periodcentered' 'paragraph' 'bullet' 'quotesinglbase' 'quotedblbase' 'quotedblright' 'guillemotright' 'ellipsis' 'perthousand' 'questiondown' 'grave' 'acute' 'circumflex' 'tilde' 'macron' 'breve' 'dotaccent' 'dieresis' 'ring' 'cedilla' 'hungarumlaut' 'ogonek' 'caron' 'emdash' 'AE' 'ordfeminine' 'Lslash' 'Oslash' 'OE' 'ordmasculine' 'ae' 'dotlessi' 'lslash' 'oslash' 'oe' 'germandbls' 'onesuperior' 'logicalnot' 'mu' 'trademark' 'Eth' 'onehalf' 'plusminus' 'Thorn' 'onequarter' 'divide' 'brokenbar' 'degree' 'thorn' 'threequarters' 'twosuperior' 'registered' 'minus' 'eth' 'multiply' 'threesuperior' 'copyright' 'Aacute' 'Acircumflex' 'Adieresis' 'Agrave' 'Aring' 'Atilde' 'Ccedilla' 'Eacute' 'Ecircumflex' 'Edieresis' 'Egrave' 'Iacute' 'Icircumflex' 'Idieresis' 'Igrave' 'Ntilde' 'Oacute' 'Ocircumflex' 'Odieresis' 'Ograve' 'Otilde' 'Scaron' 'Uacute' 'Ucircumflex' 'Udieresis' 'Ugrave' 'Yacute' 'Ydieresis' 'Zcaron' 'aacute' 'acircumflex' 'adieresis' 'agrave' 'aring' 'atilde' 'ccedilla' 'eacute' 'ecircumflex' 'edieresis' 'egrave' 'iacute' 'icircumflex' 'idieresis' 'igrave' 'ntilde' 'oacute' 'ocircumflex' 'odieresis' 'ograve' 'otilde' 'scaron' 'uacute' 'ucircumflex' 'udieresis' 'ugrave' 'yacute' 'ydieresis' 'zcaron' 'exclamsmall' 'Hungarumlautsmall' 'dollaroldstyle' 'dollarsuperior' 'ampersandsmall' 'Acutesmall' 'parenleftsuperior' 'parenrightsuperior' 'twodotenleader' 'onedotenleader' 'zerooldstyle' 'oneoldstyle' 'twooldstyle' 'threeoldstyle' 'fouroldstyle' 'fiveoldstyle' 'sixoldstyle' 'sevenoldstyle' 'eightoldstyle' 'nineoldstyle' 'commasuperior' 'threequartersemdash' 'periodsuperior' 'questionsmall' 'asuperior' 'bsuperior' 'centsuperior' 'dsuperior' 'esuperior' 'isuperior' 'lsuperior' 'msuperior' 'nsuperior' 'osuperior' 'rsuperior' 'ssuperior' 'tsuperior' 'ff' 'ffi' 'ffl' 'parenleftinferior' 'parenrightinferior' 'Circumflexsmall' 'hyphensuperior' 'Gravesmall' 'Asmall' 'Bsmall' 'Csmall' 'Dsmall' 'Esmall' 'Fsmall' 'Gsmall' 'Hsmall' 'Ismall' 'Jsmall' 'Ksmall' 'Lsmall' 'Msmall' 'Nsmall' 'Osmall' 'Psmall' 'Qsmall' 'Rsmall' 'Ssmall' 'Tsmall' 'Usmall' 'Vsmall' 'Wsmall' 'Xsmall' 'Ysmall' 'Zsmall' 'colonmonetary' 'onefitted' 'rupiah' 'Tildesmall' 'exclamdownsmall' 'centoldstyle' 'Lslashsmall' 'Scaronsmall' 'Zcaronsmall' 'Dieresissmall' 'Brevesmall' 'Caronsmall' 'Dotaccentsmall' 'Macronsmall' 'figuredash' 'hypheninferior' 'Ogoneksmall' 'Ringsmall' 'Cedillasmall' 'questiondownsmall' 'oneeighth' 'threeeighths' 'fiveeighths' 'seveneighths' 'onethird' 'twothirds' 'zerosuperior' 'foursuperior' 'fivesuperior' 'sixsuperior' 'sevensuperior' 'eightsuperior' 'ninesuperior' 'zeroinferior' 'oneinferior' 'twoinferior' 'threeinferior' 'fourinferior' 'fiveinferior' 'sixinferior' 'seveninferior' 'eightinferior' 'nineinferior' 'centinferior' 'dollarinferior' 'periodinferior' 'commainferior' 'Agravesmall' 'Aacutesmall' 'Acircumflexsmall' 'Atildesmall' 'Adieresissmall' 'Aringsmall' 'AEsmall' 'Ccedillasmall' 'Egravesmall' 'Eacutesmall' 'Ecircumflexsmall' 'Edieresissmall' 'Igravesmall' 'Iacutesmall' 'Icircumflexsmall' 'Idieresissmall' 'Ethsmall' 'Ntildesmall' 'Ogravesmall' 'Oacutesmall' 'Ocircumflexsmall' 'Otildesmall' 'Odieresissmall' 'OEsmall' 'Oslashsmall' 'Ugravesmall' 'Uacutesmall' 'Ucircumflexsmall' 'Udieresissmall' 'Yacutesmall' 'Thornsmall' 'Ydieresissmall' '001.000' '001.001' '001.002' '001.003' 'Black' 'Bold' 'Book' 'Light' 'Medium' 'Regular' 'Roman' 'Semibold')
%
category: 'instance creation'
classmethod: Font
name: nameString file: anOpenTypeFile topDict: topDictTopDict encoding: encodingEncoding charset: charsetCharset privateDict: privateDictPrivateDict charStrings: charStringsArray strings: stringsArray localSubr: localSubrArray globalSubr: globalSubrArray
	| inst |
	inst := self new.
	inst
		initializeName: nameString
		file: anOpenTypeFile
		topDict: topDictTopDict
		encoding: encodingEncoding
		charset: charsetCharset
		privateDict: privateDictPrivateDict
		charStrings: charStringsArray
		strings: stringsArray
		localSubr: localSubrArray
		globalSubr: globalSubrArray.
	^inst
%
category: 'accessing'
method: Font
charset
	"<Charset>"

	^charset
%
method: Font
charStrings
	"<Array>"

	^charStrings ifNil: [#()]
%
method: Font
encoding
	"<Encoding>"

	^encoding
%
method: Font
familyName
	"<String>
	Used to locate screen fonts on Windows"

	^self stringAt: self topDict familyName
%
method: Font
file
	^file
%
method: Font
fontBBox
	"<Rectangle>"

	| array llx lly urx ury |
	array := self topDict fontBBox.
	llx := array at: 1.
	lly := array at: 2.
	urx := array at: 3.
	ury := array at: 4.
	^llx @ lly corner: urx @ ury
%
method: Font
forceBold
	"<Boolean>"

	^self privateDict forceBold
%
method: Font
globalSubr
	"<Array>"

	^globalSubr ifNil: [#()]
%
method: Font
localSubr
	"<Array>"

	^localSubr ifNil: [#()]
%
method: Font
name
	"<String>
	the PostScript name of the font.
	Used in PDF in the font resource dictionary.
	This is not used to locate fonts on Windows where you have to use #familyName (see OpenType.File>>logfont:)"

	^name
%
method: Font
nameOfGlyph: aGlyphId
	"<String>"

	^self stringAt: (self charset sids at: aGlyphId + 1)
%
method: Font
privateDict
	"<PrivateDict>"

	^privateDict
%
method: Font
stringAt: integer
	integer <= 390 ifTrue: [
		^self class standardStrings at: integer + 1].
	^self strings at: integer - 390
%
method: Font
strings
	"<Array>"

	^strings ifNil: [#()]
%
method: Font
topDict
	"<TopDict>"

	^topDict
%
method: Font
unitsPerEm
	"<Integer>
	Valid range is from 16 to 16384. This value should be a power of 2 for fonts that have TrueType outlines"

	^self file unitsPerEm
%
category: 'initialize-release'
method: Font
initializeName: nameString file: anOpenTypeFile topDict: topDictTopDict encoding: encodingEncoding charset: charsetCharset privateDict: privateDictPrivateDict charStrings: charStringsArray strings: stringsArray localSubr: localSubrArray globalSubr: globalSubrArray
	file := anOpenTypeFile.
	name := nameString.
	topDict := topDictTopDict.
	encoding := encodingEncoding.
	charset := charsetCharset.
	privateDict := privateDictPrivateDict.
	(charStringsArray notNil and: [
	charStringsArray notEmpty]) ifTrue: [
			charStrings := (Array withAll: charStringsArray) beImmutable].
	(stringsArray notNil and: [
	stringsArray notEmpty]) ifTrue: [
			strings := (Array withAll: stringsArray) beImmutable].
	(localSubrArray notNil and: [
	localSubrArray notEmpty]) ifTrue: [
			localSubr := (Array withAll: localSubrArray) beImmutable].
	(globalSubrArray notNil and: [
	globalSubrArray notEmpty]) ifTrue: [
			globalSubr := (Array withAll: globalSubrArray) beImmutable]
%
category: 'printing'
method: Font
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'name' value: self name).
	args add: (printer constant: 'topDict' value: self topDict).
	args add: (printer constant: 'encoding' value: self encoding).
	args add: (printer constant: 'charset' value: self charset).
	args add: (printer constant: 'privateDict' value: self privateDict).
	args add: (printer array: 'charStrings' value: self charStrings).
	args add: (printer array: 'strings' value: self strings).
	args add: (printer array: 'localSubr' value: self localSubr).
	args add: (printer array: 'globalSubr' value: self globalSubr).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: FontSet
for: anOpenTypeFile fromBytes: aByteStream
	| header version names topDicts strings globalSubr fonts |
	header := Header fromBytes: aByteStream.
	version := header version.
	aByteStream skip: header hdrSize - 4.
	names := Index stringsFromBytes: aByteStream.
	topDicts := Index fromBytes: aByteStream collect: [:data |
		TopDict fromBytes: data readStream].
	strings := Index stringsFromBytes: aByteStream.
	globalSubr := Index fromBytes: aByteStream collect: [:data | Subroutine bytes: data].
	fonts := OrderedCollection new.
	names with: topDicts do: [:fontName :topDict |
		fonts add: (topDict
			fontNamed: fontName
			file: anOpenTypeFile
			strings: strings
			globalSubr: globalSubr
			from: aByteStream)].
	^self version: version fonts: fonts
%
classmethod: FontSet
version: versionVersion fonts: fontsArray
	| inst |
	inst := self new.
	inst initializeVersion: versionVersion fonts: fontsArray.
	^inst
%
category: 'accessing'
method: FontSet
fonts
	"<Array of: Font>"

	^fonts
%
method: FontSet
forceBold
	"<Boolean>"

	^self fonts first forceBold
%
method: FontSet
nameOfGlyph: aGlyphId
	"<String>"

	^self fonts first nameOfGlyph: aGlyphId
%
method: FontSet
version
	"<Float>"

	^version
%
category: 'initialize-release'
method: FontSet
initializeVersion: versionVersion fonts: fontsArray
	version := versionVersion.
	(fontsArray notNil and: [
	fontsArray notEmpty]) ifTrue: [
			fonts := (Array withAll: fontsArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: FontSet
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'version' value: self version).
	args add: (printer array: 'fonts' value: self fonts).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: Header
fromBytes: aByteStream
	^self
		major: aByteStream next
		minor: aByteStream next
		hdrSize: aByteStream next
		offSize: aByteStream next
%
classmethod: Header
major: majorInteger minor: minorInteger hdrSize: hdrSizeInteger offSize: offSizeInteger
	| inst |
	inst := self new.
	inst
		initializeMajor: majorInteger
		minor: minorInteger
		hdrSize: hdrSizeInteger
		offSize: offSizeInteger.
	^inst
%
category: 'specification'
classmethod: Header
localSpecification
	<constant: #major class: #(#Integer) comment: 'Card8. Format major version (starting at 1)'>
	<constant: #minor class: #(#Integer) comment: 'Card8. Format minor version (starting at 0)'>
	<constant: #hdrSize class: #(#Integer) comment: 'Card8. Header size (bytes)'>
	<constant: #offSize class: #(#Integer) comment: 'OffSize. Absolute offset (0) size'>
%
category: 'accessing'
method: Header
hdrSize
	"<Integer>
	Card8. Header size (bytes)"

	^hdrSize
%
method: Header
major
	"<Integer>
	Card8. Format major version (starting at 1)"

	^major
%
method: Header
minor
	"<Integer>
	Card8. Format minor version (starting at 0)"

	^minor
%
method: Header
offSize
	"<Integer>
	OffSize. Absolute offset (0) size"

	^offSize
%
method: Header
version
	"<Float>"

	^self major + (self minor / 10)
%
category: 'initialize-release'
method: Header
initializeMajor: majorInteger minor: minorInteger hdrSize: hdrSizeInteger offSize: offSizeInteger
	major := majorInteger.
	minor := minorInteger.
	hdrSize := hdrSizeInteger.
	offSize := offSizeInteger.
	self beImmutable
%
category: 'printing'
method: Header
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'major' value: self major).
	args add: (printer constant: 'minor' value: self minor).
	args add: (printer constant: 'hdrSize' value: self hdrSize).
	args add: (printer constant: 'offSize' value: self offSize).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: Index
count: countInteger offSize: offSizeInteger offset: offsetArray data: dataArray
	| inst |
	inst := self new.
	inst
		initializeCount: countInteger
		offSize: offSizeInteger
		offset: offsetArray
		data: dataArray.
	^inst
%
classmethod: Index
fromBytes: aByteStream
	| count offSize offsets objectData data |
	count := (ByteReadStream bigEndianOn: (aByteStream next: 2)) nextUnsignedShort.
	count isZero ifTrue: [
		^self new].
	offSize := aByteStream next.
	offsets := OrderedCollection new: count + 1.
	count + 1 timesRepeat: [
		| bytes |
		bytes := aByteStream next: offSize.
		offsets add: (ByteReadStream bigEndianOn: (ByteArray new: 4 - bytes size withAll: 0) , bytes) nextUnsignedLong].
	objectData := aByteStream next: offsets last - 1.
	data := OrderedCollection new: count.
	offsets inject: nil into: [:last :next |
		last ifNotNil: [data add: (objectData copyFrom: last to: next - 1)].
		next].
	^self count: count offSize: offSize offset: offsets data: data
%
classmethod: Index
fromBytes: aByteStream collect: block
	^(self fromBytes: aByteStream) data collect: block
%
classmethod: Index
stringsFromBytes: aByteStream
	^self fromBytes: aByteStream collect: #asString
%
category: 'instance creation optional'
classmethod: Index
count: countInteger offSize: offSizeInteger
	| inst |
	inst := self new.
	inst initializeCount: countInteger offSize: offSizeInteger offset: nil data: nil.
	^inst
%
classmethod: Index
count: countInteger offSize: offSizeInteger data: dataArray
	| inst |
	inst := self new.
	inst initializeCount: countInteger offSize: offSizeInteger offset: nil data: dataArray.
	^inst
%
classmethod: Index
count: countInteger offSize: offSizeInteger offset: offsetArray
	| inst |
	inst := self new.
	inst initializeCount: countInteger offSize: offSizeInteger offset: offsetArray data: nil.
	^inst
%
category: 'specification'
classmethod: Index
localSpecification
	<constant: #count class: #(#Integer) comment: 'Card16. Number of objects stored in INDEX'>
	<constant: #offSize class: #(#Integer) comment: 'OffSize. Offset array element size'>
	<sequence: #offset comment: 'Offset. [count+1] Offset array (from byte preceding object data)'>
	<sequence: #data comment: 'Card8. [<varies>] Object data'>
%
category: 'accessing'
method: Index
count
	"<Integer>
	Card16. Number of objects stored in INDEX"

	^count
%
method: Index
data
	"<Array>
	Card8. [<varies>] Object data"

	^data ifNil: [#()]
%
method: Index
offset
	"<Array>
	Offset. [count+1] Offset array (from byte preceding object data)"

	^offset ifNil: [#()]
%
method: Index
offSize
	"<Integer>
	OffSize. Offset array element size"

	^offSize
%
category: 'initialize-release'
method: Index
initializeCount: countInteger offSize: offSizeInteger offset: offsetArray data: dataArray
	count := countInteger.
	offSize := offSizeInteger.
	(offsetArray notNil and: [
	offsetArray notEmpty]) ifTrue: [
			offset := (Array withAll: offsetArray) beImmutable].
	(dataArray notNil and: [
	dataArray notEmpty]) ifTrue: [
			data := (Array withAll: dataArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: Index
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'count' value: self count).
	args add: (printer constant: 'offSize' value: self offSize).
	args add: (printer array: 'offset' value: self offset).
	args add: (printer array: 'data' value: self data).
	^printer printvalue: self arguments: args
%
category: 'accessing'
classmethod: Mapping
sidFrom: aByteStream
	"<Number>
	0 â 64999
	2-byte string identifier"

	^(ByteReadStream bigEndianOn: (aByteStream next: 2)) nextUnsignedShort
%
category: 'instance creation'
classmethod: Operation
operator: operatorOperator operands: operandsArray
	| inst |
	inst := self new.
	inst initializeOperator: operatorOperator operands: operandsArray.
	^inst
%
category: 'instance creation optional'
classmethod: Operation
operator: operatorOperator
	| inst |
	inst := self new.
	inst initializeOperator: operatorOperator operands: nil.
	^inst
%
category: 'specification'
classmethod: Operation
localSpecification
	<constant: #operator class: #(#Operator)>
	<sequence: #operands>
%
category: 'accessing'
method: Operation
operands
	"<Array>"

	^operands ifNil: [#()]
%
method: Operation
operator
	"<Operator>"

	^operator
%
category: 'initialize-release'
method: Operation
initializeOperator: operatorOperator operands: operandsArray
	operator := operatorOperator.
	(operandsArray notNil and: [
	operandsArray notEmpty]) ifTrue: [
			operands := (Array withAll: operandsArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: Operation
printOn: stream
	self operands do: [:arg |
		stream
			nextPutAll: arg printString;
			space].
	stream nextPutAll: self operator name
%
method: Operation
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'operator' value: self operator).
	args add: (printer array: 'operands' value: self operands).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: Operation
isExtended: integer
	^self operator isExtended: integer
%
method: Operation
isSimple: integer
	^self operator isSimple: integer
%
category: 'accessing'
classmethod: Operator
namesDictionary
	"<Dictionary key: Integer value: String>"

	^self subclassResponsibility
%
category: 'instance creation'
classmethod: Operator
value: valueSmallInteger
	| inst |
	inst := self new.
	inst initializeValue: valueSmallInteger.
	^inst
%
category: 'specification'
classmethod: Operator
localSpecification
	<constant: #value class: #(#SmallInteger)>
%
category: 'accessing'
method: Operator
name
	"<String>"

	^self class namesDictionary at: self value ifAbsent: ['unknown']
%
method: Operator
value
	"<SmallInteger>"

	^value
%
category: 'initialize-release'
method: Operator
initializeValue: valueSmallInteger
	value := valueSmallInteger.
	self beImmutable
%
category: 'printing'
method: Operator
printOn: stream
	stream
		nextPutAll: self class name;
		nextPut: $(;
		nextPutAll: self name;
		nextPut: $)
%
method: Operator
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'value' value: self value).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: Operator
isExtended: integer
	^false
%
method: Operator
isSimple: integer
	^self value = integer
%
category: 'accessing'
method: PrivateDict
blueFuzz
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 11] ifNone: [
		^1].
	^op operands first
%
method: PrivateDict
blueScale
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 9] ifNone: [
		^0.039625].
	^op operands first
%
method: PrivateDict
blueShift
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 10] ifNone: [
		^7].
	^op operands first
%
method: PrivateDict
blueValues
	"<delta>"

	| op |
	op := self operations detect: [:operation | operation isSimple: 6] ifNone: [
		^#()].
	^op operands
%
method: PrivateDict
defaultWidthX
	"<Number>
The defaultWidthX and nominalWidthX operators supply width values for glyphs.
If a glyph width equals the defaultWidthX value it can be omitted from the charstring, otherwise the glyph width is computed by adding the charstring width to nominalWidthX value.
If nominalWidthX is carefully chosen the bulk of the widths in the charstrings can be reduced from 2-byte to single-byte numbers thereby saving space."

	| op |
	op := self operations detect: [:operation | operation isSimple: 20] ifNone: [
		^0].
	^op operands first
%
method: PrivateDict
expansionFactor
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 18] ifNone: [
		^0.06].
	^op operands first
%
method: PrivateDict
familyBlues
	"<delta>"

	| op |
	op := self operations detect: [:operation | operation isSimple: 8] ifNone: [
		^#()].
	^op operands
%
method: PrivateDict
familyOtherBlues
	"<delta>"

	| op |
	op := self operations detect: [:operation | operation isSimple: 9] ifNone: [
		^#()].
	^op operands
%
method: PrivateDict
forceBold
	"<Boolean>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 14] ifNone: [
		^false].
	^op operands first = 1
%
method: PrivateDict
initialRandomSeed
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 19] ifNone: [
		^0].
	^op operands first
%
method: PrivateDict
languageGroup
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 17] ifNone: [
		^0].
	^op operands first
%
method: PrivateDict
nominalWidthX
	"<Number>
The defaultWidthX and nominalWidthX operators supply width values for glyphs.
If a glyph width equals the defaultWidthX value it can be omitted from the charstring, otherwise the glyph width is computed by adding the charstring width to nominalWidthX value.
If nominalWidthX is carefully chosen the bulk of the widths in the charstrings can be reduced from 2-byte to single-byte numbers thereby saving space."

	| op |
	op := self operations detect: [:operation | operation isSimple: 21] ifNone: [
		^0].
	^op operands first
%
method: PrivateDict
otherBlues
	"<delta>"

	| op |
	op := self operations detect: [:operation | operation isSimple: 7] ifNone: [
		^#()].
	^op operands
%
method: PrivateDict
stdHW
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isSimple: 10] ifNone: [
		^0].
	^op operands first
%
method: PrivateDict
stdVW
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isSimple: 11] ifNone: [
		^0].
	^op operands first
%
method: PrivateDict
stemSnapH
	"<delta>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 12] ifNone: [
		^#()].
	^op operands
%
method: PrivateDict
stemSnapV
	"<delta>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 13] ifNone: [
		^#()].
	^op operands
%
method: PrivateDict
subrs
	"<Number>
	Offset (self) to local subrs"

	| op |
	op := self operations detect: [:operation | operation isSimple: 19] ifNone: [
		^0].
	^op operands first
%
category: 'instance creation'
classmethod: Range
first: firstSmallInteger nLeft: nLeftSmallInteger
	| inst |
	inst := self new.
	inst initializeFirst: firstSmallInteger nLeft: nLeftSmallInteger.
	^inst
%
category: 'specification'
classmethod: Range
localSpecification
	<constant: #first class: #(#SmallInteger)>
	<constant: #nLeft class: #(#SmallInteger)>
%
category: 'accessing'
method: Range
first
	"<SmallInteger>"

	^first
%
method: Range
nLeft
	"<SmallInteger>"

	^nLeft
%
method: Range
values
	"<Array of: Number>"

	^(self first to: self first + self nLeft) asArray
%
category: 'initialize-release'
method: Range
initializeFirst: firstSmallInteger nLeft: nLeftSmallInteger
	first := firstSmallInteger.
	nLeft := nLeftSmallInteger.
	self beImmutable
%
category: 'printing'
method: Range
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'first' value: self first).
	args add: (printer constant: 'nLeft' value: self nLeft).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: StandardCharset
name: nameString glyphs: glyphsArray
	| inst |
	inst := self new.
	inst initializeName: nameString glyphs: glyphsArray.
	^inst
%
category: 'instance creation optional'
classmethod: StandardCharset
name: nameString
	| inst |
	inst := self new.
	inst initializeName: nameString glyphs: nil.
	^inst
%
category: 'instances'
classmethod: StandardCharset
expert
	"<StandardCharset>"

	^self
		name: 'Expert'
		glyphs: #(1 229 230 231 232 233 234 235 236 237 238 13 14 15 99 239 240 241 242 243 244 245 246 247 248 27 28 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 109 110 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 158 155 163 319 320 321 322 323 324 325 326 150 164 169 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378)
%
classmethod: StandardCharset
expertSubset
	"<StandardCharset>"

	^self
		name: 'Expert Subset'
		glyphs: #(1 231 232 235 236 237 238 13 14 15 99 239 240 241 242 243 244 245 246 247 248 27 28 249 250 251 253 254 255 256 257 258 259 260 261 262 263 264 265 266 109 110 267 268 269 270 272 300 301 302 305 314 315 158 155 163 320 321 322 323 324 325 326 150 164 169 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346)
%
classmethod: StandardCharset
isoAdobe
	"<StandardCharset>"

	^self
		name: 'ISOAdobe'
		glyphs: #(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228)
%
category: 'specification'
classmethod: StandardCharset
localSpecification
	<constant: #name class: #(#String)>
	<sequence: #glyphs comment: 'Glyph name array'>
%
category: 'accessing'
method: StandardCharset
glyphs
	"<Array of: SID>
	Glyph name array"

	^glyphs ifNil: [#()]
%
method: StandardCharset
name
	^name
%
method: StandardCharset
sids
	^#(0), self glyphs
%
category: 'initialize-release'
method: StandardCharset
initializeName: nameString glyphs: glyphsArray
	name := nameString.
	(glyphsArray notNil and: [
	glyphsArray notEmpty]) ifTrue: [
			glyphs := (Array withAll: glyphsArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: StandardCharset
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'name' value: self name).
	args add: (printer array: 'glyphs' value: self glyphs).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: StandardEncoding
name: nameString codes: codesArray
	| inst |
	inst := self new.
	inst initializeName: nameString codes: codesArray.
	^inst
%
category: 'instance creation optional'
classmethod: StandardEncoding
name: nameString
	| inst |
	inst := self new.
	inst initializeName: nameString codes: nil.
	^inst
%
category: 'instances'
classmethod: StandardEncoding
expert
	"<StandardEncoding>"

	^self
		name: 'Expert'
		codes: #(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 229 230 0 231 232 233 234 235 236 237 238 13 14 15 99 239 240 241 242 243 244 245 246 247 248 27 28 249 250 251 252 0 253 254 255 256 257 0 0 0 258 0 0 259 260 261 262 0 0 263 264 265 0 266 109 110 267 268 269 0 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 304 305 306 0 0 307 308 309 310 311 0 312 0 0 313 0 0 314 315 0 0 316 317 318 0 0 0 158 155 163 319 320 321 322 323 324 325 0 0 326 150 164 169 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378)
%
classmethod: StandardEncoding
standard
	"<StandardEncoding>"

	^self
		name: 'Standard'
		codes: #(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 0 111 112 113 114 0 115 116 117 118 119 120 121 122 0 123 0 124 125 126 127 128 129 130 131 0 132 133 0 134 135 136 137 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 138 0 139 0 0 0 0 140 141 142 143 0 0 0 0 0 144 0 0 0 145 0 0 146 147 148 149 0 0 0 0)
%
category: 'specification'
classmethod: StandardEncoding
localSpecification
	<constant: #name class: #(#String)>
	<sequence: #codes>
%
category: 'accessing'
method: StandardEncoding
codes
	"<Array256 of: SID>"

	^codes ifNil: [#()]
%
method: StandardEncoding
name
	"<String>"

	^name
%
category: 'initialize-release'
method: StandardEncoding
initializeName: nameString codes: codesArray
	name := nameString.
	(codesArray notNil and: [
	codesArray notEmpty]) ifTrue: [
			codes := (Array withAll: codesArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: StandardEncoding
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'name' value: self name).
	args add: (printer array: 'codes' value: self codes).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: Subroutine
bytes: bytesArray
	| inst |
	inst := self new.
	inst initializeBytes: bytesArray.
	^inst
%
category: 'specification'
classmethod: Subroutine
localSpecification
	<sequence: #bytes>
%
category: 'accessing'
method: Subroutine
bytes
	"<Array>"

	^bytes ifNil: [#()]
%
category: 'initialize-release'
method: Subroutine
initializeBytes: bytesArray
	(bytesArray notNil and: [
	bytesArray notEmpty]) ifTrue: [
			bytes := (Array withAll: bytesArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: Subroutine
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer array: 'bytes' value: self bytes).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: TopDict
fromBytes: aByteStream
	| dict |
	dict := super fromBytes: aByteStream.
	dict operations first operator = (TwoByteDictOperator value: 30) ifTrue: [
		^CIDTopDict operations: dict operations].
	^dict
%
category: 'accessing'
method: TopDict
baseFontBlend
	"<delta>
	(added as needed by Adobe-based technology)"

	| op |
	op := self operations detect: [:operation | operation isExtended: 23] ifNone: [
		^#()].
	^op operands
%
method: TopDict
baseFontName
	"<SID>
	(added as needed by Adobe-based technology)"

	| op |
	op := self operations detect: [:operation | operation isExtended: 22] ifNone: [
		^0].
	^op operands first
%
method: TopDict
biasFor: nSubrs
	"see 16 Local / Global Subrs INDEXes"

	self charstringType = 1 ifTrue: [
		^0].
	nSubrs < 1240 ifTrue: [
		^107].
	nSubrs < 33900 ifTrue: [
		^1131].
	^32768
%
method: TopDict
charset
	"<Number>
	charset offset (0)"

	| op |
	op := self operations detect: [:operation | operation isSimple: 15] ifNone: [
		^0].
	^op operands first
%
method: TopDict
charStrings
	"<Number>
	CharStrings offset (0)"

	| op |
	op := self operations detect: [:operation | operation isSimple: 17] ifNone: [
		^0].
	^op operands first
%
method: TopDict
charstringType
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 6] ifNone: [
		^2].
	^op operands first
%
method: TopDict
copyright
	"<SID>
	FontInfo"

	^(self operations detect: [:operation | operation isExtended: 0]) operands first
%
method: TopDict
encoding
	"<Number>
	Encoding offset (0)"

	| op |
	op := self operations detect: [:operation | operation isSimple: 16] ifNone: [
		^0].
	^op operands first
%
method: TopDict
familyName
	"<SID>
	FontInfo"

	^(self operations detect: [:operation | operation isSimple: 3]) operands first
%
method: TopDict
fontBBox
	"<Array4 of: Number>"

	| op |
	op := self operations detect: [:operation | operation isSimple: 5] ifNone: [
		^#(0 0 0 0)].
	^op operands
%
method: TopDict
fontClass
	^Type1Font
%
method: TopDict
fontMatrix
	"<Array6 of: Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 7] ifNone: [
		^#(0.001 0 0 0.001 0 0)].
	^op operands
%
method: TopDict
fullName
	"<SID>
	FontInfo"

	^(self operations detect: [:operation | operation isSimple: 2]) operands first
%
method: TopDict
isFixedPitch
	"<Boolean>
	FontInfo"

	| op |
	op := self operations detect: [:operation | operation isExtended: 1] ifNone: [
		^false].
	^op operands first = 1
%
method: TopDict
italicAngle
	"<Number>
	FontInfo"

	| op |
	op := self operations detect: [:operation | operation isExtended: 2] ifNone: [
		^0].
	^op operands first
%
method: TopDict
notice
	"<SID>
	FontInfo"

	^(self operations detect: [:operation | operation isSimple: 1]) operands first
%
method: TopDict
paintType
	"<Number>"

	| op |
	op := self operations detect: [:operation | operation isExtended: 5] ifNone: [
		^0].
	^op operands first
%
method: TopDict
postScript
	"<SID>
	embedded PostScript language code"

	| op |
	op := self operations detect: [:operation | operation isExtended: 21] ifNone: [
		^0].
	^op operands first
%
method: TopDict
private
	"<Array2 of: Number>
	Private DICT size and offset (0)"

	| op |
	op := self operations detect: [:operation | operation isSimple: 18] ifNone: [
		^#()].
	^op operands
%
method: TopDict
strokeWidth
	"<Number>
	FontInfo"

	| op |
	op := self operations detect: [:operation | operation isExtended: 8] ifNone: [
		^0].
	^op operands first
%
method: TopDict
syntheticBase
	"<Number>
	synthetic base font index"

	| op |
	op := self operations detect: [:operation | operation isExtended: 20] ifNone: [
		^0].
	^op operands first
%
method: TopDict
underlinePosition
	"<Number>
	FontInfo"

	| op |
	op := self operations detect: [:operation | operation isExtended: 3] ifNone: [
		^-100].
	^op operands first
%
method: TopDict
underlineThickness
	"<Number>
	FontInfo"

	| op |
	op := self operations detect: [:operation | operation isExtended: 4] ifNone: [
		^50].
	^op operands first
%
method: TopDict
uniqueID
	"<Number>"

	^(self operations detect: [:operation | operation isSimple: 13]) operands first
%
method: TopDict
version
	"<SID>
	FontInfo"

	^(self operations detect: [:operation | operation isSimple: 0]) operands first
%
method: TopDict
weight
	"<SID>
	FontInfo"

	^(self operations detect: [:operation | operation isSimple: 4]) operands first
%
method: TopDict
xUID
	"<Array>"

	| op |
	op := self operations detect: [:operation | operation isSimple: 14] ifNone: [
		^#()].
	^op operands
%
category: 'font creation'
method: TopDict
charsetForGlyphs: numberOfGlyphs from: aByteStream
	| offset charsetFormat |
	offset := self charset.
	offset = 0 ifTrue: [
		^StandardCharset isoAdobe].
	offset = 1 ifTrue: [
		^StandardCharset expert].
	offset = 2 ifTrue: [
		^StandardCharset expertSubset].
	aByteStream position: offset.
	charsetFormat := aByteStream next.
	charsetFormat = 0 ifTrue: [
		^Charset0 numberOfGlyphs: numberOfGlyphs fromBytes: aByteStream].
	charsetFormat = 1 ifTrue: [
		^Charset1 numberOfGlyphs: numberOfGlyphs fromBytes: aByteStream].
	^Charset2 numberOfGlyphs: numberOfGlyphs fromBytes: aByteStream
%
method: TopDict
charStringsFrom: aByteStream
	aByteStream position: self charStrings.
	^Index fromBytes: aByteStream collect: [:data | Charstring bytes: data]
%
method: TopDict
encodingFrom: aByteStream
	| offset |
	offset := self encoding.
	offset = 0 ifTrue: [
		^StandardEncoding standard].
	offset = 1 ifTrue: [
		^StandardEncoding expert].
	aByteStream position: offset.
	^Encoding fromBytes: aByteStream
%
method: TopDict
fontNamed: fontName file: anOpenTypeFile strings: strings globalSubr: globalSubr from: aByteStream
	| encoding charStrings charset privateDict localSubr |
	encoding := self encodingFrom: aByteStream.
	charStrings := self charStringsFrom: aByteStream.
	charset := self charsetForGlyphs: charStrings size from: aByteStream.
	privateDict := self privateDictFrom: aByteStream.
	localSubr := self localSubrFor: privateDict from: aByteStream.
	^self fontClass
		name: fontName
		file: anOpenTypeFile
		topDict: self
		encoding: encoding
		charset: charset
		privateDict: privateDict
		charStrings: charStrings
		strings: strings
		localSubr: localSubr
		globalSubr: globalSubr
%
method: TopDict
localSubrFor: privateDict from: aByteStream
	"<Array>"

	| localOffset privateOffsetPair privateOffset |
	localOffset := privateDict subrs.
	localOffset isZero ifTrue: [
		^#()].
	privateOffsetPair := self private.
	privateOffsetPair isEmpty ifTrue: [
		^#()].
	privateOffset := privateOffsetPair last.
	aByteStream position: privateOffset + localOffset.
	^Index fromBytes: aByteStream collect: [:data | Subroutine bytes: data]
%
method: TopDict
privateDictFrom: aByteStream
	| sizeAndOffset |
	sizeAndOffset := self private.
	sizeAndOffset isEmpty ifTrue: [
		^PrivateDict new].
	aByteStream position: sizeAndOffset last.
	^PrivateDict fromBytes: (aByteStream next: sizeAndOffset first) readStream
%
category: 'accessing'
classmethod: TwoByteCharstringOperator
namesDictionary
	| dict |
	dict := Dictionary new.
	dict at: 0 put: 'dotsection'.
	"1 2 reserved"
	dict at: 3 put: 'and'.
	dict at: 4 put: 'or'.
	dict at: 5 put: 'not'.
	"6 7 8 reserved"
	dict at: 9 put: 'abs'.
	dict at: 10 put: 'add'.
	dict at: 11 put: 'sub'.
	dict at: 12 put: 'div'.
	"13 reserved"
	dict at: 14 put: 'neg'.
	dict at: 15 put: 'eq'.
	"16 17 reserved"
	dict at: 18 put: 'drop'.
	"19 reserved"
	dict at: 20 put: 'put'.
	dict at: 21 put: 'get'.
	dict at: 22 put: 'ifelse'.
	dict at: 23 put: 'random'.
	dict at: 24 put: 'mul'.
	"25 reserved"
	dict at: 26 put: 'sqrt'.
	dict at: 27 put: 'dup'.
	dict at: 28 put: 'exch'.
	dict at: 29 put: 'index'.
	dict at: 30 put: 'roll'.
	"31 32 33 reserved"
	dict at: 34 put: 'hflex'.
	dict at: 35 put: 'flex'.
	dict at: 36 put: 'hflex1'.
	dict at: 37 put: 'flex1'.
	"38 - 255 reserved"
	^dict
%
category: 'accessing'
classmethod: TwoByteDictOperator
namesDictionary
	| dict |
	dict := Dictionary new.
	dict at: 0 put: 'Copyright'.
	dict at: 1 put: 'isFixedPitch'.
	dict at: 2 put: 'ItalicAngle'.
	dict at: 3 put: 'UnderlinePosition'.
	dict at: 4 put: 'UnderlineThickness'.
	dict at: 5 put: 'PaintType'.
	dict at: 6 put: 'CharstringType'.
	dict at: 7 put: 'FontMatrix'.
	dict at: 8 put: 'StrokeWidth'.
	dict at: 9 put: 'BlueScale'.
	dict at: 10 put: 'BlueShift'.
	dict at: 11 put: 'BlueFuzz'.
	dict at: 12 put: 'StemSnapH'.
	dict at: 13 put: 'StemSnapV'.
	dict at: 14 put: 'ForceBold'.
	"15 16 reserved"
	dict at: 17 put: 'LanguageGroup'.
	dict at: 18 put: 'ExpansionFactor'.
	dict at: 19 put: 'initialRandomSeed'.
	dict at: 20 put: 'SyntheticBase'.
	dict at: 21 put: 'PostScript'.
	dict at: 22 put: 'BaseFontName'.
	dict at: 23 put: 'BaseFontBlend'.
	"24 - 29 reserved"
	"required CIDFont top DICT entries"
	dict at: 30 put: 'ROS'.
	dict at: 31 put: 'CIDFontVersion'.
	dict at: 32 put: 'CIDFontRevision'.
	dict at: 33 put: 'CIDFontType'.
	dict at: 34 put: 'CIDCount'.
	dict at: 35 put: 'UIDBase'.
	dict at: 36 put: 'FDArray'.
	dict at: 37 put: 'FDSelect'.
	dict at: 38 put: 'FontName'.
	"39 - 255 reserved"
	^dict
%
category: 'accessing'
method: TwoByteDictOperator
name
	| dict |
	dict := Dictionary new.
	dict at: 0 put: 'Copyright'.
	dict at: 1 put: 'isFixedPitch'.
	dict at: 2 put: 'ItalicAngle'.
	dict at: 3 put: 'UnderlinePosition'.
	dict at: 4 put: 'UnderlineThickness'.
	dict at: 5 put: 'PaintType'.
	dict at: 6 put: 'CharstringType'.
	dict at: 7 put: 'FontMatrix'.
	dict at: 8 put: 'StrokeWidth'.
	dict at: 9 put: 'BlueScale'.
	dict at: 10 put: 'BlueShift'.
	dict at: 11 put: 'BlueFuzz'.
	dict at: 12 put: 'StemSnapH'.
	dict at: 13 put: 'StemSnapV'.
	dict at: 14 put: 'ForceBold'.
	"15 16 reserved"
	dict at: 17 put: 'LanguageGroup'.
	dict at: 18 put: 'ExpansionFactor'.
	dict at: 19 put: 'initialRandomSeed'.
	dict at: 20 put: 'SyntheticBase'.
	dict at: 21 put: 'PostScript'.
	dict at: 22 put: 'BaseFontName'.
	dict at: 23 put: 'BaseFontBlend'.
	"24 - 29 reserved"
	"required CIDFont top DICT entries"
	dict at: 30 put: 'ROS'.
	dict at: 31 put: 'CIDFontVersion'.
	dict at: 32 put: 'CIDFontRevision'.
	dict at: 33 put: 'CIDFontType'.
	dict at: 34 put: 'CIDCount'.
	dict at: 35 put: 'UIDBase'.
	dict at: 36 put: 'FDArray'.
	dict at: 37 put: 'FDSelect'.
	dict at: 38 put: 'FontName'.
	"39 - 255 reserved"
	^dict at: self value ifAbsent: ['unknown']
%
category: 'testing'
method: TwoByteOperator
isExtended: integer
	^self value = integer
%
method: TwoByteOperator
isSimple: integer
	^false
%
category: 'accessing'
method: Type1Font
ascender
	^self file ascender
%
method: Type1Font
capHeight
	^self file capHeight
%
method: Type1Font
descender
	^self file descender
%
method: Type1Font
xHeight
	^self file xHeight
%
category: 'testing'
method: Type1Font
canDisplayUnencodedGlyphs
	^self file canDisplayUnencodedGlyphs
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Fonts OpenType'.
	dict at: #comment put: 'Implementation of the OpenType specification

(see http://www.microsoft.com/typography/otspec/default.htm for specifications)'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Fonts OpenType'.
	dict at: #storeVersion put: '2.5.2.0'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components := (components at:  #'PDFtalk Fonts') at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: (PDFtalk at: #Fonts) at: 1.
%
# Define namespace OpenType
DoIt
	| newDictionary |
	newDictionary := SymbolDictionary new.
	newDictionary at: #OpenType put: newDictionary.
	Fonts at: #OpenType put: newDictionary
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: ((PDFtalk at: #Fonts) at: #OpenType) at: 1.
%
# Define class ScriptRecord
DoIt
Value
	subclass: 'ScriptRecord'
	instVarNames: #(tag offset)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	ScriptRecord category: 'PDFtalk Fonts OpenType'.
	ScriptRecord comment: 'The ScriptRecord array stores the records alphabetically by a ScriptTag that identifies the script. Each ScriptRecord consists of a ScriptTag and an offset to a Script table.'.
	ScriptRecord namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Table
DoIt
Object
	subclass: 'Table'
	instVarNames: #(tag contents file)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Table category: 'PDFtalk Fonts OpenType'.
	Table comment: 'holds the contents of just one tabel of an OpenType font
'.
	Table namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Gasp
DoIt
Table
	subclass: 'Gasp'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Gasp category: 'PDFtalk Fonts OpenType'.
	Gasp comment: 'This table contains information which describes the preferred rasterization techniques for the typeface when it is rendered on grayscale-capable devices. This table also has some use for monochrome devices, which may use the table to turn off hinting at very large or small sizes, to improve performance.

At very small sizes, the best appearance on grayscale devices can usually be achieved by rendering the glyphs in grayscale without using hints. At intermediate sizes, hinting and monochrome rendering will usually produce the best appearance. At large sizes, the combination of hinting and grayscale rendering will typically produce the best appearance.

If the ''gasp'' table is not present in a typeface, the rasterizer may apply default rules to decide how to render the glyphs on grayscale devices.'.
	Gasp namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class CmapSubtable
DoIt
Value
	subclass: 'CmapSubtable'
	instVarNames: #(platform encoding contents)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	CmapSubtable category: 'PDFtalk Fonts OpenType'.
	CmapSubtable comment: 'A cmap subtable supports one character encoding scheme. Character codes that do not correspond to any glyph in the font should be mapped to glyph index 0. The glyph at this location must be a special glyph representing a missing character, commonly known as .notdef.

The table header indicates the character encodings for which subtables are present. Each subtable is in one of seven possible formats and begins with a format code indicating the format used.

The platform ID and platform-specific encoding ID in the header entry (and, in the case of the Macintosh platform, the language field in the subtable itself) are used to specify a particular ''cmap'' encoding. The header entries must be sorted first by platform ID, then by platform-specific encoding ID, and then by the language field in the corresponding subtable. Each platform ID, platform-specific encoding ID, and subtable language combination may appear only once in the ''cmap'' table.

(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)'.
	CmapSubtable namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class CmapSubtable14
DoIt
CmapSubtable
	subclass: 'CmapSubtable14'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	CmapSubtable14 category: 'PDFtalk Fonts OpenType'.
	CmapSubtable14 comment: 'Format 14: Unicode Variation Sequences

Subtable format 14 specifies the Unicode Variation Sequences (UVSes) supported by the font. A Variation Sequence, according to the Unicode Standard, comprises a base character followed by a variation selector; e.g. <U+82A6, U+E0101>.

The subtable partitions the UVSes supported by the font into two categories: âdefaultâ and ânon-defaultâ UVSes. Given a UVS, if the glyph obtained by looking up the base character of that sequence in the Unicode cmap subtable (i.e. the UCS-4 or the BMP cmap subtable) is the glyph to use for that sequence, then the sequence is a âdefaultâ UVS; otherwise it is a ânon-defaultâ UVS, and the glyph to use for that sequence is specified in the format 14 subtable itself.

The example at the bottom of the page shows how a font vendor can use format 14 for a JIS-2004âaware font.

(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)'.
	CmapSubtable14 namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Prep
DoIt
Table
	subclass: 'Prep'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Prep category: 'PDFtalk Fonts OpenType'.
	Prep comment: 'The Control Value Program consists of a set of TrueType instructions that will be executed whenever the font or point size or transformation matrix change and before each glyph is interpreted. Any instruction is legal in the CV Program but since no glyph is associated with it, instructions intended to move points within a particular glyph outline cannot be used in the CV Program. The name ''prep'' is anachronistic (the table used to be known as the Pre Program table.)'.
	Prep namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Math
DoIt
Table
	subclass: 'Math'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Math category: 'PDFtalk Fonts OpenType'.
	Math comment: 'MATH - The mathematical typesetting table

Mathematical formulas are complex text objects in which multiple elements with various metric, style or positioning attributes are combined. In order for a math handling engine to support layout of mathematical formulas, several types of font-specific information particular to the layout of formulas are required. The MATH table format defines data structures for font-specific information necessary for math formula layout.

General structure of math formulas is hierarchical, with formulas composed of smaller sub-formula components, where each sub-formula may be composed of even simpler sub-formulas, and so on down to individual characters, e.g. letters or numbers. '.
	Math namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Ebdt
DoIt
Table
	subclass: 'Ebdt'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Ebdt category: 'PDFtalk Fonts OpenType'.
	Ebdt comment: 'Three tables are used to embed bitmaps in OpenTypeâ¢ fonts. They are the ''EBLC'' table for embedded bitmap locators, the ''EBDT'' table for embedded bitmap data, and the ''EBSC'' table for embedded bitmap scaling information.

OpenType embedded bitmaps are also called ''sbits'' (for âscaler bitmapsâ). A set of bitmaps for a face at a given size is called a strike.

The ''EBLC'' table identifies the sizes and glyph ranges of the sbits, and keeps offsets to glyph bitmap data in indexSubTables. The ''EBDT'' table then stores the glyph bitmap data, in a number of different possible formats. Glyph metrics information may be stored in either the ''EBLC'' or ''EBDT'' table, depending upon the indexSubTable and glyph bitmap data formats. The ''EBSC'' table identifies sizes that will be handled by scaling up or scaling down other sbit sizes.

The ''EBDT'' table is a super set of Apple''s Apple Advanced Typography (AAT) ''bdat'' table.'.
	Ebdt namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Ltsh
DoIt
Table
	subclass: 'Ltsh'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Ltsh category: 'PDFtalk Fonts OpenType'.
	Ltsh comment: 'The LTSH table relates to OpenTypeâ¢ fonts containing TrueType outlines. There are noticeable improvements to fonts on the screen when instructions are carefully applied to the sidebearings. The gain in readability is offset by the necessity for the OS to grid fit the glyphs in order to find the actual advance width for the glyphs (since instructions may be moving the sidebearing points). The TrueType outline format already has two mechanisms to side step the speed issues: the ''hdmx'' table, where precomputed advance widths may be saved for selected ppem sizes, and the ''vdmx'' table, where precomputed vertical advance widths may be saved for selected ppem sizes. The ''LTSH'' table (Linear ThreSHold) is a second, complementary method.

The LTSH table defines the point at which it is reasonable to assume linearly scaled advance widths on a glyph-by-glyph basis. This table should not be included unless bit 4 of the âflagsâ field in the ''head'' table is set. The criteria for linear scaling is:

a. (ppem size is Â³50) AND (difference between the rounded linear width and the rounded instructed width Â£ 2% of the rounded linear width)

or b. Linear width == Instructed width

The LTSH table records the ppem for each glyph at which the scaling becomes linear again, despite instructions effecting the advance width. It is a requirement that, at and above the recorded threshold size, the glyph remain linear in its scaling (i.e., not legal to set threshold at 55 ppem if glyph becomes nonlinear again at 90 ppem).'.
	Ltsh namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Cvt
DoIt
Table
	subclass: 'Cvt'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Cvt category: 'PDFtalk Fonts OpenType'.
	Cvt comment: 'This table contains a list of values that can be referenced by instructions. They can be used, among other things, to control characteristics for different glyphs. The length of the table must be an integral number of FWORD units.'.
	Cvt namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Cbdt
DoIt
Table
	subclass: 'Cbdt'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Cbdt category: 'PDFtalk Fonts OpenType'.
	Cbdt comment: 'CBDT - Color Bitmap Data Table

Two tables are used to embed color bitmaps in OFF fonts. They are the ''CBLC'' table for embedded bitmap locators and the ''CBDT'' table for embedded color bitmap data. The formats of these two tables are backward compatible with EBLC and EBDT used for embedded monochrome and grayscale bitmaps
'.
	Cbdt namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Fpgm
DoIt
Table
	subclass: 'Fpgm'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Fpgm category: 'PDFtalk Fonts OpenType'.
	Fpgm comment: 'This table is similar to the CVT Program, except that it is only run once, when the font is first used. It is used only for FDEFs and IDEFs. Thus the CVT Program need not contain function definitions. However, the CVT Program may redefine existing FDEFs or IDEFs.

This table is optional.'.
	Fpgm namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Vorg
DoIt
Table
	subclass: 'Vorg'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Vorg category: 'PDFtalk Fonts OpenType'.
	Vorg comment: 'This table specifies the y coordinate of the vertical origin of every glyph in the font.

This table may be optionally present only in CFF OpenType fonts. If present in TrueType OpenType fonts it must be ignored by font clients, just as any other unrecognized table would be. This is because this table is not needed for TrueType OpenType fonts: the Vertical Metrics (''vmtx'') and Glyph Data (''glyf'') tables in TrueType OpenType fonts provide all the information necessary to accurately calculate the y coordinate of a glyph''s vertical origin. See the âVertical Origin and Advance Heightâ section in the ''vmtx'' table specification for more details.

This table was added to version 1.3 of the OpenType specification. Note that the ''vmtx'' and Vertical Header (''vhea'') tables continue to be required for all OpenType fonts that support vertical writing. Advance heights must continue to be obtained from the ''vmtx'' table; that is the only place they are stored.

If a ''VORG'' table is present in a CFF OpenType font, a font client may choose to obtain the y coordinate of a glyph''s vertical origin either:

   1. directly from the ''VORG'', or:
   2. by first calculating the top of the glyph''s bounding box from the CFF charstring data and then adding to it the glyph''s top side bearing from the ''vmtx'' table.

The former method offers the advantage of increased accuracy and efficiency, since bounding box results calculated from the CFF charstring as in the latter method can differ depending on the rounding decisions and data types of the bounding box algorithm. The latter method provides compatibility for font clients who are either unaware of or choose not to support the ''VORG''.

Thus, the ''VORG'' doesn''t add any new font metric values per se; it simply improves accuracy and efficiency for CFF OpenType font clients, since the intermediate step of calculating bounding boxes from the CFF charstring is rendered unnecessary.

See the section âOpenType CJK Font Guidelinesâ for more information about constructing CJK (Chinese, Japanese, and Korean) fonts.'.
	Vorg namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Cpal
DoIt
Table
	subclass: 'Cpal'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Cpal category: 'PDFtalk Fonts OpenType'.
	Cpal comment: 'CPAL - Color Palette Table

The palette table is a set of one or more palettes, each containing a predefined number of RGBA values arranged consecutively by palette index value. It may also contain name table IDs describing the palettes and their entries.

The first palette, number 0, is the default palette. The palettes are referenced by colorRecordIndices, this is the index into the array of color records where the palette starts. Multiple colorRecordIndices may refer to the same palette, therefore the number of actual palettes in the table may be less than the numPalettes entry. A minimum of one palette, the default, must be provided in the table if the table is present. Each palette must have the same number of entries as defined by numPaletteEntries, which must be at least one entry. Any empty CPAL table, with no palettes and no color records is not permissible. It is permissible for palettes to overlap and share data; therefore, the total number of color records in the CPAL table may be less than the number of palette entries multiplied by the number of palettes.

For each of the palettes, the first color record is index zero. There can be no more than numPaletteEntries of RGBA values.'.
	Cpal namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class CmapLanguageSubtable
DoIt
CmapSubtable
	subclass: 'CmapLanguageSubtable'
	instVarNames: #(language)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	CmapLanguageSubtable category: 'PDFtalk Fonts OpenType'.
	CmapLanguageSubtable comment: 'A cmap Subtable with a language id'.
	CmapLanguageSubtable namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class CmapLanguageSubtable32
DoIt
CmapLanguageSubtable
	subclass: 'CmapLanguageSubtable32'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	CmapLanguageSubtable32 category: 'PDFtalk Fonts OpenType'.
	CmapLanguageSubtable32 comment: 'A cmap Subtable with a 32 bit header'.
	CmapLanguageSubtable32 namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class CmapSubtable10
DoIt
CmapLanguageSubtable32
	subclass: 'CmapSubtable10'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	CmapSubtable10 category: 'PDFtalk Fonts OpenType'.
	CmapSubtable10 comment: 'Format 10: Trimmed array

Format 10 is a bit like format 6, in that it defines a trimmed array for a tight range of 32-bit character codes:
Type	Name	Description
USHORT	format	Subtable format; set to 10.
USHORT	reserved	Reserved; set to 0
ULONG	length	Byte length of this subtable (including the header)
ULONG	language	Please see âNote on the language field in ''cmap'' subtablesâ in this document.
ULONG	startCharCode	First character code covered
ULONG	numChars	Number of character codes covered
USHORT	glyphs[]	Array of glyph indices for the character codes covered

This format is not supported by Microsoft.

(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)'.
	CmapSubtable10 namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Hhea
DoIt
Table
	subclass: 'Hhea'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Hhea category: 'PDFtalk Fonts OpenType'.
	Hhea comment: 'This table contains information for horizontal layout. The values in the minRightSidebearing, minLeftSideBearing and xMaxExtent should be computed using only glyphs that have contours. Glyphs with no contours should be ignored for the purposes of these calculations. All reserved areas must be set to 0.
'.
	Hhea namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Cmap
DoIt
Table
	subclass: 'Cmap'
	instVarNames: #(encodingTables)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Cmap category: 'PDFtalk Fonts OpenType'.
	Cmap comment: 'This table defines the mapping of character codes to the glyph index values used in the font. It may contain more than one subtable, in order to support more than one character encoding scheme. Character codes that do not correspond to any glyph in the font should be mapped to glyph index 0. The glyph at this location must be a special glyph representing a missing character, commonly known as .notdef.

The table header indicates the character encodings for which subtables are present. Each subtable is in one of seven possible formats and begins with a format code indicating the format used.

The platform ID and platform-specific encoding ID in the header entry (and, in the case of the Macintosh platform, the language field in the subtable itself) are used to specify a particular ''cmap'' encoding. The header entries must be sorted first by platform ID, then by platform-specific encoding ID, and then by the language field in the corresponding subtable. Each platform ID, platform-specific encoding ID, and subtable language combination may appear only once in the ''cmap'' table.
'.
	Cmap namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class FontHeader
DoIt
Value
	subclass: 'FontHeader'
	instVarNames: #(version fontRevision checkSumAdjustment flags unitsPerEm created modified glyphBBox macStyle lowestRecPPEM fontDirectionHint indexToLocFormat glyphDataFormat)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	FontHeader category: 'PDFtalk Fonts OpenType'.
	FontHeader comment: 'head - Font Header

This table gives global information about the font. The bounding box values should be computed using only glyphs that have contours. Glyphs with no contours should be ignored for the purposes of these calculations.'.
	FontHeader namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Eblc
DoIt
Table
	subclass: 'Eblc'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Eblc category: 'PDFtalk Fonts OpenType'.
	Eblc comment: 'Three tables are used to embed bitmaps in OpenTypeâ¢ fonts. They are the ''EBLC'' table for embedded bitmap locators, the ''EBDT'' table for embedded bitmap data, and the ''EBSC'' table for embedded bitmap scaling information. OpenType embedded bitmaps are called ''sbits'' (for âscaler bitmapsâ). A set of bitmaps for a face at a given size is called a strike.

The ''EBLC'' table identifies the sizes and glyph ranges of the sbits, and keeps offsets to glyph bitmap data in indexSubTables. The ''EBDT'' table then stores the glyph bitmap data, also in a number of different possible formats. Glyph metrics information may be stored in either the ''EBLC'' or ''EBDT'' table, depending upon the indexSubTable and glyph bitmap formats. The ''EBSC'' table identifies sizes that will be handled by scaling up or scaling down other sbit sizes.

The ''EBLC'' table uses the same format as the Apple Apple Advanced Typography (AAT) ''bloc'' table.'.
	Eblc namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Hdmx
DoIt
Table
	subclass: 'Hdmx'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Hdmx category: 'PDFtalk Fonts OpenType'.
	Hdmx comment: 'The hdmx table relates to OpenTypeâ¢ fonts with TrueType outlines. The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes. This allows the font manager to build integer width tables without calling the scaler for each glyph. Typically this table contains only selected screen sizes. This table is sorted by pixel size. The checksum for this table applies to both subtables listed.

Note that for non-square pixel grids, the character width (in pixels) will be used to determine which device record to use. For example, a 12 point character on a device with a resolution of 72x96 would be 12 pixels high and 16 pixels wide. The hdmx device record for 16 pixel characters would be used.

If bit 4 of the flag field in the ''head'' table is not set, then it is assumed that the font scales linearly; in this case an ''hdmx'' table is not necessary and should not be built. If bit 4 of the flag field is set, then one or more glyphs in the font are assumed to scale nonlinearly. In this case, performance can be improved by including the ''hdmx'' table with one or more important DeviceRecord''s for important sizes. Please see the chapter âRecommendations for OpenType Fontsâ for more detail.'.
	Hdmx namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Ebsc
DoIt
Table
	subclass: 'Ebsc'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Ebsc category: 'PDFtalk Fonts OpenType'.
	Ebsc comment: 'The ''EBSC'' table provides a mechanism for describing embedded bitmaps which are created by scaling other embedded bitmaps. While this is the sort of thing that outline font technologies were invented to avoid, there are cases (small sizes of Kanji, for example) where scaling a bitmap produces a more legible font than scan-converting an outline. For this reason the ''EBSC'' table allows a font to define a bitmap strike as a scaled version of another strike.'.
	Ebsc namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class CmapSubtable8
DoIt
CmapLanguageSubtable32
	subclass: 'CmapSubtable8'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	CmapSubtable8 category: 'PDFtalk Fonts OpenType'.
	CmapSubtable8 comment: 'Format 8: mixed 16-bit and 32-bit coverage

Format 8 is a bit like format 2, in that it provides for mixed-length character codes. If a font contains characters from the Unicode Surrogates Area (U+D800-U+DFFF), which are UCS-4 characters; it''s likely that it will also include other, regular 16-bit Unicodes as well. We therefore need a format to map a mixture of 16-bit and 32-bit character codes, just as format 2 allows a mixture of 8-bit and 16-bit codes. A simplifying assumption is made: namely, that there are no 32-bit character codes which share the same first 16 bits as any 16-bit character code. This means that the determination as to whether a particular 16-bit value is a standalone character code or the start of a 32-bit character code can be made by looking at the 16-bit value directly, with no further information required.

(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)'.
	CmapSubtable8 namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Jstf
DoIt
Table
	subclass: 'Jstf'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Jstf category: 'PDFtalk Fonts OpenType'.
	Jstf comment: 'The Justification table (JSTF) provides font developers with additional control over glyph substitution and positioning in justified text. Text-processing clients now have more options to expand or shrink word and glyph spacing so text fills the specified line length.'.
	Jstf namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Base
DoIt
Table
	subclass: 'Base'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Base category: 'PDFtalk Fonts OpenType'.
	Base comment: 'The Baseline table (BASE) provides information used to align glyphs of different scripts and sizes in a line of text, whether the glyphs are in the same font or in different fonts. To improve text layout, the Baseline table also provides minimum (min) and maximum (max) glyph extent values for each script, language system, or feature in a font.'.
	Base namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Name
DoIt
Table
	subclass: 'Name'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Name category: 'PDFtalk Fonts OpenType'.
	Name comment: 'The naming table allows multilingual strings to be associated with the OpenTypeTM font file. These strings can represent copyright notices, font names, family names, style names, and so on. To keep this table short, the font manufacturer may wish to make a limited set of entries in some small set of languages; later, the font can be "localized" and the strings translated or added. Other parts of the OpenType font file that require these strings can then refer to them simply by their index number. Clients that need a particular string can look it up by its platform ID, character encoding ID, language ID and name ID. Note that some platforms may require single byte character strings, while others may require double byte strings.
'.
	Name namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class NameRecord
DoIt
Value
	subclass: 'NameRecord'
	instVarNames: #(platformID encodingID languageID nameID bytes)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	NameRecord category: 'PDFtalk Fonts OpenType'.
	NameRecord comment: 'substructure of the NameTable'.
	NameRecord namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Gsub
DoIt
Table
	subclass: 'Gsub'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Gsub category: 'PDFtalk Fonts OpenType'.
	Gsub comment: 'The Glyph Substitution table (GSUB) contains information for substituting glyphs to render the scripts and language systems supported in a font. Many language systems require glyph substitutes. For example, in the Arabic script, the glyph shape that depicts a particular character varies according to its position in a word or text string. In other language systems, glyph substitutes are aesthetic options for the user, such as the use of ligature glyphs in the English language.'.
	Gsub namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Maxp
DoIt
Table
	subclass: 'Maxp'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Maxp category: 'PDFtalk Fonts OpenType'.
	Maxp comment: 'This table establishes the memory requirements for this font. Fonts with CFF data must use Version 0.5 of this table, specifying only the numGlyphs field. Fonts with TrueType outlines must use Version 1.0 of this table, where all data is required.'.
	Maxp namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class CmapSubtable6
DoIt
CmapLanguageSubtable
	subclass: 'CmapSubtable6'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	CmapSubtable6 category: 'PDFtalk Fonts OpenType'.
	CmapSubtable6 comment: 'Format 6: Trimmed table mapping

Type	Name	Description
USHORT	format	Format number is set to 6.
USHORT	length	This is the length in bytes of the subtable.
USHORT	language	Please see âNote on the language field in ''cmap'' subtablesâ in this document.
USHORT	firstCode	First character code of subrange.
USHORT	entryCount	Number of character codes in subrange.
USHORT	glyphIdArray [entryCount]	Array of glyph index values for character codes in the range.

The firstCode and entryCount values specify a subrange (beginning at firstCode,length = entryCount) within the range of possible character codes. Codes outside of this subrange are mapped to glyph index 0. The offset of the code (from the first code) within this subrange is used as index to the glyphIdArray, which provides the glyph index value.

(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)'.
	CmapSubtable6 namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Vmtx
DoIt
Table
	subclass: 'Vmtx'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Vmtx category: 'PDFtalk Fonts OpenType'.
	Vmtx comment: 'The vertical metrics table allows you to specify the vertical spacing for each glyph in a vertical font. This table consists of either one or two arrays that contain metric information (the advance heights and top sidebearings) for the vertical layout of each of the glyphs in the font.'.
	Vmtx namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class CmapSubtable13
DoIt
CmapLanguageSubtable32
	subclass: 'CmapSubtable13'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	CmapSubtable13 category: 'PDFtalk Fonts OpenType'.
	CmapSubtable13 comment: 'Format 13: Last Resort Font

This subtable deals with situations where the same glyph is used for dozens or even tens of thousands of consecutive characters, from one end of Unicode to the other. This is common when creating a âLast Resortâ font. Here''s the subtable format:

Type		Name		Description
USHORT	format		Subtable format; set to 13.
USHORT	reserved	Reserved; set to 0
ULONG		length		Byte length of this subtable (including the header)
ULONG		language	Please see âNote on the language field in ''cmap'' subtablesâ in this document.
ULONG		nGroups	Number of groupings which follow

Here follow the individual groups, each of which has the following format:
Type		Name			Description
ULONG		startCharCode	First character code in this group
ULONG		endCharCode	Last character code in this group
ULONG		glyphID			Glyph index to be used for all the characters in the group''s range.

(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)'.
	CmapSubtable13 namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Vhea
DoIt
Table
	subclass: 'Vhea'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Vhea category: 'PDFtalk Fonts OpenType'.
	Vhea comment: 'The vertical header table (tag name: ''vhea'') contains information needed for vertical fonts. The glyphs of vertical fonts are written either top to bottom or bottom to top. This table contains information that is general to the font as a whole. Information that pertains to specific glyphs is given in the vertical metrics table (tag name: ''vmtx'') described separately. The formats of these tables are similar to those for horizontal metrics (hhea and hmtx).

Data in the vertical header table must be consistent with data that appears in the vertical metrics table. The advance height and top sidebearing values in the vertical metrics table must correspond with the maximum advance height and minimum bottom sidebearing values in the vertical header table.

See the section âOpenType CJK Font Guidelinesâ for more information about constructing CJK (Chinese, Japanese, and Korean) fonts.

The difference between version 1.0 and version 1.1 is the name and definition of:

    * ascender becomes vertTypoAscender
    * descender becomes vertTypoDescender
    * lineGap becomes vertTypoLineGap'.
	Vhea namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Segment
DoIt
Value
	subclass: 'Segment'
	instVarNames: #(startCode endCode delta)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Segment category: 'PDFtalk Fonts OpenType'.
	Segment comment: 'Each segment is described by a startCode and endCode, along with an idDelta and an idRangeOffset, which are used for mapping the character codes in the segment. The segments are sorted in order of increasing endCode values, and the segment values are specified in four parallel arrays. You search for the first endCode that is greater than or equal to the character code you want to map. If the corresponding startCode is less than or equal to the character code, then you use the corresponding idDelta and idRangeOffset to map the character code to a glyph index (otherwise, the missingGlyph is returned). For the search to terminate, the final endCode value must be 0xFFFF. This segment need not contain any valid mappings. (It can just map the single character code 0xFFFF to missingGlyph). However, the segment must be present.

If the idRangeOffset value for the segment is not 0, the mapping of character codes relies on glyphIdArray. The character code offset from startCode is added to the idRangeOffset value. This sum is used as an offset from the current location within idRangeOffset itself to index out the correct glyphIdArray value. This obscure indexing trick works because glyphIdArray immediately follows idRangeOffset in the font file. The C expression that yields the glyph index is:

	* (idRangeOffset[i] / 2 
	+ (c - startCount[i]) 
	+ &idRangeOffset[i])

The value c is the character code in question, and i is the segment index in which c appears. If the value obtained from the indexing operation is not 0 (which indicates missingGlyph), idDelta[i] is added to it to get the glyph index. The idDelta arithmetic is modulo 65536.

If the idRangeOffset is 0, the idDelta value is added directly to the character code offset (i.e. idDelta[i] + c) to get the corresponding glyph index. Again, the idDelta arithmetic is modulo 65536.

(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)'.
	Segment namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class IndexedSegment
DoIt
Segment
	subclass: 'IndexedSegment'
	instVarNames: #(glyphIdArrayIndex)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	IndexedSegment category: 'PDFtalk Fonts OpenType'.
	IndexedSegment comment: 'A segment with a idRangeOffset'.
	IndexedSegment namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Gdef
DoIt
Table
	subclass: 'Gdef'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Gdef category: 'PDFtalk Fonts OpenType'.
	Gdef comment: 'The Glyph Definition (GDEF) table contains four types of information in four independent tables:

    * The GlyphClassDef table classifies the different types of glyphs in the font.
    * The AttachmentList table identifies all attachment points on the glyphs, which streamlines data access and bitmap caching.
    * The LigatureCaretList table contains positioning data for ligature carets, which the text-processing client uses on screen to select and highlight the individual components of a ligature glyph.
    * The MarkAttachClassDef table classifies mark glyphs, to help group together marks that are positioned similarly.
    * The MarkGlyphSetsTable allows the enumeration of an arbitrary number of glyph sets that can be used as an extension of the mark attachment class definition to allow lookups to filter mark glyphs by arbitrary sets of marks.

The GSUB and GPOS tables may reference certain GDEF table information. See, for example, the LookupFlag bit enumeration in âOpenType Layout Common Table Formatsâ.'.
	Gdef namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Loca
DoIt
Table
	subclass: 'Loca'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Loca category: 'PDFtalk Fonts OpenType'.
	Loca comment: 'The indexToLoc table stores the offsets to the locations of the glyphs in the font, relative to the beginning of the glyphData table. In order to compute the length of the last glyph element, there is an extra entry after the last valid index.

By definition, index zero points to the âmissing character,â which is the character that appears if a character is not found in the font. The missing character is commonly represented by a blank box or a space. If the font does not contain an outline for the missing character, then the first and second offsets should have the same value. This also applies to any other characters without an outline, such as the space character. If a glyph has no outline, then loca[n] = loca [n+1]. In the particular case of the last glyph(s), loca[n] will be equal the length of the glyph data (''glyf'') table. The offsets must be in ascending order with loca[n] <= loca[n+1].

Most routines will look at the ''maxp'' table to determine the number of glyphs in the font, but the value in the ''loca'' table must agree.'.
	Loca namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Glyph
DoIt
Value
	subclass: 'Glyph'
	instVarNames: #(id name charString code hMetric)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Glyph category: 'PDFtalk Fonts OpenType'.
	Glyph comment: 'a character from a CFF'.
	Glyph namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Glyf
DoIt
Table
	subclass: 'Glyf'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Glyf category: 'PDFtalk Fonts OpenType'.
	Glyf comment: 'This table contains information that describes the glyphs in the font in the TrueType outline format. Information regarding the rasterizer (scaler) refers to the TrueType rasterizer.'.
	Glyf namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class CmapSubtable0
DoIt
CmapLanguageSubtable
	subclass: 'CmapSubtable0'
	instVarNames: #(glyphIdArray)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	CmapSubtable0 category: 'PDFtalk Fonts OpenType'.
	CmapSubtable0 comment: 'Format 0: Byte encoding table

This is the Apple standard character to glyph index mapping table.
Type 		Name 				Description
USHORT 	format 				Format number is set to 0.
USHORT 	length 				This is the length in bytes of the subtable.
USHORT 	language 			Please see âNote on the language field in ''cmap'' subtablesâ in this document.
BYTE 		glyphIdArray[256] 	An array that maps character codes to glyph index values.

This is a simple 1 to 1 mapping of character codes to glyph indices. The glyph set is limited to 256. Note that if this format is used to index into a larger glyph set, only the first 256 glyphs will be accessible.

(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)'.
	CmapSubtable0 namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Post
DoIt
Table
	subclass: 'Post'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Post category: 'PDFtalk Fonts OpenType'.
	Post comment: 'This table contains additional information needed to use TrueType or OpenType fonts on PostScript printers. This includes data for the FontInfo dictionary entry and the PostScript names of all the glyphs. For more information about PostScript names, see the Adobe document Unicode and Glyph Names.

Versions 1.0, 2.0, and 2.5 refer to TrueType fonts and OpenType fonts with TrueType data. OpenType fonts with TrueType data may also use Version 3.0. OpenType fonts with CFF data use Version 3.0 only.
'.
	Post namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class CmapSubtable12
DoIt
CmapLanguageSubtable32
	subclass: 'CmapSubtable12'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	CmapSubtable12 category: 'PDFtalk Fonts OpenType'.
	CmapSubtable12 comment: 'Format 12: Segmented coverage

This is the Microsoft standard character to glyph index mapping table for fonts supporting the UCS-4 characters in the Unicode Surrogates Area (U+D800 - U+DFFF). It is a bit like format 4, in that it defines segments for sparse representation in 4-byte character space. Here''s the subtable format:

Type		Name		Description
USHORT	format		Subtable format; set to 12.
USHORT	reserved	Reserved; set to 0
ULONG		length		Byte length of this subtable (including the header)
ULONG		language	Please see âNote on the language field in ''cmap'' subtablesâ in this document.
ULONG		nGroups	Number of groupings which follow

(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)'.
	CmapSubtable12 namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Dsig
DoIt
Table
	subclass: 'Dsig'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Dsig category: 'PDFtalk Fonts OpenType'.
	Dsig comment: 'The DSIG table contains the digital signature of the OpenTypeâ¢ font. Signature formats are widely documented and rely on a key pair architecture. Software developers, or publishers posting material on the Internet, create signatures using a private key. Operating systems or applications authenticate the signature using a public key.

The W3C and major software and operating system developers have specified security standards that describe signature formats, specify secure collections of web objects, and recommend authentication architecture. OpenType fonts with signatures will support these standards.

OpenType fonts offer many security features:

    * Operating systems and browsing applications can identify the source and integrity of font files before using them,
    * Font developers can specify embedding restrictions in OpenType fonts, and these restrictions cannot be altered in a font signed by the developer.

The enforcement of signatures is an administrative policy, enabled by the operating system. Windows will soon require installed software components, including fonts, to be signed. Internet browsers will also give users and administrators the ability to screen out unsigned objects obtained on-line, including web pages, fonts, graphics, and software components.

Anyone can obtain identity certificates and encryption keys from a certifying agency, such as Verisign or GTE''s Cybertrust, free or at a very low cost.'.
	Dsig namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class OS2
DoIt
Table
	subclass: 'OS2'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	OS2 category: 'PDFtalk Fonts OpenType'.
	OS2 comment: 'The OS/2 table consists of a set of metrics that are required in OpenType fonts.
'.
	OS2 namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Cff
DoIt
Table
	subclass: 'Cff'
	instVarNames: #(fontSet)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Cff category: 'PDFtalk Fonts OpenType'.
	Cff comment: 'This table contains a compact representation of a PostScript Type 1, or CIDFont and is structured according to Adobe Technical Note #5176: âThe Compact Font Format Specification,â and Adobe Technical Note #5177: âType 2 Charstring Format.â

Existing TrueType fonts use a glyph index to specify and access glyphs within a font, e.g. to index the loca table and thereby access glyph data in the glyf table. This concept is retained in OpenTypeâ¢ PostScript fonts except that glyph data is accessed through the CharStrings INDEX of the CFF table.'.
	Cff namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Cblc
DoIt
Table
	subclass: 'Cblc'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Cblc category: 'PDFtalk Fonts OpenType'.
	Cblc comment: 'CBLC - Color Bitmap Location Table

Two new tables are used to embed color bitmaps in OFF fonts. They are the ''CBLC'' table, backward compatible with the existing EBLC table for embedded bitmap locators, and the ''CBDT'' table for embedded color bitmap data.

The ''CBLC'' table begins with a header containing the table version and number of strikes. An OFF font may have one or more strikes embedded in the ''CBDT'' table.
'.
	Cblc namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class HorMetric
DoIt
Value
	subclass: 'HorMetric'
	instVarNames: #(advanceWidth lsb)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	HorMetric category: 'PDFtalk Fonts OpenType'.
	HorMetric comment: 'Paired advance width and left side bearing values for a glyph.'.
	HorMetric namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Font
DoIt
((PDFtalk at: #Fonts) at: #Font)
	subclass: 'Font'
	instVarNames: #(filename fileContent sfntVersion numTables searchRange entrySelector rangeShift tables glyphs tabularGlyphIds header tabularVariants tabularSuffix)
	classVars: #()
	classInstVars: #(installed)
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Font category: 'PDFtalk Fonts OpenType'.
	Font comment: 'holds an OpenType font content
The data types are used in the OpenType font file. All OpenType fonts use Motorola-style byte ordering (Big Endian).

(see http://www.microsoft.com/typography/otspec/default.htm for specifications)
'.
	Font namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Gpos
DoIt
Table
	subclass: 'Gpos'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Gpos category: 'PDFtalk Fonts OpenType'.
	Gpos comment: 'The Glyph Positioning table (GPOS) provides precise control over glyph placement for sophisticated text layout and rendering in each script and language system that a font supports.'.
	Gpos namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class CmapSubtable4
DoIt
CmapLanguageSubtable
	subclass: 'CmapSubtable4'
	instVarNames: #(segments glyphIdArray indexToCode)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	CmapSubtable4 category: 'PDFtalk Fonts OpenType'.
	CmapSubtable4 comment: 'Format 4: Segment mapping to delta values

This is the Microsoft standard character to glyph index mapping table for fonts that support Unicode ranges other than the range [U+D800 - U+DFFF] (defined as Surrogates Area, in Unicode v 3.0) which is used for UCS-4 characters. If a font supports this character range (i.e. in turn supports the UCS-4 characters) a subtable in this format with a platform specific encoding ID 1 is yet needed, in addition to a subtable in format 12 with a platform specific encoding ID 10. Please see details on format 12 below, for fonts that support UCS-4 characters on Windows.

This format is used when the character codes for the characters represented by a font fall into several contiguous ranges, possibly with holes in some or all of the ranges (that is, some of the codes in a range may not have a representation in the font). The format-dependent data is divided into three parts, which must occur in the following order:

   1. A four-word header gives parameters for an optimized search of the segment list;
   2. Four parallel arrays describe the segments (one segment for each contiguous range of codes);
   3. A variable-length array of glyph IDs (unsigned words).

(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)'.
	CmapSubtable4 namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Kern
DoIt
Table
	subclass: 'Kern'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Kern category: 'PDFtalk Fonts OpenType'.
	Kern comment: 'NOTE: Apple has extended the definition of the ''kern'' table to provide additional functionality. The Apple extensions are not supported on Windows. Fonts intended for cross-platform use or for the Windows platform in general should conform to the ''kern'' table format specified here.

The kerning table contains the values that control the intercharacter spacing for the glyphs in a font. There is currently no system level support for kerning (other than returning the kern pairs and kern values). OpenTypeâ¢ fonts containing CFF outlines are not supported by the ''kern'' table and must use the ''GPOS'' OpenType Layout table.

Each subtable varies in format, and can contain information for vertical or horizontal text, and can contain kerning values or minimum values. Kerning values are used to adjust inter-character spacing, and minimum values are used to limit the amount of adjustment that the scaler applies by the combination of kerning and tracking. Because the adjustments are additive, the order of the subtables containing kerning values is not important. However, tables containing minimum values should usually be placed last, so that they can be used to limit the total effect of other subtables.'.
	Kern namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Vdmx
DoIt
Table
	subclass: 'Vdmx'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Vdmx category: 'PDFtalk Fonts OpenType'.
	Vdmx comment: 'The VDMX table relates to OpenTypeâ¢ fonts with TrueType outlines. Under Windows, the usWinAscent and usWinDescent values from the ''OS/2'' table will be used to determine the maximum black height for a font at any given size. Windows calls this distance the Font Height. Because TrueType instructions can lead to Font Heights that differ from the actual scaled and rounded values, basing the Font Height strictly on the yMax and yMin can result in âlost pixels.â Windows will clip any pixels that extend above the yMax or below the yMin. In order to avoid grid fitting the entire font to determine the correct height, the VDMX table has been defined.'.
	Vdmx namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Pclt
DoIt
Table
	subclass: 'Pclt'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Pclt category: 'PDFtalk Fonts OpenType'.
	Pclt comment: 'The ''PCLT'' table is strongly discouraged for OpenTypeâ¢ fonts with TrueType outlines. Extra information on many of these fields can be found in the HP PCL 5 Printer Language Technical Reference Manual  available from Hewlett-Packard Boise Printer Division.'.
	Pclt namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Hmtx
DoIt
Table
	subclass: 'Hmtx'
	instVarNames: #(hMetrics)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Hmtx category: 'PDFtalk Fonts OpenType'.
	Hmtx comment: 'The type longHorMetric is defined as an array where each element has two parts: the advance width, which is of type USHORT, and the left side bearing, which is of type SHORT. These fields are in font design units.'.
	Hmtx namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Colr
DoIt
Table
	subclass: 'Colr'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Colr category: 'PDFtalk Fonts OpenType'.
	Colr comment: 'COLR - Color Table

The COLR table adds support for multi-colored glyphs in a manner that is compatible with existing text engines and easy to support with current OFF font files.

The COLR table defines a list of base glyphs â which are regular glyphs, typically associated with a cmap entry. Each base glyph is associated by the COLR table to a list of glyphs, each corresponding to layers that can be combined, creating a colored representation of the base glyph. The layered glyphs are explicitly defined in bottom-up z-order and each of their advance widths must match those of the base glyph. If the font has vertical metrics, the associated layer glyphs must also have the same advance height and vertical Y origin as the base glyph.

The COLR table works together with the CPAL table which holds the color palettes used by the color layers.

Fonts using ''COLR'' and ''CPAL'' tables must implement GlyphID 1 as the .null glyph. If the COLR table is present in a font but no CPAL table exists, then the COLR table will not be supported for this font.'.
	Colr namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Head
DoIt
Table
	subclass: 'Head'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Head category: 'PDFtalk Fonts OpenType'.
	Head comment: 'This table gives global information about the font. The bounding box values should be computed using only glyphs that have contours. Glyphs with no contours should be ignored for the purposes of these calculations.
'.
	Head namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class Svg
DoIt
Table
	subclass: 'Svg'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	Svg category: 'PDFtalk Fonts OpenType'.
	Svg comment: 'OpenType fonts with either TrueType or CFF outlines may also contain an optional âSVG â table, which allows some or all glyphs in the font to be defined with color, gradients, or animation.

SVG - The SVG (Scalable Vector Graphics) table

This table contains SVG descriptions for some or all of the glyphs in the font. For every SVG glyph description, there must also exist a corresponding CFF or TT glyph description in the font.'.
	Svg namespacePath: #(#PDFtalk #Fonts #OpenType).
%
# Define class CmapSubtable2
DoIt
CmapLanguageSubtable
	subclass: 'CmapSubtable2'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: OpenType
%
DoIt
	CmapSubtable2 category: 'PDFtalk Fonts OpenType'.
	CmapSubtable2 comment: 'Format 2: High-byte mapping through table

This subtable is useful for the national character code standards used for Japanese, Chinese, and Korean characters. These code standards use a mixed 8/16-bit encoding, in which certain byte values signal the first byte of a 2-byte character (but these values are also legal as the second byte of a 2-byte character).

In addition, even for the 2-byte characters, the mapping of character codes to glyph index values depends heavily on the first byte. Consequently, the table begins with an array that maps the first byte to a 4-word subHeader. For 2-byte character codes, the subHeader is used to map the second byte''s value through a subArray, as described below. When processing mixed 8/16-bit text, subHeader 0 is special: it is used for single-byte character codes. When subHeader zero is used, a second byte is not needed; the single byte value is mapped through the subArray.

(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)'.
	CmapSubtable2 namespacePath: #(#PDFtalk #Fonts #OpenType).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
category: '*PDFtalk Fonts OpenType-accessing stream'
method: ByteReadStream
nextOpenTypeFixed
	"<Float>"
	"Most tables have version numbers, and the version number for the entire font is contained in the Table Directory. Note that there are two different table version number types, each with its own numbering scheme. USHORT version numbers always start at zero (0). Fixed version numbers start at one (1.0 or 0x00010000), except where noted (EBDT, EBLC and EBSC tables).

Implementations reading tables must include code to check version numbers so that if and when the format and therefore the version number changes, older implementations will reject newer versions gracefully, if the changes are incompatible.

When a Fixed number is used as a version, the upper 16 bits comprise a major version number, and the lower 16 bits a minor. Tables with non-zero minor version numbers always specify the literal value of the version number since the normal representation of Fixed numbers is not necessarily followed. For example, the version number of 'maxp' table version 0.5 is 0x00005000, and that of 'vhea' table version 1.1 is 0x00011000. If an implementation understands a major version number, then it can safely proceed reading the table. The minor version number indicates extensions to the format that are undetectable by implementations that do not support them.

The only exception to this is the Offset Table's sfnt version. This serves solely to identify whether the OpenType font contains TrueType outlines (a value of 1.0) or CFF data (the tag 'OTTO'), as described in the section below, 'Organization of an OpenType font.'

When a USHORT number is used to indicate version, it should be treated as though it were a minor version number; i.e., all format changes are compatible extensions."

	^(((self nextLong / 16r10000) * 1000) rounded / 1000) asFloat
%
method: ByteReadStream
nextOpenTypeFixedVersion
	"<FixedPoint>"
	"Most tables have version numbers, and the version number for the entire font is contained in the Table Directory. Note that there are two different table version number types, each with its own numbering scheme. USHORT version numbers always start at zero (0). Fixed version numbers start at one (1.0 or 0x00010000), except where noted (EBDT, EBLC and EBSC tables).

Implementations reading tables must include code to check version numbers so that if and when the format and therefore the version number changes, older implementations will reject newer versions gracefully, if the changes are incompatible.

When a Fixed number is used as a version, the upper 16 bits comprise a major version number, and the lower 16 bits a minor. Tables with non-zero minor version numbers always specify the literal value of the version number since the normal representation of Fixed numbers is not necessarily followed. For example, the version number of 'maxp' table version 0.5 is 0x00005000, and that of 'vhea' table version 1.1 is 0x00011000. If an implementation understands a major version number, then it can safely proceed reading the table. The minor version number indicates extensions to the format that are undetectable by implementations that do not support them.

The only exception to this is the Offset Table's sfnt version. This serves solely to identify whether the OpenType font contains TrueType outlines (a value of 1.0) or CFF data (the tag 'OTTO'), as described in the section below, 'Organization of an OpenType font.'

When a USHORT number is used to indicate version, it should be treated as though it were a minor version number; i.e., all format changes are compatible extensions."

	| major byte1String byte2String fraction |
	major := self nextUnsignedShort.
	byte1String := '0' , (self next printStringRadix: 16) last: 2.
	byte2String := '0' , (self next printStringRadix: 16) last: 2.
	fraction := ('0.' , byte1String , byte2String) asNumber.
	^major + fraction
%
method: ByteReadStream
nextOpenTypeLongDateTime
	"<Timestamp>"
	"LONGDATETIME 	created 	Number of seconds since 12:00 midnight that started January 1st 1904 in GMT/UTC time zone. 64-bit integer"

	^Timestamp fromOpenTypeLongDateTime: self nextLongLong
%
category: '*PDFtalk Fonts OpenType-accessing'
method: ByteWriteStream
nextPutOpenTypeFixed: aNumber
	self nextPutLong: (aNumber * 16r10000) rounded
%
method: ByteWriteStream
nextPutOpenTypeFixedVersion: aNumber
	self nextPutUnsignedShort: aNumber truncated.
	self nextPutUnsignedShort: ('16r' , (aNumber asFloat fractionPart printString allButFirst: 2)) asNumber rounded
%
method: ByteWriteStream
nextPutOpenTypeLongDateTime: aTimestamp
	self nextPutLongLong: aTimestamp asOpenTypeLongDateTime
%
category: '*PDFtalk Fonts OpenType-instance creation'
classmethod: Timestamp
fromOpenTypeLongDateTime: secondsFromNewyear1904
	"Answer a new Timestamp from the number of seconds since 12:00 am, January 1, 1904.
	Used in the OpenType file format"

	^self secondsUTC: secondsFromNewyear1904 + self newyear1904AsSeconds offset: Duration zero
%
classmethod: Timestamp
newyear1904AsSeconds
	"(self d: 1 m: 1 y: 1904) asSeconds"

	^-3061152000
%
category: '*PDFtalk Fonts OpenType-conversion'
method: Timestamp
asOpenTypeLongDateTime
	"<Integer>
	as seconds from new year 1904"

	^self asSeconds - self class newyear1904AsSeconds
%
DoIt
System myUserProfile insertDictionary: ((PDFtalk at: #Fonts) at: #OpenType) at: 1.
%
category: 'accessing'
classmethod: Base
tag
	^'BASE'
%
category: 'accessing'
classmethod: Cbdt
tag
	^'CBDT'
%
category: 'accessing'
classmethod: Cblc
tag
	^'CBLC'
%
category: 'accessing'
classmethod: Cff
tag
	^'CFF '
%
category: 'accessing'
method: Cff
fontSet
	"<FontSet>"

	^fontSet ifNil: [
		fontSet := (((PDFtalk at: #Fonts) at: #CFF) at: #FontSet) for: self file fromBytes: self contents readStream]
%
method: Cff
forceBold
	"<Boolean>"

	^self fontSet forceBold
%
method: Cff
nameOfGlyph: aGlyphId
	"<String>"

	^self fontSet nameOfGlyph: aGlyphId
%
category: 'printing'
method: Cff
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'tag' value: self tag).
	args add: (printer optional: 'contents' value: contents).
	args add: (printer constant: 'fontSet' value: self fontSet).
	^printer printvalue: self arguments: args
%
category: 'accessing'
classmethod: Cmap
tag
	^'cmap'
%
category: 'accessing'
method: Cmap
codeForGlyph: aGlyphId
	^self platformTable codeForGlyph: aGlyphId
%
method: Cmap
createEncodingTables
	"The cmap table header is followed by an array of encoding records that specify the particular encoding and the offset to the subtable for that encoding. 
The number of encoding records is numTables. An encoding record entry looks like:
Record Type 	Name 		Description
USHORT 		platformID 	Platform ID.
USHORT 		encodingID 	Platform-specific encoding ID.
ULONG 		offset 		Byte offset from beginning of table to the subtable for this encoding."

	| b subtableClass subtable |
	b := self bytes.
	^(1 to: self numTables) collect: [:i |
		| pos platformID encodingID offset format |
		pos := (i - 1) * 8 + 5.
		platformID := b unsignedShortAt: pos.
		encodingID := b unsignedShortAt: pos + 2.
		offset := b unsignedLongAt: pos + 4.
		format := b unsignedShortAt: offset + 1.
		subtableClass := CmapSubtable subclassFor: format.
		subtable := subtableClass platform: platformID encoding: encodingID contents: ByteArray new.
		subtable readFrom: self contents at: offset]
%
method: Cmap
encodingTables
	"<Dictionary key: Integer value: CmapSubtable"

	^encodingTables ifNil: [
		| dict |
		dict := Valuemap new.
		self createEncodingTables do: [:table |
			(dict at: table platform ifAbsentPut: [OrderedCollection new]) add: table].
		encodingTables := dict]
%
method: Cmap
glyphIndexAtUnicode: aUnicodeInteger
	"<Integer | nil>"

	^self platformTable glyphIndexAtUnicode: aUnicodeInteger
%
method: Cmap
numTables
	"USHORT  	numTables  	Number of encoding tables that follow."

	^self bytes unsignedShortAt: 3
%
method: Cmap
platformTable
	"<CmapSubtable"

	^self platformTables first
%
method: Cmap
platformTables
	"<SequenceableCollection of: CmapSubtable"

	^self encodingTables at: self platformID
%
method: Cmap
tables
	^self encodingTables values inject: OrderedCollection new into: [:list :tables | list , tables]
%
method: Cmap
version
	"USHORT  	version  	Table version number (0)."

	^self bytes unsignedShortAt: 1
%
category: 'instance creation'
classmethod: CmapLanguageSubtable
platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger
	| inst |
	inst := self new.
	inst
		initializePlatform: platformInteger
		encoding: encodingInteger
		contents: contentsByteArray
		language: languageInteger.
	^inst
%
category: 'specification'
classmethod: CmapLanguageSubtable
localSpecification
	<constant: #language class: #(#Integer) comment: 'Please see âNote on the language field in ''cmap'' subtablesâ in this document'>
%
category: 'accessing'
method: CmapLanguageSubtable
language
	"<Integer>
	Please see âNote on the language field in 'cmap' subtablesâ in this document"

	^language
%
category: 'initialize-release'
method: CmapLanguageSubtable
initializePlatform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger
	platform := platformInteger.
	encoding := encodingInteger.
	contents := contentsByteArray.
	language := languageInteger.
	self beImmutable
%
category: 'printing'
method: CmapLanguageSubtable
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'platform' value: self platform).
	args add: (printer constant: 'encoding' value: self encoding).
	args add: (printer constant: 'contents' value: self contents).
	args add: (printer constant: 'language' value: self language).
	^printer printvalue: self arguments: args
%
category: 'reading'
method: CmapLanguageSubtable
readFrom: bytes at: offset
	"Type  	Name  	Description
USHORT 	format 	Format number is set to 0.
USHORT 	length 	This is the length in bytes of the subtable.
USHORT 	language 	Please see âNote on the language field in 'cmap' subtablesâ in this document."

	| aLength aLanguage uBytes |
	uBytes := ByteReadStream bigEndianOn: (bytes copyFrom: offset + 1 to: offset + 6).
	uBytes nextUnsignedShort = self formatNumber ifFalse: [
		^self error: 'wrong format'].
	aLength := uBytes nextUnsignedShort.
	aLanguage := uBytes nextUnsignedShort.
	^self class
		platform: self platform
		encoding: self encoding
		contents: (bytes copyFrom: offset + 1 to: offset + aLength)
		language: aLanguage
%
category: 'reading'
method: CmapLanguageSubtable32
readFrom: bytes at: offset
	"Type  	Name  		Description
USHORT 	format 		Subtable format; set to 8.
USHORT	reserved	Reserved; set to 0
ULONG		length		Byte length of this subtable (including the header)
ULONG		language	Please see âNote on the language field in 'cmap' subtablesâ in this document."

	| aLength aLanguage uBytes |
	uBytes := ByteReadStream bigEndianOn: (bytes copyFrom: offset + 1 to: offset + 12).
	uBytes nextUnsignedShort = self formatNumber ifFalse: [
		^self error: 'wrong format'].
	uBytes nextShort.
	aLength := uBytes nextUnsignedLong.
	aLanguage := uBytes nextUnsignedLong.
	^self class
		platform: self platform
		encoding: self encoding
		contents: (bytes copyFrom: offset + 1 to: offset + aLength)
		language: aLanguage
%
category: 'accessing'
classmethod: CmapSubtable
formatNumber
	"<Integer>"

	^self subclassResponsibility
%
classmethod: CmapSubtable
subclassFor: formatInteger
	"assumes that all subclasses are defined in namespace #{PDFtalk.Fonts.OpenType}"

	| classOrganizer |
	classOrganizer := ClassOrganizer
		pdfNewWithRoot: CmapSubtable
		symbolList: (SymbolList with: ((PDFtalk at: #Fonts) at: #OpenType)).
	^(classOrganizer allSubclassesOf: CmapSubtable) detect: [:subclass |
		(classOrganizer subclassesOf: subclass) isEmpty and: [
		subclass formatNumber = formatInteger]]
%
category: 'instance creation'
classmethod: CmapSubtable
platform: platformInteger encoding: encodingInteger contents: contentsByteArray
	| inst |
	inst := self new.
	inst
		initializePlatform: platformInteger
		encoding: encodingInteger
		contents: contentsByteArray.
	^inst
%
category: 'specification'
classmethod: CmapSubtable
localSpecification
	<constant: #platform class: #(#Integer) comment: 'Platform ID'>
	<constant: #encoding class: #(#Integer) comment: 'Platform-specific encoding ID'>
	<constant: #contents class: #(#ByteArray) comment: 'Bytes of this subtable'>
%
category: 'accessing'
method: CmapSubtable
codeForGlyph: aGlyphId
	^self indexToCode at: aGlyphId ifAbsent: [Character illegalCode]
%
method: CmapSubtable
contents
	"<ByteArray>
	Bytes of this subtable"

	^contents
%
method: CmapSubtable
encoding
	"<Integer>
	Platform-specific encoding ID"

	^encoding
%
method: CmapSubtable
formatNumber
	"<Integer>"

	^self class formatNumber
%
method: CmapSubtable
glyphIndexAtUnicode: aUnicodeInteger
	"<Integer | nil>"

	^self subclassResponsibility
%
method: CmapSubtable
indexToCode
	"<Dictionary key: Integer value: Integer>"

	^self subclassResponsibility
%
method: CmapSubtable
platform
	"<Integer>
	Platform ID"

	^platform
%
category: 'initialize-release'
method: CmapSubtable
initializePlatform: platformInteger encoding: encodingInteger contents: contentsByteArray
	platform := platformInteger.
	encoding := encodingInteger.
	contents := contentsByteArray.
	self beImmutable
%
category: 'printing'
method: CmapSubtable
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'platform' value: self platform).
	args add: (printer constant: 'encoding' value: self encoding).
	args add: (printer constant: 'contents' value: self contents).
	^printer printvalue: self arguments: args
%
category: 'reading'
method: CmapSubtable
readFrom: uninterpretedBytes at: offset
	"<CmapSubtable>"

	^self subclassResponsibility
%
category: 'accessing'
classmethod: CmapSubtable0
formatNumber
	^0
%
category: 'instance creation'
classmethod: CmapSubtable0
platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger glyphIdArray: glyphIdArrayByteArray
	| inst |
	inst := self new.
	inst
		initializePlatform: platformInteger
		encoding: encodingInteger
		contents: contentsByteArray
		language: languageInteger
		glyphIdArray: glyphIdArrayByteArray.
	^inst
%
category: 'specification'
classmethod: CmapSubtable0
localSpecification
	<constant: #glyphIdArray class: #(#ByteArray) comment: 'An array that maps character codes to glyph index values'>
%
category: 'accessing'
method: CmapSubtable0
glyphIdArray
	"<ByteArray>
	An array that maps character codes to glyph index values"

	^glyphIdArray
%
method: CmapSubtable0
glyphIndexAtUnicode: aUnicodeInteger
	^self notYetImplemented
%
method: CmapSubtable0
indexToCode
	^self notYetImplemented
%
category: 'initialize-release'
method: CmapSubtable0
initializePlatform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger glyphIdArray: glyphIdArrayByteArray
	platform := platformInteger.
	encoding := encodingInteger.
	contents := contentsByteArray.
	language := languageInteger.
	glyphIdArray := glyphIdArrayByteArray.
	self beImmutable
%
category: 'printing'
method: CmapSubtable0
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'platform' value: self platform).
	args add: (printer constant: 'encoding' value: self encoding).
	args add: (printer constant: 'contents' value: self contents).
	args add: (printer constant: 'language' value: self language).
	args add: (printer constant: 'glyphIdArray' value: self glyphIdArray).
	^printer printvalue: self arguments: args
%
category: 'reading'
method: CmapSubtable0
readFrom: bytes at: offset
	"Type  	Name  	Description
USHORT 	format 	Format number is set to 0.
USHORT 	length 	This is the length in bytes of the subtable.
USHORT 	language 	Please see âNote on the language field in 'cmap' subtablesâ in this document.
BYTE 	glyphIdArray[256] 	An array that maps character codes to glyph index values."

	| subtable |
	subtable := super readFrom: bytes at: offset.
	^self class
		platform: subtable platform
		encoding: subtable encoding
		contents: subtable contents
		language: subtable language
		glyphIdArray: (subtable contents copyFrom: 6 to: subtable contents size)
%
category: 'accessing'
classmethod: CmapSubtable10
formatNumber
	^10
%
category: 'accessing'
method: CmapSubtable10
glyphIndexAtUnicode: aUnicodeInteger
	^self notYetImplemented
%
method: CmapSubtable10
indexToCode
	^self notYetImplemented
%
category: 'accessing'
classmethod: CmapSubtable12
formatNumber
	^12
%
category: 'accessing'
method: CmapSubtable12
glyphIndexAtUnicode: aUnicodeInteger
	^self notYetImplemented
%
method: CmapSubtable12
indexToCode
	^self notYetImplemented
%
category: 'accessing'
classmethod: CmapSubtable13
formatNumber
	^13
%
category: 'accessing'
method: CmapSubtable13
glyphIndexAtUnicode: aUnicodeInteger
	^self notYetImplemented
%
method: CmapSubtable13
indexToCode
	^self notYetImplemented
%
category: 'accessing'
classmethod: CmapSubtable14
formatNumber
	^14
%
category: 'accessing'
method: CmapSubtable14
glyphIndexAtUnicode: aUnicodeInteger
	^self notYetImplemented
%
method: CmapSubtable14
indexToCode
	^self notYetImplemented
%
category: 'reading'
method: CmapSubtable14
readFrom: uninterpretedBytes at: offset
	^self notYetImplemented
%
category: 'accessing'
classmethod: CmapSubtable2
formatNumber
	^2
%
category: 'accessing'
method: CmapSubtable2
glyphIndexAtUnicode: aUnicodeInteger
	^self notYetImplemented
%
method: CmapSubtable2
indexToCode
	^self notYetImplemented
%
category: 'accessing'
classmethod: CmapSubtable4
formatNumber
	^4
%
category: 'instance creation'
classmethod: CmapSubtable4
platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger segments: segmentsArray glyphIdArray: glyphIdArrayArray indexToCode: indexToCodeDictionary
	| inst |
	inst := self new.
	inst
		initializePlatform: platformInteger
		encoding: encodingInteger
		contents: contentsByteArray
		language: languageInteger
		segments: segmentsArray
		glyphIdArray: glyphIdArrayArray
		indexToCode: indexToCodeDictionary.
	^inst
%
category: 'instance creation optional'
classmethod: CmapSubtable4
platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger
	| inst |
	inst := self new.
	inst
		initializePlatform: platformInteger
		encoding: encodingInteger
		contents: contentsByteArray
		language: languageInteger
		segments: nil
		glyphIdArray: nil
		indexToCode: nil.
	^inst
%
classmethod: CmapSubtable4
platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger glyphIdArray: glyphIdArrayArray
	| inst |
	inst := self new.
	inst
		initializePlatform: platformInteger
		encoding: encodingInteger
		contents: contentsByteArray
		language: languageInteger
		segments: nil
		glyphIdArray: glyphIdArrayArray
		indexToCode: nil.
	^inst
%
classmethod: CmapSubtable4
platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger glyphIdArray: glyphIdArrayArray indexToCode: indexToCodeDictionary
	| inst |
	inst := self new.
	inst
		initializePlatform: platformInteger
		encoding: encodingInteger
		contents: contentsByteArray
		language: languageInteger
		segments: nil
		glyphIdArray: glyphIdArrayArray
		indexToCode: indexToCodeDictionary.
	^inst
%
classmethod: CmapSubtable4
platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger indexToCode: indexToCodeDictionary
	| inst |
	inst := self new.
	inst
		initializePlatform: platformInteger
		encoding: encodingInteger
		contents: contentsByteArray
		language: languageInteger
		segments: nil
		glyphIdArray: nil
		indexToCode: indexToCodeDictionary.
	^inst
%
classmethod: CmapSubtable4
platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger segments: segmentsArray
	| inst |
	inst := self new.
	inst
		initializePlatform: platformInteger
		encoding: encodingInteger
		contents: contentsByteArray
		language: languageInteger
		segments: segmentsArray
		glyphIdArray: nil
		indexToCode: nil.
	^inst
%
classmethod: CmapSubtable4
platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger segments: segmentsArray glyphIdArray: glyphIdArrayArray
	| inst |
	inst := self new.
	inst
		initializePlatform: platformInteger
		encoding: encodingInteger
		contents: contentsByteArray
		language: languageInteger
		segments: segmentsArray
		glyphIdArray: glyphIdArrayArray
		indexToCode: nil.
	^inst
%
classmethod: CmapSubtable4
platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger segments: segmentsArray indexToCode: indexToCodeDictionary
	| inst |
	inst := self new.
	inst
		initializePlatform: platformInteger
		encoding: encodingInteger
		contents: contentsByteArray
		language: languageInteger
		segments: segmentsArray
		glyphIdArray: nil
		indexToCode: indexToCodeDictionary.
	^inst
%
category: 'specification'
classmethod: CmapSubtable4
localSpecification
	<sequence: #segments comment: 'code ranges'>
	<sequence: #glyphIdArray comment: 'Glyph index array'>
	<map: #indexToCode comment: 'Cache for the index to code mapping'>
%
category: 'accessing'
method: CmapSubtable4
glyphIdArray
	"<Array>
	Glyph index array"

	^glyphIdArray ifNil: [#()]
%
method: CmapSubtable4
glyphIndexAtUnicode: aUnicodeInteger
	| segment |
	aUnicodeInteger = Character illegalCode ifTrue: [
		^nil].
	segment := self segments detect: [:seg | seg endCode >= aUnicodeInteger].
	^segment glyphIndexAtCode: aUnicodeInteger glyphs: self glyphIdArray
%
method: CmapSubtable4
indexToCode
	"<Dictionary>
	Cache for the index to code mapping"

	^indexToCode ifNil: [Dictionary new beImmutable]
%
method: CmapSubtable4
segments
	"<Array>
	code ranges"

	^segments ifNil: [#()]
%
category: 'initialize-release'
method: CmapSubtable4
initializePlatform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger segments: segmentsArray glyphIdArray: glyphIdArrayArray indexToCode: indexToCodeDictionary
	platform := platformInteger.
	encoding := encodingInteger.
	contents := contentsByteArray.
	language := languageInteger.
	(segmentsArray notNil and: [
	segmentsArray notEmpty]) ifTrue: [
			segments := (Array withAll: segmentsArray) beImmutable].
	(glyphIdArrayArray notNil and: [
	glyphIdArrayArray notEmpty]) ifTrue: [
			glyphIdArray := (Array withAll: glyphIdArrayArray) beImmutable].
	(indexToCodeDictionary notNil and: [
	indexToCodeDictionary notEmpty]) ifTrue: [
			indexToCode := (Valuemap withAll: indexToCodeDictionary) beImmutable].
	self beImmutable
%
category: 'marshaling'
method: CmapSubtable4
passInstVars
	"for OpenTalk StSt"

	^#(#default #default #default #default #default #default)
%
category: 'printing'
method: CmapSubtable4
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'platform' value: self platform).
	args add: (printer constant: 'encoding' value: self encoding).
	args add: (printer constant: 'contents' value: self contents).
	args add: (printer constant: 'language' value: self language).
	args add: (printer array: 'segments' value: self segments).
	args add: (printer array: 'glyphIdArray' value: self glyphIdArray).
	args add: (printer dictionary: 'indexToCode' value: self indexToCode).
	^printer printvalue: self arguments: args
%
category: 'reading'
method: CmapSubtable4
readFrom: bytes at: offset
	"Type  	Name  						Description
USHORT  	format  						Format number is set to 4.
USHORT 	length 						This is the length in bytes of the subtable.
USHORT 	language 					Please see âNote on the language field in 'cmap' subtablesâ in this document.
USHORT 	segCountX2 				2 x segCount.
USHORT 	searchRange 				2 x (2**floor(log2(segCount)))
USHORT 	entrySelector 				log2(searchRange/2)
USHORT 	rangeShift 					2 x segCount - searchRange
USHORT 	endCount[segCount] 		End characterCode for each segment, last=0xFFFF.
USHORT 	reservedPad 				Set to 0.
USHORT 	startCount[segCount] 		Start character code for each segment.
SHORT 	idDelta[segCount] 			Delta for all character codes in segment.
USHORT 	idRangeOffset[segCount] 	Offsets into glyphIdArray or 0
USHORT 	glyphIdArray[ ] 				Glyph index array (arbitrary length)"

	| subtable uBytes segCountX2 segCount o endCodes startCodes deltas glyphIndexes segs uGlyphs glyphs glyphIdOffset offsetx codeMapping |
	subtable := super readFrom: bytes at: offset.
	uBytes := ByteReadStream bigEndianOn: subtable contents.
	segCountX2 := uBytes unsignedShortAt: 7.
	segCount := segCountX2 / 2.
	o := 14 + 1.
	endCodes := (0 to: segCount - 1) collect: [:i | uBytes unsignedShortAt: i * 2 + o].
	o := segCountX2 + o + 2.
	startCodes := (0 to: segCount - 1) collect: [:i | uBytes unsignedShortAt: i * 2 + o].
	o := segCountX2 + o.
	deltas := (0 to: segCount - 1) collect: [:i | uBytes shortAt: i * 2 + o].
	o := segCountX2 + o.
	glyphIdOffset := segCountX2 + o.
	glyphIndexes := (0 to: segCount - 1) collect: [:i |
		| rangeOffset |
		offsetx := i * 2 + o.
		rangeOffset := uBytes unsignedShortAt: offsetx.
		rangeOffset isZero
			ifTrue: [nil]
			ifFalse: [
			(offsetx + rangeOffset - glyphIdOffset) / 2]].
	segs := (1 to: segCount) collect: [:i |
		(glyphIndexes at: i)
			ifNil: [
			Segment startCode: (startCodes at: i) endCode: (endCodes at: i) delta: (deltas at: i)]
			ifNotNil: [:glyphIndex |
			IndexedSegment
				startCode: (startCodes at: i)
				endCode: (endCodes at: i)
				delta: (deltas at: i)
				glyphIdArrayIndex: glyphIndex]].
	uGlyphs := ByteReadStream bigEndianOn: (subtable contents copyFrom: segCountX2 + o to: subtable contents size).
	glyphs := (0 to: uGlyphs size / 2 - 1) collect: [:i |
		uGlyphs unsignedShortAt: i * 2 + 1].
	codeMapping := Valuemap new: glyphs size.
	segs do: [:segment |
		segment characterCodes do: [:code |
			(segment glyphIndexAtCode: code glyphs: glyphs) ifNotNil: [:index |
				codeMapping at: index put: code]]].
	^self class
		platform: subtable platform
		encoding: subtable encoding
		contents: subtable contents
		language: subtable language
		segments: segs
		glyphIdArray: glyphs
		indexToCode: codeMapping
%
category: 'accessing'
classmethod: CmapSubtable6
formatNumber
	^6
%
category: 'accessing'
method: CmapSubtable6
glyphIndexAtUnicode: aUnicodeInteger
	^self notYetImplemented
%
method: CmapSubtable6
indexToCode
	^self notYetImplemented
%
category: 'accessing'
classmethod: CmapSubtable8
formatNumber
	^8
%
category: 'accessing'
method: CmapSubtable8
glyphIndexAtUnicode: aUnicodeInteger
	^self notYetImplemented
%
method: CmapSubtable8
indexToCode
	^self notYetImplemented
%
category: 'accessing'
classmethod: Colr
tag
	^'COLR'
%
category: 'accessing'
classmethod: Cpal
tag
	^'CPAL'
%
category: 'accessing'
classmethod: Cvt
tag
	^'cvt '
%
category: 'accessing'
classmethod: Dsig
tag
	^'DSIG'
%
category: 'accessing'
classmethod: Ebdt
tag
	^'EBDT'
%
category: 'accessing'
classmethod: Eblc
tag
	^'EBLC'
%
category: 'accessing'
classmethod: Ebsc
tag
	^'EBSC'
%
category: 'instance creation'
classmethod: Font
file: fileString contents: aByteArray
	^self filename: fileString content: aByteArray
%
classmethod: Font
filename: fileString content: aFileContentByteArray
	| inst |
	inst := self new.
	inst initializeFilename: fileString content: aFileContentByteArray.
	^inst
%
classmethod: Font
newFromFile: aFilename
	^self filename: aFilename tail content: aFilename contentsOfEntireBinaryFile
%
category: 'accessing'
method: Font
cff
	"<Cff>"

	^self tables at: 'CFF '
%
method: Font
characterGlyphs
	^self glyphs allButFirst: 1
%
method: Font
cmap
	^self tables at: 'cmap'
%
method: Font
codeForGlyph: aGlyphId
	^self cmap codeForGlyph: aGlyphId
%
method: Font
createGlyphs
	"<Array of: Glyph>"

	| cffFont sids hMetrics list |
	cffFont := self font.
	sids := cffFont charset sids.
	hMetrics := self hMetrics.
	list := OrderedCollection new: self numGlyphs.
	cffFont charStrings doWithIndex: [:charString :index |
		| id sid string code hMetric |
		id := index - 1.
		sid := sids at: index.
		string := cffFont stringAt: sid.
		code := self codeForGlyph: id.
		code = Character illegalCode ifTrue: [
			code := nil].
		hMetric := hMetrics at: index.
		list add: (Glyph id: id name: string asSymbol charString: charString code: code hMetric: hMetric)].
	^list asArray
%
method: Font
entrySelector
	"<Integer>
	Log2(maximum power of 2 <= numTables)."

	^entrySelector
%
method: Font
faceName
	^self familyName
%
method: Font
familyName
	"<String>"

	^self nameAt: 1
%
method: Font
fileContent
	"<ByteArray>"

	^fileContent
%
method: Font
filename
	"<String>
	the file name of the Windows font file"

	^filename
%
method: Font
font
	^self cff fontSet fonts first
%
method: Font
forceBold
	"<Boolean>"

	^self cff forceBold
%
method: Font
glyphIndexAtUnicode: aUnicodeInteger
	"<Integer | nil>"

	^self cmap glyphIndexAtUnicode: aUnicodeInteger
%
method: Font
glyphNamed: aString
	"<Glyph | nil>"

	| symbol |
	symbol := aString asSymbol.
	^self glyphs detect: [:glyph | glyph name = symbol] ifNone: [nil]
%
method: Font
glyphOrNilAtUnicode: aUnicodeInteger
	^(self glyphIndexAtUnicode: aUnicodeInteger) ifNotNil: [:gid | self glyphs at: gid + 1]
%
method: Font
glyphs
	^glyphs ifNil: [glyphs := self createGlyphs]
%
method: Font
head
	^self tables at: 'head'
%
method: Font
header
	^header ifNil: [header := FontHeader fromBytes: self head contents]
%
method: Font
hhea
	^self tables at: 'hhea'
%
method: Font
hmtx
	^self tables at: 'hmtx'
%
method: Font
italicAngle
	^self post italicAngle
%
method: Font
maxp
	^self tables at: 'maxp'
%
method: Font
nameAt: nameId
	"<String | nil>"

	^self nameTable nameAt: nameId
%
method: Font
nameOfGlyph: aGlyphId
	"<String>"

	^self cff nameOfGlyph: aGlyphId
%
method: Font
nameTable
	^self tables at: 'name'
%
method: Font
notdefGlyph
	"<Glyph>
	glyph for undefined character codes"

	^self glyphs first
%
method: Font
numberOfHMetrics
	"<Integer>
	Number of horizontal metrics."

	^self hhea numberOfHMetrics
%
method: Font
numGlyphs
	"<Integer>
	Number of glyphs."

	^self maxp numGlyphs
%
method: Font
numTables
	"<Integer>
	Number of tables."

	^numTables
%
method: Font
os2
	^self tables at: 'OS/2'
%
method: Font
pdfFlags
	| flags |
	flags := super pdfFlags.
	self forceBold ifTrue: [
		flags := flags bitOr: 2r01000000000000000000].
	^flags
%
method: Font
platformTable
	"<CmapSubtable"

	^self cmap platformTable
%
method: Font
post
	^self tables at: 'post'
%
method: Font
postScriptName
	^self nameAt: 6
%
method: Font
rangeShift
	"<Integer>
	NumTables x 16-searchRange."

	^rangeShift
%
method: Font
searchRange
	"<Integer>
	(Maximum power of 2 <= numTables) x 16."

	^searchRange
%
method: Font
setWidth
	^self os2 widthClass / 10.0
%
method: Font
sfntVersion
	"<String> (Fixed ??!)
	0x00010000 for version 1.0
	OpenType fonts that contain TrueType outlines should use the value of 1.0 for the sfnt version. OpenType fonts containing CFF data should use the tag 'OTTO' as the sfnt version number.
	NOTE: The Apple specification for TrueType fonts allows for 'true' and 'typ1' for sfnt version. These version tags should not be used for fonts which contain OpenType tables."

	^sfntVersion
%
method: Font
tables
	"<Dictionary key: String value: OpenTypeTable>"

	^tables ifNil: [Dictionary new beImmutable]
%
method: Font
tables: aDictionary
	tables := aDictionary
%
method: Font
tabularGlyphIds
	"<SequenceableCollection of: Integer>
	cached GIDs"

	^tabularGlyphIds ifNil: [
		tabularGlyphIds := (0 to: self numGlyphs - 1) select: [:gid |
			'*.' , self tabularSuffix match: (self nameOfGlyph: gid)]]
%
method: Font
tabularSuffix
	"<String>"

	^tabularSuffix ifNil: [
		| oneGlyph |
		oneGlyph := self glyphAtUnicode: $1 asInteger.
		tabularSuffix := self tabularSuffixes
			detect: [:suffix |
			(self glyphNamed: oneGlyph name , '.' , suffix) notNil]
			ifNone: [
			'']]
%
method: Font
tabularSuffixes
	^#('tab' 'lt' 'fitted' 'tf' 'lftab')
%
method: Font
tabularVariantAt: aGlyph ifAbsent: absentBlock
	"<Glyph>"

	^self tabularVariants at: aGlyph ifAbsent: absentBlock
%
method: Font
tabularVariantAt: aGlyph put: aTabularGlyph
	"<Glyph>"

	^self tabularVariants at: aGlyph put: aTabularGlyph
%
method: Font
tabularVariantOf: aGlyph
	"<Glyph | nil>
	Preliminary - This should make use of the GDEF table of the font"

	| tabular |
	aGlyph ifNil: [
		^nil].
	tabular := self tabularVariantOrGlyph: aGlyph.
	tabular = aGlyph ifTrue: [
		^nil].
	^tabular
%
method: Font
tabularVariantOrGlyph: aGlyph
	"<Glyph>
	the variant or aGlyph if not found.
	Adds the lookup to the cache of tabular variant for speed.
	
	Preliminary - This should make use of the GDEF table of the font"

	aGlyph ifNil: [
		^nil].
	^self tabularVariantAt: aGlyph ifAbsent: [
		| glyph possibleName suffix |
		glyph := aGlyph.
		suffix := self tabularSuffix.
		suffix isEmpty ifTrue: [
			^self tabularVariantAt: aGlyph put: glyph].
		possibleName := aGlyph name , '.' , suffix.
		(self glyphNamed: possibleName)
			ifNil: [
			| altGlyphs |
			altGlyphs := ((self tabularSuffixes copyWithout: suffix) collect: [:altSuffix |
				self glyphNamed: aGlyph name , '.' , altSuffix]) select: #notNil.
			altGlyphs notEmpty ifTrue: [
				glyph := altGlyphs first]]
			ifNotNil: [:tabGlyph |
			glyph := tabGlyph].
		self tabularVariantAt: aGlyph put: glyph]
%
method: Font
tabularVariants
	"<Dictionary key: Glyph value: Glyph>"

	^tabularVariants ifNil: [tabularVariants := Dictionary new]
%
method: Font
undefinedGlyph
	^self glyphs first
%
method: Font
weight
	^self os2 weightClass
%
category: 'accessing metrics'
method: Font
ascender
	^self os2 typoAscender
%
method: Font
capHeight
	^self os2 capHeight
%
method: Font
descender
	^self os2 typoDescender
%
method: Font
fontBBox
	^self header fontBBox
%
method: Font
hMetrics
	"<Array of: HorMetric>
	Horizontal metrics."

	^self hmtx hMetrics
%
method: Font
leftSideBearingOfUnicode: unicode
	^(self glyphAtUnicode: unicode) leftSideBearing
%
method: Font
stemV
	^self os2 stemV
%
method: Font
underlinePosition
	^self post psUnderlinePosition
%
method: Font
underlineThickness
	^self post underlineThickness
%
method: Font
unitsPerEm
	"<Integer>
	Valid range is from 16 to 16384. This value should be a power of 2 for fonts that have TrueType outlines"

	^self header unitsPerEm
%
method: Font
widthOfUndefinedGlyph
	^self notdefGlyph width
%
method: Font
widths
	"<Array of: Integer>"

	^self hMetrics collect: #advanceWidth
%
method: Font
xHeight
	^self os2 xHeight
%
category: 'initialize-release'
method: Font
initializeFilename: fileString content: aFileContentByteArray
	filename := fileString.
	fileContent := aFileContentByteArray.
	self initializeFromBytes
%
method: Font
initializeFromBytes
	| rst head |
	rst := self fileContent readStream.
	sfntVersion := (rst next: 4) asString.
	head := ByteReadStream bigEndianOn: (rst next: 8).
	numTables := head nextUnsignedShort.
	searchRange := head nextUnsignedShort.
	entrySelector := head nextUnsignedShort.
	rangeShift := head nextUnsignedShort.
	tables := Valuemap new.
	self numTables timesRepeat: [
		| table |
		table := Table newFor: self from: rst.
		self tables at: table tag put: table]
%
category: 'printing'
method: Font
printOn: stream
	stream
		nextPutAll: 'OpenTypePS(';
		nextPutAll: self postScriptName;
		nextPut: $)
%
method: Font
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'sfntVersion' value: self sfntVersion).
	args add: (printer constant: 'numTables' value: self numTables).
	args add: (printer constant: 'searchRange' value: self searchRange).
	args add: (printer constant: 'entrySelector' value: self entrySelector).
	args add: (printer constant: 'rangeShift' value: self rangeShift).
	args add: (printer dictionary: 'tables' value: self tables).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: Font
canDisplayCharacter: aCharacter
	^(self glyphIndexAtUnicode: aCharacter asInteger) notNil
%
method: Font
canDisplayUnencodedGlyphs
	^true
%
method: Font
hasTabularGlyphs
	^self tabularGlyphIds notEmpty
%
method: Font
isFixedPitch
	^self post isFixedPitch
%
method: Font
isItalic
	^self os2 isItalic
%
method: Font
isScreenFontInstalled
	"is the font used on this machine?"

	^self isUsedOnScreen
%
category: 'instance creation'
classmethod: FontHeader
fromBytes: aByteArray
	| rst version fontRevision checkSumAdjustment |
	rst := ByteReadStream bigEndianOn: aByteArray.
	version := rst nextOpenTypeFixedVersion.
	fontRevision := rst nextOpenTypeFixed.
	checkSumAdjustment := rst nextUnsignedLong.
	rst nextUnsignedLong = self magicNumber ifFalse: [
		self error: 'magicNumber is not correct'].
	^self
		version: version
		fontRevision: fontRevision
		checkSumAdjustment: checkSumAdjustment
		flags: rst nextUnsignedShort
		unitsPerEm: rst nextUnsignedShort
		created: rst nextOpenTypeLongDateTime
		modified: rst nextOpenTypeLongDateTime
		glyphBBox: (rst nextShort @ rst nextShort corner: rst nextShort @ rst nextShort)
		macStyle: rst nextUnsignedShort
		lowestRecPPEM: rst nextUnsignedShort
		fontDirectionHint: rst nextShort
		indexToLocFormat: rst nextShort
		glyphDataFormat: rst nextShort
%
classmethod: FontHeader
magicNumber
	^16r5F0F3CF5
%
classmethod: FontHeader
version: versionFixedPoint fontRevision: fontRevisionFixedPoint checkSumAdjustment: checkSumAdjustmentInteger flags: flagsInteger unitsPerEm: unitsPerEmInteger created: createdTimestamp modified: modifiedTimestamp glyphBBox: glyphBBoxRectangle macStyle: macStyleInteger lowestRecPPEM: lowestRecPPEMInteger fontDirectionHint: fontDirectionHintInteger indexToLocFormat: indexToLocFormatInteger glyphDataFormat: glyphDataFormatInteger
	| inst |
	inst := self new.
	inst
		initializeVersion: versionFixedPoint
		fontRevision: fontRevisionFixedPoint
		checkSumAdjustment: checkSumAdjustmentInteger
		flags: flagsInteger
		unitsPerEm: unitsPerEmInteger
		created: createdTimestamp
		modified: modifiedTimestamp
		glyphBBox: glyphBBoxRectangle
		macStyle: macStyleInteger
		lowestRecPPEM: lowestRecPPEMInteger
		fontDirectionHint: fontDirectionHintInteger
		indexToLocFormat: indexToLocFormatInteger
		glyphDataFormat: glyphDataFormatInteger.
	^inst
%
category: 'specification'
classmethod: FontHeader
localSpecification
	<constant: #version class: #(#FixedPoint) comment: 'should be 1.0'>
	<constant: #fontRevision class: #(#FixedPoint) comment: 'Set by font manufacturer'>
	<constant: #checkSumAdjustment class: #(#Integer)>
	<constant: #flags class: #(#Integer) comment: 'Bit 0: Baseline for font at y=0;
Bit 1: Left sidebearing point at x=0;
Bit 2: Instructions may depend on point size;
Bit 3: Force ppem to integer values for all internal scaler math; may use fractional ppem sizes if this bit is clear;
Bit 4: Instructions may alter advance width (the advance widths might not scale linearly);
Bits 5-10: These should be set according to Apple''s specification . However, they are not implemented in OpenType.
Bit 11: Font data is âlosslessâ as a results of having been subjected to optimizing transformation and/or compression (such as e.g. compression mechanisms defined by ISO/IEC 14496-18, MicroType Express, WOFF 2.0 or similar) where the original font functionality and features are retained but the binary compatibility between input and output font files is not guaranteed. As a result of the applied transform, the âDSIGâ Table may also be invalidated.
Bit 12: Font converted (produce compatible metrics)
Bit 13: Font optimized for ClearTypeâ¢. Note, fonts that rely on embedded bitmaps (EBDT) for rendering should not be considered optimized for ClearType, and therefore should keep this bit cleared.
Bit 14: Last Resort font. If set, indicates that the glyphs encoded in the cmap subtables are simply generic symbolic representations of code point ranges and donât truly represent support for those code points. If unset, indicates that the glyphs encoded in the cmap subtables represent proper support for those code points.
Bit 15: Reserved, set to 0 '>
	<constant: #unitsPerEm class: #(#Integer) comment: 'Valid range is from 16 to 16384. This value should be a power of 2 for fonts that have TrueType outlines.'>
	<constant: #created class: #(#Timestamp)>
	<constant: #modified class: #(#Timestamp)>
	<constant: #glyphBBox class: #(#Rectangle) comment: 'For all glyph bounding boxes.'>
	<constant: #macStyle class: #(#Integer) comment: 'Bit 0: Bold (if set to 1);
Bit 1: Italic (if set to 1)
Bit 2: Underline (if set to 1)
Bit 3: Outline (if set to 1)
Bit 4: Shadow (if set to 1)
Bit 5: Condensed (if set to 1)
Bit 6: Extended (if set to 1)
Bits 7-15: Reserved (set to 0).
Note that the macStyle bits must agree with the ''OS/2'' table fsSelection bits. The fsSelection bits are used over the macStyle bits in Microsoft Windows. The PANOSE values and ''post'' table values are ignored for determining bold or italic fonts.'>
	<constant: #lowestRecPPEM class: #(#Integer) comment: 'Smallest readable size in pixels.'>
	<constant: #fontDirectionHint class: #(#Integer) comment: 'Deprecated (Set to 2).
0: Fully mixed directional glyphs;
1: Only strongly left to right;
2: Like 1 but also contains neutrals;
-1: Only strongly right to left;
-2: Like -1 but also contains neutrals.'>
	<constant: #indexToLocFormat class: #(#Integer) comment: '0 for short offsets, 1 for long.'>
	<constant: #glyphDataFormat class: #(#Integer) comment: '0 for current format.'>
%
category: 'accessing'
method: FontHeader
checkSumAdjustment
	"<Integer>"

	^checkSumAdjustment
%
method: FontHeader
created
	"<Timestamp>"

	^created
%
method: FontHeader
flags
	"<Integer>
	Bit 0: Baseline for font at y=0;
Bit 1: Left sidebearing point at x=0;
Bit 2: Instructions may depend on point size;
Bit 3: Force ppem to integer values for all internal scaler math; may use fractional ppem sizes if this bit is clear;
Bit 4: Instructions may alter advance width (the advance widths might not scale linearly);
Bits 5-10: These should be set according to Apple's specification . However, they are not implemented in OpenType.
Bit 11: Font data is âlosslessâ as a results of having been subjected to optimizing transformation and/or compression (such as e.g. compression mechanisms defined by ISO/IEC 14496-18, MicroType Express, WOFF 2.0 or similar) where the original font functionality and features are retained but the binary compatibility between input and output font files is not guaranteed. As a result of the applied transform, the âDSIGâ Table may also be invalidated.
Bit 12: Font converted (produce compatible metrics)
Bit 13: Font optimized for ClearTypeâ¢. Note, fonts that rely on embedded bitmaps (EBDT) for rendering should not be considered optimized for ClearType, and therefore should keep this bit cleared.
Bit 14: Last Resort font. If set, indicates that the glyphs encoded in the cmap subtables are simply generic symbolic representations of code point ranges and donât truly represent support for those code points. If unset, indicates that the glyphs encoded in the cmap subtables represent proper support for those code points.
Bit 15: Reserved, set to 0 "

	^flags
%
method: FontHeader
fontBBox
	"<Rectangle>"

	^self glyphBBox
%
method: FontHeader
fontDirectionHint
	"<Integer>
	Deprecated (Set to 2).
0: Fully mixed directional glyphs;
1: Only strongly left to right;
2: Like 1 but also contains neutrals;
-1: Only strongly right to left;
-2: Like -1 but also contains neutrals."

	^fontDirectionHint
%
method: FontHeader
fontRevision
	"<FixedPoint>
	Set by font manufacturer"

	^fontRevision
%
method: FontHeader
glyphBBox
	"<Rectangle>
	For all glyph bounding boxes."

	^glyphBBox
%
method: FontHeader
glyphDataFormat
	"<Integer>
	0 for current format."

	^glyphDataFormat
%
method: FontHeader
indexToLocFormat
	"<Integer>
	0 for short offsets, 1 for long."

	^indexToLocFormat
%
method: FontHeader
lowestRecPPEM
	"<Integer>
	Smallest readable size in pixels."

	^lowestRecPPEM
%
method: FontHeader
macStyle
	"<Integer>
	Bit 0: Bold (if set to 1);
Bit 1: Italic (if set to 1)
Bit 2: Underline (if set to 1)
Bit 3: Outline (if set to 1)
Bit 4: Shadow (if set to 1)
Bit 5: Condensed (if set to 1)
Bit 6: Extended (if set to 1)
Bits 7-15: Reserved (set to 0).
Note that the macStyle bits must agree with the 'OS/2' table fsSelection bits. The fsSelection bits are used over the macStyle bits in Microsoft Windows. The PANOSE values and 'post' table values are ignored for determining bold or italic fonts."

	^macStyle
%
method: FontHeader
modified
	"<Timestamp>"

	^modified
%
method: FontHeader
unitsPerEm
	"<Integer>
	Valid range is from 16 to 16384. This value should be a power of 2 for fonts that have TrueType outlines."

	^unitsPerEm
%
method: FontHeader
version
	"<FixedPoint>
	should be 1.0"

	^version
%
category: 'converting'
method: FontHeader
asBytes
	"<ByteArray>"

	| wst |
	wst := ByteWriteStream bigEndianOn: (ByteArray new: 54).
	wst nextPutOpenTypeFixedVersion: self version.
	wst nextPutOpenTypeFixed: self fontRevision.
	wst nextPutUnsignedLong: self checkSumAdjustment.
	wst nextPutUnsignedLong: self class magicNumber.
	wst nextPutUnsignedShort: self flags.
	wst nextPutUnsignedShort: self unitsPerEm.
	wst nextPutOpenTypeLongDateTime: self created.
	wst nextPutOpenTypeLongDateTime: self modified.
	wst nextPutShort: self glyphBBox origin x.
	wst nextPutShort: self glyphBBox origin y.
	wst nextPutShort: self glyphBBox corner x.
	wst nextPutShort: self glyphBBox corner y.
	wst nextPutUnsignedShort: self macStyle.
	wst nextPutUnsignedShort: self lowestRecPPEM.
	wst nextPutShort: self fontDirectionHint.
	wst nextPutShort: self indexToLocFormat.
	wst nextPutShort: self glyphDataFormat.
	^wst contents
%
category: 'initialize-release'
method: FontHeader
initializeVersion: versionFixedPoint fontRevision: fontRevisionFixedPoint checkSumAdjustment: checkSumAdjustmentInteger flags: flagsInteger unitsPerEm: unitsPerEmInteger created: createdTimestamp modified: modifiedTimestamp glyphBBox: glyphBBoxRectangle macStyle: macStyleInteger lowestRecPPEM: lowestRecPPEMInteger fontDirectionHint: fontDirectionHintInteger indexToLocFormat: indexToLocFormatInteger glyphDataFormat: glyphDataFormatInteger
	version := versionFixedPoint.
	fontRevision := fontRevisionFixedPoint.
	checkSumAdjustment := checkSumAdjustmentInteger.
	flags := flagsInteger.
	unitsPerEm := unitsPerEmInteger.
	created := createdTimestamp.
	modified := modifiedTimestamp.
	glyphBBox := glyphBBoxRectangle.
	macStyle := macStyleInteger.
	lowestRecPPEM := lowestRecPPEMInteger.
	fontDirectionHint := fontDirectionHintInteger.
	indexToLocFormat := indexToLocFormatInteger.
	glyphDataFormat := glyphDataFormatInteger.
	self beImmutable
%
category: 'printing'
method: FontHeader
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'version' value: self version).
	args add: (printer constant: 'fontRevision' value: self fontRevision).
	args add: (printer constant: 'checkSumAdjustment' value: self checkSumAdjustment).
	args add: (printer constant: 'flags' value: self flags).
	args add: (printer constant: 'unitsPerEm' value: self unitsPerEm).
	args add: (printer constant: 'created' value: self created).
	args add: (printer constant: 'modified' value: self modified).
	args add: (printer constant: 'glyphBBox' value: self glyphBBox).
	args add: (printer constant: 'macStyle' value: self macStyle).
	args add: (printer constant: 'lowestRecPPEM' value: self lowestRecPPEM).
	args add: (printer constant: 'fontDirectionHint' value: self fontDirectionHint).
	args add: (printer constant: 'indexToLocFormat' value: self indexToLocFormat).
	args add: (printer constant: 'glyphDataFormat' value: self glyphDataFormat).
	^printer printvalue: self arguments: args
%
category: 'accessing'
classmethod: Fpgm
tag
	^'fpgm'
%
category: 'accessing'
classmethod: Gasp
tag
	^'gasp'
%
category: 'accessing'
classmethod: Gdef
tag
	^'GDEF'
%
category: 'accessing'
classmethod: Glyf
tag
	^'glyf'
%
category: 'instance creation'
classmethod: Glyph
id: idInteger name: nameSymbol charString: charStringCharstring code: codeInteger hMetric: hMetricHorMetric
	| inst |
	inst := self new.
	inst
		initializeId: idInteger
		name: nameSymbol
		charString: charStringCharstring
		code: codeInteger
		hMetric: hMetricHorMetric.
	^inst
%
category: 'specification'
classmethod: Glyph
localSpecification
	<constant: #id class: #(#Integer)>
	<constant: #name class: #(#Symbol)>
	<constant: #charString class: #(#PDFtalk #Fonts #CFF #Charstring)>
	<constant: #code class: #(#Integer)>
	<constant: #hMetric class: #(#HorMetric)>
%
category: 'accessing'
method: Glyph
asCharacter
	"<Character | nil>"

	^(PostScript at: #CharacterNames) characterNamed: self name
%
method: Glyph
charString
	"<Charstring>"

	^charString
%
method: Glyph
code
	"<Integer>"

	^code
%
method: Glyph
hMetric
	"<HorMetric>"

	^hMetric
%
method: Glyph
id
	"<Integer>"

	^id
%
method: Glyph
leftSideBearing
	"<Number> in font space"

	^self hMetric lsb
%
method: Glyph
name
	"<Symbol>"

	^name
%
method: Glyph
postScriptName
	"<Symbol>"

	^self name
%
method: Glyph
unicode
	"<Integer>
	System code for this character. Can be two byte big"

	^self asCharacter ifNil: [Character illegalCode] ifNotNil: [:char | char asInteger]
%
method: Glyph
width
	^self hMetric advanceWidth
%
category: 'initialize-release'
method: Glyph
initializeId: idInteger name: nameSymbol charString: charStringCharstring code: codeInteger hMetric: hMetricHorMetric
	id := idInteger.
	name := nameSymbol.
	charString := charStringCharstring.
	code := codeInteger.
	hMetric := hMetricHorMetric.
	self beImmutable
%
category: 'printing'
method: Glyph
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'id' value: self id).
	args add: (printer constant: 'name' value: self name).
	args add: (printer constant: 'charString' value: self charString).
	args add: (printer constant: 'code' value: self code).
	args add: (printer constant: 'hMetric' value: self hMetric).
	^printer printvalue: self arguments: args
%
category: 'accessing'
classmethod: Gpos
tag
	^'GPOS'
%
category: 'accessing'
method: Gpos
FeatureList
	"Offset 	FeatureList 	Offset to FeatureList table-from beginning of GPOS table"

	^self bytes unsignedShortAt: 7
%
method: Gpos
LookupList
	"Offset 	LookupList 	Offset to LookupList table-from beginning of GPOS table"

	^self bytes unsignedShortAt: 9
%
method: Gpos
ScriptCount
	"uint16 	ScriptCount 	Number of ScriptRecords"

	^self bytes unsignedShortAt: self ScriptList + 1
%
method: Gpos
ScriptList
	"Offset 	ScriptList 	Offset to ScriptList table-from beginning of GPOS table"

	^self bytes unsignedShortAt: 5
%
method: Gpos
scriptRecords
	"struct 	ScriptRecord[ScriptCount] 	Array of ScriptRecords - listed alphabetically by ScriptTag"

	| start |
	start := self ScriptList + 3.
	^(1 to: self ScriptCount) collect: [:index |
		| pos |
		pos := start + ((index - 1) * 6).
		ScriptRecord
			tag: (self contents copyFrom: pos to: pos + 3) asString
			offset: (self bytes unsignedShortAt: pos + 4)]
%
method: Gpos
Version
	"Fixed 	Version 	Version of the GPOS table-initially = 0x00010000"

	| signed fraction |
	signed := self bytes shortAt: 1.
	fraction := self bytes unsignedShortAt: 3.
	^signed + (fraction / 16rFFFF)
%
category: 'accessing'
classmethod: Gsub
tag
	^'GSUB'
%
category: 'accessing'
classmethod: Hdmx
tag
	^'hdmx'
%
category: 'accessing'
classmethod: Head
tag
	^'head'
%
category: 'accessing'
method: Head
checkSumAdjustment
	"ULONG 	checkSumAdjustment 	To compute: set it to 0, sum the entire font as ULONG, then store 0xB1B0AFBA - sum."

	^self bytes unsignedLongAt: 9
%
method: Head
created
	"<Timestamp>"
	"LONGDATETIME 	created 	Number of seconds since 12:00 midnight that started January 1st 1904 in GMT/UTC time zone. 64-bit integer"

	^Timestamp fromOpenTypeLongDateTime: (self bytes longLongAt: 21)
%
method: Head
flags
	"USHORT 	flags 	
Bit 0: Baseline for font at y=0;
Bit 1: Left sidebearing point at x=0;
Bit 2: Instructions may depend on point size;
Bit 3: Force ppem to integer values for all internal scaler math; may use fractional ppem sizes if this bit is clear;
Bit 4: Instructions may alter advance width (the advance widths might not scale linearly);
Bits 5-10: These should be set according to Apple's specification . However, they are not implemented in OpenType.
Bit 11: Font data is âlosslessâ as a results of having been subjected to optimizing transformation and/or compression (such as e.g. compression mechanisms defined by ISO/IEC 14496-18, MicroType Express, WOFF 2.0 or similar) where the original font functionality and features are retained but the binary compatibility between input and output font files is not guaranteed. As a result of the applied transform, the âDSIGâ Table may also be invalidated.
Bit 12: Font converted (produce compatible metrics)
Bit 13: Font optimized for ClearTypeâ¢. Note, fonts that rely on embedded bitmaps (EBDT) for rendering should not be considered optimized for ClearType, and therefore should keep this bit cleared.
Bit 14: Last Resort font. If set, indicates that the glyphs encoded in the cmap subtables are simply generic symbolic representations of code point ranges and donât truly represent support for those code points. If unset, indicates that the glyphs encoded in the cmap subtables represent proper support for those code points.
Bit 15: Reserved, set to 0 "

	^self bytes unsignedShortAt: 17
%
method: Head
fontBBox
	^self xMin @ self yMin corner: self xMax @ self yMax
%
method: Head
fontDirectionHint
	"SHORT 	fontDirectionHint 	Deprecated (Set to 2).
0: Fully mixed directional glyphs;
1: Only strongly left to right;
2: Like 1 but also contains neutrals;
-1: Only strongly right to left;
-2: Like -1 but also contains neutrals. 1"

	^self bytes shortAt: 49
%
method: Head
glyphDataFormat
	"SHORT 	glyphDataFormat 	0 for current format."

	^self bytes shortAt: 53
%
method: Head
indexToLocFormat
	"SHORT 	indexToLocFormat 	0 for short offsets, 1 for long."

	^self bytes shortAt: 51
%
method: Head
lowestRecPPEM
	"USHORT 	lowestRecPPEM 	Smallest readable size in pixels."

	^self bytes unsignedShortAt: 47
%
method: Head
macStyle
	"USHORT 	macStyle 	
Bit 0: Bold (if set to 1);
Bit 1: Italic (if set to 1)
Bit 2: Underline (if set to 1)
Bit 3: Outline (if set to 1)
Bit 4: Shadow (if set to 1)
Bit 5: Condensed (if set to 1)
Bit 6: Extended (if set to 1)
Bits 7-15: Reserved (set to 0)."

	^self bytes unsignedShortAt: 45
%
method: Head
magicNumber
	"ULONG 	magicNumber 	Set to 0x5F0F3CF5."

	^self bytes unsignedLongAt: 13
%
method: Head
modified
	"<Timestamp>"
	"LONGDATETIME 	modified 	Number of seconds since 12:00 midnight that started January 1st 1904 in GMT/UTC time zone. 64-bit integer"

	^Timestamp fromOpenTypeLongDateTime: (self bytes longLongAt: 29)
%
method: Head
unitsPerEm
	"USHORT 	unitsPerEm 	Valid range is from 16 to 16384. This value should be a power of 2 for fonts that have TrueType outlines."

	^self bytes unsignedShortAt: 19
%
method: Head
xMax
	"SHORT 	xMax 	For all glyph bounding boxes."

	^self bytes shortAt: 41
%
method: Head
xMin
	"SHORT 	xMin 	For all glyph bounding boxes."

	^self bytes shortAt: 37
%
method: Head
yMax
	"SHORT 	yMax 	For all glyph bounding boxes."

	^self bytes shortAt: 43
%
method: Head
yMin
	"SHORT 	yMin 	For all glyph bounding boxes."

	^self bytes shortAt: 39
%
category: 'accessing'
classmethod: Hhea
tag
	^'hhea'
%
category: 'accessing'
method: Hhea
advanceWidthMax
	"UFWORD 	advanceWidthMax 	Maximum advance width value in 'hmtx' table."

	^self bytes unsignedShortAt: 11
%
method: Hhea
ascender
	"FWORD 	Ascender 	Typographic ascent.  (Distance from baseline of highest ascender)"

	^self bytes shortAt: 5
%
method: Hhea
caretOffset
	"SHORT 	caretOffset 	The amount by which a slanted highlight on a glyph needs to be shifted to produce the best appearance. Set to 0 for non-slanted fonts"

	^self bytes shortAt: 23
%
method: Hhea
caretSlopeRise
	"SHORT 	caretSlopeRise 	Used to calculate the slope of the cursor (rise/run); 1 for vertical."

	^self bytes shortAt: 19
%
method: Hhea
caretSlopeRun
	"SHORT 	caretSlopeRun 	0 for vertical."

	^self bytes shortAt: 21
%
method: Hhea
descender
	"FWORD 	Descender 	Typographic descent.  (Distance from baseline of lowest descender)"

	^self bytes shortAt: 7
%
method: Hhea
lineGap
	"FWORD 	LineGap 	Typographic line gap. Negative LineGap values are treated as zero in Windows 3.1, System 6, and System 7."

	^self bytes shortAt: 9
%
method: Hhea
metricDataFormat
	"SHORT 	metricDataFormat 	0 for current format."

	^self bytes shortAt: 33
%
method: Hhea
minLeftSideBearing
	"FWORD 	minLeftSideBearing 	Minimum left sidebearing value in 'hmtx' table."

	^self bytes shortAt: 13
%
method: Hhea
minRightSideBearing
	"FWORD 	minRightSideBearing 	Minimum right sidebearing value; calculated as Min(aw - lsb - (xMax - xMin))."

	^self bytes shortAt: 15
%
method: Hhea
numberOfHMetrics
	"USHORT  	numberOfHMetrics  	Number of hMetric entries in 'hmtx' table"

	^self bytes unsignedShortAt: 35
%
method: Hhea
versionMajor
	"Fixed 	Table version number 	0x00010000 for version 1.0."

	^self bytes unsignedShortAt: 1
%
method: Hhea
versionMinor
	"Fixed 	Table version number 	0x00010000 for version 1.0."

	^self bytes unsignedShortAt: 3
%
method: Hhea
xMaxExtent
	"FWORD 	xMaxExtent 	Max(lsb + (xMax - xMin))."

	^self bytes shortAt: 17
%
category: 'accessing'
classmethod: Hmtx
tag
	^'hmtx'
%
category: 'accessing'
method: Hmtx
hMetrics
	"<Array of HorMetric>"

	^hMetrics ifNil: [
		| bytes offset metrics advanceWidth |
		bytes := self bytes.
		offset := 1.
		metrics := OrderedCollection new: self file numGlyphs.
		self file numberOfHMetrics timesRepeat: [
			advanceWidth := bytes unsignedShortAt: offset.
			offset := offset + 2.
			metrics add: (HorMetric advanceWidth: advanceWidth lsb: (bytes shortAt: offset)).
			offset := offset + 2].
		self file numGlyphs - self file numberOfHMetrics timesRepeat: [
			metrics add: (HorMetric advanceWidth: advanceWidth lsb: (bytes shortAt: offset)).
			offset := offset + 2].
		hMetrics := metrics asArray]
%
category: 'instance creation'
classmethod: HorMetric
advanceWidth: advanceWidthInteger lsb: lsbInteger
	| inst |
	inst := self new.
	inst initializeAdvanceWidth: advanceWidthInteger lsb: lsbInteger.
	^inst
%
category: 'specification'
classmethod: HorMetric
localSpecification
	<constant: #advanceWidth class: #(#Integer)>
	<constant: #lsb class: #(#Integer)>
%
category: 'accessing'
method: HorMetric
advanceWidth
	"<Integer>"

	^advanceWidth
%
method: HorMetric
lsb
	"<Integer>"

	^lsb
%
category: 'initialize-release'
method: HorMetric
initializeAdvanceWidth: advanceWidthInteger lsb: lsbInteger
	advanceWidth := advanceWidthInteger.
	lsb := lsbInteger.
	self beImmutable
%
category: 'printing'
method: HorMetric
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'advanceWidth' value: self advanceWidth).
	args add: (printer constant: 'lsb' value: self lsb).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: IndexedSegment
startCode: startCodeInteger endCode: endCodeInteger delta: deltaInteger glyphIdArrayIndex: glyphIdArrayIndexInteger
	| inst |
	inst := self new.
	inst
		initializeStartCode: startCodeInteger
		endCode: endCodeInteger
		delta: deltaInteger
		glyphIdArrayIndex: glyphIdArrayIndexInteger.
	^inst
%
category: 'specification'
classmethod: IndexedSegment
localSpecification
	<constant: #glyphIdArrayIndex class: #(#Core #Integer) comment: 'Index in glyphIdArray'>
%
category: 'accessing'
method: IndexedSegment
codes
	^(self startCode to: self endCode) collect: [:code | self glyphArrayIndexOf: code]
%
method: IndexedSegment
glyphArrayIndexOf: aCharacterCode
	^self glyphIdArrayIndex + (aCharacterCode - self startCode)
%
method: IndexedSegment
glyphIdArrayIndex
	"<Integer>
	Index in glyphIdArray"

	^glyphIdArrayIndex
%
method: IndexedSegment
glyphIndexAtCode: aCharacterCode glyphs: glyphIdArray
	"<Integer | nil>"

	| i id |
	self startCode <= aCharacterCode ifFalse: [
		^nil].
	i := self glyphArrayIndexOf: aCharacterCode.
	id := glyphIdArray at: i + 1.
	id isZero ifTrue: [
		^nil].
	^id + self delta bitAnd: 16rFFFF
%
category: 'initialize-release'
method: IndexedSegment
initializeStartCode: startCodeInteger endCode: endCodeInteger delta: deltaInteger glyphIdArrayIndex: glyphIdArrayIndexInteger
	startCode := startCodeInteger.
	endCode := endCodeInteger.
	delta := deltaInteger.
	glyphIdArrayIndex := glyphIdArrayIndexInteger.
	self beImmutable
%
category: 'printing'
method: IndexedSegment
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'startCode' value: self startCode).
	args add: (printer constant: 'endCode' value: self endCode).
	args add: (printer constant: 'delta' value: self delta).
	args add: (printer constant: 'glyphIdArrayIndex' value: self glyphIdArrayIndex).
	^printer printvalue: self arguments: args
%
category: 'accessing'
classmethod: Jstf
tag
	^'JSTF'
%
category: 'accessing'
classmethod: Kern
tag
	^'kern'
%
category: 'accessing'
classmethod: Loca
tag
	^'loca'
%
category: 'accessing'
classmethod: Ltsh
tag
	^'LTSH'
%
category: 'accessing'
classmethod: Math
tag
	^'MATH'
%
category: 'accessing'
classmethod: Maxp
tag
	^'maxp'
%
category: 'accessing'
method: Maxp
numGlyphs
	"USHORT 	The number of glyphs in the font."

	^self bytes unsignedShortAt: 5
%
method: Maxp
version
	"Fixed 	Table version number
		0x00005000 for version 0.5 	(Note the difference in the representation of a non-zero fractional part, in Fixed numbers.)
		0x00010000 for version 1.0."

	| major minor |
	major := self bytes unsignedShortAt: 1.
	minor := self bytes unsignedShortAt: 3.
	(major isZero and: [
	minor = 16r5000]) ifTrue: [
			^0.5].
	(major = 1 and: [
	minor isZero]) ifTrue: [
			^1.0].
	^self error: 'invalid version number'
%
category: 'accessing'
classmethod: Name
tag
	^'name'
%
category: 'accessing'
method: Name
count
	"USHORT  	count  	Number of name records."

	^self bytes unsignedShortAt: 3
%
method: Name
format
	"USHORT  	format  	Format selector (=0)."

	^self bytes unsignedShortAt: 1
%
method: Name
nameAt: nameId
	"<String | nil>
	returns a string from the names table with ID nameId.
	Incoplete implementation (should be able to map language and encoding IDs properly).
	So, you may not get the string in the correct encoding/language, 
	but if there is a string with the right ID, one of its variants will be returned."

	| allNames platformNames |
	allNames := self nameRecords select: [:nameRecord | nameRecord nameID = nameId].
	allNames isEmpty ifTrue: [
		^nil].
	platformNames := allNames select: [:nameRecord | nameRecord platformID = self platformID].
	platformNames isEmpty ifTrue: [
		^allNames first string].
	^platformNames first string
%
method: Name
nameRecords
	"<SequenceableCollection of: NameRecord>
	NameRecord  	nameRecord[count]  	The name records where count is the number of records."

	| length start stringOffset |
	stringOffset := self stringOffset.
	^(1 to: self count) collect: [:i |
		| offset bytes platformID encodingID languageID nameID |
		offset := 7 + (12 * (i - 1)).
		bytes := ByteReadStream bigEndianOn: (self contents copyFrom: offset to: offset + 11).
		platformID := bytes nextUnsignedShort.
		encodingID := bytes nextUnsignedShort.
		languageID := bytes nextUnsignedShort.
		nameID := bytes nextUnsignedShort.
		length := bytes nextUnsignedShort.
		start := stringOffset + bytes nextUnsignedShort.
		NameRecord
			platformID: platformID
			encodingID: encodingID
			languageID: languageID
			nameID: nameID
			bytes: (self contents copyFrom: start + 1 to: start + length)]
%
method: Name
stringOffset
	"USHORT  	stringOffset  	Offset to start of string storage (from start of table)."

	^self bytes unsignedShortAt: 5
%
category: 'accessing'
classmethod: NameRecord
shortNameIdDescriptions
	"self shortNameIdDescriptions"

	| dict |
	dict := IdentityDictionary new.
	dict at: 0 put: 'Copyright'.
	dict at: 1 put: 'Font Family'.
	dict at: 2 put: 'Font Subfamily'.
	dict at: 3 put: 'Unique font identifier'.
	dict at: 4 put: 'Full font name'.
	dict at: 5 put: 'Version'.
	dict at: 6 put: 'Postscript name'.
	dict at: 7 put: 'Trademark'.
	dict at: 8 put: 'Manufacturer'.
	dict at: 9 put: 'Designer'.
	dict at: 10 put: 'Description'.
	dict at: 11 put: 'URL Vendor'.
	dict at: 12 put: 'URL Designer'.
	dict at: 13 put: 'License'.
	dict at: 14 put: 'License Info URL'.
	dict at: 15 put: 'Reserved'.
	dict at: 16 put: 'Preferred Family'.
	dict at: 17 put: 'Preferred Subfamily'.
	dict at: 18 put: 'Compatible Full (Macintosh only)'.
	dict at: 19 put: 'Sample text'.
	dict at: 20 put: 'PostScript CID findfont name'.
	^dict
%
category: 'instance creation'
classmethod: NameRecord
platformID: platformIDSmallInteger encodingID: encodingIDSmallInteger languageID: languageIDSmallInteger nameID: nameIDSmallInteger bytes: bytesByteArray
	| inst |
	inst := self new.
	inst
		initializePlatformID: platformIDSmallInteger
		encodingID: encodingIDSmallInteger
		languageID: languageIDSmallInteger
		nameID: nameIDSmallInteger
		bytes: bytesByteArray.
	^inst
%
category: 'specification'
classmethod: NameRecord
localSpecification
	<constant: #platformID class: #(#SmallInteger)>
	<constant: #encodingID class: #(#SmallInteger)>
	<constant: #languageID class: #(#SmallInteger)>
	<constant: #nameID class: #(#SmallInteger)>
	<constant: #bytes class: #(#ByteArray)>
%
category: 'accessing'
method: NameRecord
bytes
	"<ByteArray>"

	^bytes
%
method: NameRecord
encodingID
	"<Integer>"

	^encodingID
%
method: NameRecord
encodingString
	"<String>"

	| strings |
	strings := self encodingStrings.
	strings isEmpty ifTrue: [
		^'(-)'].
	^strings at: self encodingID + 1
%
method: NameRecord
encodingStrings
	"<Array of: String>"

	self platformID = 3 ifTrue: [
		^#('Symbol' 'Unicode BMP only' 'ShiftJIS' 'PRC' 'Big5' 'Wansung' 'Johab' 'Reserved' 'Reserved' 'Reserved' 'Unicode full repertoire')].
	self platformID = 1 ifTrue: [
		^#('Roman' 'Japanese' 'Chinese (Traditional)' 'Korean' 'Arabic' 'Hebrew' 'Greek' 'Russian' 'RSymbol' 'Devanagari' 'Gurmukhi' 'Gujarati' 'Oriya' 'Bengali' 'Tamil' 'Telugu' 'Kannada' 'Malayalam' 'Sinhalese' 'Burmese' 'Khmer' 'Thai' 'Laotian' 'Georgian' 'Armenian' 'Chinese (Simplified)' 'Tibetan' 'Mongolian' 'Geez' 'Slavic' 'Vietnamese' 'Sindhi' 'Uninterpreted')].
	self platformID = 0 ifTrue: [
		^#('Unicode 1.0 semantics' 'Unicode 1.1 semantics' 'ISO 10646:1993 semantics' 'Unicode 2.0 and onwards semantics, Unicode BMP only.' 'Unicode 2.0 and onwards semantics, Unicode full repertoire.')].
	^#()
%
method: NameRecord
languageID
	"<Integer>"

	^languageID
%
method: NameRecord
nameID
	"<Integer>"

	^nameID
%
method: NameRecord
platformID
	"<Integer>"

	^platformID
%
method: NameRecord
platformString
	"<String>"

	^self platformStrings at: self platformID + 1
%
method: NameRecord
platformStrings
	"<Array of: String>"

	^#('Unicode' 'Macintosh' 'ISO' 'Microsoft' 'Custom')
%
method: NameRecord
shortDescription
	"<String>"

	^self class shortNameIdDescriptions at: self nameID ifAbsent: ['no description']
%
method: NameRecord
string
	"<String>"

	(self platformID = 3 and: [
	self encodingID = 1]) ifTrue: [
			| rst wst |
			rst := ByteReadStream bigEndianOn: self bytes.
			wst := WriteStream on: (Unicode16 new: rst size // 2).
			[rst atEnd] whileFalse: [
				wst nextPut: (Character codePoint: rst nextUnsignedShort)].
			^wst contents].
	(self platformID = 1 and: [
	self encodingID = 0]) ifTrue: [
			^ISOLatin withAll: self bytes].
	^String withAll: self bytes
%
category: 'initialize-release'
method: NameRecord
initializePlatformID: platformIDSmallInteger encodingID: encodingIDSmallInteger languageID: languageIDSmallInteger nameID: nameIDSmallInteger bytes: bytesByteArray
	platformID := platformIDSmallInteger.
	encodingID := encodingIDSmallInteger.
	languageID := languageIDSmallInteger.
	nameID := nameIDSmallInteger.
	bytes := bytesByteArray.
	self beImmutable
%
category: 'printing'
method: NameRecord
printOn: stream
	stream
		nextPutAll: self class name asString;
		nextPut: $[;
		nextPutAll: self platformString;
		nextPut: $â;
		nextPutAll: self encodingString;
		nextPut: $â;
		nextPutAll: self languageID printString;
		nextPut: $â;
		nextPutAll: self nameID printString;
		nextPut: $(;
		nextPutAll: self shortDescription;
		nextPut: $);
		nextPut: $];
		nextPutAll: self string
%
method: NameRecord
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'platformID' value: self platformID).
	args add: (printer constant: 'encodingID' value: self encodingID).
	args add: (printer constant: 'languageID' value: self languageID).
	args add: (printer constant: 'nameID' value: self nameID).
	args add: (printer constant: 'bytes' value: self bytes).
	^printer printvalue: self arguments: args
%
category: 'accessing'
classmethod: OS2
tag
	^'OS/2'
%
category: 'accessing'
method: OS2
avgCharWidth
	"Format: 	2-byte signed short
Units: 			Pels / em units
Title: 			Average weighted escapement.
Description: 	The Average Character Width parameter specifies the arithmetic average of the escapement (width) of all non-zero width glyphs in the font.
Comments: 		The value for xAvgCharWidth is calculated by obtaining the arithmetic average of the width of all non-zero width glyphs in the font. 
				Furthermore, it is strongly recommended that implementers do not rely on this value for computing layout for lines of text. 
				Especially, for cases where complex scripts are used."

	^self bytes shortAt: 3
%
method: OS2
capHeight
	"Format: 	SHORT
Description: 	This metric specifies the distance between the baseline and the approximate height of uppercase letters measured in FUnits. This value would normally be specified by a type designer but in situations where that is not possible, for example when a legacy font is being converted, the value may be set equal to the top of the unscaled and unhinted glyph bounding box of the glyph encoded at U+0048 (LATIN CAPITAL LETTER H). If no glyph is encoded in this position the field should be set to 0.

This metric, if specified, can be used in systems that specify type size by capital height measured in millimeters. It can also be used as an alignment metric; the top of a drop capital, for instance, can be aligned to the sCapHeight metric of the first line of text. "

	^self bytes shortAt: 89
%
method: OS2
firstCharIndex
	"Format: 	2-byte USHORT
Description: 	The minimum Unicode index (character code) in this font, according to the cmap subtable for platform ID 3 and platform- specific encoding ID 0 or 1. For most fonts supporting Win-ANSI or other character sets, this value would be 0x0020. This field cannot represent supplementary character values (codepoints greater than 0xFFFF). Fonts that support supplementary characters should set the value in this field to 0xFFFF if the minimum index value is a supplementary character."

	^self bytes unsignedShortAt: 65
%
method: OS2
fsSelection
	"Format: 	2-byte bit field.
Title: 	Font selection flags.
Description: 	Contains information concerning the nature of the font patterns, as follows:

Bit # 	macStyle bit 	C definition 			Description
0 		bit 1 			ITALIC 				Font contains Italic characters, otherwise they are upright.
1 	  					UNDERSCORE 		Characters are underscored.
2 	  					NEGATIVE 			Characters have their foreground and background reversed.
3 	  					OUTLINED 			Outline (hollow) characters, otherwise they are solid.
4 	  					STRIKEOUT 		Characters are overstruck.
5 		bit 0 			BOLD 				Characters are emboldened.
6 	  					REGULAR 			Characters are in the standard weight/style for the font.

Comments: 	All undefined bits must be zero.

This field contains information on the original design of the font. Bits 0 & 5 can be used to determine if the font was designed with these features or whether some type of machine simulation was performed on the font to achieve this appearance. Bits 1-4 are rarely used bits that indicate the font is primarily a decorative or special purpose font.

If bit 6 is set, then bits 0 and 5 must be clear, else the behavior is undefined. As noted above, the settings of bits 0 and 1 must be reflected in the macStyle bits in the 'head' table. While bit 6 on implies that bits 0 and 1 of macStyle are clear (along with bits 0 and 5 of fsSelection), the reverse is not true. Bits 0 and 1 of macStyle (and 0 and 5 of fsSelection) may be clear and that does not give any indication of whether or not bit 6 of fsSelection is clear (e.g., Arial Light would have all bits cleared; it is not the regular version of Arial)."

	^self bytes unsignedShortAt: 63
%
method: OS2
fsType
	"Format: 	2-byte unsigned short
Title: 			Type flags.
Description: 	Indicates font embedding licensing rights for the font. 
				Embeddable fonts may be stored in a document. 
				When a document with embedded fonts is opened on a system that does not have the font installed (the remote system), 
				the embedded font may be loaded for temporary (and in some cases, permanent) use on that system 
				by an embedding-aware application. Embedding licensing rights are granted by the vendor of the font.

				The OpenType Font Embedding DLL Specification and DLL release notes 
				describe the APIs used to implement support for OpenType font embedding and loading. 
				Applications that implement support for font embedding, 
				either through use of the Font Embedding DLL or through other means, 
				must not embed fonts which are not licensed to permit embedding. 
				Further, applications loading embedded fonts for temporary use (see Preview & Print and Editable embedding below) 
				must delete the fonts when the document containing the embedded font is closed.

				This version of the OS/2 table makes bits 0 - 3 a set of exclusive bits. 
				In other words, at most one bit in this range may be set at a time. 
				The purpose is to remove misunderstandings caused by previous behavior of using the least restrictive of the bits that are set.

Bit 	Bit Mask 	Description
  	0x0000 		Installable Embedding: No fsType bit is set. Thus fsType is zero.
				Fonts with this setting indicate that they may be embedded and permanently installed on the remote system by an application. 
				The user of the remote system acquires the identical rights, obligations and licenses for that font as the original purchaser of the font, 
				and is subject to the same end-user license agreement, copyright, design patent, and/or trademark as was the original purchaser.
0 	0x0001 		Reserved, must be zero.
1 	0x0002 		Restricted License embedding:
				Fonts that have only this bit set must not be modified, embedded or exchanged in any manner 
				without first obtaining permission of the legal owner.
				Caution: For Restricted License embedding to take effect, it must be the only level of embedding selected.
2 	0x0004 		Preview & Print embedding: When this bit is set, the font may be embedded, and temporarily loaded on the remote system. 
				Documents containing Preview & Print fonts must be opened 'read-only;' no edits can be applied to the document.
3 	0x0008 		Editable embedding: When this bit is set, the font may be embedded but must only be installed temporarily on other systems. 
				In contrast to Preview & Print fonts, documents containing Editable fonts may be opened 
				for reading, editing is permitted, and changes may be saved.
4-7 	  			Reserved, must be zero.
8 	0x0100 		No subsetting: When this bit is set, the font may not be subsetted prior to embedding. 
				Other embedding restrictions specified in bits 0-3 and 9 also apply.
9 	0x0200 		Bitmap embedding only: When this bit is set, only bitmaps contained in the font may be embedded. 
				No outline data may be embedded. 
				If there are no bitmaps available in the font, then the font is considered unembeddable and the embedding services will fail. 
				Other embedding restrictions specified in bits 0-3 and 8 also apply.
10-15 	  		Reserved, must be zero. "

	^self bytes unsignedShortAt: 9
%
method: OS2
lastCharIndex
	"Format: 	2-byte USHORT
Description: 	The maximum Unicode index (character code) in this font, according to the cmap subtable for platform ID 3 and encoding ID 0 or 1. This value depends on which character sets the font supports. This field cannot represent supplementary character values (codepoints greater than 0xFFFF). Fonts that support supplementary characters should set the value in this field to 0xFFFF."

	^self bytes unsignedShortAt: 67
%
method: OS2
sFamilyClass
	"Format:  	2-byte signed short
Title: 	Font-family class and subclass.
Description: 	This parameter is a classification of font-family design.
Comments: 	The font class and font subclass are registered values assigned by IBM to each font family. This parameter is intended for use in selecting an lternate font when the requested font is not available. The font class is the most general and the font subclass is the most specific. The high byte of this field contains the family class, while the low byte contains the family subclass. More information about this field."

	^self bytes shortAt: 31
%
method: OS2
stemV
	"<Integer>"
	"usWeightClass - roughly estimate StemV.
Estimation is based on the following expression:
	stemv = (os2->usWeightClass/65)*(os2->usWeightClass/65)+50
I've found this expression in some Adobe document (lost). We use
this expression also, otherwise, we must analyze glyph data.

found in:
(This is dvipdfmx, an eXtended version of dvipdfm by Mark A. Wicks.
Copyright (C) 2002 by Jin-Hwan Cho and Shunsaku Hirata,
the dvipdfmx project team <dvipdfmx@project.ktug.or.kr>)"

	| wc |
	wc := self weightClass / 65.
	^(wc * wc + 50) rounded
%
method: OS2
typoAscender
	"Format: 	SHORT
Description: 	The typographic ascender for this font. Remember that this is not the same as the Ascender value in the 'hhea' table, which Apple defines in a far different manner. One good source for sTypoAscender in Latin based fonts is the Ascender value from an AFM file. For CJK fonts see below.

The suggested usage for sTypoAscender is that it be used in conjunction with unitsPerEm to compute a typographically correct default line spacing. The goal is to free applications from Macintosh or Windows-specific metrics which are constrained by backward compatibility requirements. These new metrics, when combined with the character design widths, will allow applications to lay out documents in a typographically correct and portable fashion. These metrics will be exposed through Windows APIs. Macintosh applications will need to access the 'sfnt' resource and parse it to extract this data from the 'OS/2' table.

For CJK (Chinese, Japanese, and Korean) fonts that are intended to be used for vertical writing (in addition to horizontal writing), the required value for sTypoAscender is that which describes the top of the of the ideographic em-box. For example, if the ideographic em-box of the font extends from coordinates 0,-120 to 1000,880 (that is, a 1000x1000 box set 120 design units below the Latin baseline), then the value of sTypoAscender must be set to 880. Failing to adhere to these requirements will result in incorrect vertical layout."

	^self bytes shortAt: 69
%
method: OS2
typoDescender
	"Format: 	SHORT
Description: 	The typographic descender for this font. Remember that this is not the same as the Descender value in the 'hhea' table, which Apple defines in a far different manner. One good source for sTypoDescender in Latin based fonts is the Descender value from an AFM file. For CJK fonts see below.

The suggested usage for sTypoDescender is that it be used in conjunction with unitsPerEm to compute a typographically correct default line spacing. The goal is to free applications from Macintosh or Windows-specific metrics which are constrained by backward compatability requirements. These new metrics, when combined with the character design widths, will allow applications to lay out documents in a typographically correct and portable fashion. These metrics will be exposed through Windows APIs. Macintosh applications will need to access the 'sfnt' resource and parse it to extract this data from the 'OS/2' table (unless Apple exposes the 'OS/2' table through a new API).

For CJK (Chinese, Japanese, and Korean) fonts that are intended to be used for vertical writing (in addition to horizontal writing), the required value for sTypoDescender is that which describes the bottom of the of the ideographic em-box. For example, if the ideographic em-box of the font extends from coordinates 0,-120 to 1000,880 (that is, a 1000x1000 box set 120 design units below the Latin baseline), then the value of sTypoDescender must be set to -120. Failing to adhere to these requirements will result in incorrect vertical layout. "

	^self bytes shortAt: 71
%
method: OS2
version
	"Format: 	2-byte unsigned short
Units: 			n/a
Title: 			OS/2 table version number.
Description: 	The version number for this OS/2 table.
Comments: 		The version number allows for identification of the precise contents and layout for the OS/2 table. 
				The version number for this layout is three (3). 
				Versions zero (0, TrueType rev 1.5), one (1, TrueType rev 1.66), and two (2, OpenType rev 1.2) have been used previously."

	^self bytes unsignedShortAt: 1
%
method: OS2
weightClass
	"Format: 	2-byte unsigned short
Title: 			Weight class.
Description: 	Indicates the visual weight (degree of blackness or thickness of strokes) of the characters in the font.
Comments:
Value 	Description 				C Definition (from windows.h)
100 	Thin 					FW_THIN
200 	Extra-light (Ultra-light) 	FW_EXTRALIGHT
300 	Light 					FW_LIGHT
400 	Normal (Regular) 		FW_NORMAL
500 	Medium 				FW_MEDIUM
600 	Semi-bold (Demi-bold) 	FW_SEMIBOLD
700 	Bold 					FW_BOLD
800 	Extra-bold (Ultra-bold) 	FW_EXTRABOLD
900 	Black (Heavy) 			FW_BLACK"

	^self bytes unsignedShortAt: 5
%
method: OS2
widthClass
	"Format: 	2-byte unsigned short
Title: 			Width class.
Description: 	Indicates a relative change from the normal aspect ratio (width to height ratio) as specified by a font designer for the glyphs in a font.
Comments: 		Although every character in a font may have a different numeric aspect ratio, 
				each character in a font of normal width has a relative aspect ratio of one. 
				When a new type style is created of a different width class (either by a font designer or by some automated means) 
				the relative aspect ratio of the characters in the new font is 
				some percentage greater or less than those same characters in the normal font -- it is this difference that this parameter specifies.

Value 	Description 			C Definition 							% of normal
1 		Ultra-condensed 	FWIDTH_ULTRA_CONDENSED 	50
2 		Extra-condensed 	FWIDTH_EXTRA_CONDENSED 	62.5
3 		Condensed 			FWIDTH_CONDENSED 			75
4 		Semi-condensed 	FWIDTH_SEMI_CONDENSED 		87.5
5 		Medium (normal) 	FWIDTH_NORMAL 					100
6 		Semi-expanded 		FWIDTH_SEMI_EXPANDED 		112.5
7 		Expanded 			FWIDTH_EXPANDED 				125
8 		Extra-expanded 		FWIDTH_EXTRA_EXPANDED 		150
9 		Ultra-expanded 		FWIDTH_ULTRA_EXPANDED 		200"

	^self bytes unsignedShortAt: 7
%
method: OS2
xHeight
	"Format: 	SHORT
Description: 	This metric specifies the distance between the baseline and the approximate height of non-ascending lowercase letters measured in FUnits. This value would normally be specified by a type designer but in situations where that is not possible, for example when a legacy font is being converted, the value may be set equal to the top of the unscaled and unhinted glyph bounding box of the glyph encoded at U+0078 (LATIN SMALL LETTER X). If no glyph is encoded in this position the field should be set to 0.

This metric, if specified, can be used in font substitution: the xHeight value of one font can be scaled to approximate the apparent size of another. "

	^self bytes shortAt: 87
%
category: 'testing'
method: OS2
canEmbed
	^(self fsType bitAnd: 2r1110) > 2
%
method: OS2
canSubset
	^(self fsType bitAnd: 2r1100000000) isZero
%
method: OS2
hasRestriction
	^self fsType isZero not
%
method: OS2
isItalic
	^(self fsSelection bitAnd: 1) isZero not
%
category: 'accessing'
classmethod: Pclt
tag
	^'PCLT'
%
category: 'accessing'
classmethod: Post
tag
	^'post'
%
category: 'accessing'
method: Post
isFixedPitch
	"<Boolean>"
	"ULONG 	isFixedPitch 	Set to 0 if the font is proportionally spaced, non-zero if the font is not proportionally spaced (i.e. monospaced)."

	^(self bytes unsignedLongAt: 13) isZero not
%
method: Post
italicAngle
	"<Number>"
	"Fixed 	italicAngle 	Italic angle in counter-clockwise degrees from the vertical. 
						Zero for upright text, negative for text that leans to the right (forward)."

	^(self bytes longAt: 5) / 16r10000
%
method: Post
maxMemType1
	"<Integer>"
	"ULONG 	maxMemType1 		Maximum memory usage when an OpenType font is downloaded as a Type 1 font."

	^self bytes unsignedLongAt: 29
%
method: Post
maxMemType42
	"<Integer>"
	"ULONG 	maxMemType42 		Maximum memory usage when an OpenType font is downloaded."

	^self bytes unsignedLongAt: 21
%
method: Post
minMemType1
	"<Integer>"
	"ULONG 	minMemType1 		Minimum memory usage when an OpenType font is downloaded as a Type 1 font."

	^self bytes unsignedLongAt: 25
%
method: Post
minMemType42
	"<Integer>"
	"ULONG 	minMemType42 		Minimum memory usage when an OpenType font is downloaded."

	^self bytes unsignedLongAt: 17
%
method: Post
psUnderlinePosition
	^self underlinePosition - (self underlineThickness / 2)
%
method: Post
underlinePosition
	"<Integer>"
	"FWord 	underlinePosition
This is the suggested distance of the top of the underline from the baseline (negative values indicate below baseline).
The PostScript definition of this FontInfo dictionary key (the y coordinate of the center of the stroke) is not used for historical reasons. The value of the PostScript key may be calculated by subtracting half the underlineThickness from the value of this field."

	^self bytes shortAt: 9
%
method: Post
underlineThickness
	"<Integer>"
	"FWord 	underlineThickness 		Suggested values for the underline thickness."

	^self bytes shortAt: 11
%
method: Post
versionMajor
	"Fixed 	Table version number 	0x00010000 for version 1.0."

	^self bytes unsignedShortAt: 1
%
method: Post
versionMinor
	"Fixed 	Table version number 	0x00010000 for version 1.0."

	^self bytes unsignedShortAt: 3
%
category: 'accessing'
classmethod: Prep
tag
	^'prep'
%
category: 'instance creation'
classmethod: ScriptRecord
tag: tagInteger offset: offsetInteger
	| inst |
	inst := self new.
	inst initializeTag: tagInteger offset: offsetInteger.
	^inst
%
category: 'specification'
classmethod: ScriptRecord
localSpecification
	<constant: #tag class: #(#Integer) comment: 'Tag 	ScriptTag 	4-byte ScriptTag identifier'>
	<constant: #offset class: #(#Integer) comment: 'Offset 	Script 	Offset to Script table-from beginning of ScriptList'>
%
category: 'accessing'
method: ScriptRecord
offset
	"<Integer>
	Offset 	Script 	Offset to Script table-from beginning of ScriptList"

	^offset
%
method: ScriptRecord
tag
	"<Integer>
	Tag 	ScriptTag 	4-byte ScriptTag identifier"

	^tag
%
category: 'initialize-release'
method: ScriptRecord
initializeTag: tagInteger offset: offsetInteger
	tag := tagInteger.
	offset := offsetInteger.
	self beImmutable
%
category: 'printing'
method: ScriptRecord
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'tag' value: self tag).
	args add: (printer constant: 'offset' value: self offset).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: Segment
startCode: startCodeInteger endCode: endCodeInteger delta: deltaInteger
	| inst |
	inst := self new.
	inst initializeStartCode: startCodeInteger endCode: endCodeInteger delta: deltaInteger.
	^inst
%
category: 'specification'
classmethod: Segment
localSpecification
	<constant: #startCode class: #(#Integer) comment: 'Start character code'>
	<constant: #endCode class: #(#Integer) comment: 'End characterCode, last=0xFFFF'>
	<constant: #delta class: #(#Integer) comment: 'Delta for all character codes'>
%
category: 'accessing'
method: Segment
characterCodes
	^self startCode to: self endCode
%
method: Segment
codes
	"<ByteArray>"

	^(self startCode to: self endCode) collect: [:code |
		self glyphIndexAtCode: code glyphs: #()]
%
method: Segment
delta
	"<Integer>
	Delta for all character codes"

	^delta
%
method: Segment
endCode
	"<Integer>
	End characterCode, last=0xFFFF"

	^endCode
%
method: Segment
glyphIndexAtCode: aCharacterCode glyphs: glyphIdArray
	"<Integer | nil>"

	(self isEndsegment or: [
	self startCode > aCharacterCode]) ifTrue: [
			^nil].
	^aCharacterCode + self delta bitAnd: 16rFFFF
%
method: Segment
numberOfCodes
	"<Integer>"

	^self endCode - self startCode + 1
%
method: Segment
startCode
	"<Integer>
	Start character code"

	^startCode
%
category: 'initialize-release'
method: Segment
initializeStartCode: startCodeInteger endCode: endCodeInteger delta: deltaInteger
	startCode := startCodeInteger.
	endCode := endCodeInteger.
	delta := deltaInteger.
	self beImmutable
%
category: 'printing'
method: Segment
printOn: stream
	self isEndsegment ifTrue: [
		stream nextPutAll: 'Endsegment'.
		^self].
	stream
		nextPutAll: self class name asString;
		nextPutAll: ' start: ';
		nextPutAll: self startCode printString;
		nextPutAll: ' [';
		nextPutAll: self numberOfCodes printString;
		nextPutAll: '] ';
		nextPutAll: self codes printString
%
method: Segment
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'startCode' value: self startCode).
	args add: (printer constant: 'endCode' value: self endCode).
	args add: (printer constant: 'delta' value: self delta).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: Segment
isEndsegment
	^self endCode = Character illegalCode
%
category: 'accessing'
classmethod: Svg
tag
	^'SVG '
%
category: 'accessing'
classmethod: Table
platformID
	"0  	Unicode
	1 	Macintosh
	2 	ISO [deprecated]
	3 	Windows
	4 	Custom"

	^0
%
classmethod: Table
tag
	"<ByteString4>"

	^self subclassResponsibility
%
category: 'instance creation'
classmethod: Table
newFor: aOpenTypeFile from: aReadStream
	| bytes tagString pos |
	tagString := (aReadStream next: 4) asString.
	bytes := ByteReadStream bigEndianOn: (aReadStream next: 12).
	bytes nextUnsignedLong.	"UNUSED:	checkSum"
	pos := aReadStream position.
	^[
	aReadStream position: bytes nextUnsignedLong.
	(self subclassFor: tagString)
		tag: tagString
		file: aOpenTypeFile
		contents: (aReadStream next: bytes nextUnsignedLong)] ensure: [
			aReadStream position: pos]
%
classmethod: Table
subclassFor: tagString
	"assumes that all subclasses are defined in namespace ((PDFtalk at: #Fonts) at: #OpenType)"

	| classOrganizer |
	classOrganizer := ClassOrganizer
		pdfNewWithRoot: Table
		symbolList: (SymbolList with: ((PDFtalk at: #Fonts) at: #OpenType)).
	^(classOrganizer subclassesOf: Table) detect: [:subclass | subclass tag = tagString] ifNone: [
		self]
%
classmethod: Table
tag: tagString file: aOpenTypeFile contents: contentsByteArray
	| inst |
	inst := self new.
	inst initializeTag: tagString file: aOpenTypeFile contents: contentsByteArray.
	^inst
%
category: 'instance creation optional'
classmethod: Table
tag: tagString
	| inst |
	inst := self new.
	inst initializeTag: tagString file: nil contents: nil.
	^inst
%
category: 'accessing'
method: Table
bytes
	^ByteReadStream bigEndianOn: self contents
%
method: Table
contents
	"<ByteArray>"

	^contents ifNil: [#[]]
%
method: Table
file
	"<OpenType.File>"

	^file
%
method: Table
platformID
	^self class platformID
%
method: Table
tag
	"<String> (ULONG)
	4 -byte identifier.
	ULONG interpreted as ASCII characters"

	^tag
%
category: 'initialize-release'
method: Table
initializeTag: tagString file: aOpenTypeFile contents: contentsByteArray
	tag := tagString.
	file := aOpenTypeFile.
	contents := contentsByteArray
%
category: 'printing'
method: Table
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'tag' value: self tag).
	args add: (printer optional: 'contents' value: contents).
	^printer printvalue: self arguments: args
%
category: 'accessing'
classmethod: Vdmx
tag
	^'VDMX'
%
category: 'accessing'
classmethod: Vhea
tag
	^'vhea'
%
category: 'accessing'
classmethod: Vmtx
tag
	^'vmtx'
%
category: 'accessing'
classmethod: Vorg
tag
	^'VORG'
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Fonts'.
	dict at: #comment put: 'Objects of PDF Font Data structures (PDF 32000_2008.pdf clause 9.5, pp. 253)

A font shall be represented in PDF as a dictionary specifying the type of font, its PostScript name, its encoding, and information that can be used to provide a substitute when the font program is not available. Optionally, the font program may be embedded as a stream object in the PDF file.'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Fonts'.
	dict at: #storeVersion put: '2.5.0.2'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components := (components at:  #'PDFtalk Fonts') at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class Font
DoIt
TypedDictionary
	subclass: 'Font'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Font category: 'PDFtalk Fonts'.
	Font comment: 'PDF Font as defined in PDF 32000_2008.pdf, clause 9.5, pp. 253.

A font shall be represented in PDF as a dictionary specifying the type of font, its PostScript name, its encoding, 
and information that can be used to provide a substitute when the font program is not available. 
Optionally, the font program may be embedded as a stream object in the PDF file.

The font types are distinguished by the Subtype entry in the font dictionary. 
Type 0 fonts are called composite fonts; other types of fonts are called simple fonts. 
In addition to fonts, PDF supports two classes of font-related objects, called CIDFonts and CMaps. 
CIDFonts, like fonts, are collections of glyphs; however, a CIDFont shall not be used directly but only as a component of a Type 0 font.'.
	Font namespacePath: #(#PDFtalk).
%
# Define class CIDFont
DoIt
Font
	subclass: 'CIDFont'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CIDFont category: 'PDFtalk Fonts'.
	CIDFont comment: 'PDF CIDFonts as defined in PDF 32000_2008.pdf, clause 9.7.4, pp. 269.

A CIDFont program contains glyph descriptions that are accessed using a CID as the character selector. 
There are two types of CIDFonts:

	â¢	A Type 0 CIDFont contains glyph descriptions based on CFF

NOTE	The term âType 0â when applied to a CIDFont has a different meaning than for a âType 0 fontâ.

	â¢	A Type 2 CIDFont contains glyph descriptions based on the TrueType font format

A CIDFont dictionary is a PDF object that contains information about a CIDFont program. 
Although its Type value is Font, a CIDFont is not actually a font. 
It does not have an Encoding entry, it may not be listed in the Font subdictionary of a resource dictionary, and it may not be used as the operand of the Tf operator. 
It shall be used only as a descendant of a Type 0 font. 
The CMap in the Type 0 font shall be what defines the encoding that maps character codes to CIDs in the CIDFont.'.
	CIDFont namespacePath: #(#PDFtalk).
%
# Define class CIDFontType2
DoIt
CIDFont
	subclass: 'CIDFontType2'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CIDFontType2 category: 'PDFtalk Fonts'.
	CIDFontType2 comment: 'PDF Glyph Selection in CIDFonts as defined in PDF 32000_2008.pdf, clause 9.7.4.2, pp. 270.

Type 0 and Type 2 CIDFonts handle the mapping from CIDs to glyph descriptions in somewhat different ways.

For Type 2, the CIDFont program is actually a TrueType font program, which has no native notion of CIDs. 
In a TrueType font program, glyph descriptions are identified by glyph index values. 
Glyph indices are internal to the font and are not defined consistently from one font to another. 
Instead, a TrueType font program contains a âcmapâ table that provides mappings directly from character codes to glyph indices for one or more predefined encodings.

TrueType font programs are integrated with the CID-keyed font architecture in one of two ways, 
depending on whether the font program is embedded in the PDF file:

	â¢	If the TrueType font program is embedded, the Type 2 CIDFont dictionary shall contain a CIDToGIDMap entry 
		that maps CIDs to the glyph indices for the appropriate glyph descriptions in that font program.

	â¢	If the TrueType font program is not embedded but is referenced by name, the Type 2 CIDFont dictionary shall not 
		contain a CIDToGIDMap entry, since it is not meaningful to refer to glyph indices in an external font program. 
		In this case, CIDs shall not participate in glyph selection, and only predefined CMaps may be used with this CIDFont. 
		The conforming reader shall select glyphs by translating characters from the encoding specified by the 
		predefined CMap to one of the encodings in the TrueType fontâs âcmapâ table. 
		The means by which this is accomplished are implementation-dependent.

Even though the CIDs are not used to select glyphs in a Type 2 CIDFont, they shall always be used to determine the glyph metrics, as described in the next sub-clause.

Every CIDFont shall contain a glyph description for CID 0, which is analogous to the .notdef character name in simple fonts.'.
	CIDFontType2 namespacePath: #(#PDFtalk).
%
# Define class FontDescriptor
DoIt
TypedDictionary
	subclass: 'FontDescriptor'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FontDescriptor category: 'PDFtalk Fonts'.
	FontDescriptor comment: 'PDF FontDescriptor as defined in PDF 32000_2008.pdf pp. 281.

A font descriptor specifies metrics and other attributes of a simple font or a CIDFont as a whole, as distinct from the metrics of individual glyphs.
These font metrics provide information that enables a conforming reader to synthesize a substitute font or select a similar font when the font program is unavailable.
The font descriptor may also be used to embed the font program in the PDF file.

Font descriptors shall not be used with Type 0 fonts. Beginning with PDF 1.5, font descriptors may be used with Type 3 fonts.

A font descriptor is a dictionary whose entries specify various font attributes. 
All integer values shall be units in glyph space.'.
	FontDescriptor namespacePath: #(#PDFtalk).
%
# Define class Type1
DoIt
Font
	subclass: 'Type1'
	instVarNames: #(usedExtraGlyphs)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Type1 category: 'PDFtalk Fonts'.
	Type1 comment: 'PDF Type1 Font as defined in PDF 32000_2008.pdf, clause 9.6.2, pp. 254.

A Type 1 font program is a stylized PostScript program that describes glyph shapes. 
It uses a compact encoding for the glyph descriptions, and it includes hint information that enables high-quality rendering even at small sizes and low resolutions.

NOTE 1		Details on this format are provided in a separate specification, Adobe Type 1 Font Format. 
			An alternative, more compact but functionally equivalent representation of a Type 1 font program is 
			documented in Adobe Technical Note #5176, The Compact Font Format Specification.
NOTE 2		Although a Type 1 font program uses PostScript language syntax, using it does not require 
			a full PostScript interpreter; a specialized Type 1 font interpreter suffices.

Some entries are optional for the standard 14 fonts, but are required otherwise.'.
	Type1 namespacePath: #(#PDFtalk).
%
# Define class Encoding
DoIt
PDFDictionary
	subclass: 'Encoding'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Encoding category: 'PDFtalk Fonts'.
	Encoding comment: 'PDF Character Encoding as defined in PDF 32000_2008.pdf, section 9.6.6, pp. 262.

A font programâs built-in encoding can be overridden or altered by including an Encoding entry in the PDF font dictionary. The possible encoding modifications depend on the font type, as discussed below. The value of the Encoding entry is either a named encoding (the name of one of the predefined encodings MacRomanEncoding, MacExpertEncoding, or WinAnsiEncoding) or an encoding dictionary.'.
	Encoding namespacePath: #(#PDFtalk).
%
# Define class CIDFontType0
DoIt
CIDFont
	subclass: 'CIDFontType0'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CIDFontType0 category: 'PDFtalk Fonts'.
	CIDFontType0 comment: 'PDF Glyph Selection in CIDFonts as defined in PDF 32000_2008.pdf, clause 9.7.4.2, pp. 270.

Type 0 and Type 2 CIDFonts handle the mapping from CIDs to glyph descriptions in somewhat different ways.

For Type 0, the CIDFont program contains glyph descriptions that are identified by CIDs. 
The CIDFont program identifies the character collection by a CIDSystemInfo dictionary, which should be copied into the PDF CIDFont dictionary. 
CIDs shall be interpreted uniformly in all CIDFont programs supporting a given character collection, 
whether the program is embedded in the PDF file or obtained from an external source.

When the CIDFont contains an embedded font program that is represented in the Compact Font Format (CFF), 
the FontFile3 entry in the font descriptor may be CIDFontType0C or OpenType. 
There are two cases, depending on the contents of the font program:
	â¢	The âCFFâ font program has a Top DICT that uses CIDFont operators: 
		The CIDs shall be used to determine the GID value for the glyph procedure using the charset table in the CFF program. 
		The GID value shall then be used to look up the glyph procedure using the CharStrings INDEX table.

NOTE	Although in many fonts the CID value and GID value are the same, the CID and GID values may differ.

	â¢	The âCFFâ font program has a Top DICT that does not use CIDFont operators: 
		The CIDs shall be used directly as GID values, and the glyph procedure shall be retrieved using the CharStrings INDEX.'.
	CIDFontType0 namespacePath: #(#PDFtalk).
%
# Define class Type3
DoIt
Font
	subclass: 'Type3'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Type3 category: 'PDFtalk Fonts'.
	Type3 comment: 'PDF Type3 Font as defined in PDF 32000_2008.pdf, clause 9.6.5, pp. 258.

Type 3 fonts differ from the other fonts supported by PDF. 
A Type 3 font dictionary defines the font; 
font dictionaries for other fonts simply contain information about the font and refer to a separate font program for the actual glyph descriptions. 
In Type 3 fonts, glyphs shall be defined by streams of PDF graphics operators. 
These streams shall be associated with glyph names. 
A separate encoding entry shall map character codes to the appropriate glyph names for the glyphs.

NOTE 1		Type 3 fonts are more flexible than Type 1 fonts because the glyph descriptions may contain arbitrary PDF graphics operators. 
			However, Type 3 fonts have no hinting mechanism for improving output at small sizes or low resolutions.'.
	Type3 namespacePath: #(#PDFtalk).
%
# Define class StandardFont
DoIt
Type1
	subclass: 'StandardFont'
	instVarNames: #(standardWidths)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	StandardFont category: 'PDFtalk Fonts'.
	StandardFont comment: 'PDF Standard Type 1 Fonts as defined in PDF 32000_2008.pdf, clause 9.6.2.2, pp. 256.

The PostScript names of 14 Type 1 fonts, known as the standard 14 fonts, are as follows: Times-Roman, Helvetica, Courier, Symbol, Times-Bold, Helvetica-Bold, Courier-Bold, ZapfDingbats, Times-Italic, Helvetica-Oblique, Courier-Oblique, Times-BoldItalic, Helvetica-BoldOblique, Courier-BoldOblique

These fonts, or their font metrics and suitable substitution fonts, shall be available to the conforming reader'.
	StandardFont namespacePath: #(#PDFtalk).
%
# Define class ToUnicodeCMap
DoIt
PDFStream
	subclass: 'ToUnicodeCMap'
	instVarNames: #(cmap)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ToUnicodeCMap category: 'PDFtalk Fonts'.
	ToUnicodeCMap comment: 'ToUnicode CMaps as defined in PDF 32000_2008.pdf, section 9.10.3, pp. 293

The CMap defined in the ToUnicode entry of the font dictionary shall follow the syntax for CMaps fully documented in Adobe Technical Note #5014, Adobe CMap and CIDFont Files Specification. Additional guidance regarding the CMap defined in this entry is provided in Adobe Technical Note #5411, ToUnicode Mapping File Tutorial. This CMap differs from an ordinary one in these ways:

	â¢	The only pertinent entry in the CMap stream dictionary is UseCMap, which may be used if the CMap is based on another ToUnicode CMap.
	â¢	The CMap file shall contain begincodespacerange and endcodespacerange operators that are consistent with the encoding that the font uses. In particular, for a simple font, the codespace shall be one byte long.
	â¢	It shall use the beginbfchar, endbfchar, beginbfrange, and endbfrange operators to define the mapping from character codes to Unicode character sequences expressed in UTF-16BE encoding.'.
	ToUnicodeCMap namespacePath: #(#PDFtalk).
%
# Define class CIDSystemInfo
DoIt
PDFDictionary
	subclass: 'CIDSystemInfo'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CIDSystemInfo category: 'PDFtalk Fonts'.
	CIDSystemInfo comment: 'PDF CIDSystemInfo Dictionaries as defined in PDF 32000_2008.pdf, clause 9.7.3, pp. 268.

CIDFont and CMap dictionaries shall contain a CIDSystemInfo entry specifying the character collection assumed by the CIDFont associated with the CMapâthat is, the interpretation of the CID numbers used by the CIDFont.
A character collection shall be uniquely identified by the Registry, Ordering, and Supplemententries in the CIDSystemInfo dictionary.
In order to be compatible, the Registry and Ordering values must be the same.

The CIDSystemInfo entry in a CIDFont is a dictionary that shall specify the CIDFontâs character collection.
The CIDFont need not contain glyph descriptions for all the CIDs in a collection; it may contain a subset.
The CIDSystemInfo entry in a CMap file shall be either a single dictionary or an array of dictionaries, depending on whether it associates codes with a single character collection or with multiple character collections.

For proper behaviour, the CIDSystemInfo entry of a CMap shall be compatible with that of the CIDFont or CIDFonts with which it is used.'.
	CIDSystemInfo namespacePath: #(#PDFtalk).
%
# Define class TrueType
DoIt
Type1
	subclass: 'TrueType'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TrueType category: 'PDFtalk Fonts'.
	TrueType comment: 'PDF TrueType Fonts as defined in PDF 32000_2008.pdf, clause 9.6.3, pp. 257.

A TrueType font dictionary may contain the same entries as a Type 1 font dictionary, with these differences:

	â¢	The value of Subtype shall be TrueType.
	â¢	The value of Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
	â¢	The value of BaseFont is derived differently.

The PostScript name for the value of BaseFont may be determined in one of two ways:

	â¢	If the TrueType font program''s ânameâ table contains a PostScript name, it shall be used.
	â¢	In the absence of such an entry in the ânameâ table, a PostScript name shall be derived from the name by which the font is known in the host operating system. 
		On a Windows system, the name shall be based on the lfFaceName field in a LOGFONT structure; 
		in the Mac OS, it shall be based on the name of the FOND resource. 
		If the name contains any SPACEs, the SPACEs shall be removed.

NOTE 1		The TrueType font format was developed by Apple Computer, Inc., and has been adopted 
			as a standard font format for the Microsoft Windows operating system. 
			Specifications for the TrueType font file format are available in Appleâs TrueType Reference Manual and 
			Microsoftâs TrueType 1.0 Font Files Technical Specification (see Bibliography).

NOTE 2		A TrueType font program may be embedded directly in a PDF file as a stream object.

NOTE 3		The Type 42 font format that is defined for PostScript does not apply to PDF.

NOTE 4		For CJK (Chinese, Japanese, and Korean) fonts, the host font systemâs font name is often encoded in the host operating systemâs script. 
			For instance, a Japanese font may have a name that is written in Japanese using some (unidentified) Japanese encoding. 
			Thus, TrueType font names may contain multiple-byte character codes, 
			each of which requires multiple characters to represent in a PDF name object (using the # notation to quote special characters as needed).'.
	TrueType namespacePath: #(#PDFtalk).
%
# Define class Type0
DoIt
Font
	subclass: 'Type0'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Type0 category: 'PDFtalk Fonts'.
	Type0 comment: 'PDF Composite Fonts as defined in PDF 32000_2008.pdf, clause 9.7, pp. 267.

A composite font, also called a Type 0 font, is one whose glyphs are obtained from a fontlike object called a CIDFont. 
A composite font shall be represented by a font dictionary whose Subtype value is Type0. 
The Type 0 font is known as the root font, and its associated CIDFont is called its descendant.

NOTE 1		Composite fonts in PDF are analogous to composite fonts in PostScript but with some limitations. 
			In particular, PDF requires that the character encoding be defined by a CMap, which is only one of several encoding methods available in PostScript. 
			Also, PostScript allows a Type 0 font to have multiple descendants, which might also be Type 0 fonts. 
			PDF supports only a single descendant, which shall be a CIDFont.

When the current font is composite, the text-showing operators shall behave differently than with simple fonts. 
For simple fonts, each byte of a string to be shown selects one glyph, whereas for composite fonts, 
a sequence of one or more bytes are decoded to select a glyph from the descendant CIDFont.

NOTE 2		This facility supports the use of very large character sets, such as those for the Chinese, Japanese, and Korean languages. 
			It also simplifies the organization of fonts that have complex encoding requirements.

This sub-clause first introduces the architecture of CID-keyed fonts, which are the only kind of composite font supported in PDF. 
Then it describes the CIDFont and CMap dictionaries, which are the PDF objects that represent the correspondingly named components of a CID-keyed font. 
Finally, it describes the Type 0 font dictionary, which combines a CIDFont and a CMap to produce a font 
whose glyphs may be accessed by means of variable-length character codes in a string to be shown.'.
	Type0 namespacePath: #(#PDFtalk).
%
# Define class MMType1
DoIt
Type1
	subclass: 'MMType1'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	MMType1 category: 'PDFtalk Fonts'.
	MMType1 comment: 'PDF Multiple Master Fonts as defined in PDF 32000_2008.pdf, clause 9.6.2.3, pp. 256.

The multiple master font format is an extension of the Type 1 font format that allows the generation of a wide variety of typeface styles from a single font program. 
This is accomplished through the presence of various design dimensions in the font.

EXAMPLE 1	Examples of design dimensions are weight (light to extra-bold) and width (condensed to expanded).

Coordinates along these design dimensions (such as the degree of boldness) are specified by numbers. 
A particular choice of numbers selects an instance of the multiple master font. 
PDFs can contain multiple master instances.

NOTE		Adobe Technical Note #5015, Type 1 Font Format Supplement, describes multiple master fonts in detail.

The font dictionary for a multiple master font instance may contain the same entries as a Type 1 font dictionary, with these differences:
	â¢	The value of Subtype shall be MMType1.
	â¢	If the PostScript name of the instance contains SPACEs (20h), the SPACEs shall be replaced by LOW LINEs (underscores) (5Fh) in the value of BaseFont. 
		For instance, as illustrated in this example, the name âMinionMM 366 465 11 â (which ends with a SPACE character) becomes /MinionMM_366_465_11_.

If the font program for a multiple master font instance is embedded in the PDF file, it shall be an ordinary Type 1 font program, not a multiple master font program. 
This font program is called a snapshot of the multiple master font instance that incorporates the chosen values of the design coordinates.'.
	MMType1 namespacePath: #(#PDFtalk).
%
# Define class CMap
DoIt
TypedStream
	subclass: 'CMap'
	instVarNames: #(cmap)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CMap category: 'PDFtalk Fonts'.
	CMap comment: 'Embedded CMap Files as defined in PDF 32000_2008.pdf, section 9.7.5.3, pp. 277

For character encodings that are not predefined, the PDF file shall contain a stream that defines the CMap. The data in the stream defines the mapping from character codes to a font number and a character selector.

Embedded CMap files shall conform to the format documented in Adobe Technical Note #5014, subject to these additional constraints:

a) If the embedded CMap file contains a usecmap reference, the CMap indicated there shall also be identified by the UseCMap entry in the CMap stream dictionary.

b) The usefont operator, if present, shall specify a font number of 0.

c) The beginbfchar and endbfchar shall not appear in a CMap that is used as the Encoding entry of a Type 0 font; however, they may appear in the definition of a ToUnicode CMap.

d) A notdef mapping, defined using beginnotdefchar, endnotdefchar, beginnotdefrange, and endnotdefrange shall be used if the normal mapping produces a CID for which no glyph is present in the associated CIDFont.

e) The beginrearrangedfont, endrearrangedfont, beginusematrix, and endusematrix operators shall not be used.'.
	CMap namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
classmethod: CIDFont
pdfTypeDefinition

	^PDFTypeDefinition
		name: #CIDFont
		supertype: #Font
		section: '9.7.4'
		documentation: 'A CIDFont program contains glyph descriptions that are accessed using a CID as the character selector. 
There are two types of CIDFonts:

	â¢	A Type 0 CIDFont contains glyph descriptions based on CFF

NOTE	The term âType 0â when applied to a CIDFont has a different meaning than for a âType 0 fontâ.

	â¢	A Type 2 CIDFont contains glyph descriptions based on the TrueType font format

A CIDFont dictionary is a PDF object that contains information about a CIDFont program. 
Although its Type value is Font, a CIDFont is not actually a font. 
It does not have an Encoding entry, it may not be listed in the Font subdictionary of a resource dictionary, and it may not be used as the operand of the Tf operator. 
It shall be used only as a descendant of a Type 0 font. 
The CMap in the Type 0 font shall be what defines the encoding that maps character codes to CIDs in the CIDFont.'
%
category: 'accessing'
method: CIDFont
stringWidth: aContentString
	| cids rst |
	cids := OrderedCollection new.
	rst := aContentString content readStream.
	[rst atEnd] whileFalse: [cids add: rst next * 256 + (rst next ifNil: [0])].
	^cids inject: 0 into: [:width :cid | width + (self widthAt: cid)]
%
method: CIDFont
widthAt: aCID
	| widths rst |
	widths := self objectAt: #W ifAbsent: [
		^self DW asSmalltalkValue].
	rst := widths asSmalltalkValue readStream.
	[rst atEnd] whileFalse: [
		| cid arrayOrCID |
		cid := rst next.
		arrayOrCID := rst next.
		arrayOrCID isSequenceable
			ifTrue: [
			((cid to: cid + arrayOrCID size - 1) includes: aCID) ifTrue: [
				^arrayOrCID at: aCID - cid + 1]]
			ifFalse: [
			| width |
			width := rst next.
			((cid to: arrayOrCID) includes: aCID) ifTrue: [
				^width]]].
	^self DW asSmalltalkValue
%
category: 'accessing entries'
method: CIDFont
BaseFont
	<type: #Name>
	<required>
	<attribute: 1 documentation: 'The PostScript name of the CIDFont.
For Type 0 CIDFonts, this shall be the value of the CIDFontName entry in the CIDFont program.
For Type 2 CIDFonts, it shall be derived the same way as for a simple TrueType font.
In either case, the name may have a subset prefix if appropriate'>
	^self objectAt: #BaseFont
%
method: CIDFont
CIDSystemInfo
	<type: #CIDSystemInfo>
	<required>
	<attribute: 2 documentation: 'A dictionary containing entries that define the character collection of the CIDFont'>
	^self objectAt: #CIDSystemInfo
%
method: CIDFont
DW
	<type: #Integer>
	<attribute: 4 documentation: 'The default width for glyphs in the CIDFont'>
	^self objectAt: #DW ifAbsent: [1000 asPDF]
%
method: CIDFont
DW2
	<typeArrayOf: #Number>
	<attribute: 6 documentation: '(Optional; applies only to CIDFonts used for vertical writing)
An array of two numbers specifying the default metrics for vertical writing'>
	^self objectAt: #DW2 ifAbsent: [#(880 -1000) asPDF]
%
method: CIDFont
FontDescriptor
	<typeIndirect: #FontDescriptor>
	<required>
	<attribute: 3 documentation: 'A font descriptor describing the CIDFontâs default metrics other than its glyph widths'>
	^self objectAt: #FontDescriptor
%
method: CIDFont
W
	<type: #Array>
	<attribute: 5 documentation: 'A description of the widths for the glyphs in the CIDFont.
NOTE
	The arrayâs elements have a variable format that can specify individual widths for consecutive CIDs or one width for a range of CIDs.
Default value: none (the DW value shall be used for all glyphs)'>
	^self objectAt: #W ifAbsent: [nil]
%
method: CIDFont
W2
	<type: #Array>
	<attribute: 7 documentation: '(Optional; applies only to CIDFonts used for vertical writing)
A description of the metrics for vertical writing for the glyphs in the CIDFont.
Default value: none (the DW2 value shall be used for all glyphs)'>
	^self objectAt: #W2 ifAbsent: [nil]
%
category: 'accessing'
classmethod: CIDFontType0
pdfTypeDefinition

	^PDFTypeDefinition
		name: #CIDFontType0
		supertype: #CIDFont
		section: '9.7.4.2'
		documentation: 'Type 0 and Type 2 CIDFonts handle the mapping from CIDs to glyph descriptions in somewhat different ways.

For Type 0, the CIDFont program contains glyph descriptions that are identified by CIDs. 
The CIDFont program identifies the character collection by a CIDSystemInfo dictionary, which should be copied into the PDF CIDFont dictionary. 
CIDs shall be interpreted uniformly in all CIDFont programs supporting a given character collection, 
whether the program is embedded in the PDF file or obtained from an external source.

When the CIDFont contains an embedded font program that is represented in the Compact Font Format (CFF), 
the FontFile3 entry in the font descriptor may be CIDFontType0C or OpenType. 
There are two cases, depending on the contents of the font program:
	â¢	The âCFFâ font program has a Top DICT that uses CIDFont operators: 
		The CIDs shall be used to determine the GID value for the glyph procedure using the charset table in the CFF program. 
		The GID value shall then be used to look up the glyph procedure using the CharStrings INDEX table.

NOTE	Although in many fonts the CID value and GID value are the same, the CID and GID values may differ.

	â¢	The âCFFâ font program has a Top DICT that does not use CIDFont operators: 
		The CIDs shall be used directly as GID values, and the glyph procedure shall be retrieved using the CharStrings INDEX.'
%
category: 'accessing'
classmethod: CIDFontType2
pdfTypeDefinition

	^PDFTypeDefinition
		name: #CIDFontType2
		supertype: #CIDFont
		section: '9.7.4.2'
		documentation: 'Type 0 and Type 2 CIDFonts handle the mapping from CIDs to glyph descriptions in somewhat different ways.

For Type 2, the CIDFont program is actually a TrueType font program, which has no native notion of CIDs. 
In a TrueType font program, glyph descriptions are identified by glyph index values. 
Glyph indices are internal to the font and are not defined consistently from one font to another. 
Instead, a TrueType font program contains a âcmapâ table that provides mappings directly from character codes to glyph indices for one or more predefined encodings.

TrueType font programs are integrated with the CID-keyed font architecture in one of two ways, 
depending on whether the font program is embedded in the PDF file:

	â¢	If the TrueType font program is embedded, the Type 2 CIDFont dictionary shall contain a CIDToGIDMap entry 
		that maps CIDs to the glyph indices for the appropriate glyph descriptions in that font program.

	â¢	If the TrueType font program is not embedded but is referenced by name, the Type 2 CIDFont dictionary shall not 
		contain a CIDToGIDMap entry, since it is not meaningful to refer to glyph indices in an external font program. 
		In this case, CIDs shall not participate in glyph selection, and only predefined CMaps may be used with this CIDFont. 
		The conforming reader shall select glyphs by translating characters from the encoding specified by the 
		predefined CMap to one of the encodings in the TrueType fontâs âcmapâ table. 
		The means by which this is accomplished are implementation-dependent.

Even though the CIDs are not used to select glyphs in a Type 2 CIDFont, they shall always be used to determine the glyph metrics, as described in the next sub-clause.

Every CIDFont shall contain a glyph description for CID 0, which is analogous to the .notdef character name in simple fonts.'
%
category: 'accessing entries'
method: CIDFontType2
CIDToGIDMap
	<type: #Stream>
	<typeName: #Identity>
	<attribute: 1 documentation: 'A specification of the mapping from CIDs to glyph indices.
If the value is a stream, the bytes in the stream shall contain the mapping from CIDs to glyph indices: the glyph index for a particular CID value c shall be a 2-byte value stored in bytes 2 Ã c and 2 Ã c + 1, where the first byte shall be the high-order byte.
If the value of CIDToGIDMap is a name, it shall be Identity, indicating that the mapping between CIDs and glyph indices is the identity mapping.
This entry may appear only in a Type 2 CIDFont whose associated TrueType font program is embedded in the PDF file'>
	^self objectAt: #CIDToGIDMap ifAbsent: [#Identity asPDF]
%
category: 'accessing'
classmethod: CIDSystemInfo
pdfTypeDefinition

	^PDFTypeDefinition
		name: #CIDSystemInfo
		supertype: #Dictionary
		section: '9.7.3'
		documentation: 'CIDFont and CMap dictionaries shall contain a CIDSystemInfo entry specifying the character collection assumed by the CIDFont associated with the CMapâthat is, the interpretation of the CID numbers used by the CIDFont.
A character collection shall be uniquely identified by the Registry, Ordering, and Supplemententries in the CIDSystemInfo dictionary.
In order to be compatible, the Registry and Ordering values must be the same.

The CIDSystemInfo entry in a CIDFont is a dictionary that shall specify the CIDFontâs character collection.
The CIDFont need not contain glyph descriptions for all the CIDs in a collection; it may contain a subset.
The CIDSystemInfo entry in a CMap file shall be either a single dictionary or an array of dictionaries, depending on whether it associates codes with a single character collection or with multiple character collections.

For proper behaviour, the CIDSystemInfo entry of a CMap shall be compatible with that of the CIDFont or CIDFonts with which it is used.'
%
category: 'accessing entries'
method: CIDSystemInfo
Ordering
	<type: #AsciiString>
	<required>
	<attribute: 2 documentation: 'A string that uniquely names the character collection within the specified registry'>
	^self objectAt: #Ordering
%
method: CIDSystemInfo
Registry
	<type: #AsciiString>
	<required>
	<attribute: 1 documentation: 'A string identifying the issuer of the character collection.
For information about assigning a registry identifier, contact the Adobe Solutions Network or consult the ASN Web site.'>
	^self objectAt: #Registry
%
method: CIDSystemInfo
Supplement
	<type: #Integer>
	<required>
	<attribute: 3 documentation: 'The supplement number of the character collection. An original character collection has a supplement number of 0. Whenever additional CIDs are assigned in a character collection, the supplement number shall be increased. Supplements shall not alter the ordering of existing CIDs in the character collection. This value shall not be used in determining compatibility between character collections'>
	^self objectAt: #Supplement
%
category: 'converting'
method: CIDSystemInfo
asCharacterCollection
	^(PostScript at: #RegisteredCharacterCollection) newWith: self asSmalltalkValue
%
category: 'accessing'
classmethod: CMap
pdfTypeDefinition
	^PDFTypeDefinition
		name: #CMap
		supertype: #Stream
		section: '9.7.5.3'
		documentation: 'For character encodings that are not predefined, the PDF file shall contain a stream that defines the CMap. The data in the stream defines the mapping from character codes to a font number and a character selector.

Embedded CMap files shall conform to the format documented in Adobe Technical Note #5014, subject to these additional constraints:

a) If the embedded CMap file contains a usecmap reference, the CMap indicated there shall also be identified by the UseCMap entry in the CMap stream dictionary.

b) The usefont operator, if present, shall specify a font number of 0.

c) The beginbfchar and endbfchar shall not appear in a CMap that is used as the Encoding entry of a Type 0 font; however, they may appear in the definition of a ToUnicode CMap.

d) A notdef mapping, defined using beginnotdefchar, endnotdefchar, beginnotdefrange, and endnotdefrange shall be used if the normal mapping produces a CID for which no glyph is present in the associated CIDFont.

e) The beginrearrangedfont, endrearrangedfont, beginusematrix, and endusematrix operators shall not be used.'
%
category: 'accessing'
method: CMap
cmap
	"<PostScript.CMap>"

	^cmap ifNil: [cmap := (PostScript at: #CMap) fromPostScriptString: self internal]
%
category: 'accessing entries'
method: CMap
CIDSystemInfo
	<type: #CIDSystemInfo>
	<required>
	<attribute: 2 documentation: 'A dictionary containing entries that define the character collection for the CIDFont or CIDFonts associated with the CMap.
The value of this entry shall be the same as the value of CIDSystemInfo in the CMap file. (However, it does not need to match the values of CIDSystemInfo for the Identity-H or Identity-V CMaps.)'>
	^self objectAt: #CIDSystemInfo
%
method: CMap
CMapName
	<type: #Name>
	<required>
	<attribute: 1 documentation: 'The name of the CMap. It shall be the same as the value of CMapName in the CMap file'>
	^self objectAt: #CMapName
%
method: CMap
UseCMap
	<type: #Name>
	<type: #CMap>
	<attribute: 4 documentation: 'The name of a predefined CMap, or a stream containing a CMap. If this entry is present, the referencing CMap shall specify only the character mappings that differ from the referenced CMap.'>
	^self objectAt: #UseCMap ifAbsent: [#none]
%
method: CMap
WMode
	<type: #Integer>
	<attribute: 3 documentation: 'A code that specifies the writing mode for any CIDFont with which this CMap is combined. The value shall be 0 for horizontal or 1 for vertical.
The value of this entry shall be the same as the value of WMode in the CMap file.'>
	^self objectAt: #WMode ifAbsent: [0]
%
category: 'accessing'
classmethod: Encoding
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Encoding
		supertype: #Dictionary
		section: '9.6.6.1'
		documentation: 'A font programâs built-in encoding can be overridden or altered by including an Encoding entry in the PDF font dictionary. 
		The possible encoding modifications depend on the font type, as discussed below. 
		The value of the Encoding entry is either a named encoding (the name of one of the predefined encodings MacRomanEncoding, MacExpertEncoding, or WinAnsiEncoding) or an encoding dictionary.'
%
category: 'accessing'
method: Encoding
encoderFor: aPDFFont
	| encoder code |
	encoder := (self BaseEncoding ifNil: [aPDFFont font encoder] ifNotNil: [:encoding |
		PDF encoderAt: encoding asSmalltalkValue]) copy.
	self Differences asSmalltalkValue do: [:codeOrName |
		codeOrName respondsToArithmetic
			ifTrue: [code := codeOrName]
			ifFalse: [
			((PostScript at: #CharacterNames) characterNamed: codeOrName) ifNotNil: [:char |
				encoder encode: char as: code].
			"When the name is not known, it is not encoded.
			Try to find it in the internet and add it to PostScript.CharacterNames class>>#otherGlyphNames
			and reset the mappings with PostScript.CharacterNames class>>#resetMappings"
			code := code + 1]].
	^encoder
%
category: 'accessing entries'
method: Encoding
BaseEncoding
	<type: #Name>
	<attribute: 2 documentation: 'The base encodingâthat is, the encoding from which the Differences entry (if present) describes differencesâspecified as the name of a predefined encoding MacRomanEncoding, MacExpertEncoding, or WinAnsiEncoding.
If this entry is absent, the Differences entry describes differences from an implicit base encoding. 
For a font program that is embedded in the PDF file, the implicit base encoding is the font programâs built-in encoding. 
Otherwise, for a nonsymbolic font, it is StandardEncoding, and for a symbolic font, it is the fontâs built-in encoding.'>
	^self objectAt: #BaseEncoding ifAbsent: [nil]
%
method: Encoding
Differences
	<type: #Array>
	<attribute: 3 documentation: 'An array describing the differences from the encoding specified by BaseEncoding or, if BaseEncoding is absent, from an implicit base encoding.'>
	^self objectAt: #Differences ifAbsent: [#() asPDF]
%
method: Encoding
Type
	<type: #Name>
	<attribute: 1 documentation: 'The type of PDF object that this dictionary describes.'>
	^self objectAt: #Type ifAbsent: [#Encoding asPDF]
%
category: 'accessing'
classmethod: Font
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Font
		supertype: #Dictionary
		section: '9.5'
		documentation: 'A font shall be represented in PDF as a dictionary specifying the type of font, its PostScript name, its encoding, 
and information that can be used to provide a substitute when the font program is not available. 
Optionally, the font program may be embedded as a stream object in the PDF file.

The font types are distinguished by the Subtype entry in the font dictionary. 
Type 0 fonts are called composite fonts; other types of fonts are called simple fonts. 
In addition to fonts, PDF supports two classes of font-related objects, called CIDFonts and CMaps. 
CIDFonts, like fonts, are collections of glyphs; however, a CIDFont shall not be used directly but only as a component of a Type 0 font.'
%
classmethod: Font
resourcePrefix
	^'F'
%
classmethod: Font
resourceType
	"<Symbol>
	the name of a /Resources key"

	^#Font
%
classmethod: Font
subtype
	"<Symbol>
	subtype entry"

	^self name
%
classmethod: Font
type
	^#Font
%
category: 'instance creation'
classmethod: Font
empty
	| inst |
	inst := super empty.
	inst at: #Subtype put: self subtype.
	^inst
%
category: 'testing'
classmethod: Font
isClassForDictionary: aDictionary
	| subtypeEntry |
	subtypeEntry := aDictionary at: #Subtype ifAbsent: [
		^false].
	^self subtype asPDF = subtypeEntry asPDF
%
category: 'accessing'
method: Font
decodedString: aByteArray
	"<String>
	normal Smalltalk string with unicode characters"
	
	^self subclassResponsibility
%
method: Font
FontDescriptor
	"<FontDescriptor>"
	
	^self subclassResponsibility
%
method: Font
stringWidth: aString
	"<Number> in glyph space"

	^self subclassResponsibility
%
method: Font
widthAt: aCodeOrIndexInteger
	"<Number> in glyph space"

	^self subclassResponsibility
%
category: 'accessing entries'
method: Font
Subtype
	<type: #Name>
	<required>
	<attribute: 1 documentation: 'The type of font'>
	^self objectAt: #Subtype
%
category: 'accessing'
classmethod: FontDescriptor
pdfTypeDefinition

	^PDFTypeDefinition
		name: #FontDescriptor
		supertype: #Dictionary
		section: '9.8'
		documentation: 'A font descriptor specifies metrics and other attributes of a simple font or a CIDFont as a whole, as distinct from the metrics of individual glyphs.
These font metrics provide information that enables a conforming reader to synthesize a substitute font or select a similar font when the font program is unavailable.
The font descriptor may also be used to embed the font program in the PDF file.

Font descriptors shall not be used with Type 0 fonts. Beginning with PDF 1.5, font descriptors may be used with Type 3 fonts.

A font descriptor is a dictionary whose entries specify various font attributes. 
All integer values shall be units in glyph space.'
%
category: 'accessing entries'
method: FontDescriptor
Ascent
	<type: #Number>
	<required>
	<attribute: 8 documentation: '(Required, except for Type 3 fonts) 
The maximum height above the baseline reached by glyphs in this font. 
The height of glyphs for accented characters shall be excluded.'>
	^self objectAt: #Ascent
%
method: FontDescriptor
AvgWidth
	<type: #Number>
	<attribute: 15 documentation: 'The average width of glyphs in the font.'>
	^self objectAt: #AvgWidth ifAbsent: [0 asPDF]
%
method: FontDescriptor
CapHeight
	<type: #Number>
	<required>
	<attribute: 11 documentation: '(Required for fonts that have Latin characters, except for Type 3 fonts)
The vertical coordinate of the top of flat capital letters, measured from the baseline.'>
	^self objectAt: #CapHeight
%
method: FontDescriptor
CharSet
	<type: #String>
	<version: 1 dot: 1>
	<attribute: 21 documentation: '(meaningful only in Type 1 fonts) 
A string listing the character names defined in a font subset. 
The names in this string shall be in PDF syntaxâthat is, each name preceded by a slash (/). 
The names may appear in any order. 
The name .notdef shall be omitted; it shall exist in the font subset. 
If this entry is absent, the only indication of a font subset shall be the subset tag in the FontName entry.'>
	^self objectAt: #CharSet ifAbsent: ['' asPDF]
%
method: FontDescriptor
CIDSet
	<type: #Stream>
	<attribute: 25 documentation: '(meaningful only in CIDFonts) 
A stream identifying which CIDs are present in the CIDFont file. If this entry is present, the CIDFont shall contain only a subset of the glyphs in the character collection defined by the CIDSystemInfo dictionary. If it is absent, the only indication of a CIDFont subset shall be the subset tag in the FontName entry.
The streamâs data shall be organized as a table of bits indexed by CID. The bits shall be stored in bytes with the high-order bit first. Each bit shall correspond to a CID. The most significant bit of the first byte shall correspond to CID 0, the next bit to CID 1, and so on.'>
	^self objectAt: #CIDSet ifAbsent: [PDF Stream empty]
%
method: FontDescriptor
Descent
	<type: #Number>
	<required>
	<attribute: 9 documentation: '(Required, except for Type 3 fonts) 
The maximum depth below the baseline reached by glyphs in this font. 
The value shall be a negative number.'>
	^self objectAt: #Descent
%
method: FontDescriptor
FD
	<type: #Dictionary>
	<attribute: 24 documentation: '(meaningful only in CIDFonts) 
A dictionary whose keys identify a class of glyphs in a CIDFont. Each value shall be a dictionary containing entries that shall override the corresponding values in the main font descriptor dictionary for that class of glyphs.'>
	^self objectAt: #FD ifAbsent: [PDF Dictionary empty]
%
method: FontDescriptor
Flags
	<type: #Integer>
	<required>
	<attribute: 5 documentation: 'A collection of flags defining various characteristics of the font.'>
	^self objectAt: #Flags
%
method: FontDescriptor
FontBBox
	<type: #Rectangle>
	<required>
	<attribute: 6 documentation: '(Required, except for Type 3 fonts) 
A rectangle, expressed in the glyph coordinate system, that shall specify the font bounding box. 
This should be the smallest rectangle enclosing the shape that would result if all of the glyphs of the font were placed with their origins coincident and then filled.'>
	^self objectAt: #FontBBox
%
method: FontDescriptor
FontFamily
	<type: #String>
	<version: 1 dot: 5>
	<attribute: 2 documentation: '(should be used for Type 3 fonts in Tagged PDF documents)
A byte string specifying the preferred font family name.
EXAMPLE 1
For the font Times Bold Italic, the FontFamily is Times.'>
	^self objectAt: #FontFamily
%
method: FontDescriptor
FontFile
	<type: #Stream>
	<attribute: 18 documentation: 'A stream containing a Type 1 font program.'>
	^self objectAt: #FontFile ifAbsent: [nil]
%
method: FontDescriptor
FontFile2
	<type: #Stream>
	<version: 1 dot: 1>
	<attribute: 19 documentation: 'A stream containing a TrueType font program.'>
	^self objectAt: #FontFile2 ifAbsent: [nil]
%
method: FontDescriptor
FontFile3
	<type: #Stream>
	<version: 1 dot: 2>
	<attribute: 20 documentation: 'A stream containing a font program whose format is specified by the Subtype entry in the stream dictionary'>
	^self objectAt: #FontFile3 ifAbsent: [nil]
%
method: FontDescriptor
FontName
	<type: #Name>
	<required>
	<attribute: 1 documentation: 'The PostScript name of the font.
This name shall be the same as the value of BaseFont in the font or CIDFont dictionary that refers to this font descriptor.'>
	^self objectAt: #FontName
%
method: FontDescriptor
FontStretch
	<type: #Name>
	<version: 1 dot: 5>
	<attribute: 3 documentation: '(should be used for Type 3 fonts in Tagged PDF documents) 
The font stretch value. It shall be one of these names (ordered from narrowest to widest): 
	UltraCondensed, 
	ExtraCondensed, 
	Condensed, 
	SemiCondensed, 
	Normal, 
	SemiExpanded, 
	Expanded, 
	ExtraExpanded or 
	UltraExpanded.
The specific interpretation of these values varies from font to font.
EXAMPLE 2
Condensed in one font may appear most similar to Normal in another.'>
	^self objectAt: #FontStretch
%
method: FontDescriptor
FontWeight
	<type: #Number>
	<version: 1 dot: 5>
	<attribute: 4 documentation: '(should be used for Type 3 fonts in Tagged PDF documents) 
The weight (thickness) component of the fully-qualified font name or font specifier. 
The possible values shall be 100, 200, 300, 400, 500, 600, 700, 800, or 900, where each number indicates a weight that is at least as dark as its predecessor. 
A value of 400 shall indicate a normal weight; 700 shall indicate bold.
The specific interpretation of these values varies from font to font.
EXAMPLE 3
300 in one font may appear most similar to 500 in another.'>
	^self objectAt: #FontWeight
%
method: FontDescriptor
ItalicAngle
	<type: #Number>
	<required>
	<attribute: 7 documentation: 'The angle, expressed in degrees counterclockwise from the vertical, of the dominant vertical strokes of the font.
EXAMPLE 4
The 9-oâclock position is 90 degrees, and the 3-oâclock position is â90 degrees.
The value shall be negative for fonts that slope to the right, as almost all italic fonts do.'>
	^self objectAt: #ItalicAngle
%
method: FontDescriptor
Lang
	<type: #Name>
	<version: 1 dot: 5>
	<attribute: 23 documentation: '(meaningful only in CIDFonts) 
A name specifying the language of the font, which may be used for encodings where the language is not implied by the encoding itself. The value shall be one of the codes defined by Internet RFC 3066, Tags for the Identification of Languages or (PDF 1.0) 2-character language codes defined by ISO 639. If this entry is absent, the language shall be considered to be unknown.'>
	^self objectAt: #Lang ifAbsent: [(PDF classAt: #Name) empty]
%
method: FontDescriptor
Leading
	<type: #Number>
	<attribute: 10 documentation: 'The spacing between baselines of consecutive lines of text.'>
	^self objectAt: #Leading ifAbsent: [0 asPDF]
%
method: FontDescriptor
MaxWidth
	<type: #Number>
	<attribute: 16 documentation: 'The maximum width of glyphs in the font.'>
	^self objectAt: #MaxWidth ifAbsent: [0 asPDF]
%
method: FontDescriptor
MissingWidth
	<type: #Number>
	<attribute: 17 documentation: 'The width to use for character codes whose widths are not specified in a font dictionaryâs Widths array.
This shall have a predictable effect only if all such codes map to glyphs whose actual widths are the same as the value of the MissingWidth entry.'>
	^self objectAt: #MissingWidth ifAbsent: [0 asPDF]
%
method: FontDescriptor
StemH
	<type: #Number>
	<attribute: 14 documentation: 'The thickness, measured vertically, of the dominant horizontal stems of glyphs in the font.'>
	^self objectAt: #StemH ifAbsent: [0 asPDF]
%
method: FontDescriptor
StemV
	<type: #Number>
	<required>
	<attribute: 13 documentation: '(Required, except for Type 3 fonts) 
The thickness, measured horizontally, of the dominant vertical stems of glyphs in the font.'>
	^self objectAt: #StemV
%
method: FontDescriptor
Style
	<type: #Dictionary>
	<attribute: 22 documentation: '(meaningful only in CIDFonts) 
A dictionary containing entries that describe the style of the glyphs in the font'>
	^self objectAt: #Style ifAbsent: [PDF Dictionary empty]
%
method: FontDescriptor
XHeight
	<type: #Number>
	<attribute: 12 documentation: 'The fontâs x height: the vertical coordinate of the top of flat nonascending lowercase letters (like the letter x), measured from the baseline, in fonts that have Latin characters.'>
	^self objectAt: #XHeight ifAbsent: [0 asPDF]
%
category: 'accessing'
classmethod: MMType1
pdfTypeDefinition

	^PDFTypeDefinition
		name: #MMType1
		supertype: #Font
		section: '9.6.2.3'
		documentation: 'The multiple master font format is an extension of the Type 1 font format that allows the generation of a wide variety of typeface styles from a single font program. 
This is accomplished through the presence of various design dimensions in the font.

EXAMPLE 1	Examples of design dimensions are weight (light to extra-bold) and width (condensed to expanded).

Coordinates along these design dimensions (such as the degree of boldness) are specified by numbers. 
A particular choice of numbers selects an instance of the multiple master font. 
PDFs can contain multiple master instances.

NOTE		Adobe Technical Note #5015, Type 1 Font Format Supplement, describes multiple master fonts in detail.

The font dictionary for a multiple master font instance may contain the same entries as a Type 1 font dictionary, with these differences:
	â¢	The value of Subtype shall be MMType1.
	â¢	If the PostScript name of the instance contains SPACEs (20h), the SPACEs shall be replaced by LOW LINEs (underscores) (5Fh) in the value of BaseFont. 
		For instance, as illustrated in this example, the name âMinionMM 366 465 11 â (which ends with a SPACE character) becomes /MinionMM_366_465_11_.

If the font program for a multiple master font instance is embedded in the PDF file, it shall be an ordinary Type 1 font program, not a multiple master font program. 
This font program is called a snapshot of the multiple master font instance that incorporates the chosen values of the design coordinates.'
%
category: 'accessing'
classmethod: StandardFont
fontNames
	^#(#'Times-Roman' #Helvetica #Courier #Symbol #'Times-Bold' #'Helvetica-Bold' #'Courier-Bold' #ZapfDingbats #'Times-Italic' #'Helvetica-Oblique' #'Courier-Oblique' #'Times-BoldItalic' #'Helvetica-BoldOblique' #'Courier-BoldOblique')
%
classmethod: StandardFont
pdfTypeDefinition

	^PDFTypeDefinition
		name: #StandardFont
		supertype: #Font
		section: '9.6.2.2'
		documentation: 'The PostScript names of 14 Type 1 fonts, known as the standard 14 fonts, are as follows: Times-Roman, Helvetica, Courier, Symbol, Times-Bold, Helvetica-Bold, Courier-Bold, ZapfDingbats, Times-Italic, Helvetica-Oblique, Courier-Oblique, Times-BoldItalic, Helvetica-BoldOblique, Courier-BoldOblique

These fonts, or their font metrics and suitable substitution fonts, shall be available to the conforming reader'
%
classmethod: StandardFont
subtype
	^#Type1
%
category: 'testing'
classmethod: StandardFont
isClassForDictionary: aDictionary
	| subtypeEntry |
	subtypeEntry := aDictionary at: #Subtype ifAbsent: [
		^false].
	^self subtype asPDF = subtypeEntry asPDF and: [
	(aDictionary hasKey: #BaseFont) and: [
	self fontNames includes: (aDictionary at: #BaseFont) asSmalltalkValue]]
%
category: 'accessing'
method: StandardFont
font
	"<Font>
	the real font"

	^PDFtalk.Fonts.Font fontAt: self BaseFont asSmalltalkValue
%
method: StandardFont
metrics
	"<AdobeFontMetric> compatible to FontDescriptor"

	^self font metrics
%
method: StandardFont
standardWidths
	^standardWidths ifNil: [standardWidths := self metrics widths256 asPDF]
%
category: 'accessing entries'
method: StandardFont
FirstChar
	<type: #Integer>
	<attribute: 1 documentation: 'The first character code defined in the fontâs Widths array.

Beginning with PDF 1.5, the special treatment given to the standard 14 fonts is deprecated.
Conforming writers should represent all fonts using a complete font descriptor.
For backwards capability, conforming readers shall still provide the special treatment identified for the standard 14 fonts.'>
	^self objectAt: #FirstChar ifAbsent: [0 asPDF]
%
method: StandardFont
FontDescriptor
	<typeIndirect: #FontDescriptor>
	<attribute: 4 documentation: 'A font descriptor describing the fontâs metrics other than its glyph widths (see 9.8, "Font Descriptors"â\).
For the standard 14 fonts, the entries FirstChar, LastChar, Widths, and FontDescriptor shall either all be present or all be absent.
Ordinarily, these dictionary keys may be absent; specifying them enables a standard font to be overridden.

Beginning with PDF 1.5, the special treatment given to the standard 14 fonts is deprecated.
Conforming writers should represent all fonts using a complete font descriptor.
For backwards capability, conforming readers shall still provide the special treatment identified for the standard 14 fonts.'>
	^self objectAt: #FontDescriptor ifAbsent: [self font pdfFontDescriptor]
%
method: StandardFont
LastChar
	<type: #Integer>
	<attribute: 2 documentation: 'The last character code defined in the fontâs Widths array.

Beginning with PDF 1.5, the special treatment given to the standard 14 fonts is deprecated.
Conforming writers should represent all fonts using a complete font descriptor.
For backwards capability, conforming readers shall still provide the special treatment identified for the standard 14 fonts.'>
	^self objectAt: #LastChar ifAbsent: [255 asPDF]
%
method: StandardFont
Widths
	<typeArrayOf: #Number>
	<attribute: 3
	documentation: '(indirect reference preferred)

An array of (LastChar - FirstChar + 1) widths, each element being the glyph width for the character code that equals FirstChar plus the array index.
For character codes outside the range FirstChar to LastChar, the value of MissingWidth from the FontDescriptor entry for this font shall be used.
The glyph widths shall be measured in units in which 1000 units correspond to 1 unit in text space.
These widths shall be consistent with the actual widths given in the font program.

Beginning with PDF 1.5, the special treatment given to the standard 14 fonts is deprecated.
Conforming writers should represent all fonts using a complete font descriptor.
For backwards capability, conforming readers shall still provide the special treatment identified for the standard 14 fonts.'>

	^self objectAt: #Widths ifAbsent: [self standardWidths]
%
category: 'accessing'
classmethod: ToUnicodeCMap
pdfTypeDefinition
	^PDFTypeDefinition
		name: #ToUnicodeCMap
		supertype: #Stream
		section: '9.10.3'
		documentation: 'The CMap defined in the ToUnicode entry of the font dictionary shall follow the syntax for CMaps fully documented in Adobe Technical Note #5014, Adobe CMap and CIDFont Files Specification. Additional guidance regarding the CMap defined in this entry is provided in Adobe Technical Note #5411, ToUnicode Mapping File Tutorial. This CMap differs from an ordinary one in these ways:

	â¢	The only pertinent entry in the CMap stream dictionary is UseCMap, which may be used if the CMap is based on another ToUnicode CMap.
	â¢	The CMap file shall contain begincodespacerange and endcodespacerange operators that are consistent with the encoding that the font uses. In particular, for a simple font, the codespace shall be one byte long.
	â¢	It shall use the beginbfchar, endbfchar, beginbfrange, and endbfrange operators to define the mapping from character codes to Unicode character sequences expressed in UTF-16BE encoding.'
%
category: 'accessing'
method: ToUnicodeCMap
cmap
	"<PostScript.CMap>"

	^cmap ifNil: [cmap := (PostScript at: #CMap) fromPostScriptString: self internal]
%
category: 'accessing entries'
method: ToUnicodeCMap
UseCMap
	<type: #Name>
	<type: #ToUnicodeCMap>
	<attribute: 1 documentation: 'The name of a predefined CMap, or a stream containing a CMap. If this entry is present, the referencing CMap shall specify only the character mappings that differ from the referenced CMap.'>
	^self objectAt: #UseCMap ifAbsent: [#none]
%
category: 'accessing'
classmethod: TrueType
pdfTypeDefinition

	^PDFTypeDefinition
		name: #TrueType
		supertype: #Font
		section: '9.6.3'
		documentation: 'A TrueType font dictionary may contain the same entries as a Type 1 font dictionary, with these differences:

	â¢	The value of Subtype shall be TrueType.
	â¢	The value of Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
	â¢	The value of BaseFont is derived differently.

The PostScript name for the value of BaseFont may be determined in one of two ways:

	â¢	If the TrueType font program''s ânameâ table contains a PostScript name, it shall be used.
	â¢	In the absence of such an entry in the ânameâ table, a PostScript name shall be derived from the name by which the font is known in the host operating system. 
		On a Windows system, the name shall be based on the lfFaceName field in a LOGFONT structure; 
		in the Mac OS, it shall be based on the name of the FOND resource. 
		If the name contains any SPACEs, the SPACEs shall be removed.

NOTE 1		The TrueType font format was developed by Apple Computer, Inc., and has been adopted 
			as a standard font format for the Microsoft Windows operating system. 
			Specifications for the TrueType font file format are available in Appleâs TrueType Reference Manual and 
			Microsoftâs TrueType 1.0 Font Files Technical Specification (see Bibliography).

NOTE 2		A TrueType font program may be embedded directly in a PDF file as a stream object.

NOTE 3		The Type 42 font format that is defined for PostScript does not apply to PDF.

NOTE 4		For CJK (Chinese, Japanese, and Korean) fonts, the host font systemâs font name is often encoded in the host operating systemâs script. 
			For instance, a Japanese font may have a name that is written in Japanese using some (unidentified) Japanese encoding. 
			Thus, TrueType font names may contain multiple-byte character codes, 
			each of which requires multiple characters to represent in a PDF name object (using the # notation to quote special characters as needed).'
%
category: 'accessing'
classmethod: Type0
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Type0
		supertype: #Font
		section: '9.7'
		documentation: 'A composite font, also called a Type 0 font, is one whose glyphs are obtained from a fontlike object called a CIDFont. 
A composite font shall be represented by a font dictionary whose Subtype value is Type0. 
The Type 0 font is known as the root font, and its associated CIDFont is called its descendant.

NOTE 1		Composite fonts in PDF are analogous to composite fonts in PostScript but with some limitations. 
			In particular, PDF requires that the character encoding be defined by a CMap, which is only one of several encoding methods available in PostScript. 
			Also, PostScript allows a Type 0 font to have multiple descendants, which might also be Type 0 fonts. 
			PDF supports only a single descendant, which shall be a CIDFont.

When the current font is composite, the text-showing operators shall behave differently than with simple fonts. 
For simple fonts, each byte of a string to be shown selects one glyph, whereas for composite fonts, 
a sequence of one or more bytes are decoded to select a glyph from the descendant CIDFont.

NOTE 2		This facility supports the use of very large character sets, such as those for the Chinese, Japanese, and Korean languages. 
			It also simplifies the organization of fonts that have complex encoding requirements.

This sub-clause first introduces the architecture of CID-keyed fonts, which are the only kind of composite font supported in PDF. 
Then it describes the CIDFont and CMap dictionaries, which are the PDF objects that represent the correspondingly named components of a CID-keyed font. 
Finally, it describes the Type 0 font dictionary, which combines a CIDFont and a CMap to produce a font 
whose glyphs may be accessed by means of variable-length character codes in a string to be shown.'
%
category: 'accessing'
method: Type0
decodedString: aByteArray
	| rst cids gids descendantFont systemInfo characterCollection |
	self Encoding asSmalltalkValue = #'Identity-H' ifFalse: [
		^self error: 'not implemented yet'].
	rst := aByteArray readStream.
	(self hasKey: #ToUnicode) ifTrue: [
		| wst |
		wst := String new writeStream.
		[rst atEnd] whileFalse: [wst nextPut: (self ToUnicode cmap characterFrom: rst)].
		^wst contents].
	"needs work"
	self halt.
	descendantFont := self DescendantFonts objectAt: 1.
	systemInfo := descendantFont CIDSystemInfo.
	characterCollection := systemInfo asCharacterCollection.
	cids := characterCollection mapCharacterCodes: aByteArray.
	cids := OrderedCollection new: aByteArray size // 2.
	[rst atEnd] whileFalse: [cids add: rst next * 256 + rst next].
	gids := cids.
	^String withAll: (gids collect: #asCharacter)
%
method: Type0
FontDescriptor
	^(self DescendantFonts objectAt: 1) FontDescriptor
%
method: Type0
stringWidth: aContentString
	self Encoding asSmalltalkValue = #'Identity-H' ifFalse: [
		^self error: 'not implemented yet'].
	^self DescendantFonts first stringWidth: aContentString
%
method: Type0
widthAt: aCharacterCode
	^self notYetImplemented
%
category: 'accessing entries'
method: Type0
BaseFont
	<type: #Name>
	<required>
	<attribute: 1 documentation: 'The name of the font.
If the descendant is a Type 0 CIDFont, this name should be the concatenation of the CIDFontâs BaseFont name, a hyphen, and the CMap name given in the Encoding entry (or the CMapName entry in the CMap).
If the descendant is a Type 2 CIDFont, this name should be the same as the CIDFontâs BaseFont name.
NOTE	In principle, this is an arbitrary name, since there is no font program associated directly with a Type 0 font dictionary.
		The conventions described here ensure maximum compatibility with existing readers'>
	^self objectAt: #BaseFont
%
method: Type0
DescendantFonts
	<typeArrayOf: #CIDFont>
	<required>
	<attribute: 3 documentation: 'A one-element array specifying the CIDFont dictionary that is the descendant of this Type 0 font'>
	^self objectAt: #DescendantFonts
%
method: Type0
Encoding
	<type: #Name>
	<type: #CMap>
	<required>
	<attribute: 2 documentation: 'The name of a predefined CMap, or a stream containing a CMap that maps character codes to font numbers and CIDs.
If the descendant is a Type 2 CIDFont whose associated TrueType font program is not embedded in the PDF file, the Encoding entry shall be a predefined CMap name'>
	^self objectAt: #Encoding
%
method: Type0
ToUnicode
	<type: #ToUnicodeCMap>
	<attribute: 4 documentation: 'A stream containing a CMap file that maps character codes to Unicode values'>
	^self objectAt: #ToUnicode
%
category: 'accessing'
classmethod: Type1
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Type1
		supertype: #Font
		section: '9.6.2'
		documentation: 'A Type 1 font program is a stylized PostScript program that describes glyph shapes. 
It uses a compact encoding for the glyph descriptions, and it includes hint information that enables high-quality rendering even at small sizes and low resolutions.

NOTE 1		Details on this format are provided in a separate specification, Adobe Type 1 Font Format. 
			An alternative, more compact but functionally equivalent representation of a Type 1 font program is 
			documented in Adobe Technical Note #5176, The Compact Font Format Specification.
NOTE 2		Although a Type 1 font program uses PostScript language syntax, using it does not require 
			a full PostScript interpreter; a specialized Type 1 font interpreter suffices.

Some entries are optional for the standard 14 fonts, but are required otherwise.'
%
category: 'testing'
classmethod: Type1
isClassForDictionary: aDictionary
	^(super isClassForDictionary: aDictionary) and: [
	(aDictionary hasKey: #BaseFont) and: [
	((PDF classAt: #StandardFont) fontNames includes: (aDictionary at: #BaseFont) asSmalltalkValue) not]]
%
category: 'accessing'
method: Type1
addWinAnsiEncodingWith: aFont
	| attributes |
	attributes := aFont pdfWinAnsiEncodingAttributesWith: self usedExtraGlyphs.
	attributes keysAndValuesDo: [:key :value | self at: key put: value]
%
method: Type1
decodedString: aByteArray
	self hasEncoding ifTrue: [
		| encoder rst wst |
		encoder := self encoder.
		rst := aByteArray readStream.
		wst := String new writeStream.
		[rst atEnd] whileFalse: [wst nextPut: (encoder decode: rst next)].
		^wst contents].
	(self hasKey: #ToUnicode) ifTrue: [
		| rst wst |
		rst := aByteArray readStream.
		wst := String new writeStream.
		[rst atEnd] whileFalse: [
			(self ToUnicode cmap characterFrom: rst) ifNil: [rst next] ifNotNil: [:char |
				wst nextPut: char]].
		^wst contents].
	"needs work"
	^PDF standardEncoder ifNotNil: [:encoder |
		| rst wst |
		rst := aByteArray readStream.
		wst := String new writeStream.
		[rst atEnd] whileFalse: [wst nextPut: (encoder decode: rst next)].
		wst contents]
%
method: Type1
encoder
	"<CharacterMap>"

	| encoding |
	self hasEncoding ifFalse: [
		^PDF standardEncoder].
	encoding := self Encoding asSmalltalkValue.
	encoding isSymbol ifTrue: [
		^PDF encoderAt: encoding].
	^self Encoding encoderFor: self
%
method: Type1
newCodeForExtraGlyph
	"<Integer>"

	| usedCodes |
	usedCodes := self usedExtraGlyphs values asSet.
	^#(31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 8 7 6 5 4 3 2 1) detect: [:code |
		(usedCodes includes: code) not]
%
method: Type1
postScriptName
	| string |
	string := self BaseFont content.
	(string size >= 7 and: [
	((string first: 6) allSatisfy: #isUppercase) and: [
	(string at: 7) = $+]]) ifTrue: [
			^string copyFrom: 8 to: string size].
	^string
%
method: Type1
stringWidth: aContentString
	^aContentString content inject: 0 into: [:width :characterCode | width + (self widthAt: characterCode)]
%
method: Type1
usedExtraGlyphs
	"<OrderedDictionary key: Glyph value: Integer>"

	^usedExtraGlyphs ifNil: [usedExtraGlyphs := Valuemap new]
%
method: Type1
widthAt: aCharacterCode
	| index |
	index := aCharacterCode - self FirstChar asSmalltalkValue + 1.
	(index between: 1 and: self Widths size) ifFalse: [
		"illegal character"
		^0].
	^(self Widths at: index) asSmalltalkValue
%
category: 'accessing entries'
method: Type1
BaseFont
	<type: #Name>
	<required>
	<attribute: 2 documentation: 'The PostScript name of the font.
For Type 1 fonts, this is always the value of the FontName entry in the font program.
The PostScript name of the font may be used to find the font program in the conforming reader or its environment.
It is also the name that is used when printing to a PostScript output device.'>
	^self objectAt: #BaseFont
%
method: Type1
Encoding
	<type: #Name>
	<type: #Encoding>
	<attribute: 7 documentation: 'A specification of the fontâs character encoding if different from its built-in encoding.
The value of Encoding shall be either the name of a predefined encoding (
	MacRomanEncoding, 
	MacExpertEncoding, or 
	WinAnsiEncoding) 
or an encoding dictionary that shall specify differences from the fontâs built-in encoding or from a specified predefined encoding.'>
	^self objectAt: #Encoding
%
method: Type1
FirstChar
	<type: #Integer>
	<required>
	<attribute: 3 documentation: 'The first character code defined in the fontâs Widths array.

Beginning with PDF 1.5, the special treatment given to the standard 14 fonts is deprecated.
Conforming writers should represent all fonts using a complete font descriptor.
For backwards capability, conforming readers shall still provide the special treatment identified for the standard 14 fonts.'>
	^self objectAt: #FirstChar
%
method: Type1
FontDescriptor
	<typeIndirect: #FontDescriptor>
	<required>
	<attribute: 6 documentation: 'A font descriptor describing the fontâs metrics other than its glyph widths (see 9.8, "Font Descriptors"â\).
For the standard 14 fonts, the entries FirstChar, LastChar, Widths, and FontDescriptor shall either all be present or all be absent.
Ordinarily, these dictionary keys may be absent; specifying them enables a standard font to be overridden.

Beginning with PDF 1.5, the special treatment given to the standard 14 fonts is deprecated.
Conforming writers should represent all fonts using a complete font descriptor.
For backwards capability, conforming readers shall still provide the special treatment identified for the standard 14 fonts.'>
	^self objectAt: #FontDescriptor
%
method: Type1
LastChar
	<type: #Integer>
	<required>
	<attribute: 4 documentation: 'The last character code defined in the fontâs Widths array.

Beginning with PDF 1.5, the special treatment given to the standard 14 fonts is deprecated.
Conforming writers should represent all fonts using a complete font descriptor.
For backwards capability, conforming readers shall still provide the special treatment identified for the standard 14 fonts.'>
	^self objectAt: #LastChar
%
method: Type1
Name
	<type: #Name>
	<attribute: 1 documentation: '(Required in PDF 1.0; optional otherwise)

The name by which this font is referenced in the Font subdictionary of the current resource dictionary.

This entry is obsolete and should not be used.'>
	^self objectAt: #Name
%
method: Type1
ToUnicode
	<type: #ToUnicodeCMap>
	<version: 1 dot: 2>
	<attribute: 8 documentation: 'A stream containing a CMap file that maps character codes to Unicode values.'>
	^self objectAt: #ToUnicode
%
method: Type1
Widths
	<typeArrayOf: #Number>
	<required>
	<attribute: 5 documentation: '(indirect reference preferred)

An array of (LastChar - FirstChar + 1) widths, each element being the glyph width for the character code that equals FirstChar plus the array index.
For character codes outside the range FirstChar to LastChar, the value of MissingWidth from the FontDescriptor entry for this font shall be used.
The glyph widths shall be measured in units in which 1000 units correspond to 1 unit in text space.
These widths shall be consistent with the actual widths given in the font program.

Beginning with PDF 1.5, the special treatment given to the standard 14 fonts is deprecated.
Conforming writers should represent all fonts using a complete font descriptor.
For backwards capability, conforming readers shall still provide the special treatment identified for the standard 14 fonts.'>
	^self objectAt: #Widths
%
category: 'testing'
method: Type1
hasEncoding
	^self hasKey: #Encoding
%
category: 'tracing'
method: Type1
copyWithNewReferencesIn: visited
	| copy |
	copy := super copyWithNewReferencesIn: visited.
	copy usedExtraGlyphs addAll: self usedExtraGlyphs.
	^copy
%
category: 'accessing'
classmethod: Type3
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Type3
		supertype: #Font
		section: '9.6.5'
		documentation: 'Type 3 fonts differ from the other fonts supported by PDF. 
A Type 3 font dictionary defines the font; 
font dictionaries for other fonts simply contain information about the font and refer to a separate font program for the actual glyph descriptions. 
In Type 3 fonts, glyphs shall be defined by streams of PDF graphics operators. 
These streams shall be associated with glyph names. 
A separate encoding entry shall map character codes to the appropriate glyph names for the glyphs.

NOTE 1		Type 3 fonts are more flexible than Type 1 fonts because the glyph descriptions may contain arbitrary PDF graphics operators. 
			However, Type 3 fonts have no hinting mechanism for improving output at small sizes or low resolutions.'
%
category: 'accessing'
method: Type3
stringWidth: aContentString
	^aContentString content inject: 0 into: [:width :characterCode | width + (self widthAt: characterCode)]
%
method: Type3
widthAt: aCharacterCode
	| index |
	index := aCharacterCode - self FirstChar asSmalltalkValue + 1.
	(index between: 1 and: self Widths size) ifFalse: [
		"illegal character"
		^0].
	^(self FontMatrix transformed: (self Widths at: index) asSmalltalkValue @ 0) x * 1000
%
category: 'accessing entries'
method: Type3
CharProcs
	<typeDictionaryOf: #Contents>
	<required>
	<attribute: 4 documentation: 'A dictionary in which each key shall be a glyph name and the value associated with that key shall be a content stream that constructs and paints the glyph for that character.
The stream shall include as its first operator either d0 or d1, followed by operators describing one or more graphics objects, which may include path, text, or image objects.'>
	^self objectAt: #CharProcs
%
method: Type3
Encoding
	<type: #Name>
	<type: #Dictionary>
	<required>
	<attribute: 5 documentation: 'An encoding dictionary whose Differences array shall specify the complete character encoding for this font.'>
	^self objectAt: #Encoding
%
method: Type3
FirstChar
	<type: #Integer>
	<required>
	<attribute: 6 documentation: 'The first character code defined in the fontâs Widths array.'>
	^self objectAt: #FirstChar
%
method: Type3
FontBBox
	<type: #Rectangle>
	<required>
	<attribute: 2 documentation: 'A rectangle expressed in the glyph coordinate system, specifying the font bounding box.
This is the smallest rectangle enclosing the shape that would result if all of the glyphs of the font were placed with their origins coincident and then filled.

If all four elements of the rectangle are zero, a conforming reader shall make no assumptions about glyph sizes based on the font bounding box.
If any element is nonzero, the font bounding box shall be accurate.
If any glyphâs marks fall outside this bounding box, incorrect behavior may result.'>
	^self objectAt: #FontBBox
%
method: Type3
FontDescriptor
	<typeIndirect: #FontDescriptor>
	<attribute: 9 documentation: '(Required in Tagged PDF documents; shall be an indirect reference)
A font descriptor describing the fontâs default metrics other than its glyph widths.'>
	^self objectAt: #FontDescriptor
%
method: Type3
FontMatrix
	<typeArrayOf: #Number>
	<required>
	<attribute: 3 documentation: 'An array of six numbers specifying the font matrix, mapping glyph space to text space.

NOTE	A common practice is to define glyphs in terms of a 1000-unit glyph coordinate system, in which case the font matrix is [0.001 0 0 0.001 0 0].'>
	^self objectAt: #FontMatrix
%
method: Type3
LastChar
	<type: #Integer>
	<required>
	<attribute: 7 documentation: 'The last character code defined in the fontâs Widths array.'>
	^self objectAt: #LastChar
%
method: Type3
Name
	<type: #Name>
	<attribute: 1 documentation: '(Required in PDF 1.0; optional otherwise)

The name by which this font is referenced in the Font subdictionary of the current resource dictionary.

This entry is obsolete and should not be used.'>
	^self objectAt: #Name
%
method: Type3
Resources
	<type: #Resources>
	<version: 1 dot: 2>
	<attribute: 10 documentation: '(Optional but should be used)
A list of the named resources, such as fonts and images, required by the glyph descriptions in this font.
If any glyph descriptions refer to named resources but this dictionary is absent, the names shall be looked up in the resource dictionary of the page on which the font is used.'>
	^self objectAt: #Resources ifAbsent: [(PDF classAt: #Resources) new]
%
method: Type3
ToUnicode
	<type: #ToUnicodeCMap>
	<version: 1 dot: 2>
	<attribute: 11 documentation: 'A stream containing a CMap file that maps character codes to Unicode values.'>
	^self objectAt: #ToUnicode
%
method: Type3
Widths
	<typeArrayOf: #Number>
	<required>
	<attribute: 8 documentation: '(should be an indirect reference)
An array of (LastChar â FirstChar + 1) widths, each element being the glyph width for the character code that equals FirstChar plus the array index.
For character codes outside the range FirstChar to LastChar, the width shall be 0.
These widths shall be interpreted in glyph space as specified by FontMatrix (unlike the widths of a Type 1 font, which are in thousandths of a unit of text space).

If FontMatrix specifies a rotation, only the horizontal component of the transformed width shall be used.
That is, the resulting displacement shall be horizontal in text space, as is the case for all simple fonts.'>
	^self objectAt: #Widths
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: (PDFtalk at: #Fonts) at: 1.
%
category: '*PDFtalk Fonts-converting'
method: CustomFont
addPDFFontFileTo: aFontDescriptor
	aFontDescriptor at: #FontFile put: self program pdfFontFile newReference
%
category: '*PDFtalk Fonts-accessing'
method: Font
pdfStringWithTabularCharacters: aString for: aPDFRenderer
	"<String>
	string with WinAnsiEncoding where tabular glyphs are specially encoded.
	Tabular glyphs are not supported in PostScript Type-1 fonts"

	^aString
%
category: '*PDFtalk Fonts-converting'
method: Font
addPDFFontFileTo: aFontDescriptor
	"do nothing"
%
method: Font
newPDFEncodingWith: extraGlyphs
	"<Symbol | Encoding>"

	| encoding runs diffs |
	extraGlyphs isEmpty ifTrue: [
		^#WinAnsiEncoding].
	runs := extraGlyphs values asSortedCollection piecesCutWhere: [:code1 :code2 |
		code1 + 1 ~= code2].
	diffs := OrderedCollection new.
	runs do: [:run |
		diffs add: run first.
		diffs addAll: (run collect: [:code | (extraGlyphs keyAtValue: code) name asSymbol])].
	encoding := (PDF classAt: #Encoding) empty.
	encoding at: #BaseEncoding put: #WinAnsiEncoding.
	encoding at: #Differences put: diffs.
	^encoding
%
method: Font
pdfFont
	"<PDFtalk.Font>
	PDF structure to be embedded into a PDF Document"

	| pdfFont fontDescriptor |
	pdfFont := (PDF classAt: #Type1) empty.
	fontDescriptor := self pdfFontDescriptor.
	pdfFont at: #BaseFont put: fontDescriptor FontName.
	pdfFont at: #FontDescriptor put: fontDescriptor newReference.
	^pdfFont
%
method: Font
pdfFontDescriptor
	| fontDescriptor |
	fontDescriptor := (PDF classAt: #FontDescriptor) empty.
	fontDescriptor at: #FontName put: self postScriptName asSymbol.
	fontDescriptor at: #Flags put: self pdfFlags.
	fontDescriptor at: #FontBBox put: self fontBBoxInStandardGlyphSpace.
	fontDescriptor at: #ItalicAngle put: self italicAngle.
	fontDescriptor at: #Ascent put: (self inStandardGlyphSpace: self ascender).
	fontDescriptor at: #Descent put: (self inStandardGlyphSpace: self descender).
	fontDescriptor at: #CapHeight put: (self inStandardGlyphSpace: self capHeight).
	fontDescriptor at: #StemV put: (self inStandardGlyphSpace: self stemV).
	self addPDFFontFileTo: fontDescriptor.
	^fontDescriptor
%
method: Font
pdfWinAnsiEncodingAttributesWith: extraGlyphs
	| lastCharIndex lastChar firstCharIndex w firstChar widths dict |
	widths := self class winAnsiEncoder decoder asArray collect: [:char |
		(self glyphOrNilAtUnicode: char asInteger) ifNotNil: [:glyph | glyph width]].
	extraGlyphs keysAndValuesDo: [:glyph :code | widths at: code + 1 put: glyph width].
	firstChar := nil.
	firstCharIndex := 1.
	[firstChar isNil] whileTrue: [
		(widths at: firstCharIndex) ifNil: [firstCharIndex := firstCharIndex + 1] ifNotNil: [
			firstChar := firstCharIndex]].
	lastChar := nil.
	lastCharIndex := 256.
	[lastChar isNil] whileTrue: [
		(widths at: lastCharIndex) ifNil: [lastCharIndex := lastCharIndex - 1] ifNotNil: [
			lastChar := lastCharIndex]].
	w := widths copyFrom: firstChar to: lastChar.
	w replaceAll: nil with: self glyphs first width.
	dict := Valuemap new.
	dict at: #Widths put: (w collect: [:width | self inStandardGlyphSpace: width]).
	dict at: #FirstChar put: firstChar - 1.
	dict at: #LastChar put: lastChar - 1.
	dict at: #Encoding put: (self newPDFEncodingWith: extraGlyphs).
	^dict
%
category: '*PDFtalk Fonts-converting'
method: FontProgram
pdfFontFile
	| headerBytes binaryBytes trailerBytes headerSize binarySize trailerSize wst |
	headerBytes := self header contents asString.
	headerSize := headerBytes size.
	binaryBytes := self binaryContents asString.
	binarySize := binaryBytes size.
	trailerBytes := self trailerByteString.
	trailerSize := trailerBytes size.
	wst := WriteStream on: (String new: headerSize + binarySize + trailerSize).
	wst
		nextPutAll: headerBytes;
		nextPutAll: binaryBytes;
		nextPutAll: trailerBytes.
	^PDF Stream
		on: (Valuemap
			with: #Length1 -> headerSize
			with: #Length2 -> binarySize
			with: #Length3 -> trailerSize
			with: #Filter -> #FlateDecode)
		internal: wst contents
%
category: '*PDFtalk Fonts-converting'
method: StandardFont
pdfFont
	| pdfFont |
	pdfFont := (PDF classAt: #Type1) empty.
	pdfFont at: #BaseFont put: self postScriptName asSymbol.
	^pdfFont
%
method: StandardFont
pdfWinAnsiEncodingAttributesWith: extraGlyphs
	"from PDF 1.5, this special treatment is deprecated:
	Also standard fonts should have a proper description (without a FontFile though)"

	| dict |
	dict := Valuemap new.
	dict at: #Encoding put: (self newPDFEncodingWith: extraGlyphs).
	^dict
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: ((PDFtalk at: #Fonts) at: #OpenType) at: 1.
%
category: '*PDFtalk Fonts-converting'
method: Cff
pdfFontFile
	^PDF Stream
		on: (Dictionary
			with: #Subtype -> #Type1C
			with: #Filter -> #FlateDecode)
		internal: self contents asString
%
category: '*PDFtalk Fonts-accessing'
method: Font
pdfStringWithTabularCharacters: aString for: aPDFRenderer
	"<String>
	string with WinAnsiEncoding where tabular glyphs are specially encoded"

	^aPDFRenderer pdfStringWithTabularCharacters: aString inFont: self
%
category: '*PDFtalk Fonts-converting'
method: Font
addPDFFontFileTo: aFontDescriptor
	aFontDescriptor at: #FontFile3 put: self cff pdfFontFile newReference
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Graphics'.
	dict at: #comment put: 'PDF Graphics as defined in PDF 32000_2008.pdf section 8, pp. 127

The graphics operators used in PDF content streams describe the appearance of pages that are to be reproduced on a raster output device. 
The facilities described in this clause are intended for both printer and display applications.

The graphics operators form six main groups:

	â¢	Graphics state operators manipulate the data structure called the graphics state, the global framework within which the other graphics operators execute. 
The graphics state includes the current transformation matrix (CTM), which maps user space coordinates used within a PDF content stream into output device coordinates. 
It also includes the current colour, the current clipping path, and many other parameters that are implicit operands of the painting operators.
	â¢	Path construction operators specify paths, which define shapes, line trajectories, and regions of various sorts. 
They include operators for beginning a new path, adding line segments and curves to it, and closing it.
	â¢	Path-painting operators fill a path with a colour, paint a stroke along it, or use it as a clipping boundary.
	â¢	Other painting operators paint certain self-describing graphics objects. 
These include sampled images, geometrically defined shadings, and entire content streams that in turn contain sequences of graphics operators.
	â¢	Text operators select and show character glyphs from fonts (descriptions of typefaces for representing text characters). 
Because PDF treats glyphs as general graphical shapes, many of the text operators could be grouped with the graphics state or painting operators. 
However, the data structures and mechanisms for dealing with glyph and font descriptions are sufficiently specialized that clause 9, "Text" focuses on them.
	â¢	Marked-content operators associate higher-level logical information with objects in the content stream. 
This information does not affect the rendered appearance of the content (although it may determine if the content should be presented at all); 
it is useful to applications that use PDF for document interchange.
'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #storeVersion put: '2.5.1.0'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class Graphic
DoIt
Object
	subclass: 'Graphic'
	instVarNames: #(frame)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Graphic category: 'PDFtalk Graphics'.
	Graphic comment: 'A graphical object on a PDF page

It has a frame (quadriliteral) in device space'.
	Graphic namespacePath: #(#PDFtalk).
%
# Define class Graphicelement
DoIt
Graphic
	subclass: 'Graphicelement'
	instVarNames: #(operations state)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Graphicelement category: 'PDFtalk Graphics'.
	Graphicelement comment: 'Basic graphical object which has all context to reproduce itself

This includes always the graphicsState before the operator is applied

For drawings, this includes also the currentPath and other information'.
	Graphicelement namespacePath: #(#PDFtalk).
%
# Define class OperationObject
DoIt
Graphicelement
	subclass: 'OperationObject'
	instVarNames: #(redundant resource)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	OperationObject category: 'PDFtalk Graphics'.
	OperationObject comment: 'simple wrapper for a single operator.

May contain a resolved resource'.
	OperationObject namespacePath: #(#PDFtalk).
%
# Define class Context
DoIt
Object
	subclass: 'Context'
	instVarNames: #(objects)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Context category: 'PDFtalk Graphics'.
	Context comment: 'Sequence of GraphicsObjects and maybe nested GraphicsCollectors'.
	Context namespacePath: #(#PDFtalk).
%
# Define class IsolatedContext
DoIt
Context
	subclass: 'IsolatedContext'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	IsolatedContext category: 'PDFtalk Graphics'.
	IsolatedContext comment: 'A PDF document typically contains many graphical elements that are independent of each other and nested to multiple levels. The graphics state stack allows these elements to make local changes to the graphics state without disturbing the graphics state of the surrounding environment. The stack is a LIFO (last in, first out) data structure in which the contents of the graphics state may be saved and later restored using the following operators:
â¢ The q operator shall push a copy of the entire graphics state onto the stack.
â¢ The Q operator shall restore the entire graphics state to its former value by popping it from the stack.

NOTE
These operators can be used to encapsulate a graphical element so that it can modify parameters of the graphics state and later restore them to their previous values.

Occurrences of the q and Q operators shall be balanced within a given content stream (or within the sequence of streams specified in a page dictionaryâs Contents array).'.
	IsolatedContext namespacePath: #(#PDFtalk).
%
# Define class LineJoin
DoIt
Value
	subclass: 'LineJoin'
	instVarNames: #(value)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	LineJoin category: 'PDFtalk Graphics'.
	LineJoin comment: 'PDF Line Cap Style as defined in PDF 32000_2008.pdf, section 8.4.3.4, pp. 125.

The line join style shall specify the shape to be used at the corners of paths that are stroked. Table 55 shows the possible values. Join styles shall be significant only at points where consecutive segments of a path connect at an angle; segments that meet or intersect fortuitously shall receive no special treatment.

0	Miter join	The outer edges of the strokes for the two segments shall beextended until they meet at an angle, as in a picture frame. 
				If the segments meet at too sharp an angle (as defined by the miter limit parameter), a bevel join shall be used instead.
1	Round join	An arc of a circle with a diameter equal to the line width shall be drawn around the point where the two segments meet, 
				connecting the outer edges of the strokes for the two segments. 
				This pieslice-shaped figure shall be filled in, producing a rounded corner.
2	Bevel join	The two segments shall be finished with butt caps and the resulting notch beyond the ends of the segments shall be filled with a triangle.'.
	LineJoin namespacePath: #(#PDFtalk).
%
# Define class Matrix
DoIt
PDFArray
	subclass: 'Matrix'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Matrix category: 'PDFtalk Graphics'.
	Matrix comment: 'PDF Transformation Matrices as defined in PDF 32000_2008.pdf, section 8.3.4, pp. 119.

To understand the mathematics of coordinate transformations in PDF, it is vital to remember two points:
	â¢ Transformations alter coordinate systems, not graphics objects.
	All objects painted before a transformation is applied shall be unaffected by the transformation.
	Objects painted after the transformation is applied shall be interpreted in the transformed coordinate system.
	â¢ Transformation matrices specify the transformation from the new (transformed) coordinate system to the original (untransformed) coordinate system.
	All coordinates used after the transformation shall be expressed in the transformed coordinate system.
	PDF applies the transformation matrix to find the equivalent coordinates in the untransformed coordinate system.

NOTE 1
Many computer graphics textbooks consider transformations of graphics objects rather than of coordinate systems.
Although either approach is correct and self-consistent, some details of the calculations differ depending on which point of view is taken.

PDF represents coordinates in a two-dimensional space.
The point (x, y) in such a space can be expressed in vector form as [x y 1].
The constant third element of this vector (1) is needed so that the vector can be used with 3-by-3 matrices in the calculations described below.

The transformation between two coordinate systems can be represented by a 3-by-3 transformation matrix written as follows:
[a b 0]
[c d 0]
[e f 1]

Because a transformation matrix has only six elements that can be changed, in most cases in PDF it shall be specified as the six-element array [a b c d e f]'.
	Matrix namespacePath: #(#PDFtalk).
%
# Define class Picture
DoIt
Graphicelement
	subclass: 'Picture'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Picture category: 'PDFtalk Graphics'.
	Picture comment: 'Bitmapped image or external graphics object'.
	Picture namespacePath: #(#PDFtalk).
%
# Define class ContentGraphics
DoIt
Object
	subclass: 'ContentGraphics'
	instVarNames: #(container operations graphics)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ContentGraphics category: 'PDFtalk Graphics'.
	ContentGraphics comment: 'The graphics of a page

The graphic operations and aggregated graphical objects.

It knows the page (or form) to have access to the resources'.
	ContentGraphics namespacePath: #(#PDFtalk).
%
# Define class LineCap
DoIt
Value
	subclass: 'LineCap'
	instVarNames: #(value)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	LineCap category: 'PDFtalk Graphics'.
	LineCap comment: 'PDF Line Cap Style as defined in PDF 32000_2008.pdf, section 8.4.3.3, pp. 125.

The line cap style shall specify the shape that shall be used at the ends of open subpaths (and dashes, if any) when they are stroked.

0	Butt cap. 				The stroke shall be squared off at the endpoint of the path. There shall be no projection beyond the end of the path.
1	Round cap. 				A semicircular arc with a diameter equal to the line width shall be drawn around the endpoint and shall be filled in.
2	Projecting square cap. 	The stroke shall continue beyond the endpoint of the path for a distance equal to half the line width and shall besquared off.'.
	LineCap namespacePath: #(#PDFtalk).
%
# Define class ExternalGraphicsObject
DoIt
Picture
	subclass: 'ExternalGraphicsObject'
	instVarNames: #(resource)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ExternalGraphicsObject category: 'PDFtalk Graphics'.
	ExternalGraphicsObject comment: 'XObject'.
	ExternalGraphicsObject namespacePath: #(#PDFtalk).
%
# Define class Textspan
DoIt
Graphicelement
	subclass: 'Textspan'
	instVarNames: #(font)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Textspan category: 'PDFtalk Graphics'.
	Textspan comment: 'Text in one line with uniform attributes resulting from one text showing operation

The text cannot contain line breaks'.
	Textspan namespacePath: #(#PDFtalk).
%
# Define class Operation
DoIt
Value
	subclass: 'Operation'
	instVarNames: #(operands)
	classVars: #(ClassesAtNames)
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Operation category: 'PDFtalk Graphics'.
	Operation comment: 'PDF Operator as defined in PDF 32000_2008.pdf pp. 82.

An operator is a PDF keyword specifying some action that shall be performed, such as painting a graphical shape on the page.
An operator keyword shall be distinguished from a name object by the absence of an initial SOLIDUS character (2Fh) (/).
Operators shall be meaningful only inside a content stream.'.
	Operation namespacePath: #(#PDFtalk).
%
# Define class UnknownOperation
DoIt
Operation
	subclass: 'UnknownOperation'
	instVarNames: #(operatorName)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	UnknownOperation category: 'PDFtalk Graphics'.
	UnknownOperation comment: 'Operation not known in PDF

Occurs when there are rrors in the content stream'.
	UnknownOperation namespacePath: #(#PDFtalk).
%
# Define class InlineImage
DoIt
Picture
	subclass: 'InlineImage'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	InlineImage category: 'PDFtalk Graphics'.
	InlineImage comment: 'PDF Inline Images as defined in PDF 32000_2008.pdf, section 8.9.7, pp. 214.

As an alternative to the image XObjects, a sampled image may be specified in the form of an inline image.
This type of image shall be defined directly within the content stream in which it will be painted rather than as a separate object.
Because the inline format gives the reader less flexibility in managing the image data, it shall be used only for small images (4 KB or less).

An inline image object shall be delimited in the content stream by the operators BI (begin image), ID (image data), and EI (end image).
BI and ID shall bracket a series of key-value pairs specifying the characteristics of the image, such as its dimensions and colour space;
the image data shall follow between the ID and EI operators.
The format is thus analogous to that of a stream object such as an image XObject:'.
	InlineImage namespacePath: #(#PDFtalk).
%
# Define class TextContext
DoIt
Context
	subclass: 'TextContext'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TextContext category: 'PDFtalk Graphics'.
	TextContext comment: 'A PDF text object consists of operators that may show text strings, move the text position, and set text state and certain other parameters. In addition, three parameters may be specified only within a text object and shall not persist from one text object to the next:
â¢ Tm, the text matrix
â¢ Tlm, the text line matrix
â¢ Trm, the text rendering matrix, which is actually just an intermediate result that combines the effects of text state parameters, the text matrix (Tm), and the current transformation matrix.

A text object begins with the BT operator and ends with the ET operator.'.
	TextContext namespacePath: #(#PDFtalk).
%
# Define class GraphicsState
DoIt
PDFDictionary
	subclass: 'GraphicsState'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	GraphicsState category: 'PDFtalk Graphics'.
	GraphicsState comment: 'PDF Graphics State as defined in PDF 32000_2008.pdf, section 8.4, pp. 121.

A conforming reader shall maintain an internal data structure called the graphics state that holds current graphics control parameters. 
These parameters define the global framework within which the graphics operators execute.

EXAMPLE 1
The f (fill) operator implicitly uses the current colour parameter, and the S (stroke) operator additionally uses the current line width parameter from the graphics state.

A conforming reader shall initialize the graphic state at the beginning of each page with the values specified. 
Table 52 lists those graphics state parameters that are device-independent and are appropriate to specify in page descriptions. 
The parameters listed in Table 53 control details of the rendering (scan conversion) process and are device-dependent; 
a page description that is intended to be device-independent should not be written to modify these parameters.'.
	GraphicsState namespacePath: #(#PDFtalk).
%
# Define class InlineImageContext
DoIt
Context
	subclass: 'InlineImageContext'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	InlineImageContext category: 'PDFtalk Graphics'.
	InlineImageContext comment: 'Context to assemble an inline image'.
	InlineImageContext namespacePath: #(#PDFtalk).
%
# Define class ContentParser
DoIt
Parser
	subclass: 'ContentParser'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ContentParser category: 'PDFtalk Graphics'.
	ContentParser comment: 'This parser reads PDF content streams.
Special restrictions apply.

From PDF 32000_2008.pdf pp.81:

A content stream, after decoding with any specified filters, shall be interpreted according to the PDF syntax rules.
It consists of PDF objects denoting operands and operators.
The operands needed by an operator shall precede it in the stream.

An operand is a direct object belonging to any of the basic PDF data types except a stream.
Dictionaries shall be permitted as operands only by certain specific operators.
Indirect objects and object references shall not be permitted at all.

An operator is a PDF keyword specifying some action that shall be performed, such as painting a graphical shape on the page.
An operator keyword shall be distinguished from a name object by the absence of an initial SOLIDUS character (2Fh) (/).
Operators shall be meaningful only inside a content stream.

NOTE 
This postfix notation, in which an operator is preceded by its operands, is superficially the same as in the PostScript language.
However, PDF has no concept of an operand stack as PostScript has.

In PDF, all of the operands needed by an operator shall immediately precede that operator.
Operators do not return results, and operands shall not be left over when an operator finishes execution.'.
	ContentParser namespacePath: #(#PDFtalk).
%
# Define class Dash
DoIt
PDFArray
	subclass: 'Dash'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Dash category: 'PDFtalk Graphics'.
	Dash comment: 'PDF Line Dash Pattern as defined in PDF 32000_2008.pdf, section 8.4.3.6, pp. 126.

The line dash pattern shall control the pattern of dashes and gaps used to stroke paths. It shall be specified by a dash array and a dash phase. 
The dash array''s elements shall be numbers that specify the lengths of alternating dashes and gaps; 
the numbers shall be nonnegative and not all zero. 
The dash phase shall specify the distance into the dash pattern at which to start the dash. 
The elements of both the dash array and the dash phase shall be expressed in user space units.

Before beginning to stroke a path, the dash array shall be cycled through, adding up the lengths of dashes and gaps. 
When the accumulated length equals the value specified by the dash phase, stroking of the path shall begin, 
and the dash array shall be used cyclically from that point onward. 
As can be seen from the table, an empty dash array and zero phase can be used to restore the dash pattern to a solid line.

Dashed lines shall wrap around curves and corners just as solid stroked lines do. 
The ends of each dash shall be treated with the current line cap style, and corners within dashes shall be treated with the current line join style. 
A stroking operation shall take no measures to coordinate the dash pattern with features of the path; 
it simply shall dispense dashes and gaps along the path in the pattern defined by the dash array.

When a path consisting of several subpaths is stroked, each subpath shall be treated independentlyâthat is, 
the dash pattern shall be restarted and the dash phase shall be reapplied to it at the beginning of each subpath.'.
	Dash namespacePath: #(#PDFtalk).
%
# Define class Drawing
DoIt
Graphicelement
	subclass: 'Drawing'
	instVarNames: #(clipping painting intersections)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Drawing category: 'PDFtalk Graphics'.
	Drawing comment: 'A path painting operation with a list of path construction operations and an optional clipping path operation'.
	Drawing namespacePath: #(#PDFtalk).
%
# Define class MarkedContext
DoIt
Context
	subclass: 'MarkedContext'
	instVarNames: #(tag properties)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	MarkedContext category: 'PDFtalk Graphics'.
	MarkedContext comment: 'Marked-content operators may identify a portion of a PDF content stream as a marked-content element of interest to a particular conforming product. Marked-content elements and the operators that mark them shall fall into two categories:
â¢ The MP and DP operators shall designate a single marked-content point in the content stream.
â¢ The BMC, BDC, and EMC operators shall bracket a marked-content sequence of objects within the content stream.

NOTE 1
This is a sequence not simply of bytes in the content stream but of complete graphics objects. Each object is fully qualified by the parameters of the graphics state in which it is rendered.
NOTE 2
A graphics application, for example, might use marked content to identify a set of related objects as a group to be processed as a single unit. A text-processing application might use it to maintain a connection between a footnote marker in the body of a document and the corresponding footnote text at the bottom of the page. The PDF logical structure facilities use marked-content sequences to associate graphical content with structure elements.

All marked-content operators except EMC shall take a tag operand indicating the role or significance of the marked-content element to the conforming reader. All such tags shall be registered with Adobe Systems to avoid conflicts between different applications marking the same content stream. In addition to the tag operand, the DP and BDC operators shall specify a property list containing further information associated with the marked content.
Marked-content operators may appear only between graphics objects in the content stream. They may not occur within a graphics object or between a graphics state operator and its operands. Marked-content sequences may be nested one within another, but each sequence shall be entirely contained within a single content stream.

NOTE 3
A marked-content sequence may not cross page boundaries.
NOTE 4
The Contents entry of a page object, which may be either a single stream or an array of streams, is considered a single stream with respect to marked-content sequences.'.
	MarkedContext namespacePath: #(#PDFtalk).
%
# Define class ContentProcessor
DoIt
Object
	subclass: 'ContentProcessor'
	instVarNames: #(graphicsState graphicsStateStack contextStack currentPath resources currentFont)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ContentProcessor category: 'PDFtalk Graphics'.
	ContentProcessor comment: 'Processes content stream operations and updates the graphics state

Operations are processed sequentially one after the other.
1. an Operation is wrapped with an OperationObject with the current graphics state
2. the OperationObject is executed and changes the state of the processor 

The state consists of
- graphicsState :: all settings effecting drawing operations
- graphicsStateStack :: save and restore state
- contextStack :: one of IsolatedContext, TextContext, MarkedContext or InlineImageContext
- currentPath :: lines and rectangles
- currentFont :: active font from the resources'.
	ContentProcessor namespacePath: #(#PDFtalk).
%
# Define class ExtGState
DoIt
PDFDictionary
	subclass: 'ExtGState'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ExtGState category: 'PDFtalk Graphics'.
	ExtGState comment: 'PDF Graphics State Parameter Dictionaries as defined in PDF 32000_2008.pdf, section 8.4.5, pp. 128.

While some parameters in the graphics state may be set with individual operators, others may not. 
The latter may only be set with the generic graphics state operator gs (PDF 1.2). 
The operand supplied to this operator shall be the name of a graphics state parameter dictionary 
whose contents specify the values of one or more graphics state parameters. 
This name shall be looked up in the ExtGState subdictionary of the current resource dictionary.

The graphics state parameter dictionary is also used by type 2 patterns, which do not have a content stream in which the graphics state operators could be invoked.

Each entry in the parameter dictionary shall specify the value of an individual graphics state parameter. 
All entries need not be present for every invocation of the gs operator; the supplied parameter dictionary may include any combination of parameter entries. 
The results of gs shall be cumulative; parameter values established in previous invocations persist until explicitly overridden.

NOTE
Note that some parameters appear in both Tables; 
these parameters can be set either with individual graphics state operators or with gs. 
It is expected that any future extensions to the graphics state will be implemented by 
adding new entries to the graphics state parameter dictionary rather than by introducing new graphics state operators.'.
	ExtGState namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| package policy |
	package := GsPackageLibrary createPackageNamed: #SessionMethods.
	GsPackageLibrary installPackage: package.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: FileInSymbolDictionary.
	policy externalSymbolList: (GsSession currentSession symbolList asArray copyWithout: FileInSymbolDictionary).
	policy enable.
%
category: '*PDFtalk Graphics-actions'
method: Object
addAsContentTokenWith: someOperands to: someOperators inParser: aContentParser
	"<Array of: Object>"

	^someOperands , (Array with: self)
%
DoIt
	| dict policy |
	dict := SymbolDictionary new.
	dict at: #UNWRITABLE put: dict.
	dict immediateInvariant.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: dict.
	policy externalSymbolList: Array new.
	policy enable.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
classmethod: ContentGraphics
pdfVersion
	^Version pdf1_0
%
category: 'instance creation'
classmethod: ContentGraphics
on: aPageOrForm
	| inst |
	inst := self new.
	inst initializeContainer: aPageOrForm operations: nil.
	^inst
%
classmethod: ContentGraphics
on: aType3Font operations: someOperations
	| inst |
	inst := self new.
	inst initializeContainer: aType3Font operations: someOperations.
	^inst
%
category: 'accessing'
method: ContentGraphics
container
	"<Page | FormXObject>
	including contents and resources"

	^container
%
method: ContentGraphics
graphics
	"<Array of: Graphicelement>"

	^graphics ifNil: [
		| processor |
		processor := ContentProcessor newWithResources: self resources.
		processor processOperations: self operations.
		graphics := processor currentContext objects]
%
method: ContentGraphics
graphicsOperations
	^self graphics
%
method: ContentGraphics
operations
	"<Array of: Operation>"

	^operations ifNil: [operations := self readOperations]
%
method: ContentGraphics
resources
	"<Resources>"

	^self container Resources
%
category: 'actions'
method: ContentGraphics
readOperations
	"<Array of: Operation>"

	^(ContentParser onString: self container contentString) readOperations
%
category: 'initialize-release'
method: ContentGraphics
initializeContainer: aPageOrForm operations: someOperations
	container := aPageOrForm.
	operations := someOperations
%
category: 'printing'
method: ContentGraphics
printOn: stream
	stream
		nextPutAll: self class name;
		nextPut: $[;
		nextPutAll: self operations size printString.
	self isComputed ifTrue: [
		stream
			nextPut: $,;
			nextPutAll: self graphics size printString].
	stream nextPut: $]
%
category: 'testing'
method: ContentGraphics
isComputed
	^graphics notNil
%
category: 'accessing'
method: ContentParser
initialTokenActions
	^(Dictionary new)
		at: #null put: [nil];
		at: #true put: [true];
		at: #false put: [false];
		at: '(' put: [self readString];
		at: '<' put: [self readHexString];
		at: '/' put: [self readName];
		at: '[' put: [self readArray];
		at: '<<' put: [self readDictionary];
		yourself
%
category: 'reading'
method: ContentParser
readImageData
	| wst |
	(self isWhitespace: self next) ifFalse: [
		self error: 'whitespace expected'].
	wst := String new writeStream.
	[self atEnd] whileFalse: [
		| char |
		char := self next.
		(char = $E and: [
		self peek = $I]) ifTrue: [
				self skip: -2.
				wst skip: -1.
				^wst contents asByteArray].
		wst nextPut: char].
	self error: 'no EI (EndImage) found'
%
category: 'reading objects'
method: ContentParser
readArray
	"<PDFArray of: PDFObject>"

	| objects done |
	objects := OrderedCollection new.
	done := false.
	[done] whileFalse: [
		self skipWhitespace.
		self atEnd
			ifTrue: [
			ReadError raiseSignal: 'End of Array (]) expected'.
			done := true]
			ifFalse: [
			self peek = $]
				ifTrue: [
				self next.
				done := true]
				ifFalse: [
				objects add: self readObject]]].
	^objects asPDF
%
method: ContentParser
readDictionary
	"<PDF.Dictionary>"

	^PDF Dictionary on: self readOrderedDictionary
%
method: ContentParser
readObject
	"<PDFObject | nil>
	read a PDF object off the aStream.
	Answer the PDF object"

	| token action |
	token := self nextToken ifNil: [
		^nil].
	action := self tokenActions at: token ifAbsent: [
		token first isPdfNumeric ifTrue: [
			^self readNumber: token].
		^Operation on: token].
	^action value
%
method: ContentParser
readOperations
	| operators operands |
	self stream reset.
	operators := OrderedCollection new.
	operands := #().
	[self atEnd] whileFalse: [
		| object |
		object := self readObject.
		(object isNil and: [
		self atEnd]) ifTrue: [
				^operators].
		operands := object addAsContentTokenWith: operands to: operators inParser: self].
	^operators
%
method: ContentParser
readOrderedDictionary
	| dict done |
	dict := Valuemap new.
	done := false.
	[done] whileFalse: [
		self skipWhitespace.
		self whenNext: $/ do: [dict at: self nextNameSymbol put: self readObject] ifNot: [:char |
			char = $>
				ifTrue: [
				self next.
				self whenNext: $> do: [done := true] ifNot: [:char1 |
					ReadError raiseSignal: 'Read ' , char1 asSource , ' but end of Dictionary (>>) expected']]
				ifFalse: [
				ReadError raiseSignal: 'Read ' , char asSource , ' but $/ or $> expected']]].
	^dict
%
method: ContentParser
readString

	^ContentString content: (PDF String asPDFEndOfLines: self readStringCharacters) asByteArray
%
category: 'instance creation'
classmethod: ContentProcessor
newWithResources: aResources
	| inst |
	inst := self new.
	inst initializeResources: aResources.
	^inst
%
category: 'accessing'
method: ContentProcessor
contextStack
	"<OrderedCollection of: Context>
	Stack of open contexts. The current context is on top"

	^contextStack ifNil: [contextStack := OrderedCollection with: Context new]
%
method: ContentProcessor
currentContext
	"<Context>
	the context to interpreting the operators"

	^self contextStack last
%
method: ContentProcessor
currentFont
	"<Font> asValue"

	^currentFont
%
method: ContentProcessor
currentFont: aFont
	currentFont := aFont
%
method: ContentProcessor
currentPath
	"<SeqenceableCollection of: PathConstructionOperator>"

	^currentPath ifNil: [currentPath := Drawing new]
%
method: ContentProcessor
graphicsState
	"<GraphicsState>"

	^graphicsState ifNil: [graphicsState := GraphicsState new]
%
method: ContentProcessor
graphicsState: aGraphicsState
	graphicsState := aGraphicsState
%
method: ContentProcessor
graphicsStateStack
	"<SequenceableCollection of: GraphicsState>"

	^graphicsStateStack ifNil: [graphicsStateStack := OrderedCollection new]
%
method: ContentProcessor
newOperationObjectOn: anOperation
	^OperationObject
		operations: (Array with: anOperation)
		state: self graphicsState
		resource: (anOperation resourceIn: self)
%
method: ContentProcessor
resources
	"<Resources>"

	^resources
%
category: 'actions'
method: ContentProcessor
addGraphic: aGraphic
	self addObject: aGraphic
%
method: ContentProcessor
addObject: aGraphicsObject
	self currentContext addObject: aGraphicsObject
%
method: ContentProcessor
popCollector
	"<GraphicsCollector>"
	
	^self contextStack removeLast
%
method: ContentProcessor
pushCollector: aGraphicsCollector
	self contextStack addLast: aGraphicsCollector
%
method: ContentProcessor
resetCurrentPath
	currentPath := nil
%
method: ContentProcessor
setClippingPathIntersecting: aPath
	| newClippingPath |
	newClippingPath := self graphicsState clippingPath ifNil: [aPath] ifNotNil: [:clippingPath |
		clippingPath intersectedBy: aPath].
	self graphicsState at: #clippingPath put: newClippingPath
%
category: 'actions operations'
method: ContentProcessor
addBeginImageData: aBeginImageData
	self addObject: aBeginImageData
%
method: ContentProcessor
addBeginInlineImage: aBeginInlineImage
	self pushCollector: InlineImageContext new
%
method: ContentProcessor
addBeginMarkedContent: aBeginMarkedContent
	self pushCollector: (MarkedContext tag: aBeginMarkedContent operands first)
%
method: ContentProcessor
addBeginMarkedContentWithProperties: aBeginMarkedContentWithProperties
	self pushCollector: (MarkedContext
		tag: aBeginMarkedContentWithProperties operands first
		properties: aBeginMarkedContentWithProperties operands last)
%
method: ContentProcessor
addBeginText
	self pushCollector: TextContext new.
	self graphicsState at: #textMatrix put: nil.
	self graphicsState at: #textLineMatrix put: nil
%
method: ContentProcessor
addClippingPathOperation: aClippingPathOperation
	self currentPath addClipping: aClippingPathOperation
%
method: ContentProcessor
addColourOperation: aColourOperation
	| object |
	object := self newOperationObjectOn: aColourOperation.
	aColourOperation modify: self with: object resource.
	object redundant: object state = self graphicsState.
	self addObject: object
%
method: ContentProcessor
addEndInlineImage: anEndInlineImage
	self addObject: anEndInlineImage.
	self addGraphic: (InlineImage operations: self popCollector objects state: self graphicsState)
%
method: ContentProcessor
addEndMarkedContent
	self addObject: self popCollector
%
method: ContentProcessor
addEndText
	self graphicsState at: #textMatrix put: nil.
	self graphicsState at: #textLineMatrix put: nil.
	self addObject: self popCollector
%
method: ContentProcessor
addGraphicsStateOperation: aGraphicsStateOperation
	| object |
	object := self newOperationObjectOn: aGraphicsStateOperation.
	aGraphicsStateOperation modify: self with: object resource.
	object redundant: object state = self graphicsState.
	self addObject: object
%
method: ContentProcessor
addOperation: anOperation
	self addObject: (self newOperationObjectOn: anOperation)
%
method: ContentProcessor
addPathConstructionOperation: aPathConstructionOperation
	self currentPath addToPath: aPathConstructionOperation
%
method: ContentProcessor
addPathPaintingOperation: aPathPaintingOperation
	| specificPath |
	self currentPath addPainting: aPathPaintingOperation.
	self currentPath setRelevantStateFrom: self graphicsState.
	specificPath := self currentPathObject.
	self addGraphic: specificPath.
	specificPath clipping ifNotNil: [
		self setClippingPathIntersecting: specificPath].
	self resetCurrentPath
%
method: ContentProcessor
addRestoreState
	self graphicsState: self graphicsStateStack removeLast key.
	self addObject: self popCollector
%
method: ContentProcessor
addSaveStateAt: indexInteger
	self pushCollector: IsolatedContext new.
	self graphicsStateStack addLast: self graphicsState copy -> indexInteger
%
method: ContentProcessor
addTextPositioningOperation: aTextPositioningOperation
	| object |
	object := self newOperationObjectOn: aTextPositioningOperation.
	aTextPositioningOperation modify: self with: object resource.
	self addObject: object
%
method: ContentProcessor
addTextShowingOperation: aTextShowingOperation
	| object |
	object := Textspan
		operations: (Array with: aTextShowingOperation)
		state: self graphicsState
		font: self currentFont.
	aTextShowingOperation modify: self with: object resource.
	self addGraphic: object
%
method: ContentProcessor
addTextStateOperation: aTextStateOperation
	| object |
	object := self newOperationObjectOn: aTextStateOperation.
	aTextStateOperation modify: self with: object resource.
	object redundant: object state = self graphicsState.
	self addObject: object
%
method: ContentProcessor
addXObjectOperation: anXObjectOperation
	self addGraphic: (ExternalGraphicsObject
		operations: (Array with: anXObjectOperation)
		state: self graphicsState
		resource: (anXObjectOperation resourceIn: self))
%
method: ContentProcessor
currentPathObject
	"<Drawing>
	the path object to be constructed"

	^self currentPath
%
category: 'initialize-release'
method: ContentProcessor
initializeResources: aResources
	resources := aResources
%
category: 'processing'
method: ContentProcessor
processOperations: someOperations
	"processes someOperations and leaves the state after.
	The currentContext contains all operations nested in their contexts"

	someOperations doWithIndex: [:operation :index | operation processWith: self at: index]
%
category: 'accessing'
method: Context
allOperations
	^self operations
%
method: Context
objects
	"<SequenceableCollection of: (Graphicelement | Context)>"

	^objects ifNil: [objects := OrderedCollection new]
%
method: Context
operations
	"<SequenceableCollection of: Operation>"

	| operations |
	operations := OrderedCollection new.
	self objects do: [:object | operations addAll: object allOperations].
	^operations
%
method: Context
pdfVersion
	^self operations inject: Version pdf1_0 into: [:max :op | max max: op pdfVersion]
%
method: Context
resource
	^nil
%
category: 'actions'
method: Context
addObject: aGraphicelementOrContext
	self objects add: aGraphicelementOrContext
%
category: 'writing'
method: Context
postfix
	"<String>"

	^''
%
method: Context
prefix
	"<String>"

	^''
%
method: Context
writePDFOn: aWriter indent: anInteger
	aWriter
		nextPutAll: self prefix asByteArray;
		cr.
	self objects do: [:object |
		object writePDFOn: aWriter indent: anInteger.
		aWriter cr].
	aWriter nextPutAll: self postfix asByteArray
%
category: 'accessing'
classmethod: Dash
numberOfAttributes
	^2
%
classmethod: Dash
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Dash
		supertype: #Object
		section: '8.4.3.6'
		documentation: 'The line dash pattern shall control the pattern of dashes and gaps used to stroke paths. It shall be specified by a dash array and a dash phase. 
The dash arrays elements shall be numbers that specify the lengths of alternating dashes and gaps; 
the numbers shall be nonnegative and not all zero. 
The dash phase shall specify the distance into the dash pattern at which to start the dash. 
The elements of both the dash array and the dash phase shall be expressed in user space units.

Before beginning to stroke a path, the dash array shall be cycled through, adding up the lengths of dashes and gaps. 
When the accumulated length equals the value specified by the dash phase, stroking of the path shall begin, 
and the dash array shall be used cyclically from that point onward. 
As can be seen from the table, an empty dash array and zero phase can be used to restore the dash pattern to a solid line.

Dashed lines shall wrap around curves and corners just as solid stroked lines do. 
The ends of each dash shall be treated with the current line cap style, and corners within dashes shall be treated with the current line join style. 
A stroking operation shall take no measures to coordinate the dash pattern with features of the path; 
it simply shall dispense dashes and gaps along the path in the pattern defined by the dash array.

When a path consisting of several subpaths is stroked, each subpath shall be treated independentlyâthat is, 
the dash pattern shall be restarted and the dash phase shall be reapplied to it at the beginning of each subpath.'
%
category: 'instance creation'
classmethod: Dash
array: arrayArray
	^self array: arrayArray offset: 0
%
classmethod: Dash
array: arrayArray offset: offsetNumber
	| inst |
	inst := self empty.
	inst initializeArray: arrayArray offset: offsetNumber.
	^inst
%
classmethod: Dash
empty
	| empty |
	empty := super empty.
	empty at: 1 put: #().
	empty at: 2 put: 0.
	^empty
%
classmethod: Dash
offset: offsetNumber
	^self array: #() offset: offsetNumber
%
category: 'accessing'
method: Dash
string
	"<String>
	the PostScript source arguments for setdash. Default: '[] 0' "

	^self pdfSource
%
category: 'accessing entries'
method: Dash
array
	<typeArrayOf: #Number>
	<required>
	<attribute: 1 documentation: 'The dash arrayâs elements shall be numbers that specify the lengths of alternating dashes and gaps; the numbers shall be nonnegative and not all zero'>
	^self objectAt: 1 ifNil: [#() asPDF]
%
method: Dash
offset
	<type: #Number>
	<attribute: 2 documentation: 'The dash arrayâs elements shall be numbers that specify the lengths of alternating dashes and gaps; the numbers shall be nonnegative and not all zero'>
	^self objectAt: 2 ifNil: [0 asPDF]
%
category: 'copying'
method: Dash
scaled: aNumber
	^self class
		array: (self array content collect: [:elem | elem * aNumber])
		offset: self offset content * aNumber
%
category: 'initialize-release'
method: Dash
initializeArray: arrayArray offset: offsetNumber
	self at: 1 put: (Array withAll: (arrayArray ifNil: [#()])).
	self at: 2 put: (offsetNumber ifNil: [0])
%
category: 'printing'
method: Dash
printvalueWith: printer
	| wst |
	wst := String new writeStream.
	wst
		nextPut: $(;
		nextPutAll: (printer classnameOf: self);
		nextPutAll: ' array: ';
		nextPutAll: self array asSmalltalkValue printString;
		nextPutAll: ' offset: ';
		nextPutAll: self offset asSmalltalkValue printString;
		nextPut: $).
	^LiteralPrintvalue string: wst contents
%
category: 'accessing'
method: Drawing
allOperations
	| list |
	list := self operations asOrderedCollection.
	self clipping ifNotNil: [:operator | list add: operator].
	list add: self painting.
	^list
%
method: Drawing
clipping
	"<ClippingPathOperation | nil>
	modifies the clipping path of the graphics state AFTER the path has been painted"

	^clipping
%
method: Drawing
intersections
	"<SequenceableCollection of: PathObject>
	the receiver is clipped by the paths in #intersections starting with the first (oldest). 
	Used for the clipping path of the graphics state"

	^intersections ifNil: [intersections := OrderedCollection new]
%
method: Drawing
lineWidth
	"<Number>"

	^self state lineWidth asSmalltalkValue
%
method: Drawing
painting
	"<PathPaintingOperator>"

	^painting
%
category: 'actions'
method: Drawing
addClipping: aClippingPathOperator
	clipping := aClippingPathOperator
%
method: Drawing
addPainting: aPathPaintingOperator

	painting := aPathPaintingOperator
%
method: Drawing
addToPath: aPathConstructionOperator
	self operations add: aPathConstructionOperator
%
category: 'converting'
method: Drawing
points
	| points |
	points := OrderedCollection new.
	self operations do: [:op | points addAll: op points].
	^points
%
category: 'copying'
method: Drawing
intersectedBy: aPath
	"<PathObject>"
	
	| copy |
	copy := self copy.
	copy intersections add: aPath.
	^copy
%
category: 'initialize-release'
method: Drawing
initializeFrom: aPathObject
	operations := aPathObject operations.
	state := aPathObject state.
	clipping := aPathObject clipping.
	painting := aPathObject painting.
	intersections := aPathObject intersections
%
category: 'printing'
method: Drawing
printOn: stream
	stream
		nextPutAll: self class name;
		nextPut: $(;
		nextPutAll: (self isClipping
			ifTrue: ['-']
			ifFalse: ['']);
		nextPutAll: self painting printString;
		nextPut: $)
%
category: 'testing'
method: Drawing
isClipping
	^self clipping notNil
%
method: Drawing
isFilling
	^self painting isFilling
%
method: Drawing
isOnlyClipping
	"no drawing"

	^self isClipping and: [
	self painting isOnlyClipping]
%
method: Drawing
isStroking
	^self painting isStroking
%
category: 'instance creation'
classmethod: ExternalGraphicsObject
operations: someOperations state: aGraphicsState resource: aPDFObject

	| inst |
	inst := self new.
	inst
		initializeOperations: someOperations
		state: aGraphicsState
		resource: aPDFObject.
	^inst
%
category: 'accessing'
method: ExternalGraphicsObject
resource
	^resource
%
category: 'initialize-release'
method: ExternalGraphicsObject
initializeOperations: someOperations state: aGraphicsState resource: aPDFObject
	self initializeOperations: someOperations state: aGraphicsState.
	resource := aPDFObject
%
category: 'accessing'
classmethod: ExtGState
pdfTypeDefinition

	^PDFTypeDefinition
		name: #ExtGState
		supertype: #Dictionary
		section: '8.4.5'
		documentation: 'While some parameters in the graphics state may be set with individual operators, others may not. 
The latter may only be set with the generic graphics state operator gs (PDF 1.2). 
The operand supplied to this operator shall be the name of a graphics state parameter dictionary 
whose contents specify the values of one or more graphics state parameters. 
This name shall be looked up in the ExtGState subdictionary of the current resource dictionary.

The graphics state parameter dictionary is also used by type 2 patterns, which do not have a content stream in which the graphics state operators could be invoked.

Each entry in the parameter dictionary shall specify the value of an individual graphics state parameter. 
All entries need not be present for every invocation of the gs operator; the supplied parameter dictionary may include any combination of parameter entries. 
The results of gs shall be cumulative; parameter values established in previous invocations persist until explicitly overridden.

NOTE
Note that some parameters appear in both Tables; 
these parameters can be set either with individual graphics state operators or with gs. 
It is expected that any future extensions to the graphics state will be implemented by 
adding new entries to the graphics state parameter dictionary rather than by introducing new graphics state operators.'
%
classmethod: ExtGState
resourcePrefix
	^'GS'
%
classmethod: ExtGState
resourceType
	"<Symbol>
	the name of a /Resources key"

	^#ExtGState
%
category: 'constants'
classmethod: ExtGState
blendModes
	^self separableBlendModes , self nonSeparableBlendModes
%
classmethod: ExtGState
nonSeparableBlendModes
	^#(#Hue #Saturation #Color #Luminosity)
%
classmethod: ExtGState
separableBlendModes
	^#(#Normal #Compatible #Multiply #Screen #Overlay #Darken #Lighten #ColorDodge #ColorBurn #HardLight #SoftLight #Difference #Exclusion)
%
category: 'instance creation'
classmethod: ExtGState
default
	| inst |
	inst := self empty.
	inst at: #SA put: true.
	inst at: #OP put: false.
	inst at: #op put: false.
	inst at: #OPM put: 1.
	inst at: #FL put: 0.
	inst at: #RI put: #RelativeColorimetric.
	^inst
%
classmethod: ExtGState
forTransparency
	"<ExtGState>
	a graphics state with (default) transparency attributes"

	| inst |
	inst := self default.
	inst addTransparencyAttributes.
	^inst
%
category: 'accessing'
method: ExtGState
gsStateAttributeFor: keySymbol
	"<Symbol>
	the attribute symbol of the graphics state which corresponds to keySymbol"

	| dict |
	dict := Valuemap new.
	dict at: #Type put: nil.	"special"
	dict at: #LW put: #lineWidth.
	dict at: #LC put: #lineCap.
	dict at: #LJ put: #lineJoin.
	dict at: #ML put: #miterLimit.
	dict at: #D put: #dashPattern.
	dict at: #RI put: #renderingIntent.
	dict at: #OP put: nil.	"special"
	dict at: #op put: #overprintNonstroking.
	dict at: #OPM put: #overprintMode.
	dict at: #Font put: nil.	"special"
	dict at: #BG put: #blackGeneration.
	dict at: #BG2 put: nil.	"special"
	dict at: #UCR put: #undercolorRemoval.
	dict at: #UCR2 put: nil.	"special"
	dict at: #TR put: #transfer.
	dict at: #TR2 put: nil.	"special"
	dict at: #HT put: #halftone.
	dict at: #FL put: #flatness.
	dict at: #SM put: #smoothness.
	dict at: #SA put: #strokeAdjustment.
	dict at: #BM put: #blendMode.
	dict at: #SMask put: #softMask.
	dict at: #CA put: #alphaConstantStroking.
	dict at: #ca put: #alphaConstantNonstroking.
	dict at: #AIS put: #alphaSource.
	dict at: #TK put: #textKnockout.
	^dict at: keySymbol ifAbsent: [keySymbol]
%
category: 'accessing entries'
method: ExtGState
AIS
	<type: #Boolean>
	<version: 1 dot: 4>
	<attribute: 25 documentation: 'The alpha source flag (âalpha is shapeâ), 
specifying whether the current soft mask and alpha constant shall beinterpreted as shape values (true) or opacity values (false).'>
	^self objectAt: #AIS
%
method: ExtGState
BG
	<type: #Function>
	<attribute: 11 documentation: 'The black-generation function, which maps the interval [0.0 1.0] to the interval [0.0 1.0].'>
	^self objectAt: #BG
%
method: ExtGState
BG2
	<type: #Function>
	<type: #Name>
	<version: 1 dot: 3>
	<attribute: 12 documentation: 'Same as BG except that the value may also be the name Default, 
denoting the black-generation function that was in effect at the start of the page. 
If both BG and BG2 are present in the same graphics state parameter dictionary, BG2 shall take precedence.'>
	^self objectAt: #BG2
%
method: ExtGState
BM
	<type: #Name>
	<typeArrayOf: #Name>
	<version: 1 dot: 4>
	<attribute: 21 documentation: 'The current blend mode to be used in the transparent imaging model.'>
	^self objectAt: #BM
%
method: ExtGState
ca
	<type: #Number>
	<version: 1 dot: 4>
	<attribute: 24 documentation: 'Same as CA, but for nonstroking operations.'>
	^self objectAt: #ca
%
method: ExtGState
CA
	<type: #Number>
	<version: 1 dot: 4>
	<attribute: 23 documentation: 'The current stroking alpha constant, 
specifying the constant shape or constant opacity value that shall be used for stroking operations in the transparent imaging model.'>
	^self objectAt: #CA
%
method: ExtGState
D
	<type: #Dash>
	<version: 1 dot: 3>
	<attribute: 5 documentation: 'The line dash pattern, expressed as an array of the form [dashArray dashPhase], 
where dashArray shall be itself an array and dashPhase shall be an integer.'>
	^self objectAt: #D
%
method: ExtGState
FL
	<type: #Number>
	<version: 1 dot: 3>
	<attribute: 18 documentation: 'The flatness tolerance.'>
	^self objectAt: #FL
%
method: ExtGState
Font
	<type: #Array>
	<version: 1 dot: 3>
	<attribute: 10 documentation: 'An array of the form [font size], 
where font shall be an indirect reference to a font dictionary and size shall be a number expressed in text space units. 
These two objects correspond to the operands of the Tf operator; 
however, the first operand shall be an indirect object reference instead of a resource name.'>
	^self objectAt: #Font
%
method: ExtGState
HT
	<type: #Dictionary>
	<type: #Stream>
	<typeName: #Default>
	<attribute: 17 documentation: 'The halftone dictionary or stream or the name Default, 
denoting the halftone that was in effect at the start of the page.'>
	^self objectAt: #HT ifAbsent: [#Default asPDF]
%
method: ExtGState
LC
	<type: #Integer>
	<version: 1 dot: 3>
	<attribute: 2 documentation: 'The line cap style.'>
	^self objectAt: #LC
%
method: ExtGState
LJ
	<type: #Integer>
	<version: 1 dot: 3>
	<attribute: 3 documentation: 'The line join style.'>
	^self objectAt: #LJ
%
method: ExtGState
LW
	<type: #Number>
	<version: 1 dot: 3>
	<attribute: 1 documentation: 'The line width.'>
	^self objectAt: #LW
%
method: ExtGState
ML
	<type: #Number>
	<version: 1 dot: 3>
	<attribute: 4 documentation: 'The miter limit.'>
	^self objectAt: #ML
%
method: ExtGState
op
	<type: #Boolean>
	<version: 1 dot: 3>
	<attribute: 8 documentation: 'A flag specifying whether to apply overprint  for painting operations other than stroking. 
If this entry is absent, the OP entry, if any, shall also set this parameter.'>
	^self objectAt: #op
%
method: ExtGState
OP
	<type: #Boolean>
	<version: 1 dot: 3>
	<attribute: 7 documentation: 'A flag specifying whether to apply overprint. 
In PDF 1.2 and earlier, there is a single overprint parameter that applies to all painting operations. 
Beginning with PDF 1.3, there shall be two separate overprint parameters: 
one for stroking and one for all other painting operations. 
Specifying an OP entry shall set both parameters unless there is also an op entry in the same graphics state parameter dictionary, 
in which case the OP entry shall set only the overprint parameter for stroking.'>
	^self objectAt: #OP
%
method: ExtGState
OPM
	<type: #Integer>
	<version: 1 dot: 3>
	<attribute: 9 documentation: 'The overprint mode.'>
	^self objectAt: #OPM
%
method: ExtGState
RI
	<type: #Name>
	<version: 1 dot: 3>
	<attribute: 6 documentation: 'The name of the rendering intent.'>
	^self objectAt: #RI
%
method: ExtGState
SA
	<type: #Boolean>
	<attribute: 20 documentation: 'A flag specifying whether to apply automatic stroke adjustment.'>
	^self objectAt: #SA
%
method: ExtGState
SM
	<type: #Number>
	<version: 1 dot: 3>
	<attribute: 19 documentation: 'The smoothness tolerance.'>
	^self objectAt: #SM
%
method: ExtGState
SMask
	<type: #SoftMask>
	<type: #Name>
	<version: 1 dot: 4>
	<attribute: 22 documentation: 'The current soft mask, specifying the mask shape or mask opacity values that shall be used in the transparent imaging model.
Although the current soft mask is sometimes referred to as a âsoft clip,â altering it with the gs operator completely replaces the old value with the new one, rather than intersecting the two as is done with the current clipping path parameter.'>
	^self objectAt: #SMask
%
method: ExtGState
TK
	<type: #Boolean>
	<version: 1 dot: 4>
	<attribute: 26 documentation: 'The text knockout flag, 
shall determine the behaviour of overlapping glyphs within a text object in the transparent imaging model.'>
	^self objectAt: #TK
%
method: ExtGState
TR
	<type: #Function>
	<typeArrayOf: #Function>
	<attribute: 15 documentation: 'The transfer function, which maps the interval [0.0 1.0] to the interval [0.0 1.0]. 
The value shall be either a single function (which applies to all process colorants) or 
an array of four functions (which apply to the process colorants individually). 
The name Identity may be used to represent the identity function.'>
	^self objectAt: #TR
%
method: ExtGState
TR2
	<type: #Function>
	<typeArrayOf: #Function>
	<typeName: #Default>
	<version: 1 dot: 3>
	<attribute: 16 documentation: 'Same as TR except that the value may also be the name Default, 
denoting the transfer function that was in effect at the start of the page. 
If both TR and TR2 are present in the same graphics state parameter dictionary, TR2 shall take precedence.'>
	^self objectAt: #TR2
%
method: ExtGState
Type
	<type: #Name>
	<attribute: 1 documentation: 'The type of PDF object that this dictionary describes; shall be ExtGState for a graphics state parameter dictionary.'>
	^self objectAt: #Type ifAbsent: [nil]
%
method: ExtGState
UCR
	<type: #Function>
	<attribute: 13 documentation: 'The undercolor-removal function, which maps the interval [0.0 1.0] to the interval [-1.0 1.0].'>
	^self objectAt: #UCR
%
method: ExtGState
UCR2
	<type: #Function>
	<type: #Name>
	<version: 1 dot: 3>
	<attribute: 14 documentation: 'Same as UCR except that the value may also be the name Default, 
denoting the undercolor-removal function that was in effect at the start of the page. 
If both UCR and UCR2 are present in the same graphics state parameter dictionary, UCR2 shall takeprecedence.'>
	^self objectAt: #UCR2
%
category: 'adding'
method: ExtGState
addTransparencyAttributes
	self at: #BM put: #Normal.
	self at: #SMask put: #None.
	self at: #AIS put: false.
	self at: #CA put: 1.0.
	self at: #ca put: 1.0
%
category: 'instance creation'
classmethod: Graphicelement
operations: someOperations state: aGraphicsState

	| inst |
	inst := self new.
	inst initializeOperations: someOperations state: aGraphicsState.
	^inst
%
category: 'accessing'
method: Graphicelement
allOperations
	^self operations
%
method: Graphicelement
graphicsStateAttributes
	"the graphics state"

	^self state graphicsStateAttributes
%
method: Graphicelement
operation
	^self operations first
%
method: Graphicelement
operations
	"<SequenceableCollection of: Operation>
	the sequence of operations which make up the receiver"

	^operations ifNil: [operations := OrderedCollection new]
%
method: Graphicelement
pdfVersion
	^self operations inject: Version pdf1_0 into: [:max :op | max max: op pdfVersion]
%
method: Graphicelement
resource
	^nil
%
category: 'accessing GraphicsState'
method: Graphicelement
allGraphicsStates
	^self generalGraphicsStates , self colorGraphicsStates , self lineGraphicsStates , self textGraphicsStates , self transparencyGraphicsStates , self deviceDependendGraphicsStates
%
method: Graphicelement
colorGraphicsStates
	^#(#colorSpaceStroking #colorSpaceNonstroking #colorStroking #colorNonstroking #renderingIntent)
%
method: Graphicelement
deviceDependendGraphicsStates
	^#(#overprintStroking #overprintNonstroking #overprintMode #blackGeneration #undercolorRemoval #transfer #halftone #flatness #smoothness)
%
method: Graphicelement
generalGraphicsStates
	^#(#CTM #clippingPath)
%
method: Graphicelement
lineGraphicsStates
	^#(#lineWidth #lineCap #lineJoin #miterLimit #dashPattern #strokeAdjustment)
%
method: Graphicelement
relevantGraphicsStates
	^self allGraphicsStates
%
method: Graphicelement
relevantStateFrom: aGraphicsState
	"<GraphicsState>
	pick only the applicable state items"

	^aGraphicsState class on: (self relevantStateMapFrom: aGraphicsState)
%
method: Graphicelement
relevantStateMapFrom: aGraphicsState
	"<Valuemap>
	pick only the applicable state items
	The order is given by the order of the #relevantGraphicsStates"

	^self relevantGraphicsStates inject: Valuemap new into: [:map :symbol |
		(aGraphicsState hasKey: symbol) ifTrue: [
			map at: symbol put: (aGraphicsState at: symbol)].
		map]
%
method: Graphicelement
setRelevantStateFrom: aGraphicsState
	"pick only the applicable state items"

	state := self relevantStateFrom: aGraphicsState
%
method: Graphicelement
state
	"<GraphicsState>
	the state before the object is rendered"

	^state ifNil: [GraphicsState new]
%
method: Graphicelement
textGraphicsStates
	^#(#characterSpacing #wordSpacing #horizontalScaling #leading #textFont #textFontSize #textRenderingMode #textRise #textKnockout #textMatrix #textLineMatrix)
%
method: Graphicelement
transparencyGraphicsStates
	^#(#alphaConstantStroking #alphaConstantNonstroking #alphaSource #blendMode #softMask)
%
category: 'initialize-release'
method: Graphicelement
initializeOperations: someOperations state: aGraphicsState

	operations := someOperations.
	state := aGraphicsState copy beImmutable
%
category: 'testing'
method: Graphicelement
isClipping
	^false
%
method: Graphicelement
isOnlyClipping
	^false
%
category: 'writing'
method: Graphicelement
writePDFOn: aWriter indent: anInteger
	self allOperations do: [:object | object writePDFOn: aWriter indent: anInteger] separatedBy: [
		aWriter cr]
%
category: 'pragmas'
classmethod: GraphicsState
pragmas
	<pragmas: #instance>
	^#(#type: #typeArrayOf: #deviceDependent #modifiedBy: #version:dot: #attribute:documentation:)
%
category: 'accessing'
method: GraphicsState
characterSpace
	"<Number> in text space
	extra space between each character"

	^self characterSpacing asSmalltalkValue
%
method: GraphicsState
classesForAttributes
	^Array with: self class
%
method: GraphicsState
defaultAt: aSymbol

	^[self class new perform: aSymbol] on: Error do: [:ex | ex return: nil]
%
method: GraphicsState
fontSize
	"<Number>"

	^self textFontSize asSmalltalkValue
%
method: GraphicsState
horizontalScale
	^self horizontalScaling asSmalltalkValue / 100
%
method: GraphicsState
scaledFontSize
	"<Number>"

	^self fontSize * self horizontalScale
%
method: GraphicsState
scaledSpacingForString: aString
	"<Number>
	char and word spacing scaled horizontally"

	| charsSpacing wordsSpacing |
	charsSpacing := self characterSpace * aString size.
	wordsSpacing := self wordSpace * aString numberOfSpaces.
	^(charsSpacing + wordsSpacing) * self horizontalScale
%
method: GraphicsState
trailingCharacterSpace
	"<Number> in text space
	character space after the last character"

	^self characterSpace * self horizontalScale
%
method: GraphicsState
widthOfAdjustment: aNumber
	"<Number>"

	^aNumber negated / 1000 * self scaledFontSize
%
method: GraphicsState
widthOfString: aString inFont: aFont
	"<Number>"

	| stringWidth spacing |
	stringWidth := aFont stringWidth: aString.
	spacing := self scaledSpacingForString: aString.
	^stringWidth / 1000 * self scaledFontSize + spacing
%
method: GraphicsState
wordSpace
	"<Number> in text space
	extra space between each word (separated by a space)"

	^self wordSpacing asSmalltalkValue
%
category: 'accessing entries'
method: GraphicsState
alphaConstantNonstroking
	<type: #Number>
	<version: 1 dot: 4>
	<attribute: 26 documentation: 'The constant shape or constant opacity value to be used in the transparent imaging model. 
There are two separate alpha constant parameters: one for stroking and one for all other painting operations. 
A conforming reader shall implicitly reset this parameter to its initial value at the beginning of execution of a transparency group XObject.'>
	^self objectAt: #alphaConstantNonstroking ifAbsent: [1.0 asPDF]
%
method: GraphicsState
alphaConstantStroking
	<type: #Number>
	<version: 1 dot: 4>
	<attribute: 25 documentation: 'The constant shape or constant opacity value to be used in the transparent imaging model. 
There are two separate alpha constant parameters: one for stroking and one for all other painting operations. 
A conforming reader shall implicitly reset this parameter to its initial value at the beginning of execution of a transparency group XObject.'>
	^self objectAt: #alphaConstantStroking ifAbsent: [1.0 asPDF]
%
method: GraphicsState
alphaSource
	<type: #Boolean>
	<version: 1 dot: 4>
	<attribute: 27 documentation: 'A flag specifying whether the current soft mask and alpha constant parameters 
shall be interpreted as shape values (true) or opacity values (false). 
This flag also governs the interpretation of the SMask entry, if any, in an image dictionary.'>
	^self objectAt: #alphaSource ifAbsent: [false]
%
method: GraphicsState
blackGeneration
	<type: #Function>
	<type: #Name>
	<deviceDependent>
	<version: 1 dot: 2>
	<attribute: 31 documentation: 'A function that calculates the level of the black colour component to use when converting RGB colours to CMYK. 
Initial value: a conforming reader shall initialize this to a suitable device dependent value.'>
	^self objectAt: #blackGeneration ifAbsent: nil
%
method: GraphicsState
blendMode
	<type: #Name>
	<typeArrayOf: #Name>
	<version: 1 dot: 4>
	<attribute: 23 documentation: 'The current blend mode to be used in the transparent imaging model. 
A conforming reader shall implicitly reset this parameter to its initial value at the beginning of execution of a transparency group XObject.'>
	^self objectAt: #blendMode ifAbsent: [#Normal asPDF]
%
method: GraphicsState
characterSpacing
	<type: #Number>
	<attribute: 7 documentation: 'Set the character spacing, Tc, to charSpace, which shall be a number expressed in unscaled text space units.
Character spacing shall be used by the Tj, TJ, and '' operators'>
	^self objectAt: #characterSpacing ifAbsent: [0 asPDF]
%
method: GraphicsState
clippingPath
	<attribute: 2 documentation: 'The current clipping path, which defines the boundary against which all output shall be cropped. 
Initial value: the boundary of the entire imageable portion of the output page.'>
	^self objectAt: #clippingPath ifAbsent: nil
%
method: GraphicsState
colorNonstroking
	<type: #Array>
	<attribute: 6 documentation: 'The current colour to be used during painting operations. 
The type and interpretation of this parameter depend on the current colour space; for most colour spaces, a colour value consists of one to four numbers.'>
	^self objectAt: #colorNonstroking ifAbsent: [self colorSpaceNonstroking defaultBlack]
%
method: GraphicsState
colorSpaceNonstroking
	<type: #ColourSpace>
	<attribute: 4 documentation: 'The current colour space in which colour values shall beinterpreted.'>
	^self objectAt: #colorSpaceNonstroking ifAbsent: [(PDF classAt: #DeviceGray) new]
%
method: GraphicsState
colorSpaceStroking
	<type: #ColourSpace>
	<attribute: 3 documentation: 'The current colour space in which colour values shall beinterpreted.'>
	^self objectAt: #colorSpaceStroking ifAbsent: [(PDF classAt: #DeviceGray) new]
%
method: GraphicsState
colorStroking
	<type: #Array>
	<attribute: 5 documentation: 'The current colour to be used during painting operations. 
The type and interpretation of this parameter depend on the current colour space; for most colour spaces, a colour value consists of one to four numbers.'>
	^self objectAt: #colorStroking ifAbsent: [self colorSpaceStroking defaultBlack]
%
method: GraphicsState
CTM
	<type: #Matrix>
	<modifiedBy: #(#cm)>
	<attribute: 1 documentation: 'The current transformation matrix, which maps positions from user coordinates to device coordinates. 
This matrix is modified by each application of the coordinate transformation operator, cm.'>
	^self objectAt: #CTM ifAbsent: [(PDF classAt: #Matrix) identity]
%
method: GraphicsState
dashPattern
	<type: #Dash>
	<modifiedBy: #(#d)>
	<attribute: 20 documentation: 'A description of the dash pattern to be used when paths are stroked'>
	^self objectAt: #dashPattern ifAbsent: [(PDF classAt: #Dash) empty]
%
method: GraphicsState
flatness
	<type: #Number>
	<deviceDependent>
	<attribute: 35 documentation: 'The precision with which curves shall be rendered on the output device. 
The value of this parameter (positive number) gives the maximum error tolerance, measured in output device pixels; 
smaller numbers give smoother curves at the expense of more computation and memory use.'>
	^self objectAt: #flatness ifAbsent: [1.0 asPDF]
%
method: GraphicsState
halftone
	<type: #Dictionary>
	<type: #Stream>
	<type: #Name>
	<deviceDependent>
	<version: 1 dot: 2>
	<attribute: 34 documentation: 'A halftone screen for gray and colour rendering, specified as a halftone dictionary or stream. 
Initial value: a conforming reader shall initialize this to a suitable device dependent value.'>
	^self objectAt: #halftone ifAbsent: nil
%
method: GraphicsState
horizontalScaling
	<type: #Number>
	<attribute: 9 documentation: 'Set the horizontal scaling, Th, to (scale Ã· 100).
scale shall be a number specifying the percentage of the normal width'>
	^self objectAt: #horizontalScaling ifAbsent: [100 asPDF]
%
method: GraphicsState
leading
	<type: #Number>
	<attribute: 10 documentation: 'Set the text leading, Tl, to leading, which shall be a number expressed in unscaled text space units.
Text leading shall be used only by the T*, '', and " operators'>
	^self objectAt: #leading ifAbsent: [0 asPDF]
%
method: GraphicsState
lineCap
	<type: #Integer>
	<attribute: 17 documentation: 'A code specifying the shape of the endpoints for any open path that is stroked.'>
	^self objectAt: #lineCap ifAbsent: [LineCap butt value asPDF]
%
method: GraphicsState
lineJoin
	<type: #Integer>
	<attribute: 18 documentation: 'A code specifying the shape of joints between connected segments of a stroked path.'>
	^self objectAt: #lineJoin ifAbsent: [LineJoin miter value asPDF]
%
method: GraphicsState
lineWidth
	<type: #Number>
	<modifiedBy: #(#w)>
	<attribute: 16 documentation: 'The thickness, in user space units, of paths to be stroked.'>
	^self objectAt: #lineWidth ifAbsent: [1.0 asPDF]
%
method: GraphicsState
miterLimit
	<type: #Number>
	<attribute: 19 documentation: 'The maximum length of mitered line joins for stroked paths. 
This parameter limits the length of âspikesâ produced when line segments join at sharp angles. 
Initial value: 10.0, for a miter cutoff below approximately 11.5 degrees.'>
	^self objectAt: #miterLimit ifAbsent: [10.0 asPDF]
%
method: GraphicsState
overprintMode
	<type: #Number>
	<deviceDependent>
	<version: 1 dot: 3>
	<attribute: 30 documentation: 'A code specifying whether a colour component value of 0 in a DeviceCMYK colour space 
should erase that component (0) or leave it unchanged (1) when overprinting.'>
	^self objectAt: #overprintMode ifAbsent: [0 asPDF]
%
method: GraphicsState
overprintNonstroking
	<type: #Boolean>
	<deviceDependent>
	<version: 1 dot: 3>
	<attribute: 29 documentation: 'A flag specifying (on output devices that support the overprint control feature) 
whether painting in one set of colorants should cause the corresponding areas of other colorants to be erased (false) or left unchanged (true).'>
	^self objectAt: #overprintNonstroking ifAbsent: [false]
%
method: GraphicsState
overprintStroking
	<type: #Boolean>
	<deviceDependent>
	<version: 1 dot: 3>
	<attribute: 28 documentation: 'A flag specifying (on output devices that support the overprint control feature) 
whether painting in one set of colorants should cause the corresponding areas of other colorants to be erased (false) or left unchanged (true).'>
	^self objectAt: #overprintStroking ifAbsent: [false]
%
method: GraphicsState
renderingIntent
	<type: #Name>
	<attribute: 21 documentation: 'The rendering intent to be used when converting CIE-based colours to device colours. 
Initial value: RelativeColorimetric.'>
	^self objectAt: #renderingIntent ifAbsent: [#RelativeColorimetric asPDF]
%
method: GraphicsState
smoothness
	<type: #Number>
	<deviceDependent>
	<version: 1 dot: 3>
	<attribute: 36 documentation: 'The precision with which colour gradients are to be rendered on the output device. 
The value of this parameter (0 to 1.0) gives the maximum error tolerance, expressed as a fraction of the range of each colour component; 
smaller numbers give smoother colour transitions at the expense of more computation and memory use. 
Initial value: a conforming reader shall initialize this to a suitable device dependent value.'>
	^self objectAt: #smoothness ifAbsent: nil
%
method: GraphicsState
softMask
	<type: #Name>
	<type: #Dictionary>
	<version: 1 dot: 4>
	<attribute: 24 documentation: 'A soft-mask dictionary specifying the mask shape or mask opacity values to be used in the transparent imaging model, 
or the name None if no such mask is specified. 
A conforming reader shall implicitly reset this parameter to its initial value at the beginning of execution of a transparency group XObject.'>
	^self objectAt: #softMask ifAbsent: [#None asPDF]
%
method: GraphicsState
strokeAdjustment
	<type: #Boolean>
	<version: 1 dot: 2>
	<attribute: 22 documentation: 'A flag specifying whether to compensate for possible rasterization effects 
when stroking a path with a line width that is small relative to the pixel resolution of the output device.
NOTE
This is considered a device-independent parameter, even though the details of its effects are device-dependent.'>
	^self objectAt: #strokeAdjustment ifAbsent: [false]
%
method: GraphicsState
textFont
	<type: #Name>
	<attribute: 11 documentation: 'Set the text font, Tf, to font.
font shall be the name of a font resource in the Font subdictionary of the current resource dictionary.
There is no initial value for font; it shall be specified explicitly by using Tf before any text is shown'>
	^self objectAt: #textFont ifAbsent: nil
%
method: GraphicsState
textFontSize
	<type: #Number>
	<attribute: 12 documentation: 'Set the text font size, Tfs, to size.
size shall be a number representing a scale factor.
There is no initial value for size; it shall be specified explicitly by using Tf before any text is shown'>
	^self objectAt: #textFontSize ifAbsent: nil
%
method: GraphicsState
textKnockout
	<type: #Boolean>
	<version: 1 dot: 4>
	<attribute: 15 documentation: 'The text knockout flag, 
shall determine the behaviour of overlapping glyphs within a text object in the transparent imaging model.'>
	^self objectAt: #textKnockout ifAbsent: [true]
%
method: GraphicsState
textLineMatrix
	<type: #Matrix>
	<attribute: 38 documentation: 'The text line matrix'>
	^self objectAt: #textLineMatrix ifAbsent: [(PDF classAt: #Matrix) identity]
%
method: GraphicsState
textMatrix
	<type: #Matrix>
	<attribute: 37 documentation: 'The text matrix'>
	^self objectAt: #textMatrix ifAbsent: [(PDF classAt: #Matrix) identity]
%
method: GraphicsState
textRenderingMode
	<type: #Integer>
	<attribute: 13 documentation: 'Set the text rendering mode, Tmode, to render, which shall be an integer'>
	^self objectAt: #textRenderingMode ifAbsent: [0 asPDF]
%
method: GraphicsState
textRise
	<type: #Number>
	<attribute: 14 documentation: 'Set the text rise, Trise, to rise, which shall be a number expressed in unscaled text space units'>
	^self objectAt: #textRise ifAbsent: [0 asPDF]
%
method: GraphicsState
transfer
	<type: #Function>
	<typeArrayOf: #Name>
	<type: #Name>
	<deviceDependent>
	<version: 1 dot: 2>
	<attribute: 33 documentation: 'A function that adjusts device gray or colour component levels to compensate for nonlinear response in a particular output device. 
Initial value: a conforming reader shall initialize this to a suitable device dependent value.'>
	^self objectAt: #transfer ifAbsent: nil
%
method: GraphicsState
undercolorRemoval
	<type: #Function>
	<type: #Name>
	<deviceDependent>
	<version: 1 dot: 2>
	<attribute: 32 documentation: 'A function that calculates the reduction in the levels 
of the cyan, magenta, and yellow colour components to compensate for the amount of black added by black generation. 
Initial value: a conforming reader shall initialize this to a suitable device dependent value.'>
	^self objectAt: #undercolorRemoval ifAbsent: nil
%
method: GraphicsState
wordSpacing
	<type: #Number>
	<attribute: 8 documentation: 'Set the word spacing, Tw, to wordSpace, which shall be a number expressed in unscaled text space units.
Word spacing shall be used by the Tj, TJ, and '' operators'>
	^self objectAt: #wordSpacing ifAbsent: [0 asPDF]
%
category: 'actions'
method: GraphicsState
advanceTextMatrixBy: aWidthNumber
	self at: #textMatrix put: (self textMatrix translatedByTransformedDelta: aWidthNumber @ 0)
%
method: GraphicsState
nextLineBy: aPoint
	self at: #textLineMatrix put: (self textLineMatrix translatedByTransformedDelta: aPoint).
	self at: #textMatrix put: self textLineMatrix
%
category: 'copying'
method: GraphicsState
copy
	"bypasses the type checking - optimized for speed.
	The GraphicsState is used only internally, therefore copying an existing GraphicsState should be save"

	^self class new initializeDirectWithContent: self content copy
%
category: 'accessing'
method: InlineImage
keyForAbbreviation: aName
	"<Symbol>"

	^self keysByAbbreviation at: aName content ifAbsent: [aName content]
%
method: InlineImage
keysByAbbreviation
	| dict |
	dict := Dictionary new.
	dict at: #BPC put: #BitsPerComponent.
	dict at: #CS put: #ColorSpace.
	dict at: #D put: #Decode.
	dict at: #DP put: #DecodeParms.
	dict at: #F put: #Filter.
	dict at: #H put: #Height.
	dict at: #IM put: #ImageMask.
	dict at: #I put: #Interpolate.
	dict at: #W put: #Width.
	^dict
%
method: InlineImage
valueForAbbreviation: anObject
	"<Object>"

	^self valuesByAbbreviation at: anObject content ifAbsent: [anObject content]
%
method: InlineImage
valuesByAbbreviation
	| dict |
	dict := Dictionary new.
	dict at: #G put: #DeviceGray.
	dict at: #RGB put: #DeviceRGB.
	dict at: #CMYK put: #DeviceCMYK.
	dict at: #I put: #Indexed.
	dict at: #AHx put: #ASCIIHexDecode.
	dict at: #A85 put: #ASCII85Decode.
	dict at: #LZW put: #LZWDecode.
	dict at: #Fl put: #FlateDecode.
	dict at: #RL put: #RunLengthDecode.
	dict at: #CCF put: #CCITTFaxDecode.
	dict at: #DCT put: #DCTDecode.
	^dict
%
category: 'writing'
method: InlineImageContext
postfix
	^'EI'
%
method: InlineImageContext
prefix
	^'BI'
%
category: 'writing'
method: IsolatedContext
postfix

	^'Q'
%
method: IsolatedContext
prefix
	^'q'
%
category: 'instance creation'
classmethod: LineCap
value: valueInteger
	| inst |
	inst := self new.
	inst initializeValue: valueInteger.
	^inst
%
category: 'instances'
classmethod: LineCap
butt
	^self value: 0
%
classmethod: LineCap
projectingSquare
	^self value: 2
%
classmethod: LineCap
round
	^self value: 1
%
category: 'specification'
classmethod: LineCap
localSpecification
	<constant: #value class: #(#Core #Integer)>
%
category: 'accessing'
method: LineCap
value
	"<Integer>"

	^value
%
category: 'initialize-release'
method: LineCap
initializeValue: valueInteger
	value := valueInteger.
	self beImmutable
%
category: 'printing'
method: LineCap
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'value' value: self value).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: LineJoin
value: valueInteger
	| inst |
	inst := self new.
	inst initializeValue: valueInteger.
	^inst
%
category: 'instances'
classmethod: LineJoin
bevel
	^self value: 2
%
classmethod: LineJoin
miter
	^self value: 0
%
classmethod: LineJoin
round
	^self value: 1
%
category: 'specification'
classmethod: LineJoin
localSpecification
	<constant: #value class: #(#Core #Integer)>
%
category: 'accessing'
method: LineJoin
value
	"<Integer>"

	^value
%
category: 'initialize-release'
method: LineJoin
initializeValue: valueInteger
	value := valueInteger.
	self beImmutable
%
category: 'printing'
method: LineJoin
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'value' value: self value).
	^printer printvalue: self arguments: args
%
category: 'instance creation'
classmethod: MarkedContext
tag: aName

	| inst |
	inst := self new.
	inst initializeTag: aName properties: nil.
	^inst
%
classmethod: MarkedContext
tag: aName properties: aDictionary

	| inst |
	inst := self new.
	inst initializeTag: aName properties: aDictionary.
	^inst
%
category: 'accessing'
method: MarkedContext
properties

	^properties
%
method: MarkedContext
tag

	^tag
%
category: 'initialize-release'
method: MarkedContext
initializeTag: aName properties: aDictionary

	tag := aName.
	properties := aDictionary
%
category: 'writing'
method: MarkedContext
postfix

	^'EMC'
%
method: MarkedContext
prefix
	self properties ifNil: [
		^self tag pdfSource , ' BMC'].
	^self tag pdfSource , ' ' , self properties pdfSource , ' BDC'
%
category: 'accessing'
classmethod: Matrix
numberOfAttributes
	^6
%
classmethod: Matrix
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Matrix
		supertype: #Object
		section: '8.3.4'
		documentation: 'To understand the mathematics of coordinate transformations in PDF, it is vital to remember two points:
	â¢ Transformations alter coordinate systems, not graphics objects.
	All objects painted before a transformation is applied shall be unaffected by the transformation.
	Objects painted after the transformation is applied shall be interpreted in the transformed coordinate system.
	â¢ Transformation matrices specify the transformation from the new (transformed) coordinate system to the original (untransformed) coordinate system.
	All coordinates used after the transformation shall be expressed in the transformed coordinate system.
	PDF applies the transformation matrix to find the equivalent coordinates in the untransformed coordinate system.

NOTE 1
Many computer graphics textbooks consider transformations of graphics objects rather than of coordinate systems.
Although either approach is correct and self-consistent, some details of the calculations differ depending on which point of view is taken.

PDF represents coordinates in a two-dimensional space.
The point (x, y) in such a space can be expressed in vector form as [x y 1].
The constant third element of this vector (1) is needed so that the vector can be used with 3-by-3 matrices in the calculations described below.

The transformation between two coordinate systems can be represented by a 3-by-3 transformation matrix written as follows:
[a b 0]
[c d 0]
[e f 1]

Because a transformation matrix has only six elements that can be changed, in most cases in PDF it shall be specified as the six-element array [a b c d e f]'
%
category: 'instance creation'
classmethod: Matrix
empty
	^self identity
%
classmethod: Matrix
identity
	^self on: #(1 0 0 1 0 0)
%
classmethod: Matrix
rotation: radians
	"<Matrix>
	rotate counter-clock wise.
	0 is to the right"

	| cos sin matrix |
	cos := radians cos.
	sin := radians sin.
	matrix := self identity.
	matrix at: 1 put: cos.
	matrix at: 2 put: sin.
	matrix at: 3 put: sin negated.
	matrix at: 4 put: cos.
	^matrix
%
classmethod: Matrix
rotationDegrees: degrees
	"<Matrix>
	rotate counter-clock wise.
	0 is to the right"

	^self rotation: degrees degreesToRadians
%
classmethod: Matrix
scaling: aPoint
	| m |
	m := self identity.
	m at: 1 put: aPoint x.
	m at: 4 put: aPoint y.
	^m
%
classmethod: Matrix
translation: aPoint
	| m |
	m := self identity.
	m at: 5 put: aPoint x.
	m at: 6 put: aPoint y.
	^m
%
classmethod: Matrix
xFrom: fromPoint to: toPoint
	"<Matrix>
	a coordinate system defined by two points.
	The x-axis starts at fromPoint progresses towards toPoint"

	| diff dist |
	diff := toPoint - fromPoint.
	dist := diff r.
	^((self rotation: diff theta) scaledBy: dist @ dist) translatedBy: fromPoint
%
category: 'accessing entries'
method: Matrix
a
	<type: #Number>
	<required>
	<attribute: 1 documentation: 'Matrix element'>
	^self objectAt: 1 ifNil: [0 asPDF]
%
method: Matrix
b
	<type: #Number>
	<required>
	<attribute: 2 documentation: 'Matrix element'>
	^self objectAt: 2 ifNil: [0 asPDF]
%
method: Matrix
c
	<type: #Number>
	<required>
	<attribute: 3 documentation: 'Matrix element'>
	^self objectAt: 3 ifNil: [0 asPDF]
%
method: Matrix
d
	<type: #Number>
	<required>
	<attribute: 4 documentation: 'Matrix element'>
	^self objectAt: 4 ifNil: [0 asPDF]
%
method: Matrix
e
	<type: #Number>
	<required>
	<attribute: 5 documentation: 'Matrix element'>
	^self objectAt: 5 ifNil: [0 asPDF]
%
method: Matrix
f
	<type: #Number>
	<required>
	<attribute: 6 documentation: 'Matrix element'>
	^self objectAt: 6 ifNil: [0 asPDF]
%
category: 'actions'
method: Matrix
translatedByTransformedDelta: point
	^self translatedBy: (self transformedDelta: point)
%
category: 'operations'
method: Matrix
concatenatedWith: otherMatrix
	"<Matrix>"

	| a b c d e f a2 b2 c2 d2 e2 f2 new |
	a := self a asSmalltalkValue. b := self b asSmalltalkValue.
	c := self c asSmalltalkValue. d := self d asSmalltalkValue.
	e := self e asSmalltalkValue. f := self f asSmalltalkValue.
	a2 := otherMatrix a asSmalltalkValue. b2 := otherMatrix b asSmalltalkValue.
	c2 := otherMatrix c asSmalltalkValue. d2 := otherMatrix d asSmalltalkValue.
	e2 := otherMatrix e asSmalltalkValue. f2 := otherMatrix f asSmalltalkValue.
	new := Array new: 6.
	new at: 1 put: a * a2 + (b * c2).
	new at: 2 put: a * b2 + (b * d2).
	new at: 3 put: c * a2 + (d * c2).
	new at: 4 put: c * b2 + (d * d2).
	new at: 5 put: e * a2 + (f * c2) + e2.
	new at: 6 put: e * b2 + (f * d2) + f2.
	^self class on: new
%
method: Matrix
rotatedBy: radian
	^self concatenatedWith: (self class rotation: radian)
%
method: Matrix
rotatedByDegrees: degrees
	^self concatenatedWith: (self class rotationDegrees: degrees)
%
method: Matrix
scaledBy: aPoint
	^self concatenatedWith: (self class scaling: aPoint)
%
method: Matrix
transformed: aPoint
	"<Point>"

	| x y |
	x := self a asSmalltalkValue * aPoint x + (self c asSmalltalkValue * aPoint y) + self e asSmalltalkValue.
	y := self b asSmalltalkValue * aPoint x + (self d asSmalltalkValue * aPoint y) + self f asSmalltalkValue.
	^x @ y
%
method: Matrix
transformedDelta: aPoint
	"<Point>
	the translated delta from zero to aPoint.
	same as"
	"(self transformed: aPoint) - self transformedZero"

	| x y |
	x := self a asSmalltalkValue * aPoint x + (self c asSmalltalkValue * aPoint y).
	y := self b asSmalltalkValue * aPoint x + (self d asSmalltalkValue * aPoint y).
	^x @ y
%
method: Matrix
transformedZero
	"<Point>
	the origin transformed.
	Same as "
	"self transformed: 0 @ 0"
	""

	^self e asSmalltalkValue @ self f asSmalltalkValue
%
method: Matrix
translatedBy: aPoint
	"<Matrix>
	new matrix translated by aPoint"

	^self concatenatedWith: (self class translation: aPoint)
%
category: 'accessing'
classmethod: Operation
classesAtNames
	"<Dictionary key: Symbol value: Operator class>"

	^ClassesAtNames ifNil: [ClassesAtNames := self newClassesAtNames]
%
classmethod: Operation
documentation
	"<String>"

	^self subclassResponsibility
%
classmethod: Operation
end
	"<Operator class | nil>
	the corresponding end operator"

	^nil
%
classmethod: Operation
named: aSymbol
	"<Operator class | nil>"

	^self classesAtNames at: aSymbol ifAbsent: [nil]
%
classmethod: Operation
newClassesAtNames
	"assumes that all subclasses are defined in namespace #{PDFtalk}"

	| classOrganizer dict |
	classOrganizer := ClassOrganizer
		pdfNewWithRoot: Operation
		symbolList: (SymbolList with: PDFtalk).
	dict := Dictionary new.
	(classOrganizer allSubclassesOf: Operation) do: [:subclass |
		((classOrganizer subclassesOf: subclass) isEmpty and: [
		subclass ~= UnknownOperation]) ifTrue: [
				dict at: subclass operatorName put: subclass]].
	^dict
%
classmethod: Operation
on: aSymbol
	"<Operator>"

	(Operation named: aSymbol) ifNotNil: [:class |
		^class empty].
	^UnknownOperation operatorName: aSymbol
%
classmethod: Operation
operandTypes
	"<Array of: (Array with: String with: Symbol)>
	The names and types of the operands"

	^#()
%
classmethod: Operation
operatorName
	"<Symbol>
	Equals to the printed name of the operator.
	Subclasses overwrite this method if the class name is not the same as the operator name"

	^self subclassResponsibility
%
classmethod: Operation
pdfVersion
	^Version pdf1_0
%
category: 'instance creation'
classmethod: Operation
operands: operandsArray

	| inst |
	inst := self new.
	inst initializeOperands: operandsArray asPDF.
	^inst
%
category: 'instance creation optional'
classmethod: Operation
empty
	^self new
%
classmethod: Operation
with: operand1
	^self operands: (Array with: operand1)
%
classmethod: Operation
with: operand1 with: operand2
	^self operands: (Array
		with: operand1
		with: operand2)
%
classmethod: Operation
with: operand1 with: operand2 with: operand3
	^self operands: (Array
		with: operand1
		with: operand2
		with: operand3)
%
classmethod: Operation
with: operand1 with: operand2 with: operand3 with: operand4
	^self operands: (Array
		with: operand1
		with: operand2
		with: operand3
		with: operand4)
%
category: 'specification'
classmethod: Operation
localSpecification
	<sequence: #operands>
%
category: 'testing'
classmethod: Operation
usedForLookup
	"the class is used to construct the lookup table"

	^self subclasses isEmpty
%
category: 'accessing'
method: Operation
operands
	"<SequenceableCollection of: PDF.Object>"

	^operands ifNil: [#()]
%
method: Operation
operatorName
	"<Symbol>"

	^self class operatorName
%
method: Operation
resource
	^nil
%
method: Operation
resourceIn: aPageGraphics
	"<PDFObject | nil>
	the resolved resource from the page resourcse"
	
	^nil
%
category: 'actions'
method: Operation
addAsContentTokenWith: someOperands to: someOperators inParser: aContentParser
	someOperators add: (self operands: someOperands).
	^#()
%
method: Operation
modify: aProcessor with: aResource
	"change the graphics state with aResource"

	"do nothing by default"
%
method: Operation
processWith: aProcessor at: indexInteger
	"modify aProcessor (graphics state, graphics state stack, etc.).
	indexInteger is the position of the receiver in the operations"

	aProcessor addOperation: self
%
category: 'comparing'
method: Operation
= anObject
	^self class == anObject class and: [
	self operands = anObject operands]
%
method: Operation
hash
	^self operands hash
%
category: 'copying'
method: Operation
operands: someOperands
	^self class operands: someOperands
%
method: Operation
with: operand1
	^self operands: (Array with: operand1)
%
method: Operation
with: operand1 with: operand2
	^self operands: (Array
		with: operand1
		with: operand2)
%
method: Operation
with: operand1 with: operand2 with: operand3
	^self operands: (Array
		with: operand1
		with: operand2
		with: operand3)
%
method: Operation
with: operand1 with: operand2 with: operand3 with: operand4
	^self operands: (Array
		with: operand1
		with: operand2
		with: operand3
		with: operand4)
%
category: 'initialize-release'
method: Operation
initializeOperands: operandsArray

	(operandsArray notNil and: [operandsArray notEmpty])
		ifTrue: [operands := (Array withAll: operandsArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: Operation
printOn: aWriteStream
	self operands do: [:operand |
		aWriteStream
			nextPutAll: operand printString;
			space].
	aWriteStream nextPutAll: self operatorName
%
method: Operation
printvalueWith: printer

	| args |
	args := OrderedCollection new.
	args add: (printer array: 'operands' value: self operands).
	^printer printvalue: self arguments: args
%
category: 'writing'
method: Operation
writePDFOn: aWriter indent: anInteger
	self operands do: [:operand |
		operand writePDFOn: aWriter indent: anInteger.
		aWriter space].
	aWriter nextPutAll: self operatorName asByteArray
%
category: 'instance creation'
classmethod: OperationObject
operations: someOperations state: aGraphicsState resource: aPDFObject
	| inst |
	inst := self new.
	inst initializeOperations: someOperations state: aGraphicsState resource: aPDFObject.
	^inst
%
category: 'accessing'
method: OperationObject
redundant
	"<Boolean>"

	^redundant ifNil: [false]
%
method: OperationObject
redundant: aBoolean

	redundant := aBoolean
%
method: OperationObject
resource
	^resource
%
method: OperationObject
string
	^''
%
category: 'initialize-release'
method: OperationObject
initializeOperations: someOperations state: aGraphicsState resource: aPDFObject
	self initializeOperations: someOperations state: aGraphicsState.
	resource := aPDFObject
%
category: 'printing'
method: OperationObject
printOn: stream
	stream
		nextPutAll: self class name asString;
		nextPut: $(.
	self operations do: [:op | stream nextPutAll: op printString] separatedBy: [
		stream space].
	stream nextPut: $)
%
category: 'printing'
method: Picture
printOn: stream
	stream
		nextPutAll: self class name;
		nextPut: $(;
		nextPutAll: self operation class name;
		nextPut: $)
%
category: 'writing'
method: TextContext
postfix

	^'ET'
%
method: TextContext
prefix
	^'BT'
%
category: 'instance creation'
classmethod: Textspan
operations: someOperations state: aGraphicsState font: aFont
	| inst |
	inst := self new.
	inst initializeOperations: someOperations state: aGraphicsState font: aFont.
	^inst
%
category: 'accessing'
method: Textspan
effectiveFontSize
	"<Number>
	the scaled font size"

	^(self state textMatrix transformedDelta: 0 @ self state fontSize) y
%
method: Textspan
font
	"<PDFtalk font>"

	^font
%
method: Textspan
fontSize
	"<Number>"

	^self state fontSize
%
method: Textspan
fontSymbol
	"<Symbol>"

	^self state textFont asSmalltalkValue
%
method: Textspan
position
	"<Point>
	the text insertion point"

	^self state textMatrix transformedZero
%
method: Textspan
resource
	^self font
%
method: Textspan
string
	"<String>
	the decoded unicode string"

	^self font decodedString: self stringBytes
%
method: Textspan
stringBytes
	"<ByteArray>"

	^self operation stringBytes
%
method: Textspan
strings
	^Array with: self string
%
method: Textspan
textWidth
	"<Number> in page space
	the distance from the start of the receiver to the start of the Textspan after the receiver"

	^self operation widthInFont: self font inState: self state
%
method: Textspan
yPosition
	"<Number>"

	^self position y
%
category: 'initialize-release'
method: Textspan
initializeOperations: someOperations state: aGraphicsState font: aFont
	self initializeOperations: someOperations state: aGraphicsState.
	font := aFont
%
category: 'printing'
method: Textspan
printOn: stream
	stream
		nextPutAll: self class name asString;
		nextPut: $(;
		nextPutAll: (self string first: 10).
	self string size > 10 ifTrue: [
		stream nextPutAll: '...'].
	stream nextPut: $).
	^stream contents
%
category: 'accessing'
classmethod: UnknownOperation
documentation
	^'Error in the contents stream'
%
classmethod: UnknownOperation
operatorName
	"implemented by the instances"

	^self shouldNotImplement
%
category: 'instance creation'
classmethod: UnknownOperation
operatorName: operatorNameSymbol operands: operandsArray
	| inst |
	inst := self new.
	inst initializeOperatorName: operatorNameSymbol operands: operandsArray.
	^inst
%
category: 'instance creation optional'
classmethod: UnknownOperation
operatorName: operatorNameSymbol
	^self operatorName: operatorNameSymbol operands: nil
%
category: 'specification'
classmethod: UnknownOperation
localSpecification
	<constant: #operatorName class: #(#Symbol) comment: 'token of the unknown operator'>
	<sequence: #operands>
%
category: 'testing'
classmethod: UnknownOperation
usedForLookup
	^false
%
category: 'accessing'
method: UnknownOperation
operatorName
	"<Symbol>
	token of the unknown operator"

	^operatorName
%
category: 'copying'
method: UnknownOperation
operands: someOperands
	^self class operatorName: self operatorName operands: someOperands
%
category: 'initialize-release'
method: UnknownOperation
initializeOperatorName: operatorNameSymbol operands: operandsArray
	operatorName := operatorNameSymbol.
	(operandsArray notNil and: [
	operandsArray notEmpty]) ifTrue: [
			operands := (Array withAll: operandsArray) beImmutable].
	self beImmutable
%
category: 'printing'
method: UnknownOperation
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'operatorName' value: self operatorName).
	args add: (printer array: 'operands' value: self operands).
	^printer printvalue: self arguments: args
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Graphics Operations'.
	dict at: #comment put: 'PDF Graphics as defined in PDF 32000_2008.pdf section 8, pp. 127

The graphics operators used in PDF content streams describe the appearance of pages that are to be reproduced on a raster output device. 
The facilities described in this clause are intended for both printer and display applications.

The graphics operators form six main groups:

	â¢	Graphics state operators manipulate the data structure called the graphics state, the global framework within which the other graphics operators execute. 
The graphics state includes the current transformation matrix (CTM), which maps user space coordinates used within a PDF content stream into output device coordinates. 
It also includes the current colour, the current clipping path, and many other parameters that are implicit operands of the painting operators.
	â¢	Path construction operators specify paths, which define shapes, line trajectories, and regions of various sorts. 
They include operators for beginning a new path, adding line segments and curves to it, and closing it.
	â¢	Path-painting operators fill a path with a colour, paint a stroke along it, or use it as a clipping boundary.
	â¢	Other painting operators paint certain self-describing graphics objects. 
These include sampled images, geometrically defined shadings, and entire content streams that in turn contain sequences of graphics operators.
	â¢	Text operators select and show character glyphs from fonts (descriptions of typefaces for representing text characters). 
Because PDF treats glyphs as general graphical shapes, many of the text operators could be grouped with the graphics state or painting operators. 
However, the data structures and mechanisms for dealing with glyph and font descriptions are sufficiently specialized that clause 9, "Text" focuses on them.
	â¢	Marked-content operators associate higher-level logical information with objects in the content stream. 
This information does not affect the rendered appearance of the content (although it may determine if the content should be presented at all); 
it is useful to applications that use PDF for document interchange.'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Graphics Operations'.
	dict at: #storeVersion put: '2.3.5.1'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class ColourOperation
DoIt
Operation
	subclass: 'ColourOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ColourOperation category: 'PDFtalk Graphics Operations'.
	ColourOperation comment: 'PDF Colour Operators as defined in PDF 32000_2008.pdf, section 8.6.8, pp. 171.

The PDF operators that control colour spaces and colour values. 
Also colour-related is the graphics state operator ri. 
Colour operators may appear at the page description level or inside text objects.'.
	ColourOperation namespacePath: #(#PDFtalk).
%
# Define class SetStrokingColorSpecial
DoIt
ColourOperation
	subclass: 'SetStrokingColorSpecial'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetStrokingColorSpecial category: 'PDFtalk Graphics Operations'.
	SetStrokingColorSpecial comment: 'Same as SC but also supports Pattern, Separation, DeviceN and ICCBased colour spaces.
If the current stroking colour space is a Separation, DeviceN, or ICCBased colour space, the operands c1â¦cn shall be numbers. 
The number of operands and their interpretation depends on the colour space.

If the current stroking colour space is a Pattern colour space, name shall be the name of an entry in the Pattern subdictionary of the current resource dictionary. 
For an uncoloured tiling pattern (PatternType = 1 and PaintType = 2), c1â¦cn shall be component values specifying a colour in the patternâs underlying colour space. 
For other types of patterns, these operands shall not be specified.'.
	SetStrokingColorSpecial namespacePath: #(#PDFtalk).
%
# Define class SetStrokingColor
DoIt
ColourOperation
	subclass: 'SetStrokingColor'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetStrokingColor category: 'PDFtalk Graphics Operations'.
	SetStrokingColor comment: 'Set the colour to use for stroking operations in a device, CIE-based (other than ICCBased), or Indexed colour space. 
The number of operands required and their interpretation depends on the current stroking colour space:
For DeviceGray, CalGray, and Indexed colour spaces, one operand shall be required (n = 1).
For DeviceRGB, CalRGB, and Lab colour spaces, three operands shall be required (n = 3).
For DeviceCMYK, four operands shall be required (n = 4).'.
	SetStrokingColor namespacePath: #(#PDFtalk).
%
# Define class ClippingPathOperation
DoIt
Operation
	subclass: 'ClippingPathOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ClippingPathOperation category: 'PDFtalk Graphics Operations'.
	ClippingPathOperation comment: 'PDF Graphics State Operators as defined in PDF 32000_2008.pdf, section 8.5.4, pp. 137.

The graphics state shall contain a current clipping path that limits the regions of the page affected by painting operators. 
The closed subpaths of this path shall define the area that can be painted. 
Marks falling inside this area shall be applied to the page; those falling outside it shall not be.

In the context of the transparent imaging model (PDF 1.4), the current clipping path constrains an objectâs shape). 
The effective shape is the intersection of the objectâs intrinsic shape with the clipping path; the source shape value shall be 0.0 outside this intersection. 
Similarly, the shape of a transparency group (defined as the union of the shapes of its constituent objects) shall be influenced both 
by the clipping path in effect when each of the objects is painted and by the one in effect at the time the groupâs results are painted onto its backdrop.

The initial clipping path shall include the entire page. 
A clipping path operator (W or W*) may appear after the last path construction operator and before the path-painting operator that terminates a path object. 
Although the clipping path operator appears before the painting operator, it shall not alter the clipping path at the point where it appears. 
Rather, it shall modify the effect of the succeeding painting operator. 
After the path has been painted, the clipping path in the graphics state shall be set to the intersection of the current clipping path and the newly constructed path.

NOTE 1
In addition to path objects, text objects may also be used for clipping.

The n operator is a no-op path-painting operator; it shall cause no marks to be placed on the page, 
but can be used with a clipping path operator to establish a new clipping path. 
That is, after a path has been constructed, the sequence W n shall intersect that path with the current clipping path and shall establish a new clipping path.

NOTE 2
There is no way to enlarge the current clipping path or to set a new clipping path without reference to the current one. 
However, since the clipping path is part of the graphics state, its effect can be localized to 
specific graphics objects by enclosing the modification of the clipping path and the painting of those objects between a pair of q and Q operators. 
Execution of the Q operator causes the clipping path to revert to the value that was saved by the q operator before the clipping path was modified.'.
	ClippingPathOperation namespacePath: #(#PDFtalk).
%
# Define class ClipEvenOdd
DoIt
ClippingPathOperation
	subclass: 'ClipEvenOdd'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ClipEvenOdd category: 'PDFtalk Graphics Operations'.
	ClipEvenOdd comment: 'Modify the current clipping path by intersecting it with the current path, 
using the even-odd rule to determine which regions lie inside the clipping path.
'.
	ClipEvenOdd namespacePath: #(#PDFtalk).
%
# Define class SetNonStrokingColor
DoIt
ColourOperation
	subclass: 'SetNonStrokingColor'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetNonStrokingColor category: 'PDFtalk Graphics Operations'.
	SetNonStrokingColor comment: 'Same as SC but used for nonstroking operations.'.
	SetNonStrokingColor namespacePath: #(#PDFtalk).
%
# Define class PathConstructionOperation
DoIt
Operation
	subclass: 'PathConstructionOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PathConstructionOperation category: 'PDFtalk Graphics Operations'.
	PathConstructionOperation comment: 'PDF Path Construction Operators as defined in PDF 32000_2008.pdf, section 8.5.2, pp. 132.

A page description shall begin with an empty path and shall build up its definition by invoking one or more path construction operators to add segments to it. 
The path construction operators may be invoked in any sequence, but the first one invoked shall be m or re to begin a new subpath. 
The path definition may conclude with the application of a path-painting operator such as S, f, or b; 
this operator may optionally be preceded by one of the clipping path operators W or W*.

NOTE
Note that the path construction operators do not place any marks on the page; only the painting operators do that. 
A path definition is not complete until a path-painting operator has been applied to it.

The path currently under construction is called the current path. In PDF (unlike PostScript), 
the current path is not part of the graphics state and is not saved and restored along with the other graphics state parameters. 
PDF paths shall be strictly internal objects with no explicit representation. 
After the current path has been painted, it shall become no longer defined; 
there is then no current path until a new one is begun with the m or re operator.

The trailing endpoint of the segment most recently added to the current path is referred to as the current point.
If the current path is empty, the current point shall be undefined. 
Most operators that add a segment to the current path start at the current point; if the current point is undefined, an error shall be generated.

All operands shall be numbers denoting coordinates in user space.'.
	PathConstructionOperation namespacePath: #(#PDFtalk).
%
# Define class ClosePath
DoIt
PathConstructionOperation
	subclass: 'ClosePath'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ClosePath category: 'PDFtalk Graphics Operations'.
	ClosePath comment: 'Close the current subpath by appending a straight line segment from the current point to the starting point of the subpath. 
If the current subpath is already closed, h shall do nothing.

This operator terminates the current subpath. 
Appending another segment to the current path shall begin a new subpath, even if the new segment begins at the endpoint reached by the h operation'.
	ClosePath namespacePath: #(#PDFtalk).
%
# Define class PathPaintingOperation
DoIt
Operation
	subclass: 'PathPaintingOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PathPaintingOperation category: 'PDFtalk Graphics Operations'.
	PathPaintingOperation comment: 'PDF Path-Painting Operators as defined in PDF 32000_2008.pdf, section 8.5.3, pp. 134.

The path-painting operators end a path object, causing it to be painted on the current page in the manner that the operator specifies. 
The principal path-painting operators shall be S (for stroking) and f (for filling). 
Variants of these operators combine stroking and filling in a single operation or apply different rules for determining the area to be filled.'.
	PathPaintingOperation namespacePath: #(#PDFtalk).
%
# Define class Fill
DoIt
PathPaintingOperation
	subclass: 'Fill'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Fill category: 'PDFtalk Graphics Operations'.
	Fill comment: 'Fill the path, using the nonzero winding number rule to determine the region to fill. 
Any subpaths that are open shall be implicitly closed before being filled'.
	Fill namespacePath: #(#PDFtalk).
%
# Define class TextStateOperation
DoIt
Operation
	subclass: 'TextStateOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TextStateOperation category: 'PDFtalk Graphics Operations'.
	TextStateOperation comment: 'PDF Text State Operator as defined in PDF 32000_2008.pdf, section 9.3.1, pp. 243.

The text state comprises those graphics state parameters that only affect text. 
There are nine parameters in the text state.
	Tc		Character spacing
	Tw		Word spacing
	Th		Horizontal scaling
	Tl		Leading
	Tf		Text font
	Tfs		Text font size
	Tmode	Text rendering mode
	Trise	Text rise
	Tk		Text knockout

Except for the previously described Tf and Tfs, these parameters are discussed further in subsequent sub-clauses. 
(three additional text-related parameters may occur only within a text object: 
	Tm, the text matrix; 
	Tlm, the text line matrix; and 
	Trm, the text rendering matrix.) 
The values of the text state parameters shall be consulted when text is positioned and shown. 
In particular, the spacing and scaling parameters shall be used in a computation. 

The text knockout parameter, Tk, shall be set through the TK entry in a graphics state parameter dictionary by using the gs operator. 
There is no specific operator for setting this parameter.

The text state operators may appear outside text objects, and the values they set are retained across text objects in a single content stream. 
Like other graphics state parameters, these parameters shall be initialized to their default values at the beginning of each page'.
	TextStateOperation namespacePath: #(#PDFtalk).
%
# Define class HorizontalScaling
DoIt
TextStateOperation
	subclass: 'HorizontalScaling'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	HorizontalScaling category: 'PDFtalk Graphics Operations'.
	HorizontalScaling comment: 'Set the horizontal scaling, Th, to (scale Ã· 100). 
scale shall be a number specifying the percentage of the normal width. 
Initial value: 100 (normal width)'.
	HorizontalScaling namespacePath: #(#PDFtalk).
%
# Define class MarkedContentOperation
DoIt
Operation
	subclass: 'MarkedContentOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	MarkedContentOperation category: 'PDFtalk Graphics Operations'.
	MarkedContentOperation comment: 'PDF Marked Content as defined in PDF 32000_2008.pdf, section 14.6, pp. 552.

Marked-content operators (PDF 1.2) may identify a portion of a PDF content stream as a marked-content element of interest to a particular conforming product. 
Marked-content elements and the operators that mark them shall fall into two categories:

	â¢	The MP and DP operators shall designate a single marked-content point in the content stream.
	â¢	The BMC, BDC, and EMC operators shall bracket a marked-content sequence of objects within the content stream.

NOTE 1		This is a sequence not simply of bytes in the content stream but of complete graphics objects. 
			Each object is fully qualified by the parameters of the graphics state in which it is rendered.
NOTE 2		A graphics application, for example, might use marked content to identify a set of related objects as a group to be processed as a single unit. 
			A text-processing application might use it to maintain a connection between a footnote marker in the body of a document and 
			the corresponding footnote text at the bottom of the page. 
			The PDF logical structure facilities use marked-content sequences to associate graphical content with structure elements.

All marked-content operators except EMC shall take a tag operand indicating the role or significance of the marked-content element to the conforming reader. 
All such tags shall be registered with Adobe Systems to avoid conflicts between different applications marking the same content stream. 
In addition to the tag operand, the DP and BDC operators shall specify a property list containing further information associated with the marked content. 

Marked-content operators may appear only between graphics objects in the content stream. 
They may not occur within a graphics object or between a graphics state operator and its operands. 
Marked-content sequences may be nested one within another, but each sequence shall be entirely contained within a single content stream.

NOTE 3		A marked-content sequence may not cross page boundaries.
NOTE 4		The Contents entry of a page object, which may be either a single stream or an array of streams, 
			is considered a single stream with respect to marked-content sequences.'.
	MarkedContentOperation namespacePath: #(#PDFtalk).
%
# Define class BeginMarkedContentWithProperties
DoIt
MarkedContentOperation
	subclass: 'BeginMarkedContentWithProperties'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	BeginMarkedContentWithProperties category: 'PDFtalk Graphics Operations'.
	BeginMarkedContentWithProperties comment: 'Begin a marked-content sequence with an associated property list, terminated by a balancing EMC operator. 
tag shall be a name object indicating the role or significance of the sequence. 
properties shall be either an inline dictionary containing the property list or a name object associated with it in the 
Properties subdictionary of the current resource dictionary'.
	BeginMarkedContentWithProperties namespacePath: #(#PDFtalk).
%
# Define class SetNonStrokingColorSpecial
DoIt
ColourOperation
	subclass: 'SetNonStrokingColorSpecial'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetNonStrokingColorSpecial category: 'PDFtalk Graphics Operations'.
	SetNonStrokingColorSpecial comment: 'Same as SCN but used for nonstroking operations.'.
	SetNonStrokingColorSpecial namespacePath: #(#PDFtalk).
%
# Define class TextPositioningOperation
DoIt
Operation
	subclass: 'TextPositioningOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TextPositioningOperation category: 'PDFtalk Graphics Operations'.
	TextPositioningOperation comment: 'PDF Text Positioning Operator as defined in PDF 32000_2008.pdf, section 9.4.2, pp. 249.

Text space is the coordinate system in which text is shown. 
It shall be defined by the text matrix, Tm, and the text state parameters Tfs, Th, and Trise, 
which together shall determine the transformation from text space to user space. 
Specifically, the origin of the first glyph shown by a text-showing operator shall be placed at the origin of text space. 
If text space has been translated, scaled, or rotated, then the position, size, or orientation of the glyph in user space shall be correspondingly altered.

The text-positioning operators shall only appear within text objects.'.
	TextPositioningOperation namespacePath: #(#PDFtalk).
%
# Define class NextLine
DoIt
TextPositioningOperation
	subclass: 'NextLine'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NextLine category: 'PDFtalk Graphics Operations'.
	NextLine comment: 'Move to the start of the next line. This operator has the same effect as the code
	0 -Tl Td
where Tl denotes the current leading parameter in the text state. 
The negative of Tl is used here because Tl is the text leading expressed as a positive number. 
Going to the next line entails decreasing the y coordinate'.
	NextLine namespacePath: #(#PDFtalk).
%
# Define class FillOld
DoIt
PathPaintingOperation
	subclass: 'FillOld'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FillOld category: 'PDFtalk Graphics Operations'.
	FillOld comment: 'Equivalent to f; included only for compatibility. 
Although PDF reader applications shall be able to accept this operator, PDF writer applications should use f instead'.
	FillOld namespacePath: #(#PDFtalk).
%
# Define class NextLineRelativeSetLeading
DoIt
TextPositioningOperation
	subclass: 'NextLineRelativeSetLeading'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NextLineRelativeSetLeading category: 'PDFtalk Graphics Operations'.
	NextLineRelativeSetLeading comment: 'Move to the start of the next line, offset from the start of the current line by (tx, ty). 
As a side effect, this operator shall set the leading parameter in the text state. 
This operator shall have the same effect as this code:
	-ty TL
	tx ty Td'.
	NextLineRelativeSetLeading namespacePath: #(#PDFtalk).
%
# Define class WordSpacing
DoIt
TextStateOperation
	subclass: 'WordSpacing'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	WordSpacing category: 'PDFtalk Graphics Operations'.
	WordSpacing comment: 'Set the word spacing, Tw, to wordSpace, which shall be a number expressed in unscaled text space units. 
Word spacing shall be used by the Tj, TJ, and '' operators. 
Initial value: 0
'.
	WordSpacing namespacePath: #(#PDFtalk).
%
# Define class GraphicsStateOperation
DoIt
Operation
	subclass: 'GraphicsStateOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	GraphicsStateOperation category: 'PDFtalk Graphics Operations'.
	GraphicsStateOperation comment: 'PDF Graphics State Operators as defined in PDF 32000_2008.pdf, section 8.4.4, pp. 127.

Operators that set the values of parameters in the graphics state.'.
	GraphicsStateOperation namespacePath: #(#PDFtalk).
%
# Define class SetLineWidth
DoIt
GraphicsStateOperation
	subclass: 'SetLineWidth'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetLineWidth category: 'PDFtalk Graphics Operations'.
	SetLineWidth comment: 'Set the line width in the graphics state'.
	SetLineWidth namespacePath: #(#PDFtalk).
%
# Define class TextObjectOperation
DoIt
Operation
	subclass: 'TextObjectOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TextObjectOperation category: 'PDFtalk Graphics Operations'.
	TextObjectOperation comment: 'PDF Text Object Operator as defined in PDF 32000_2008.pdf, section 9.4, pp. 248.

A PDF text object consists of operators that may show text strings, move the text position, and set text state and certain other parameters. 
In addition, three parameters may be specified only within a text object and shall not persist from one text object to the next:
	â¢	Tm, 	the text matrix
	â¢	Tlm, 	the text line matrix
	â¢	Trm, 	the text rendering matrix, which is actually just an intermediate result that combines the effects of text state parameters, 
				the text matrix (Tm), and the current transformation matrix.

A text object begins with the BT operator and ends with the ET operator.'.
	TextObjectOperation namespacePath: #(#PDFtalk).
%
# Define class BeginText
DoIt
TextObjectOperation
	subclass: 'BeginText'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	BeginText category: 'PDFtalk Graphics Operations'.
	BeginText comment: 'Begin a text object, initializing the text matrix, Tm, and the text line matrix, Tlm, to the identity matrix. 
Text objects shall not be nested; a second BT shall not appear before an ET'.
	BeginText namespacePath: #(#PDFtalk).
%
# Define class StrokeClosed
DoIt
PathPaintingOperation
	subclass: 'StrokeClosed'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	StrokeClosed category: 'PDFtalk Graphics Operations'.
	StrokeClosed comment: 'Close and stroke the path. 
This operator shall have the same effect as the sequence h S'.
	StrokeClosed namespacePath: #(#PDFtalk).
%
# Define class TextShowingOperation
DoIt
Operation
	subclass: 'TextShowingOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TextShowingOperation category: 'PDFtalk Graphics Operations'.
	TextShowingOperation comment: 'PDF Text Showing Operator as defined in PDF 32000_2008.pdf, section 9.4.3, pp. 250.

The text-showing operators shall show text on the page, repositioning text space as they do so. 
All of the operators shall interpret the text string and apply the text state parameters.

The text-showing operators shall only appear within text objects.'.
	TextShowingOperation namespacePath: #(#PDFtalk).
%
# Define class ShadingOperation
DoIt
Operation
	subclass: 'ShadingOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ShadingOperation category: 'PDFtalk Graphics Operations'.
	ShadingOperation comment: 'PDF Shading Operator as defined in PDF 32000_2008.pdf, section 8.7.4.2, pp. 181.

When the area to be painted is a relatively simple shape whose geometry is the same as that of the gradient fill itself, 
the sh operator may be used instead of the usual painting operators. 
sh accepts a shading dictionary as an operand and applies the corresponding gradient fill directly to current user space. 
This operator does not require the creation of a pattern dictionary or a path and works without reference to the current colour in the graphics state.

NOTE	Patterns defined by type 2 pattern dictionaries do not tile. 
		To create a tiling pattern containing a gradient fill, invoke the sh operator from within the content stream of a type 1 (tiling) pattern.'.
	ShadingOperation namespacePath: #(#PDFtalk).
%
# Define class Leading
DoIt
TextStateOperation
	subclass: 'Leading'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Leading category: 'PDFtalk Graphics Operations'.
	Leading comment: 'Set the text leading, Tl, to leading, which shall be a number expressed in unscaled text space units. 
Text leading shall be used only by the T*, '', and  operators. 
Initial value: 0
'.
	Leading namespacePath: #(#PDFtalk).
%
# Define class ShowTextOnNextLine
DoIt
TextShowingOperation
	subclass: 'ShowTextOnNextLine'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ShowTextOnNextLine category: 'PDFtalk Graphics Operations'.
	ShowTextOnNextLine comment: 'Move to the next line and show a text string. 
This operator shall have the same effect as the code
	T*
	string Tj'.
	ShowTextOnNextLine namespacePath: #(#PDFtalk).
%
# Define class SetDash
DoIt
GraphicsStateOperation
	subclass: 'SetDash'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetDash category: 'PDFtalk Graphics Operations'.
	SetDash comment: 'Set the line dash pattern in the graphics state'.
	SetDash namespacePath: #(#PDFtalk).
%
# Define class PaintShading
DoIt
ShadingOperation
	subclass: 'PaintShading'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PaintShading category: 'PDFtalk Graphics Operations'.
	PaintShading comment: 'Paint the shape and colour shading described by a shading dictionary, subject to the current clipping path. 
The current colour in the graphics state is neither used nor altered. 
The effect is different from that of painting a path using a shading pattern as the current colour.

name is the name of a shading dictionary resource in the Shading subdictionary of the current resource dictionary. 
All coordinates in the shading dictionary are interpreted relative to the current user space. 
(By contrast, when a shading dictionary is used in a type 2 pattern, the coordinates are expressed in pattern space.) 
All colours are interpreted in the colour space identified by the shading dictionaryâs ColorSpace entry. 
The Background entry, if present, is ignored.

This operator should be applied only to bounded or geometrically defined shadings. 
If applied to an unbounded shading, it paints the shadingâs gradient fill across the entire clipping region, which may be time-consuming'.
	PaintShading namespacePath: #(#PDFtalk).
%
# Define class TextRenderingMode
DoIt
TextStateOperation
	subclass: 'TextRenderingMode'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TextRenderingMode category: 'PDFtalk Graphics Operations'.
	TextRenderingMode comment: 'Set the text rendering mode, Tmode, to render. 
Initial value: 0'.
	TextRenderingMode namespacePath: #(#PDFtalk).
%
# Define class InlineImageOperation
DoIt
Operation
	subclass: 'InlineImageOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	InlineImageOperation category: 'PDFtalk Graphics Operations'.
	InlineImageOperation comment: 'PDF Inline Images as defined in PDF 32000_2008.pdf, section 8.9.7, pp. 214.

As an alternative to the image XObjects, a sampled image may be specified in the form of an inline image. 
This type of image shall be defined directly within the content stream in which it will be painted rather than as a separate object. 
Because the inline format gives the reader less flexibility in managing the image data, it shall be used only for small images (4 KB or less).

An inline image object shall be delimited in the content stream by the operators BI (begin image), ID (image data), and EI (end image). 
BI and ID shall bracket a series of key-value pairs specifying the characteristics of the image, such as its dimensions and colour space; 
the image data shall follow between the ID and EI operators. 
The format is thus analogous to that of a stream object such as an image XObject:
	BI
	â¦Key-value pairsâ¦
	ID
	â¦Image dataâ¦
	EI'.
	InlineImageOperation namespacePath: #(#PDFtalk).
%
# Define class EndInlineImage
DoIt
InlineImageOperation
	subclass: 'EndInlineImage'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	EndInlineImage category: 'PDFtalk Graphics Operations'.
	EndInlineImage comment: 'End an inline image object'.
	EndInlineImage namespacePath: #(#PDFtalk).
%
# Define class SetStrokingCMYK
DoIt
ColourOperation
	subclass: 'SetStrokingCMYK'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetStrokingCMYK category: 'PDFtalk Graphics Operations'.
	SetStrokingCMYK comment: 'Set the stroking colour space to DeviceCMYK (or the DefaultCMYK colour space) and set the colour to use for stroking operations. 
Each operand shall be a number between 0.0 (zero concentration) and 1.0 (maximum concentration). 
The behaviour of this operator is affected by the overprint mode.'.
	SetStrokingCMYK namespacePath: #(#PDFtalk).
%
# Define class ShowTextOnNextLineWithSpacing
DoIt
TextShowingOperation
	subclass: 'ShowTextOnNextLineWithSpacing'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ShowTextOnNextLineWithSpacing category: 'PDFtalk Graphics Operations'.
	ShowTextOnNextLineWithSpacing comment: 'Move to the next line and show a text string, using aw as the word spacing and ac as the character spacing 
(setting the corresponding parameters in the text state). 
aw and ac shall be numbers expressed in unscaled text space units. 
This operator shall have the same effect as this code:
	aw Tw
	ac Tc
	string '''.
	ShowTextOnNextLineWithSpacing namespacePath: #(#PDFtalk).
%
# Define class RestoreState
DoIt
GraphicsStateOperation
	subclass: 'RestoreState'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	RestoreState category: 'PDFtalk Graphics Operations'.
	RestoreState comment: 'Restore the graphics state by removing the most recently saved state from the stack and making it the current state'.
	RestoreState namespacePath: #(#PDFtalk).
%
# Define class SetNonStrokingCMYK
DoIt
ColourOperation
	subclass: 'SetNonStrokingCMYK'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetNonStrokingCMYK category: 'PDFtalk Graphics Operations'.
	SetNonStrokingCMYK comment: 'Same as K but used for nonstroking operations.'.
	SetNonStrokingCMYK namespacePath: #(#PDFtalk).
%
# Define class AppendRectangle
DoIt
PathConstructionOperation
	subclass: 'AppendRectangle'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	AppendRectangle category: 'PDFtalk Graphics Operations'.
	AppendRectangle comment: 'Append a rectangle to the current path as a complete subpath, with lower-left corner (x, y) and dimensions width and height in user space. 
The operation
	x y width height re
is equivalent to
	x y m
	(x + width) y l
	(x + width) (y + height) l
	x (y + height) l
	h'.
	AppendRectangle namespacePath: #(#PDFtalk).
%
# Define class FillEvenOddAndStrokeClosed
DoIt
PathPaintingOperation
	subclass: 'FillEvenOddAndStrokeClosed'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FillEvenOddAndStrokeClosed category: 'PDFtalk Graphics Operations'.
	FillEvenOddAndStrokeClosed comment: 'Close, fill, and then stroke the path, using the even-odd rule to determine the region to fill. 
This operator shall have the same effect as the sequence h B*'.
	FillEvenOddAndStrokeClosed namespacePath: #(#PDFtalk).
%
# Define class CharacterSpacing
DoIt
TextStateOperation
	subclass: 'CharacterSpacing'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CharacterSpacing category: 'PDFtalk Graphics Operations'.
	CharacterSpacing comment: 'Set the character spacing, Tc, to charSpace, which shall be a number expressed in unscaled text space units. 
Character spacing shall be used by the Tj, TJ, and '' operators. 
Initial value: 0
'.
	CharacterSpacing namespacePath: #(#PDFtalk).
%
# Define class FillAndStrokeClosed
DoIt
PathPaintingOperation
	subclass: 'FillAndStrokeClosed'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FillAndStrokeClosed category: 'PDFtalk Graphics Operations'.
	FillAndStrokeClosed comment: 'Close, fill, and then stroke the path, using the nonzero winding number rule to determine the region to fill. 
This operator shall have the same effect as the sequence h B'.
	FillAndStrokeClosed namespacePath: #(#PDFtalk).
%
# Define class XObjectOperation
DoIt
Operation
	subclass: 'XObjectOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	XObjectOperation category: 'PDFtalk Graphics Operations'.
	XObjectOperation comment: 'PDF External Objects as defined in PDF 32000_2008.pdf, section 8.8, pp. 201.

An external object (commonly called an XObject) is a graphics object whose contents are defined by a self-contained stream, 
separate from the content stream in which it is used. 
There are three types of external objects:
	â¢	An image XObject represents a sampled visual image such as a photograph.
	â¢	A form XObject is a self-contained description of an arbitrary sequence of graphics objects.
	â¢	A PostScript XObject contains a fragment of code expressed in the PostScript page description language. 
		PostScript XObjects should not be used.

Two further categories of external objects, group XObjects and reference XObjects (both PDF 1.4), 
are actually specialized types of form XObjects with additional properties.

Any XObject can be painted as part of another content stream by means of the Do operator. 
This operator applies to any type of XObjectâimage, form, or PostScript. 
The syntax is the same in all cases, although details of the operatorâs behaviour differ depending on the type.'.
	XObjectOperation namespacePath: #(#PDFtalk).
%
# Define class PaintXObject
DoIt
XObjectOperation
	subclass: 'PaintXObject'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PaintXObject category: 'PDFtalk Graphics Operations'.
	PaintXObject comment: 'Paint the specified XObject. 
The operand name shall appear as a key in the XObject subdictionary of the current resource dictionary. 
The associated value shall be a stream whose Type entry, if present, is XObject. 
The effect of Do depends on the value of the XObjectâs Subtype entry, which may be Image, Form, or PS'.
	PaintXObject namespacePath: #(#PDFtalk).
%
# Define class SetJoin
DoIt
GraphicsStateOperation
	subclass: 'SetJoin'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetJoin category: 'PDFtalk Graphics Operations'.
	SetJoin comment: 'Set the line join style in the graphics state'.
	SetJoin namespacePath: #(#PDFtalk).
%
# Define class ShowText
DoIt
TextShowingOperation
	subclass: 'ShowText'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ShowText category: 'PDFtalk Graphics Operations'.
	ShowText comment: 'Show a text string'.
	ShowText namespacePath: #(#PDFtalk).
%
# Define class MarkedContentPointWithProperties
DoIt
MarkedContentOperation
	subclass: 'MarkedContentPointWithProperties'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	MarkedContentPointWithProperties category: 'PDFtalk Graphics Operations'.
	MarkedContentPointWithProperties comment: 'Designate a marked-content point with an associated property list. 
tag shall be a name object indicating the role or significance of the point. 
properties shall be either an inline dictionary containing the property list or a name object associated with it in the Properties subdictionary of the current resource dictionary'.
	MarkedContentPointWithProperties namespacePath: #(#PDFtalk).
%
# Define class SetNonStrokingColorSpace
DoIt
ColourOperation
	subclass: 'SetNonStrokingColorSpace'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetNonStrokingColorSpace category: 'PDFtalk Graphics Operations'.
	SetNonStrokingColorSpace comment: 'Same as CS but used for nonstroking operations.'.
	SetNonStrokingColorSpace namespacePath: #(#PDFtalk).
%
# Define class SetGraphicsState
DoIt
GraphicsStateOperation
	subclass: 'SetGraphicsState'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetGraphicsState category: 'PDFtalk Graphics Operations'.
	SetGraphicsState comment: 'Set the specified parameters in the graphics state. 
dictName shall be the name of a graphics state parameter dictionary in the ExtGState subdictionary of the current resource dictionary'.
	SetGraphicsState namespacePath: #(#PDFtalk).
%
# Define class CompatibilityOperation
DoIt
Operation
	subclass: 'CompatibilityOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CompatibilityOperation category: 'PDFtalk Graphics Operations'.
	CompatibilityOperation comment: 'PDF Content Streams as defined in PDF 32000_2008.pdf, section 7.8.2, pp. 81.

Ordinarily, when a conforming reader encounters an operator in a content stream that it does not recognize, an error shall occur. 
A pair of compatibility operators, BX and EX (PDF 1.1), shall modify this behaviour. 
These operators shall occur in pairs and may be nested. 
They bracket a compatibility section, a portion of a content stream within which unrecognized operators shall be ignored without error. 
This mechanism enables a conforming writer to use operators defined in later versions of PDF without sacrificing compatibility with older applications. 
It should be used only in cases where ignoring such newer operators is the appropriate thing to do. 
The BX and EX operators are not themselves part of any graphics object or of the graphics state.'.
	CompatibilityOperation namespacePath: #(#PDFtalk).
%
# Define class BeginCompatibility
DoIt
CompatibilityOperation
	subclass: 'BeginCompatibility'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	BeginCompatibility category: 'PDFtalk Graphics Operations'.
	BeginCompatibility comment: 'Begin a compatibility section. 
Unrecognized operators (along with their operands) shall be ignored without error until the balancing EX operator is encountered.'.
	BeginCompatibility namespacePath: #(#PDFtalk).
%
# Define class Type3FontOperation
DoIt
Operation
	subclass: 'Type3FontOperation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Type3FontOperation category: 'PDFtalk Graphics Operations'.
	Type3FontOperation comment: 'PDF Type 3 Font Operator as defined in PDF 32000_2008.pdf, section 9.6.5, pp. 260.

Type 3 fonts differ from the other fonts supported by PDF. 
A Type 3 font dictionary defines the font; font dictionaries for other fonts simply contain information about the font and 
refer to a separate font program for the actual glyph descriptions. 
In Type 3 fonts, glyphs shall be defined by streams of PDF graphics operators. 
These streams shall be associated with glyph names. 
A separate encoding entry shall map character codes to the appropriate glyph names for the glyphs.

NOTE 1		Type 3 fonts are more flexible than Type 1 fonts because the glyph descriptions may contain arbitrary PDF graphics operators. 
			However, Type 3 fonts have no hinting mechanism for improving output at small sizes or low resolutions.'.
	Type3FontOperation namespacePath: #(#PDFtalk).
%
# Define class SetRenderingIntent
DoIt
GraphicsStateOperation
	subclass: 'SetRenderingIntent'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetRenderingIntent category: 'PDFtalk Graphics Operations'.
	SetRenderingIntent comment: 'Set the colour rendering intent in the graphics state'.
	SetRenderingIntent namespacePath: #(#PDFtalk).
%
# Define class SetStrokingGray
DoIt
ColourOperation
	subclass: 'SetStrokingGray'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetStrokingGray category: 'PDFtalk Graphics Operations'.
	SetStrokingGray comment: 'Set the stroking colour space to DeviceGray (or the DefaultGray colour space) and set the gray level to use for stroking operations. 
gray shall be a number between 0.0 (black) and 1.0 (white).'.
	SetStrokingGray namespacePath: #(#PDFtalk).
%
# Define class SetNonStrokingRGB
DoIt
ColourOperation
	subclass: 'SetNonStrokingRGB'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetNonStrokingRGB category: 'PDFtalk Graphics Operations'.
	SetNonStrokingRGB comment: 'Same as RG but used for nonstroking operations.'.
	SetNonStrokingRGB namespacePath: #(#PDFtalk).
%
# Define class TextFont
DoIt
TextStateOperation
	subclass: 'TextFont'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TextFont category: 'PDFtalk Graphics Operations'.
	TextFont comment: 'Set the text font, Tf, to font and the text font size, Tfs, to size. 
font shall be the name of a font resource in the Font subdictionary of the current resource dictionary; 
size shall be a number representing a scale factor. 
There is no initial value for either font or size; they shall be specified explicitly by using Tf before any text is shown'.
	TextFont namespacePath: #(#PDFtalk).
%
# Define class SetStrokingRGB
DoIt
ColourOperation
	subclass: 'SetStrokingRGB'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetStrokingRGB category: 'PDFtalk Graphics Operations'.
	SetStrokingRGB comment: 'Set the stroking colour space to DeviceRGB (or the DefaultRGB colour space) and set the colour to use for stroking operations. 
Each operand shall be a number between 0.0 (minimum intensity) and 1.0 (maximum intensity).'.
	SetStrokingRGB namespacePath: #(#PDFtalk).
%
# Define class ConcatenateMatrix
DoIt
GraphicsStateOperation
	subclass: 'ConcatenateMatrix'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ConcatenateMatrix category: 'PDFtalk Graphics Operations'.
	ConcatenateMatrix comment: 'Modify the current transformation matrix (CTM) by concatenating the specified matrix. 
Although the operands specify a matrix, they shall be written as six separate numbers, not as an array.'.
	ConcatenateMatrix namespacePath: #(#PDFtalk).
%
# Define class MarkedContentPoint
DoIt
MarkedContentOperation
	subclass: 'MarkedContentPoint'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	MarkedContentPoint category: 'PDFtalk Graphics Operations'.
	MarkedContentPoint comment: 'Designate a marked-content point. 
tag shall be a name object indicating the role or significance of the point'.
	MarkedContentPoint namespacePath: #(#PDFtalk).
%
# Define class Clip
DoIt
ClippingPathOperation
	subclass: 'Clip'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Clip category: 'PDFtalk Graphics Operations'.
	Clip comment: 'Modify the current clipping path by intersecting it with the current path, 
using the nonzero winding number rule to determine which regions lie inside the clipping path.
'.
	Clip namespacePath: #(#PDFtalk).
%
# Define class SetType3GlyphWidth
DoIt
Type3FontOperation
	subclass: 'SetType3GlyphWidth'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetType3GlyphWidth category: 'PDFtalk Graphics Operations'.
	SetType3GlyphWidth comment: 'Set width information for the glyph and declare that the glyph description specifies both its shape and its colour.

NOTE	This operator name ends in the digit 0.

wx denotes the horizontal displacement in the glyph coordinate system; 
it shall be consistent with the corresponding width in the fontâs Widths array. 
wy shall be 0.

This operator shall only be permitted in a content stream appearing in a Type 3 fontâs CharProcs dictionary. 
It is typically used only if the glyph description executes operators to set the colour explicitly.'.
	SetType3GlyphWidth namespacePath: #(#PDFtalk).
%
# Define class SetCap
DoIt
GraphicsStateOperation
	subclass: 'SetCap'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetCap category: 'PDFtalk Graphics Operations'.
	SetCap comment: 'Set the line cap style in the graphics state'.
	SetCap namespacePath: #(#PDFtalk).
%
# Define class SetNonStrokingGray
DoIt
ColourOperation
	subclass: 'SetNonStrokingGray'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetNonStrokingGray category: 'PDFtalk Graphics Operations'.
	SetNonStrokingGray comment: 'Same as G but used for nonstroking operations.'.
	SetNonStrokingGray namespacePath: #(#PDFtalk).
%
# Define class AppendCurveWithoutC2
DoIt
PathConstructionOperation
	subclass: 'AppendCurveWithoutC2'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	AppendCurveWithoutC2 category: 'PDFtalk Graphics Operations'.
	AppendCurveWithoutC2 comment: 'Append a cubic BÃ©zier curve to the current path. 
The curve shall extend from the current point to the point (x3, y3), using (x1, y1) and (x3, y3) as the BÃ©zier control points. 
The new current point shall be (x3, y3)'.
	AppendCurveWithoutC2 namespacePath: #(#PDFtalk).
%
# Define class NextLineRelative
DoIt
TextPositioningOperation
	subclass: 'NextLineRelative'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	NextLineRelative category: 'PDFtalk Graphics Operations'.
	NextLineRelative comment: 'Move to the start of the next line, offset from the start of the current line by (tx, ty). 
tx and ty shall denote numbers expressed in unscaled text space units. 
More precisely, this operator shall perform these assignments:
                    [ 1  0  0 ]
Tm := Tlm := [  0  1  0 ] * Tlm
                    [ tx ty 1 ]
'.
	NextLineRelative namespacePath: #(#PDFtalk).
%
# Define class SetMiterLimit
DoIt
GraphicsStateOperation
	subclass: 'SetMiterLimit'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetMiterLimit category: 'PDFtalk Graphics Operations'.
	SetMiterLimit comment: 'Set the miter limit in the graphics state'.
	SetMiterLimit namespacePath: #(#PDFtalk).
%
# Define class AppendCurveWithoutC1
DoIt
PathConstructionOperation
	subclass: 'AppendCurveWithoutC1'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	AppendCurveWithoutC1 category: 'PDFtalk Graphics Operations'.
	AppendCurveWithoutC1 comment: 'Append a cubic BÃ©zier curve to the current path. 
The curve shall extend from the current point to the point (x3, y3), using the current point and (x2, y2) as the BÃ©zier control points. 
The new current point shall be (x3, y3)'.
	AppendCurveWithoutC1 namespacePath: #(#PDFtalk).
%
# Define class FillEvenOddAndStroke
DoIt
PathPaintingOperation
	subclass: 'FillEvenOddAndStroke'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FillEvenOddAndStroke category: 'PDFtalk Graphics Operations'.
	FillEvenOddAndStroke comment: 'Fill and then stroke the path, using the even-odd rule to determine the region to fill. 
This operator shall produce the same result as B, except that the path is filled as if with f* instead of f'.
	FillEvenOddAndStroke namespacePath: #(#PDFtalk).
%
# Define class BeginInlineImage
DoIt
InlineImageOperation
	subclass: 'BeginInlineImage'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	BeginInlineImage category: 'PDFtalk Graphics Operations'.
	BeginInlineImage comment: 'Begin an inline image object'.
	BeginInlineImage namespacePath: #(#PDFtalk).
%
# Define class Move
DoIt
PathConstructionOperation
	subclass: 'Move'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Move category: 'PDFtalk Graphics Operations'.
	Move comment: 'Begin a new subpath by moving the current point to coordinates (x, y), omitting any connecting line segment. 
If the previous path construction operator in the current path was also m, the new m overrides it; no vestige of the previous m operation remains in the path'.
	Move namespacePath: #(#PDFtalk).
%
# Define class TextRise
DoIt
TextStateOperation
	subclass: 'TextRise'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TextRise category: 'PDFtalk Graphics Operations'.
	TextRise comment: 'Set the text rise, Trise, to rise, which shall be a number expressed in unscaled text space units. 
Initial value: 0'.
	TextRise namespacePath: #(#PDFtalk).
%
# Define class AppendLine
DoIt
PathConstructionOperation
	subclass: 'AppendLine'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	AppendLine category: 'PDFtalk Graphics Operations'.
	AppendLine comment: 'Append a straight line segment from the current point to the point (x, y). 
The new current point shall be (x, y)'.
	AppendLine namespacePath: #(#PDFtalk).
%
# Define class EndCompatibility
DoIt
CompatibilityOperation
	subclass: 'EndCompatibility'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	EndCompatibility category: 'PDFtalk Graphics Operations'.
	EndCompatibility comment: 'End a compatibility section begun by a balancing BX operator. 
Ignore any unrecognized operands and operators from previous matching BX onward.'.
	EndCompatibility namespacePath: #(#PDFtalk).
%
# Define class SaveState
DoIt
GraphicsStateOperation
	subclass: 'SaveState'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SaveState category: 'PDFtalk Graphics Operations'.
	SaveState comment: 'Save the current graphics state on the graphics state stack'.
	SaveState namespacePath: #(#PDFtalk).
%
# Define class EndMarkedContent
DoIt
MarkedContentOperation
	subclass: 'EndMarkedContent'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	EndMarkedContent category: 'PDFtalk Graphics Operations'.
	EndMarkedContent comment: 'End a marked-content sequence begun by a BMC or BDC operator'.
	EndMarkedContent namespacePath: #(#PDFtalk).
%
# Define class SetType3GlyphWidthAndBoundingBox
DoIt
Type3FontOperation
	subclass: 'SetType3GlyphWidthAndBoundingBox'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetType3GlyphWidthAndBoundingBox category: 'PDFtalk Graphics Operations'.
	SetType3GlyphWidthAndBoundingBox comment: 'Set width and bounding box information for the glyph and declare that the glyph description specifies only shape, not colour.

NOTE	This operator name ends in the digit 1.

wx denotes the horizontal displacement in the glyph coordinate system; it shall be consistent with the corresponding width in the fontâs Widths array. 
wy shall be 0.

llx and lly denote the coordinates of the lower-left corner, and urx and ury denote the upper-right corner, of the glyph bounding box. 
The glyph bounding box is the smallest rectangle, oriented with the axes of the glyph coordinate system, 
that completely encloses all marks placed on the page as a result of executing the glyphâs description. 
The declared bounding box shall be correctâin other words, sufficiently large to enclose the entire glyph. 
If any marks fall outside this bounding box, the result is unpredictable.

A glyph description that begins with the d1 operator should not execute any operators that set the colour (or other colour-related parameters) in the graphics state; 
any use of such operators shall be ignored. 
The glyph description is executed solely to determine the glyphâs shape. 
Its colour shall be determined by the graphics state in effect each time this glyph is painted by a text-showing operator. 
For the same reason, the glyph description shall not include an image; 
however, an image mask is acceptable, since it merely defines a region of the page to be painted with the current colour.

This operator shall be used only in a content stream appearing in a Type 3 fontâs CharProcs dictionary'.
	SetType3GlyphWidthAndBoundingBox namespacePath: #(#PDFtalk).
%
# Define class Stroke
DoIt
PathPaintingOperation
	subclass: 'Stroke'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Stroke category: 'PDFtalk Graphics Operations'.
	Stroke comment: 'Stroke the path'.
	Stroke namespacePath: #(#PDFtalk).
%
# Define class BeginImageData
DoIt
InlineImageOperation
	subclass: 'BeginImageData'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	BeginImageData category: 'PDFtalk Graphics Operations'.
	BeginImageData comment: 'Begin the image data for an inline image object'.
	BeginImageData namespacePath: #(#PDFtalk).
%
# Define class AppendCurve
DoIt
PathConstructionOperation
	subclass: 'AppendCurve'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	AppendCurve category: 'PDFtalk Graphics Operations'.
	AppendCurve comment: 'Append a cubic BÃ©zier curve to the current path. 
The curve shall extend from the current point to the point (x3, y3), using (x1, y1) and (x2, y2) as the BÃ©zier control points. 
The new current point shall be (x3, y3)'.
	AppendCurve namespacePath: #(#PDFtalk).
%
# Define class SetTextMatrix
DoIt
TextPositioningOperation
	subclass: 'SetTextMatrix'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetTextMatrix category: 'PDFtalk Graphics Operations'.
	SetTextMatrix comment: 'Set the text matrix, Tm, and the text line matrix, Tlm.
                    [ a b 0 ]
Tm := Tlm := [ c d 0 ]
                    [ e f 1 ]
The operands shall all be numbers, and the initial value for Tm and Tlm shall be the identity matrix, [1 0 0 1 0 0]. 
Although the operands specify a matrix, they shall be passed to Tm as six separate numbers, not as an array.

The matrix specified by the operands shall not be concatenated onto the current text matrix, but shall replace it
'.
	SetTextMatrix namespacePath: #(#PDFtalk).
%
# Define class ShowTextPositioned
DoIt
TextShowingOperation
	subclass: 'ShowTextPositioned'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ShowTextPositioned category: 'PDFtalk Graphics Operations'.
	ShowTextPositioned comment: 'Show one or more text strings, allowing individual glyph positioning. 
Each element of array shall be either a string or a number. 
If the element is a string, this operator shall show the string. 
If it is a number, the operator shall adjust the text position by that amount; that is, it shall translate the text matrix, Tm. 
The number shall be expressed in thousandths of a unit of text space. 
This amount shall be subtracted from the current horizontal or vertical coordinate, depending on the writing mode. 
In the default coordinate system, a positive adjustment has the effect of moving the next glyph painted either to the left or down by the given amount'.
	ShowTextPositioned namespacePath: #(#PDFtalk).
%
# Define class FillAndStroke
DoIt
PathPaintingOperation
	subclass: 'FillAndStroke'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FillAndStroke category: 'PDFtalk Graphics Operations'.
	FillAndStroke comment: 'Fill and then stroke the path, using the nonzero winding number rule to determine the region to fill. 
This operator shall produce the same result as constructing two identical path objects, painting the first with f and the second with S.

NOTE
The filling and stroking portions of the operation consult different values of several graphics state parameters, such as the current colour'.
	FillAndStroke namespacePath: #(#PDFtalk).
%
# Define class SetStrokingColorSpace
DoIt
ColourOperation
	subclass: 'SetStrokingColorSpace'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetStrokingColorSpace category: 'PDFtalk Graphics Operations'.
	SetStrokingColorSpace comment: 'Set the current colour space to use for stroking operations. 
The operand name shall be a name object. 
If the colour space is one that can be specified by a name and no additional parameters (DeviceGray, DeviceRGB, DeviceCMYK, and certain cases of Pattern), 
the name may be specified directly. 
Otherwise, it shall be a name defined in the ColorSpace subdictionary of the current resource dictionary; 
the associated value shall be an array describing the colour space.

The names DeviceGray, DeviceRGB, DeviceCMYK, and Pattern always identify the corresponding colour spaces directly; 
they never refer to resources in the ColorSpace subdictionary.

The CS operator shall also set the current stroking colour to its initial value, which depends on the colour space:
In a DeviceGray, DeviceRGB, CalGray, or CalRGB colour space, the initial colour shall have all components equal to 0.0.
In a DeviceCMYK colour space, the initial colour shall be [0.0 0.0 0.0 1.0].
In a Lab or ICCBased colour space, the initial colour shall have all components equal to 0.0 unless that falls outside the intervals specified by the spaceâs Range entry, in which case the nearest valid value shall be substituted.
In an Indexed colour space, the initial colour value shall be 0.
In a Separation or DeviceN colour space, the initial tint value shall be 1.0 for all colorants.
In a Pattern colour space, the initial colour shall be a pattern object that causes nothing to be painted.'.
	SetStrokingColorSpace namespacePath: #(#PDFtalk).
%
# Define class EndText
DoIt
TextObjectOperation
	subclass: 'EndText'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	EndText category: 'PDFtalk Graphics Operations'.
	EndText comment: 'End a text object, discarding the text matrix'.
	EndText namespacePath: #(#PDFtalk).
%
# Define class EndPath
DoIt
PathPaintingOperation
	subclass: 'EndPath'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	EndPath category: 'PDFtalk Graphics Operations'.
	EndPath comment: 'End the path object without filling or stroking it. 
This operator shall be a path-painting no-op, used primarily for the side effect of changing the current clipping path'.
	EndPath namespacePath: #(#PDFtalk).
%
# Define class FillEvenOdd
DoIt
PathPaintingOperation
	subclass: 'FillEvenOdd'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FillEvenOdd category: 'PDFtalk Graphics Operations'.
	FillEvenOdd comment: 'Fill the path, using the even-odd rule to determine the region to fill'.
	FillEvenOdd namespacePath: #(#PDFtalk).
%
# Define class BeginMarkedContent
DoIt
MarkedContentOperation
	subclass: 'BeginMarkedContent'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	BeginMarkedContent category: 'PDFtalk Graphics Operations'.
	BeginMarkedContent comment: 'Begin a marked-content sequence terminated by a balancing EMC operator. 
tag shall be a name object indicating the role or significance of the sequence'.
	BeginMarkedContent namespacePath: #(#PDFtalk).
%
# Define class SetFlatness
DoIt
GraphicsStateOperation
	subclass: 'SetFlatness'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SetFlatness category: 'PDFtalk Graphics Operations'.
	SetFlatness comment: 'Set the flatness tolerance in the graphics state. 
flatness is a number in the range 0 to 100; 
a value of 0 shall specify the output deviceâs default flatness tolerance'.
	SetFlatness namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
classmethod: AppendCurve
documentation
	^'Append a cubic BÃ©zier curve to the current path. The curve shall extend from the current point to the point (x3, y3), using (x1, y1) and (x2, y2) as the BÃ©zier control points. The new current point shall be (x3, y3)'
%
classmethod: AppendCurve
operandTypes
	^#(#('x1' Number) #('y1' Number) #('x2' Number) #('y2' Number) #('x3' Number) #('y3' Number))
%
classmethod: AppendCurve
operatorName
	^#c
%
category: 'accessing'
classmethod: AppendCurveWithoutC1
documentation
	^'Append a cubic BÃ©zier curve to the current path. The curve shall extend from the current point to the point (x3, y3), using the current point and (x2, y2) as the BÃ©zier control points. The new current point shall be (x3, y3)'
%
classmethod: AppendCurveWithoutC1
operandTypes
	^#(#('x2' Number) #('y2' Number) #('x3' Number) #('y3' Number))
%
classmethod: AppendCurveWithoutC1
operatorName
	^#v
%
category: 'accessing'
classmethod: AppendCurveWithoutC2
documentation
	^'Append a cubic BÃ©zier curve to the current path. The curve shall extend from the current point to the point (x3, y3), using (x1, y1) and (x3, y3) as the BÃ©zier control points. The new current point shall be (x3, y3)'
%
classmethod: AppendCurveWithoutC2
operandTypes
	^#(#('x1' Number) #('y1' Number) #('x3' Number) #('y3' Number))
%
classmethod: AppendCurveWithoutC2
operatorName
	^#y
%
category: 'accessing'
classmethod: AppendLine
documentation
	^'Append a straight line segment from the current point to the point (x, y). The new current point shall be (x, y)'
%
classmethod: AppendLine
operandTypes
	^#(#('x' Number) #('y' Number))
%
classmethod: AppendLine
operatorName
	^#l
%
category: 'accessing'
method: AppendLine
point
	^self operands first asSmalltalkValue @ self operands last asSmalltalkValue
%
category: 'accessing'
classmethod: AppendRectangle
documentation
	^'Append a rectangle to the current path as a complete subpath, with lower-left corner (x, y) and dimensions width and height in user space. The operation
	x y width height re
is equivalent to
	x y m
	(x + width) y l
	(x + width) (y + height) l
	x (y + height) l
	h'
%
classmethod: AppendRectangle
operandTypes
	^#(#('x' Number) #('y' Number) #('width' Number) #('height' Number))
%
classmethod: AppendRectangle
operatorName
	^#re
%
category: 'accessing'
method: AppendRectangle
extent
	"<Point>"

	| w h |
	w := self operands at: 3.
	h := self operands last.
	^(w asSmalltalkValue @ h asSmalltalkValue) abs
%
method: AppendRectangle
frame
	"<Rectangle>"

	^self origin extent: self extent
%
method: AppendRectangle
origin
	"<Point>"

	| x y |
	x := self operands first.
	y := self operands at: 2.
	^x asSmalltalkValue @ y asSmalltalkValue
%
method: AppendRectangle
rectangle
	"<Rectangle>"

	^self origin extent: self extent
%
category: 'accessing'
classmethod: BeginCompatibility
documentation
	^'Begin a compatibility section. Unrecognized operators (along with their operands) shall be ignored without error until the balancing EX operator is encountered'
%
classmethod: BeginCompatibility
end
	^EndCompatibility
%
classmethod: BeginCompatibility
operatorName
	^#BX
%
classmethod: BeginCompatibility
pdfVersion
	^Version pdf1_1
%
category: 'accessing'
classmethod: BeginImageData
documentation
	^'Begin the image data for an inline image object'
%
classmethod: BeginImageData
operatorName
	^#ID
%
category: 'actions'
method: BeginImageData
addAsContentTokenWith: someOperands to: someOperators inParser: aContentParser
	| newOperands |
	newOperands := super
		addAsContentTokenWith: someOperands
		to: someOperators
		inParser: aContentParser.
	^newOperands , (Array with: aContentParser readImageData)
%
method: BeginImageData
processWith: aProcessor at: indexInteger
	aProcessor addBeginImageData: self
%
category: 'accessing'
classmethod: BeginInlineImage
documentation
	^'Begin an inline image object'
%
classmethod: BeginInlineImage
end
	^EndInlineImage
%
classmethod: BeginInlineImage
operatorName
	^#BI
%
category: 'actions'
method: BeginInlineImage
processWith: aProcessor at: indexInteger
	aProcessor addBeginInlineImage: self
%
category: 'accessing'
classmethod: BeginMarkedContent
documentation
	^'Begin a marked-content sequence terminated by a balancing EMC operator. tag shall be a name object indicating the role or significance of the sequence'
%
classmethod: BeginMarkedContent
end
	^EndMarkedContent
%
classmethod: BeginMarkedContent
operandTypes
	^#(#('tag' Name))
%
classmethod: BeginMarkedContent
operatorName
	^#BMC
%
classmethod: BeginMarkedContent
pdfVersion
	^Version pdf1_2
%
category: 'actions'
method: BeginMarkedContent
processWith: aProcessor at: indexInteger
	aProcessor addBeginMarkedContent: self
%
category: 'accessing'
classmethod: BeginMarkedContentWithProperties
documentation
	^'Begin a marked-content sequence with an associated property list, terminated by a balancing EMC operator. tag shall be a name object indicating the role or significance of the sequence. properties shall be either an inline dictionary containing the property list or a name object associated with it in the 
Properties subdictionary of the current resource dictionary'
%
classmethod: BeginMarkedContentWithProperties
end
	^EndMarkedContent
%
classmethod: BeginMarkedContentWithProperties
operandTypes
	^#(#('tag' Name) #('properties' Dictionary))
%
classmethod: BeginMarkedContentWithProperties
operatorName
	^#BDC
%
classmethod: BeginMarkedContentWithProperties
pdfVersion
	^Version pdf1_2
%
category: 'actions'
method: BeginMarkedContentWithProperties
processWith: aProcessor at: indexInteger
	aProcessor addBeginMarkedContentWithProperties: self
%
category: 'accessing'
classmethod: BeginText
documentation
	^'Begin a text object, initializing the text matrix, Tm, and the text line matrix, Tlm, to the identity matrix. Text objects shall not be nested; a second BT shall not appear before an ET'
%
classmethod: BeginText
end
	^EndText
%
classmethod: BeginText
operatorName
	^#BT
%
category: 'actions'
method: BeginText
processWith: aProcessor at: indexInteger
	aProcessor addBeginText
%
category: 'accessing'
classmethod: CharacterSpacing
documentation
	^'Set the character spacing, Tc, to charSpace, which shall be a number expressed in unscaled text space units. Character spacing shall be used by the Tj, TJ, and '' operators. Initial value: 0'
%
classmethod: CharacterSpacing
operandTypes
	^#(#('charSpace' Number))
%
classmethod: CharacterSpacing
operatorName
	^#Tc
%
category: 'actions'
method: CharacterSpacing
modify: aProcessor with: aResource
	aProcessor graphicsState at: #characterSpacing put: self operands first
%
category: 'accessing'
classmethod: Clip
documentation
	^'Modify the current clipping path by intersecting it with the current path, using the nonzero winding number rule to determine which regions lie inside the clipping path'
%
classmethod: Clip
operatorName
	^#W
%
category: 'accessing'
method: Clip
rule
	^#NonzeroWindingNumber
%
category: 'accessing'
classmethod: ClipEvenOdd
documentation
	^'Modify the current clipping path by intersecting it with the current path, using the even-odd rule to determine which regions lie inside the clipping path'
%
classmethod: ClipEvenOdd
operatorName
	^#'W*'
%
category: 'accessing'
method: ClipEvenOdd
rule
	^#EvenOdd
%
category: 'accessing'
method: ClippingPathOperation
rule
	"<Symbol>"

	^self subclassResponsibility
%
category: 'actions'
method: ClippingPathOperation
processWith: aProcessor at: indexInteger
	aProcessor addClippingPathOperation: self
%
category: 'accessing'
classmethod: ClosePath
documentation
	^'Close the current subpath by appending a straight line segment from the current point to the starting point of the subpath. If the current subpath is already closed, h shall do nothing.

This operator terminates the current subpath. Appending another segment to the current path shall begin a new subpath, even if the new segment begins at the endpoint reached by the h operation'
%
classmethod: ClosePath
operatorName
	^#h
%
category: 'actions'
method: ColourOperation
processWith: aProcessor at: indexInteger
	aProcessor addColourOperation: self
%
category: 'accessing'
classmethod: ConcatenateMatrix
documentation
	^'Modify the current transformation matrix (CTM) by concatenating the specified matrix. Although the operands specify a matrix, they shall be written as six separate numbers, not as an array'
%
classmethod: ConcatenateMatrix
operandTypes
	^#(#('a' Number) #('b' Number) #('c' Number) #('d' Number) #('e' Number) #('f' Number))
%
classmethod: ConcatenateMatrix
operatorName
	^#cm
%
category: 'actions'
method: ConcatenateMatrix
modify: aProcessor with: aResource
	aProcessor graphicsState
		at: #CTM
		put: (aProcessor graphicsState CTM concatenatedWith: ((PDF classAt: #Matrix) on: self operands))
%
category: 'accessing'
classmethod: EndCompatibility
documentation
	^'End a compatibility section begun by a balancing BX operator. Ignore any unrecognized operands and operators from previous matching BX onward'
%
classmethod: EndCompatibility
operatorName
	^#EX
%
classmethod: EndCompatibility
pdfVersion
	^Version pdf1_1
%
category: 'accessing'
classmethod: EndInlineImage
documentation
	^'End an inline image object'
%
classmethod: EndInlineImage
operatorName
	^#EI
%
category: 'actions'
method: EndInlineImage
processWith: aProcessor at: indexInteger
	aProcessor addEndInlineImage: self
%
category: 'accessing'
classmethod: EndMarkedContent
documentation
	^'End a marked-content sequence begun by a BMC or BDC operator'
%
classmethod: EndMarkedContent
operatorName
	^#EMC
%
classmethod: EndMarkedContent
pdfVersion
	^Version pdf1_2
%
category: 'actions'
method: EndMarkedContent
processWith: aProcessor at: indexInteger
	aProcessor addEndMarkedContent
%
category: 'accessing'
classmethod: EndPath
documentation
	^'End the path object without filling or stroking it. This operator shall be a path-painting no-op, used primarily for the side effect of changing the current clipping path'
%
classmethod: EndPath
operatorName
	^#n
%
category: 'testing'
method: EndPath
isOnlyClipping
	^true
%
category: 'accessing'
classmethod: EndText
documentation
	^'End a text object, discarding the text matrix'
%
classmethod: EndText
operatorName
	^#ET
%
category: 'actions'
method: EndText
processWith: aProcessor at: indexInteger
	aProcessor addEndText
%
category: 'accessing'
classmethod: Fill
documentation
	^'Fill the path, using the nonzero winding number rule to determine the region to fill. Any subpaths that are open shall be implicitly closed before being filled'
%
classmethod: Fill
operatorName
	^#f
%
category: 'accessing'
classmethod: FillAndStroke
documentation
	^'Fill and then stroke the path, using the nonzero winding number rule to determine the region to fill. This operator shall produce the same result as constructing two identical path objects, painting the first with f and the second with S.

NOTE
The filling and stroking portions of the operation consult different values of several graphics state parameters, such as the current colour'
%
classmethod: FillAndStroke
operatorName
	^#B
%
category: 'accessing'
classmethod: FillAndStrokeClosed
documentation
	^'Close, fill, and then stroke the path, using the nonzero winding number rule to determine the region to fill. This operator shall have the same effect as the sequence h B'
%
classmethod: FillAndStrokeClosed
operatorName
	^#b
%
category: 'accessing'
classmethod: FillEvenOdd
documentation
	^'Fill the path, using the even-odd rule to determine the region to fill'
%
classmethod: FillEvenOdd
operatorName
	^#'f*'
%
category: 'accessing'
classmethod: FillEvenOddAndStroke
documentation
	^'Fill and then stroke the path, using the even-odd rule to determine the region to fill. This operator shall produce the same result as B, except that the path is filled as if with f* instead of f'
%
classmethod: FillEvenOddAndStroke
operatorName
	^#'B*'
%
category: 'accessing'
classmethod: FillEvenOddAndStrokeClosed
documentation
	^'Close, fill, and then stroke the path, using the even-odd rule to determine the region to fill. This operator shall have the same effect as the sequence h B*'
%
classmethod: FillEvenOddAndStrokeClosed
operatorName
	^#'b*'
%
category: 'accessing'
classmethod: FillOld
documentation
	^'Equivalent to f; included only for compatibility. Although PDF reader applications shall be able to accept this operator, PDF writer applications should use f instead'
%
classmethod: FillOld
operatorName
	^#F
%
category: 'actions'
method: GraphicsStateOperation
processWith: aProcessor at: indexInteger
	aProcessor addGraphicsStateOperation: self
%
category: 'accessing'
classmethod: HorizontalScaling
documentation
	^'Set the horizontal scaling, Th, to (scale Ã· 100). scale shall be a number specifying the percentage of the normal width. Initial value: 100 (normal width)'
%
classmethod: HorizontalScaling
operandTypes
	^#(#('scale' Number))
%
classmethod: HorizontalScaling
operatorName
	^#Tz
%
category: 'actions'
method: HorizontalScaling
modify: aProcessor with: aResource
	aProcessor graphicsState at: #horizontalScaling put: self operands first
%
category: 'accessing'
classmethod: Leading
documentation
	^'Set the text leading, Tl, to leading, which shall be a number expressed in unscaled text space units. Text leading shall be used only by the T*, '', and " operators. Initial value: 0'
%
classmethod: Leading
operandTypes
	^#(#('leading' Number))
%
classmethod: Leading
operatorName
	^#TL
%
category: 'actions'
method: Leading
modify: aProcessor with: aResource
	aProcessor graphicsState at: #leading put: self operands first
%
category: 'accessing'
classmethod: MarkedContentPoint
documentation
	^'Designate a marked-content point. tag shall be a name object indicating the role or significance of the point'
%
classmethod: MarkedContentPoint
operandTypes
	^#(#('tag' Name))
%
classmethod: MarkedContentPoint
operatorName
	^#MP
%
classmethod: MarkedContentPoint
pdfVersion
	^Version pdf1_2
%
category: 'accessing'
classmethod: MarkedContentPointWithProperties
documentation
	^'Designate a marked-content point with an associated property list. tag shall be a name object indicating the role or significance of the point. properties shall be either an inline dictionary containing the property list or a name object associated with it in the Properties subdictionary of the current resource dictionary'
%
classmethod: MarkedContentPointWithProperties
operandTypes
	^#(#('tag' Name) #('properties' Dictionary))
%
classmethod: MarkedContentPointWithProperties
operatorName
	^#DP
%
classmethod: MarkedContentPointWithProperties
pdfVersion
	^Version pdf1_2
%
category: 'accessing'
classmethod: Move
documentation
	^'Begin a new subpath by moving the current point to coordinates (x, y), omitting any connecting line segment. If the previous path construction operator in the current path was also m, the new m overrides it; no vestige of the previous m operation remains in the path'
%
classmethod: Move
operandTypes
	^#(#('x' Number) #('y' Number))
%
classmethod: Move
operatorName
	^#m
%
category: 'accessing'
method: Move
point
	^self operands first asSmalltalkValue @ self operands last asSmalltalkValue
%
category: 'accessing'
classmethod: NextLine
documentation
	^'Move to the start of the next line. This operator has the same effect as the code
	0 -Tl Td
where Tl denotes the current leading parameter in the text state. The negative of Tl is used here because Tl is the text leading expressed as a positive number. Going to the next line entails decreasing the y coordinate'
%
classmethod: NextLine
operatorName
	^#'T*'
%
category: 'actions'
method: NextLine
modify: aProcessor with: aResource
	aProcessor graphicsState nextLineBy: 0 @ aProcessor graphicsState leading content negated
%
category: 'accessing'
classmethod: NextLineRelative
documentation
	^'Move to the start of the next line, offset from the start of the current line by (tx, ty). tx and ty shall denote numbers expressed in unscaled text space units. More precisely, this operator shall perform these assignments
                     [ 1  0  0 ]
Tm := Tlm := [ 0  1  0 ] * Tlm
                     [ tx ty 1 ]'
%
classmethod: NextLineRelative
operandTypes
	^#(#('x' Number) #('y' Number))
%
classmethod: NextLineRelative
operatorName
	^#Td
%
category: 'actions'
method: NextLineRelative
modify: aProcessor with: aResource
	aProcessor graphicsState nextLineBy: self operands first asSmalltalkValue @ self operands last asSmalltalkValue
%
category: 'accessing'
classmethod: NextLineRelativeSetLeading
documentation
	^'Move to the start of the next line, offset from the start of the current line by (tx, ty). As a side effect, this operator shall set the leading parameter in the text state. This operator shall have the same effect as this code:
	-ty TL
	tx ty Td'
%
classmethod: NextLineRelativeSetLeading
operandTypes
	^#(#('x' Number) #('y' Number))
%
classmethod: NextLineRelativeSetLeading
operatorName
	^#TD
%
category: 'actions'
method: NextLineRelativeSetLeading
modify: aProcessor with: aResource
	aProcessor graphicsState at: #leading put: self operands last content negated.
	aProcessor graphicsState nextLineBy: self operands first content @ self operands last content
%
category: 'accessing'
classmethod: PaintShading
documentation
	^'Paint the shape and colour shading described by a shading dictionary, subject to the current clipping path. The current colour in the graphics state is neither used nor altered. The effect is different from that of painting a path using a shading pattern as the current colour.

name is the name of a shading dictionary resource in the Shading subdictionary of the current resource dictionary. All coordinates in the shading dictionary are interpreted relative to the current user space. (By contrast, when a shading dictionary is used in a type 2 pattern, the coordinates are expressed in pattern space.) All colours are interpreted in the colour space identified by the shading dictionaryâs ColorSpace entry. The Background entry, if present, is ignored.

This operator should be applied only to bounded or geometrically defined shadings. If applied to an unbounded shading, it paints the shadingâs gradient fill across the entire clipping region, which may be time-consuming'
%
classmethod: PaintShading
operandTypes
	^#(#('name' Name))
%
classmethod: PaintShading
operatorName
	^#sh
%
classmethod: PaintShading
pdfVersion
	^Version pdf1_3
%
category: 'accessing'
method: PaintShading
resourceIn: aPageGraphics
	^aPageGraphics resources Shading objectAt: self operands first content
%
category: 'accessing'
classmethod: PaintXObject
documentation
	^'Paint the specified XObject. The operand name shall appear as a key in the XObject subdictionary of the current resource dictionary. The associated value shall be a stream whose Type entry, if present, is XObject. The effect of Do depends on the value of the XObjectâs Subtype entry, which may be Image, Form, or PS'
%
classmethod: PaintXObject
operandTypes
	^#(#('name' Name))
%
classmethod: PaintXObject
operatorName
	^#Do
%
category: 'accessing'
method: PaintXObject
resourceIn: aPageGraphics
	^aPageGraphics resources XObject objectAt: self operands first content
%
category: 'actions'
method: PathConstructionOperation
processWith: aProcessor at: indexInteger
	aProcessor addPathConstructionOperation: self
%
category: 'actions'
method: PathPaintingOperation
processWith: aProcessor at: indexInteger
	aProcessor addPathPaintingOperation: self
%
category: 'testing'
method: PathPaintingOperation
isOnlyClipping
	^false
%
category: 'accessing'
classmethod: RestoreState
documentation
	^'Restore the graphics state by removing the most recently saved state from the stack and making it the current state'
%
classmethod: RestoreState
operatorName
	^#Q
%
category: 'actions'
method: RestoreState
processWith: aProcessor at: indexInteger
	aProcessor addRestoreState
%
category: 'accessing'
classmethod: SaveState
documentation
	^'Save the current graphics state on the graphics state stack'
%
classmethod: SaveState
end
	^RestoreState
%
classmethod: SaveState
operatorName
	^#q
%
category: 'actions'
method: SaveState
processWith: aProcessor at: indexInteger
	aProcessor addSaveStateAt: indexInteger
%
category: 'accessing'
classmethod: SetCap
documentation
	^'Set the line cap style in the graphics state'
%
classmethod: SetCap
operandTypes
	^#(#('lineCap' Number))
%
classmethod: SetCap
operatorName
	^#J
%
category: 'actions'
method: SetCap
modify: aProcessor with: aResource
	aProcessor graphicsState at: #lineCap put: self operands first
%
category: 'accessing'
classmethod: SetDash
documentation
	^'Set the line dash pattern in the graphics state'
%
classmethod: SetDash
operandTypes
	^#(#('dashArray' #Array) #('dashPhase' #Number))
%
classmethod: SetDash
operatorName
	^#d
%
category: 'actions'
method: SetDash
modify: aProcessor with: aResource
	aProcessor graphicsState
		at: #dashPattern
		put: ((PDF classAt: #Dash) array: self operands first offset: self operands last)
%
category: 'accessing'
classmethod: SetFlatness
documentation
	^'Set the flatness tolerance in the graphics state. flatness is a number in the range 0 to 100; a value of 0 shall specify the output deviceâs default flatness tolerance'
%
classmethod: SetFlatness
operandTypes
	^#(#('flatness' Integer))
%
classmethod: SetFlatness
operatorName
	^#i
%
category: 'actions'
method: SetFlatness
modify: aProcessor with: aResource
	aProcessor graphicsState at: #flatness put: self operands first
%
category: 'accessing'
classmethod: SetGraphicsState
documentation
	^'Set the specified parameters in the graphics state. dictName shall be the name of a graphics state parameter dictionary in the ExtGState subdictionary of the current resource dictionary'
%
classmethod: SetGraphicsState
operandTypes
	^#(#('dictName' Name))
%
classmethod: SetGraphicsState
operatorName
	^#gs
%
classmethod: SetGraphicsState
pdfVersion
	^Version pdf1_2
%
category: 'accessing'
method: SetGraphicsState
resourceIn: aProcessor
	^aProcessor resources ExtGState objectAt: self operands first content
%
category: 'actions'
method: SetGraphicsState
modify: aProcessor with: anExtGState
	| default specialBehaviors |
	default := GraphicsState new.
	specialBehaviors := Dictionary new.
	specialBehaviors at: #Type put: [:gs :value | ].
	specialBehaviors at: #OP put: [:gs :value |
		gs at: #overprintStroking put: value.
		(anExtGState content includesKey: #op) ifFalse: [
			gs at: #overprintNonstroking put: value]].
	specialBehaviors at: #Font put: [:gs :value |
		gs at: #textFont put: (aProcessor resources Font keyAtValue: value first).
		gs at: #textFontSize put: value last].
	specialBehaviors at: #BG2 put: [:gs :value |
		gs
			at: #blackGeneration
			put: (value = #Default
				ifTrue: [
				default blackGeneration]
				ifFalse: [
				value])].
	specialBehaviors at: #UCR2 put: [:gs :value |
		gs
			at: #undercolorRemoval
			put: (value = #Default
				ifTrue: [
				default undercolorRemoval]
				ifFalse: [
				value])].
	specialBehaviors at: #TR2 put: [:gs :value |
		gs
			at: #transfer
			put: (value = #Default
				ifTrue: [default transfer]
				ifFalse: [
				value])].
	anExtGState keysAndValuesDo: [:key :value |
		(anExtGState gsStateAttributeFor: key)
			ifNotNil: [:gsKey |
			aProcessor graphicsState at: gsKey put: value]
			ifNil: [
			(specialBehaviors at: key) value: aProcessor graphicsState value: value]]
%
category: 'accessing'
classmethod: SetJoin
documentation
	^'Set the line join style in the graphics state'
%
classmethod: SetJoin
operandTypes
	^#(#('lineJoin' Number))
%
classmethod: SetJoin
operatorName
	^#j
%
category: 'actions'
method: SetJoin
modify: aProcessor with: aResource
	aProcessor graphicsState at: #lineJoin put: self operands first
%
category: 'accessing'
classmethod: SetLineWidth
documentation
	^'Set the line width in the graphics state'
%
classmethod: SetLineWidth
operandTypes
	^#(#('lineWidth' Number))
%
classmethod: SetLineWidth
operatorName
	^#w
%
category: 'actions'
method: SetLineWidth
modify: aProcessor with: aResource
	aProcessor graphicsState at: #lineWidth put: self operands first
%
category: 'accessing'
classmethod: SetMiterLimit
documentation
	^'Set the miter limit in the graphics state'
%
classmethod: SetMiterLimit
operandTypes
	^#(#('miterLimit' Number))
%
classmethod: SetMiterLimit
operatorName
	^#M
%
category: 'actions'
method: SetMiterLimit
modify: aProcessor with: aResource
	aProcessor graphicsState at: #miterLimit put: self operands first
%
category: 'accessing'
classmethod: SetNonStrokingCMYK
documentation
	^'Same as K but used for nonstroking operations'
%
classmethod: SetNonStrokingCMYK
operandTypes
	^#(#('c' #Number) #('m' #Number) #('y' #Number) #('k' #Number))
%
classmethod: SetNonStrokingCMYK
operatorName
	^#k
%
category: 'actions'
method: SetNonStrokingCMYK
modify: aProcessor with: aResource
	aProcessor graphicsState at: #colorSpaceNonstroking put: (PDF classAt: #DeviceCMYK) new.
	aProcessor graphicsState at: #colorNonstroking put: self operands
%
category: 'accessing'
classmethod: SetNonStrokingColor
documentation
	^'Same as SC but used for nonstroking operations'
%
classmethod: SetNonStrokingColor
operandTypes
	^#(#('cn' Number))
%
classmethod: SetNonStrokingColor
operatorName
	^#sc
%
classmethod: SetNonStrokingColor
pdfVersion
	^Version pdf1_1
%
category: 'actions'
method: SetNonStrokingColor
modify: aProcessor with: aResource
	aProcessor graphicsState at: #colorNonstroking put: self operands
%
category: 'accessing'
classmethod: SetNonStrokingColorSpace
documentation
	^'Same as CS but used for nonstroking operations'
%
classmethod: SetNonStrokingColorSpace
operandTypes
	^#(#('name' #Name))
%
classmethod: SetNonStrokingColorSpace
operatorName
	^#cs
%
classmethod: SetNonStrokingColorSpace
pdfVersion
	^Version pdf1_1
%
category: 'accessing'
method: SetNonStrokingColorSpace
resourceIn: aPageGraphics
	(#(#DeviceGray #DeviceRGB #DeviceCMYK #Pattern) includes: self operands first asSmalltalkValue) ifFalse: [
		^aPageGraphics resources ColorSpace objectAt: self operands first asSmalltalkValue].
	^nil
%
category: 'actions'
method: SetNonStrokingColorSpace
modify: aProcessor with: aResource
	| colorspace |
	colorspace := (#(#DeviceGray #DeviceRGB #DeviceCMYK #Pattern) includes: self operands first content)
		ifTrue: [self operands first asType: (DirectType onSymbol: #ColourSpace)]
		ifFalse: [self resourceIn: aProcessor].
	aProcessor graphicsState at: #colorSpaceNonstroking put: colorspace
%
category: 'accessing'
classmethod: SetNonStrokingColorSpecial
documentation
	^'Same as SCN but used for nonstroking operations'
%
classmethod: SetNonStrokingColorSpecial
operandTypes
	^#(#('cn' Number) #('name' Number))
%
classmethod: SetNonStrokingColorSpecial
operatorName
	^#scn
%
classmethod: SetNonStrokingColorSpecial
pdfVersion
	^Version pdf1_2
%
category: 'actions'
method: SetNonStrokingColorSpecial
modify: aProcessor with: aResource
	aProcessor graphicsState at: #colorNonstroking put: self operands
%
category: 'accessing'
classmethod: SetNonStrokingGray
documentation
	^'Same as G but used for nonstroking operations'
%
classmethod: SetNonStrokingGray
operandTypes
	^#(#('gray' Number))
%
classmethod: SetNonStrokingGray
operatorName
	^#g
%
category: 'actions'
method: SetNonStrokingGray
modify: aProcessor with: aResource
	aProcessor graphicsState at: #colorSpaceNonstroking put: (PDF classAt: #DeviceGray) new.
	aProcessor graphicsState at: #colorNonstroking put: self operands
%
category: 'accessing'
classmethod: SetNonStrokingRGB
documentation
	^'Same as RG but used for nonstroking operations'
%
classmethod: SetNonStrokingRGB
operandTypes
	^#(#('r' Number) #('g' Number) #('b' Number))
%
classmethod: SetNonStrokingRGB
operatorName
	^#rg
%
category: 'actions'
method: SetNonStrokingRGB
modify: aProcessor with: aResource
	aProcessor graphicsState at: #colorSpaceNonstroking put: (PDF classAt: #DeviceRGB) new.
	aProcessor graphicsState at: #colorNonstroking put: self operands
%
category: 'accessing'
classmethod: SetRenderingIntent
documentation
	^'Set the colour rendering intent in the graphics state'
%
classmethod: SetRenderingIntent
operandTypes
	^#(#('intent' Name))
%
classmethod: SetRenderingIntent
operatorName
	^#ri
%
classmethod: SetRenderingIntent
pdfVersion
	^Version pdf1_1
%
category: 'actions'
method: SetRenderingIntent
modify: aProcessor with: aResource
	aProcessor graphicsState at: #renderingIntent put: self operands first
%
category: 'accessing'
classmethod: SetStrokingCMYK
documentation
	^'Set the stroking colour space to DeviceCMYK (or the DefaultCMYK colour space) and set the colour to use for stroking operations. Each operand shall be a number between 0.0 (zero concentration) and 1.0 (maximum concentration). The behaviour of this operator is affected by the overprint mode'
%
classmethod: SetStrokingCMYK
operandTypes
	^#(#('c' #Number) #('m' #Number) #('y' #Number) #('k' #Number))
%
classmethod: SetStrokingCMYK
operatorName
	^#K
%
category: 'actions'
method: SetStrokingCMYK
modify: aProcessor with: aResource
	aProcessor graphicsState at: #colorSpaceStroking put: (PDF classAt: #DeviceCMYK) new.
	aProcessor graphicsState at: #colorStroking put: self operands
%
category: 'accessing'
classmethod: SetStrokingColor
documentation
	^'Set the colour to use for stroking operations in a device, CIE-based (other than ICCBased), or Indexed colour space. The number of operands required and their interpretation depends on the current stroking colour space: For DeviceGray, CalGray, and Indexed colour spaces, one operand shall be required (n = 1). For DeviceRGB, CalRGB, and Lab colour spaces, three operands shall be required (n = 3). For DeviceCMYK, four operands shall be required (n = 4)'
%
classmethod: SetStrokingColor
operandTypes
	^#(#('cn' Number))
%
classmethod: SetStrokingColor
operatorName
	^#SC
%
classmethod: SetStrokingColor
pdfVersion
	^Version pdf1_1
%
category: 'actions'
method: SetStrokingColor
modify: aProcessor with: aResource
	aProcessor graphicsState at: #colorStroking put: self operands
%
category: 'accessing'
classmethod: SetStrokingColorSpace
documentation
	^'Set the current colour space to use for stroking operations. The operand name shall be a name object. If the colour space is one that can be specified by a name and no additional parameters (DeviceGray, DeviceRGB, DeviceCMYK, and certain cases of Pattern), the name may be specified directly. Otherwise, it shall be a name defined in the ColorSpace subdictionary of the current resource dictionary; the associated value shall be an array describing the colour space.

The names DeviceGray, DeviceRGB, DeviceCMYK, and Pattern always identify the corresponding colour spaces directly; they never refer to resources in the ColorSpace subdictionary.

The CS operator shall also set the current stroking colour to its initial value, which depends on the colour space: In a DeviceGray, DeviceRGB, CalGray, or CalRGB colour space, the initial colour shall have all components equal to 0.0. In a DeviceCMYK colour space, the initial colour shall be [0.0 0.0 0.0 1.0]. In a Lab or ICCBased colour space, the initial colour shall have all components equal to 0.0 unless that falls outside the intervals specified by the spaceâs Range entry, in which case the nearest valid value shall be substituted. In an Indexed colour space, the initial colour value shall be 0. In a Separation or DeviceN colour space, the initial tint value shall be 1.0 for all colorants. In a Pattern colour space, the initial colour shall be a pattern object that causes nothing to be painted.'
%
classmethod: SetStrokingColorSpace
operandTypes
	^#(#('name' #Name))
%
classmethod: SetStrokingColorSpace
operatorName
	^#CS
%
classmethod: SetStrokingColorSpace
pdfVersion
	^Version pdf1_1
%
category: 'accessing'
method: SetStrokingColorSpace
resourceIn: aPageGraphics
	(#(#DeviceGray #DeviceRGB #DeviceCMYK #Pattern) includes: self operands first content) ifFalse: [
		^aPageGraphics resources ColorSpace objectAt: self operands first content].
	^nil
%
category: 'actions'
method: SetStrokingColorSpace
modify: aProcessor with: aResource
	| colorspace |
	colorspace := (#(#DeviceGray #DeviceRGB #DeviceCMYK #Pattern) includes: self operands first content)
		ifTrue: [self operands first asType: (DirectType onSymbol: #ColourSpace)]
		ifFalse: [self resourceIn: aProcessor].
	aProcessor graphicsState at: #colorSpaceStroking put: colorspace
%
category: 'accessing'
classmethod: SetStrokingColorSpecial
documentation
	^'Same as SC but also supports Pattern, Separation, DeviceN and ICCBased colour spaces. If the current stroking colour space is a Separation, DeviceN, or ICCBased colour space, the operands c1â¦cn shall be numbers. The number of operands and their interpretation depends on the colour space.

If the current stroking colour space is a Pattern colour space, name shall be the name of an entry in the Pattern subdictionary of the current resource dictionary. For an uncoloured tiling pattern (PatternType = 1 and PaintType = 2), c1â¦cn shall be component values specifying a colour in the patternâs underlying colour space. For other types of patterns, these operands shall not be specified.'
%
classmethod: SetStrokingColorSpecial
operandTypes
	^#(#('cn' Number) #('name' Number))
%
classmethod: SetStrokingColorSpecial
operatorName
	^#SCN
%
classmethod: SetStrokingColorSpecial
pdfVersion
	^Version pdf1_2
%
category: 'accessing'
method: SetStrokingColorSpecial
resourceIn: aPageGraphics
	(aPageGraphics graphicsState colorSpaceStroking isKindOf: (PDF classAt: #Pattern)) ifTrue: [
		^aPageGraphics resources Pattern objectAt: self operands last content].
	^nil
%
category: 'actions'
method: SetStrokingColorSpecial
modify: aProcessor with: aResource
	(aProcessor graphicsState colorSpaceStroking isKindOf: (PDF classAt: #Pattern)) ifTrue: [
		^aProcessor graphicsState at: #colorStroking put: (self operands content allButLast: 1)].
	aProcessor graphicsState at: #colorStroking put: self operands
%
category: 'accessing'
classmethod: SetStrokingGray
documentation
	^'Set the stroking colour space to DeviceGray (or the DefaultGray colour space) and set the gray level to use for stroking operations. gray shall be a number between 0.0 (black) and 1.0 (white)'
%
classmethod: SetStrokingGray
operandTypes
	^#(#('gray' Number))
%
classmethod: SetStrokingGray
operatorName
	^#G
%
category: 'actions'
method: SetStrokingGray
modify: aProcessor with: aResource
	aProcessor graphicsState at: #colorSpaceStroking put: (PDF classAt: #DeviceGray) new.
	aProcessor graphicsState at: #colorStroking put: self operands
%
category: 'accessing'
classmethod: SetStrokingRGB
documentation
	^'Set the stroking colour space to DeviceRGB (or the DefaultRGB colour space) and set the colour to use for stroking operations. Each operand shall be a number between 0.0 (minimum intensity) and 1.0 (maximum intensity)'
%
classmethod: SetStrokingRGB
operandTypes
	^#(#('r' Number) #('g' Number) #('b' Number))
%
classmethod: SetStrokingRGB
operatorName
	^#RG
%
category: 'actions'
method: SetStrokingRGB
modify: aProcessor with: aResource
	aProcessor graphicsState at: #colorSpaceStroking put: (PDF classAt: #DeviceRGB) new.
	aProcessor graphicsState at: #colorStroking put: self operands
%
category: 'accessing'
classmethod: SetTextMatrix
documentation
	^'Set the text matrix, Tm, and the text line matrix, Tlm.
                     [ a b 0 ]
Tm := Tlm := [ c d 0 ]
                     [ e f 1 ]
The operands shall all be numbers, and the initial value for Tm and Tlm shall be the identity matrix, [1 0 0 1 0 0]. Although the operands specify a matrix, they shall be passed to Tm as six separate numbers, not as an array.

The matrix specified by the operands shall not be concatenated onto the current text matrix, but shall replace it'
%
classmethod: SetTextMatrix
operandTypes
	^#(#('a' Number) #('b' Number) #('c' Number) #('d' Number) #('e' Number) #('f' Number))
%
classmethod: SetTextMatrix
operatorName
	^#Tm
%
category: 'actions'
method: SetTextMatrix
modify: aProcessor with: aResource
	aProcessor graphicsState at: #textMatrix put: ((PDF classAt: #Matrix) on: self operands).
	aProcessor graphicsState at: #textLineMatrix put: aProcessor graphicsState textMatrix
%
category: 'accessing'
classmethod: SetType3GlyphWidth
documentation
	^'Set width information for the glyph and declare that the glyph description specifies both its shape and its colour.

NOTE	This operator name ends in the digit 0.

wx denotes the horizontal displacement in the glyph coordinate system; it shall be consistent with the corresponding width in the fontâs Widths array. wy shall be 0.

This operator shall only be permitted in a content stream appearing in a Type 3 fontâs CharProcs dictionary. It is typically used only if the glyph description executes operators to set the colour explicitly.'
%
classmethod: SetType3GlyphWidth
operandTypes
	^#(#('wx' Number) #('wy' Number))
%
classmethod: SetType3GlyphWidth
operatorName
	^#d0
%
category: 'accessing'
classmethod: SetType3GlyphWidthAndBoundingBox
documentation
	^'Set width and bounding box information for the glyph and declare that the glyph description specifies only shape, not colour.

NOTE	This operator name ends in the digit 1.

wx denotes the horizontal displacement in the glyph coordinate system; it shall be consistent with the corresponding width in the fontâs Widths array. wy shall be 0.

llx and lly denote the coordinates of the lower-left corner, and urx and ury denote the upper-right corner, of the glyph bounding box. The glyph bounding box is the smallest rectangle, oriented with the axes of the glyph coordinate system, that completely encloses all marks placed on the page as a result of executing the glyphâs description. The declared bounding box shall be correctâin other words, sufficiently large to enclose the entire glyph. If any marks fall outside this bounding box, the result is unpredictable.

A glyph description that begins with the d1 operator should not execute any operators that set the colour (or other colour-related parameters) in the graphics state; any use of such operators shall be ignored. The glyph description is executed solely to determine the glyphâs shape. Its colour shall be determined by the graphics state in effect each time this glyph is painted by a text-showing operator. For the same reason, the glyph description shall not include an image; however, an image mask is acceptable, since it merely defines a region of the page to be painted with the current colour.

This operator shall be used only in a content stream appearing in a Type 3 fontâs CharProcs dictionary'
%
classmethod: SetType3GlyphWidthAndBoundingBox
operandTypes
	^#(#('wx' Number) #('wy' Number) #('llx' Number) #('lly' Number) #('urx' Number) #('ury' Number))
%
classmethod: SetType3GlyphWidthAndBoundingBox
operatorName
	^#d1
%
category: 'accessing'
classmethod: ShowText
documentation
	^'Show a text string'
%
classmethod: ShowText
operandTypes
	^#(#('string' String))
%
classmethod: ShowText
operatorName
	^#Tj
%
category: 'accessing'
classmethod: ShowTextOnNextLine
documentation
	^'Move to the next line and show a text string. This operator shall have the same effect as the code
	T*
	string Tj'
%
classmethod: ShowTextOnNextLine
operandTypes
	^#(#('string' String))
%
classmethod: ShowTextOnNextLine
operatorName
	^#''''
%
category: 'actions'
method: ShowTextOnNextLine
modify: aProcessor with: aResource
	aProcessor graphicsState nextLineBy: 0 @ aProcessor graphicsState leading content negated.
	super modify: aProcessor with: aResource
%
category: 'accessing'
classmethod: ShowTextOnNextLineWithSpacing
documentation
	^'Move to the next line and show a text string, using aw as the word spacing and ac as the character spacing (setting the corresponding parameters in the text state). aw and ac shall be numbers expressed in unscaled text space units. This operator shall have the same effect as this code:
	aw Tw
	ac Tc
	string '''
%
classmethod: ShowTextOnNextLineWithSpacing
operandTypes
	^#(#('aw' Number) #('ac' Number) #('string' String))
%
classmethod: ShowTextOnNextLineWithSpacing
operatorName
	^#'"'
%
category: 'accessing'
method: ShowTextOnNextLineWithSpacing
stringOperand
	^self operands last
%
category: 'actions'
method: ShowTextOnNextLineWithSpacing
modify: aProcessor with: aResource
	aProcessor graphicsState at: #wordSpacing put: self operands first.
	aProcessor graphicsState at: #characterSpacing put: (self operands at: 2).
	aProcessor graphicsState nextLineBy: 0 @ aProcessor graphicsState leading content negated.
	super modify: aProcessor with: aResource
%
category: 'accessing'
classmethod: ShowTextPositioned
documentation
	^'Show one or more text strings, allowing individual glyph positioning. Each element of array shall be either a string or a number. If the element is a string, this operator shall show the string. If it is a number, the operator shall adjust the text position by that amount; that is, it shall translate the text matrix, Tm. The number shall be expressed in thousandths of a unit of text space. This amount shall be subtracted from the current horizontal or vertical coordinate, depending on the writing mode. In the default coordinate system, a positive adjustment has the effect of moving the next glyph painted either to the left or down by the given amount'
%
classmethod: ShowTextPositioned
operandTypes
	^#(#('array' #Array))
%
classmethod: ShowTextPositioned
operatorName
	^#TJ
%
category: 'accessing'
method: ShowTextPositioned
gaps
	"<Array of: Number>
	the adjustments in font space"

	^self stringsAndGaps reject: #isString
%
method: ShowTextPositioned
string
	| wst |
	wst := String new writeStream.
	(self stringsAndGaps select: #isString) do: [:s | wst nextPutAll: s].
	^wst contents
%
method: ShowTextPositioned
stringBytes
	| wst |
	wst := ByteArray new writeStream.
	(self stringOperand content select: [:arg | arg content isSequenceable]) do: [:s |
		wst nextPutAll: s content].
	^wst contents
%
method: ShowTextPositioned
stringsAndGaps
	"<Array of: (String | Number)>
	the string parts and adjustments as Smalltalk objects"

	^self stringOperand content collect: #asSmalltalkValue
%
method: ShowTextPositioned
widthInFont: aFont inState: aGraphicsState
	| rst width bytes |
	width := 0.
	rst := self stringOperand content readStream.
	bytes := #[].
	[rst atEnd] whileFalse: [
		| pdfStringOrNumber |
		pdfStringOrNumber := rst next.
		bytes := pdfStringOrNumber content isSequenceable
			ifTrue: [
			bytes , pdfStringOrNumber content]
			ifFalse: [
			| stringWidth adjustment |
			stringWidth := aGraphicsState widthOfString: (PDF String content: bytes) inFont: aFont.
			adjustment := aGraphicsState widthOfAdjustment: pdfStringOrNumber asSmalltalkValue.
			width := width + (stringWidth + adjustment).
			#[]]].
	bytes notEmpty ifTrue: [
		width := width + (aGraphicsState widthOfString: (PDF String content: bytes) inFont: aFont)].
	^width
%
category: 'accessing'
classmethod: Stroke
documentation
	^'Stroke the path'
%
classmethod: Stroke
operatorName
	^#S
%
category: 'accessing'
classmethod: StrokeClosed
documentation
	^'Close and stroke the path. This operator shall have the same effect as the sequence h S'
%
classmethod: StrokeClosed
operatorName
	^#s
%
category: 'accessing'
classmethod: TextFont
documentation
	^'Set the text font, Tf, to font and the text font size, Tfs, to size. font shall be the name of a font resource in the Font subdictionary of the current resource dictionary; size shall be a number representing a scale factor. There is no initial value for either font or size; they shall be specified explicitly by using Tf before any text is shown'
%
classmethod: TextFont
operandTypes
	^#(#('font' Name) #('size' Number))
%
classmethod: TextFont
operatorName
	^#Tf
%
category: 'accessing'
method: TextFont
resourceIn: aPageGraphics
	^aPageGraphics resources Font objectAt: self operands first content
%
category: 'actions'
method: TextFont
modify: aProcessor with: aResource
	aProcessor graphicsState at: #textFont put: self operands first.
	aProcessor graphicsState at: #textFontSize put: self operands last.
	aProcessor currentFont: aResource
%
category: 'actions'
method: TextPositioningOperation
processWith: aProcessor at: indexInteger
	aProcessor addTextPositioningOperation: self
%
category: 'accessing'
classmethod: TextRenderingMode
documentation
	^'Set the text rendering mode, Tmode, to render. Initial value: 0'
%
classmethod: TextRenderingMode
operandTypes
	^#(#('render' Integer))
%
classmethod: TextRenderingMode
operatorName
	^#Tr
%
category: 'actions'
method: TextRenderingMode
modify: aProcessor with: aResource
	aProcessor graphicsState at: #textRenderingMode put: self operands first
%
category: 'accessing'
classmethod: TextRise
documentation
	^'Set the text rise, Trise, to rise, which shall be a number expressed in unscaled text space units. Initial value: 0'
%
classmethod: TextRise
operandTypes
	^#(#('rise' Number))
%
classmethod: TextRise
operatorName
	^#Ts
%
category: 'actions'
method: TextRise
modify: aProcessor with: aResource
	aProcessor graphicsState at: #textRise put: self operands first
%
category: 'accessing'
method: TextShowingOperation
string
	"<String>"

	^self stringOperand asSmalltalkValue
%
method: TextShowingOperation
stringBytes
	"<ByteArray>"

	^self stringOperand content
%
method: TextShowingOperation
stringOperand
	"<PDFString>"

	^self operands first
%
method: TextShowingOperation
widthInFont: aFont inState: aGraphicsState
	"<Number>
	in text space"

	^aGraphicsState widthOfString: self stringOperand inFont: aFont
%
category: 'actions'
method: TextShowingOperation
modify: aProcessor with: aResource
	"change the graphics state with aResource"

	aProcessor graphicsState advanceTextMatrixBy: (self
		widthInFont: aProcessor currentFont
		inState: aProcessor graphicsState)
%
method: TextShowingOperation
processWith: aProcessor at: indexInteger
	aProcessor addTextShowingOperation: self
%
category: 'actions'
method: TextStateOperation
processWith: aProcessor at: indexInteger
	aProcessor addTextStateOperation: self
%
category: 'accessing'
classmethod: WordSpacing
documentation
	^'Set the word spacing, Tw, to wordSpace, which shall be a number expressed in unscaled text space units. Word spacing shall be used by the Tj, TJ, and '' operators. Initial value: 0'
%
classmethod: WordSpacing
operandTypes
	^#(#('wordSpace' Number))
%
classmethod: WordSpacing
operatorName
	^#Tw
%
category: 'actions'
method: WordSpacing
modify: aProcessor with: aResource
	aProcessor graphicsState at: #wordSpacing put: self operands first
%
category: 'actions'
method: XObjectOperation
processWith: aProcessor at: indexInteger
	aProcessor addXObjectOperation: self
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk XObjects'.
	dict at: #comment put: 'PDF External Objects as defined in PDF 32000_2008.pdf, section 8.8, pp. 201.

An external object (commonly called an XObject) is a graphics object whose contents are defined by a self-contained stream, 
separate from the content stream in which it is used. 
There are three types of external objects:
	â¢	An image XObject represents a sampled visual image such as a photograph.
	â¢	A form XObject is a self-contained description of an arbitrary sequence of graphics objects.
	â¢	A PostScript XObject contains a fragment of code expressed in the PostScript page description language. 
		PostScript XObjects should not be used.

Two further categories of external objects, group XObjects and reference XObjects (both PDF 1.4), 
are actually specialized types of form XObjects with additional properties.

Any XObject can be painted as part of another content stream by means of the Do operator. 
This operator applies to any type of XObjectâimage, form, or PostScript. 
The syntax is the same in all cases, although details of the operatorâs behaviour differ depending on the type.
'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk XObjects'.
	dict at: #storeVersion put: '2.3.4.0'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class XObject
DoIt
PDFStream
	subclass: 'XObject'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	XObject category: 'PDFtalk XObjects'.
	XObject comment: 'PDF External Objects as defined in PDF 32000_2008.pdf, section 8.8, pp. 201.

An external object (commonly called an XObject) is a graphics object whose contents are defined by a self-contained stream, 
separate from the content stream in which it is used. 
There are three types of external objects:
	â¢	An image XObject represents a sampled visual image such as a photograph.
	â¢	A form XObject is a self-contained description of an arbitrary sequence of graphics objects.
	â¢	A PostScript XObject contains a fragment of code expressed in the PostScript page description language. 
		PostScript XObjects should not be used.

Two further categories of external objects, group XObjects and reference XObjects (both PDF 1.4), 
are actually specialized types of form XObjects with additional properties.

Any XObject can be painted as part of another content stream by means of the Do operator. 
This operator applies to any type of XObjectâimage, form, or PostScript. 
The syntax is the same in all cases, although details of the operatorâs behaviour differ depending on the type.'.
	XObject namespacePath: #(#PDFtalk).
%
# Define class PostScriptXObject
DoIt
XObject
	subclass: 'PostScriptXObject'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PostScriptXObject category: 'PDFtalk XObjects'.
	PostScriptXObject comment: 'PDF PostScript XObjects as defined in PDF 32000_2008.pdf, section 8.8.2, pp. 202.

Beginning with PDF 1.1, a content stream may include PostScript language fragments. 
These fragments may be used only when printing to a PostScript output device; 
they shall have no effect either when viewing the document on-screen or when printing it to a non-PostScript device. 
In addition, conforming readers may not be able to interpret the PostScript fragments. 
Hence, this capability should be used with extreme caution and only if there is no other way to achieve the same result. 
Inappropriate use of PostScript XObjects can cause PDF files to print incorrectly.

A PostScript XObject is an XObject stream whose Subtype entry has the value PS.

If a PDF content stream is translated by a conforming reader into the PostScript language, 
any Do operation that references a PostScript XObject may be replaced by the contents of the XObject stream itself. 
The stream shall be copied without interpretation. 
The PostScript fragment may use Type 1 and TrueType fonts listed in the Font subdictionary of the current resource dictionary, 
accessing them by their BaseFont names using the PostScript findfont operator. 
The fragment shall not use other types of fonts listed in the Font subdictionary. 
It should not reference the PostScript definitions corresponding to PDF procedure sets, which are subject to change.'.
	PostScriptXObject namespacePath: #(#PDFtalk).
%
# Define class GroupAttributes
DoIt
PDFDictionary
	subclass: 'GroupAttributes'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	GroupAttributes category: 'PDFtalk XObjects'.
	GroupAttributes comment: 'PDF Group XObjects as defined in PDF 32000_2008.pdf, section 8.10.3, pp. 220.

Every group XObject shall have a group subtype (specified by the S entry in the group attributes dictionary) that determines the format and meaning of the dictionaryâs remaining entries. This specification only defines one subtype, a transparency group XObject (subtype Transparency) representing a transparency group for use in the transparent imaging model.'.
	GroupAttributes namespacePath: #(#PDFtalk).
%
# Define class SoftMask
DoIt
PDFDictionary
	subclass: 'SoftMask'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SoftMask category: 'PDFtalk XObjects'.
	SoftMask comment: 'PDF Image Dictionaries as defined in PDF 32000_2008.pdf, section 11.6.5.2, pp. 346.

The most common way of defining a soft mask is with a soft-mask dictionary specified as the current soft mask in the graphics state.

The mask values shall be derived from those of a transparency group, using one of the two methods described in "Deriving a Soft Mask from Group Alpha," and "Deriving a Soft Mask from Group Luminosity."
The group shall be defined by a transparency group XObject designated by the G entry in the soft-mask dictionary.
The S (subtype) entry shall specify which of the two derivation methods to use:
	- If the subtype is Alpha, the transparency group XObject G shall be evaluated to compute a group alpha only.
The colours of the constituent objects shall be ignored and the colour compositing computations shall not be performed.
The transfer function TR shall then be applied to the computed group alpha to produce the mask values.
Outside the bounding box of the transparency group, the mask value shall be the result of applying the transfer function to the input value 0.0.
	- If the subtype is Luminosity, the transparency group XObject G shall be composited with a fully opaque backdrop whose colour is everywhere defined by the soft-mask dictionaryâs BC entry.
The computed result colour shall then be converted to a single-component luminosity value, and the transfer function TR shall be applied to this luminosity to produce the mask values. 
Outside the transparency groupâs bounding box, the mask value shall be derived by transforming the BC colour to luminosity and applying the transfer function to the result.

The maskâs coordinate system shall be defined by concatenating the transformation matrix specified by the Matrix entry in the transparency groupâs form dictionary with the current transformation matrix at the moment the soft mask is established in the graphics state with the gs operator.

In a transparency group XObject that defines a soft mask, spot colour components shall never be available, even if they are available in the group or page on which the soft mask is used.
If the group XObjectâs content stream specifies a Separation or DeviceN colour space that uses spot colour components, the alternate colour space shall be substituted
'.
	SoftMask namespacePath: #(#PDFtalk).
%
# Define class FormXObject
DoIt
XObject
	subclass: 'FormXObject'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FormXObject category: 'PDFtalk XObjects'.
	FormXObject comment: 'PDF Form XObjects as defined in PDF 32000_2008.pdf, section 8.10, pp. 217.

A form XObject is a PDF content stream that is a self-contained description of any sequence of graphics objects (including path objects, text objects, and sampled images). 
A form XObject may be painted multiple timesâeither on several pages or at several locations on the same page
âand produces the same results each time, subject only to the graphics state at the time it is invoked. 
Not only is this shared definition economical to represent in the PDF file, 
but under suitable circumstances the conforming reader can optimize execution by caching the results of rendering the form XObject for repeated reuse.

NOTE 1		The term form also refers to a completely different kind of object, an interactive form (sometimes called an AcroForm). 
			Whereas the form XObjects described in this sub-clause correspond to the notion of forms in the PostScript language, 
			interactive forms are the PDF equivalent of the familiar paper instrument. 
			Any unqualified use of the word form is understood to refer to an interactive form; 
			the type of form described here is always referred to explicitly as a form XObject.'.
	FormXObject namespacePath: #(#PDFtalk).
%
# Define class Group
DoIt
FormXObject
	subclass: 'Group'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Group category: 'PDFtalk XObjects'.
	Group comment: 'PDF Group XObjects as defined in PDF 32000_2008.pdf, section 8.10.3, pp. 220.

A group XObject (PDF 1.4) is a special type of form XObject that can be used to group graphical elements together as a unit for various purposes. It shall be distinguished by the presence of the optional Group entry in the form dictionary. The value of this entry shall be a subsidiary group attributes dictionary describing the properties of the group.
Every group XObject shall have a group subtype (specified by the S entry in the group attributes dictionary) that determines the format and meaning of the dictionaryâs remaining entries. This specification only defines one subtype, a transparency group XObject (subtype Transparency) representing a transparency group for use in the transparent imaging model.
'.
	Group namespacePath: #(#PDFtalk).
%
# Define class TransparencyGroup
DoIt
Group
	subclass: 'TransparencyGroup'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TransparencyGroup category: 'PDFtalk XObjects'.
	TransparencyGroup comment: 'PDF Transparency Group XObjects as defined in PDF 32000_2008.pdf, section 11.6.6, pp. 349.

A transparency group is represented in PDF as a special type of group XObject called a transparency group XObject. A group XObject is in turn a type of form XObject, distinguished by the presence of a Group entry in its form dictionary. The value of this entry is a subsidiary group attributes dictionary defining the properties of the group. The format and meaning of the dictionaryâs contents shall be determined by its group subtype, which is specified by the dictionaryâs S entry.'.
	TransparencyGroup namespacePath: #(#PDFtalk).
%
# Define class TransparencyGroupAttributes
DoIt
GroupAttributes
	subclass: 'TransparencyGroupAttributes'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TransparencyGroupAttributes category: 'PDFtalk XObjects'.
	TransparencyGroupAttributes comment: 'PDF transparency group attributes as defined in PDF 32000_2008.pdf pp. 349.

A transparency group is represented in PDF as a special type of group XObject called a transparency group XObject. A group XObject is in turn a type of form XObject, distinguished by the presence of a Group entry in its form dictionary. The value of this entry is a subsidiary group attributes dictionary defining the properties of the group. The format and meaning of the dictionaryâs contents shall be determined by its group subtype, which is specified by the dictionaryâs S entry.
A page object may also have a Group entry, whose value is a group attributes dictionary specifying the attributes of the page group. Some of the dictionary entries are interpreted slightly differently for a page group than for a transparency group XObject; see their descriptions in the table for details.'.
	TransparencyGroupAttributes namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
classmethod: FormXObject
pdfTypeDefinition

	^PDFTypeDefinition
		name: #FormXObject
		supertype: #XObject
		section: '8.10'
		documentation: 'A form XObject is a PDF content stream that is a self-contained description of any sequence of graphics objects (including path objects, text objects, and sampled images). 
A form XObject may be painted multiple timesâeither on several pages or at several locations on the same page
âand produces the same results each time, subject only to the graphics state at the time it is invoked. 
Not only is this shared definition economical to represent in the PDF file, 
but under suitable circumstances the conforming reader can optimize execution by caching the results of rendering the form XObject for repeated reuse.

NOTE 1		The term form also refers to a completely different kind of object, an interactive form (sometimes called an AcroForm). 
			Whereas the form XObjects described in this sub-clause correspond to the notion of forms in the PostScript language, 
			interactive forms are the PDF equivalent of the familiar paper instrument. 
			Any unqualified use of the word form is understood to refer to an interactive form; 
			the type of form described here is always referred to explicitly as a form XObject.'
%
classmethod: FormXObject
resourcePrefix
	^'Fm'
%
classmethod: FormXObject
subtype
	^#Form
%
category: 'testing'
classmethod: FormXObject
isClassForStream: aStream
	self == (PDF classAt: #FormXObject) ifFalse: [
		^super isClassForStream: aStream].
	^(super isClassForStream: aStream) and: [
	(aStream hasKey: #Group) not]
%
category: 'accessing'
method: FormXObject
contentGraphics
	"<ContentGraphics>"

	^ContentGraphics on: self
%
method: FormXObject
contentString
	"<String>
	all decoded content"

	^self internal
%
category: 'accessing entries'
method: FormXObject
BBox
	<type: #Rectangle>
	<required>
	<attribute: 2 documentation: 'An array of four numbers in the form coordinate system, 
giving the coordinates of the left, bottom, right, and top edges, respectively, of the form XObjectâs bounding box. 
These boundaries shall be used to clip the form XObject and to determine its size for caching.'>
	^self objectAt: #BBox
%
method: FormXObject
FormType
	<type: #Integer>
	<attribute: 1 documentation: 'A code identifying the type of form XObject that this dictionary describes. 
The only valid value is 1.'>
	^self objectAt: #FormType ifAbsent: [1 asPDF]
%
method: FormXObject
Group
	<type: #GroupAttributes>
	<version: 1 dot: 4>
	<attribute: 5 documentation: 'A group attributes dictionary indicating that the contents of the form XObject shall be treated 
as a group and specifying the attributes of that group.

If a Ref entry is present, the group attributes shall also apply to the external page imported by that entry, 
which allows such an imported page to be treated as a group without further modification.'>
	^self objectAt: #Group
%
method: FormXObject
LastModified
	<type: #Date>
	<requiredIf: #PieceInfo>
	<version: 1 dot: 3>
	<attribute: 9 documentation: 'The date and time when the form XObjectâs contents were most recently modified. 
If a page-piece dictionary (PieceInfo) is present, the modification date shall be used to ascertain 
which of the application data dictionaries it contains correspond to the current content of the form.'>
	^self objectAt: #LastModified ifAbsent: [nil]
%
method: FormXObject
Matrix
	<type: #Matrix>
	<attribute: 3 documentation: 'An array of six numbers specifying the form matrix, which maps form space into user space.'>
	^self objectAt: #Matrix ifAbsent: [(PDF classAt: #Matrix) identity]
%
method: FormXObject
Metadata
	<type: #Stream>
	<version: 1 dot: 4>
	<attribute: 7 documentation: 'A metadata stream containing metadata for the form XObject.'>
	^self objectAt: #Metadata
%
method: FormXObject
Name
	<type: #Name>
	<attribute: 14 documentation: '(Required in PDF 1.0; optional otherwise) 
The name by which this form XObject is referenced in the XObject subdictionary of the current resource dictionary.
NOTE	This entry is obsolescent and its use is no longer recommended.'>
	^self objectAt: #Name
%
method: FormXObject
OC
	<type: #Dictionary>
	<version: 1 dot: 5>
	<attribute: 13 documentation: 'An optional content group or optional content membership dictionary specifying the optional content properties for the form XObject. 
Before the form is processed, its visibility shall be determined based on this entry. 
If it is determined to be invisible, the entire form shall be skipped, as if there were no Do operator to invoke it.'>
	^self objectAt: #OC ifAbsent: [PDF Dictionary empty]
%
method: FormXObject
OPI
	<type: #Dictionary>
	<version: 1 dot: 2>
	<attribute: 12 documentation: 'An OPI version dictionary for the form XObject.'>
	^self objectAt: #OPI ifAbsent: [PDF Dictionary empty]
%
method: FormXObject
PieceInfo
	<typeDictionaryOf: #PieceInfo>
	<version: 1 dot: 3>
	<attribute: 8 documentation: 'A page-piece dictionary associated with the form XObject.'>
	^self objectAt: #PieceInfo
%
method: FormXObject
Ref
	<type: #Dictionary>
	<version: 1 dot: 4>
	<attribute: 6 documentation: 'A reference dictionary identifying a page to be imported from another PDF file, 
and for which the form XObject serves as a proxy.'>
	^self objectAt: #Ref ifAbsent: [PDF Dictionary empty]
%
method: FormXObject
Resources
	<type: #Resources>
	<version: 1 dot: 2>
	<attribute: 4 documentation: '(Optional but strongly recommended) 
A dictionary specifying any resources (such as fonts and images) required by the form XObject.

In a PDF whose version is 1.1 and earlier, all named resources used in the form XObject 
shall be included in the resource dictionary of each page object on which the form XObject appears, 
regardless of whether they also appear in the resource dictionary of the form XObject. 
These resources should also be specified in the form XObjectâs resource dictionary as well, to determine which resources are used inside the form XObject. 
If a resource is included in both dictionaries, it shall have the same name in both locations.

In PDF 1.2 and later versions, form XObjects may be independent of the content streams in which they appear, and this is strongly recommended although not required. 
In an independent form XObject, the resource dictionary of the form XObject is required and shall contain all named resources used by the form XObject. 
These resources shall not be promoted to the outer content streamâs resource dictionary, although that streamâs resource dictionary refers to the form XObject.'>
	^self objectAt: #Resources ifAbsent: [(PDF classAt: #Resources) new]
%
method: FormXObject
StructParent
	<type: #Integer>
	<version: 1 dot: 3>
	<attribute: 10 documentation: '(Required if the form XObject is a structural content item)
The integer key of the form XObjectâs entry in the structural parent tree.'>
	^self objectAt: #StructParent
%
method: FormXObject
StructParents
	<type: #Integer>
	<version: 1 dot: 3>
	<attribute: 11 documentation: '(Required if the form XObject contains marked-content sequences that are structural content items) 
The integer key of the form XObjectâs entry in the structural parent tree.

At most one of the entries StructParent or StructParents shall bepresent. 
A form XObject shall be either a content item in its entirety or a container for marked-content sequences that are content items, but not both.'>
	^self objectAt: #StructParents
%
category: 'accessing'
classmethod: Group
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Group
		supertype: #XObject
		version: #(1 4)
		section: '8.10.3'
		documentation: 'A group XObject is a special type of form XObject that can be used to group graphical elements together as a unit for various purposes.
It shall be distinguished by the presence of the optional Group entry in the form dictionary.
The value of this entry shall be a subsidiary group attributes dictionary describing the properties of the group.

Every group XObject shall have a group subtype (specified by the S entry in the group attributes dictionary) that determines the format and meaning of the dictionaryâs remaining entries.
This specification only defines one subtype, a transparency group XObject (subtype Transparency) representing a transparency group for use in the transparent imaging model.'
%
category: 'testing'
classmethod: Group
isClassForStream: aStream
	^(super isClassForStream: aStream) and: [
	aStream hasKey: #Group]
%
category: 'accessing entries'
method: Group
Group
	<type: #GroupAttributes>
	<required>
	<version: 1 dot: 4>
	<attribute: 1 documentation: 'A group attributes dictionary indicating that the contents of the form XObject shall be treated 
as a group and specifying the attributes of that group.

If a Ref entry is present, the group attributes shall also apply to the external page imported by that entry, 
which allows such an imported page to be treated as a group without further modification.'>
	^self objectAt: #Group
%
category: 'accessing'
classmethod: GroupAttributes
pdfTypeDefinition
	^PDFTypeDefinition
		name: #GroupAttributes
		supertype: #Dictionary
		version: #(1 4)
		section: '8.10.3'
		documentation: 'Every group XObject shall have a group subtype (specified by the S entry in the group attributes dictionary) that determines the format and meaning of the dictionaryâs remaining entries. 
This specification only defines one subtype, a transparency group XObject (subtype Transparency) representing a transparency group for use in the transparent imaging model.'
%
classmethod: GroupAttributes
type
	^#Group
%
category: 'accessing entries'
method: GroupAttributes
S
	<type: #Name>
	<attribute: 2 documentation: 'The group subtype, which identifies the type of group whose attributes this dictionary describes and determines the format and meaning of the dictionaryâs remaining entries. The only group subtype defined is Transparency'>
	<required>
	^self objectAt: #S
%
method: GroupAttributes
Type
	<type: #Name>
	<attribute: 1 documentation: 'The type of PDF object that this dictionary describes.'>
	^self objectAt: #Type ifAbsent: [#Group asPDF]
%
category: 'accessing'
classmethod: PostScriptXObject
pdfTypeDefinition
	^PDFTypeDefinition
		name: #PostScriptXObject
		supertype: #XObject
		version: #(1 1)
		section: '8.8.2'
		documentation: 'Beginning with PDF 1.1, a content stream may include PostScript language fragments. 
These fragments may be used only when printing to a PostScript output device; 
they shall have no effect either when viewing the document on-screen or when printing it to a non-PostScript device. 
In addition, conforming readers may not be able to interpret the PostScript fragments. 
Hence, this capability should be used with extreme caution and only if there is no other way to achieve the same result. 
Inappropriate use of PostScript XObjects can cause PDF files to print incorrectly.

A PostScript XObject is an XObject stream whose Subtype entry has the value PS.

If a PDF content stream is translated by a conforming reader into the PostScript language, 
any Do operation that references a PostScript XObject may be replaced by the contents of the XObject stream itself. 
The stream shall be copied without interpretation. 
The PostScript fragment may use Type 1 and TrueType fonts listed in the Font subdictionary of the current resource dictionary, 
accessing them by their BaseFont names using the PostScript findfont operator. 
The fragment shall not use other types of fonts listed in the Font subdictionary. 
It should not reference the PostScript definitions corresponding to PDF procedure sets, which are subject to change.'
%
classmethod: PostScriptXObject
resourcePrefix
	^'Po'
%
classmethod: PostScriptXObject
subtype
	^#PS
%
category: 'accessing entries'
method: PostScriptXObject
Level1
	<type: #Stream>
	<attribute: 1 documentation: 'A stream whose contents shall be used in place of the PostScript XObjectâs stream 
when the target PostScript interpreter is known to support only LanguageLevel 1.'>
	^self objectAt: #Level1
%
category: 'accessing'
classmethod: SoftMask
pdfTypeDefinition

	^PDFTypeDefinition
		name: #SoftMask
		supertype: #Dictionary
		section: '11.6.5.2'
		documentation: 'The most common way of defining a soft mask is with a soft-mask dictionary specified as the current soft mask in the graphics state.

The mask values shall be derived from those of a transparency group, using one of the two methods described in "Deriving a Soft Mask from Group Alpha," and "Deriving a Soft Mask from Group Luminosity."
The group shall be defined by a transparency group XObject designated by the G entry in the soft-mask dictionary.
The S (subtype) entry shall specify which of the two derivation methods to use:
	- If the subtype is Alpha, the transparency group XObject G shall be evaluated to compute a group alpha only.
The colours of the constituent objects shall be ignored and the colour compositing computations shall not be performed.
The transfer function TR shall then be applied to the computed group alpha to produce the mask values.
Outside the bounding box of the transparency group, the mask value shall be the result of applying the transfer function to the input value 0.0.
	- If the subtype is Luminosity, the transparency group XObject G shall be composited with a fully opaque backdrop whose colour is everywhere defined by the soft-mask dictionaryâs BC entry.
The computed result colour shall then be converted to a single-component luminosity value, and the transfer function TR shall be applied to this luminosity to produce the mask values. 
Outside the transparency groupâs bounding box, the mask value shall be derived by transforming the BC colour to luminosity and applying the transfer function to the result.

The maskâs coordinate system shall be defined by concatenating the transformation matrix specified by the Matrix entry in the transparency groupâs form dictionary with the current transformation matrix at the moment the soft mask is established in the graphics state with the gs operator.

In a transparency group XObject that defines a soft mask, spot colour components shall never be available, even if they are available in the group or page on which the soft mask is used.
If the group XObjectâs content stream specifies a Separation or DeviceN colour space that uses spot colour components, the alternate colour space shall be substituted'
%
category: 'accessing entries'
method: SoftMask
BC
	<typeArrayOf: #Number>
	<attribute: 4 documentation: 'An array of component values specifying the colour to be used as the backdrop against which to composite the transparency group XObject G.
This entry shall be consulted only if the subtype S is Luminosity.
The array shall consist of n numbers, where n is the number of components in the colour space specified by the CS entry in the group attributes dictionary. Default value: the colour spaceâs initial value, representing black'>
	^self objectAt: #BC ifAbsent: [self G Group CS initialColourValues]
%
method: SoftMask
G
	<type: #TransparencyGroup>
	<required>
	<attribute: 3 documentation: 'A transparency group XObject to be used as the source of alpha or colour values for deriving the mask.
If the subtype S is Luminosity, the group attributes dictionary shall contain a CS entry defining the colour space in which the compositing computation is to be performed'>
	^self objectAt: #G
%
method: SoftMask
S
	<type: #Name>
	<required>
	<attribute: 2 documentation: 'A subtype specifying the method to be used in deriving the mask values from the transparency group specified by the G entry:
	Alpha		The groupâs computed alpha shall be used, disregarding its colour
	Luminosity	The groupâs computed colour shall be converted to a single-component luminosity value'>
	^self objectAt: #S
%
method: SoftMask
TR
	<type: #Function>
	<typeName: #Identity>
	<attribute: 5 documentation: 'A function object specifying the transfer function to be used in deriving the mask values.
The function shall accept one input, the computed group alpha or luminosity (depending on the value of the subtype S), and shall return one output, the resulting mask value.
The input shall be in the range 0.0 to 1.0.
The computed output shall be in the range 0.0 to 1.0; if it falls outside this range, it shall be forced to the nearest valid value.
The name Identity may be specified in place of a function object to designate the identity function'>
	^self objectAt: #TR ifAbsent: [#Identity asPDF]
%
method: SoftMask
Type
	<type: #Name>
	<attribute: 1 documentation: 'The type of PDF object that this dictionary describes.'>
	^self objectAt: #Type ifAbsent: [#Mask asPDF]
%
category: 'accessing'
classmethod: TransparencyGroup
pdfTypeDefinition
	^PDFTypeDefinition
		name: #TransparencyGroup
		supertype: #Group
		version: #(1 4)
		section: '11.6.6'
		documentation: 'A transparency group is represented in PDF as a special type of group XObject called a transparency group XObject. A group XObject is in turn a type of form XObject, distinguished by the presence of a Group entry in its form dictionary. The value of this entry is a subsidiary group attributes dictionary defining the properties of the group. The format and meaning of the dictionaryâs contents shall be determined by its group subtype, which is specified by the dictionaryâs S entry.'
%
category: 'testing'
classmethod: TransparencyGroup
isClassForStream: aStream
	^(super isClassForStream: aStream) and: [
	((aStream at: #Group) content at: #S) asPDF = #Transparency asPDF]
%
category: 'accessing'
classmethod: TransparencyGroupAttributes
pdfTypeDefinition
	^PDFTypeDefinition
		name: #TransparencyGroupAttributes
		supertype: #GroupAttributes
		version: #(1 4)
		section: '11.6.6'
		documentation: 'A transparency group is represented in PDF as a special type of group XObject called a transparency group XObject. A group XObject is in turn a type of form XObject, distinguished by the presence of a Group entry in its form dictionary. The value of this entry is a subsidiary group attributes dictionary defining the properties of the group. The format and meaning of the dictionaryâs contents shall be determined by its group subtype, which is specified by the dictionaryâs S entry.
A page object may also have a Group entry, whose value is a group attributes dictionary specifying the attributes of the page group. Some of the dictionary entries are interpreted slightly differently for a page group than for a transparency group XObject; see their descriptions in the table for details.'
%
category: 'instance creation'
classmethod: TransparencyGroupAttributes
empty
	| inst |
	inst := self new.
	inst at: #S put: #Transparency.
	^inst
%
category: 'testing'
classmethod: TransparencyGroupAttributes
isClassForDictionary: aDictionary
	^(aDictionary hasKey: #S) and: [
	(aDictionary at: #S) asPDF = #Transparency asPDF]
%
category: 'accessing entries'
method: TransparencyGroupAttributes
CS
	<type: #ColourSpace>
	<attribute: 2 documentation: '(Sometimes required) The group colour space, which is used for the following purposes:
â¢ As the colour space into which colours shall be converted when painted into the group
â¢ As the blending colour space in which objects shall be composited within the group
â¢ As the colour space of the group as a whole when it in turn is painted as an object onto its backdrop

The group colour space shall be any device or CIE-based colour space that treats its components as independent additive or subtractive values in the range 0.0 to 1.0, subject to the restrictions. These restrictions exclude Lab and lightness-chromaticity ICCBased colour spaces, as well as the special colour spaces Pattern, Indexed, Separation, and DeviceN. Device colour spaces shall be subject to remapping according to the DefaultGray, DefaultRGB, and DefaultCMYK entries in the ColorSpace subdictionary of the current resource dictionary.
Ordinarily, the CS entry may be present only for isolated transparency groups (those for which I is true), and even then it is optional. However, this entry shall be present in the group attributes dictionary for any transparency group XObject that has no parent group or page from which to inheritâin particular, one that is the value of the G entry in a soft-mask dictionary of subtype Luminosity.

Additionally, the CS entry may be present in the group attributes dictionary associated with a page object, even if I is false or absent. In the normal case in which the page is imposed directly on the output medium, the page group is effectively isolated regardless of the I value, and the specified CS value shall therefore be honoured. But if the page is in turn used as an element of some other page and if the group is non-isolated, CS shall be ignored and the colour space shall be inherited from the actual backdrop with which the page is composited.
Default value: the colour space of the parent group or page into which this transparency group is painted. (The parentâs colour space in turn may be either explicitly specified or inherited.)
For a transparency group XObject used as an annotation appearance, the default colour space shall be inherited from the page on which the annotation appears.'>
	^self objectAt: #CS
%
method: TransparencyGroupAttributes
I
	<type: #Boolean>
	<attribute: 3 documentation: 'A flag specifying whether the transparency group is isolated. If this flag is true, objects within the group shall be composited against a fully transparent initial backdrop; if false, they shall be composited against the groupâs backdrop.
In the group attributes dictionary for a page, the interpretation of this entry shall be slightly altered. In the normal case in which the page is imposed directly on the output medium, the page group is effectively isolated and the specified I value shall be ignored. But if the page is in turn used as an element of some other page, it shall be treated as if it were a transparency group XObject; the I value shall be interpreted in the normal way to determine whether the page group is isolated.'>
	^self objectAt: #I ifAbsent: [false]
%
method: TransparencyGroupAttributes
K
	<type: #Boolean>
	<attribute: 4 documentation: 'A flag specifying whether the transparency group is a knockout group. If this flag is false, later objects within the group shall be composited with earlier ones with which they overlap; if true, they shall be composited with the groupâs initial backdrop and shall overwrite (âknock outâ) any earlier overlapping objects.'>
	^self objectAt: #K ifAbsent: [false]
%
category: 'accessing'
classmethod: XObject
pdfTypeDefinition

	^PDFTypeDefinition
		name: #XObject
		supertype: #Stream
		section: '8.8'
		documentation: 'An external object (commonly called an XObject) is a graphics object whose contents are defined by a self-contained stream, 
separate from the content stream in which it is used. 
There are three types of external objects:
	â¢	An image XObject represents a sampled visual image such as a photograph.
	â¢	A form XObject is a self-contained description of an arbitrary sequence of graphics objects.
	â¢	A PostScript XObject contains a fragment of code expressed in the PostScript page description language. 
		PostScript XObjects should not be used.

Two further categories of external objects, group XObjects and reference XObjects (both PDF 1.4), 
are actually specialized types of form XObjects with additional properties.

Any XObject can be painted as part of another content stream by means of the Do operator. 
This operator applies to any type of XObjectâimage, form, or PostScript. 
The syntax is the same in all cases, although details of the operatorâs behaviour differ depending on the type.'
%
classmethod: XObject
resourcePrefix
	"<String>
	the prefix for ids in /Resources"

	^self subclassResponsibility
%
classmethod: XObject
resourceType
	"<Symbol>
	the name of a /Resources key"

	^#XObject
%
classmethod: XObject
subtype
	"<Symbol>
	subtype entry"

	^self name
%
classmethod: XObject
type
	^#XObject
%
category: 'instance creation'
classmethod: XObject
empty
	| inst |
	inst := self new.
	inst at: #Subtype put: self subtype.
	^inst
%
category: 'testing'
classmethod: XObject
isClassForStream: aStream
	| subtypeEntry |
	self == (PDF classAt: #XObject) ifTrue: [
		^super isClassForStream: aStream].
	subtypeEntry := aStream at: #Subtype ifAbsent: [
		^false].
	^self subtype asPDF = subtypeEntry
%
category: 'accessing entries'
method: XObject
Subtype
	<type: #Name>
	<required>
	<attribute: 2 documentation: 'The type of XObject that this dictionary describes.'>
	^self objectAt: #Subtype ifAbsent: [nil]
%
method: XObject
Type
	<type: #Name>
	<attribute: 1 documentation: 'The type of PDF object that this dictionary describes; if present, shall be XObject.'>
	^self objectAt: #Type ifAbsent: [#XObject asPDF]
%
category: 'actions'
method: XObject
addProcSetTo: aRenderer
	"do nothing"
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Images'.
	dict at: #comment put: 'PDF Images as defined in PDF 32000_2008.pdf, section 8.9, pp. 203.

PDFâs painting operators include general facilities for dealing with sampled images. A sampled image (or just image for short) is a rectangular array of sample values, each representing a colour. The image may approximate the appearance of some natural scene obtained through an input scanner or a video camera, or it may be generated synthetically'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Images'.
	dict at: #storeVersion put: '2.5.0.0'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class ImageXObject
DoIt
XObject
	subclass: 'ImageXObject'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ImageXObject category: 'PDFtalk Images'.
	ImageXObject comment: 'PDF Image Dictionaries as defined in PDF 32000_2008.pdf, section 8.9.5, pp. 206.

An image dictionaryâthat is, the dictionary portion of a stream representing an image XObjectâ
may contain the entries in addition to the usual entries common to all streams. 
There are many relationships among these entries, and the current colour space may limit the choices for some of them. 
Attempting to use an image dictionary whose entries are inconsistent with each other or with the current colour space shall cause an error.

The entries described here are appropriate for a base imageâone that is invoked directly with the Do operator. 
Some of the entries should not be used for images used in other ways, such as for alternate images, image masks, or thumbnail images. 
Except as noted, such irrelevant entries are simply ignored by a conforming reader.'.
	ImageXObject namespacePath: #(#PDFtalk).
%
# Define class ThumbnailImage
DoIt
ImageXObject
	subclass: 'ThumbnailImage'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ThumbnailImage category: 'PDFtalk Images'.
	ThumbnailImage comment: 'PDF Thumbnail Image as defined in PDF 32000_2008.pdf, section 12.3.4, pp. 370.

A PDF document may contain thumbnail images representing the contents of its pages in miniature form. A conforming reader may display these images on the screen, allowing the user to navigate to a page by clicking its thumbnail image:

NOTE Thumbnail images are not required, and may be included for some pages and not for others.

The thumbnail image for a page shall be an image XObject specified by the Thumb entry in the page object. It has the usual structure for an image dictionary, but only the Width, Height, ColorSpace, BitsPerComponent, and Decode entries are significant; all of the other entries shall be ignored if present. (If a Subtype entry is specified, its value shall be Image.) The imageâs colour space shall be either DeviceGray or DeviceRGB, or an Indexed space based on one of these.

'.
	ThumbnailImage namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
classmethod: ImageXObject
nativeBitsPerComponentFor: numberOfBits
	numberOfBits > 8 ifTrue: [
		^16].
	numberOfBits > 4 ifTrue: [
		^8].
	numberOfBits > 2 ifTrue: [
		^4].
	numberOfBits > 1 ifTrue: [
		^2].
	^1
%
classmethod: ImageXObject
pdfTypeDefinition
	^PDFTypeDefinition
		name: #ImageXObject
		supertype: #XObject
		section: '8.9.5'
		documentation: 'An image dictionaryâthat is, the dictionary portion of a stream representing an image XObjectâ
may contain the entries in addition to the usual entries common to all streams. 
There are many relationships among these entries, and the current colour space may limit the choices for some of them. 
Attempting to use an image dictionary whose entries are inconsistent with each other or with the current colour space shall cause an error.

The entries described here are appropriate for a base imageâone that is invoked directly with the Do operator. 
Some of the entries should not be used for images used in other ways, such as for alternate images, image masks, or thumbnail images. 
Except as noted, such irrelevant entries are simply ignored by a conforming reader.'
%
classmethod: ImageXObject
resourcePrefix
	^'Im'
%
classmethod: ImageXObject
subtype
	^#Image
%
category: 'instance creation'
classmethod: ImageXObject
empty
	| inst |
	inst := super empty.
	inst at: #Type put: self type.
	^inst
%
classmethod: ImageXObject
from: anImage
	| inst |
	inst := self empty.
	inst initializeFrom: anImage.
	^inst
%
category: 'accessing'
method: ImageXObject
bitsFromBytes: numberOfBytes at: byteIndex
	"<Integer>
	the bits (numberOfBytes * 8) from the pixel array"

	^(self internal copyFrom: byteIndex + 1 to: byteIndex + numberOfBytes) asByteArray inject: 0 into: [:num :byte |
		(num bitShift: 8) + byte]
%
method: ImageXObject
bitsPerComponent
	"<Integer>"

	^self BitsPerComponent asSmalltalkValue
%
method: ImageXObject
bitsPerComponent: anInteger
	self at: #BitsPerComponent put: (self class nativeBitsPerComponentFor: anInteger)
%
method: ImageXObject
bitsPerPixel
	"<Integer>"

	self isMask ifTrue: [
		^1].
	^self numberOfComponents * self bitsPerComponent
%
method: ImageXObject
bitsPerRow
	"<Integer>"

	^self bitsPerPixel * self width
%
method: ImageXObject
byteArrayFor: anInteger size: numberOfBytes
	"<ByteArray>
	the bits of anInteger are converted to numberOfBytes bytes.
	Leading bits are ignored"

	| bytes toConvert |
	bytes := ByteArray new: numberOfBytes.
	toConvert := anInteger.
	numberOfBytes to: 1 by: -1 do: [:index |
		bytes at: index put: (toConvert bitAnd: 255).
		toConvert := toConvert bitShift: -8].
	^bytes
%
method: ImageXObject
bytesPerImage
	^self height * self bytesPerRow
%
method: ImageXObject
bytesPerRow
	"<Integer>"

	^(self bitsPerRow / 8) ceiling
%
method: ImageXObject
clearMaskForBytes: numberOfBytes shiftedRigthBy: bitsRight
	| fullMask pixelMask |
	fullMask := (1 bitShift: numberOfBytes * 8) - 1.
	pixelMask := self pixelMask bitShift: bitsRight.
	^fullMask bitXor: pixelMask
%
method: ImageXObject
combined: newInteger size: numberOfBytes shiftedRightBy: bitsRight at: bytesStart
	^(self maskedBitsForBytes: numberOfBytes shiftedRightBy: bitsRight at: bytesStart) + (newInteger bitShift: bitsRight)
%
method: ImageXObject
conversionColorspace
	"masks do not have a color space"

	self isMask ifTrue: [
		^(PDF classAt: #DeviceGray) new].
	^self ColorSpace
%
method: ImageXObject
defaultDecodeArray
	self isMask ifTrue: [
		^#(0 1) asPDF].
	^self ColorSpace defaultDecodeArray
%
method: ImageXObject
depth
	"<Integer>
	the significant number of bits per pixel.
	Must be the same or lower than #bitsPerPixel"

	| maxComponent depth rst |
	self hasDecode ifFalse: [
		^self bitsPerPixel].
	maxComponent := self maxComponent.
	depth := 0.
	rst := self Decode asSmalltalkValue readStream.
	[rst atEnd] whileFalse: [
		| dMin dMax maxValue |
		dMin := rst next.
		dMax := rst next.
		maxValue := maxComponent / (dMax - dMin).
		depth := depth + maxValue rounded abs highBit].
	^depth
%
method: ImageXObject
depthsPerComponent
	"<Array of: Integer>
	the significant number of bits per component.
	Only relevant with a #Decode array.
	Provisorial: assumes that min is 0 and that min is smaller than max"

	| maxComponent depths rst |
	self isMask ifTrue: [
		^#(1)].
	self hasDecode ifFalse: [
		^Array new: self numberOfComponents withAll: self bitsPerComponent].
	maxComponent := self maxComponent.
	depths := OrderedCollection new.
	rst := self Decode asSmalltalkValue readStream.
	[rst atEnd] whileFalse: [
		depths add: (maxComponent / (rst next max: rst next)) rounded highBit].
	^depths
%
method: ImageXObject
extent
	^self width @ self height
%
method: ImageXObject
height
	^self Height asSmalltalkValue
%
method: ImageXObject
maskedBitsForBytes: numberOfBytes shiftedRightBy: bitsRight at: bytesStart
	| clearMask oldInteger |
	oldInteger := self bitsFromBytes: numberOfBytes at: bytesStart.
	clearMask := self clearMaskForBytes: numberOfBytes shiftedRigthBy: bitsRight.
	^oldInteger bitAnd: clearMask
%
method: ImageXObject
maxComponent
	^(1 bitShift: self bitsPerComponent) - 1
%
method: ImageXObject
numberOfComponents
	self isMask ifTrue: [
		^1].
	^self ColorSpace numberOfComponents
%
method: ImageXObject
numberOfPixel
	^self width * self height
%
method: ImageXObject
pixelBitsForPaint: aPaint
	"<Integer>"

	^self conversionColorspace bitsFor: aPaint withSizes: self depthsPerComponent
%
method: ImageXObject
pixelMask
	^(1 bitShift: self bitsPerPixel) - 1
%
method: ImageXObject
pixelPaintForBits: anInteger
	"<ColorValue | CoverageValue>"

	self isMask ifTrue: [
		^self conversionColorspace
			coverageAt: anInteger
			withSizes: self depthsPerComponent
			decodeWith: self Decode asSmalltalkValue].
	^self conversionColorspace
		colorAt: anInteger
		withSizes: self depthsPerComponent
		decodeWith: self Decode asSmalltalkValue
%
method: ImageXObject
procSet
	self isMask ifTrue: [
		^#ImageB].
	^self ColorSpace procSet
%
method: ImageXObject
setBytes: aByteArray at: indexInteger
	self internal
		replaceBytesFrom: indexInteger + 1
		to: indexInteger + aByteArray size
		with: aByteArray asString
		startingAt: 1.
	self resetExternal
%
method: ImageXObject
startBitIndexAt: aPoint
	"<Integer>
	start bit position of the pixel bits"

	^(aPoint y * self bytesPerRow bitShift: 3) + (aPoint x * self bitsPerPixel)
%
method: ImageXObject
uniqueColorValues
	"<Collection of: ColorValue>"

	| colors |
	colors := Set new: self height * self width // 10.
	self pixelsDo: [:x :y | colors add: (self valueAtPoint: x @ y)].
	^colors
%
method: ImageXObject
valueAtPoint: aPoint
	"<Paint>
	The paint at pixel location aPoint (zero based)"

	| bitsStart bytesStart bitsLeft numberOfBytes bitsRight bits rightAlignedBits maskedBits |
	bitsStart := self startBitIndexAt: aPoint.
	bytesStart := bitsStart bitShift: -3.
	bitsLeft := bitsStart bitAnd: 7.
	numberOfBytes := ((bitsLeft + self bitsPerPixel) / 8) ceiling.
	bitsRight := numberOfBytes * 8 - bitsLeft - self bitsPerPixel.
	bits := self bitsFromBytes: numberOfBytes at: bytesStart.
	rightAlignedBits := bits bitShift: bitsRight negated.
	maskedBits := rightAlignedBits bitAnd: self pixelMask.
	^self pixelPaintForBits: maskedBits
%
method: ImageXObject
valueAtPoint: aPoint put: aPaint
	"<Paint>
	Put aPaint at pixel location aPoint (zero based)"

	| newBits bitsStart bytesStart bitsLeft numberOfBytes bitsRight bitsToWrite bytes |
	newBits := self pixelBitsForPaint: aPaint.
	bitsStart := self startBitIndexAt: aPoint.
	bytesStart := bitsStart bitShift: -3.
	bitsLeft := bitsStart bitAnd: 7.
	numberOfBytes := ((bitsLeft + self bitsPerPixel) / 8) ceiling.
	bitsRight := numberOfBytes * 8 - bitsLeft - self bitsPerPixel.
	bitsToWrite := (bitsLeft + bitsRight) isZero
		ifTrue: [newBits]
		ifFalse: [
		self combined: newBits size: numberOfBytes shiftedRightBy: bitsRight at: bytesStart].
	bytes := self byteArrayFor: bitsToWrite size: numberOfBytes.
	self setBytes: bytes at: bytesStart.
	^aPaint
%
method: ImageXObject
width
	^self Width asSmalltalkValue
%
category: 'accessing entries'
method: ImageXObject
Alternates
	<typeArrayOf: #Dictionary>
	<version: 1 dot: 3>
	<attribute: 10 documentation: 'An array of alternate image dictionaries for this image. 
The order of elements within the array shall have no significance. 
This entry shall not be present in an image XObject that is itself an alternate image.'>
	^self objectAt: #Alternates ifAbsent: [PDF Dictionary empty]
%
method: ImageXObject
BitsPerComponent
	<type: #Integer>
	<attribute: 4 documentation: '(Required except for image masks and images that use the JPXDecode filter) 
The number of bits used to represent each colour component. 
Only a single value shall be specified; the number of bits shall be the same for all colour components. 
The value shall be 1, 2, 4, 8, or (in PDF 1.5) 16. 
If ImageMask is true, this entry is optional, but if specified, its value shall be 1.

If the image stream uses a filter, the value of BitsPerComponent shall be consistent with the size of the data samples that the filter delivers. 
In particular, a CCITTFaxDecode or JBIG2Decode filter shall always deliver 1-bit samples, 
a RunLengthDecode or DCTDecode filter shall always deliver 8-bit samples, 
and an LZWDecode or FlateDecode filter shall deliver samples of a specified size if a predictor function is used.

If the image stream uses the JPXDecode filter, this entry is optional and shall be ignored if present. 
The bit depth is determined by the conforming reader in the process of decoding the JPEG2000 image.'>
	^self objectAt: #BitsPerComponent
%
method: ImageXObject
ColorSpace
	<type: #ColourSpace>
	<attribute: 3 documentation: '(Required for images, except those that use the JPXDecode filter; not allowed forbidden for image masks) 
The colour space in which image samples shall be specified; it can be any type of colour space except Pattern.
If the image uses the JPXDecode filter, this entry may be present:
	â¢	If ColorSpace is present, any colour space specifications in the JPEG2000 data shall be ignored.
	â¢	If ColorSpace is absent, the colour space specifications in the JPEG2000 data shall be used. 
		The Decode array shall also be ignored unless ImageMask is true.'>
	^self objectAt: #ColorSpace
%
method: ImageXObject
Decode
	<typeArrayOf: #Number>
	<attribute: 8 documentation: 'An array of numbers describing how to map image samples into the range of values appropriate for the imageâs colour space. 
If ImageMask is true, the array shall be either [0 1] or [1 0]; otherwise, its length shall be twice the number of colour components required by ColorSpace. 
If the image uses the JPXDecode filter and ImageMask is false, Decode shall be ignored by a conforming reader'>
	^self objectAt: #Decode ifAbsent: [self defaultDecodeArray]
%
method: ImageXObject
Height
	<type: #Integer>
	<required>
	<attribute: 2 documentation: 'The height of the image, in samples.'>
	^self objectAt: #Height
%
method: ImageXObject
ID
	<type: #String>
	<version: 1 dot: 3>
	<attribute: 15 documentation: '(indirect reference preferred) 
The digital identifier of the imageâs parent Web Capture content set.'>
	^self objectAt: #ID
%
method: ImageXObject
ImageMask
	<type: #Boolean>
	<attribute: 6 documentation: 'A flag indicating whether the image shall be treated as an image mask. 
If this flag is true, the value of BitsPerComponent shall be 1 and Mask and ColorSpace shall not be specified; 
unmasked areas shall bepainted using the current nonstroking colour.'>
	^self objectAt: #ImageMask ifAbsent: [false]
%
method: ImageXObject
Intent
	<type: #Name>
	<version: 1 dot: 1>
	<attribute: 5 documentation: 'The name of a colour rendering intent to be used in rendering the image. 
Default value: the current rendering intent in the graphics state.'>
	^self objectAt: #Intent
%
method: ImageXObject
Interpolate
	<type: #Boolean>
	<attribute: 9 documentation: 'A flag indicating whether image interpolation shall be performed by a conforming reader.'>
	^self objectAt: #Interpolate ifAbsent: [false]
%
method: ImageXObject
Mask
	<type: #ImageXObject>
	<type: #Array>
	<version: 1 dot: 3>
	<attribute: 7 documentation: '(Optional except for image masks; not allowed for image masks) 
An image XObject defining an image mask to be applied to this image, 
or an array specifying a range of colours to be applied to it as a colour key mask. 
If ImageMask is true, this entry shall not be present.'>
	^self objectAt: #Mask
%
method: ImageXObject
Matte
	<typeArrayOf: #Number>
	<version: 1 dot: 4>
	<attribute: 19 documentation: 'Only for SoftMaskImage.
An array of component values specifying the matte colour with which the image data in the parent image shall have been preblended.
The array shall consist of n numbers, where n is the number of components in the colour space specified by the ColorSpace entry in the parent imageâs image dictionary; the numbers shall be valid colour components in that colour space.
If this entry is absent, the image data shall not be preblended.'>
	^self objectAt: #Matte
%
method: ImageXObject
Metadata
	<type: #Stream>
	<version: 1 dot: 4>
	<attribute: 17 documentation: 'A metadata stream containing metadata for the image.'>
	^self objectAt: #Metadata
%
method: ImageXObject
Name
	<type: #Name>
	<attribute: 13 documentation: '(Required in PDF 1.0; optional otherwise) 
The name by which this image XObject is referenced in the XObject subdictionary of the current resource dictionary.
This entry is obsolescent and shall no longer be used.'>
	^self objectAt: #Name
%
method: ImageXObject
OC
	<type: #Dictionary>
	<version: 1 dot: 5>
	<attribute: 18 documentation: 'An optional content group or optional content membership dictionary, 
specifying the optional content properties for this image XObject. 
Before the image is processed by a conforming reader, its visibility shall be determined based on this entry. 
If it is determined to be invisible, the entire image shall be skipped, as if there were no Do operator to invoke it.'>
	^self objectAt: #OC ifAbsent: [PDF Dictionary empty]
%
method: ImageXObject
OPI
	<type: #Dictionary>
	<version: 1 dot: 2>
	<attribute: 16 documentation: 'An OPI version dictionary for the image. 
If ImageMask is true, this entry shall be ignored.'>
	^self objectAt: #OPI ifAbsent: [PDF Dictionary empty]
%
method: ImageXObject
SMask
	<type: #ImageXObject>
	<version: 1 dot: 4>
	<attribute: 11 documentation: 'A subsidiary image XObject defining a soft-mask image that shall be used as a source of mask shape or mask opacity values in the transparent imaging model. 
The alpha source parameter in the graphics state determines whether the mask values shall be interpreted as shape or opacity.

If present, this entry shall override the current soft mask in the graphics state, as well as the imageâs Mask entry, if any. 
However, the other transparency-related graphics state parametersâblend mode and alpha constantâshall remain in effect. 
If SMask is absent, the image shall have no associated soft mask (although the current soft mask in the graphics state may still apply).'>
	^self objectAt: #SMask
%
method: ImageXObject
SMaskInData
	<type: #Integer>
	<version: 1 dot: 5>
	<attribute: 12 documentation: '(Optional for images that use the JPXDecode filter, meaningless otherwise) 
A code specifying how soft-mask information encoded with image samples shall be used:
0	If present, encoded soft-mask image information shall be ignored.
1 	The imageâs data stream includes encoded soft-mask values. 
	A conforming reader may create a soft-mask image from the information to be used as a source of mask shape or mask opacity in the transparency imaging model.
2	The imageâs data stream includes colour channels that have been preblended with a background; the image data also includes an opacity channel. 
	A conforming reader may create a soft-mask image with a Matte entry from the opacity channel information to be used 
	as a source of mask shape or mask opacity in the transparency model.
If this entry has a nonzero value, SMask shall not be specified.'>
	^self objectAt: #SMaskInData ifAbsent: [0 asPDF]
%
method: ImageXObject
StructParent
	<type: #Integer>
	<version: 1 dot: 3>
	<attribute: 14 documentation: '(Required if the image is a structural content item) 
The integer key of the imageâs entry in the structural parent tree.'>
	^self objectAt: #StructParent
%
method: ImageXObject
Subtype
	<type: #Name>
	<attribute: 1 documentation: 'The type of XObject that this dictionary describes.'>
	^self objectAt: #Subtype ifAbsent: [#Image asPDF]
%
method: ImageXObject
Width
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'The width of the image, in samples.'>
	^self objectAt: #Width
%
category: 'actions'
method: ImageXObject
addProcSetTo: aRenderer
	aRenderer addProcSet: self procSet
%
method: ImageXObject
setDecodeExplicitly
	"trick to force a FixedPalette when converting to a Smalltalk image"

	self at: #Decode put: self Decode
%
category: 'converting'
method: ImageXObject
addDecodeIfNeededFor: sourceBitsPerComponent
	"If the source image bitsPerComponent is smaller than the bitsPerComponent of the receiver,
	add a /Decode array to scale the values"

	| decodeArray |
	(sourceBitsPerComponent allSatisfy: [:bits | bits = self bitsPerComponent]) ifTrue: [
		^self].
	decodeArray := sourceBitsPerComponent inject: Array new into: [:decode :bits |
		decode , (Array
			with: 0
			with: self maxComponent / ((1 bitShift: bits) - 1))].
	self at: #Decode put: decodeArray
%
method: ImageXObject
addSoftMaskWithBytes: aByteArray
	| softMask |
	softMask := (PDF classAt: #ImageXObject) empty.
	softMask at: #Width put: self width.
	softMask at: #Height put: self height.
	softMask at: #BitsPerComponent put: self bitsPerComponent.
	softMask at: #ColorSpace put: #DeviceGray.
	softMask contents: aByteArray asString.
	self at: #SMask put: softMask newReference
%
category: 'enumerating'
method: ImageXObject
pixelsDo: aBlock
	0 to: self height - 1 do: [:rowIndex |
		0 to: self width - 1 do: [:columnIndex | aBlock value: columnIndex value: rowIndex]]
%
category: 'initialize-release'
method: ImageXObject
initializeFrom: anImage
	self at: #Width put: anImage width.
	self at: #Height put: anImage height.
	anImage palette setImagePropertiesOf: self.
	anImage writePixelsTo: self.
	self filter: #FlateDecode
%
method: ImageXObject
initializeImageBits
	self contents: (String new: self bytesPerImage)
%
method: ImageXObject
resetImageProperties
	"undo any potential change made by #setImagePropertiesOf:"

	self at: #BitsPerComponent put: nil.
	self at: #ColorSpace put: nil.
	self at: #ImageMask put: nil.
	self at: #Decode put: nil
%
category: 'printing'
method: ImageXObject
colorTypeName
	"<String>
	for the printString"

	self isMask ifTrue: [
		^'Mask'].
	^self ColorSpace class name asString
%
method: ImageXObject
printOn: stream
	stream
		nextPutAll: self class name asString;
		nextPutAll: '(';
		nextPutAll: self width printString;
		nextPutAll: ' @ ';
		nextPutAll: self height printString;
		nextPutAll: ' ';
		nextPutAll: self colorTypeName;
		nextPutAll: ' ';
		nextPutAll: self bitsPerComponent printString;
		nextPut: $)
%
method: ImageXObject
printvalueWith: printer
	"Value protocol to print the object literally"
	
	| args |
	args := OrderedCollection new.
	args add: (printer dictionary: 'on' value: self content).
	args add: (printer constant: 'externalBytes' value: self external asByteArray).
	^printer printvalue: self arguments: args
%
category: 'testing'
method: ImageXObject
hasDecode
	^self hasKey: #Decode
%
method: ImageXObject
isIndexed
	^self isMask not and: [
	self ColorSpace isKindOf: (PDF classAt: #Indexed)]
%
method: ImageXObject
isMask
	^self ImageMask
%
method: ImageXObject
isStandard1BitBWOrMask
	"<Boolean>
	if true, the optimized image conversion can be used"

	self bitsPerComponent = 1 ifFalse: [
		^false].
	self isMask ifTrue: [
		^self Decode asSmalltalkValue = #(1 0)].
	^self Decode = self defaultDecodeArray and: [
	self ColorSpace asSmalltalkValue = #DeviceGray]
%
method: ImageXObject
isStandard8BitGray
	^self bitsPerComponent = 8 and: [
	self Decode = self defaultDecodeArray and: [
	self ColorSpace asSmalltalkValue = #DeviceGray]]
%
method: ImageXObject
isStandard8BitRGB
	^self bitsPerComponent = 8 and: [
	self Decode = self defaultDecodeArray and: [
	self ColorSpace asSmalltalkValue = #DeviceRGB]]
%
category: 'accessing'
classmethod: ThumbnailImage
pdfTypeDefinition
	^PDFTypeDefinition
		name: #ThumbnailImage
		supertype: #Stream
		section: '12.3.4'
		documentation: 'A PDF document may contain thumbnail images representing the contents of its pages in miniature form. A conforming reader may display these images on the screen, allowing the user to navigate to a page by clicking its thumbnail image:

NOTE Thumbnail images are not required, and may be included for some pages and not for others.

The thumbnail image for a page shall be an image XObject specified by the Thumb entry in the page object. It has the usual structure for an image dictionary, but only the Width, Height, ColorSpace, BitsPerComponent, and Decode entries are significant; all of the other entries shall be ignored if present. (If a Subtype entry is specified, its value shall be Image.) The imageâs colour space shall be either DeviceGray or DeviceRGB, or an Indexed space based on one of these.'
%
category: 'testing'
classmethod: ThumbnailImage
isClassForStream: aStream
	^#(#Width #Height #BitsPerComponent #ColorSpace) allSatisfy: [:key |
		aStream hasKey: key]
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: '*PDFtalk Images-converting'
method: InlineImage
imageXObject
	"<ImageXObject>"

	| dict bytes rst |
	dict := Valuemap new.
	rst := (self operations at: 2) operands readStream.
	[rst atEnd] whileFalse: [
		dict at: (self keyForAbbreviation: rst next) put: (self valueForAbbreviation: rst next)].
	"should check for forbidden keys and values"
	dict at: #Type put: #XObject.
	dict at: #Subtype put: #Image.
	bytes := ByteArray withAll: self operations last operands first asSmalltalkValue.
	^ImageXObject on: dict externalBytes: bytes
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Files'.
	dict at: #comment put: 'Objects of the PDF file structure (PDF 32000_2008.pdf pp. 38)'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Files'.
	dict at: #storeVersion put: '2.5.0.3'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class XRefStream
DoIt
TypedStream
	subclass: 'XRefStream'
	instVarNames: #(previous subsections)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	XRefStream category: 'PDFtalk Files'.
	XRefStream comment: 'PDF Cross-reference Stream as defined in PDF 32000_2008.pdf pp. 49.

Beginning with PDF 1.5, cross-reference information may be stored in a cross-reference stream instead of in a cross-reference table. Cross-reference streams provide the following advantages:
â¢	A more compact representation of cross-reference information
â¢	The ability to access compressed objects that are stored in object streams and to allow new cross-reference entry types to be added in the future
Cross-reference streams are stream objects, and contain a dictionary and a data stream. Each cross-reference stream contains the information equivalent to the cross-reference table and trailer for one cross-reference section.'.
	XRefStream namespacePath: #(#PDFtalk).
%
# Define class DocumentInformation
DoIt
PDFDictionary
	subclass: 'DocumentInformation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	DocumentInformation category: 'PDFtalk Files'.
	DocumentInformation comment: 'PDF Document Information Dictionary object as defined in PDF 32000_2008.pdf pp. 549.

The optional Info entry in the trailer of a PDF file (see Trailer) shall hold a document information dictionary containing metadata for the document.
Any entry whose value is not known should be omitted from the dictionary rather than included with an empty string as its value.

Some conforming readers may choose to permit searches on the contents of the document information dictionary.
To facilitate browsing and editing, all keys in the dictionary shall be fully spelled out, not abbreviated.
New keys should be chosen with care so that they make sense to users.

The value associated with any key not specifically mentioned in Table 317 shall be a text string.

Although conforming readers may store custom metadata in the document information dictionary, they may not store private content or structural information there.
Such information shall be stored in the document catalogue instead (see Catalog).'.
	DocumentInformation namespacePath: #(#PDFtalk).
%
# Define class FileEntity
DoIt
Entity
	subclass: 'FileEntity'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FileEntity category: 'PDFtalk Files'.
	FileEntity comment: 'Super class of all PDF objects which make up a File as defined in PDF 32000_2008.pdf pp. 38.

The creation of these objects is done by the class method #readFrom: using a PDF.Reader.'.
	FileEntity namespacePath: #(#PDFtalk).
%
# Define class Header
DoIt
FileEntity
	subclass: 'Header'
	instVarNames: #(version)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Header category: 'PDFtalk Files'.
	Header comment: 'PDF File Header as defined in PDF 32000_2008.pdf pp. 40.'.
	Header namespacePath: #(#PDFtalk).
%
# Define class ObjectStream
DoIt
TypedStream
	subclass: 'ObjectStream'
	instVarNames: #(parser offsets)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ObjectStream category: 'PDFtalk Files'.
	ObjectStream comment: 'PDF Object Stream as defined in PDF 32000_2008.pdf pp. 45.

An object stream, is a stream object in which a sequence of indirect objects may be stored, as an alternative to their being stored at the outermost file level.'.
	ObjectStream namespacePath: #(#PDFtalk).
%
# Define class CrossReferences
DoIt
FileEntity
	subclass: 'CrossReferences'
	instVarNames: #(crossReferenceSection trailer previous stream)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CrossReferences category: 'PDFtalk Files'.
	CrossReferences comment: 'Combines one cross-reference section and one trailer.
Previous sections and trailers are collected and accessible with #previous.

PDF Cross-Reference Table as defined in PDF 32000_2008.pdf pp. 40.

The cross-reference table contains information that permits random access to indirect objects within the file so that the entire file need not be read to locate any particular object. The table shall contain a one-line entry for each indirect object, specifying the byte offset of that object within the body of the file. (Beginning with PDF 1.5, some or all of the cross-reference information may alternatively be contained in cross-reference streams).

NOTE 1		The cross-reference table is the only part of a PDF file with a fixed format, which permits entries in the table to be accessed randomly.

The table comprises one or more cross-reference sections. Initially, the entire table consists of a single section (or two sections if the file is linearized). One additional section shall be added each time the file is incrementally updated.


Shares the access protocol with CrossReferenceStream:
	#at:
	#at:ifAbsent:
	#atNumber:
	#atNumber:ifAbsent:
	#freeReferences
	#trailer'.
	CrossReferences namespacePath: #(#PDFtalk).
%
# Define class CrossReference
DoIt
Value
	subclass: 'CrossReference'
	instVarNames: #(id value)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CrossReference category: 'PDFtalk Files'.
	CrossReference comment: 'A Cross-Reference Entry in a subsection of a section of the cross-reference table as defined in PDF 32000_2008.pdf pp. 40.

Each cross-reference entry shall be exactly 20 bytes long, including the end-of-line marker. There are two kinds of cross-reference entries: one for objects that are in use and another for objects that have been deleted and therefore are free. Both types of entries have similar basic formats, distinguished by the keyword n (for an in-use entry) or f (for a free entry).'.
	CrossReference namespacePath: #(#PDFtalk).
%
# Define class UsedReference
DoIt
CrossReference
	subclass: 'UsedReference'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	UsedReference category: 'PDFtalk Files'.
	UsedReference comment: 'A Cross-Reference in-use Entry as defined in PDF 32000_2008.pdf pp. 40.

The format of an in-use entry shall be:

	nnnnnnnnnn ggggg n eol

where:

	nnnnnnnnnn shall be a 10-digit byte offset in the decoded stream
	ggggg shall be a 5-digit generation number
	n shall be a keyword identifying this as an in-use entry
	eol shall be a 2-character end-of-line sequence

The byte offset in the decoded stream shall be a 10-digit number, padded with leading zeros if necessary, giving the number of bytes from the beginning of the file to the beginning of the object. It shall be separated from the generation number by a single SPACE. The generation number shall be a 5-digit number, also padded with leading zeros if necessary. Following the generation number shall be a single SPACE, the keyword n, and a 2-character end-of-line sequence consisting of one of the following: SP CR, SP LF, or CR LF. Thus, the overall length of the entry shall always be exactly 20 bytes.'.
	UsedReference namespacePath: #(#PDFtalk).
%
# Define class StreamReference
DoIt
UsedReference
	subclass: 'StreamReference'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	StreamReference category: 'PDFtalk Files'.
	StreamReference comment: 'A Cross-Reference in-use Entry for an object in an object stream as defined in PDF 32000_2008.pdf pp. 51.'.
	StreamReference namespacePath: #(#PDFtalk).
%
# Define class FileIdentifier
DoIt
PDFArray
	subclass: 'FileIdentifier'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FileIdentifier category: 'PDFtalk Files'.
	FileIdentifier comment: 'PDF File Identifier as defined in PDF 32000_2008.pdf, section 14.4, pp. 551.

PDF files may contain references to other PDF files. 
Simply storing a file name, however, even in a platform-independent format, does not guarantee that the file can be found.
Even if the file still exists and its name has not been changed, different server software applications may identify it in different ways.
Servers running on DOS platforms convert all file names to 8 characters and a 3-character extension.
Different servers may use different strategies for converting longer file names to this format.

External file references may be made more reliable by including a file identifier (PDF 1.1) in the file and using it in addition to the normal platform-based file designation.
Matching the identifier in the file reference with the one in the file confirms whether the correct file was found.

File identifiers shall be defined by the optional ID entry in a PDF fileâs trailer dictionary (see Trailer).
The ID entry is optional but should be used.
The value of this entry shall be an array of two byte strings.
The first byte string shall be a permanent identifier based on the contents of the file at the time it was originally created and shall not change when the file is incrementally updated.
The second byte string shall be a changing identifier based on the fileâs contents at the time it was last updated.
When a file is first written, both identifiers shall be set to the same value.
If both identifiers match when a file reference is resolved, it is very likely that the correct and unchanged file has been found.
If only the first identifier matches, a different version of the correct file has been found.

To help ensure the uniqueness of file identifiers, they should be computed by means of a message digest algorithm such as MD5, using the following information:
	â¢ The current time
	â¢ A string representation of the fileâs location, usually a pathname
	â¢ The size of the file in bytes
	â¢ The values of all entries in the fileâs document information dictionary

NOTE
The calculation of the file identifier need not be reproducible; all that matters is that the identifier is likely to be unique.
For example, two implementations of the preceding algorithm might use different formats for the current time, causing them to produce different file identifiers for the same file created at the same time, but the uniqueness of the identifier is not affected.
'.
	FileIdentifier namespacePath: #(#PDFtalk).
%
# Define class CrossReferenceSubsection
DoIt
FileEntity
	subclass: 'CrossReferenceSubsection'
	instVarNames: #(firstNumber entries)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CrossReferenceSubsection category: 'PDFtalk Files'.
	CrossReferenceSubsection comment: 'A Cross-Reference Subsection in a section of the cross-reference table as defined in PDF 32000_2008.pdf pp. 40.

Each cross-reference subsection shall contain entries for a contiguous range of object numbers. The subsection shall begin with a line containing two numbers separated by a SPACE (20h), denoting the object number of the first object in this subsection and the number of entries in the subsection.'.
	CrossReferenceSubsection namespacePath: #(#PDFtalk).
%
# Define class FreeReference
DoIt
CrossReference
	subclass: 'FreeReference'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FreeReference category: 'PDFtalk Files'.
	FreeReference comment: 'A Cross-Reference free Entry as defined in PDF 32000_2008.pdf pp. 41.

The cross-reference entry for a free object has essentially the same format, except that the keyword shall be finstead of n and the interpretation of the first item is different:

	nnnnnnnnnn ggggg f eol

where:

	nnnnnnnnnn shall be the 10-digit object number of the next free object
	ggggg shall be a 5-digit generation number
	f shall be a keyword identifying this as a free entry
	eol shall be a 2-character end-of-line sequence

There are two ways an entry may be a member of the free entries list. Using the basic mechanism the free entries in the cross-reference table may form a linked list, with each free entry containing the object number of the next. The first entry in the table (object number 0) shall always be free and shall have a generation number of 65,535; it is shall be the head of the linked list of free objects. The last free entry (the tail of the linked list) links back to object number 0. Using the second mechanism, the table may contain other free entries that link back to object number 0 and have a generation number of 65,535, even though these entries are not in the linked list itself.
Except for object number 0, all objects in the cross-reference table shall initially have generation numbers of 0. When an indirect object is deleted, its cross-reference entry shall be marked free and it shall be added to the linked list of free entries. The entryâs generation number shall be incremented by 1 to indicate the generation number to be used the next time an object with that object number is created. Thus, each time the entry is reused, it is given a new generation number. The maximum generation number is 65,535; when a cross-reference entry reaches this value, it shall never be reused.'.
	FreeReference namespacePath: #(#PDFtalk).
%
# Define class File
DoIt
FileEntity
	subclass: 'File'
	instVarNames: #(subscriptionRegistry objects parser header crossReferences trailer objectStreams)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	File category: 'PDFtalk Files'.
	File comment: 'PDF File as defined in PDF 32000_2008.pdf pp. 38.'.
	File namespacePath: #(#PDFtalk).
%
# Define class Encryption
DoIt
PDFDictionary
	subclass: 'Encryption'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Encryption category: 'PDFtalk Files'.
	Encryption comment: 'PDF Encryption as defined in PDF 32000_2008.pdf pp. 55.

A PDF document can be encrypted to protect its contents from unauthorized access.
Encryption applies to all strings and streams in the document''s PDF file, with the following exceptions:
	â¢ The values for the ID entry in the trailer
	â¢ Any strings in an Encrypt dictionary
	â¢ Any strings that are inside streams such as content streams and compressed object streams, which themselves are encrypted

Encryption is not applied to other object types such as integers and boolean values, which are used primarily to convey information about the document''s structure rather than its contents.
Leaving these values unencrypted allows random access to the objects within a document, whereas encrypting the strings and streams protects the document''s contents.

When a PDF stream object refers to an external file, the streamâs contents shall not be encrypted, since they are not part of the PDF file itself.
However, if the contents of the stream are embedded within the PDF file, they shall be encrypted like any other stream in the file.
Beginning with PDF 1.5, embedded files can be encrypted in an otherwise unencrypted document.

Encryption-related information shall be stored in a documentâs encryption dictionary, which shall be the value of the Encrypt entry in the documentâs trailer dictionary.
The absence of this entry from the trailer dictionary means that a conforming reader shall consider the document to be not encrypted.'.
	Encryption namespacePath: #(#PDFtalk).
%
# Define class StandardEncryption
DoIt
Encryption
	subclass: 'StandardEncryption'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	StandardEncryption category: 'PDFtalk Files'.
	StandardEncryption comment: 'PDF Standard Encryption as defined in PDF 32000_2008.pdf pp. 60.

PDFâs standard security handler shall allow access permissions and up to two passwords to be specified for a document: an owner password and a user password.
An applicationâs decision to encrypt a document shall be based on whether the user creating the document specifies any passwords or access restrictions.'.
	StandardEncryption namespacePath: #(#PDFtalk).
%
# Define class Trailer
DoIt
PDFDictionary
	subclass: 'Trailer'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Trailer category: 'PDFtalk Files'.
	Trailer comment: 'PDF File Trailer as defined in PDF 32000_2008.pdf pp. 42.'.
	Trailer namespacePath: #(#PDFtalk).
%
# Define class CrossReferenceSection
DoIt
FileEntity
	subclass: 'CrossReferenceSection'
	instVarNames: #(subsections)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CrossReferenceSection category: 'PDFtalk Files'.
	CrossReferenceSection comment: 'A Cross-Reference Section of the cross-reference table as defined in PDF 32000_2008.pdf pp. 40.

Each cross-reference section shall begin with a line containing the keyword xref. Following this line shall be one or more cross-reference subsections, which may appear in any order. For a file that has never been incrementally updated, the cross-reference section shall contain only one subsection, whose object numbering begins at 0.'.
	CrossReferenceSection namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
classmethod: CrossReference
type
	"<Integer>
	Each entry in a cross-reference stream shall have one or more fields, the first of which designates the entryâs type.
	In PDF 1.5 through PDF 1.7, only types 0, 1, and 2 are allowed. Any other value shall be interpreted as a reference to the null object, thus permitting new entry types to be defined in the future."

	^self subclassResponsibility
%
category: 'instance creation'
classmethod: CrossReference
asInteger: aByteArray
	"<Integer>"

	^aByteArray inject: 0 into: [:int :byte | int * 256 + byte]
%
classmethod: CrossReference
id: idObjectId value: valueInteger
	| inst |
	inst := self new.
	inst initializeId: idObjectId value: valueInteger.
	^inst
%
classmethod: CrossReference
number: numberInteger field1: field1ByteArray field2: field2ByteArray field3: field3ByteArray
	"this is called when creating an instance from a cross-reference stream"

	| aType0To2 subclass |
	aType0To2 := self asInteger: field1ByteArray.
	subclass := self subclassTyped: aType0To2.
	^subclass
		id: (ObjectId number: numberInteger generation: (self asInteger: field3ByteArray))
		value: (self asInteger: field2ByteArray)
%
classmethod: CrossReference
subclassFor: aCharacter
	"<CrossReference class>"

	aCharacter == $n ifTrue: [
		^UsedReference].
	aCharacter == $f ifTrue: [
		^FreeReference].
	FileError raiseSignal: 'Wrong format of cross-reference'
%
classmethod: CrossReference
subclassTyped: aType0To2
	^(Array
		with: FreeReference
		with: UsedReference
		with: StreamReference) at: aType0To2 + 1
%
category: 'reading'
classmethod: CrossReference
permittedLineEnds
	"<Collection of: String>"

	^Set
		with: (String
			with: Character space
			with: Character cr)
		with: (String
			with: Character space
			with: Character lf)
		with: (String
			with: Character cr
			with: Character lf)
%
classmethod: CrossReference
read: number from: aParser
	"<CrossReference>"

	| value generation subclass |
	value := (aParser next: 10) asNumber.
	aParser next = Character space ifFalse: [
		ReadError raiseSignal: 'Wrong format of cross-reference'].
	generation := (aParser next: 5) asNumber.
	aParser next = Character space ifFalse: [
		ReadError raiseSignal: 'Wrong format of cross-reference'].
	subclass := self subclassFor: aParser next.
	value isZero ifTrue: [
		subclass := FreeReference].
	(self permittedLineEnds includes: (aParser next: 2)) ifFalse: [
		ReadError raiseSignal: 'Wrong format of cross-reference'].
	^subclass id: (ObjectId number: number generation: generation) value: value
%
category: 'specification'
classmethod: CrossReference
localSpecification
	<constant: #id class: #(#ObjectId) comment: 'the object id'>
	<constant: #value class: #(#Core #Integer) comment: 'offset or object number. 10-digit number in PDF'>
%
category: 'accessing'
method: CrossReference
generation
	"<Integer>
	generation number. 5-digit number in PDF"

	^self id generation
%
method: CrossReference
generationString
	"<String>
	5 digits padded with $0 at the beginning"

	^'00000' , self generation printString last: 5
%
method: CrossReference
id
	"<ObjectId>
	the object id"

	^id
%
method: CrossReference
keyword
	"<String>"

	^self subclassResponsibility
%
method: CrossReference
number
	"<Integer>
	the object number"

	^self id number
%
method: CrossReference
type
	^self class type
%
method: CrossReference
value
	"<Integer>
	offset or object number. 10-digit number in PDF"

	^value
%
method: CrossReference
valueString
	"<String>
	10 digits padded with $0 at the beginning"

	^'0000000000' , self value printString last: 10
%
category: 'comparing'
method: CrossReference
matches: anObjectId
	^self number = anObjectId number
%
category: 'initialize-release'
method: CrossReference
initializeId: idObjectId value: valueInteger
	id := idObjectId.
	value := valueInteger.
	self beImmutable
%
category: 'printing'
method: CrossReference
printOn: aStream
	aStream
		nextPutAll: self valueString;
		space;
		nextPutAll: self generationString;
		space;
		nextPutAll: self keyword
%
method: CrossReference
printvalueWith: printer
	| args |
	args := OrderedCollection new.
	args add: (printer constant: 'id' value: self id).
	args add: (printer constant: 'value' value: self value).
	^printer printvalue: self arguments: args
%
category: 'reading'
method: CrossReference
readIndirectObjectWith: aFile
	"<PDFObject | nil>"

	^nil
%
category: 'writing'
method: CrossReference
writePDFOn: aWriter indent: anInteger
	aWriter
		nextPutAll: self valueString asByteArray;
		space;
		nextPutAll: self generationString asByteArray;
		space;
		nextPutAll: self keyword asByteArray;
		space;
		cr
%
category: 'instance creation'
classmethod: CrossReferences
crossReferenceSection: aCrossReferenceSection trailer: aTrailer
	^self
		crossReferenceSection: aCrossReferenceSection
		trailer: aTrailer
		previous: nil
		stream: nil
%
classmethod: CrossReferences
crossReferenceSection: aCrossReferenceSection trailer: aTrailer previous: previousCrossReferences
	^self
		crossReferenceSection: aCrossReferenceSection
		trailer: aTrailer
		previous: previousCrossReferences
		stream: nil
%
classmethod: CrossReferences
crossReferenceSection: aCrossReferenceSection trailer: aTrailer previous: previousCrossReferences stream: aCrossReferenceStream
	| inst |
	inst := self new.
	inst
		initializeCrossReferenceSection: aCrossReferenceSection
		trailer: aTrailer
		previous: previousCrossReferences
		stream: aCrossReferenceStream.
	^inst
%
category: 'reading'
classmethod: CrossReferences
readWith: aFile
	| crossReferenceSection trailer previous stream |
	crossReferenceSection := CrossReferenceSection readFrom: aFile parser.
	trailer := (PDF classAt: #Trailer) readWith: aFile from: aFile parser.
	previous := trailer Prev asSmalltalkValue ifNotNil: [:prevNumber |
		prevNumber isZero ifFalse: [		"some stupid writer put a (/Prev 0) into the Trailer"
			aFile parser position: prevNumber.
			self readWith: aFile]].
	stream := trailer XRefStm asSmalltalkValue ifNotNil: [:xRefStmNumber |
		aFile parser position: xRefStmNumber.
		(PDF classAt: #XRefStream) readWith: aFile].
	^self
		crossReferenceSection: crossReferenceSection
		trailer: trailer
		previous: previous
		stream: stream
%
category: 'accessing'
method: CrossReferences
atNumber: anInteger
	"<CrossReference>"

	^self atNumber: anInteger ifAbsent: [
		FileError raiseSignal: 'Reference with number ' , anInteger printString , ' not found']
%
method: CrossReferences
atNumber: anInteger ifAbsent: zeroArgumentBlock
	"<CrossReference>"

	^self crossReferenceSection atNumber: anInteger ifAbsent: [
		self stream
			ifNotNil: [
			self stream atNumber: anInteger ifAbsent: [
				self previous
					ifNotNil: [
					self previous atNumber: anInteger ifAbsent: zeroArgumentBlock]
					ifNil: [
					zeroArgumentBlock value]]]
			ifNil: [
			self previous
				ifNotNil: [
				self previous atNumber: anInteger ifAbsent: zeroArgumentBlock]
				ifNil: [
				zeroArgumentBlock value]]]
%
method: CrossReferences
crossReferenceAt: anObjectId
	"<CrossReference | nil>"

	^self crossReferenceAt: anObjectId ifAbsent: [nil]
%
method: CrossReferences
crossReferenceAt: anObjectId ifAbsent: zeroArgumentBlock
	"<CrossReference>"

	| unique1 cr unique2 |
	unique1 := 'unique1'.
	cr := self crossReferenceSection crossReferenceAt: anObjectId ifAbsent: [unique1].
	cr == unique1 ifFalse: [
		^cr].
	unique2 := 'unique2'.
	cr := self streamCrossReferenceAt: anObjectId ifAbsent: [unique2].
	cr == unique2 ifFalse: [
		^cr].
	^self previousCrossReferenceAt: anObjectId ifAbsent: zeroArgumentBlock
%
method: CrossReferences
crossReferenceSection
	"<CrossReferenceSection>"

	^crossReferenceSection
%
method: CrossReferences
freeReferences
	| ref freeReferences |
	ref := self atNumber: 0.
	freeReferences := OrderedCollection with: ref.
	[ref value isZero] whileFalse: [
		ref := self atNumber: ref value.
		freeReferences add: ref].
	^freeReferences
%
method: CrossReferences
previous
	"<CrossReferences | XRefStream | nil>
	can be a CrossReferenceStream in a hybid file (see PDF 32000_2008.pdf pp. 51)"

	^previous
%
method: CrossReferences
previousCrossReferenceAt: anObjectId ifAbsent: zeroArgumentBlock
	self previous ifNil: [
		^zeroArgumentBlock value].
	^self previous crossReferenceAt: anObjectId ifAbsent: zeroArgumentBlock
%
method: CrossReferences
references
	"<SequenceableCollection of: CrossReference>"

	| list |
	list := OrderedCollection new.
	self referencesDo: [:ref | list add: ref].
	^list
%
method: CrossReferences
stream
	"<XRefStream | nil>
	a CrossReferenceStream in a hybid file (see PDF 32000_2008.pdf pp. 51)"

	^stream
%
method: CrossReferences
streamCrossReferenceAt: anObjectId ifAbsent: zeroArgumentBlock
	self stream ifNil: [
		^zeroArgumentBlock value].
	^self stream crossReferenceAt: anObjectId ifAbsent: zeroArgumentBlock
%
method: CrossReferences
trailer
	"<Trailer>"

	^trailer
%
method: CrossReferences
usedReferences
	"<SequenceableCollection of: UsedReference>"

	| list |
	list := OrderedCollection new.
	self referencesDo: [:ref |
		(ref isKindOf: UsedReference) ifTrue: [
			list add: ref]].
	^list
%
category: 'comparing'
method: CrossReferences
= anObject
	^self class == anObject class and: [
	self crossReferenceSection = anObject crossReferenceSection and: [
	self trailer = anObject trailer and: [
	self previous = anObject previous and: [
	self stream = anObject stream]]]]
%
method: CrossReferences
hash
	^self crossReferenceSection hash bitXor: (self trailer hash bitXor: (self previous hash bitXor: self stream hash))
%
category: 'enumerating'
method: CrossReferences
referencesDo: oneArgumentBlock
	self crossReferenceSection referencesDo: oneArgumentBlock.
	self stream ifNotNil: [self stream referencesDo: oneArgumentBlock].
	self previous ifNotNil: [self previous referencesDo: oneArgumentBlock]
%
category: 'initialize-release'
method: CrossReferences
initializeCrossReferenceSection: aCrossReferenceSection trailer: aTrailer previous: previousCrossReferences stream: aCrossReferenceStream
	crossReferenceSection := aCrossReferenceSection.
	trailer := aTrailer.
	previous := previousCrossReferences.
	stream := aCrossReferenceStream
%
category: 'writing'
method: CrossReferences
writePDFOn: aWriter indent: anInteger
	self crossReferenceSection writePDFOn: aWriter indent: anInteger.
	aWriter cr.
	self trailer writePDFOn: aWriter indent: anInteger
%
category: 'instance creation'
classmethod: CrossReferenceSection
initialOn: someCrossReferences
	"<CrossReferenceSection>
	For a PDF that holds all references in only one CrossReferenceSection in only one CrossReferenceSubsection"

	^self subsections: (Array with: (CrossReferenceSubsection initialOn: someCrossReferences))
%
classmethod: CrossReferenceSection
subsections: subsectionsArray
	| inst |
	inst := self new.
	inst initializeSubsections: subsectionsArray.
	^inst
%
category: 'reading'
classmethod: CrossReferenceSection
readFrom: aParser
	"<CrossReferenceSection>"

	| subsections |
	subsections := OrderedCollection new.
	aParser expectToken: #xref.
	aParser skipWhitespace.
	[
	| char |
	char := aParser peek.
	char notNil and: [
	char isDigit]] whileTrue: [
			subsections add: (CrossReferenceSubsection readFrom: aParser)].
	^self subsections: subsections asArray
%
category: 'accessing'
method: CrossReferenceSection
atNumber: anInteger ifAbsent: zeroArgumentBlock
	"<CrossReference>"

	self subsections do: [:subsection |
		(subsection atNumber: anInteger ifAbsent: [nil]) ifNotNil: [:ref |
			^ref]].
	^zeroArgumentBlock value
%
method: CrossReferenceSection
crossReferenceAt: anObjectId ifAbsent: zeroArgumentBlock
	"<CrossReference>"

	| uniqueObject |
	uniqueObject := 'unique'.
	self subsections do: [:subsection |
		| cr |
		cr := subsection crossReferenceAt: anObjectId ifAbsent: [uniqueObject].
		cr == uniqueObject ifFalse: [
			^cr]].
	^zeroArgumentBlock value
%
method: CrossReferenceSection
subsections
	"<SequenceableCollection of: CrossReferenceSubsection>"

	^subsections ifNil: [subsections := OrderedCollection new]
%
category: 'comparing'
method: CrossReferenceSection
= anObject
	^self class == anObject class and: [
	self subsections hasEqualElements: anObject subsections]
%
method: CrossReferenceSection
hash
	^self subsections inject: 0 into: [:hash :subsection | hash bitXor: subsection hash]
%
category: 'enumerating'
method: CrossReferenceSection
referencesDo: oneArgumentBlock
	self subsections do: [:subsection | subsection referencesDo: oneArgumentBlock]
%
category: 'initialize-release'
method: CrossReferenceSection
initializeSubsections: subsectionsArray
	subsections := subsectionsArray
%
category: 'printing'
method: CrossReferenceSection
printOn: aStream
	aStream
		nextPutAll: self class name asString;
		nextPut: $(;
		nextPutAll: self subsections size printString;
		nextPut: $)
%
category: 'writing'
method: CrossReferenceSection
writePDFOn: aPDFWritestream indent: integer
	self subsections do: [:subsection | subsection writePDFOn: aPDFWritestream indent: integer]
%
category: 'instance creation'
classmethod: CrossReferenceSubsection
firstNumber: firstNumberInteger entries: entriesArray
	| inst |
	inst := self new.
	inst initializeFirstNumber: firstNumberInteger entries: entriesArray.
	^inst
%
classmethod: CrossReferenceSubsection
initialOn: someCrossReferences
	"<CrossReferenceSubsection>
	For a PDF that holds all references in only one CrossReferenceSection in only one CrossReferenceSubsection"

	^self
		firstNumber: 0
		entries: (Array with: FreeReference initial) , someCrossReferences
%
category: 'reading'
classmethod: CrossReferenceSubsection
readFrom: aParser
	"<CrossReferenceSubsection>"

	| firstObjectNumber count |
	firstObjectNumber := aParser nextInteger.
	count := aParser nextInteger.
	aParser skipWhitespace.
	^self
		firstNumber: firstObjectNumber
		entries: ((1 to: count) collect: [:i |
			CrossReference read: firstObjectNumber + i - 1 from: aParser]) asArray
%
category: 'accessing'
method: CrossReferenceSubsection
atNumber: anInteger ifAbsent: zeroArgumentBlock
	"<CrossReference>"

	(anInteger between: self firstNumber and: self lastNumber) ifFalse: [
		^zeroArgumentBlock value].
	^self entries at: anInteger - self firstNumber + 1
%
method: CrossReferenceSubsection
crossReferenceAt: anObjectId ifAbsent: zeroArgumentBlock
	"<CrossReference>"

	| entry |
	(anObjectId number between: self firstNumber and: self lastNumber) ifFalse: [
		^zeroArgumentBlock value].
	entry := self entries at: anObjectId number - self firstNumber + 1.
	(entry matches: anObjectId) ifTrue: [
		^entry].
	^zeroArgumentBlock value
%
method: CrossReferenceSubsection
entries
	"<SequenceableCollection of: CrossReference>"

	^entries ifNil: [entries := OrderedCollection new]
%
method: CrossReferenceSubsection
firstNumber
	"<Integer>
	the object number of the first object in this subsection"

	^firstNumber
%
method: CrossReferenceSubsection
lastNumber
	^self firstNumber + self entries size - 1
%
category: 'comparing'
method: CrossReferenceSubsection
= anObject
	^self class == anObject class and: [
	self firstNumber = anObject firstNumber and: [
	self entries hasEqualElements: anObject entries]]
%
method: CrossReferenceSubsection
entriesHash
	^self entries inject: 0 into: [:hash :entry | hash bitXor: entry hash]
%
method: CrossReferenceSubsection
hash
	^self firstNumber hash bitXor: self entriesHash
%
category: 'enumerating'
method: CrossReferenceSubsection
referencesDo: oneArgumentBlock
	self entries do: [:entry | oneArgumentBlock value: entry]
%
category: 'initialize-release'
method: CrossReferenceSubsection
initializeFirstNumber: firstNumberInteger entries: entriesArray
	firstNumber := firstNumberInteger.
	entries := entriesArray
%
category: 'printing'
method: CrossReferenceSubsection
printOn: aStream
	aStream
		nextPutAll: self class name asString;
		nextPut: $(;
		nextPutAll: self firstNumber printString;
		space;
		nextPutAll: self entries size printString;
		nextPut: $)
%
category: 'writing'
method: CrossReferenceSubsection
writePDFOn: aWriter indent: anInteger
	aWriter
		nextPutAll: self firstNumber printString asByteArray;
		space;
		nextPutAll: self entries size printString asByteArray;
		cr.
	self entries do: [:entry | entry writePDFOn: aWriter indent: anInteger]
%
category: 'accessing'
classmethod: DocumentInformation
pdfTypeDefinition

	^PDFTypeDefinition
		name: #DocumentInformation
		supertype: #Dictionary
		section: '14.3.3'
		documentation: 'The optional Info entry in the trailer of a PDF file (see Trailer) shall hold a document information dictionary containing metadata for the document.
Any entry whose value is not known should be omitted from the dictionary rather than included with an empty string as its value.

Some conforming readers may choose to permit searches on the contents of the document information dictionary.
To facilitate browsing and editing, all keys in the dictionary shall be fully spelled out, not abbreviated.
New keys should be chosen with care so that they make sense to users.

The value associated with any key not specifically mentioned in Table 317 shall be a text string.

Although conforming readers may store custom metadata in the document information dictionary, they may not store private content or structural information there.
Such information shall be stored in the document catalogue instead (see Catalog).'
%
category: 'instance creation'
classmethod: DocumentInformation
empty
	"<DocumentInformation>
	basic infos of a generated PDF.
	The following information should be added by the application:
		#Title a Textstring with the documentâs title.
		#Author a Textstring with the name of the person who created the document.
		#Creator a Textstring with the name of the application that created the document.
	Also, #Subject and #Keywords may be useful"

	| inst timestamp |
	inst := super empty.
	timestamp := Timestamp now.
	inst at: #CreationDate put: timestamp.
	inst at: #ModDate put: timestamp.
	inst at: #Producer put: PDF producerText.
	^inst
%
category: 'accessing entries'
method: DocumentInformation
Author
	<type: #String>
	<attribute: 2 documentation: 'The name of the person who created the document.'>
	^self objectAt: #Author ifAbsent: ['' asPDF]
%
method: DocumentInformation
CreationDate
	<type: #Date>
	<attribute: 7 documentation: 'The date and time the document was created, in human-readable form.'>
	^self objectAt: #CreationDate ifAbsent: [nil]
%
method: DocumentInformation
Creator
	<type: #String>
	<attribute: 5 documentation: 'If the document was converted to PDF from another format, the name of the conforming product that created the original document from which it was converted.'>
	^self objectAt: #Creator ifAbsent: ['' asPDF]
%
method: DocumentInformation
GTS_PDFXVersion
	<type: #String>
	<version: 1 dot: 3>
	<attribute: 10 documentation: 'PDF/X conformance level identifier
	The value of the pdfxid:GTS_PDFXVersion property for PDF/X-4 files prepared in accordance with this part of ISO 15930 is PDF/X-4.'>
	^self objectAt: #GTS_PDFXVersion ifAbsent: ['' asPDF]
%
method: DocumentInformation
Keywords
	<type: #String>
	<version: 1 dot: 1>
	<attribute: 4 documentation: 'Keywords associated with the document.'>
	^self objectAt: #Keywords ifAbsent: ['' asPDF]
%
method: DocumentInformation
ModDate
	<type: #Date>
	<version: 1 dot: 1>
	<attribute: 8 documentation: '(Required if PieceInfo is present in the document catalogue) 
The date and time the document was most recently modified, in human-readable form.'>
	^self objectAt: #ModDate ifAbsent: [nil]
%
method: DocumentInformation
Producer
	<type: #String>
	<attribute: 6 documentation: 'If the document was converted to PDF from another format, the name of the conforming product that converted it to PDF.'>
	^self objectAt: #Producer ifAbsent: ['' asPDF]
%
method: DocumentInformation
Subject
	<type: #String>
	<version: 1 dot: 1>
	<attribute: 3 documentation: 'The subject of the document.'>
	^self objectAt: #Subject ifAbsent: ['' asPDF]
%
method: DocumentInformation
Title
	<type: #String>
	<attribute: 1 documentation: 'The documentâs title.'>
	^self objectAt: #Title ifAbsent: ['' asPDF]
%
method: DocumentInformation
Trapped
	<type: #Name>
	<version: 1 dot: 3>
	<attribute: 9 documentation: 'A name object indicating whether the document has been modified to include trapping information:
	True		The document has been fully trapped; no further trapping shall be needed. This shall be the name True, not the boolean value true.
	False		The document has not yet been trapped. This shall be the name False, not the boolean value false.
	Unknown	Either it is unknown whether the document has been trapped or it has been partly but not yet fully trapped; some additional trapping may still be needed.

NOTE
The value of this entry may be set automatically by the software creating the documentâs trapping information, or it may be known only to a human operator and entered manually.'>
	^self objectAt: #Trapped ifAbsent: [#Unknown asPDF]
%
category: 'accessing'
classmethod: Encryption
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Encryption
		supertype: #Dictionary
		version: #(1 1)
		section: '7.6'
		documentation: 'A PDF document can be encrypted to protect its contents from unauthorized access.
Encryption applies to all strings and streams in the documents PDF file, with the following exceptions:
	â¢ The values for the ID entry in the trailer
	â¢ Any strings in an Encrypt dictionary
	â¢ Any strings that are inside streams such as content streams and compressed object streams, which themselves are encrypted

Encryption is not applied to other object types such as integers and boolean values, which are used primarily to convey information about the documents structure rather than its contents.
Leaving these values unencrypted allows random access to the objects within a document, whereas encrypting the strings and streams protects the documents contents.

When a PDF stream object refers to an external file, the streamâs contents shall not be encrypted, since they are not part of the PDF file itself.
However, if the contents of the stream are embedded within the PDF file, they shall be encrypted like any other stream in the file.
Beginning with PDF 1.5, embedded files can be encrypted in an otherwise unencrypted document.

Encryption-related information shall be stored in a documentâs encryption dictionary, which shall be the value of the Encrypt entry in the documentâs trailer dictionary.
The absence of this entry from the trailer dictionary means that a conforming reader shall consider the document to be not encrypted.'
%
category: 'instance creation'
classmethod: Encryption
on: aDictionary
	(aDictionary at: #Filter) = #Standard asPDF ifTrue: [
		^(PDF classAt: #StandardEncryption) content: aDictionary].
	^self content: aDictionary
%
category: 'accessing entries'
method: Encryption
CF
	<type: #Dictionary>
	<version: 1 dot: 5>
	<attribute: 5 documentation: '(meaningful only when the value of V is 4)
A dictionary whose keys shall be crypt filter names and whose values shall be the corresponding crypt filter dictionaries.
Every crypt filter used in the document shall have an entry in this dictionary, except for the standard crypt filter names.

The conforming reader shall ignore entries in CF dictionary with the keys equal to those listed in Table 26 and use properties of the respective standard crypt filters.'>
	^self objectAt: #CF ifAbsent: [PDF Dictionary empty]
%
method: Encryption
EFF
	<type: #Name>
	<version: 1 dot: 6>
	<attribute: 8 documentation: '(meaningful only when the value of V is 4)
The name of the crypt filter that shall be used when encrypting embedded file streams that do not have their own crypt filter specifier; it shall correspond to a key in the CFdictionary or a standard crypt filter name.

This entry shall be provided by the security handler.
Conforming writers shall respect this value when encrypting embedded files, except for embedded file streams that have their own crypt filter specifier.
If this entry is not present, and the embedded file stream does not contain a crypt filter specifier, the stream shall be encrypted using the default stream crypt filter specified by StmF.'>
	^self objectAt: #EFF ifAbsent: [#Identity asPDF]
%
method: Encryption
Filter
	<type: #Name>
	<required>
	<attribute: 1 documentation: 'The name of the preferred security handler for this document.
It shall be the name of the security handler that was used to encrypt the document.
If SubFilter is not present, only this security handler shall be used when opening the document.
If it is present, a conforming reader can use any security handler that implements the format specified by SubFilter.

Standard shall be the name of the built-in password-based security handler.
Names for other security handlers may be registered.'>
	^self objectAt: #Filter
%
method: Encryption
Length
	<type: #Integer>
	<version: 1 dot: 4>
	<attribute: 4 documentation: 'The length of the encryption key, in bits.
The value shall be a multiple of 8, in the range 40 to 128.
Default value: 40.'>
	^self objectAt: #Length ifAbsent: [40 asPDF]
%
method: Encryption
StmF
	<type: #Name>
	<version: 1 dot: 5>
	<attribute: 6 documentation: '(meaningful only when the value of V is 4)
The name of the crypt filter that shall be used by default when decrypting streams.
The name shall be a key in the CF dictionary or a standard crypt filter name.
All streams in the document, except for cross-reference streams or streams that have a Crypt entry in their Filterarray, shall be decrypted by the security handler, using this crypt filter.
Default value: Identity.'>
	^self objectAt: #StmF ifAbsent: [#Identity asPDF]
%
method: Encryption
StrF
	<type: #Name>
	<version: 1 dot: 5>
	<attribute: 7 documentation: '(meaningful only when the value of V is 4)
The name of the crypt filter that shall be used when decrypting all strings in the document.
The name shall be a key in the CF dictionary or a standard crypt filter name.
Default value: Identity.'>
	^self objectAt: #StrF ifAbsent: [#Identity asPDF]
%
method: Encryption
SubFilter
	<type: #Name>
	<version: 1 dot: 3>
	<attribute: 2 documentation: 'A name that completely specifies the format and interpretation of the contents of the encryption dictionary.
It allows security handlers other than the one specified by Filter to decrypt the document.
If this entry is absent, other security handlers shall not decrypt the document.
NOTE
This entry was introduced in PDF 1.3 to support the use of public-key cryptography in PDF files;
however, it was not incorporated into the PDF Reference until the fourth edition (PDF 1.5).'>
	^self objectAt: #SubFilter ifAbsent: [nil]
%
method: Encryption
V
	<type: #Integer>
	<version: 1 dot: 4 ifValue: 2>
	<version: 1 dot: 4 ifValue: 3>
	<version: 1 dot: 5 ifValue: 4>
	<attribute: 3 documentation: 'A code specifying the algorithm to be used in encrypting and decrypting the document:
	0	An algorithm that is undocumented. This value shall not be used.
	1	"Algorithm 1: Encryption of data using the RC4 or AES algorithms" in 7.6.2, "General Encryption Algorithm," with an encryption key length of 40 bits.
	2	(PDF 1.4) "Algorithm 1: Encryption of data using the RC4 or AES algorithms"in 7.6.2, "General Encryption Algorithm," but permitting encryption key lengths greater than 40 bits.
	3	(PDF 1.4) An unpublished algorithm that permits encryption key lengths ranging from 40 to 128 bits. This value shall not appear in a conforming PDF file.
	4	(PDF 1.5) The security handler defines the use of encryption and decryption in the document, using the rules specified by the CF, StmF, and StrF entries.
The default value if this entry is omitted shall be 0, but when present should be a value of 1 or greater.'>
	^self objectAt: #V ifAbsent: [0 asPDF]
%
category: 'implementation limits'
classmethod: File
defaultMillimetersForUserSpaceUnit
	"The minimum page size should be 3 by 3 units in default user space; the maximum should be 14,400 by 14,400 units. In versions of PDF earlier than 1.6, the size of the default user space unit was fixed at 1.72 inch, yielding a minimum of approximately 0.04 by 0.04 inch and a maximum of 200 by 200 inches. Beginning with PDF 1.6, the size of the unit may be set on a page-by-page basis; the default remains at 1/72 inch."

	^25.4 / 72
%
classmethod: File
defaultThumbnailScale
	"Thumbnail images should be no larger than 106 by 106 samples, and should be created at one-eighth scale for 8.5-by-11-inch and A4-size pages."

	^1 / 8
%
classmethod: File
maxCID
	"Maximum value of a CID (character identifier)."

	^65535
%
classmethod: File
maxDeviceNComponents
	"Maximum number of colorants or tint components in a DeviceNcolour space."

	^32
%
classmethod: File
maxMagnificationPercent
	"The magnification factor of a view should be constrained to be between approximately 8 percent and 6400 percent."

	^6400
%
classmethod: File
maxObjects
	"Maximum number of indirect objects in a PDF file."

	^8388607
%
classmethod: File
maxPageExtent
	"The minimum page size should be 3 by 3 units in default user space; the maximum should be 14,400 by 14,400 units. In versions of PDF earlier than 1.6, the size of the default user space unit was fixed at 1.72 inch, yielding a minimum of approximately 0.04 by 0.04 inch and a maximum of 200 by 200 inches. Beginning with PDF 1.6, the size of the unit may be set on a page-by-page basis; the default remains at 1/72 inch."

	^14400 @ 14400
%
classmethod: File
maxThumbnailExtent
	"Thumbnail images should be no larger than 106 by 106 samples, and should be created at one-eighth scale for 8.5-by-11-inch and A4-size pages."

	^106 @ 106
%
classmethod: File
minMagnificationPercent
	"The magnification factor of a view should be constrained to be between approximately 8 percent and 6400 percent."

	^8
%
classmethod: File
minPageExtent
	"The minimum page size should be 3 by 3 units in default user space; the maximum should be 14,400 by 14,400 units. In versions of PDF earlier than 1.6, the size of the default user space unit was fixed at 1.72 inch, yielding a minimum of approximately 0.04 by 0.04 inch and a maximum of 200 by 200 inches. Beginning with PDF 1.6, the size of the unit may be set on a page-by-page basis; the default remains at 1/72 inch."

	^3 @ 3
%
classmethod: File
qNestingLimit
	"NOTE
Maximum depth of graphics state nesting by q and Q operators.
This is not a limit as such, but arises from the fact that q and Q are implemented by the PostScript gsave and grestore operators when generating PostScript output."

	^28
%
category: 'reading'
classmethod: File
binaryReadStreamOn: aFilename
	^GsFile open: aFilename mode: 'rb' onClient: false
%
classmethod: File
read: aFilename
	"<File>"

	| stream |
	stream := self binaryReadStreamOn: aFilename.
	^[self readFrom: stream] ensure: [stream close]
%
classmethod: File
readFrom: aBinaryReadStream
	"<File>"

	| inst |
	inst := self new.
	inst initializeFrom: aBinaryReadStream.
	^inst
%
category: 'accessing'
method: File
crossReferences
	"<CrossReferences | CrossReferenceStream>"

	^crossReferences
%
method: File
declaredVersion
	"<Version>"

	| versionName numbers |
	versionName := self root Version content ifNil: [
		^self header version].
	numbers := (versionName content tokensBasedOn: $.) collect: #asNumber.
	^self header version max: (Version major: numbers first minor: numbers last)
%
method: File
firstPage
	"<Page>"

	^self trailer firstPage
%
method: File
header
	"<PDFHeader>"

	^header
%
method: File
objects
	"<Dictionary key: Point value: Reference>"

	^objects ifNil: [objects := Dictionary new]
%
method: File
parser
	"<Parser>"

	^parser
%
method: File
referenceAt: anObjectId
	"<Reference>
	used when reading"

	^self objects at: anObjectId ifAbsentPut: [
		(PDF classAt: #Reference) id: anObjectId referent: (FileReference id: anObjectId file: self)]
%
method: File
root
	"<Catalog>"

	^self trailer Root
%
method: File
trailer
	"<Trailer>"

	^trailer
%
method: File
usedReferences
	"<SequenceableCollection of: UsedReference>"

	^self crossReferences usedReferences
%
category: 'announcements'
method: File
subscriptionRegistryOrNil
	^subscriptionRegistry
%
category: 'initialize-release'
method: File
initializeFrom: aBinaryReadStream
	parser := FileParser onStream: aBinaryReadStream.
	header := Header version: self parser readHeaderVersion.
	crossReferences := self readCrossReferences.
	trailer := self crossReferences trailer.
	self trailer Encrypt notEmpty ifTrue: [
		parser := self parser forEncryption]
%
method: File
release
	subscriptionRegistry release.
	subscriptionRegistry := nil.
	self parser ifNotNil: [:aParser |
		aParser release.
		parser := nil].
	super release
%
category: 'printing'
method: File
printOn: aStream
	aStream
		nextPutAll: self header printString;
		nextPut: $[;
		nextPutAll: self trailer Size printString;
		nextPut: $]
%
category: 'private'
method: File
postCopy
	super postCopy.
	subscriptionRegistry := nil
%
method: File
subscriptionRegistry: aSubscriptionRegistry
	subscriptionRegistry := aSubscriptionRegistry
%
category: 'reading'
method: File
crossReferenceAtId: anObjectId
	"<CrossReference | nil>
	pointer to the object in the file or stream"

	^self crossReferences crossReferenceAt: anObjectId
%
method: File
indirectObjectFrom: aParser
	"<PDFObject | nil>
	read a PDF object off the aStream.
	Answer the PDF object.
	The top level call to read an indirect object.
	A Reference only is not allowed"

	| object |
	object := aParser readObjectWith: self.
	object isDirect ifFalse: [
		TypeError raiseSignal: 'References to References are not permitted.'].
	^object
%
method: File
objectStreamAt: aStreamId
	"<ObjectStream>"

	^self objectStreams at: aStreamId ifAbsentPut: [
		(PDF classAt: #ObjectStream) newFrom: (self referenceAt: (ObjectId number: aStreamId)) referent]
%
method: File
objectStreams
	"<Dictionary key: Integer value: ObjectStream>"

	^objectStreams ifNil: [objectStreams := Dictionary new]
%
method: File
readCrossReferences
	self parser setPositionToXRef.
	self parser peek isDigit ifTrue: [
		^(PDF classAt: #XRefStream) readWith: self].
	^CrossReferences readWith: self
%
method: File
readObject
	"<PDFObject | nil>
	read a PDF object off the aStream.
	Answer the PDF object"

	^self parser readObjectWith: self
%
method: File
announce: anAnnouncement
	"do nothing on Gemstone - only used for UI feedback"

%
category: 'testing'
method: File
isEncrypted
	^self parser isForEncrypted
%
category: 'accessing'
classmethod: FileIdentifier
numberOfAttributes
	^2
%
classmethod: FileIdentifier
pdfTypeDefinition
	^PDFTypeDefinition
		name: #FileIdentifier
		supertype: #Object
		version: #(1 1)
		section: '14.4'
		documentation: '
PDF files may contain references to other PDF files. 
Simply storing a file name, however, even in a platform-independent format, does not guarantee that the file can be found.
Even if the file still exists and its name has not been changed, different server software applications may identify it in different ways.
Servers running on DOS platforms convert all file names to 8 characters and a 3-character extension.
Different servers may use different strategies for converting longer file names to this format.

External file references may be made more reliable by including a file identifier (PDF 1.1) in the file and using it in addition to the normal platform-based file designation.
Matching the identifier in the file reference with the one in the file confirms whether the correct file was found.

File identifiers shall be defined by the optional ID entry in a PDF fileâs trailer dictionary (see Trailer).
The ID entry is optional but should be used.
The value of this entry shall be an array of two byte strings.
The first byte string shall be a permanent identifier based on the contents of the file at the time it was originally created and shall not change when the file is incrementally updated.
The second byte string shall be a changing identifier based on the fileâs contents at the time it was last updated.
When a file is first written, both identifiers shall be set to the same value.
If both identifiers match when a file reference is resolved, it is very likely that the correct and unchanged file has been found.
If only the first identifier matches, a different version of the correct file has been found.

To help ensure the uniqueness of file identifiers, they should be computed by means of a message digest algorithm such as MD5, using the following information:
	â¢ The current time
	â¢ A string representation of the fileâs location, usually a pathname
	â¢ The size of the file in bytes
	â¢ The values of all entries in the fileâs document information dictionary

NOTE
The calculation of the file identifier need not be reproducible; all that matters is that the identifier is likely to be unique.
For example, two implementations of the preceding algorithm might use different formats for the current time, causing them to produce different file identifiers for the same file created at the same time, but the uniqueness of the identifier is not affected.
'
%
category: 'accessing entries'
method: FileIdentifier
changingID
	<type: #String>
	<required>
	<attribute: 2 documentation: 'The second byte string shall be a changing identifier based on the fileâs contents at the time it was last updated'>
	^self objectAt: 2
%
method: FileIdentifier
permanentID
	<type: #String>
	<required>
	<attribute: 1 documentation: 'The first byte string shall be a permanent identifier based on the contents of the file at the time it was originally created and shall not change when the file is incrementally updated'>
	^self objectAt: 1
%
category: 'writing'
method: FileIdentifier
writePDFOn: aWriter indent: anInteger
	aWriter
		nextPutByte: $[ asInteger;
		tab.
	self content do: [:element | aWriter nextPutHexString: element] separatedBy: [
		aWriter cr.
		anInteger + 1 timesRepeat: [aWriter tab]].
	aWriter nextPutByte: $] asInteger
%
category: 'accessing'
classmethod: FreeReference
type
	"Type 0 entries define the linked list of free objects (corresponding to f entries in a cross-reference table).
	Field 2: The object number of the next free object.
	Field 3: The generation number to use if this object number is used again."

	^0
%
category: 'instances'
classmethod: FreeReference
initial
	^self id: (ObjectId number: 0 generation: 65535) value: 0
%
category: 'accessing'
method: FreeReference
keyword
	^'f'
%
category: 'comparing'
method: FreeReference
matches: anObjectId
	^(super matches: anObjectId) and: [
	self generation - 1 = anObjectId generation]
%
category: 'instance creation'
classmethod: Header
version: aVersion
	| inst |
	inst := self new.
	inst initializeVersion: aVersion.
	^inst
%
category: 'accessing'
method: Header
version
	"<Version>"

	^version
%
category: 'comparing'
method: Header
= anObject
	^self class = anObject class and: [
	self version = anObject version]
%
method: Header
hash
	^self version hash
%
category: 'initialize-release'
method: Header
initializeVersion: aVersion
	version := aVersion
%
category: 'writing'
method: Header
writePDFOn: aWriter indent: anInteger
	aWriter nextPutByte: $% asInteger.
	self version writePDFOn: aWriter indent: 0
%
category: 'accessing'
classmethod: ObjectStream
pdfTypeDefinition
	^PDFTypeDefinition
		name: #ObjectStream
		supertype: #Stream
		version: #(1 5)
		section: '7.6.3.2'
		documentation: 'An object stream, is a stream object in which a sequence of indirect objects may be stored, as an alternative to their being stored at the outermost file level.'
%
classmethod: ObjectStream
type
	^#ObjStm
%
category: 'accessing'
method: ObjectStream
offsetAt: zeroBasedIndex
	"<Integer>"

	^(self offsets atIndex: zeroBasedIndex + 1) value
%
method: ObjectStream
offsets
	"<OrderedDictionary key: Integer value: Integer>
	The key is the object number n refered by 'n 0 R'
	The value is the offset from the beginning of the internal stream"

	^offsets ifNil: [
		parser := nil.
		offsets := self readOffsets]
%
method: ObjectStream
parser
	^parser ifNil: [parser := ObjectStreamParser onString: self internal]
%
category: 'accessing entries'
method: ObjectStream
Extends
	<typeIndirect: #ObjectStream>
	<attribute: 3 documentation: 'A reference to another object stream, of which the current object stream shall be considered an extension.
Both streams are considered part of a collection of object streams.
A given collection consists of a set of streams whose Extends links form a directed acyclic graph.'>
	^self objectAt: #Extends ifAbsent: [nil]
%
method: ObjectStream
First
	<type: #Integer>
	<required>
	<attribute: 2 documentation: 'The byte offset in the decoded stream of the first compressed object.'>
	^self objectAt: #First
%
method: ObjectStream
N
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'The number of indirect objects stored in the stream.'>
	^self objectAt: #N
%
category: 'reading'
method: ObjectStream
readAt: zeroBasedIndex with: aFile
	"<PDFObject>"

	self encrypted ifTrue: [
		^nil].
	^self parser pickObjectAt: (self offsetAt: zeroBasedIndex) with: aFile
%
method: ObjectStream
readOffsets
	| dict first |
	dict := Valuemap new.
	first := self First asSmalltalkValue.
	self N asSmalltalkValue timesRepeat: [
		| objectNumber offset |
		objectNumber := self parser nextInteger.
		offset := self parser nextInteger.
		dict at: objectNumber put: first + offset].
	^dict
%
category: 'accessing'
classmethod: StandardEncryption
pdfTypeDefinition
	^PDFTypeDefinition
		name: #StandardEncryption
		supertype: #Dictionary
		version: #(1 1)
		section: '7.6.3.2'
		documentation: 'PDFâs standard security handler shall allow access permissions and up to two passwords to be specified for a document: an owner password and a user password.
An applicationâs decision to encrypt a document shall be based on whether the user creating the document specifies any passwords or access restrictions.'
%
category: 'accessing entries'
method: StandardEncryption
EncryptMetadata
	<type: #Boolean>
	<version: 1 dot: 5>
	<attribute: 5 documentation: '(meaningful only when the value of V is 4)
Indicates whether the document-level metadata stream shall be encrypted.
Conforming products should respect this value.
Default value: true.'>
	^self objectAt: #EncryptMetadata ifAbsent: [true]
%
method: StandardEncryption
O
	<typeDirect: #String>
	<required>
	<attribute: 2 documentation: 'A 32-byte string, based on both the owner and user passwords, that shall be used in computing the encryption key and in determining whether a valid owner password was entered.'>
	^self objectAt: #O
%
method: StandardEncryption
P
	<type: #Integer>
	<required>
	<attribute: 4 documentation: 'A set of flags specifying which operations shall be permitted when the document is opened with user access.'>
	^self objectAt: #P
%
method: StandardEncryption
R
	<type: #Number>
	<required>
	<attribute: 1 documentation: 'A number specifying which revision of the standard security handler shall be used to interpret this dictionary:
	2	if the document is encrypted with a V value less than 2 and does not have any of the access permissions set to 0 (by means of the P entry, below) that are designated âSecurity handlers of revision 3 or greaterâ
	3	if the document is encrypted with a V value of 2 or 3, or has any âSecurity handlers of revision 3 or greaterâ access permissions set to 0
	4	if the document is encrypted with a V value of 4'>
	^self objectAt: #R
%
method: StandardEncryption
U
	<typeDirect: #String>
	<required>
	<attribute: 3 documentation: 'A 32-byte string, based on the user password, that shall be used in determining whether to prompt the user for a password and, if so, whether a valid user or owner password was entered.'>
	^self objectAt: #U
%
category: 'accessing'
classmethod: StreamReference
type
	"Type 2 entries define compressed objects.
	Field 2: The object number of the object stream in which this object is stored. (The generation number of the object stream shall be implicitly 0.)
	Field 3: The index of this object within the object stream."

	^2
%
category: 'accessing'
method: StreamReference
generation
	^0
%
method: StreamReference
indexInObjectStream
	^self id generation
%
category: 'printing'
method: StreamReference
printOn: aStream
	aStream
		nextPutAll: self value printString;
		nextPutAll: ' 0 R @ ';
		nextPutAll: self indexInObjectStream printString
%
category: 'reading'
method: StreamReference
readIndirectObjectWith: aFile
	"<PDFObject>"

	^(aFile objectStreamAt: self value) readAt: self indexInObjectStream with: aFile
%
category: 'accessing'
classmethod: Trailer
keys
	"<SequenceableCollection of: String>
	possible keys of the Trailer dictionary"

	^#(#Size #Prev #Root #Encrypt #Info #ID #XRefStm)
%
classmethod: Trailer
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Trailer
		supertype: #Dictionary
		section: '7.5.5'
		documentation: 'The trailer of a PDF file enables a conforming reader to quickly find the cross-reference table and certain special objects. Conforming readers should read a PDF file from its end. The last line of the file shall contain only the end-of-file marker, %%EOF. The two preceding lines shall contain, one per line and in order, the keyword startxref and the byte offset in the decoded stream from the beginning of the file to the beginning of the xref keyword in the last cross-reference section. The startxref line shall be preceded by the trailer dictionary, consisting of the keyword trailer followed by a series of key-value pairs enclosed in double angle brackets (<<â¦>>) (using LESS-THAN SIGNs (3Ch) and GREATER-THAN SIGNs (3Eh)).'
%
category: 'instance creation'
classmethod: Trailer
readWith: aFile from: aParser
	"<Trailer>"

	aParser expectToken: #trailer.
	aParser expectToken: '<<'.
	^super readWith: aFile from: aParser
%
category: 'accessing'
method: Trailer
firstPage
	"<Page>"

	^self Root firstPage
%
category: 'accessing entries'
method: Trailer
Encrypt
	<type: #Encryption>
	<version: 1 dot: 1>
	<attribute: 4 documentation: '(Required if document is encrypted)
The documentâs encryption dictionary.'>
	^self objectAt: #Encrypt ifAbsent: [PDF Dictionary new]
%
method: Trailer
ID
	<type: #FileIdentifier>
	<requiredIf: #Encrypt>
	<version: 1 dot: 1>
	<attribute: 6 documentation: 'An array of two byte-strings constituting a file identifier for the file.
If there is an Encrypt entry this array and the two byte-strings shall be direct objects and shall be unencrypted.

NOTE 1
	Because the ID entries are not encrypted it is possible to check the ID key to assure that the correct file is being accessed without decrypting the file.
	The restrictions that the string be a direct object and not be encrypted assure that this is possible.
NOTE 2
	Although this entry is optional, its absence might prevent the file from functioning in some workflows that depend on files being uniquely identified.
NOTE 3
	The values of the ID strings are used as input to the encryption algorithm.
	If these strings were indirect, or if the ID array were indirect, these strings would be encrypted when written.
	This would result in a circular condition for a reader: the ID strings must be decrypted in order to use them to decrypt strings, including the ID strings themselves.
	The preceding restriction prevents this circular condition.'>
	^self objectAt: #ID ifAbsent: [#() asPDF]
%
method: Trailer
Info
	<typeIndirect: #DocumentInformation>
	<attribute: 5 documentation: 'The documentâs information dictionary.'>
	^self objectAt: #Info ifAbsent: [PDF Dictionary new]
%
method: Trailer
Prev
	<typeDirect: #Integer>
	<attribute: 2 documentation: '(Present only if the file has more than one cross-reference section)
The byte offset in the decoded stream from the beginning of the file to the beginning of the previous cross-reference section.

*** there is a typo in the spec, I think: according to the spec the value should be indirect ***'>
	^self objectAt: #Prev ifAbsent: [nil]
%
method: Trailer
Root
	<typeIndirect: #Catalog>
	<required>
	<attribute: 3 documentation: 'The catalog dictionary for the PDF document contained in the file.'>
	^self objectAt: #Root
%
method: Trailer
Size
	<typeDirect: #Integer>
	<required>
	<attribute: 1 documentation: 'The total number of entries in the fileâs cross-reference table, as defined by the combination of the original section and all update sections.
Equivalently, this value shall be 1 greater than the highest object number defined in the file.
Any object in a cross-reference section whose number is greater than this value shall be ignored and defined to be missing by a conforming reader.'>
	^self objectAt: #Size
%
method: Trailer
XRefStm
	<type: #Integer>
	<attribute: 7 documentation: 'The byte offset in the decoded stream from the beginning of the file of a cross-reference stream.'>
	<version: 1 dot: 5>
	^self objectAt: #XRefStm ifAbsent: [nil]
%
category: 'printing'
method: Trailer
printOn: aStream
	aStream
		nextPutAll: self class name asString;
		nextPutAll: ' << ';
		nextPutAll: self size printString;
		nextPutAll: ' >>'
%
category: 'tracing'
method: Trailer
allReferencesDo: oneArgumentBlock
	"executes oneArgumentBlock with all unique reachable references"

	self tracedReferences: IdentitySet new do: oneArgumentBlock
%
category: 'writing'
method: Trailer
addFileIdentifierWithFile: aFilenameString andSize: anInteger id: previousFileIdentifierOrNil
	(self hashForFilename: aFilenameString andSize: anInteger) ifNotNil: [:hashString |
		| previousID |
		previousID := previousFileIdentifierOrNil ifNotNil: [:id | id permanentID].
		self
			at: #ID
			put: ((PDF classAt: #FileIdentifier) on: (Array
				with: (previousID ifNil: [
					hashString])
				with: hashString))]
%
method: Trailer
hashForFilename: aFilenameString andSize: filesizeSoFar
	"<PDF.String | nil>"

	| wst |
	self Info CreationDate ifNil: [
		^nil].
	wst := Writer new.
	self Info CreationDate writePDFOn: wst indent: 0.
	wst cr.
	aFilenameString asPDF writePDFOn: wst indent: 0.
	wst
		cr;
		nextPutAll: filesizeSoFar printString asByteArray;
		cr.
	self Info writePDFOn: wst indent: 0.
	^PDF String content: (self md5HashOf: wst contents)
%
method: Trailer
md5HashOf: aByteString
	"<ByteArray[16]>"

	| largeInteger wst rest |
	largeInteger := aByteString md5sum.
	wst := ByteArray new writeStream.
	rest := largeInteger.
	[rest > 0] whileTrue: [
		wst nextPut: (rest bitAnd: 16rFF).
		rest := rest // 16r100].
	^wst contents reverse
%
category: 'accessing'
classmethod: UsedReference
type
	"Type 1 entries define objects that are in use but are not compressed (corresponding to n entries in a cross-reference table).
	Field 2: The byte offset of the object, starting from the beginning of the file.
	Field 3: The generation number of the object. Default value: 0."

	^1
%
category: 'accessing'
method: UsedReference
keyword
	^'n'
%
category: 'comparing'
method: UsedReference
matches: anObjectId
	^(super matches: anObjectId) and: [
	self generation = anObjectId generation]
%
category: 'reading'
method: UsedReference
readIndirectObjectWith: aFile
	"<PDFObject>"

	^aFile parser pickObjectFor: self with: aFile
%
category: 'testing'
method: UsedReference
isSameReference: anObject
	^anObject isReferencedBy: self
%
method: UsedReference
refersTo: aPDFReference
	^self matches: aPDFReference
%
category: 'accessing'
classmethod: XRefStream
pdfTypeDefinition
	^PDFTypeDefinition
		name: #XRefStream
		supertype: #Stream
		version: #(1 5)
		section: '7.5.8'
		documentation: 'Beginning with PDF 1.5, cross-reference information may be stored in a cross-reference stream instead of in a cross-reference table. Cross-reference streams provide the following advantages:
â¢	A more compact representation of cross-reference information
â¢	The ability to access compressed objects that are stored in object streams and to allow new cross-reference entry types to be added in the future
Cross-reference streams are stream objects, and contain a dictionary and a data stream. Each cross-reference stream contains the information equivalent to the cross-reference table and trailer for one cross-reference section.'
%
classmethod: XRefStream
type
	^#XRef
%
category: 'reading'
classmethod: XRefStream
readWith: aFile
	"<CrossReferenceStream>"

	| inst |
	inst := self newFrom: (aFile parser readCrossReferenceStreamWith: aFile).
	(inst at: #Prev ifAbsent: [nil]) ifNotNil: [:previousPosition |
		aFile parser position: previousPosition asSmalltalkValue.
		inst previous: (self readWith: aFile)].
	^inst
%
category: 'accessing'
method: XRefStream
atNumber: anInteger
	"<CrossReference>"

	^self atNumber: anInteger ifAbsent: [
		FileError raiseSignal: 'Reference with number ' , anInteger printString , ' not found']
%
method: XRefStream
atNumber: anInteger ifAbsent: zeroArgumentBlock
	"<CrossReference>"

	self subsections do: [:subsection |
		(subsection atNumber: anInteger ifAbsent: [nil]) ifNotNil: [:ref |
			^ref]].
	self previous ifNotNil: [
		^self previous atNumber: anInteger ifAbsent: zeroArgumentBlock].
	^zeroArgumentBlock value
%
method: XRefStream
crossReferenceAt: anObjectId
	"<CrossReference | nil>"

	^self crossReferenceAt: anObjectId ifAbsent: [nil]
%
method: XRefStream
crossReferenceAt: anObjectId ifAbsent: zeroArgumentBlock
	"<CrossReference>"

	| uniqueObject |
	uniqueObject := 'unique'.
	self subsections do: [:subsection |
		| cr |
		cr := subsection crossReferenceAt: anObjectId ifAbsent: [uniqueObject].
		cr == uniqueObject ifFalse: [
			^cr]].
	self previous ifNotNil: [
		^self previous crossReferenceAt: anObjectId ifAbsent: zeroArgumentBlock].
	^zeroArgumentBlock value
%
method: XRefStream
freeReferences
	| ref freeReferences |
	ref := self atNumber: 0.
	freeReferences := OrderedCollection with: ref.
	[ref value isZero] whileFalse: [
		ref := self atNumber: ref value.
		freeReferences add: ref].
	^freeReferences
%
method: XRefStream
previous
	"<XRefStream | nil>"

	^previous
%
method: XRefStream
previous: aXRefStream
	previous := aXRefStream
%
method: XRefStream
subsections
	"<SequenceableCollection of: CrossReferenceSubsection>"

	^subsections ifNil: [subsections := self createSubsections]
%
method: XRefStream
trailer
	"<Trailer>"

	| newDict |
	newDict := Valuemap new.
	(PDF classAt: #Trailer) keys do: [:key |
		(self content at: key ifAbsent: [nil]) ifNotNil: [:aValue | newDict at: key put: aValue]].
	^(PDF classAt: #Trailer) on: newDict
%
method: XRefStream
usedReferences
	"<SequenceableCollection of: UsedReference>"

	| list |
	list := OrderedCollection new.
	self referencesDo: [:ref |
		(ref isKindOf: UsedReference) ifTrue: [
			list add: ref]].
	^list
%
category: 'accessing entries'
method: XRefStream
ID
	<typeDirect: #FileIdentifier>
	<version: 1 dot: 1>
	<attribute: 7 documentation: 'An array of two byte-strings constituting a file identifier for the file.
If there is an Encrypt entry this array and the two byte-strings shall be direct objects and shall be unencrypted.

NOTE 1
	Because the ID entries are not encrypted it is possible to check the ID key to assure that the correct file is being accessed without decrypting the file.
	The restrictions that the string be a direct object and not be encrypted assure that this is possible.
NOTE 2
	Although this entry is optional, its absence might prevent the file from functioning in some workflows that depend on files being uniquely identified.
NOTE 3
	The values of the ID strings are used as input to the encryption algorithm.
	If these strings were indirect, or if the ID array were indirect, these strings would be encrypted when written.
	This would result in a circular condition for a reader: the ID strings must be decrypted in order to use them to decrypt strings, including the ID strings themselves.
	The preceding restriction prevents this circular condition.'>
	^self objectAt: #ID ifAbsent: [#() asPDF]
%
method: XRefStream
Index
	<typeArrayOf: #Integer>
	<attribute: 2 documentation: 'An array containing a pair of integers for each subsection in this section.
The first integer shall be the first object number in the subsection; the second integer shall be the number of entries in the subsection
The array shall be sorted in ascending order by object number. Subsections cannot overlap; an object number may have at most one entry in a section.
Default value: [0 Size].'>
	^self objectAt: #Index ifAbsent: [
		(Array
			with: 0
			with: self Size) asPDF]
%
method: XRefStream
Info
	<typeIndirect: #Dictionary>
	<attribute: 6 documentation: 'The documentâs information dictionary.'>
	^self objectAt: #Info ifAbsent: [PDF Dictionary empty]
%
method: XRefStream
Prev
	<type: #Integer>
	<attribute: 3 documentation: '(Present only if the file has more than one cross-reference stream; not meaningful in hybrid-reference files)
The byte offset in the decoded stream from the beginning of the file to the beginning of the previous cross-reference stream.
This entry has the same function as the Prev entry in the trailer dictionary.'>
	^self objectAt: #Prev ifAbsent: [nil]
%
method: XRefStream
Root
	<typeIndirect: #Catalog>
	<required>
	<attribute: 5 documentation: 'The catalog dictionary for the PDF document contained in the file.'>
	^self objectAt: #Root
%
method: XRefStream
Size
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'The number one greater than the highest object number used in this section or in any section for which this shall be an update.
It shall be equivalent to the Size entry in a trailer dictionary.'>
	^self objectAt: #Size
%
method: XRefStream
W
	<typeArrayOf: #Integer>
	<required>
	<attribute: 4 documentation: 'An array of integers representing the size of the fields in a single cross-reference entry.
For PDF 1.5, W always contains three integers; the value of each integer shall be the number of bytes (in the decoded stream) of the corresponding field.
	EXAMPLE[1 2 1] means that the fields are one byte, two bytes, and one byte, respectively.
A value of zero for an element in the W array indicates that the corresponding field shall not be present in the stream, and the default value shall be used, if there is one.
If the first element is zero, the type field shall not be present, and shall default to type 1.

The sum of the items shall be the total length of each entry; it can be used with the Index array to determine the starting position of each subsection.
Different cross-reference streams in a PDF file may use different values for W.'>
	^self objectAt: #W
%
category: 'enumerating'
method: XRefStream
referencesDo: oneArgumentBlock
	self subsections do: [:subsection | subsection referencesDo: oneArgumentBlock].
	self previous ifNotNil: [self previous referencesDo: oneArgumentBlock]
%
category: 'initialize-release'
method: XRefStream
createSubsections
	| ssections ssrst contentsStream wBytes |
	ssections := OrderedCollection new.
	ssrst := self Index asSmalltalkValue readStream.
	contentsStream := self internal asByteArray readStream.
	wBytes := self W content collect: #asSmalltalkValue.
	[ssrst atEnd] whileFalse: [
		| firstNumber count entries |
		firstNumber := ssrst next asSmalltalkValue.
		count := ssrst next asSmalltalkValue.
		entries := (1 to: count) collect: [:i |
			CrossReference
				number: firstNumber + i - 1
				field1: (contentsStream next: wBytes first)
				field2: (contentsStream next: (wBytes at: 2))
				field3: (contentsStream next: wBytes last)].
		ssections add: (CrossReferenceSubsection firstNumber: firstNumber entries: entries)].
	^ssections
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: '*PDFtalk Files-accessing'
classmethod: PDF
producerText
	"<Textstring>
	default text used as /Producer in the /Trailer/Info"

	^(PDF classAt: #Textstring) fromString: 'PDFtalk ' , self libraryVersionString
%
category: '*PDFtalk Files-reading'
classmethod: PDFDictionary
readWith: aFile from: aParser
	"<PDF.Dictionary>"

	^self on: (aParser readOrderedDictionaryWith: aFile)
%
category: '*PDFtalk Files-initialize-release'
method: Reference
with: aFile
	"setup the virgin receiver to resolve the object from the file
	see #referent for the lazy initializer"

	referent := FileReference id: self id file: aFile
%
category: '*PDFtalk Files-writing'
method: Writer
writeObjects: someReferences
	"<CrossReferenceSection>
	Write someReferences to the stream.
	The references must have numbers assigned"

	^CrossReferenceSection initialOn: (someReferences collect: [:reference |
		| pos |
		pos := self position.
		reference writeIndirectObjectOn: self indent: 0.
		self cr.
		UsedReference id: reference id value: pos])
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Document'.
	dict at: #comment put: 'Objects of the PDF Document structure (PDF 32000_2008.pdf pp. 70)'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #storeVersion put: '2.5.0.5'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class Document
DoIt
Object
	subclass: 'Document'
	instVarNames: #(root info version previousId)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Document category: 'PDFtalk Document'.
	Document comment: 'A PDF Document represents a sequence of PDF objects for generating a PDF file.

The Document shall be created programatically by adding PDF objects to it.
A Document writes its objects to a PDF file and takes care of cross references and the file structure.'.
	Document namespacePath: #(#PDFtalk).
%
# Define class PieceInfo
DoIt
PDFDictionary
	subclass: 'PieceInfo'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PieceInfo category: 'PDFtalk Document'.
	PieceInfo comment: 'PDF Page-Piece Dictionaries as defined in PDF 32000_2008.pdf, section 14.5, pp. 551.

A page-piece dictionary (PDF 1.3) may be used to hold private conforming product data. The data may be associated with a page or form XObject by means of the optional PieceInfo entry in the page object or form dictionary. Beginning with PDF 1.4, private data may also be associated with the PDF document by means of the PieceInfo entry in the document catalogue.

NOTE 1		Conforming products may use this dictionary as a place to store private data in connection with that document, page, or form. Such private data can convey information meaningful to the conforming product that produces it (such as information on object grouping for a graphics editor or the layer information used by Adobe PhotoshopÂ®) but may be ignored by general-purpose conforming readers.

A page-piece dictionary may contain any number of entries, each keyed by the name of a distinct conforming product or of a well-known data type recognized by a family of conforming products. The value associated with each key shall be a data dictionary containing the private data that shall be used by the conforming product. The Private entry may have a value of any data type, but typically it is a dictionary containing all of the private data needed by the conforming product other than the actual content of the document, page, or form.
'.
	PieceInfo namespacePath: #(#PDFtalk).
%
# Define class Resources
DoIt
PDFDictionary
	subclass: 'Resources'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Resources category: 'PDFtalk Document'.
	Resources comment: 'PDF Catalog as defined in PDF 32000_2008.pdf pp. 82.

The operands supplied to operators in a content stream shall only be direct objects; indirect objects and object references shall not be permitted.
In some cases, an operator shall refer to a PDF object that is defined outside the content stream, such as a font dictionary or a stream containing image data.
This shall be accomplished by defining such objects as named resources and referring to them by name from within the content stream.

Named resources shall be meaningful only in the context of a content stream.
The scope of a resource name shall be local to a particular content stream and shall be unrelated to externally known identifiers for objects such as fonts.
References from one object outside of content streams to another outside of content streams shall be made by means of indirect object references rather than named resources.

A content streamâs named resources shall be defined by a resource dictionary, which shall enumerate the named resources needed by the operators in the content stream and the names by which they can be referred to.'.
	Resources namespacePath: #(#PDFtalk).
%
# Define class PageTree
DoIt
TypedDictionary
	subclass: 'PageTree'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PageTree category: 'PDFtalk Document'.
	PageTree comment: 'PDF Page Tree as defined in PDF 32000_2008.pdf pp. 75.

The pages of a document are accessed through a structure known as the page tree, which defines the ordering of pages in the document.
Using the tree structure, conforming readers using only limited memory, can quickly open a document containing thousands of pages.
The tree contains nodes of two typesâintermediate nodes, called page tree nodes, and leaf nodes, called page objects.
Conforming products shall be prepared to handle any form of tree structure built of such nodes.'.
	PageTree namespacePath: #(#PDFtalk).
%
# Define class Pages
DoIt
PageTree
	subclass: 'Pages'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Pages category: 'PDFtalk Document'.
	Pages comment: 'PDF Pages as defined in PDF 32000_2008.pdf pp. 75.

The pages of a document are accessed through a structure known as the page tree, which defines the ordering of pages in the document. Using the tree structure, conforming readers using only limited memory, can quickly open a document containing thousands of pages. The tree contains nodes of two typesâintermediate nodes, called page tree nodes, and leaf nodes, called page objectsâwhose form is described in the subsequent sub-clauses. Conforming products shall be prepared to handle any form of tree structure built of such nodes.

NOTE
The simplest structure can consist of a single page tree node that references all of the documentâs page objects directly. However, to optimize application performance, a conforming writer can construct trees of a particular form, known as balanced trees. Further information on this form of tree can be found in Data Structures and Algorithms, by Aho, Hopcroft, and Ullman (see the Bibliography).'.
	Pages namespacePath: #(#PDFtalk).
%
# Define class Page
DoIt
PageTree
	subclass: 'Page'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Page category: 'PDFtalk Document'.
	Page comment: 'PDF Page as defined in PDF 32000_2008.pdf pp. 77.

The leaves of the page tree are page objects, each of which is a dictionary specifying the attributes of a single page of the document.
The table also identifies which attributes a page may inherit from its ancestor nodes in the page tree.
Attributes that are not explicitly identified in the table as inheritable shall not be inherited.'.
	Page namespacePath: #(#PDFtalk).
%
# Define class Metadata
DoIt
TypedStream
	subclass: 'Metadata'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Metadata category: 'PDFtalk Document'.
	Metadata comment: 'PDF Metadata as defined in PDF 32000_2008.pdf pp. 548.

A PDF document may include general information, such as the documentâs title, author, and creation and modification dates. 
Such global information about the document (as opposed to its content or structure) is called metadata and is intended to assist in cataloguing and searching for documents in external databases. 
Beginning with PDF 1.4, metadata may also be specified for individual components of a document.

Metadata may be stored in a PDF document in either of the following ways:

	â¢	In a metadata stream (PDF 1.4) associated with the document or a component of the document (14.3.2, âMetadata Streamsâ)
	â¢	In a document information dictionary associated with the document (14.3.3, âDocument Information Dictionaryâ)

NOTE
Document information dictionaries is the original way that metadata was included in a PDF file. 
Metadata streams were introduced in PDF 1.4 and is now the preferred method to include metadata.

Metadata Streams

Metadata, both for an entire document and for components within a document, may be stored in PDF streams called metadata streams (PDF 1.4).

NOTE 1
Metadata streams have the following advantages over the document information dictionary:
	â¢	PDF-based workflows often embed metadata-bearing artwork as components within larger documents. 
		Metadata streams provide a standard way of preserving the metadata of these components for examination downstream. 
		PDF-aware conforming products should be able to derive a list of all metadata-bearing document components from the PDF document itself.
	â¢	PDF documents are often made available on the Web or in other environments, where many tools routinely examine, catalogue, and classify documents. 
		These tools should be able to understand the self-contained description of the document even if they do not understand PDF.

Besides the usual entries common to all stream dictionaries, the metadata stream dictionary shall contain additional entries.
The contents of a metadata stream shall be the metadata represented in Extensible Markup Language (XML).

NOTE 2
This information is visible as plain text to tools that are not PDF-aware only if the metadata stream is both unfiltered and unencrypted.'.
	Metadata namespacePath: #(#PDFtalk).
%
# Define class Contents
DoIt
PDFStream
	subclass: 'Contents'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Contents category: 'PDFtalk Document'.
	Contents comment: 'PDF Contents stream as defined in PDF 32000_2008.pdf pp. 81.

Content streams are the primary means for describing the appearance of pages and other graphical elements.
A content stream depends on information contained in an associated resource dictionary; in combination, these two objects form a self-contained entity.'.
	Contents namespacePath: #(#PDFtalk).
%
# Define class OutputIntent
DoIt
TypedDictionary
	subclass: 'OutputIntent'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	OutputIntent category: 'PDFtalk Document'.
	OutputIntent comment: 'PDF OutputIntent as defined in PDF 32000_2008.pdf pp. 633.

Output intents (PDF 1.4) provide a means for matching the colour characteristics of a PDF document with 
those of a target output device or production environment in which the document will be printed. 
The optional OutputIntents entry in the document catalogue holds an array of output intent dictionaries, 
each describing the colour reproduction characteristics of a possible output device or production condition. 
The contents of these dictionaries may vary for different devices and conditions. 
The dictionaryâs Sentry specifies an output intent subtype that determines the format and meaning of the remaining entries.

NOTE 1
This use of multiple output intents allows the production process to be customized to the expected workflow and the specific tools available. 
For example, one production facility might process files conforming to a recognized standard such as PDF/X-1, 
while another uses the PDF/A standard to produce RGB output for document distribution on the Web. 
Each of these workflows would require different sets of output intent information. 
Multiple output intents also allow the same PDF file to be distributed unmodified to multiple production facilities. 
The choice of which output intent to use in a given production environment is a matter for agreement between the purchaser and provider of production services. 
PDF intentionally does not include a selector for choosing a particular output intent from within the PDF file.

At the time of publication, three output intent subtypes have been defined: 
	GTS_PDFX corresponding to the PDF/X format standard specified in ISO 15930, 
	GTS_PDFA1 corresponding to the PDF/A standard as defined by ISO 19005, and 
	ISO_PDFE1 corresponding to the PDF/E standard as defined by ISO 24517. 

Other subtypes may be added in the future; the names of any such additional subtypes shall conform to the naming guidelines.'.
	OutputIntent namespacePath: #(#PDFtalk).
%
# Define class Catalog
DoIt
TypedDictionary
	subclass: 'Catalog'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Catalog category: 'PDFtalk Document'.
	Catalog comment: 'PDF Catalog as defined in PDF 32000_2008.pdf pp. 71.

The root of a documentâs object hierarchy is the catalog dictionary, located by means of the Root entry in the trailer of the PDF file (see Trailer). 
The catalog contains references to other objects defining the documentâs contents, outline, article threads, named destinations, and other attributes. In addition, it contains information about how the document shall be displayed on the screen, such as whether its outline and thumbnail page images shall be displayed automatically and whether some location other than the first page shall be shown when the document is opened.'.
	Catalog namespacePath: #(#PDFtalk).
%
# Define class Names
DoIt
PDFDictionary
	subclass: 'Names'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Names category: 'PDFtalk Document'.
	Names comment: 'PDF Names as defined in PDF 32000_2008.pdf pp. 80.

Some categories of objects in a PDF file can be referred to by name rather than by object reference.
The correspondence between names and objects is established by the documentâs name dictionary (PDF 1.2), located by means of the Names entry in the documentâs catalog.
Each entry in this dictionary designates the root of a name tree defining names for a particular category of objects.'.
	Names namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
classmethod: Catalog
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Catalog
		supertype: #Dictionary
		section: '7.7.2'
		documentation: 'The root of a documentâs object hierarchy is the catalog dictionary, located by means of the Root entry in the trailer of the PDF file (see Trailer). 
The catalog contains references to other objects defining the documentâs contents, outline, article threads, named destinations, and other attributes. In addition, it contains information about how the document shall be displayed on the screen, such as whether its outline and thumbnail page images shall be displayed automatically and whether some location other than the first page shall be shown when the document is opened.'
%
category: 'instance creation'
classmethod: Catalog
empty
	| inst |
	inst := super empty.
	inst at: #Pages put: (PDF classAt: #Pages) empty newReference.
	^inst
%
category: 'accessing'
method: Catalog
firstPage
	"<Page>"

	^self Pages firstPage
%
method: Catalog
pageAt: anInteger
	"<Page>
	throws exception when out of bounds"
	
	^self Pages pageAt: anInteger
%
method: Catalog
pages
	"<Array of: Page>"

	| pages |
	pages := OrderedCollection new.
	self Pages pagesDo: [:page | pages add: page].
	^pages
%
category: 'accessing entries'
method: Catalog
AA
	<type: #Dictionary>
	<version: 1 dot: 4>
	<attribute: 14 documentation: 'An additional-actions dictionary defining the actions that shall be taken in response to various trigger events affecting the document as a whole.'>
	^self objectAt: #AA ifAbsent: [PDF Dictionary empty]
%
method: Catalog
AcroForm
	<type: #Dictionary>
	<version: 1 dot: 2>
	<attribute: 16 documentation: 'The documentâs interactive form (AcroForm) dictionary.'>
	^self objectAt: #AcroForm ifAbsent: [PDF Dictionary empty]
%
method: Catalog
AF
	<typeArrayOf: #EmbeddedFile>
	<version: 2 dot: 0>
	<attribute: 30 documentation: 'Associated File'>
	^self objectAt: #AF ifAbsent: [#() asPDF]
%
method: Catalog
Collection
	<type: #Dictionary>
	<version: 1 dot: 7>
	<attribute: 28 documentation: 'A collection dictionary that a conforming reader shall use to enhance the presentation of file attachments stored in the PDF document.'>
	^self objectAt: #Collection ifAbsent: [PDF Dictionary empty]
%
method: Catalog
Dests
	<typeIndirect: #Dictionary>
	<version: 1 dot: 1>
	<attribute: 7 documentation: 'A dictionary of names and corresponding destinations.'>
	^self objectAt: #Dests ifAbsent: [PDF Dictionary empty]
%
method: Catalog
Extensions
	<type: #Dictionary>
	<version: 1 dot: 7>
	<attribute: 3 documentation: '(ISO 32000)
An extensions dictionary containing developer prefix identification and version numbers for developer extensions that occur in this document.'>
	^self objectAt: #Extensions ifAbsent: [PDF Dictionary empty]
%
method: Catalog
Lang
	<type: #String>
	<version: 1 dot: 4>
	<attribute: 20 documentation: 'A language identifier that shall specify the natural language for all text in the document
except where overridden by language specifications for structure elements or marked content. 
If this entry is absent, the language shall be considered unknown.'>
	^self objectAt: #Lang ifAbsent: ['' asPDF]
%
method: Catalog
Legal
	<type: #Dictionary>
	<version: 1 dot: 5>
	<attribute: 26 documentation: 'A dictionary that shall contain attestations regarding the content of a PDF document, as it relates to the legality of digital signatures.'>
	^self objectAt: #Legal ifAbsent: [PDF Dictionary empty]
%
method: Catalog
MarkInfo
	<type: #Dictionary>
	<version: 1 dot: 4>
	<attribute: 19 documentation: 'A mark information dictionary that shall contain information about the documentâs usage of Tagged PDF conventions.'>
	^self objectAt: #MarkInfo ifAbsent: [PDF Dictionary empty]
%
method: Catalog
Metadata
	<typeIndirect: #Metadata>
	<version: 1 dot: 4>
	<attribute: 17 documentation: 'A metadata stream that shall contain metadata for the document.'>
	^self objectAt: #Metadata ifAbsent: [nil]
%
method: Catalog
Names
	<type: #Names>
	<version: 1 dot: 2>
	<attribute: 6 documentation: 'The documentâs name dictionary (see Name).'>
	^self objectAt: #Names ifAbsent: [PDF Dictionary new]
%
method: Catalog
NeedsRendering
	<type: #Boolean>
	<version: 1 dot: 7>
	<attribute: 29 documentation: 'A flag used to expedite the display of PDF documents containing XFA forms.
It specifies whether the document shall be regenerated when the document is first opened.
See the XML Forms Architecture (XFA) Specification.
Default value: false.'>
	^self objectAt: #NeedsRendering ifAbsent: [false]
%
method: Catalog
OCProperties
	<type: #OptionalContentProperties>
	<version: 1 dot: 5>
	<attribute: 24 documentation: '(required if a document contains optional content)
The documentâs optional content properties dictionary.'>
	^self objectAt: #OCProperties ifAbsent: [PDF Dictionary new]
%
method: Catalog
OpenAction
	<type: #Array>
	<type: #Dictionary>
	<version: 1 dot: 1>
	<attribute: 13 documentation: 'A value specifying a destination that shall be displayed or an action that shall be performed when the document is opened.
The value shall be either an array defining a destination or an action dictionary representing an action.
If this entry is absent, the document shall be opened to the top of the first page at the default magnification factor.'>
	^self objectAt: #OpenAction ifAbsent: [#() asPDF]
%
method: Catalog
Outlines
	<typeIndirect: #Outlines>
	<attribute: 11 documentation: 'The outline dictionary that shall be the root of the documentâs outline hierarchy.'>
	^self objectAt: #Outlines ifAbsent: [PDF Dictionary empty]
%
method: Catalog
OutputIntents
	<typeArrayOf: #OutputIntent>
	<version: 1 dot: 4>
	<attribute: 22 documentation: 'An array of output intent dictionaries that shall specify the colour characteristics of output devices on which the document might be rendered.'>
	^self objectAt: #OutputIntents ifAbsent: [#() asPDF]
%
method: Catalog
PageLabels
	<type: #NumberTree>
	<version: 1 dot: 3>
	<attribute: 5 documentation: 'A number tree (see NumberTree) defining the page labelling for the document.
The keys in this tree shall be page indices; the corresponding values shall be page label dictionaries.
Each page index shall denote the first page in a labelling range to which the specified page label dictionary applies.
The tree shall include a value for page index 0.'>
	^self objectAt: #PageLabels ifAbsent: [nil]
%
method: Catalog
PageLayout
	<type: #Name>
	<version: 1 dot: 5 ifValue: #TwoPageLeft>
	<version: 1 dot: 5 ifValue: #TwoPageRight>
	<attribute: 9 documentation: 'A name object specifying the page layout shall be used when the document is opened:
	SinglePage			Display one page at a time
	OneColumn			Display the pages in one column
	TwoColumnLeft		Display the pages in two columns, with odd-numbered pages on the left
	TwoColumnRight	Display the pages in two columns, with odd-numbered pages on the right
	TwoPageLeft		Display the pages two at a time, with odd-numbered pages on the left
	TwoPageRight		Display the pages two at a time, with odd-numbered pages on the right
Default value: SinglePage.'>
	^self objectAt: #PageLayout ifAbsent: [#SinglePage asPDF]
%
method: Catalog
PageMode
	<type: #Name>
	<version: 1 dot: 5 ifValue: #UseOC>
	<version: 1 dot: 6 ifValue: #UseAttachments>
	<attribute: 10 documentation: 'A name object specifying how the document shall be displayed when opened:
	UseNone			Neither document outline nor thumbnail images visible
	UseOutlines			Document outline visible
	UseThumbs			Thumbnail images visible
	FullScreen			Full-screen mode, with no menu bar, window controls, or any other window visible
	UseOC				Optional content group panel visible
	UseAttachments	Attachments panel visible
Default value: UseNone.'>
	^self objectAt: #PageMode ifAbsent: [#UseNone asPDF]
%
method: Catalog
Pages
	<typeIndirect: #Pages>
	<required>
	<attribute: 4 documentation: 'The page tree node that shall be the root of the documentâs page tree.'>
	^self objectAt: #Pages
%
method: Catalog
Perms
	<type: #Dictionary>
	<version: 1 dot: 5>
	<attribute: 25 documentation: 'A permissions dictionary that shall specify user access permissions for the document.'>
	^self objectAt: #Perms ifAbsent: [PDF Dictionary empty]
%
method: Catalog
PieceInfo
	<typeDictionaryOf: #PieceInfo>
	<version: 1 dot: 4>
	<attribute: 23 documentation: 'A page-piece dictionary associated with the document.'>
	^self objectAt: #PieceInfo ifAbsent: [PDF Dictionary new]
%
method: Catalog
Requirements
	<typeArrayOf: #Dictionary>
	<version: 1 dot: 7>
	<attribute: 27 documentation: 'An array of requirement dictionaries that shall represent requirements for the document.'>
	^self objectAt: #Requirements ifAbsent: [#() asPDF]
%
method: Catalog
SpiderInfo
	<type: #Dictionary>
	<version: 1 dot: 3>
	<attribute: 21 documentation: 'A Web Capture information dictionary that shall contain state information used by any Web Capture extension.'>
	^self objectAt: #SpiderInfo ifAbsent: [PDF Dictionary empty]
%
method: Catalog
StructTreeRoot
	<type: #Dictionary>
	<version: 1 dot: 3>
	<attribute: 18 documentation: 'The documentâs structure tree root dictionary.'>
	^self objectAt: #StructTreeRoot ifAbsent: [PDF Dictionary empty]
%
method: Catalog
Threads
	<typeArrayOf: #Dictionary>
	<version: 1 dot: 1>
	<attribute: 12 documentation: 'An array of thread dictionaries that shall represent the documentâs article threads.'>
	^self objectAt: #Threads ifAbsent: [#() asPDF]
%
method: Catalog
URI
	<type: #Dictionary>
	<version: 1 dot: 1>
	<attribute: 15 documentation: 'A URI dictionary containing document-level information for URI (uniform resource identifier) actions.'>
	^self objectAt: #URI ifAbsent: [PDF Dictionary empty]
%
method: Catalog
Version
	<type: #Name>
	<version: 1 dot: 4>
	<attribute: 2 documentation: 'The version of the PDF specification to which the document conforms (for example, 1.4) if later than the version specified in the fileâs header (see Header).
If the header specifies a later version, or if this entry is absent, the document shall conform to the version specified in the header.
This entry enables a conforming writer to update the version using an incremental update.

The value of this entry shall be a name object, not a number, and therefore shall be preceded by a SOLIDUS (2Fh) character (/) when written in the PDF file (for example, /1.4).'>
	^self objectAt: #Version ifAbsent: [nil]
%
method: Catalog
ViewerPreferences
	<type: #ViewerPreferences>
	<version: 1 dot: 2>
	<attribute: 8 documentation: 'A viewer preferences dictionary specifying the way the document shall be displayed on the screen.
If this entry is absent, conforming readers shall use their own current user preference settings.'>
	^self objectAt: #ViewerPreferences ifAbsent: [PDF Dictionary empty]
%
category: 'actions'
method: Catalog
addPage: aPage
	"add aPage as last element of the top Pages.
	Convenience method. The use of #addPageTree: is preferred"

	self addPageTree: aPage
%
method: Catalog
addPageReference: aPageReference
	"add aPage as last element of the top Pages.
	Convenience method. The use of #addPageTree: is preferred"

	self Pages addPageTreeReference: aPageReference withParent: (self at: #Pages)
%
method: Catalog
addPageTree: aPageTree
	"add aPageTree (a Page or a Pages) as last element of the top Pages"

	self Pages addPageTree: aPageTree withParent: (self at: #Pages)
%
category: 'enumerating'
method: Catalog
pagesDo: oneArgumentBlock
	self Pages pagesDo: oneArgumentBlock
%
category: 'accessing'
classmethod: Contents
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Contents
		supertype: #Stream
		section: '7.8'
		documentation: 'Content streams are the primary means for describing the appearance of pages and other graphical elements.
A content stream depends on information contained in an associated resource dictionary; in combination, these two objects form a self-contained entity.'
%
category: 'instance creation'
classmethod: Document
version: aVersion
	| inst |
	inst := self new.
	inst initializeVersion: aVersion.
	^inst
%
category: 'accessing'
method: Document
info
	"<DocumentInformation>"

	^info ifNil: [info := (PDF classAt: #DocumentInformation) empty]
%
method: Document
info: aDocumentInformation
	info := aDocumentInformation
%
method: Document
previousId
	"<FileIdentifier | nil>
	the /ID of the PDF from which the receiver is derrived from.
	When the receiver is independently created, this is nil"

	^previousId
%
method: Document
previousId: aFileIdentifierOrNil
	previousId := aFileIdentifierOrNil
%
method: Document
root
	"<Catalog>"

	^root ifNil: [root := (PDF classAt: #Catalog) empty]
%
method: Document
root: aCatalog
	root := aCatalog
%
method: Document
version
	"<Version | nil>
	explicitly sets the version of the PDF.
	If nil, the objects are traced for the highest version when writing out"

	^version
%
category: 'actions'
method: Document
appendAllPagesFrom: aPDFFile
	"appends all pages from aPDFFile after the last page of the receiver"

	[(aPDFFile root at: #Pages) resolveAllReferences] on: TypeError , FileError do: [:ex |
		ex resume].
	self appendPages: (aPDFFile root at: #Pages)
%
method: Document
appendAllRawPagesFrom: aPDFFile
	"appends all pages from aPDFFile after the last page of the receiver.
	The objects from aPDFFile are read raw without typing.
	The receiver should be saved only and not further processed"

	self updateVersion: aPDFFile header version.	"set the version, because it cannot be derrived from the raw objects"
	[(aPDFFile root at: #Pages) readAllRawObjects] on: FileError do: [:ex | ex resume].
	self appendRawPages: (aPDFFile root at: #Pages)
%
method: Document
appendPages: aPagesReference
	"appends a copy of the aPages object after the last page of the receiver.
	Attention: this works fine when aPages is the root of the pages hierarchy and
	when aPages does not have inheritable attributes in its parent pages.
	To do: copy down inheritable attributes when appending single pages or subtrees of pages"

	| pagesToAppendRef parent rootPagesRef |
	pagesToAppendRef := aPagesReference copyWithNewReferences.
	rootPagesRef := self root at: #Pages.
	parent := rootPagesRef referent.
	pagesToAppendRef referent at: #Parent put: rootPagesRef.
	parent at: #Kids put: ((parent at: #Kids) with: pagesToAppendRef).
	parent
		at: #Count
		put: (parent at: #Count) asSmalltalkValue + (pagesToAppendRef referent at: #Count) asSmalltalkValue
%
method: Document
appendRawPages: aPagesReference
	"appends a copy of the aPages object after the last page of the receiver.
	Attention: this works fine when aPages is the root of the pages hierarchy and
	when aPages does not have inheritable attributes in its parent pages.
	To do: copy down inheritable attributes when appending single pages or subtrees of pages"

	| pagesToAppendRef parent rootPagesRef |
	pagesToAppendRef := aPagesReference copyWithNewReferences.
	rootPagesRef := self root at: #Pages.
	"a new generic Pages object has to be made to avoid typing"
	rootPagesRef referent: (PDF Dictionary new initializeDirectWithContent: rootPagesRef referent content).
	parent := rootPagesRef referent.
	pagesToAppendRef referent at: #Parent put: rootPagesRef.
	parent at: #Kids put: ((parent at: #Kids) with: pagesToAppendRef).
	parent
		at: #Count
		put: (parent at: #Count) asSmalltalkValue + (pagesToAppendRef referent at: #Count) asSmalltalkValue
%
category: 'initialize-release'
method: Document
initializeVersion: aPDFVersion
	version := aPDFVersion
%
method: Document
updateVersion: aPDFVersion
	"<Version>
	set the version to the max of the current and aPDFVersion"

	version ifNil: [
		^version := aPDFVersion].
	^version := self version max: aPDFVersion
%
category: 'writing'
method: Document
binaryWriteStreamOn: aFilenameString
	^GsFile open: aFilenameString mode: 'wb' onClient: false
%
method: Document
bytesForFile: aFilenameString
	"<ByteArray>
	the bytes of the complete PDF"

	| trailer references writer xrefs startxref |
	trailer := (PDF classAt: #Trailer) new.
	trailer at: #Info put: self info newReference.
	trailer at: #Root put: self root newReference.
	references := trailer tracedReferences.
	trailer at: #Size put: references size + 1.
	references doWithIndex: [:reference :id | reference assignNewNumber: id].
	writer := Writer new.
	writer writeVersionHeader: (self version ifNil: [
		Version highestVersionIn: references]).
	xrefs := writer writeObjects: references.
	startxref := writer position.
	writer writeCrossReferenceSection: xrefs.
	trailer
		addFileIdentifierWithFile: aFilenameString
		andSize: writer position
		id: self previousId.
	writer writeTrailer: trailer.
	writer writeStartxref: startxref.
	^writer contents
%
method: Document
saveAs: aFilenameString
	| bytes filestream |
	bytes := self bytesForFile: aFilenameString.
	filestream := self binaryWriteStreamOn: aFilenameString.
	[filestream nextPutAll: bytes] ensure: [filestream close]
%
category: 'accessing'
classmethod: Metadata
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Metadata
		supertype: #Stream
		version: #(1 4)
		section: '14.3'
		documentation: 'A PDF document may include general information, such as the documentâs title, author, and creation and modification dates. 
Such global information about the document (as opposed to its content or structure) is called metadata and is intended to assist in cataloguing and searching for documents in external databases. 
Beginning with PDF 1.4, metadata may also be specified for individual components of a document.

Metadata may be stored in a PDF document in either of the following ways:

	â¢	In a metadata stream (PDF 1.4) associated with the document or a component of the document (14.3.2, âMetadata Streamsâ)
	â¢	In a document information dictionary associated with the document (14.3.3, âDocument Information Dictionaryâ)

NOTE
Document information dictionaries is the original way that metadata was included in a PDF file. 
Metadata streams were introduced in PDF 1.4 and is now the preferred method to include metadata.

Metadata Streams

Metadata, both for an entire document and for components within a document, may be stored in PDF streams called metadata streams (PDF 1.4).

NOTE 1
Metadata streams have the following advantages over the document information dictionary:
	â¢	PDF-based workflows often embed metadata-bearing artwork as components within larger documents. 
		Metadata streams provide a standard way of preserving the metadata of these components for examination downstream. 
		PDF-aware conforming products should be able to derive a list of all metadata-bearing document components from the PDF document itself.
	â¢	PDF documents are often made available on the Web or in other environments, where many tools routinely examine, catalogue, and classify documents. 
		These tools should be able to understand the self-contained description of the document even if they do not understand PDF.

Besides the usual entries common to all stream dictionaries, the metadata stream dictionary shall contain additional entries.
The contents of a metadata stream shall be the metadata represented in Extensible Markup Language (XML).

NOTE 2
This information is visible as plain text to tools that are not PDF-aware only if the metadata stream is both unfiltered and unencrypted.'
%
category: 'accessing entries'
method: Metadata
Subtype
	<type: #Name>
	<required>
	<attribute: 1 documentation: 'The type of metadata stream that this dictionary describes; shall be XML.'>
	^self objectAt: #Subtype
%
category: 'accessing'
classmethod: Names
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Names
		supertype: #Dictionary
		version: #(1 2)
		section: '7.7.4'
		documentation: 'A PDF document may include general information, such as the documentâs title, author, and creation and modification dates. 
Such global information about the document (as opposed to its content or structure) is called metadata and is intended to assist in cataloguing and searching for documents in external databases. 
Beginning with PDF 1.4, metadata may also be specified for individual components of a document.

Metadata may be stored in a PDF document in either of the following ways:

	â¢	In a metadata stream (PDF 1.4) associated with the document or a component of the document (14.3.2, âMetadata Streamsâ)
	â¢	In a document information dictionary associated with the document (14.3.3, âDocument Information Dictionaryâ)

NOTE
Document information dictionaries is the original way that metadata was included in a PDF file. 
Metadata streams were introduced in PDF 1.4 and is now the preferred method to include metadata.

Metadata Streams

Metadata, both for an entire document and for components within a document, may be stored in PDF streams called metadata streams (PDF 1.4).

NOTE 1
Metadata streams have the following advantages over the document information dictionary:
	â¢	PDF-based workflows often embed metadata-bearing artwork as components within larger documents. 
		Metadata streams provide a standard way of preserving the metadata of these components for examination downstream. 
		PDF-aware conforming products should be able to derive a list of all metadata-bearing document components from the PDF document itself.
	â¢	PDF documents are often made available on the Web or in other environments, where many tools routinely examine, catalogue, and classify documents. 
		These tools should be able to understand the self-contained description of the document even if they do not understand PDF.

Besides the usual entries common to all stream dictionaries, the metadata stream dictionary shall contain additional entries.
The contents of a metadata stream shall be the metadata represented in Extensible Markup Language (XML).

NOTE 2
This information is visible as plain text to tools that are not PDF-aware only if the metadata stream is both unfiltered and unencrypted.'
%
category: 'accessing entries'
method: Names
AlternatePresentations
	<type: #NameTree>
	<version: 1 dot: 4>
	<attribute: 9 documentation: 'A name tree mapping name strings to alternate presentations.'>
	^self objectAt: #AlternatePresentations ifAbsent: [(PDF classAt: #NameTree) empty]
%
method: Names
AP
	<type: #NameTree>
	<version: 1 dot: 3>
	<attribute: 2 documentation: 'A name tree mapping name strings to annotation appearance streams.'>
	^self objectAt: #AP ifAbsent: [(PDF classAt: #NameTree) empty]
%
method: Names
Dests
	<typeNameTreeOf: #Destination>
	<version: 1 dot: 2>
	<attribute: 1 documentation: 'A name tree mapping name strings to destinations.'>
	^self objectAt: #Dests ifAbsent: [(PDF classAt: #NameTree) empty]
%
method: Names
EmbeddedFiles
	<typeNameTreeOf: #FileSpecification>
	<version: 1 dot: 4>
	<attribute: 8 documentation: 'A name tree mapping name strings to file specifications for embedded file streams.'>
	^self objectAt: #EmbeddedFiles ifAbsent: [(PDF classAt: #NameTree) empty]
%
method: Names
IDS
	<type: #NameTree>
	<version: 1 dot: 3>
	<attribute: 6 documentation: 'A name tree mapping digital identifiers to Web Capture content sets.'>
	^self objectAt: #IDS ifAbsent: [(PDF classAt: #NameTree) empty]
%
method: Names
JavaScript
	<type: #NameTree>
	<version: 1 dot: 3>
	<attribute: 3 documentation: 'A name tree mapping name strings to document-level JavaScript actions.'>
	^self objectAt: #JavaScript ifAbsent: [(PDF classAt: #NameTree) empty]
%
method: Names
Pages
	<type: #NameTree>
	<version: 1 dot: 3>
	<attribute: 4 documentation: 'A name tree mapping name strings to visible pages for use in interactive forms.'>
	^self objectAt: #Pages ifAbsent: [(PDF classAt: #NameTree) empty]
%
method: Names
Renditions
	<type: #NameTree>
	<version: 1 dot: 5>
	<attribute: 10 documentation: 'A name tree mapping name strings (which shall have Unicode encoding) to rendition objects.'>
	^self objectAt: #Renditions ifAbsent: [(PDF classAt: #NameTree) empty]
%
method: Names
Templates
	<type: #NameTree>
	<version: 1 dot: 3>
	<attribute: 5 documentation: 'A name tree mapping name strings to invisible (template) pages for use in interactive forms.'>
	^self objectAt: #Templates ifAbsent: [(PDF classAt: #NameTree) empty]
%
method: Names
URLS
	<type: #NameTree>
	<version: 1 dot: 3>
	<attribute: 7 documentation: 'A name tree mapping uniform resource locators (URLs) to Web Capture content sets'>
	^self objectAt: #URLS ifAbsent: [(PDF classAt: #NameTree) empty]
%
category: 'accessing'
classmethod: OutputIntent
pdfTypeDefinition
	^PDFTypeDefinition
		name: #OutputIntent
		supertype: #Dictionary
		version: #(1 4)
		section: '14.11.6'
		documentation: 'Output intents provide a means for matching the colour characteristics of a PDF document with 
those of a target output device or production environment in which the document will be printed. 
The optional OutputIntents entry in the document catalogue holds an array of output intent dictionaries, 
each describing the colour reproduction characteristics of a possible output device or production condition. 
The contents of these dictionaries may vary for different devices and conditions. 
The dictionaryâs Sentry specifies an output intent subtype that determines the format and meaning of the remaining entries.

NOTE 1
This use of multiple output intents allows the production process to be customized to the expected workflow and the specific tools available. 
For example, one production facility might process files conforming to a recognized standard such as PDF/X-1, 
while another uses the PDF/A standard to produce RGB output for document distribution on the Web. 
Each of these workflows would require different sets of output intent information. 
Multiple output intents also allow the same PDF file to be distributed unmodified to multiple production facilities. 
The choice of which output intent to use in a given production environment is a matter for agreement between the purchaser and provider of production services. 
PDF intentionally does not include a selector for choosing a particular output intent from within the PDF file.

At the time of publication, three output intent subtypes have been defined: 
	GTS_PDFX corresponding to the PDF/X format standard specified in ISO 15930, 
	GTS_PDFA1 corresponding to the PDF/A standard as defined by ISO 19005, and 
	ISO_PDFE1 corresponding to the PDF/E standard as defined by ISO 24517. 

Other subtypes may be added in the future; the names of any such additional subtypes shall conform to the naming guidelines.'
%
category: 'accessing entries'
method: OutputIntent
DestOutputProfile
	<type: #Stream>
	<attribute: 6 documentation: '(Required if OutputConditionIdentifier does not specify a standard production condition; optional otherwise) 
An ICC profile stream defining the transformation from the PDF documentâs source colours to output device colorants.

The format of the profile stream is the same as that used in specifying an ICCBased colour space. 
The output transformation uses the profileâs âfrom CIEâ information (BToA in ICC terminology); 
the âto CIEâ (AToB) information may optionally be used to remap source colour values to 
some other destination colour space, such as for screen preview or hardcopy proofing.'>
	^self objectAt: #DestOutputProfile
%
method: OutputIntent
Info
	<type: #String>
	<attribute: 5 documentation: '(Required if OutputConditionIdentifier does not specify a standard production condition; optional otherwise) 
A human-readable text string containing additional information or comments about the intended target device or production condition.'>
	^self objectAt: #Info ifAbsent: ['' asPDF]
%
method: OutputIntent
OutputCondition
	<type: #String>
	<attribute: 2 documentation: 'A text string concisely identifying the intended output device or production condition in human-readable form. 
This is the preferred method of defining such a string for presentation to the user.'>
	^self objectAt: #OutputCondition ifAbsent: ['' asPDF]
%
method: OutputIntent
OutputConditionIdentifier
	<type: #String>
	<required>
	<attribute: 3 documentation: 'A text string identifying the intended output device or production condition in human- or machine-readable form. 
If human-readable, this string may be used in lieu of an OutputCondition string for presentation to the user.

A typical value for this entry may be the name of a production condition maintained in an industry-standard registry 
such as the ICC Characterization Data Registry (see the Bibliography). 
If the designated condition matches that in effect at production time, 
the production software is responsible for providing the corresponding ICC profile as defined in the registry.

If the intended production condition is not a recognized standard, 
the value of this entry may be Custom or an application-specific, machine-readable name. 
The DestOutputProfile entry defines the ICC profile, and the Info entry shall be used for further human-readable identification.'>
	^self objectAt: #OutputConditionIdentifier
%
method: OutputIntent
RegistryName
	<type: #String>
	<attribute: 4 documentation: 'An text string (conventionally a uniform resource identifier, or URI) identifying the registry in which the condition designated by OutputConditionIdentifier is defined.'>
	^self objectAt: #RegistryName ifAbsent: ['' asPDF]
%
method: OutputIntent
S
	<type: #Name>
	<required>
	<attribute: 1 documentation: 'The output intent subtype; shall be either one of GTS_PDFX, GTS_PDFA1, ISO_PDFE1 or a key defined by an ISO 32000 extension.'>
	^self objectAt: #S
%
category: 'accessing'
classmethod: Page
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Page
		supertype: #PageTree
		section: '7.7.3.3'
		documentation: 'The leaves of the page tree are page objects, each of which is a dictionary specifying the attributes of a single page of the document.
The table also identifies which attributes a page may inherit from its ancestor nodes in the page tree.
Attributes that are not explicitly identified in the table as inheritable shall not be inherited.'
%
category: 'accessing'
method: Page
contentGraphics
	"<ContentGraphics>"

	^ContentGraphics on: self
%
method: Page
contentString
	"<String>
	all decoded content of Contents"

	self Contents ifNil: [
		^''].
	(self Contents isKindOf: PDF Array) ifTrue: [
		| wst |
		wst := String new writeStream.
		self Contents objects do: [:contents |
			wst nextPutAll: (contents encrypted
				ifTrue: ['']
				ifFalse: [
				contents internal])].
		^wst contents].
	self Contents encrypted ifTrue: [
		^''].
	^self Contents internal
%
method: Page
count
	^1
%
method: Page
firstContents
	"<Contents>"

	(self Contents isKindOf: PDF Array) ifTrue: [
		^self Contents first].
	^self Contents
%
method: Page
firstPage
	^self
%
method: Page
numberOfPages
	^1
%
method: Page
pageAt: anInteger
	anInteger = 1 ifFalse: [
		^OffsetError raiseSignal: 'No page with number ', anInteger printString].
	^self
%
method: Page
pageNumber
	"<Integer>
	the index of the receiver in the document.
	The first page has the pageNumber 1"

	^self numberOfPreviousPages + 1
%
category: 'accessing entries'
method: Page
AA
	<type: #Dictionary>
	<version: 1 dot: 2>
	<attribute: 18 documentation: 'An additional-actions dictionary that shall define actions to be performed when the page is opened or closed.
(PDF 1.3) additional-actions dictionaries are not inheritable.'>
	^self objectAt: #AA ifAbsent: [PDF Dictionary empty]
%
method: Page
Annots
	<typeArrayOf: #Annot>
	<attribute: 17 documentation: 'An array of annotation dictionaries that shall contain indirect references to all annotations associated with the page.'>
	^self objectAt: #Annots ifAbsent: [#() asPDF]
%
method: Page
ArtBox
	<type: #Rectangle>
	<version: 1 dot: 3>
	<attribute: 8 documentation: 'A rectangle, expressed in default user space units,
that shall define the extent of the pageâs meaningful content (including potential white space) as intended by the pageâs creator.'>
	^self objectAt: #ArtBox ifAbsent: [self CropBox]
%
method: Page
B
	<typeArrayOf: #Reference>
	<version: 1 dot: 1>
	<attribute: 14 documentation: '(recommended if the page contains article beads)
An array that shall contain indirect references to all article beads appearing on the page.
The beads shall be listed in the array in natural reading order.

NOTE
The information in this entry can be created or recreated from the information obtained from the Threads key in the Catalog.'>
	^self objectAt: #B ifAbsent: [#() asPDF]
%
method: Page
BleedBox
	<type: #Rectangle>
	<version: 1 dot: 3>
	<attribute: 6 documentation: 'A rectangle, expressed in default user space units,
that shall define the region to which the contents of the page shall be clipped when output in a production environment.'>
	^self objectAt: #BleedBox ifAbsent: [self CropBox]
%
method: Page
BoxColorInfo
	<type: #Dictionary>
	<version: 1 dot: 4>
	<attribute: 9 documentation: 'A box colour information dictionary that shall specify the colours and other visual characteristics that should be used in displaying guidelines on the screen for the various page boundaries.
If this entry is absent, the application shall use its own current default settings.'>
	^self objectAt: #BoxColorInfo ifAbsent: [PDF Dictionary empty]
%
method: Page
Contents
	<type: #Contents>
	<typeArrayOf: #Contents>
	<attribute: 10 documentation: 'A content stream that shall describe the contents of this page.
If this entry is absent, the page shall be empty.

The value shall be either a single stream or an array of streams.
If the value is an array, the effect shall be as if all of the streams in the array were concatenated, in order, to form a single stream.
Conforming writers can create image objects and other resources as they occur, even though they interrupt the content stream. The division between streams may occur only at the boundaries between lexical tokens (see 7.2, "Lexical Conventions") but shall be unrelated to the pageâs logical content or organization. Applications that consume or produce PDF files need not preserve the existing structure of the Contents array. Conforming writers shall not create a Contents array containing no elements.'>
	^self objectAt: #Contents ifAbsent: [nil]
%
method: Page
Dur
	<type: #Number>
	<version: 1 dot: 1>
	<attribute: 15 documentation: 'The pageâs display duration (also called its advance timing):
the maximum length of time, in seconds, that the page shall be displayed during presentations before the viewer application shall automatically advance to the next page.
By default, the viewer shall not advance automatically.'>
	^self objectAt: #Dur ifAbsent: [nil]
%
method: Page
Group
	<type: #GroupAttributes>
	<version: 1 dot: 4>
	<attribute: 12 documentation: 'A group attributes dictionary that shall specify the attributes of the pageâs page group for use in the transparent imaging model'>
	^self objectAt: #Group ifAbsent: [PDF Dictionary new]
%
method: Page
ID
	<type: #String>
	<version: 1 dot: 3>
	<attribute: 22 documentation: '(indirect reference preferred)
The digital identifier of the pageâs parent Web Capture content set.'>
	^self objectAt: #ID ifAbsent: [nil]
%
method: Page
LastModified
	<type: #Date>
	<requiredIf: #PieceInfo>
	<version: 1 dot: 3>
	<attribute: 2 documentation: 'The date and time when the pageâs contents were most recently modified.
If a page-piece dictionary (PieceInfo) is present, the modification date shall be used to ascertain 
which of the application data dictionaries that it contains correspond to the current content of the page.'>
	^self objectAt: #LastModified ifAbsent: [nil]
%
method: Page
MediaBox
	<type: #Rectangle>
	<required>
	<inheritable>
	<attribute: 4 documentation: 'A rectangle, expressed in default user space units,
that shall define the boundaries of the physical medium on which the page shall be displayed or printed.'>
	^self inherited: #MediaBox
%
method: Page
Metadata
	<type: #Metadata>
	<version: 1 dot: 4>
	<attribute: 19 documentation: 'A metadata stream that shall contain metadata for the page.'>
	^self objectAt: #Metadata ifAbsent: [nil]
%
method: Page
Parent
	<typeIndirect: #Pages>
	<required>
	<attribute: 1 documentation: 'The page tree node that is the immediate parent of this page object.'>
	^self objectAt: #Parent
%
method: Page
PieceInfo
	<typeDictionaryOf: #PieceInfo>
	<version: 1 dot: 3>
	<attribute: 20 documentation: 'A page-piece dictionary associated with the page.'>
	^self objectAt: #PieceInfo ifAbsent: [PDF Dictionary new]
%
method: Page
PresSteps
	<type: #Dictionary>
	<version: 1 dot: 5>
	<attribute: 27 documentation: 'A navigation node dictionary that shall represent the first node on the page.'>
	^self objectAt: #PresSteps ifAbsent: [PDF Dictionary empty]
%
method: Page
PZ
	<type: #Integer>
	<version: 1 dot: 3>
	<attribute: 23 documentation: 'The pageâs preferred zoom (magnification) factor:
the factor by which it shall be scaled to achieve the natural display magnification.'>
	^self objectAt: #PZ ifAbsent: [nil]
%
method: Page
Resources
	<type: #Resources>
	<required>
	<inheritable>
	<attribute: 3 documentation: 'A dictionary containing any resources required by the page.
If the page requires no resources, the value of this entry shall be an empty dictionary.
Omitting the entry entirely indicates that the resources shall be inherited from an ancestor node in the page tree.'>
	^self inherited: #Resources
%
method: Page
SeparationInfo
	<type: #Dictionary>
	<version: 1 dot: 3>
	<attribute: 24 documentation: 'A separation dictionary that shall contain information needed to generate colour separations for the page.'>
	^self objectAt: #SeparationInfo ifAbsent: [PDF Dictionary empty]
%
method: Page
StructParents
	<type: #Integer>
	<version: 1 dot: 3>
	<attribute: 21 documentation: 'The integer key of the pageâs entry in the structural parent tree.'>
	^self objectAt: #StructParents ifAbsent: [nil]
%
method: Page
Tabs
	<type: #Name>
	<version: 1 dot: 5>
	<attribute: 25 documentation: 'A name specifying the tab order that shall be used for annotations on the page. The possible values shall be R (row order), C (column order), and S (structure order).'>
	^self objectAt: #Tabs ifAbsent: [nil]
%
method: Page
TemplateInstantiated
	<type: #Name>
	<version: 1 dot: 5>
	<attribute: 26 documentation: '(Required if this page was created from a named page object)
The name of the originating page object.'>
	^self objectAt: #TemplateInstantiated ifAbsent: [nil]
%
method: Page
Thumb
	<type: #ThumbnailImage>
	<attribute: 13 documentation: 'A stream object that shall define the pageâs thumbnail image'>
	^self objectAt: #Thumb ifAbsent: [nil]
%
method: Page
Trans
	<type: #Dictionary>
	<version: 1 dot: 1>
	<attribute: 16 documentation: 'A transition dictionary describing the transition effect that shall be used when displaying the page during presentations.'>
	^self objectAt: #Trans ifAbsent: [PDF Dictionary empty]
%
method: Page
TrimBox
	<type: #Rectangle>
	<version: 1 dot: 3>
	<attribute: 7 documentation: 'A rectangle, expressed in default user space units,
that shall define the intended dimensions of the finished page after trimming.'>
	^self objectAt: #TrimBox ifAbsent: [self CropBox]
%
method: Page
UserUnit
	<type: #Number>
	<version: 1 dot: 6>
	<attribute: 28 documentation: 'A positive number that shall give the size of default user space units, in multiples of 1/72 inch.
The range of supported values shall be implementation-dependent.
Default value: 1.0 (user space unit is 1/72 inch).'>
	^self objectAt: #UserUnit ifAbsent: [1.0 asPDF]
%
method: Page
VP
	<type: #Array>
	<version: 1 dot: 6>
	<attribute: 29 documentation: 'An array of viewport dictionaries that shall specify rectangular regions of the page.'>
	^self objectAt: #VP ifAbsent: [#() asPDF]
%
category: 'enumerating'
method: Page
pagesDo: oneArgumentBlock
	oneArgumentBlock value: self
%
category: 'testing'
method: Page
isEncrypted
	| firstContents |
	firstContents := self firstContents.
	^firstContents notNil and: [
	firstContents encrypted]
%
category: 'accessing'
classmethod: Pages
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Pages
		supertype: #PageTree
		section: '7.7.3.2'
		documentation: 'The pages of a document are accessed through a structure known as the page tree, which defines the ordering of pages in the document. Using the tree structure, conforming readers using only limited memory, can quickly open a document containing thousands of pages. The tree contains nodes of two typesâintermediate nodes, called page tree nodes, and leaf nodes, called page objectsâwhose form is described in the subsequent sub-clauses. Conforming products shall be prepared to handle any form of tree structure built of such nodes.

NOTE
The simplest structure can consist of a single page tree node that references all of the documentâs page objects directly. However, to optimize application performance, a conforming writer can construct trees of a particular form, known as balanced trees. Further information on this form of tree can be found in Data Structures and Algorithms, by Aho, Hopcroft, and Ullman (see the Bibliography).'
%
category: 'instance creation'
classmethod: Pages
empty
	| inst |
	inst := super empty.
	inst at: #Kids put: #() asPDF.
	inst at: #Count put: 0.
	^inst
%
category: 'accessing'
method: Pages
allInherited
	"<Dictionary key: Name value: PDFObject>"

	| dict |
	dict := self hasParent
		ifTrue: [self Parent allInherited]
		ifFalse: [Dictionary new].
	#(#CropBox #MediaBox #Rotate) do: [:attribute |
		(self hasKey: attribute) ifTrue: [
			dict at: attribute put: (self at: attribute)]].
	(self hasKey: #Resources) ifTrue: [
		dict
			at: #Resources
			put: (self mergedResources: (dict at: #Resources) with: (self at: #Resources))].
	^dict
%
method: Pages
count
	^self Kids content inject: 0 into: [:sum :kid | sum + kid referent count]
%
method: Pages
firstPage
	^self Kids first firstPage
%
method: Pages
numberOfPages
	^self Count content
%
method: Pages
numberOfPagesBefore: aPage
	"<Integer>
	the number of pages before aPage in the receiver"

	self Kids objects inject: self numberOfPreviousPages into: [:numberOfPages :pageTree |
		pageTree = aPage
			ifFalse: [numberOfPages + pageTree numberOfPages]
			ifTrue: [
			^numberOfPages]]
%
method: Pages
pageAt: anInteger
	| pageNumber |
	(anInteger between: 0 and: self numberOfPages) ifFalse: [
		^OffsetError raiseSignal: 'No page with number ', anInteger printString].
	pageNumber := anInteger.
	self Kids objects do: [:pageTree |
		pageTree numberOfPages < pageNumber
			ifTrue: [
			pageNumber := pageNumber - pageTree numberOfPages]
			ifFalse: [
			^pageTree pageAt: pageNumber]]
%
method: Pages
reference
	^self Kids isEmpty
		ifTrue: [
		self hasParent
			ifTrue: [self Parent referenceTo: self]
			ifFalse: [self newReference]]
		ifFalse: [
		self Kids first at: #Parent]
%
method: Pages
referenceTo: aPages
	self Kids do: [:kidRef |
		kidRef content == aPages ifTrue: [
			^kidRef]].
	^nil
%
category: 'accessing entries'
method: Pages
Count
	<type: #Integer>
	<required>
	<attribute: 2 documentation: 'The number of leaf nodes (page objects) that are descendants of this node within the page tree.'>
	^self objectAt: #Count
%
method: Pages
Kids
	<typeArrayOf: #PageTree>
	<required>
	<attribute: 1 documentation: 'An array of indirect references to the immediate children of this node. The children shall only be page objects or other page tree nodes.'>
	^self objectAt: #Kids
%
category: 'actions'
method: Pages
addPageTree: aPageTree
	"add aPageTree (a Page or a Pages) as last element"

	self addPageTree: aPageTree withParent: self reference
%
method: Pages
addPageTree: aPageTree withParent: aReferenceToSelf
	self addPageTreeReference: aPageTree newReference withParent: aReferenceToSelf
%
method: Pages
addPageTreeReference: aPageTreeReference withParent: aReferenceToSelf
	aPageTreeReference referent at: #Parent put: aReferenceToSelf.
	self at: #Kids put: (self Kids with: aPageTreeReference).
	self at: #Count put: self count.
	self hasParent ifTrue: [
		self Parent updateCount]
%
method: Pages
updateCount
	self at: #Count put: self count
%
category: 'enumerating'
method: Pages
pagesDo: oneArgumentBlock
	self Kids objects do: [:pageTree | pageTree pagesDo: oneArgumentBlock]
%
category: 'accessing'
classmethod: PageTree
pdfTypeDefinition

	^PDFTypeDefinition
		name: #PageTree
		supertype: #Dictionary
		section: '7.7.3.2'
		documentation: 'The pages of a document are accessed through a structure known as the page tree, which defines the ordering of pages in the document.
Using the tree structure, conforming readers using only limited memory, can quickly open a document containing thousands of pages.
The tree contains nodes of two typesâintermediate nodes, called page tree nodes, and leaf nodes, called page objects.
Conforming products shall be prepared to handle any form of tree structure built of such nodes.'
%
category: 'accessing'
method: PageTree
contentWithoutCycles
	| copy |
	copy := super contentWithoutCycles.
	copy removeKey: #Parent ifAbsent: [nil].
	^copy
%
method: PageTree
count
	"<Integer>"

	^self subclassResponsibility
%
method: PageTree
firstPage
	"<Page>"

	^self subclassResponsibility
%
method: PageTree
inherited: aSymbol
	"<PDF.Object>
	returns the object which MUST be present in the Parent chain.
	If the attribute is absent, look for it in the parents.
	Throw error if not found"

	| pdf unique |
	unique := 'unique'.
	pdf := self content at: aSymbol ifAbsent: [unique].
	pdf == unique ifFalse: [
		^pdf pdfObject].
	^(self Parent inherited: aSymbol) pdfObject
%
method: PageTree
mergedResources: aGeneralResources with: aSpecificResources
	"<Dictionary key: Name value: PDFObject>"

	| merged |
	merged := aGeneralResources copy.
	aSpecificResources keysAndValuesDo: [:name :object |
		| newObject |
		newObject := (merged hasKey: name)
			ifTrue: [
			self mergedResources: (merged at: name) with: object]
			ifFalse: [
			object].
		merged at: name put: newObject].
	^merged
%
method: PageTree
numberOfPages
	"<Integer>"

	^self subclassResponsibility
%
method: PageTree
numberOfPreviousPages
	"<Integer>
	the number of pages before the receiver in the document."

	self hasParent ifFalse: [
		^0].
	^self Parent numberOfPagesBefore: self
%
method: PageTree
objectAt: aSymbol inheritOr: aBlock
	"<PDF.Object>
	returns the object.
	If the attribute is absent, look for it in the parents.
	If not found, answer the block value"

	| pdf unique |
	unique := 'unique'.
	pdf := self content at: aSymbol ifAbsent: [unique].
	pdf == unique ifFalse: [
		^pdf pdfObject].
	pdf := self Parent objectAt: aSymbol inheritOr: [
		^aBlock value].
	^pdf pdfObject
%
method: PageTree
pageAt: anInteger
	"<Page>
	throws exception when out of bounds"

	^self subclassResponsibility
%
category: 'accessing entries'
method: PageTree
CropBox
	<type: #Rectangle>
	<inheritable>
	<attribute: 4 documentation: 'A rectangle, expressed in default user space units,
that shall define the visible region of default user space.
When the page is displayed or printed, its contents shall be clipped (cropped) to this rectangle
and then shall be imposed on the output medium in some implementation-defined manner.
Default value: the value of MediaBox.'>
	^self objectAt: #CropBox inheritOr: [self MediaBox]
%
method: PageTree
MediaBox
	<type: #Rectangle>
	<inheritable>
	<attribute: 3 documentation: 'A rectangle, expressed in default user space units,
that shall define the boundaries of the physical medium on which the page shall be displayed or printed.'>
	^self inherited: #MediaBox
%
method: PageTree
Parent
	<typeIndirect: #Pages>
	<attribute: 1 documentation: '(Required except in root node; prohibited in the root node)
	The page tree node that is the immediate parent of this one.'>
	^self objectAt: #Parent ifAbsent: [PDF Dictionary empty]
%
method: PageTree
Resources
	<type: #Resources>
	<inheritable>
	<attribute: 2 documentation: 'A dictionary containing any resources required by the page.
If the page requires no resources, the value of this entry shall be an empty dictionary.
Omitting the entry entirely indicates that the resources shall be inherited from an ancestor node in the page tree.'>
	^self inherited: #Resources
%
method: PageTree
Rotate
	<type: #Integer>
	<inheritable>
	<attribute: 5 documentation: 'The number of degrees by which the page shall be rotated clockwise when displayed or printed.
The value shall be a multiple of 90.'>
	^self objectAt: #Rotate inheritOr: [0 asPDF]
%
category: 'comparing'
method: PageTree
= anObject
	^self class == anObject class and: [
	self contentWithoutCycles = anObject contentWithoutCycles]
%
method: PageTree
hash
	^self contentWithoutCycles hash
%
category: 'copying'
method: PageTree
copyDownInherited
	"add all inherited attributes from the parents"

	| dict |
	dict := self hasParent ifTrue: [
		self Parent allInherited].
	dict keysAndValuesDo: [:name :object |
		| newObject |
		newObject := object.
		((self hasKey: name) and: [
		name = #Resources]) ifTrue: [
				newObject := self mergedResources: self Resources with: object].
		self at: name put: newObject]
%
method: PageTree
copyIsolatedWithNewReferences
	"<Page>
	dont copy the parent reference - the whole document would be included"

	| copy |
	copy := self copy.
	"copy copyDownInherited."
	copy content removeKey: #Parent ifAbsent: [nil].
	^copy copyWithNewReferences
%
category: 'enumerating'
method: PageTree
pagesDo: oneArgumentBlock
	self subclassResponsibility
%
category: 'testing'
method: PageTree
hasParent
	^self hasKey: #Parent
%
category: 'accessing'
classmethod: PieceInfo
pdfTypeDefinition
	^PDFTypeDefinition
		name: #PieceInfo
		supertype: #Dictionary
		version: #(1 3)
		section: '14.11.6'
		documentation: 'A page-piece dictionary (PDF 1.3) may be used to hold private conforming product data. The data may be associated with a page or form XObject by means of the optional PieceInfo entry in the page object or form dictionary. Beginning with PDF 1.4, private data may also be associated with the PDF document by means of the PieceInfo entry in the document catalogue.

NOTE 1		Conforming products may use this dictionary as a place to store private data in connection with that document, page, or form. Such private data can convey information meaningful to the conforming product that produces it (such as information on object grouping for a graphics editor or the layer information used by Adobe PhotoshopÂ®) but may be ignored by general-purpose conforming readers.

A page-piece dictionary may contain any number of entries, each keyed by the name of a distinct conforming product or of a well-known data type recognized by a family of conforming products. The value associated with each key shall be a data dictionary containing the private data that shall be used by the conforming product. The Private entry may have a value of any data type, but typically it is a dictionary containing all of the private data needed by the conforming product other than the actual content of the document, page, or form.'
%
category: 'accessing entries'
method: PieceInfo
LastModified
	<type: #Date>
	<required>
	<attribute: 1 documentation: 'The date and time when the contents of the document, page, or form were most recently modified by this conforming product.'>
	^self objectAt: #LastModified
%
method: PieceInfo
Private
	<type: #Object>
	<attribute: 2 documentation: 'Any private data appropriate to the conforming product, typically in the form of a dictionary.'>
	^self objectAt: #Private ifAbsent: [PDF Dictionary empty]
%
category: 'accessing'
classmethod: Resources
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Resources
		supertype: #Dictionary
		section: '7.8.3'
		documentation: 'The operands supplied to operators in a content stream shall only be direct objects; indirect objects and object references shall not be permitted.
In some cases, an operator shall refer to a PDF object that is defined outside the content stream, such as a font dictionary or a stream containing image data.
This shall be accomplished by defining such objects as named resources and referring to them by name from within the content stream.

Named resources shall be meaningful only in the context of a content stream.
The scope of a resource name shall be local to a particular content stream and shall be unrelated to externally known identifiers for objects such as fonts.
References from one object outside of content streams to another outside of content streams shall be made by means of indirect object references rather than named resources.

A content streamâs named resources shall be defined by a resource dictionary, which shall enumerate the named resources needed by the operators in the content stream and the names by which they can be referred to.'
%
category: 'accessing'
method: Resources
fonts
	"<Dictionary of: Fonts>"

	^self at: #Font ifAbsentPut: [PDF Dictionary empty]
%
method: Resources
idFor: aResourceObject
	"<Symbol>
	find the resource ID for aResourceObject.
	If it is not there, add a reference to aResourceObject with a new ID.
	aResourceObject knows which resource directory to use and how to name the IDs"

	| resourceDictionary newId |
	resourceDictionary := self resourceDictionaryFor: aResourceObject.
	resourceDictionary keysAndValuesDo: [:key :value |
		value pdfObject = aResourceObject ifTrue: [
			^key]].
	newId := self newIdFor: aResourceObject in: resourceDictionary.
	resourceDictionary at: newId put: aResourceObject newReference.
	^newId
%
method: Resources
newIdFor: aResourceObject in: aResourceDictionary
	"<Symbol>
	our IDs start with 1 (not with 0 like Illustrator)"

	| prefix existingObjects |
	prefix := aResourceObject class resourcePrefix.
	existingObjects := aResourceDictionary keys select: [:key |
		key matchPattern: (Array
			with: prefix
			with: $*)].
	^(prefix , (existingObjects size + 1) printString) asSymbol
%
method: Resources
resourceDictionaryFor: aResourceObject
	"<Dictionary>"

	^(self at: aResourceObject class resourceType ifAbsentPut: [PDF Dictionary empty]) pdfObject
%
category: 'accessing entries'
method: Resources
ColorSpace
	<typeDictionaryOf: #ColourSpace>
	<attribute: 2 documentation: 'A dictionary that maps each resource name to either the name of a device-dependent colour space or an array describing a colour space.'>
	^self objectAt: #ColorSpace ifAbsent: [PDF Dictionary new]
%
method: Resources
ExtGState
	<typeDictionaryOf: #ExtGState>
	<attribute: 1 documentation: 'A dictionary that maps resource names to graphics state parameter dictionaries.'>
	^self objectAt: #ExtGState ifAbsent: [PDF Dictionary new]
%
method: Resources
Font
	<typeDictionaryOf: #Font>
	<attribute: 6 documentation: 'A dictionary that maps resource names to font dictionaries.'>
	^self objectAt: #Font ifAbsent: [PDF Dictionary new]
%
method: Resources
Pattern
	<type: #Dictionary>
	<attribute: 3 documentation: 'A dictionary that maps resource names to pattern objects.'>
	^self objectAt: #Pattern ifAbsent: [PDF Dictionary empty]
%
method: Resources
ProcSet
	<typeArrayOf: #Name>
	<attribute: 7 documentation: 'An array of predefined procedure set names.'>
	^self objectAt: #ProcSet ifAbsent: [#() asPDF]
%
method: Resources
Properties
	"<typeDictionaryOf: #OptionalContentGroup>"
	<type: #Dictionary>
	<version: 1 dot: 2>
	<attribute: 8 documentation: 'A dictionary that maps resource names to property list dictionaries for marked content.'>
	^self objectAt: #Properties ifAbsent: [PDF Dictionary new]
%
method: Resources
Shading
	<typeDictionaryOf: #Shading>
	<version: 1 dot: 3>
	<attribute: 4 documentation: 'A dictionary that maps resource names to shading dictionaries.'>
	^self objectAt: #Shading ifAbsent: [PDF Dictionary new]
%
method: Resources
XObject
	<typeDictionaryOf: #XObject>
	<attribute: 5 documentation: 'A dictionary that maps resource names to external objects.'>
	^self objectAt: #XObject ifAbsent: [PDF Dictionary new]
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: '*PDFtalk Document-converting'
method: File
asDocument
	"<Document>
	a new document with the same contents as the receiver for writing out the PDF later"

	| newDocument info |
	newDocument := Document new.
	newDocument root: self root copyWithNewReferences.
	info := self trailer Info.
	info at: #ModDate put: Timestamp now.
	info at: #Producer put: PDF producerText.
	newDocument info: info.
	newDocument previousId: self trailer ID.
	^newDocument
%
category: '*PDFtalk Document-accessing type classes'
classmethod: PDF
Page
	^self classAt: #Page
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Rendering'.
	dict at: #comment put: 'rendering to create a Document'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Rendering'.
	dict at: #storeVersion put: '2.5.1.0'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class Renderer
DoIt
Object
	subclass: 'Renderer'
	instVarNames: #(product bounds colorspace contentOperations idsAtfonts)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Renderer category: 'PDFtalk Rendering'.
	Renderer comment: 'Renders a graphical object on a PDF Page.

Initialized on a PDF Document with a Page'.
	Renderer namespacePath: #(#PDFtalk).
%
# Define class PageRenderer
DoIt
Renderer
	subclass: 'PageRenderer'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PageRenderer category: 'PDFtalk Rendering'.
	PageRenderer comment: 'renders contents on a page'.
	PageRenderer namespacePath: #(#PDFtalk).
%
# Define class FormRenderer
DoIt
Renderer
	subclass: 'FormRenderer'
	instVarNames: #(parent)
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FormRenderer category: 'PDFtalk Rendering'.
	FormRenderer comment: 'renders contents on a form'.
	FormRenderer namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
category: '*PDFtalk Rendering-accessing'
method: CmykColor
fillColourSetter
	self isMonochrome ifTrue: [
		^(PDFtalk at: #SetNonStrokingGray) with: self asGrayValue].
	^(PDFtalk at: #SetNonStrokingCMYK) operands: self asPDFArray
%
method: CmykColor
strokeColourSetter
	self isMonochrome ifTrue: [
		^(PDFtalk at: #SetStrokingGray) with: self asGrayValue].
	^(PDFtalk at: #SetStrokingCMYK) operands: self asPDFArray
%
category: '*PDFtalk Rendering-accessing'
method: ColorValue
fillColourSetter
	self isGray ifTrue: [
		^(PDFtalk at: #SetNonStrokingGray) with: self asGrayValue].
	^(PDFtalk at: #SetNonStrokingRGB) operands: self asPDFArray
%
method: ColorValue
strokeColourSetter
	self isGray ifTrue: [
		^(PDFtalk at: #SetStrokingGray) with: self asGrayValue].
	^(PDFtalk at: #SetStrokingRGB) operands: self asPDFArray
%
DoIt
	| package policy |
	package := GsPackageLibrary createPackageNamed: #SessionMethods.
	GsPackageLibrary installPackage: package.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: FileInSymbolDictionary.
	policy externalSymbolList: (GsSession currentSession symbolList asArray copyWithout: FileInSymbolDictionary).
	policy enable.
%
category: '*PDFtalk Rendering-converting'
method: Point
asPDFArray
	^Array with: self x with: self y
%
DoIt
	| dict policy |
	dict := SymbolDictionary new.
	dict at: #UNWRITABLE put: dict.
	dict immediateInvariant.
	policy := GsPackagePolicy current.
	policy homeSymbolDict: dict.
	policy externalSymbolList: Array new.
	policy enable.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'instance creation'
classmethod: FormRenderer
newOn: aGroup bounds: aRectangle colorspace: aColourSpace in: aPageRenderer
	| inst |
	inst := self new.
	inst
		initializeGroup: aGroup
		bounds: aRectangle
		colorspace: aColourSpace
		parent: aPageRenderer.
	^inst
%
category: 'accessing'
method: FormRenderer
idForFont: loadedFont
	"the pdf font of the parent is used - with the same ID"

	^self idsAtFonts at: loadedFont ifAbsentPut: [
		| idInParent |
		idInParent := self parent idForFont: loadedFont.
		self resources fonts at: idInParent put: (self parent resources fonts at: idInParent).
		idInParent]
%
method: FormRenderer
pageRenderer
	^self parent pageRenderer
%
method: FormRenderer
parent
	"<Renderer>"

	^parent
%
category: 'actions'
method: FormRenderer
addContents
	self product contents: self contentSource
%
method: FormRenderer
setupBounds
	self product at: #BBox put: self bounds
%
category: 'initialize-release'
method: FormRenderer
initializeGroup: aGroup bounds: aRectangle colorspace: aColourSpace parent: aPageRenderer
	self initializeProduct: aGroup bounds: aRectangle colorspace: aColourSpace.
	parent := aPageRenderer
%
category: 'rendering'
method: FormRenderer
addTransparencyPageAttributesWithColorspace: aColorspace
	self parent addTransparencyPageAttributesWithColorspace: aColorspace
%
category: 'instance creation'
classmethod: PageRenderer
appendTo: aPage colorspace: aColourSpace
	| inst |
	inst := self new.
	inst initializeProduct: aPage colorspace: aColourSpace.
	^inst
%
category: 'accessing'
method: PageRenderer
pageRenderer
	^self
%
category: 'actions'
method: PageRenderer
addAnnotation: anAnnot
	self product at: #Annots put: (self product Annots with: anAnnot)
%
method: PageRenderer
addContents
	| contents |
	contents := (PDF classAt: #Contents) on: Dictionary new internal: self contentSource.
	contents filter: #FlateDecode.
	self product at: #Contents put: contents newReference
%
method: PageRenderer
append: oneArgumentBlock
	oneArgumentBlock value: self.
	self appendContents.
	self finishProduct
%
method: PageRenderer
appendContents
	| contents oldContentsRef newContents |
	contents := Contents on: Valuemap new internal: self contentSource.
	contents filter: #FlateDecode.
	oldContentsRef := self product at: #Contents.
	newContents := (oldContentsRef referent isKindOf: PDF Array)
		ifTrue: [
		oldContentsRef referent with: contents newReference]
		ifFalse: [
		Array
			with: oldContentsRef
			with: contents newReference].
	self product at: #Contents put: newContents
%
method: PageRenderer
setupBounds
	self product at: #MediaBox put: self bounds.
	self product at: #TrimBox put: self bounds
%
category: 'initialize-release'
method: PageRenderer
initializeProduct: pageToAppendTo colorspace: aColourSpace
	product := pageToAppendTo.
	colorspace := aColourSpace
%
category: 'rendering'
method: PageRenderer
addTransparencyPageAttributesWithColorspace: aColorspace
	"one may want to add /I (isolated) or /K (knock out) attributes"

	self product at: #Group ifAbsentPut: [
		| attr |
		attr := (PDF classAt: #TransparencyGroupAttributes) empty.
		attr at: #CS put: aColorspace.
		attr]
%
category: 'instance creation'
classmethod: Renderer
newOn: aPage bounds: aRectangle colorspace: aColourSpace
	| inst |
	inst := self new.
	inst initializeProduct: aPage bounds: aRectangle colorspace: aColourSpace.
	^inst
%
category: 'accessing'
method: Renderer
bounds
	"<Rectangle>"

	^bounds
%
method: Renderer
colorspace
	"<ColourSpace>
	we render in this colorspace"

	^colorspace
%
method: Renderer
contentOperations
	"<SequenceableCollection of: Operation>"

	^contentOperations ifNil: [contentOperations := OrderedCollection new]
%
method: Renderer
contentSource
	"<ByteString>"

	| wst |
	wst := Writer new.
	self contentOperations do: [:operator |
		operator writePDFOn: wst indent: 0.
		wst cr].
	^wst contents asString
%
method: Renderer
idForFont: loadedFont
	"<Symbol>
	add loadedFont with new ID if not there"

	^self idsAtFonts at: loadedFont ifAbsentPut: [
		self resources idFor: loadedFont pdfFont]
%
method: Renderer
idForFontNamed: aFontnameSymbol
	"<Symbol>
	the Resources font id"

	^self idForFont: (((PDFtalk at: #Fonts) at: #Font) fontAt: aFontnameSymbol)
%
method: Renderer
idsAtFonts
	"<Dictionary key: Graphics.Fonts.Font value: Symbol>"

	^idsAtfonts ifNil: [idsAtfonts := Valuemap new]
%
method: Renderer
newCodeForGlyph: aGlyph inFont: opentype
	"<Integer>
	answer a newly assigned code for aGlyph which is not in the WinAnsi encoding.
	these codes are collected and added as encoding difference to the PDF"

	| font |
	font := self pdfFontAt: (self idsAtFonts at: opentype).
	^font usedExtraGlyphs at: aGlyph ifAbsentPut: [font newCodeForExtraGlyph]
%
method: Renderer
pageRenderer
	"<PageRenderer>
	the top renderer for the page"

	^self subclassResponsibility
%
method: Renderer
pdfFontAt: fontId
	"<Font>"

	^self resources fonts objectAt: fontId
%
method: Renderer
pdfStringWithTabularCharacters: aString inFont: opentype
	"<String>
	string with WinAnsiEncoding where tabular glyphs are specially encoded.
	Dont use collect for TwoByteString"

	| newString |
	newString := String new.
	aString do: [:char |
		| maybeNewChar |
		maybeNewChar := self tabularCharacterFor: char in: opentype.
		newString := newString copyWith: maybeNewChar].
	^newString
%
method: Renderer
product
	"<Page | Form>"

	^product
%
method: Renderer
resources
	"<Resources>
	the current resources.
	Always add #ProcSet for backward compatibility (i.e. Quark)"

	^self product at: #Resources ifAbsentPut: [
		| dict |
		dict := (PDF classAt: #Resources) empty.
		dict at: #ProcSet put: #(#PDF #Text).
		dict]
%
method: Renderer
tabularCharacterFor: aCharacter in: aFont
	"<Character>
	with new assigned code for the tabular glyph"

	(aFont tabularGlyphFor: aCharacter) ifNotNil: [:tabularGlyph |
		^(self newCodeForGlyph: tabularGlyph inFont: aFont) asCharacter].
	^aCharacter
%
category: 'actions'
method: Renderer
addContents
	"adds the contents to the container (Page or Form)"

	^self subclassResponsibility
%
method: Renderer
addProcSet: aSymbol
	"preserving the order"

	| procSets newProcSet |
	procSets := self resources ProcSet asSmalltalkValue asSet.
	(procSets includes: aSymbol) ifTrue: [
		^self].
	procSets add: aSymbol.
	newProcSet := #(#PDF #Text #ImageB #ImageC #ImageI) select: [:procset |
		procSets includes: procset].
	self resources at: #ProcSet put: newProcSet
%
method: Renderer
finishProduct
	self idsAtFonts keysAndValuesDo: [:font :id |
		(self pdfFontAt: id) addWinAnsiEncodingWith: font]
%
method: Renderer
render: oneArgumentBlock
	"adds everything to the page or form.
	The rendering process.
	oneArgumentBlock takes the renderer as parameter"

	self setupBounds.
	oneArgumentBlock value: self.
	self addContents.
	self finishProduct
%
method: Renderer
setupBounds
	"set the bounding box in the document"

	^self subclassResponsibility
%
category: 'initialize-release'
method: Renderer
initializeProduct: initialProduct bounds: aRectangle colorspace: aColourSpace
	bounds := aRectangle.
	product := initialProduct.
	colorspace := aColourSpace
%
category: 'rendering'
method: Renderer
add: anOperator
	self contentOperations add: anOperator
%
method: Renderer
addArcCenter: centerPoint radius: radiusPoint from: angle for: deltaAngle do: aBlock
	"copied from vw 7.3.1, since the implementation of dots changed in vw 7.4"

	| ang1rad sin0 cos0 p0 adiff tanrad ang2rad cx cy ang1 delta rx ry |
	ang1 := angle.
	adiff := deltaAngle.
	adiff < 0 ifTrue: [
		adiff := adiff negated.
		ang1 := ang1 - adiff].
	adiff := adiff min: 360.
	delta := adiff.
	ang1rad := ang1 degreesToRadians.
	sin0 := ang1rad sin.
	cos0 := ang1rad cos.
	cx := centerPoint x.
	cy := centerPoint y.
	rx := radiusPoint x.
	ry := radiusPoint y.
	p0 := (cos0 * rx + cx) @ (sin0 * ry + cy).
	self moveTo: p0.
	[adiff > 90] whileTrue: [
		| w p3 |
		w := cos0.
		cos0 := sin0 negated.
		sin0 := w.
		p3 := (cos0 * rx + cx) @ (sin0 * ry + cy).
		self addArcFrom: p0 via: (p0 x + (cos0 * rx)) @ (p0 y + (sin0 * ry)) to: p3 do: aBlock.
		p0 := p3.
		adiff := adiff - 90].
	adiff > 0 ifFalse: [
		^self].
	"Compute the intersection of
	the tangents, for addArcFrom:...."
	tanrad := (adiff degreesToRadians / 2) tan.
	ang2rad := (ang1 + delta) degreesToRadians.
	self
		addArcFrom: p0
		via: (p0 x - (tanrad * sin0 * rx)) @ (p0 y + (tanrad * cos0 * ry))
		to: (cx + (radiusPoint x * ang2rad cos)) @ (cy + (radiusPoint y * ang2rad sin))
		do: aBlock
%
method: Renderer
addArcFrom: p0 via: p1 to: p2 do: aBlock
	"copied from vw 7.3.1, since the implementation of dots changed in vw 7.4"

	" p0 and p2 are tangent points.
	p1 is the intersection of the tangent lines."
	| magic |
	"The following is a magic value that causes
	Bezier curves to approximate arcs with better
	than 0.0003 accuracy."
	magic := 0.5522847.
	aBlock value: (p1 - p0) * magic + p0
		value: (p1 - p2) * magic + p2
		value: p2
%
method: Renderer
addRectangleLeft: leftNumber bottom: bottomNumber width: widthNumber height: heightNumber
	self add: (AppendRectangle
		with: leftNumber
		with: bottomNumber
		with: widthNumber
		with: heightNumber)
%
method: Renderer
addRoundedRectanglePath: box radius: radius
	"Add a rectangular path with rounded corners
	c1-p1---p2-c2
	p8            p3
	 |               |
	p7            p4
	c4-p6---p5-c3"

	| kappa l left right bottom top p1 p2 p3 p4 p5 p6 p7 p8 |
	kappa := 0.552285.
	l := radius * kappa.
	left := box left.
	right := box right.
	bottom := box top.
	top := box bottom.
	p1 := (left + radius) @ top.
	p2 := (right - radius) @ top.
	p3 := right @ (top - radius).
	p4 := right @ (bottom + radius).
	p5 := (right - radius) @ bottom.
	p6 := (left + radius) @ bottom.
	p7 := left @ (bottom + radius).
	p8 := left @ (top - radius).
	self moveTo: p1.
	self lineTo: p2.
	self curveTo: p3 controlPoint1: (p2 x + l) @ p2 y controlPoint2: p3 x @ (p3 y + l).
	self lineTo: p4.
	self curveTo: p5 controlPoint1: p4 x @ (p4 y - l) controlPoint2: (p5 x + l) @ p5 y.
	self lineTo: p6.
	self curveTo: p7 controlPoint1: (p6 x - l) @ p6 y controlPoint2: p7 x @ (p7 y - l).
	self lineTo: p8.
	self curveTo: p1 controlPoint1: p8 x @ (p8 y + l) controlPoint2: (p1 x - l) @ p1 y
%
method: Renderer
addTransparencyPageAttributesWithColorspace: aColorspace
	"add the transparency related information to the page"

	self subclassResponsibility
%
method: Renderer
capStyle: anInteger
	self add: (SetCap with: anInteger - 1)
%
method: Renderer
characterSpacing: aNumber
	self add: (CharacterSpacing with: aNumber)
%
method: Renderer
clip
	self add: Clip empty
%
method: Renderer
closeAndStroke
	self add: StrokeClosed empty
%
method: Renderer
closepath
	self add: ClosePath empty
%
method: Renderer
concat: anArray6OfNumber
	self add: (ConcatenateMatrix operands: anArray6OfNumber)
%
method: Renderer
curveTo: aPoint controlPoint1: controlPoint1 controlPoint2: controlPoint2
	self add: (AppendCurve operands: controlPoint1 asPDFArray , controlPoint2 asPDFArray , aPoint asPDFArray)
%
method: Renderer
dash: aDash
	self add: (SetDash
		with: aDash array
		with: aDash offset)
%
method: Renderer
displayArcBBoxOrigin: originPoint extent: extentPoint startAngle: startAngle sweepAngle: sweepAngle
	| center start sweep |
	start := startAngle.
	sweep := sweepAngle.
	sweep < 0 ifTrue: [
		sweep := sweep negated.
		start := start - sweep].
	sweep := 360 min: sweep.
	center := originPoint + (extentPoint / 2.0).
	self addArcCenter: center radius: extentPoint / 2.0 from: start for: sweep do: [:p2 :p3 :p4 |
		self curveTo: p4 controlPoint1: p2 controlPoint2: p3]
%
method: Renderer
displayWedgeBBoxOrigin: originPoint extent: extentPoint startAngle: startAngle sweepAngle: sweepAngle
	| center start sweep |
	start := startAngle.
	sweep := sweepAngle.
	sweep < 0 ifTrue: [
		sweep := sweep negated.
		start := start - sweep].
	sweep := 360 min: sweep.
	center := originPoint + (extentPoint / 2.0).
	self addArcCenter: center radius: extentPoint / 2.0 from: start for: sweep do: [:p2 :p3 :p4 |
		self curveTo: p4 controlPoint1: p2 controlPoint2: p3].
	sweep = 360 ifFalse: [
		self lineTo: center]
%
method: Renderer
endpath
	self add: EndPath empty
%
method: Renderer
fill
	self add: Fill empty
%
method: Renderer
fillColor: aColor
	self add: aColor fillColourSetter
%
method: Renderer
horizontalScaling: aNumber
	self add: (HorizontalScaling with: aNumber)
%
method: Renderer
inCompatibilitySectionDo: zeroArgumentBlock
	self add: BeginCompatibility empty.
	[zeroArgumentBlock value] ensure: [self add: EndCompatibility empty]
%
method: Renderer
isolatedDo: zeroArgumentBlock
	"do zeroArgumentBlock with a copy of the graphics state.
	Any changes to the graphics state done in the block will be undone when the block finishes"

	self add: SaveState empty.
	[zeroArgumentBlock value] ensure: [self add: RestoreState empty]
%
method: Renderer
joinStyle: anInteger
	self add: (SetJoin with: anInteger - 1)
%
method: Renderer
lineTo: aPoint
	self add: (AppendLine operands: aPoint asPDFArray)
%
method: Renderer
linewidth: aNumber
	self add: (SetLineWidth with: aNumber)
%
method: Renderer
miterLimit: aNumber
	self add: (SetMiterLimit with: aNumber)
%
method: Renderer
moveTo: aPoint
	self add: (Move operands: aPoint asPDFArray)
%
method: Renderer
paintShading: aShading
	self add: (PaintShading with: (self resources idFor: aShading))
%
method: Renderer
paintXObject: anXObject
	self add: (PaintXObject with: (self resources idFor: anXObject)).
	anXObject addProcSetTo: self
%
method: Renderer
setClippingPath
	self closepath.
	self clip.
	self endpath
%
method: Renderer
setExtGState: anExtGState
	self add: (SetGraphicsState with: (self resources idFor: anExtGState))
%
method: Renderer
setFont: aFontnameSymbol size: aSizeNumber
	self add: (TextFont
		with: (self idForFontNamed: aFontnameSymbol)
		with: aSizeNumber)
%
method: Renderer
showString: aString
	self add: (ShowText with: aString)
%
method: Renderer
showTextPositioned: aString
	self add: (ShowTextPositioned with: aString)
%
method: Renderer
stroke
	self add: Stroke empty
%
method: Renderer
strokeColor: aColor
	self add: aColor strokeColourSetter
%
method: Renderer
textMatrix: anArray6OfNumber
	self add: (SetTextMatrix operands: anArray6OfNumber)
%
method: Renderer
textObjectDo: zeroArgumentBlock
	self add: BeginText empty.
	[zeroArgumentBlock value] ensure: [self add: EndText empty]
%
method: Renderer
textRenderingMode: anInteger
	self add: (TextRenderingMode with: anInteger)
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: '*PDFtalk Rendering-instance creation'
classmethod: Page
newInBounds: aRectangle colorspace: aColourSpace render: oneArgumentBlock
	| renderer |
	renderer := PageRenderer newOn: self empty bounds: aRectangle colorspace: aColourSpace.
	renderer render: oneArgumentBlock.
	^renderer product
%
category: '*PDFtalk Rendering-actions'
method: Page
withColorspace: aColourSpace append: oneArgumentBlock
	(PageRenderer appendTo: self colorspace: aColourSpace) append: oneArgumentBlock
%
category: '*PDFtalk Rendering-instance creation'
classmethod: TransparencyGroup
newInBounds: aRectangle colorspace: aColourSpace in: aRenderer render: oneArgumentBlock
	| renderer |
	aRenderer addTransparencyPageAttributesWithColorspace: aColourSpace.
	renderer := FormRenderer
		newOn: self empty
		bounds: aRectangle
		colorspace: aColourSpace
		in: aRenderer.
	renderer product at: #Group put: (PDF classAt: #TransparencyGroupAttributes) empty.
	renderer render: oneArgumentBlock.
	^renderer product
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Shading'.
	dict at: #comment put: 'PDF Shading Pattern as defined in PDF 32000_2008.pdf, section 8.7.4, pp. 181

Shading patterns (PDF 1.3) provide a smooth transition between colours across an area to be painted, independent of the resolution of any particular output device and without specifying the number of steps in the colour transition. Patterns of this type shall be described by pattern dictionaries with a pattern type of 2.'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #packageName put: 'PDFtalk Shading'.
	dict at: #storeVersion put: '2.3.4.0'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class ShadingDictionary
DoIt
PDFDictionary
	subclass: 'ShadingDictionary'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ShadingDictionary category: 'PDFtalk Shading'.
	ShadingDictionary comment: 'PDF Shading as defined in PDF 32000_2008.pdf pp. 182.

A shading dictionary specifies details of a particular gradient fill, including the type of shading to be used, the geometry of the area to be shaded, and the geometry of the gradient fill.
See ShadingStream
'.
	ShadingDictionary namespacePath: #(#PDFtalk).
%
# Define class Shading
DoIt
Objecttype
	subclass: 'Shading'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Shading category: 'PDFtalk Shading'.
	Shading comment: 'PDF Shading Pattern as defined in PDF 32000_2008.pdf, section 8.7.4, pp. 181

Shading patterns (PDF 1.3) provide a smooth transition between colours across an area to be painted, independent of the resolution of any particular output device and without specifying the number of steps in the colour transition. Patterns of this type shall be described by pattern dictionaries with a pattern type of 2.'.
	Shading namespacePath: #(#PDFtalk).
%
# Define class ShadingStream
DoIt
PDFStream
	subclass: 'ShadingStream'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ShadingStream category: 'PDFtalk Shading'.
	ShadingStream comment: 'PDF Shading as defined in PDF 32000_2008.pdf pp. 182.

A shading stream specifies details of a particular gradient fill, including the type of shading to be used, the geometry of the area to be shaded, and the geometry of the gradient fill.
See ShadingDictionary
'.
	ShadingStream namespacePath: #(#PDFtalk).
%
# Define class FreeFormGouraudShadedMesh
DoIt
ShadingStream
	subclass: 'FreeFormGouraudShadedMesh'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FreeFormGouraudShadedMesh category: 'PDFtalk Shading'.
	FreeFormGouraudShadedMesh comment: 'PDF Shading as defined in PDF 32000_2008.pdf pp. 189.

Type 4 shadings (free-form Gouraud-shaded triangle meshes) are commonly used to represent complex coloured and shaded three-dimensional shapes.
The area to be shaded is defined by a path composed entirely of triangles.
The colour at each vertex of the triangles is specified, and a technique known as Gouraud interpolation is used to colour the interiors.
The interpolation functions defining the shading may be linear or nonlinear.'.
	FreeFormGouraudShadedMesh namespacePath: #(#PDFtalk).
%
# Define class RadialShading
DoIt
ShadingDictionary
	subclass: 'RadialShading'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	RadialShading category: 'PDFtalk Shading'.
	RadialShading comment: 'PDF Shading as defined in PDF 32000_2008.pdf pp. 187.

Type 3 (radial) shadings define a colour blend that varies between two circles.
Shadings of this type are commonly used to depict three-dimensional spheres and cones.

This type of shading shall not be used with an Indexed colour space.
'.
	RadialShading namespacePath: #(#PDFtalk).
%
# Define class LatticeFormGouraudShadedMesh
DoIt
ShadingStream
	subclass: 'LatticeFormGouraudShadedMesh'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	LatticeFormGouraudShadedMesh category: 'PDFtalk Shading'.
	LatticeFormGouraudShadedMesh comment: 'PDF Shading as defined in PDF 32000_2008.pdf pp. 192.

Type 5 shadings (lattice-form Gouraud-shaded triangle meshes) are similar to type 4, but instead of using free-form geometry, their vertices are arranged in a pseudorectangular lattice, which is topologically equivalent to a rectangular grid.
The vertices are organized into rows, which need not be geometrically linear.'.
	LatticeFormGouraudShadedMesh namespacePath: #(#PDFtalk).
%
# Define class AxialShading
DoIt
ShadingDictionary
	subclass: 'AxialShading'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	AxialShading category: 'PDFtalk Shading'.
	AxialShading comment: 'PDF Shading as defined in PDF 32000_2008.pdf pp. 185.

Type 2 (axial) shadings define a colour blend that varies along a linear axis between two endpoints and extends indefinitely perpendicular to that axis. The shading may optionally be extended beyond either or both endpoints by continuing the boundary colours indefinitely.

This type of shading shall not be used with an Indexed colour space.'.
	AxialShading namespacePath: #(#PDFtalk).
%
# Define class TensorProductPatchMesh
DoIt
ShadingStream
	subclass: 'TensorProductPatchMesh'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TensorProductPatchMesh category: 'PDFtalk Shading'.
	TensorProductPatchMesh comment: 'PDF Shading as defined in PDF 32000_2008.pdf pp. 198.

Type 7 shadings (tensor-product patch meshes) are identical to type 6, except that they are based on a bicubic tensor-product patch defined by 16 control points instead of the 12 control points that define a Coons patch.
The shading dictionaries representing the two patch types differ only in the value of the ShadingType entry and in the number of control points specified for each patch in the data stream.

NOTE	Although the Coons patch is more concise and easier to use, the tensor-product patch affords greater control over colour mapping'.
	TensorProductPatchMesh namespacePath: #(#PDFtalk).
%
# Define class FunctionBasedShading
DoIt
ShadingDictionary
	subclass: 'FunctionBasedShading'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FunctionBasedShading category: 'PDFtalk Shading'.
	FunctionBasedShading comment: 'PDF Shading as defined in PDF 32000_2008.pdf pp. 185.

In Type 1 (function-based) shadings, the colour at every point in the domain is defined by a specified mathematical function.
The function need not be smooth or continuous.
This type is the most general of the available shading types and is useful for shadings that cannot be adequately described with any of the other types.

This type of shading shall not be used with an Indexed colour space.
'.
	FunctionBasedShading namespacePath: #(#PDFtalk).
%
# Define class CoonsPatchMesh
DoIt
ShadingStream
	subclass: 'CoonsPatchMesh'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CoonsPatchMesh category: 'PDFtalk Shading'.
	CoonsPatchMesh comment: 'PDF Shading as defined in PDF 32000_2008.pdf pp. 194.

Type 6 shadings (Coons patch meshes) are constructed from one or more colour patches, each bounded by four cubic BÃ©zier curves.
Degenerate BÃ©zier curves are allowed and are useful for certain graphical effects.
At least one complete patch shall be specified.
A Coons patch generally has two independent aspects:
- Colours are specified for each corner of the unit square, and bilinear interpolation is used to fill in colours over the entire unit square.
- Coordinates are mapped from the unit square into a four-sided patch whose sides are not necessarily linear.
The mapping is continuous: the corners of the unit square map to corners of the patch and the sides of the unit square map to sides of the patch.'.
	CoonsPatchMesh namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
classmethod: AxialShading
pdfTypeDefinition
	^PDFTypeDefinition
		name: #AxialShading
		supertype: #Shading
		version: #(1 3)
		section: '8.7.4.5.3'
		documentation: 'Type 2 (axial) shadings define a colour blend that varies along a linear axis between two endpoints and extends indefinitely perpendicular to that axis. The shading may optionally be extended beyond either or both endpoints by continuing the boundary colours indefinitely.

This type of shading shall not be used with an Indexed colour space.'
%
classmethod: AxialShading
shadingType
	^2
%
category: 'accessing entries'
method: AxialShading
Coords
	<typeArrayOf: #Number>
	<required>
	<attribute: 1 documentation: 'An array of four numbers [x0 y0 x1 y1] specifying the starting and ending coordinates of the axis, expressed in the shadingâs target coordinate space.'>
	^self objectAt: #Coords
%
method: AxialShading
Domain
	<typeArrayOf: #Number>
	<attribute: 2 documentation: 'An array of two numbers [t0 t1] specifying the limiting values of a parametric variable t.
The variable is considered to vary linearly between these two values as the colour gradient varies between the starting and ending points of the axis.
The variable t becomes the input argument to the colour function(s).'>
	^self objectAt: #Domain ifAbsent: [#(0.0 1.0) asPDF]
%
method: AxialShading
Extend
	<typeArrayOf: #Boolean>
	<attribute: 4 documentation: 'An array of two boolean values specifying whether to extend the shading beyond the starting and ending points of the axis, respectively.'>
	^self objectAt: #Extend ifAbsent: [#(false false) asPDF]
%
method: AxialShading
Function
	<type: #Function>
	<required>
	<attribute: 3 documentation: 'A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of colour components in the shading dictionaryâs colour space).
The function(s) shall be called with values of the parametric variable t in the domain defined by the Domain entry.
Each functionâs domain shall be a superset of that of the shading dictionary.
If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.'>
	^self objectAt: #Function
%
category: 'accessing'
classmethod: CoonsPatchMesh
pdfTypeDefinition
	^PDFTypeDefinition
		name: #CoonsPatchMesh
		supertype: #Shading
		version: #(1 3)
		section: '8.7.4.5.7'
		documentation: 'Type 6 shadings (Coons patch meshes) are constructed from one or more colour patches, each bounded by four cubic BÃ©zier curves.
Degenerate BÃ©zier curves are allowed and are useful for certain graphical effects.
At least one complete patch shall be specified.
A Coons patch generally has two independent aspects:
- Colours are specified for each corner of the unit square, and bilinear interpolation is used to fill in colours over the entire unit square.
- Coordinates are mapped from the unit square into a four-sided patch whose sides are not necessarily linear.
The mapping is continuous: the corners of the unit square map to corners of the patch and the sides of the unit square map to sides of the patch.'
%
classmethod: CoonsPatchMesh
shadingType
	^6
%
category: 'accessing entries'
method: CoonsPatchMesh
BitsPerFlag
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'The number of bits used to represent the edge flag for each vertex.
The value of BitsPerFlag shall be 2, 4, or 8, but only the least significant 2 bits in each flag value shall beused.
The value for the edge flag shall be 0, 1, 2 and 3.'>
	^self objectAt: #BitsPerFlag
%
category: 'accessing'
classmethod: FreeFormGouraudShadedMesh
pdfTypeDefinition
	^PDFTypeDefinition
		name: #FreeFormGouraudShadedMesh
		supertype: #Shading
		version: #(1 3)
		section: '8.7.4.5.5'
		documentation: 'Type 4 shadings (free-form Gouraud-shaded triangle meshes) are commonly used to represent complex coloured and shaded three-dimensional shapes.
The area to be shaded is defined by a path composed entirely of triangles.
The colour at each vertex of the triangles is specified, and a technique known as Gouraud interpolation is used to colour the interiors.
The interpolation functions defining the shading may be linear or nonlinear.'
%
classmethod: FreeFormGouraudShadedMesh
shadingType
	^4
%
category: 'accessing entries'
method: FreeFormGouraudShadedMesh
BitsPerFlag
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'The number of bits used to represent the edge flag for each vertex.
The value of BitsPerFlag shall be 2, 4, or 8, but only the least significant 2 bits in each flag value shall beused.
The value for the edge flag shall be 0, 1, or 2.'>
	^self objectAt: #BitsPerFlag
%
category: 'accessing'
classmethod: FunctionBasedShading
pdfTypeDefinition
	^PDFTypeDefinition
		name: #FunctionBasedShading
		supertype: #Shading
		version: #(1 3)
		section: '8.7.4.5.2'
		documentation: 'In Type 1 (function-based) shadings, the colour at every point in the domain is defined by a specified mathematical function.
The function need not be smooth or continuous.
This type is the most general of the available shading types and is useful for shadings that cannot be adequately described with any of the other types.

This type of shading shall not be used with an Indexed colour space.'
%
classmethod: FunctionBasedShading
shadingType
	^1
%
category: 'accessing entries'
method: FunctionBasedShading
Domain
	<typeArrayOf: #Number>
	<attribute: 1 documentation: 'An array of four numbers [xmin xmax ymin ymax] specifying the rectangular domain of coordinates over which the colour function(s) are defined.'>
	^self objectAt: #Domain ifAbsent: [#(0.0 1.0 0.0 1.0) asPDF]
%
method: FunctionBasedShading
Function
	<type: #Function>
	<required>
	<attribute: 3 documentation: 'A 2-in, n-out function or an array of n 2-in, 1-out functions (where n is the number of colour components in the shading dictionaryâs colour space).
Each functionâs domain shall be a superset of that of the shading dictionary.
If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.'>
	^self objectAt: #Function
%
method: FunctionBasedShading
Matrix
	<type: #Matrix>
	<attribute: 2 documentation: 'An array of six numbers specifying a transformation matrix mapping the coordinate space specified by the Domain entry into the shadingâs target coordinate space.

NOTE	To map the domain rectangle [0.0 1.0 0.0 1.0] to a 1-inch square with lower-left corner at coordinates (100, 100) in default user space, the Matrix value would be [72 0 0 72 100 100].'>
	^self objectAt: #Matrix ifAbsent: [(PDF classAt: #Matrix) identity]
%
category: 'accessing'
classmethod: LatticeFormGouraudShadedMesh
pdfTypeDefinition
	^PDFTypeDefinition
		name: #LatticeFormGouraudShadedMesh
		supertype: #Shading
		version: #(1 3)
		section: '8.7.4.5.6.'
		documentation: 'Type 5 shadings (lattice-form Gouraud-shaded triangle meshes) are similar to type 4, but instead of using free-form geometry, their vertices are arranged in a pseudorectangular lattice, which is topologically equivalent to a rectangular grid.
The vertices are organized into rows, which need not be geometrically linear.'
%
classmethod: LatticeFormGouraudShadedMesh
shadingType
	^5
%
category: 'accessing entries'
method: LatticeFormGouraudShadedMesh
VerticesPerRow
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'The number of vertices in each row of the lattice; the value shall be greater than or equal to 2.
The number of rows need not be specified.'>
	^self objectAt: #VerticesPerRow
%
category: 'accessing'
classmethod: RadialShading
pdfTypeDefinition
	^PDFTypeDefinition
		name: #RadialShading
		supertype: #Shading
		version: #(1 3)
		section: '8.7.4.5.4'
		documentation: 'Type 3 (radial) shadings define a colour blend that varies between two circles.
Shadings of this type are commonly used to depict three-dimensional spheres and cones.

This type of shading shall not be used with an Indexed colour space.
'
%
classmethod: RadialShading
shadingType
	^3
%
category: 'accessing entries'
method: RadialShading
Coords
	<typeArrayOf: #Number>
	<required>
	<attribute: 1 documentation: 'An array of six numbers [x0 y0 r0 x1 y1 r1] specifying the centres and radii of the starting and ending circles, expressed in the shadingâs target coordinate space.
The radii r0 and r1 shall both be greater than or equal to 0.
If one radius is 0, the corresponding circle shall be treated as a point; if both are 0, nothing shall be painted.'>
	^self objectAt: #Coords
%
method: RadialShading
Domain
	<typeArrayOf: #Number>
	<attribute: 2 documentation: 'An array of two numbers [t0 t1] specifying the limiting values of a parametric variable t.
The variable is considered to vary linearly between these two values as the colour gradient varies between the starting and ending circles.
The variable t becomes the input argument to the colour function(s).'>
	^self objectAt: #Domain ifAbsent: [#(0.0 1.0) asPDF]
%
method: RadialShading
Extend
	<typeArrayOf: #Boolean>
	<attribute: 4 documentation: 'An array of two boolean values specifying whether to extend the shading beyond the starting and ending circles, respectively.'>
	^self objectAt: #Extend ifAbsent: [#(false false) asPDF]
%
method: RadialShading
Function
	<type: #Function>
	<required>
	<attribute: 3 documentation: 'A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of colour components in the shading dictionaryâs colour space).
The function(s) shall be called with values of the parametric variable t in the domain defined by the shading dictionaryâs Domain entry.
Each functionâs domain shall be a superset of that of the shading dictionary.
If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.'>
	^self objectAt: #Function
%
category: 'accessing'
classmethod: Shading
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Shading
		supertype: #Object
		version: #(1 3)
		section: '8.7.4'
		documentation: 'Shading patterns (PDF 1.3) provide a smooth transition between colours across an area to be painted, independent of the resolution of any particular output device and without specifying the number of steps in the colour transition. Patterns of this type shall be described by pattern dictionaries with a pattern type of 2.'
%
category: 'accessing'
classmethod: ShadingDictionary
resourcePrefix
	^'Sh'
%
classmethod: ShadingDictionary
resourceType
	"<Symbol>
	the name of a /Resources key"

	^#Shading
%
classmethod: ShadingDictionary
shadingType
	"<Integer>
	-1 never matches"

	^-1
%
category: 'instance creation'
classmethod: ShadingDictionary
empty
	| inst |
	inst := self new.
	inst at: #ShadingType put: self shadingType.
	^inst
%
category: 'testing'
classmethod: ShadingDictionary
isClassForDictionary: aDictionary
	| typeEntry |
	typeEntry := aDictionary at: #ShadingType ifAbsent: [
		^false].
	^self shadingType asPDF = typeEntry
%
category: 'accessing entries'
method: ShadingDictionary
AntiAlias
	<type: #Boolean>
	<attribute: 5 documentation: 'A flag indicating whether to filter the shading function to prevent aliasing artifacts.
NOTE	The shading operators sample shading functions at a rate determined by the resolution of the output device.
Aliasing can occur if the function is not smoothâthat is, if it has a high spatial frequency relative to the sampling rate.
Anti-aliasing can be computationally expensive and is usually unnecessary, since most shading functions are smooth enough or are sampled at a high enough frequency to avoid aliasing effects.
Anti-aliasing may not be implemented on some output devices, in which case this flag is ignored.'>
	^self objectAt: #AntiAlias ifAbsent: [false]
%
method: ShadingDictionary
Background
	<typeArrayOf: #Number>
	<attribute: 3 documentation: 'An array of colour components appropriate to the colour space, specifying a single background colour value.
If present, this colour shall be used, before any painting operation involving the shading, to fill those portions of the area to be painted that lie outside the bounds of the shading object.
NOTE	In the opaque imaging model, the effect is as if the painting operation were performed twice: first with the background colour and then with the shading.
NOTE	The background colour is applied only when the shading is used as part of a shading pattern, not when it is painted directly with the sh operator.'>
	^self objectAt: #Background ifAbsent: [#() asPDF]
%
method: ShadingDictionary
BBox
	<type: #Rectangle>
	<attribute: 4 documentation: 'An array of four numbers giving the left, bottom, right, and top coordinates, respectively, of the shadingâs bounding box.
The coordinates shall be interpreted in the shadingâs target coordinate space.
If present, this bounding box shall be applied as a temporary clipping boundary when the shading is painted, in addition to the current clipping path and any other clipping boundaries in effect at that time.'>
	^self objectAt: #BBox ifAbsent: [(PDF classAt: #Rectangle) new]
%
method: ShadingDictionary
ColorSpace
	<type: #ColourSpace>
	<required>
	<attribute: 2 documentation: 'The colour space in which colour values shall be expressed. This may be any device, CIE-based, or special colour space except a Pattern space.'>
	^self objectAt: #ColorSpace
%
method: ShadingDictionary
ShadingType
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'The shading type:
1 Function-based shading
2 Axial shading
3 Radial shading
4 Free-form Gouraud-shaded triangle mesh
5 Lattice-form Gouraud-shaded triangle mesh
6 Coons patch mesh
7 Tensor-product patch mesh'>
	^self objectAt: #ShadingType
%
category: 'accessing'
classmethod: ShadingStream
resourcePrefix
	^'Sh'
%
classmethod: ShadingStream
resourceType
	"<Symbol>
	the name of a /Resources key"

	^#Shading
%
classmethod: ShadingStream
shadingType
	"<Integer>
	-1 never matches"

	^-1
%
category: 'instance creation'
classmethod: ShadingStream
empty
	| inst |
	inst := self new.
	inst at: #ShadingType put: self shadingType.
	^inst
%
category: 'testing'
classmethod: ShadingStream
isClassForStream: aStream

	| typeEntry |
	typeEntry := aStream at: #ShadingType ifAbsent: [^false].
	^self shadingType asPDF = typeEntry
%
category: 'accessing entries'
method: ShadingStream
AntiAlias
	<type: #Boolean>
	<attribute: 5 documentation: 'A flag indicating whether to filter the shading function to prevent aliasing artifacts.
NOTE	The shading operators sample shading functions at a rate determined by the resolution of the output device.
Aliasing can occur if the function is not smoothâthat is, if it has a high spatial frequency relative to the sampling rate.
Anti-aliasing can be computationally expensive and is usually unnecessary, since most shading functions are smooth enough or are sampled at a high enough frequency to avoid aliasing effects.
Anti-aliasing may not be implemented on some output devices, in which case this flag is ignored.'>
	^self objectAt: #AntiAlias ifAbsent: [false]
%
method: ShadingStream
Background
	<typeArrayOf: #Number>
	<attribute: 3 documentation: 'An array of colour components appropriate to the colour space, specifying a single background colour value.
If present, this colour shall be used, before any painting operation involving the shading, to fill those portions of the area to be painted that lie outside the bounds of the shading object.
NOTE	In the opaque imaging model, the effect is as if the painting operation were performed twice: first with the background colour and then with the shading.
NOTE	The background colour is applied only when the shading is used as part of a shading pattern, not when it is painted directly with the sh operator.'>
	^self objectAt: #Background ifAbsent: [#() asPDF]
%
method: ShadingStream
BBox
	<type: #Rectangle>
	<attribute: 4 documentation: 'An array of four numbers giving the left, bottom, right, and top coordinates, respectively, of the shadingâs bounding box.
The coordinates shall be interpreted in the shadingâs target coordinate space.
If present, this bounding box shall be applied as a temporary clipping boundary when the shading is painted, in addition to the current clipping path and any other clipping boundaries in effect at that time.'>
	^self objectAt: #BBox ifAbsent: [(PDF classAt: #Rectangle) new]
%
method: ShadingStream
BitsPerComponent
	<type: #Integer>
	<required>
	<attribute: 7 documentation: 'The number of bits used to represent each colour component. The value shall be 1, 2, 4, 8, 12, or 16.'>
	^self objectAt: #BitsPerComponent
%
method: ShadingStream
BitsPerCoordinate
	<type: #Integer>
	<required>
	<attribute: 6 documentation: 'The number of bits used to represent each vertex coordinate. The value shall be 1, 2, 4, 8, 12, 16, 24, or 32.'>
	^self objectAt: #BitsPerCoordinate
%
method: ShadingStream
ColorSpace
	<type: #ColorSpace>
	<required>
	<attribute: 2 documentation: 'The colour space in which colour values shall be expressed. This may be any device, CIE-based, or special colour space except a Pattern space.'>
	^self objectAt: #ColorSpace
%
method: ShadingStream
Decode
	<typeArrayOf: #Number>
	<required>
	<attribute: 8 documentation: 'An array of numbers specifying how to map vertex coordinates and colour components into the appropriate ranges of values.
The decoding method is similar to that used in image dictionaries.
The ranges shall bespecified as follows:
	[xmin xmax ymin ymax c1,min c1,max â¦ cn,min cn,max]
Only one pair of c values shall be specified if a Function entry is present.'>
	^self objectAt: #Decode
%
method: ShadingStream
Function
	<type: #Function>
	<attribute: 9 documentation: 'A 1-in, n-out function or an array of n 1-in, 1-out functions (where n is the number of colour components in the shading dictionaryâs colour space).
If this entry is present, the colour data for each vertex shall be specified by a single parametric variable rather than by n separate colour components.
The designated function(s) shall be called with each interpolated value of the parametric variable to determine the actual colour at each point.
Each input value shall be forced into the range interval specified for the corresponding colour component in the shading dictionaryâs Decode array.
Each functionâs domain shall be a superset of that interval.
If the value returned by the function for a given colour component is out of range, it shall be adjusted to the nearest valid value.

This entry shall not be used with an Indexed colour space.'>
	^self objectAt: #Function ifAbsent: [nil]
%
method: ShadingStream
ShadingType
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'The shading type:
1 Function-based shading
2 Axial shading
3 Radial shading
4 Free-form Gouraud-shaded triangle mesh
5 Lattice-form Gouraud-shaded triangle mesh
6 Coons patch mesh
7 Tensor-product patch mesh'>
	^self objectAt: #ShadingType
%
category: 'accessing'
classmethod: TensorProductPatchMesh
pdfTypeDefinition
	^PDFTypeDefinition
		name: #TensorProductPatchMesh
		supertype: #Shading
		version: #(1 3)
		section: '8.7.4.5.8'
		documentation: 'Type 7 shadings (tensor-product patch meshes) are identical to type 6, except that they are based on a bicubic tensor-product patch defined by 16 control points instead of the 12 control points that define a Coons patch.
The shading dictionaries representing the two patch types differ only in the value of the ShadingType entry and in the number of control points specified for each patch in the data stream.'
%
classmethod: TensorProductPatchMesh
shadingType
	^7
%
category: 'accessing entries'
method: TensorProductPatchMesh
BitsPerFlag
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'The number of bits used to represent the edge flag for each vertex.
The value of BitsPerFlag shall be 2, 4, or 8, but only the least significant 2 bits in each flag value shall beused.
The value for the edge flag shall be 0, 1, 2 and 3.'>
	^self objectAt: #BitsPerFlag
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Interactive Features'.
	dict at: #comment put: 'Objects of chapter 12: Interactive Features (PDF 32000_2008.pdf pp. 362)
'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #storeVersion put: '2.5.0.0'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
# Define class Annot
DoIt
PDFDictionary
	subclass: 'Annot'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Annot category: 'PDFtalk Interactive Features'.
	Annot comment: 'PDF Annotation dictionary as defined in PDF 32000_2008.pdf, section 12.5.2, pp. 382.

The optional Annots entry in a page object holds an array of annotation dictionaries, each representing an annotation associated with the given page.
The dictionary may contain additional entries specific to a particular annotation type.
A given annotation dictionary shall be referenced from the Annots array of only one page.
This requirement applies only to the annotation dictionary itself, not to subsidiary objects, which may be shared among multiple annotations.'.
	Annot namespacePath: #(#PDFtalk).
%
# Define class Markup
DoIt
Annot
	subclass: 'Markup'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Markup category: 'PDFtalk Interactive Features'.
	Markup comment: 'PDF Markup Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.2, pp. 391.

Many annotation types are defined as markup annotations because they are used primarily to mark up PDF documents.
These annotations have text that appears as part of the annotation and may be displayed in other ways by a conforming reader, such as in a Comments pane.
'.
	Markup namespacePath: #(#PDFtalk).
%
# Define class LineAnnotation
DoIt
Markup
	subclass: 'LineAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	LineAnnotation category: 'PDFtalk Interactive Features'.
	LineAnnotation comment: 'PDF Line Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.7, pp. 397.

The purpose of a line annotation is to display a single straight line on the page.
When opened, it shall display a pop-up window containing the text of the associated note.'.
	LineAnnotation namespacePath: #(#PDFtalk).
%
# Define class BorderEffect
DoIt
PDFDictionary
	subclass: 'BorderEffect'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	BorderEffect category: 'PDFtalk Interactive Features'.
	BorderEffect comment: 'PDF border effect dictionary as defined in PDF 32000_2008.pdf, section 12.5.4, pp. 387.

Beginning with PDF 1.5, some annotations (square, circle, and polygon) may have a BE entry, which is a border effect dictionary that specifies an effect that shall be applied to the border of the annotations.
Beginning with PDF 1.6, the free text annotation may also have a BE entry. Table 167 describes the entries in a border effect dictionary.'.
	BorderEffect namespacePath: #(#PDFtalk).
%
# Define class Action
DoIt
PDFDictionary
	subclass: 'Action'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Action category: 'PDFtalk Interactive Features'.
	Action comment: 'PDF Action dictionary as defined in PDF 32000_2008.pdf, section 12.6, pp. 414.

An action dictionary defines the characteristics and behaviour of an action.'.
	Action namespacePath: #(#PDFtalk).
%
# Define class URI
DoIt
Action
	subclass: 'URI'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	URI category: 'PDFtalk Interactive Features'.
	URI comment: 'PDF URI Action as defined in PDF 32000_2008.pdf, section 12.6.4.7, pp. 423.

A uniform resource identifier (URI) is a string that identifies (resolves to) a resource on the Internetâtypically a file that is the destination of a hypertext link, although it may also resolve to a query or other entity.
(URIs are described in Internet RFC 2396, Uniform Resource Identifiers (URI): Generic Syntax)

A URI action causes a URI to be resolved'.
	URI namespacePath: #(#PDFtalk).
%
# Define class FreeTextAnnotation
DoIt
Markup
	subclass: 'FreeTextAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FreeTextAnnotation category: 'PDFtalk Interactive Features'.
	FreeTextAnnotation comment: 'PDF Free Text Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.6, pp. 395.

A free text annotation displays text directly on the page.
Unlike an ordinary text annotation, a free text annotation has no open or closed state; instead of being displayed in a pop-up window, the text shall be always visible.
'.
	FreeTextAnnotation namespacePath: #(#PDFtalk).
%
# Define class EmbeddedFile
DoIt
PDFStream
	subclass: 'EmbeddedFile'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	EmbeddedFile category: 'PDFtalk Interactive Features'.
	EmbeddedFile comment: 'PDF embedded file as defined in PDF 32000_2008.pdf, section 7.11.4.1, pp. 103.

If a PDF file contains file specifications that refer to an external file and the PDF file is archived or transmitted, some provision should be made to ensure that the external references will remain valid. One way to do this is to arrange for copies of the external files to accompany the PDF file. Embedded file streams address this problem by allowing the contents of referenced files to be embedded directly within the body of the PDF file. This makes the PDF file a self-contained unit that can be stored or transmitted as a single entity. (The embedded files are included purely for convenience and need not be directly processed by any conforming reader.)'.
	EmbeddedFile namespacePath: #(#PDFtalk).
%
# Define class Movie
DoIt
PDFDictionary
	subclass: 'Movie'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Movie category: 'PDFtalk Interactive Features'.
	Movie comment: 'PDF Movies as defined in PDF 32000_2008.pdf, section 13.4, pp. 507.

The features described in this sub-clause are obsolescent and their use is no longer recommended.
They are superseded by the general multimedia framework described in 13.2, âMultimedia.â

PDF shall embed movies within a document by means of movie annotations.
Despite the name, a movie may consist entirely of sound with no visible images to be displayed on the screen.
The Movie and A (activation) entries in the movie annotation dictionary shall refer, respectively, to a movie dictionary that shall describe the static characteristics of the movie and a movie activation dictionary that shall specify how it shall be presented.'.
	Movie namespacePath: #(#PDFtalk).
%
# Define class SquareCircle
DoIt
Markup
	subclass: 'SquareCircle'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SquareCircle category: 'PDFtalk Interactive Features'.
	SquareCircle comment: 'PDF Square and Circle Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.8, pp. 401.

Square and circle annotations shall display, respectively, a rectangle or an ellipse on the page.
When opened, they shall display a pop-up window containing the text of the associated note.
The rectangle or ellipse shall be inscribed within the annotation rectangle defined by the annotation dictionaryâs Rect entry.

Despite the names square and circle, the width and height of the annotation rectangle need not be equal.
'.
	SquareCircle namespacePath: #(#PDFtalk).
%
# Define class FileSpecification
DoIt
PDFDictionary
	subclass: 'FileSpecification'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FileSpecification category: 'PDFtalk Interactive Features'.
	FileSpecification comment: 'PDF File Specification Annotations as defined in PDF 32000_2008.pdf, section 7.11.3, pp. 102.

The dictionary form of file specification provides more flexibility than the string form, allowing different files to be specified for different file systems or platforms, or for file systems other than the standard ones (DOS/Windows, Mac OS, and UNIX).
Regardless of the platform, conforming readers should use the F and UF (beginning with PDF 1.7) entries to specify files.
The UF entry is optional, but should be included because it enables cross-platform and cross-language compatibility.'.
	FileSpecification namespacePath: #(#PDFtalk).
%
# Define class PolygonPolyline
DoIt
Markup
	subclass: 'PolygonPolyline'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PolygonPolyline category: 'PDFtalk Interactive Features'.
	PolygonPolyline comment: 'PDF Polygon and Polyline Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.9, pp. 402.

Polygon annotations display closed polygons on the page.
Such polygons may have any number of vertices connected by straight lines.
Polyline annotations are similar to polygons, except that the first and last vertex are not implicitly connected.
'.
	PolygonPolyline namespacePath: #(#PDFtalk).
%
# Define class PolyLineAnnotation
DoIt
PolygonPolyline
	subclass: 'PolyLineAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PolyLineAnnotation category: 'PDFtalk Interactive Features'.
	PolyLineAnnotation comment: 'PDF Polygon and Polyline Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.9, pp. 402.

Polygon annotations display closed polygons on the page.
Such polygons may have any number of vertices connected by straight lines.
Polyline annotations are similar to polygons, except that the first and last vertex are not implicitly connected.
'.
	PolyLineAnnotation namespacePath: #(#PDFtalk).
%
# Define class PrinterMarkAnnotation
DoIt
Annot
	subclass: 'PrinterMarkAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PrinterMarkAnnotation category: 'PDFtalk Interactive Features'.
	PrinterMarkAnnotation comment: 'PDF Printer''s Mark Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.20, pp. 410.
and 
PDF Printer''s Marks as defined in PDF 32000_2008.pdf, section 14.11.3, pp. 630.

A printerâs mark annotation represents a graphic symbol, such as a registration target, colour bar, or cut mark, that may be added to a page to assist production personnel in identifying components of a multiple-plate job and maintaining consistent output during production.
'.
	PrinterMarkAnnotation namespacePath: #(#PDFtalk).
%
# Define class SoundAnnotation
DoIt
Markup
	subclass: 'SoundAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SoundAnnotation category: 'PDFtalk Interactive Features'.
	SoundAnnotation comment: 'PDF Sound Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.16, pp. 406.

A sound annotation shall analogous to a text annotation except that instead of a text note, it contains sound recorded from the computerâs microphone or imported from a file.
When the annotation is activated, the sound shall be played.
The annotation shall behave like a text annotation in most ways, with a different icon (by default, a speaker) to indicate that it represents a sound.'.
	SoundAnnotation namespacePath: #(#PDFtalk).
%
# Define class TextMarkup
DoIt
Markup
	subclass: 'TextMarkup'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TextMarkup category: 'PDFtalk Interactive Features'.
	TextMarkup comment: 'PDF Text Markup Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.10, pp. 403.

Text markup annotations shall appear as highlights, underlines, strikeouts, or jagged (âsquigglyâ) underlines in the text of a document.
When opened, they shall display a pop-up window containing the text of the associated note.
'.
	TextMarkup namespacePath: #(#PDFtalk).
%
# Define class StrikeOutAnnotation
DoIt
TextMarkup
	subclass: 'StrikeOutAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	StrikeOutAnnotation category: 'PDFtalk Interactive Features'.
	StrikeOutAnnotation comment: 'PDF Text Markup Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.10, pp. 403.

Text markup annotations shall appear as highlights, underlines, strikeouts, or jagged (âsquigglyâ) underlines in the text of a document.
When opened, they shall display a pop-up window containing the text of the associated note.
'.
	StrikeOutAnnotation namespacePath: #(#PDFtalk).
%
# Define class MacOSFileInformation
DoIt
PDFDictionary
	subclass: 'MacOSFileInformation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	MacOSFileInformation category: 'PDFtalk Interactive Features'.
	MacOSFileInformation comment: 'PDF embedded file parameter object as defined in PDF 32000_2008.pdf, section 7.11.4.1, p. 105.

For Mac OS files, the Mac entry in the embedded file parameter dictionary should hold a further subdictionary containing Mac OSâspecific file information'.
	MacOSFileInformation namespacePath: #(#PDFtalk).
%
# Define class CircleAnnotation
DoIt
SquareCircle
	subclass: 'CircleAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CircleAnnotation category: 'PDFtalk Interactive Features'.
	CircleAnnotation comment: 'PDF Square and Circle Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.8, pp. 401.

Square and circle annotations shall display, respectively, a rectangle or an ellipse on the page.
When opened, they shall display a pop-up window containing the text of the associated note.
The rectangle or ellipse shall be inscribed within the annotation rectangle defined by the annotation dictionaryâs Rect entry.

Despite the names square and circle, the width and height of the annotation rectangle need not be equal.
'.
	CircleAnnotation namespacePath: #(#PDFtalk).
%
# Define class Destination
DoIt
Objecttype
	subclass: 'Destination'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Destination category: 'PDFtalk Interactive Features'.
	Destination comment: 'PDF Explicit Destination as defined in PDF 32000_2008.pdf, section 12.3.2, pp. 365.

A destination defines a particular view of a document, consisting of the following items:
â¢ The page of the document that shall be displayed
â¢ The location of the document window on that page
â¢ The magnification (zoom) factor

Destinations may be associated with outline items, annotations, or actions.
In each case, the destination specifies the view of the document that shall be presented when the outline item or annotation is opened or the action is performed. In addition, the optional OpenAction entry in a documentâs catalogue may specify a destination that shall be displayed when the document is opened.
A destination may be specified either explicitly by an array of parameters defining its properties or indirectly by name.'.
	Destination namespacePath: #(#PDFtalk).
%
# Define class FixedPrint
DoIt
TypedDictionary
	subclass: 'FixedPrint'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FixedPrint category: 'PDFtalk Interactive Features'.
	FixedPrint comment: 'PDF Watermark Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.22, pp. 410.

A watermark annotation shall be used to represent graphics that shall be printed at a fixed size and position on a page, regardless of the dimensions of the printed page.
The FixedPrint entry of a watermark annotation dictionary shall be a dictionary that contains values for specifying the size and position of the annotation.

Watermark annotations shall have no pop-up window or other interactive elements.
When displaying a watermark annotation on-screen, conforming readers shall use the dimensions of the media box as the page size so that the scroll and zoom behaviour is the same as for other annotations.

	NOTE	Since many printing devices have non printable margins, such margins should be taken into consideration when positioning watermark annotations near the edge of a page.
'.
	FixedPrint namespacePath: #(#PDFtalk).
%
# Define class CaretAnnotation
DoIt
Markup
	subclass: 'CaretAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	CaretAnnotation category: 'PDFtalk Interactive Features'.
	CaretAnnotation comment: 'PDF Caret Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.11, pp. 404.

A caret annotation is a visual symbol that indicates the presence of text edits.'.
	CaretAnnotation namespacePath: #(#PDFtalk).
%
# Define class AppearanceCharacteristics
DoIt
PDFDictionary
	subclass: 'AppearanceCharacteristics'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	AppearanceCharacteristics category: 'PDFtalk Interactive Features'.
	AppearanceCharacteristics comment: 'PDF Widget Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.19, pp. 409.

The MK entry may be used to provide an appearance characteristics dictionary containing additional information for constructing the annotationâs appearance stream.'.
	AppearanceCharacteristics namespacePath: #(#PDFtalk).
%
# Define class ExplicitDestination
DoIt
PDFArray
	subclass: 'ExplicitDestination'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ExplicitDestination category: 'PDFtalk Interactive Features'.
	ExplicitDestination comment: 'PDF Explicit Destination as defined in PDF 32000_2008.pdf, section 12.3.2.2, pp. 366.

The table shows the allowed syntactic forms for specifying a destination explicitly in a PDF file.
In each case, page is an indirect reference to a page object (except in a remote go-to action).
All coordinate values (left, right, top, and bottom) shall be expressed in the default user space coordinate system.
The pageâs bounding box is the smallest rectangle enclosing all of its contents.
(If any side of the bounding box lies outside the pageâs crop box, the corresponding side of the crop box shall be used instead.)

No page object can be specified for a destination associated with a remote go-to action because the destination page is in a different PDF document.
In this case, the page parameter specifies an integer page number within the remote document instead of a page object in the current document.

[page /XYZ left top zoom]
Display the page designated by page, with the coordinates (left, top) positioned at the upper-left corner of the window and the contents of the page magnified by the factor zoom.
A null value for any of the parameters left, top, or zoom specifies that the current value of that parameter shall be retained unchanged.
A zoom value of 0 has the same meaning as a null value.

[page /Fit]
Display the page designated by page, with its contents magnified just enough to fit the entire page within the window both horizontally and vertically.
If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the page within the window in the other dimension.

[page /FitH top]
Display the page designated by page, with the vertical coordinate toppositioned at the top edge of the window and the contents of the page magnified just enough to fit the entire width of the page within the window.
A null value for top specifies that the current value of that parameter shall be retained unchanged.

[page /FitV left]
Display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window and the contents of the page magnified just enough to fit the entire height of the page within the window.
A null value for left specifies that the current value of that parameter shall be retained unchanged.

[page /FitR left bottom right top]
Display the page designated by page, with its contents magnified just enough to fit the rectangle specified by the coordinates left, bottom, right, and top entirely within the window both horizontally and vertically.
If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the rectangle within the window in the other dimension.

[page /FitB]
(PDF 1.1) Display the page designated by page, with its contents magnified just enough to fit its bounding box entirely within the window both horizontally and vertically.
If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the bounding box within the window in the other dimension.

[page /FitBH top]
(PDF 1.1) Display the page designated by page, with the vertical coordinate top positioned at the top edge of the window and the contents of the page magnified just enough to fit the entire width of its bounding box within the window.
A null value for top specifies that the current value of that parameter shall be retained unchanged.

[page /FitBV left]
(PDF 1.1) Display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window and the contents of the page magnified just enough to fit the entire height of its bounding box within the window.
A null value for left specifies that the current value of that parameter shall be retained unchanged.'.
	ExplicitDestination namespacePath: #(#PDFtalk).
%
# Define class TextAnnotation
DoIt
Markup
	subclass: 'TextAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TextAnnotation category: 'PDFtalk Interactive Features'.
	TextAnnotation comment: 'PDF Text Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.4, pp. 394.

A text annotation represents a âsticky noteâ attached to a point in the PDF document.
When closed, the annotation shall appear as an icon; when open, it shall display a pop-up window containing the text of the note in a font and size chosen by the conforming reader.
Text annotations shall not scale and rotate with the page; they shall behave as if the NoZoom and NoRotate annotation flags were always set.'.
	TextAnnotation namespacePath: #(#PDFtalk).
%
# Define class BorderStyle
DoIt
PDFDictionary
	subclass: 'BorderStyle'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	BorderStyle category: 'PDFtalk Interactive Features'.
	BorderStyle comment: 'PDF border style dictionary as defined in PDF 32000_2008.pdf, section 12.5.4, pp. 386.

An annotation may optionally be surrounded by a border when displayed or printed.
If present, the border shall be drawn completely inside the annotation rectangle.
In PDF 1.1, the characteristics of the border shall be specified by the Border entry in the annotation dictionary.
Beginning with PDF 1.2, the border characteristics for some types of annotations may instead be specified in a border style dictionary designated by the annotationâs BS entry.
Such dictionaries may also be used to specify the width and dash pattern for the lines drawn by line, square, circle, and ink annotations.
If neither the Border nor the BS entry is present, the border shall be drawn as a solid line with a width of 1 point.'.
	BorderStyle namespacePath: #(#PDFtalk).
%
# Define class EmbeddedFileParameter
DoIt
PDFDictionary
	subclass: 'EmbeddedFileParameter'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	EmbeddedFileParameter category: 'PDFtalk Interactive Features'.
	EmbeddedFileParameter comment: 'PDF embedded file parameter object as defined in PDF 32000_2008.pdf, section 7.11.4.1, p. 104.

An embedded file parameter dictionary that shall contain additional file-specific information'.
	EmbeddedFileParameter namespacePath: #(#PDFtalk).
%
# Define class SquigglyAnnotation
DoIt
TextMarkup
	subclass: 'SquigglyAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SquigglyAnnotation category: 'PDFtalk Interactive Features'.
	SquigglyAnnotation comment: 'PDF Text Markup Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.10, pp. 403.

Text markup annotations shall appear as highlights, underlines, strikeouts, or jagged (âsquigglyâ) underlines in the text of a document.
When opened, they shall display a pop-up window containing the text of the associated note.
'.
	SquigglyAnnotation namespacePath: #(#PDFtalk).
%
# Define class ThreeDAnnotation
DoIt
Annot
	subclass: 'ThreeDAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ThreeDAnnotation category: 'PDFtalk Interactive Features'.
	ThreeDAnnotation comment: 'PDF 3D Annotations as defined in PDF 32000_2008.pdf, section 13.6.2, pp. 512.

3D annotations are the means by which 3D artwork shall be represented in a PDF document.

In addition to these entries, a 3D annotation shall provide an appearance stream in its AP entry that has a normal appearance (the N entry).
This appearance may be used by applications that do not support 3D annotations and by all applications for the initial display of the annotation.'.
	ThreeDAnnotation namespacePath: #(#PDFtalk).
%
# Define class FileAttachmentAnnotation
DoIt
Markup
	subclass: 'FileAttachmentAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	FileAttachmentAnnotation category: 'PDFtalk Interactive Features'.
	FileAttachmentAnnotation comment: 'PDF File Attachment Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.15, pp. 406.

A file attachment annotation contains a reference to a file, which typically shall be embedded in the PDF file.

NOTE	A table of data might use a file attachment annotation to link to a spreadsheet file based on that data; activating the annotation extracts the embedded file and gives the user an opportunity to view it or store it in the file system.

The Contents entry of the annotation dictionary may specify descriptive text relating to the attached file.
Conforming readers shall use this entry rather than the optional Desc entry in the file specification dictionary identified by the annotationâs FS entry.'.
	FileAttachmentAnnotation namespacePath: #(#PDFtalk).
%
# Define class WidgetAnnotation
DoIt
Annot
	subclass: 'WidgetAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	WidgetAnnotation category: 'PDFtalk Interactive Features'.
	WidgetAnnotation comment: 'PDF Widget Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.19, pp. 408.

Interactive forms use widget annotations to represent the appearance of fields and to manage user interactions.
As a convenience, when a field has only a single associated widget annotation, the contents of the field dictionary and the annotation dictionary may be merged into a single dictionary containing entries that pertain to both a field and an annotation.

	NOTE	This presents no ambiguity, since the contents of the two kinds of dictionaries do not conflict.'.
	WidgetAnnotation namespacePath: #(#PDFtalk).
%
# Define class PopupAnnotation
DoIt
Annot
	subclass: 'PopupAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PopupAnnotation category: 'PDFtalk Interactive Features'.
	PopupAnnotation comment: 'PDF Pop-up Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.14, pp. 405.

A pop-up annotation displays text in a pop-up window for entry and editing.
It shall not appear alone but is associated with a markup annotation, its parent annotation, and shall be used for editing the parentâs text.
It shall have no appearance stream or associated actions of its own and shall be identified by the Popup entry in the parentâs annotation dictionary.'.
	PopupAnnotation namespacePath: #(#PDFtalk).
%
# Define class PolygonAnnotation
DoIt
PolygonPolyline
	subclass: 'PolygonAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	PolygonAnnotation category: 'PDFtalk Interactive Features'.
	PolygonAnnotation comment: 'PDF Polygon and Polyline Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.9, pp. 402.

Polygon annotations display closed polygons on the page.
Such polygons may have any number of vertices connected by straight lines.
Polyline annotations are similar to polygons, except that the first and last vertex are not implicitly connected.
'.
	PolygonAnnotation namespacePath: #(#PDFtalk).
%
# Define class MovieAnnotation
DoIt
Annot
	subclass: 'MovieAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	MovieAnnotation category: 'PDFtalk Interactive Features'.
	MovieAnnotation comment: 'PDF Movie Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.17, pp. 407.

A movie annotation contains animated graphics and sound to be presented on the computer screen and through the speakers.
When the annotation is activated, the movie shall be played.'.
	MovieAnnotation namespacePath: #(#PDFtalk).
%
# Define class ViewerPreferences
DoIt
PDFDictionary
	subclass: 'ViewerPreferences'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ViewerPreferences category: 'PDFtalk Interactive Features'.
	ViewerPreferences comment: 'PDF ViewerPreferences as defined in PDF 32000_2008.pdf, section 12.2,  pp. 362.

The ViewerPreferences entry in a documentâs catalogue designates a viewer preferences dictionary (PDF 1.2) controlling the way the document shall be presented on the screen or in print.
If no such dictionary is specified, conforming readers should behave in accordance with their own current user preference settings.'.
	ViewerPreferences namespacePath: #(#PDFtalk).
%
# Define class StampAnnotation
DoIt
Markup
	subclass: 'StampAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	StampAnnotation category: 'PDFtalk Interactive Features'.
	StampAnnotation comment: 'PDF Rubber Stamp Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.12, pp. 404.

A rubber stamp annotation displays text or graphics intended to look as if they were stamped on the page with a rubber stamp.
When opened, it shall display a pop-up window containing the text of the associated note.'.
	StampAnnotation namespacePath: #(#PDFtalk).
%
# Define class Appearance
DoIt
PDFDictionary
	subclass: 'Appearance'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Appearance category: 'PDFtalk Interactive Features'.
	Appearance comment: 'PDF appearance dictionary as defined in PDF 32000_2008.pdf, section 12.5.5, pp. 389.

An annotation may define as many as three separate appearances:

â¢ The normal appearance shall be used when the annotation is not interacting with the user. This appearance is also used for printing the annotation.

â¢ The rollover appearance shall be used when the user moves the cursor into the annotationâs active area without pressing the mouse button.

â¢ The down appearance shall be used when the mouse button is pressed or held down within the annotationâs active area.

NOTE As used here, the term mouse denotes a generic pointing device that controls the location of a cursor on the screen and has at least one button that can be pressed, held down, and released.

The normal, rollover, and down appearances shall be defined in an appearance dictionary, which in turn is the value of the AP entry in the annotation dictionary.'.
	Appearance namespacePath: #(#PDFtalk).
%
# Define class MovieActivation
DoIt
PDFDictionary
	subclass: 'MovieActivation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	MovieActivation category: 'PDFtalk Interactive Features'.
	MovieActivation comment: 'PDF Movies as defined in PDF 32000_2008.pdf, section 13.4, pp. 508.

The features described in this sub-clause are obsolescent and their use is no longer recommended.
They are superseded by the general multimedia framework described in 13.2, âMultimedia.â

PDF shall embed movies within a document by means of movie annotations.
Despite the name, a movie may consist entirely of sound with no visible images to be displayed on the screen.
The Movie and A (activation) entries in the movie annotation dictionary shall refer, respectively, to a movie dictionary that shall describe the static characteristics of the movie and a movie activation dictionary that shall specify how it shall be presented.
'.
	MovieActivation namespacePath: #(#PDFtalk).
%
# Define class RedactAnnotation
DoIt
Markup
	subclass: 'RedactAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	RedactAnnotation category: 'PDFtalk Interactive Features'.
	RedactAnnotation comment: 'PDF Redaction Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.23, pp. 412.

A redaction annotation identifies content that is intended to be removed from the document.
The intent of redaction annotations is to enable the following process:
	a)	Content identification. A user applies redact annotations that specify the pieces or regions of content that should be removed.
		Up until the next step is performed, the user can see, move and redefine these annotations.
	b)	Content removal. The user instructs the viewer application to apply the redact annotations, after which the content in the area specified by the redact annotations is removed.
		In the removed contentâs place, some marking appears to indicate the area has been redacted.
		Also, the redact annotations are removed from the PDF document.

Redaction annotations provide a mechanism for the first step in the redaction process (content identification).
This allows content to be marked for redaction in a non-destructive way, thus enabling a review process for evaluating potential redactions prior to removing the specified content.

Redaction annotations shall provide enough information to be used in the second phase of the redaction process (content removal).
This phase is application-specific and requires the conforming reader to remove all content identified by the redaction annotation, as well as the annotation itself.'.
	RedactAnnotation namespacePath: #(#PDFtalk).
%
# Define class Outlines
DoIt
PDFDictionary
	subclass: 'Outlines'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Outlines category: 'PDFtalk Interactive Features'.
	Outlines comment: 'PDF Outline dictionary as defined in PDF 32000_2008.pdf, section 12.3.3,  pp. 367.

A PDF document may contain a document outline that the conforming reader may display on the screen, allowing the user to navigate interactively from one part of the document to another.
The outline consists of a tree-structured hierarchy of outline items (sometimes called bookmarks), which serve as a visual table of contents to display the documentâs structure to the user.
The user may interactively open and close individual items by clicking them with the mouse.
When an item is open, its immediate children in the hierarchy shall become visible on the screen; each child may in turn be open or closed, selectively revealing or hiding further parts of the hierarchy. 
When an item is closed, all of its descendants in the hierarchy shall be hidden.
Clicking the text of any visible item activates the item, causing the conforming reader to jump to a destination or trigger an action associated with the item.

The root of a documentâs outline hierarchy is an outline dictionary specified by the Outlines entry in the document catalogue.
Each individual outline item within the hierarchy shall be defined by an outline item dictionary.
The items at each level of the hierarchy form a linked list, chained together through their Prev and Next entries and accessed through the First and Last entries in the parent item (or in the outline dictionary in the case of top-level items).
When displayed on the screen, the items at a given level shall appear in the order in which they occur in the linked list.
'.
	Outlines namespacePath: #(#PDFtalk).
%
# Define class OutlineItem
DoIt
PDFDictionary
	subclass: 'OutlineItem'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	OutlineItem category: 'PDFtalk Interactive Features'.
	OutlineItem comment: 'PDF Outline dictionary as defined in PDF 32000_2008.pdf, section 12.3.3,  pp. 367.

A PDF document may contain a document outline that the conforming reader may display on the screen, allowing the user to navigate interactively from one part of the document to another.
The outline consists of a tree-structured hierarchy of outline items (sometimes called bookmarks), which serve as a visual table of contents to display the documentâs structure to the user.
The user may interactively open and close individual items by clicking them with the mouse.
When an item is open, its immediate children in the hierarchy shall become visible on the screen; each child may in turn be open or closed, selectively revealing or hiding further parts of the hierarchy. 
When an item is closed, all of its descendants in the hierarchy shall be hidden.
Clicking the text of any visible item activates the item, causing the conforming reader to jump to a destination or trigger an action associated with the item.

The root of a documentâs outline hierarchy is an outline dictionary specified by the Outlines entry in the document catalogue.
Each individual outline item within the hierarchy shall be defined by an outline item dictionary.
The items at each level of the hierarchy form a linked list, chained together through their Prev and Next entries and accessed through the First and Last entries in the parent item (or in the outline dictionary in the case of top-level items).
When displayed on the screen, the items at a given level shall appear in the order in which they occur in the linked list.'.
	OutlineItem namespacePath: #(#PDFtalk).
%
# Define class SquareAnnotation
DoIt
SquareCircle
	subclass: 'SquareAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	SquareAnnotation category: 'PDFtalk Interactive Features'.
	SquareAnnotation comment: 'PDF Square and Circle Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.8, pp. 401.

Square and circle annotations shall display, respectively, a rectangle or an ellipse on the page.
When opened, they shall display a pop-up window containing the text of the associated note.
The rectangle or ellipse shall be inscribed within the annotation rectangle defined by the annotation dictionaryâs Rect entry.

Despite the names square and circle, the width and height of the annotation rectangle need not be equal.
'.
	SquareAnnotation namespacePath: #(#PDFtalk).
%
# Define class ScreenAnnotation
DoIt
Annot
	subclass: 'ScreenAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ScreenAnnotation category: 'PDFtalk Interactive Features'.
	ScreenAnnotation comment: 'PDF Screen Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.18, pp. 407.

A screen annotation specifies a region of a page upon which media clips may be played.
It also serves as an object from which actions can be triggered.'.
	ScreenAnnotation namespacePath: #(#PDFtalk).
%
# Define class Sound
DoIt
TypedStream
	subclass: 'Sound'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Sound category: 'PDFtalk Interactive Features'.
	Sound comment: 'PDF Sounds as defined in PDF 32000_2008.pdf, section 13.3, pp. 506.

A sound object shall be a stream containing sample values that define a sound to be played through the computerâs speakers.
The Sound entry in a sound annotation or sound action dictionary shall identify a sound object representing the sound to be played when the annotation is activated.

Since a sound object is a stream, it may contain any of the standard entries common to all streams.
In particular, if it contains an F (file specification) entry, the sound shall be defined in an external file.
This sound file shall be self-describing, containing all information needed to render the sound; no additional information need be present in the PDF file.

	NOTE	The AIFF, AIFF-C (Mac OS), RIFF (.wav), and snd (.au) file formats are all self-describing.

If no F entry is present, the sound object itself shall contain the sample data and all other information needed to define the sound.'.
	Sound namespacePath: #(#PDFtalk).
%
# Define class UnderlineAnnotation
DoIt
TextMarkup
	subclass: 'UnderlineAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	UnderlineAnnotation category: 'PDFtalk Interactive Features'.
	UnderlineAnnotation comment: 'PDF Text Markup Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.10, pp. 403.

Text markup annotations shall appear as highlights, underlines, strikeouts, or jagged (âsquigglyâ) underlines in the text of a document.
When opened, they shall display a pop-up window containing the text of the associated note.
'.
	UnderlineAnnotation namespacePath: #(#PDFtalk).
%
# Define class WatermarkAnnotation
DoIt
Annot
	subclass: 'WatermarkAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	WatermarkAnnotation category: 'PDFtalk Interactive Features'.
	WatermarkAnnotation comment: 'PDF Watermark Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.22, pp. 410.

A watermark annotation shall be used to represent graphics that shall be printed at a fixed size and position on a page, regardless of the dimensions of the printed page.
The FixedPrint entry of a watermark annotation dictionary shall be a dictionary that contains values for specifying the size and position of the annotation.

Watermark annotations shall have no pop-up window or other interactive elements.
When displaying a watermark annotation on-screen, conforming readers shall use the dimensions of the media box as the page size so that the scroll and zoom behaviour is the same as for other annotations.

	NOTE	Since many printing devices have non printable margins, such margins should be taken into consideration when positioning watermark annotations near the edge of a page.'.
	WatermarkAnnotation namespacePath: #(#PDFtalk).
%
# Define class TrapNetAnnotation
DoIt
Annot
	subclass: 'TrapNetAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	TrapNetAnnotation category: 'PDFtalk Interactive Features'.
	TrapNetAnnotation comment: 'PDF Trap Network Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.21, pp. 410.
and 
PDF Trapping Support as defined in PDF 32000_2008.pdf, section 14.11.6.2, pp. 636.

A trap network annotation may be used to define the trapping characteristics for a page of a PDF document.
	NOTE	Trapping is the process of adding marks to a page along colour boundaries to avoid unwanted visual artifacts resulting from misregistration of colorants when the page is printed.
A page shall have no more than one trap network annotation, whose Subtype entry has the value TrapNet and which shall always be the last element in the page objectâs Annots array.'.
	TrapNetAnnotation namespacePath: #(#PDFtalk).
%
# Define class HighlightAnnotation
DoIt
TextMarkup
	subclass: 'HighlightAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	HighlightAnnotation category: 'PDFtalk Interactive Features'.
	HighlightAnnotation comment: 'PDF Text Markup Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.10, pp. 403.

Text markup annotations shall appear as highlights, underlines, strikeouts, or jagged (âsquigglyâ) underlines in the text of a document.
When opened, they shall display a pop-up window containing the text of the associated note.
'.
	HighlightAnnotation namespacePath: #(#PDFtalk).
%
# Define class LinkAnnotation
DoIt
Annot
	subclass: 'LinkAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	LinkAnnotation category: 'PDFtalk Interactive Features'.
	LinkAnnotation comment: 'PDF Link Annotation as defined in PDF 32000_2008.pdf, section 12.5.6.5, pp. 394.

A link annotation represents either a hypertext link to a destination elsewhere in the document or an action to be performed'.
	LinkAnnotation namespacePath: #(#PDFtalk).
%
# Define class Dest
DoIt
PDFDictionary
	subclass: 'Dest'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	Dest category: 'PDFtalk Interactive Features'.
	Dest comment: 'PDF Explicit Destination as defined in PDF 32000_2008.pdf, section 12.3.2.3, pp. 367.

A dictionary with a D entry whose value is an ExplicitDestination.

This form allows additional attributes to be associated with the destination, as well as enabling a go-to action that shall be used as the target of a named destination'.
	Dest namespacePath: #(#PDFtalk).
%
# Define class ThreeDActivation
DoIt
PDFDictionary
	subclass: 'ThreeDActivation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	ThreeDActivation category: 'PDFtalk Interactive Features'.
	ThreeDActivation comment: 'PDF 3D Annotations as defined in PDF 32000_2008.pdf, section 13.6.2, pp. 514.

An activation dictionary determines how the state of the annotation and its associated artwork may change.
'.
	ThreeDActivation namespacePath: #(#PDFtalk).
%
# Define class InkAnnotation
DoIt
Markup
	subclass: 'InkAnnotation'
	instVarNames: #()
	classVars: #()
	classInstVars: #()
	poolDictionaries: #()
	inDictionary: PDFtalk
%
DoIt
	InkAnnotation category: 'PDFtalk Interactive Features'.
	InkAnnotation comment: 'PDF Ink Annotations as defined in PDF 32000_2008.pdf, section 12.5.6.13, pp. 405.

An ink annotation represents a freehand âscribbleâ composed of one or more disjoint paths.
When opened, it shall display a pop-up window containing the text of the associated note.'.
	InkAnnotation namespacePath: #(#PDFtalk).
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: 'accessing'
classmethod: Action
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Action
		supertype: #Dictionary
		version: #(1 1)
		section: '12.6'
		documentation: 'An action dictionary defines the characteristics and behaviour of an action.'
%
classmethod: Action
subtype
	"<Symbol>
	subtype entry"

	^self name
%
classmethod: Action
type
	^#Action
%
category: 'instance creation'
classmethod: Action
empty
	| inst |
	inst := super empty.
	inst at: #S put: self subtype.
	^inst
%
category: 'testing'
classmethod: Action
isClassForDictionary: aDictionary
	| subtypeEntry |
	subtypeEntry := aDictionary at: #S ifAbsent: [
		^false].
	self == (PDF classAt: #Action) ifTrue: [
		^super isClassForDictionary: aDictionary].
	^self subtype asPDF = subtypeEntry asPDF
%
category: 'accessing entries'
method: Action
Next
	<type: #Action>
	<typeDictionaryOf: #Action>
	<version: 1 dot: 2>
	<attribute: 3 documentation: 'The next action or sequence of actions that shall be performed after the action represented by this dictionary.
The value is either a single action dictionary or an array of action dictionaries that shall be performed in order'>
	^self objectAt: #Next ifAbsent: [nil]
%
method: Action
S
	<type: #Name>
	<required>
	<attribute: 2 documentation: 'The type of action that this dictionary describes'>
	^self objectAt: #S
%
method: Action
Type
	<type: #Name>
	<attribute: 1 documentation: 'The type of PDF object that this dictionary describes.'>
	^self objectAt: #Type ifAbsent: [#Action asPDF]
%
category: 'accessing'
classmethod: Annot
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Annot
		supertype: #Dictionary
		section: '12.5.1'
		documentation: 'The optional Annots entry in a page object holds an array of annotation dictionaries, each representing an annotation associated with the given page.
The dictionary may contain additional entries specific to a particular annotation type.
A given annotation dictionary shall be referenced from the Annots array of only one page.
This requirement applies only to the annotation dictionary itself, not to subsidiary objects, which may be shared among multiple annotations.'
%
classmethod: Annot
subtype
	"<Symbol>
	subtype entry"

	^#''
%
classmethod: Annot
type
	^#Annot
%
category: 'instance creation'
classmethod: Annot
empty
	| inst |
	inst := super empty.
	inst at: #Subtype put: self subtype.
	^inst
%
category: 'testing'
classmethod: Annot
isClassForDictionary: aDictionary
	| subtypeEntry |
	subtypeEntry := aDictionary at: #Subtype ifAbsent: [
		^false].
	self == (PDF classAt: #Annot) ifTrue: [
		^super isClassForDictionary: aDictionary].
	^self subtype asPDF = subtypeEntry asPDF
%
category: 'accessing entries'
method: Annot
AP
	<type: #Appearance>
	<version: 1 dot: 2>
	<attribute: 9 documentation: 'An appearance dictionary specifying how the annotation shall be presented visually on the page.
Individual annotation handlers may ignore this entry and provide their own appearances'>
	^self objectAt: #AP ifAbsent: [(PDF classAt: #Appearance) empty]
%
method: Annot
AS
	<type: #Name>
	<version: 1 dot: 2>
	<attribute: 10 documentation: '(Required if the appearance dictionary AP contains one or more subdictionaries)
The annotationâs appearance state, which selects the applicable appearance stream from an appearance subdictionary'>
	^self objectAt: #AS ifAbsent: [(PDF classAt: #Name) empty]
%
method: Annot
Border
	<type: #Array>
	<attribute: 11 documentation: 'An array specifying the characteristics of the annotationâs border, which shall be drawn as a rounded rectangle.
(PDF 1.0)
The array consists of three numbers defining the horizontal corner radius, vertical corner radius, and border width, all in default user space units.
If the corner radii are 0, the border has square (not rounded) corners; if the border width is 0, no border is drawn.
(PDF 1.1)
The array may have a fourth element, an optional dash array defining a pattern of dashes and gaps that shall be used in drawing the border.
The dash array shall be specified in the same format as in the line dash pattern parameter of the graphics state.
EXAMPLE
A Border value of [0 0 1 [3 2]] specifies a border 1 unit wide, with square corners, drawn with 3-unit dashes alternating with 2-unit gaps.
NOTE (PDF 1.2)
The dictionaries for some annotation types (such as free text and polygon annotations) can include the BS entry.
That entry specifies a border style dictionary that has more settings than the array specified for the Border entry.
If an annotation dictionary includes the BS entry, then the Border entry is ignored.'>
	^self objectAt: #Border ifAbsent: [#(0 0 1) asPDF]
%
method: Annot
C
	<typeArrayOf: #Number>
	<version: 1 dot: 1>
	<attribute: 12 documentation: 'An array of numbers in the range 0.0 to 1.0, representing a colour used for the following purposes:
The background of the annotationâs icon when closed
The title bar of the annotationâs pop-up window
The border of a link annotation
The number of array elements determines the colour space in which the colour shall be defined:
0 No colour; transparent
1 DeviceGray
3 DeviceRGB
4 DeviceCMYK'>
	^self objectAt: #C ifAbsent: [#() asPDF]
%
method: Annot
Contents
	<type: #String>
	<attribute: 4 documentation: 'Text that shall be displayed for the annotation or, if this type of annotation does not display text, an alternate description of the annotationâs contents in human-readable form.
In either case, this text is useful when extracting the documentâs contents in support of accessibility to users with disabilities or for other purposes'>
	^self objectAt: #Contents ifAbsent: ['' asPDF]
%
method: Annot
F
	<type: #Integer>
	<version: 1 dot: 1>
	<attribute: 8 documentation: 'A set of flags specifying various characteristics of the annotation.
The value is an integer interpreted as one-bit flags specifying various characteristics of the annotation.
Bit positions within the flag word shall be numbered from low-order to high-order, with the lowest-order bit numbered 1.
All other bits of the integer shall be set to 0.

Bit position		Name				Meaning
	1			Invisible			If set, do not display the annotation if it does not belong to one of the standard annotation types and no annotation handler is available.
									If clear, display such an unknown annotation using an appearance stream specified by its appearance dictionary, if any.
	2			Hidden 			(PDF 1.2) If set, do not display or print the annotation or allow it to interact with the user, regardless of its annotation type or whether an annotation handler is available.
									NOTE In cases where screen space is limited, the ability to hide and show annotations selectively can be used in combination with appearance streams to display auxiliary pop-up information similar in function to online help systems.
	3			Print 				(PDF 1.2) If set, print the annotation when the page is printed.
									If clear, never print the annotation, regardless of whether it is displayed on the screen.
									NOTE This can be useful for annotations representing interactive pushbuttons, which would serve no meaningful purpose on the printed page.
	4			NoZoom 			(PDF 1.3) If set, do not scale the annotationâs appearance to match the magnification of the page.
									The location of the annotation on the page (defined by the upper-left corner of its annotation rectangle) shall remain fixed, regardless of the page magnification.
	5			NoRotate 			(PDF 1.3) If set, do not rotate the annotationâs appearance to match the rotation of the page.
									The upper-left corner of the annotation rectangle shall remain in a fixed location on the page, regardless of the page rotation.
	6			NoView 			(PDF 1.3) If set, do not display the annotation on the screen or allow it to interact with the user.
									The annotation may be printed (depending on the setting of the Print flag) but should be considered hidden for purposes of on-screen display and user interaction.
	7			ReadOnly 			(PDF 1.3) If set, do not allow the annotation to interact with the user.
									The annotation may be displayed or printed (depending on the settings of the NoView and Print flags) but should not respond to mouse clicks or change its appearance in response to mouse motions.
									This flag shall be ignored for widget annotations; its function is subsumed by the ReadOnly flag of the associated form field.
	8			Locked 			(PDF 1.4) If set, do not allow the annotation to be deleted or its properties (including position and size) to be modified by the user.
									However, this flag does not restrict changes to the annotationâs contents, such as the value of a form field.
	9			ToggleNoView 	(PDF 1.5) If set, invert the interpretation of the NoView flag for certain events.
									NOTE A typical use is to have an annotation that appears only when a mouse cursor is held over it.
	10			LockedContents 	(PDF 1.7) If set, do not allow the contents of the annotation to be modified by the user.
									This flag does not restrict deletion of the annotation or changes to other annotation properties, such as position and size.'>
	^self objectAt: #F ifAbsent: [0 asPDF]
%
method: Annot
M
	<type: #Date>
	<type: #String>
	<version: 1 dot: 1>
	<attribute: 7 documentation: 'The date and time when the annotation was most recently modified.
The format should be a date string, âDates,â but conforming readers shall accept and display a string in any format'>
	^self objectAt: #M ifAbsent: ['' asPDF]
%
method: Annot
NM
	<type: #String>
	<version: 1 dot: 4>
	<attribute: 6 documentation: 'The annotation name, a text string uniquely identifying it among all the annotations on its page'>
	^self objectAt: #NM ifAbsent: ['' asPDF]
%
method: Annot
OC
	<type: #Dictionary>
	<version: 1 dot: 5>
	<attribute: 14 documentation: 'An optional content group or optional content membership dictionary specifying the optional content properties for the annotation.
Before the annotation is drawn, its visibility shall be determined based on this entry as well as the annotation flags specified in the F entry.
If it is determined to be invisible, the annotation shall be skipped, as if it were not in the document'>
	^self objectAt: #OC ifAbsent: [PDF Dictionary empty]
%
method: Annot
P
	<typeIndirect: #Page>
	<version: 1 dot: 3>
	<attribute: 5 documentation: '(Optional except as noted below; not used in FDF files)
An indirect reference to the page object with which this annotation is associated.
This entry shall be present in screen annotations associated with rendition actions (PDF 1.5).'>
	^self objectAt: #P ifAbsent: [PDF Dictionary empty]
%
method: Annot
Rect
	<type: #Rectangle>
	<required>
	<attribute: 3 documentation: 'The annotation rectangle, defining the location of the annotation on the page in default user space units.

The annotationâs position shall be determined by the coordinates of the upper-left corner of its annotation rectangle.
When the default user space is scaled or rotated, the positions of the other three corners of the annotation rectangle are different in the altered user space than they were in the original user space.
The conforming reader shall perform this alteration automatically.
However, it shall not actually change the annotationâs Rect entry, which continues to describe the annotationâs relationship with the unscaled, unrotated user space.'>
	^self objectAt: #Rect
%
method: Annot
StructParent
	<type: #Integer>
	<version: 1 dot: 3>
	<attribute: 13 documentation: '(Required if the annotation is a structural content item)
The integer key of the annotationâs entry in the structural parent tree'>
	^self objectAt: #StructParent ifAbsent: [0 asPDF]
%
method: Annot
Subtype
	<type: #Name>
	<required>
	<attribute: 2 documentation: 'The type of annotation that this dictionary describes'>
	^self objectAt: #Subtype
%
method: Annot
Type
	<type: #Name>
	<attribute: 1 documentation: 'The type of PDF object that this dictionary describes.'>
	^self objectAt: #Type ifAbsent: [#Annot asPDF]
%
category: 'accessing'
classmethod: Appearance
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Appearance
		supertype: #Dictionary
		version: #(1 2)
		section: '12.5.5'
		documentation: 'Interactive forms use widget annotations to represent the appearance of fields and to manage user interactions.
As a convenience, when a field has only a single associated widget annotation, the contents of the field dictionary and the annotation dictionary may be merged into a single dictionary containing entries that pertain to both a field and an annotation.

	NOTE	This presents no ambiguity, since the contents of the two kinds of dictionaries do not conflict.'
%
category: 'accessing entries'
method: Appearance
D
	<type: #FormXObject>
	<type: #Dictionary>
	<attribute: 3 documentation: 'The annotationâs down appearance.
Default value: the value of the N entry.'>
	^self objectAt: #D ifAbsent: [nil]
%
method: Appearance
N
	<type: #FormXObject>
	<type: #Dictionary>
	<required>
	<attribute: 1 documentation: 'The annotationâs normal appearance.'>
	^self objectAt: #N
%
method: Appearance
R
	<type: #FormXObject>
	<type: #Dictionary>
	<attribute: 2 documentation: 'The annotationâs rollover appearance.
Default value: the value of the N entry.'>
	^self objectAt: #R ifAbsent: [nil]
%
category: 'accessing'
classmethod: AppearanceCharacteristics
pdfTypeDefinition

	^PDFTypeDefinition
		name: #AppearanceCharacteristics
		supertype: #Dictionary
		section: '12.5.6.19'
		documentation: 'The MK entry may be used to provide an appearance characteristics dictionary containing additional information for constructing the annotationâs appearance stream.'
%
category: 'accessing entries'
method: AppearanceCharacteristics
AC
	<type: #String>
	<attribute: 6 documentation: '(pushbutton fields only)
The widget annotationâs alternate (down) caption, which shall be displayed when the mouse button is pressed within its active area.'>
	^self objectAt: #AC ifAbsent: ['' asPDF]
%
method: AppearanceCharacteristics
BC
	<typeArrayOf: #Number>
	<attribute: 2 documentation: 'An array of numbers that shall be in the range 0.0 to 1.0 specifying the colour of the widget annotationâs border.
The number of array elements determines the colour space in which the colour shall bedefined:
	0	No colour; transparent
	1	DeviceGray
	3	DeviceRGB
	4	DeviceCMYK'>
	^self objectAt: #BC ifAbsent: [#() asPDF]
%
method: AppearanceCharacteristics
BG
	<typeArrayOf: #Number>
	<attribute: 3 documentation: 'An array of numbers that shall be in the range 0.0 to 1.0 specifying the colour of the widget annotationâs background.
The number of array elements shall determine the colour space, as described for BC.'>
	^self objectAt: #BG ifAbsent: [#() asPDF]
%
method: AppearanceCharacteristics
CA
	<type: #String>
	<attribute: 4 documentation: '(button fields only)
The widget annotationâs normal caption, which shall be displayed when it is not interacting with the user.

Unlike the remaining entries listed in this Table, which apply only to widget annotations associated with pushbutton fields, the CA entry may be used with any type of button field, including check boxes and radio buttons.'>
	^self objectAt: #CA ifAbsent: ['' asPDF]
%
method: AppearanceCharacteristics
I
	<typeIndirect: #FormXObject>
	<attribute: 7 documentation: '(pushbutton fields only)
A form XObject defining the widget annotationâs normal icon, which shall be displayed when it is not interacting with the user.'>
	^self objectAt: #I ifAbsent: [(PDF classAt: #FormXObject) empty]
%
method: AppearanceCharacteristics
IF
	<type: #Dictionary>
	<attribute: 10 documentation: '(pushbutton fields only)
An icon fit dictionary specifying how the widget annotationâs icon shall be displayed within its annotation rectangle.
If present, the icon fit dictionary shall apply to all of the annotationâs icons (normal, rollover, and alternate).'>
	^self objectAt: #IF ifAbsent: [PDF Dictionary empty]
%
method: AppearanceCharacteristics
IX
	<typeIndirect: #FormXObject>
	<attribute: 9 documentation: '(pushbutton fields only)
A form XObject defining the widget annotationâs alternate (down) icon, which shall be displayed when the mouse button is pressed within its active area.'>
	^self objectAt: #IX ifAbsent: [(PDF classAt: #FormXObject) empty]
%
method: AppearanceCharacteristics
R
	<type: #Integer>
	<attribute: 1 documentation: 'The number of degrees by which the widget annotation shall be rotated counterclockwise relative to the page.
The value shall be a multiple of 90.'>
	^self objectAt: #R ifAbsent: [0 asPDF]
%
method: AppearanceCharacteristics
RC
	<type: #String>
	<attribute: 5 documentation: '(pushbutton fields only)
The widget annotationâs rollover caption, which shall be displayed when the user rolls the cursor into its active area without pressing the mouse button.'>
	^self objectAt: #RC ifAbsent: ['' asPDF]
%
method: AppearanceCharacteristics
RI
	<typeIndirect: #FormXObject>
	<attribute: 8 documentation: '(pushbutton fields only)
A form XObject defining the widget annotationâs rollover icon, which shall be displayed when the user rolls the cursor into its active area without pressing the mouse button.'>
	^self objectAt: #RI ifAbsent: [(PDF classAt: #FormXObject) empty]
%
method: AppearanceCharacteristics
TP
	<type: #Integer>
	<attribute: 11 documentation: '(pushbutton fields only)
A code indicating where to position the text of the widget annotationâs caption relative to its icon:
	0	No icon; caption only
	1	No caption; icon only
	2	Caption below the icon
	3	Caption above the icon
	4	Caption to the right of the icon
	5	Caption to the left of the icon
	6	Caption overlaid directly on the icon.'>
	^self objectAt: #TP ifAbsent: [0 asPDF]
%
category: 'accessing'
classmethod: BorderEffect
pdfTypeDefinition
	^PDFTypeDefinition
		name: #BorderEffect
		supertype: #Dictionary
		version: #(1 5)
		section: '12.5.4'
		documentation: 'Beginning with PDF 1.5, some annotations (square, circle, and polygon) may have a BE entry, which is a border effect dictionary that specifies an effect that shall be applied to the border of the annotations.
Beginning with PDF 1.6, the free text annotation may also have a BE entry. Table 167 describes the entries in a border effect dictionary.'
%
category: 'accessing entries'
method: BorderEffect
I
	<type: #Number>
	<attribute: 2 documentation: '(valid only if the value of S is C)
A number describing the intensity of the effect, in the range 0 to 2.'>
	^self objectAt: #I ifAbsent: [0 asPDF]
%
method: BorderEffect
S
	<type: #Name>
	<attribute: 1 documentation: 'A name representing the border effect to apply.
Possible values are:
	S 	No effect: the border shall be as described by the annotation dictionaryâs BS entry.
	C 	The border should appear âcloudyâ. The width and dash array specified by BS shall be honored.'>
	^self objectAt: #S ifAbsent: [#S asPDF]
%
category: 'accessing'
classmethod: BorderStyle
pdfTypeDefinition
	^PDFTypeDefinition
		name: #BorderStyle
		supertype: #Dictionary
		version: #(1 2)
		section: '12.5.4'
		documentation: 'n annotation may optionally be surrounded by a border when displayed or printed.
If present, the border shall be drawn completely inside the annotation rectangle.
In PDF 1.1, the characteristics of the border shall be specified by the Border entry in the annotation dictionary.
Beginning with PDF 1.2, the border characteristics for some types of annotations may instead be specified in a border style dictionary designated by the annotationâs BS entry.
Such dictionaries may also be used to specify the width and dash pattern for the lines drawn by line, square, circle, and ink annotations.
If neither the Border nor the BS entry is present, the border shall be drawn as a solid line with a width of 1 point.'
%
classmethod: BorderStyle
type
	^#Border
%
category: 'accessing entries'
method: BorderStyle
D
	<typeArrayOf: #Number>
	<attribute: 4 documentation: 'A dash array defining a pattern of dashes and gaps that shall be used in drawing a dashed border (border style D in the S entry).
The dash array shall be specified in the same format as in the line dash pattern parameter of the graphics state.
The dash phase is not specified and shall be assumed to be 0.
EXAMPLE A D entry of [3 2] specifies a border drawn with 3-point dashes alternating with 2-point gaps.'>
	^self objectAt: #D ifAbsent: [#(3) asPDF]
%
method: BorderStyle
S
	<type: #Name>
	<attribute: 3 documentation: 'The border style:
	S 	(Solid) A solid rectangle surrounding the annotation.
	D 	(Dashed) A dashed rectangle surrounding the annotation. The dash pattern may be specified by the D entry.
	B 	(Beveled) A simulated embossed rectangle that appears to be raised above the surface of the page.
	I 	(Inset) A simulated engraved rectangle that appears to be recessed below the surface of the page.
	U 	(Underline) A single line along the bottom of the annotation rectangle.
A conforming reader shall tolerate other border styles that it does not recognize and shall use the default value.'>
	^self objectAt: #S ifAbsent: [#S asPDF]
%
method: BorderStyle
Type
	<type: #Name>
	<attribute: 1 documentation: 'The type of PDF object that this dictionary describes.'>
	^self objectAt: #Type ifAbsent: [#Border asPDF]
%
method: BorderStyle
W
	<type: #Number>
	<attribute: 2 documentation: 'The border width in points. If this value is 0, no border shall drawn.'>
	^self objectAt: #W ifAbsent: [1 asPDF]
%
category: 'accessing'
classmethod: CaretAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #CaretAnnotation
		supertype: #Annot
		version: #(1 5)
		section: '12.5.6.11'
		documentation: 'A caret annotation is a visual symbol that indicates the presence of text edits.'
%
classmethod: CaretAnnotation
subtype
	^#Caret
%
category: 'accessing entries'
method: CaretAnnotation
RD
	<type: #Rectangle>
	<attribute: 1 documentation: 'A set of four numbers that shall describe the numerical differences between two rectangles: the Rect entry of the annotation and the actual boundaries of the underlying caret.
Such a difference can occur.
When a paragraph symbol specified by Sy is displayed along with the caret.

The four numbers shall correspond to the differences in default user space between the left, top, right, and bottom coordinates of Rect and those of the caret, respectively.
Each value shall be greater than or equal to 0.
The sum of the top and bottom differences shall be less than the height of Rect, and the sum of the left and right differences shall be less than the width of Rect.'>
	^self objectAt: #RD ifAbsent: [(PDF classAt: #Rectangle) new]
%
method: CaretAnnotation
Sy
	<type: #Name>
	<attribute: 2 documentation: 'A name specifying a symbol that shall be associated with the caret:
	P		A new paragraph symbol (Â¶) should be associated with the caret.
	None	No symbol should be associated with the caret.'>
	^self objectAt: #Sy ifAbsent: [#None asPDF]
%
category: 'accessing'
classmethod: CircleAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #CircleAnnotation
		supertype: #Annot
		version: #(1 3)
		section: '12.5.6.8'
		documentation: 'Square and circle annotations shall display, respectively, a rectangle or an ellipse on the page.
When opened, they shall display a pop-up window containing the text of the associated note.
The rectangle or ellipse shall be inscribed within the annotation rectangle defined by the annotation dictionaryâs Rect entry.

Despite the names square and circle, the width and height of the annotation rectangle need not be equal.'
%
classmethod: CircleAnnotation
subtype
	^#Circle
%
category: 'accessing'
classmethod: Dest
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Dest
		supertype: #Destination
		section: '12.3.2.3'
		documentation: 'A dictionary with a D entry whose value is an ExplicitDestination.

This form allows additional attributes to be associated with the destination, as well as enabling a go-to action that shall be used as the target of a named destination'
%
category: 'accessing entries'
method: Dest
D
	<type: #ExplicitDestination>
	<required>
	<attribute: 1 documentation: 'An explicit destination array'>
	^self objectAt: #D
%
category: 'accessing'
classmethod: Destination
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Destination
		supertype: #Object
		section: '12.3.2'
		documentation: 'A destination defines a particular view of a document, consisting of the following items:
â¢ The page of the document that shall be displayed
â¢ The location of the document window on that page
â¢ The magnification (zoom) factor

Destinations may be associated with outline items, annotations, or actions.
In each case, the destination specifies the view of the document that shall be presented when the outline item or annotation is opened or the action is performed. In addition, the optional OpenAction entry in a documentâs catalogue may specify a destination that shall be displayed when the document is opened.
A destination may be specified either explicitly by an array of parameters defining its properties or indirectly by name.'
%
category: 'accessing'
classmethod: EmbeddedFile
pdfTypeDefinition
	^PDFTypeDefinition
		name: #EmbeddedFile
		supertype: #Stream
		section: '7.11.4.1'
		documentation: 'If a PDF file contains file specifications that refer to an external file and the PDF file is archived or transmitted, some provision should be made to ensure that the external references will remain valid. One way to do this is to arrange for copies of the external files to accompany the PDF file. Embedded file streams address this problem by allowing the contents of referenced files to be embedded directly within the body of the PDF file. This makes the PDF file a self-contained unit that can be stored or transmitted as a single entity. (The embedded files are included purely for convenience and need not be directly processed by any conforming reader.)'
%
category: 'accessing entries'
method: EmbeddedFile
Params
	<type: #EmbeddedFileParameter>
	<attribute: 3 documentation: 'An embedded file parameter dictionary that shall contain additional file-specific information'>
	^self objectAt: #Params ifAbsent: [PDF Dictionary empty]
%
method: EmbeddedFile
Subtype
	<type: #Name>
	<attribute: 2 documentation: 'The subtype of the embedded file. The value of this entry shall be a first-class name, as defined in Annex E. Names without a registered prefix shall conform to the MIME media type names defined in Internet RFC 2046, Multipurpose Internet Mail Extensions (MIME), Part Two: Media Types, with the provision that characters not allowed in names shall use the 2-character hexadecimal code format'>
	^self objectAt: #Subtype ifAbsent: [nil]
%
method: EmbeddedFile
Type
	<type: #Name>
	<attribute: 1 documentation: 'The type of PDF object that this dictionary describes'>
	^self objectAt: #Type ifAbsent: [#EmbeddedFile asPDF]
%
category: 'accessing'
classmethod: EmbeddedFileParameter
pdfTypeDefinition
	^PDFTypeDefinition
		name: #EmbeddedFileParameter
		supertype: #Dictionary
		section: '7.11.4.1'
		documentation: 'An embedded file parameter dictionary that shall contain additional file-specific information'
%
category: 'accessing entries'
method: EmbeddedFileParameter
CheckSum
	<type: #String>
	<attribute: 5 documentation: 'A 16-byte string that is the checksum of the bytes of the uncompressed embedded file. The checksum shall be calculated by applying the standard MD5 message-digest algorithm (described in Internet RFC 1321, The MD5 Message-Digest Algorithm) to the bytes of the embedded file stream'>
	^self objectAt: #CheckSum ifAbsent: [nil]
%
method: EmbeddedFileParameter
CreationDate
	<type: #Date>
	<attribute: 2 documentation: 'The date and time when the embedded file was created'>
	^self objectAt: #CreationDate ifAbsent: [nil]
%
method: EmbeddedFileParameter
Mac
	<type: #MacOSFileInformation>
	<attribute: 4 documentation: 'A subdictionary containing additional information specific to Mac OS files'>
	^self objectAt: #Mac ifAbsent: [nil]
%
method: EmbeddedFileParameter
ModDate
	<type: #Date>
	<attribute: 3 documentation: 'The date and time when the embedded file was last modified'>
	^self objectAt: #ModDate ifAbsent: [nil]
%
method: EmbeddedFileParameter
Size
	<type: #Integer>
	<attribute: 1 documentation: 'The size of the uncompressed embedded file, in bytes'>
	^self objectAt: #Size ifAbsent: [0 asPDF]
%
category: 'accessing'
classmethod: ExplicitDestination
maxNumberOfAttributes
	^6
%
classmethod: ExplicitDestination
numberOfAttributes
	^2
%
classmethod: ExplicitDestination
pdfTypeDefinition

	^PDFTypeDefinition
		name: #ExplicitDestination
		supertype: #Destination
		section: '12.3.2'
		documentation: 'A destination defines a particular view of a document, consisting of the following items:
â¢ The page of the document that shall be displayed
â¢ The location of the document window on that page
â¢ The magnification (zoom) factor

Destinations may be associated with outline items, annotations, or actions.
In each case, the destination specifies the view of the document that shall be presented when the outline item or annotation is opened or the action is performed. In addition, the optional OpenAction entry in a documentâs catalogue may specify a destination that shall be displayed when the document is opened.
A destination may be specified either explicitly by an array of parameters defining its properties or indirectly by name.'
%
category: 'accessing entries'
method: ExplicitDestination
page
	<typeIndirect: #Page>
	<type: #Integer>
	<required>
	<attribute: 1 documentation: 'a page object (except in a remote go-to action where it is a page number)'>
	^self objectAt: 1
%
method: ExplicitDestination
parameter1
	<type: #Number>
	<type: #Null>
	<attribute: 3 documentation: 'the first parameter (meaning depends on style)'>
	^self objectAt: 3
%
method: ExplicitDestination
parameter2
	<type: #Number>
	<type: #Null>
	<attribute: 4 documentation: 'the second parameter (meaning depends on style)'>
	^self objectAt: 4
%
method: ExplicitDestination
parameter3
	<type: #Number>
	<type: #Null>
	<attribute: 5 documentation: 'the third parameter (meaning depends on style)'>
	^self objectAt: 5
%
method: ExplicitDestination
parameter4
	<type: #Number>
	<type: #Null>
	<attribute: 6 documentation: 'the fourth parameter (meaning depends on style)'>
	^self objectAt: 6
%
method: ExplicitDestination
style
	<type: #Name>
	<required>
	<attribute: 2 documentation: 'the style in which the destination will be displayed.
One of /XYZ /Fit /FitH /FitV /FitR /FitB /FitBH or /FitBV'>
	^self objectAt: 2
%
category: 'accessing'
classmethod: FileAttachmentAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #FileAttachmentAnnotation
		supertype: #Annot
		version: #(1 3)
		section: '12.5.6.15'
		documentation: 'A file attachment annotation contains a reference to a file, which typically shall be embedded in the PDF file.

NOTE	A table of data might use a file attachment annotation to link to a spreadsheet file based on that data; activating the annotation extracts the embedded file and gives the user an opportunity to view it or store it in the file system.

The Contents entry of the annotation dictionary may specify descriptive text relating to the attached file.
Conforming readers shall use this entry rather than the optional Desc entry in the file specification dictionary identified by the annotationâs FS entry.'
%
classmethod: FileAttachmentAnnotation
subtype
	^#FileAttachment
%
category: 'accessing entries'
method: FileAttachmentAnnotation
FS
	<type: #FileSpecification>
	<required>
	<attribute: 1 documentation: 'The file associated with this annotation.'>
	^self objectAt: #FS
%
method: FileAttachmentAnnotation
Name
	<type: #Name>
	<attribute: 2 documentation: 'The name of an icon that shall be used in displaying the annotation.
Conforming readers shall provide predefined icon appearances for at least the following standard names:
	GraphPushPin
	PaperclipTag
Additional names may be supported as well.
The annotation dictionaryâs AP entry, if present, shall take precedence over the Name entry.'>
	^self objectAt: #Name ifAbsent: [#PushPin asPDF]
%
category: 'accessing'
classmethod: FileSpecification
pdfTypeDefinition
	^PDFTypeDefinition
		name: #FileSpecification
		supertype: #Dictionary
		section: '7.11.3'
		documentation: 'The dictionary form of file specification provides more flexibility than the string form, allowing different files to be specified for different file systems or platforms, or for file systems other than the standard ones (DOS/Windows, Mac OS, and UNIX).
Regardless of the platform, conforming readers should use the F and UF (beginning with PDF 1.7) entries to specify files.
The UF entry is optional, but should be included because it enables cross-platform and cross-language compatibility.'
%
classmethod: FileSpecification
type
	^#Filespec
%
category: 'accessing'
method: FileSpecification
filename
	"<String>"

	#(#UF #F #Unix #DOS #Mac) do: [:symbol |
		(self hasKey: symbol) ifTrue: [
			^self objectAt: symbol]].
	Error raiseSignal: 'no filename provided'
%
category: 'accessing entries'
method: FileSpecification
AFRelationship
	<type: #Name>
	<version: 2 dot: 0>
	<attribute: 14 documentation: 'Specifies the nature of the relationship between the PDF (or a PDF object), and the related content. This entry is required to contain one of the values defined in PDF 2.0: Source, Data, Alternative, Supplement, EncryptedPayload, FormData, Schema or Unspecified. Custom values may be used where none of these entries is appropriate.'>
	^self objectAt: #AFRelationship ifAbsent: [nil]
%
method: FileSpecification
CI
	<typeIndirect: #Dictionary>
	<version: 1 dot: 7>
	<attribute: 13 documentation: 'A collection item dictionary, which shall be used to create the user interface for portable collections.'>
	^self objectAt: #CI ifAbsent: [PDF Dictionary empty]
%
method: FileSpecification
Desc
	<type: #String>
	<version: 1 dot: 6>
	<attribute: 12 documentation: 'Descriptive text associated with the file specification.
It shall be used for files in the EmbeddedFiles name tree.'>
	^self objectAt: #Desc ifAbsent: ['' asPDF]
%
method: FileSpecification
DOS
	<type: #String>
	<attribute: 5 documentation: 'A file specification string representing a DOS file name.
This entry is obsolescent and should not be used by conforming writers.'>
	^self objectAt: #DOS ifAbsent: [PDF String empty]
%
method: FileSpecification
EF
	<typeDictionaryOf: #EmbeddedFile>
	<version: 1 dot: 3>
	<attribute: 10 documentation: '(Required if RF is present; amended to include the UF key in PDF 1.7)
A dictionary containing a subset of the keys F, UF, DOS, Mac, and Unix, corresponding to the entries by those names in the file specification dictionary.
The value of each such key shall be an embedded file stream containing the corresponding file.
If this entry is present, the Type entry is required and the file specification dictionary shall be indirectly referenced.
The F and UF entries should be used in place of the DOS, Mac, or Unix entries.'>
	^self objectAt: #EF ifAbsent: [PDF Dictionary empty]
%
method: FileSpecification
F
	<type: #String>
	<attribute: 3 documentation: '(Required if the DOS, Mac, and Unix entries are all absent; amended with the UF entry for PDF 1.7)
A file specification string, or (if the file system is URL) a uniform resource locator.

The UF entry should be used in addition to the F entry.
The UF entry provides cross-platform and cross-language compatibility and the F entry provides backwards compatibility.'>
	^self objectAt: #F ifAbsent: [PDF String empty]
%
method: FileSpecification
FS
	<type: #Name>
	<attribute: 2 documentation: 'The name of the file system that shall be used to interpret this file specification.
If this entry is present, all other entries in the dictionary shall be interpreted by the designated file system.
PDF shall define only one standard file system name, URL; an application can register other names.
This entry shall be independent of the F, UF, DOS, Mac, and Unix entries.'>
	^self objectAt: #FS ifAbsent: [#URL asPDF]
%
method: FileSpecification
ID
	<type: #FileIdentifier>
	<attribute: 8 documentation: 'An array of two byte strings constituting a file identifier that should be included in the referenced file.
NOTE	The use of this entry improves an applicationâs chances of finding the intended file and allows it to warn the user if the file has changed since the link was made.'>
	^self objectAt: #ID ifAbsent: [#() asPDF]
%
method: FileSpecification
Mac
	<type: #String>
	<attribute: 6 documentation: 'A file specification string representing a Mac OS file name.
This entry is obsolescent and should not be used by conforming writers.'>
	^self objectAt: #Mac ifAbsent: [PDF String empty]
%
method: FileSpecification
RF
	<type: #Dictionary>
	<version: 1 dot: 3>
	<attribute: 11 documentation: 'A dictionary with the same structure as the EF dictionary, which shall be present.
Each key in the RF dictionary shall also be present in the EF dictionary.
Each value shall be a related files array identifying files that are related to the corresponding file in the EF dictionary.
If this entry is present, the Type entry is required and the file specification dictionary shall be indirectly referenced.'>
	^self objectAt: #RF ifAbsent: [PDF Dictionary empty]
%
method: FileSpecification
Type
	<type: #Name>
	<attribute: 1 documentation: '(Required if an EF or RF entry is present; recommended always)
The type of PDF object that this dictionary describes; shall be Filespec for a file specification dictionary.'>
	^self objectAt: #Type ifAbsent: [#Filespec asPDF]
%
method: FileSpecification
UF
	<type: #Textstring>
	<version: 1 dot: 7>
	<attribute: 4 documentation: '(Optional, but recommended if the F entry exists in the dictionary)
A Unicode text string that provides file specification.
This is a text string encoded using PDFDocEncoding or UTF-16BE with a leading byte-order marker.
The F entry should be included along with this entry for backwards compatibility reasons.'>
	^self objectAt: #UF ifAbsent: ['' asPDF]
%
method: FileSpecification
Unix
	<type: #String>
	<attribute: 7 documentation: 'A file specification string representing a Unix file name.
This entry is obsolescent and should not be used by conforming writers.'>
	^self objectAt: #Unix ifAbsent: [PDF String empty]
%
method: FileSpecification
V
	<type: #Boolean>
	<version: 1 dot: 2>
	<attribute: 9 documentation: 'A flag indicating whether the file referenced by the file specification is volatile (changes frequently with time).
If the value is true, applications shall not cache a copy of the file.
For example, a movie annotation referencing a URL to a live video camera could set this flag to true to notify the conforming reader that it should re-acquire the movie each time it is played.'>
	^self objectAt: #V ifAbsent: [false]
%
category: 'actions'
method: FileSpecification
saveFile
	"save the embedded file with the specified name in the current directory"

	#(#UF #F #Unix #DOS #Mac) do: [:symbol |
		(self canSaveFileAt: symbol) ifTrue: [
			self saveFileAt: symbol.
			^self]].
	Error raiseSignal: 'no embedded file found'
%
method: FileSpecification
saveFileAt: aSymbol
	"<Boolean>
	save the embedded file with the specified name in the current directory"

	| wst |
	wst := ((self objectAt: aSymbol) asSmalltalkValue asFilename withEncoding: #binary) writeStream.
	wst nextPutAll: (self EF objectAt: aSymbol) internal asByteArray.
	wst close
%
category: 'testing'
method: FileSpecification
canSaveFileAt: aSymbol
	"<Boolean>
	checks if the key aSymbol is available"

	^(self hasKey: aSymbol) and: [
	(self hasKey: #EF) and: [
	self EF hasKey: aSymbol]]
%
category: 'accessing'
classmethod: FixedPrint
pdfTypeDefinition
	^PDFTypeDefinition
		name: #FixedPrint
		supertype: #Dictionary
		version: #(1 6)
		section: '12.5.6.22'
		documentation: 'A watermark annotation shall be used to represent graphics that shall be printed at a fixed size and position on a page, regardless of the dimensions of the printed page.
The FixedPrint entry of a watermark annotation dictionary shall be a dictionary that contains values for specifying the size and position of the annotation.

Watermark annotations shall have no pop-up window or other interactive elements.
When displaying a watermark annotation on-screen, conforming readers shall use the dimensions of the media box as the page size so that the scroll and zoom behaviour is the same as for other annotations.

	NOTE	Since many printing devices have non printable margins, such margins should be taken into consideration when positioning watermark annotations near the edge of a page.'
%
category: 'accessing entries'
method: FixedPrint
H
	<type: #Number>
	<attribute: 2 documentation: 'The amount to translate the associated content horizontally, as a percentage of the width of the target media (or if unknown, the width of the pageâs MediaBox).
1.0 represents 100% and 0.0 represents 0%.
Negative values should not be used, since they may cause content to be drawn off the page.'>
	^self objectAt: #H ifAbsent: [0 asPDF]
%
method: FixedPrint
Matrix
	<type: #Matrix>
	<attribute: 1 documentation: 'The matrix used to transform the annotationâs rectangle before rendering.
When positioning content near the edge of a page, this entry should be used to provide a reasonable offset to allow for nonburnable margins.'>
	^self objectAt: #Matrix ifAbsent: [(PDF classAt: #Matrix) identity]
%
method: FixedPrint
V
	<type: #Number>
	<attribute: 3 documentation: 'The amount to translate the associated content vertically, as a percentage of the height of the target media (or if unknown, the height of the pageâs MediaBox).
1.0 represents 100% and 0.0 represents 0%.
Negative values should not be used, since they may cause content to be drawn off the page.'>
	^self objectAt: #V ifAbsent: [0 asPDF]
%
category: 'accessing'
classmethod: FreeTextAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #FreeTextAnnotation
		supertype: #Annot
		version: #(1 3)
		section: '12.5.6.6'
		documentation: 'A free text annotation displays text directly on the page.
Unlike an ordinary text annotation, a free text annotation has no open or closed state; instead of being displayed in a pop-up window, the text shall be always visible.'
%
classmethod: FreeTextAnnotation
subtype
	^#FreeText
%
category: 'accessing entries'
method: FreeTextAnnotation
BE
	<type: #BorderEffect>
	<version: 1 dot: 6>
	<attribute: 7 documentation: 'A border effect dictionary used in conjunction with the border style dictionary specified by the BS entry.'>
	^self objectAt: #BE ifAbsent: [(PDF classAt: #BorderEffect) empty]
%
method: FreeTextAnnotation
BS
	<type: #BorderStyle>
	<version: 1 dot: 6>
	<attribute: 9 documentation: 'A border style dictionary specifying the line width and dash pattern that shall be used in drawing the annotationâs border.
The annotation dictionaryâs AP entry, if present, takes precedence over the BS entry'>
	^self objectAt: #BS ifAbsent: [(PDF classAt: #BorderStyle) empty]
%
method: FreeTextAnnotation
CL
	<typeArrayOf: #Number>
	<version: 1 dot: 6>
	<attribute: 5 documentation: '(meaningful only if IT is FreeTextCallout)
An array of four or six numbers specifying a callout line attached to the free text annotation.
Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and ending coordinates of the line in default user space.
Four numbers [ x1 y1 x2 y2 ] represent the starting and ending coordinates of the line.'>
	^self objectAt: #CL ifAbsent: [#() asPDF]
%
method: FreeTextAnnotation
DA
	<type: #String>
	<required>
	<attribute: 1 documentation: 'The default appearance string that shall be used in formatting the text.
The annotation dictionaryâs AP entry, if present, shall take precedence over the DA entry'>
	^self objectAt: #DA ifAbsent: [PDF String empty]
%
method: FreeTextAnnotation
DS
	<type: #String>
	<version: 1 dot: 5>
	<attribute: 4 documentation: 'A default style string.'>
	^self objectAt: #DS ifAbsent: ['' asPDF]
%
method: FreeTextAnnotation
IT
	<type: #Name>
	<version: 1 dot: 6>
	<attribute: 6 documentation: 'A name describing the intent of the free text annotation.
The following values shall be valid:
	FreeText				The annotation is intended to function as a plain free-text annotation.
							A plain free-text annotation is also known as a text box comment.
	FreeTextCallout		The annotation is intended to function as a callout.
							The callout is associated with an area on the page through the callout line specified in CL.
	FreeTextTypeWriter	The annotation is intended to function as a click-to-type or typewriter object and no callout line is drawn.'>
	^self objectAt: #IT ifAbsent: [#FreeText asPDF]
%
method: FreeTextAnnotation
LE
	<type: #Name>
	<version: 1 dot: 6>
	<attribute: 10 documentation: '(Optional; meaningful only if CL is present)
A name specifying the line ending style that shall be used in drawing the callout line specified in CL.
The name shall specify the line ending style for the endpoint defined by the pairs of coordinates (x1, y1).'>
	^self objectAt: #LE ifAbsent: [#None asPDF]
%
method: FreeTextAnnotation
Q
	<type: #Integer>
	<version: 1 dot: 4>
	<attribute: 2 documentation: 'A code specifying the form of quadding (justification) that shall be used in displaying the annotationâs text:
	0	Left-justified
	1	Centered
	2	Right-justified.'>
	^self objectAt: #Q ifAbsent: [0 asPDF]
%
method: FreeTextAnnotation
RC
	<type: #String>
	<type: #Textstream>
	<version: 1 dot: 5>
	<attribute: 3 documentation: 'A rich text string that shall be used to generate the appearance of the annotation.'>
	^self objectAt: #RC ifAbsent: ['' asPDF]
%
method: FreeTextAnnotation
RD
	<type: #Rectangle>
	<version: 1 dot: 6>
	<attribute: 8 documentation: 'A set of four numbers describing the numerical differences between two rectangles: the Rect entry of the annotation and a rectangle contained within that rectangle.
The inner rectangle is where the annotationâs text should be displayed.
Any border styles and/or border effects specified by BS and BE entries, respectively, shall be applied to the border of the inner rectangle.

The four numbers correspond to the differences in default user space between the left, top, right, and bottom coordinates of Rect and those of the inner rectangle, respectively.
Each value shall be greater than or equal to 0. The sum of the top and bottom differences shall be less than the height of Rect, and the sum of the left and right differences shall be less than the width of Rect.'>
	^self objectAt: #RD ifAbsent: [(PDF classAt: #Rectangle) new]
%
category: 'accessing'
classmethod: HighlightAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #HighlightAnnotation
		supertype: #Annot
		version: #(1 3)
		section: '12.5.6.10'
		documentation: 'Text markup annotations shall appear as highlights, underlines, strikeouts, or jagged (âsquigglyâ) underlines in the text of a document.
When opened, they shall display a pop-up window containing the text of the associated note.'
%
classmethod: HighlightAnnotation
subtype
	^#Highlight
%
category: 'accessing'
classmethod: InkAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #InkAnnotation
		supertype: #Annot
		version: #(1 3)
		section: '12.5.6.13'
		documentation: 'An ink annotation represents a freehand âscribbleâ composed of one or more disjoint paths.
When opened, it shall display a pop-up window containing the text of the associated note.'
%
classmethod: InkAnnotation
subtype
	^#Ink
%
category: 'accessing entries'
method: InkAnnotation
BS
	<type: #BorderStyle>
	<attribute: 2 documentation: 'A border style dictionary specifying the line width and dash pattern that shall be used in drawing the paths.
The annotation dictionaryâs AP entry, if present, shall take precedence over the InkList and BS entries.'>
	^self objectAt: #BS ifAbsent: [(PDF classAt: #BorderStyle) empty]
%
method: InkAnnotation
InkList
	<typeArrayOf: #Array>
	<required>
	<attribute: 1 documentation: 'An array of n arrays, each representing a stroked path.
Each array shall be a series of alternating horizontal and vertical coordinates in default user space, specifying points along the path.
When drawn, the points shall be connected by straight lines or curves in an implementation-dependent way.'>
	^self objectAt: #InkList ifAbsent: [#() asPDF]
%
category: 'accessing'
classmethod: LineAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #LineAnnotation
		supertype: #Annot
		version: #(1 3)
		section: '12.5.6.7'
		documentation: 'The purpose of a line annotation is to display a single straight line on the page.
When opened, it shall display a pop-up window containing the text of the associated note.'
%
classmethod: LineAnnotation
subtype
	^#Line
%
category: 'accessing entries'
method: LineAnnotation
BS
	<type: #BorderStyle>
	<version: 1 dot: 6>
	<attribute: 2 documentation: 'A border style dictionary specifying the line width and dash pattern that shall be used in drawing the line.
The annotation dictionaryâs AP entry, if present, takes precedence over the L and BS entries.'>
	^self objectAt: #BS ifAbsent: [(PDF classAt: #BorderStyle) empty]
%
method: LineAnnotation
Cap
	<type: #Boolean>
	<version: 1 dot: 6>
	<attribute: 7 documentation: 'If true, the text specified by the Contents or RC entries shall be replicated as a caption in the appearance of the line.
The text shall be rendered in a manner appropriate to the content, taking into account factors such as writing direction.'>
	^self objectAt: #Cap ifAbsent: [false]
%
method: LineAnnotation
CO
	<typeArrayOf: #Number>
	<version: 1 dot: 7>
	<attribute: 12 documentation: '(meaningful only if Cap is true)
An array of two numbers that shall specify the offset of the caption text from its normal position.
The first value shall be the horizontal offset along the annotation line from its midpoint, with a positive value indicating offset to the right and a negative value indicating offset to the left.
The second value shall be the vertical offset perpendicular to the annotation line, with a positive value indicating a shift up and a negative value indicating a shift down.'>
	^self objectAt: #CO ifAbsent: [#(0 0) asPDF]
%
method: LineAnnotation
CP
	<type: #Name>
	<version: 1 dot: 7>
	<attribute: 10 documentation: 'A name describing the annotationâs caption positioning.
Valid values are /Inline, meaning the caption shall be centered inside the line, and /Top, meaning the caption shall be on top of the line.'>
	^self objectAt: #CP ifAbsent: [#Inline asPDF]
%
method: LineAnnotation
IC
	<typeArrayOf: #Number>
	<version: 1 dot: 4>
	<attribute: 4 documentation: 'An array of numbers in the range 0.0 to 1.0 specifying the interior color that shall be used to fill the annotationâs line endings.
The number of array elements shall determine the colour space in which the colour is defined:
	0	No colour; transparent
	1	DeviceGray
	3	DeviceRGB
	4	DeviceCMYK'>
	^self objectAt: #IC ifAbsent: [#() asPDF]
%
method: LineAnnotation
IT
	<type: #Name>
	<version: 1 dot: 6>
	<attribute: 8 documentation: 'A name describing the intent of the line annotation.
Valid values shall be LineArrow, which means that the annotation is intended to function as an arrow, and LineDimension, which means that the annotation is intended to function as a dimension line.'>
	^self objectAt: #IT ifAbsent: [nil]
%
method: LineAnnotation
L
	<typeArrayOf: #Number>
	<required>
	<attribute: 1 documentation: 'An array of four numbers, [x1 y1 x2 y2], specifying the starting and ending coordinates of the line in default user space.
If the LL entry is present, this value shall represent the endpoints of the leader lines rather than the endpoints of the line itself.'>
	^self objectAt: #L
%
method: LineAnnotation
LE
	<typeArrayOf: #Name>
	<version: 1 dot: 4>
	<attribute: 3 documentation: 'An array of two names specifying the line ending styles that shall be used in drawing the line.
The first and second elements of the array shall specify the line ending styles for the endpoints defined, respectively, by the first and second pairs of coordinates, (x1, y1)and (x2, y2), in the L array.
The possible values are:
	/Square /Circle /Diamond /OpenArrow /ClosedArrow /None /Butt /ROpenArrow /RClosedArrow /Slash.'>
	^self objectAt: #LE ifAbsent: [#(#None #None) asPDF]
%
method: LineAnnotation
LL
	<type: #Number>
	<version: 1 dot: 6>
	<attribute: 5 documentation: '(Required if LLE is present, otherwise optional)
The length of leader lines in default user space that extend from each endpoint of the line perpendicular to the line itself.
A positive value shall mean that the leader lines appear in the direction that is clockwise when traversing the line from its starting point to its ending point (as specified by L); a negative value shall indicate the opposite direction.'>
	^self objectAt: #LL ifAbsent: [0 asPDF]
%
method: LineAnnotation
LLE
	<type: #Number>
	<version: 1 dot: 6>
	<attribute: 6 documentation: 'A non-negative number that shall represents the length of leader line extensions that extend from the line proper 180 degrees from the leader lines.'>
	^self objectAt: #LLE ifAbsent: [0 asPDF]
%
method: LineAnnotation
LLO
	<type: #Number>
	<version: 1 dot: 7>
	<attribute: 9 documentation: 'A non-negative number that shall represent the length of the leader line offset, which is the amount of empty space between the endpoints of the annotation and the beginning of the leader lines.'>
	^self objectAt: #LLO ifAbsent: [0 asPDF]
%
method: LineAnnotation
Measure
	<type: #Dictionary>
	<version: 1 dot: 7>
	<attribute: 11 documentation: 'A measure dictionary that shall specify the scale and units that apply to the line annotation.'>
	^self objectAt: #Measure ifAbsent: [PDF Dictionary empty]
%
category: 'accessing'
classmethod: LinkAnnotation
pdfTypeDefinition

	^PDFTypeDefinition
		name: #LinkAnnotation
		supertype: #Annot
		section: '12.5.6.5'
		documentation: 'A link annotation represents either a hypertext link to a destination elsewhere in the document or an action to be performed'
%
classmethod: LinkAnnotation
subtype
	^#Link
%
category: 'accessing entries'
method: LinkAnnotation
A
	<type: #Action>
	<version: 1 dot: 1>
	<attribute: 1 documentation: 'An action that shall be performed when the link annotation is activated'>
	^self objectAt: #A ifAbsent: [(PDF classAt: #Action) empty]
%
method: LinkAnnotation
BS
	<type: #BorderStyle>
	<version: 1 dot: 6>
	<attribute: 6 documentation: 'A border style dictionary specifying the line width and dash pattern to be used in drawing the annotationâs border.
The annotation dictionaryâs AP entry, if present, takes precedence over the BS entry'>
	^self objectAt: #BS ifAbsent: [(PDF classAt: #BorderStyle) empty]
%
method: LinkAnnotation
Dest
	<type: #Destination>
	<type: #Name>
	<type: #String>
	<attribute: 2 documentation: '(not permitted if an A entry is present)
A destination that shall be displayed when the annotation is activated'>
	^self objectAt: #Dest ifAbsent: [#() asPDF]
%
method: LinkAnnotation
H
	<type: #Name>
	<version: 1 dot: 2>
	<attribute: 3 documentation: 'The annotationâs highlighting mode, the visual effect that shall be used when the mouse button is pressed or held down inside its active area:
	N 	(None) 		No highlighting.
	I 	(Invert) 	Invert the contents of the annotation rectangle.
	OI 	(Outline) 	Invert the annotationâs border.
	P 	(Push) 		Display the annotation as if it were being pushed below the surface of the page'>
	^self objectAt: #H ifAbsent: [#I asPDF]
%
method: LinkAnnotation
PA
	<type: #Dictionary>
	<version: 1 dot: 3>
	<attribute: 4 documentation: 'A URI action formerly associated with this annotation.
When Web Capture changes an annotation from a URI to a go-to action, it uses this entry to save the data from the original URI action so that it can be changed back in case the target page for the go-to action is subsequently deleted'>
	^self objectAt: #PA ifAbsent: [PDF Dictionary empty]
%
method: LinkAnnotation
QuadPoints
	<typeArrayOf: #Number>
	<version: 1 dot: 6>
	<attribute: 5 documentation: 'An array of 8 Ã n numbers specifying the coordinates of n quadrilaterals in default user space that comprise the region in which the link should be activated.
The coordinates for each quadrilateral are given in the order
	x1 y1 x2 y2 x3 y3 x4 y4
specifying the four vertices of the quadrilateral in counterclockwise order.
For orientation purposes, such as when applying an underline border style, the bottom of a quadrilateral is the line formed by (x1, y1)and (x2, y2).

If this entry is not present or the conforming reader does not recognize it, the region specified by the Rect entry should be used.
QuadPoints shall be ignored if any coordinate in the array lies outside the region specified by Rect'>
	^self objectAt: #QuadPoints ifAbsent: [#() asPDF]
%
category: 'accessing'
classmethod: MacOSFileInformation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #MacOSFileInformation
		supertype: #Dictionary
		section: '7.11.4.1'
		documentation: 'For Mac OS files, the Mac entry in the embedded file parameter dictionary should hold a further subdictionary containing Mac OSâspecific file information'
%
category: 'accessing entries'
method: MacOSFileInformation
Creator
	<type: #Integer>
	<attribute: 2 documentation: 'The embedded fileâs creator signature shall be encoded in the same way as Subtype'>
	^self objectAt: #Creator ifAbsent: [nil]
%
method: MacOSFileInformation
ResFork
	<type: #Stream>
	<attribute: 3 documentation: 'The binary contents of the embedded fileâs resource fork'>
	^self objectAt: #ResFork ifAbsent: [nil]
%
method: MacOSFileInformation
Subtype
	<type: #Integer>
	<attribute: 1 documentation: 'The embedded fileâs file type. It shall be encoded as an integer according to Mac OS conventions: a 4-character ASCII text literal, that shall be a 32-bit integer, with the high-order byte first.
EXAMPLE
The file type âCAROâ is represented as the hexadecimal integer 4341524F, which is expressed in decimal as 1128354383.'>
	^self objectAt: #Subtype ifAbsent: [nil]
%
category: 'accessing'
classmethod: Markup
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Markup
		supertype: #Annot
		section: '12.5.6.2'
		documentation: 'Many annotation types are defined as markup annotations because they are used primarily to mark up PDF documents.
These annotations have text that appears as part of the annotation and may be displayed in other ways by a conforming reader, such as in a Comments pane.'
%
category: 'accessing entries'
method: Markup
CA
	<type: #Number>
	<version: 1 dot: 4>
	<attribute: 3 documentation: 'The constant opacity value that shall be used in painting the annotation.
This value shall apply to all visible elements of the annotation in its closed state (including its background and border) but not to the pop-up window that appears when the annotation is opened.

The specified value shall not used if the annotation has an appearance stream; in that case, the appearance stream shall specify any transparency.
(However, if the compliant viewer regenerates the annotationâs appearance stream, it may incorporate the CA value into the streamâs content.)

The implicit blend mode is Normal.

If no explicit appearance stream is defined for the annotation, it may bepainted by implementation-dependent means that do not necessarily conform to the PDF imaging model; in this case, the effect of this entry is implementation-dependent as well.'>
	^self objectAt: #CA ifAbsent: [1.0 asPDF]
%
method: Markup
CreationDate
	<type: #Date>
	<version: 1 dot: 5>
	<attribute: 5 documentation: 'The date and time when the annotation was created.'>
	^self objectAt: #CreationDate ifAbsent: [nil]
%
method: Markup
ExData
	<type: #Dictionary>
	<version: 1 dot: 7>
	<attribute: 10 documentation: 'An external data dictionary specifying data that shall be associated with the annotation.
This dictionary contains the following entries:
	Type 		(optional) If present, shall be ExData.
	Subtype 	(required) a name specifying the type of data that the markup annotation shall be associated with.
				The only defined value is Markup3D.'>
	^self objectAt: #ExData ifAbsent: [PDF Dictionary empty]
%
method: Markup
IRT
	<type: #Dictionary>
	<version: 1 dot: 5>
	<attribute: 6 documentation: '(Required if an RT entry is present, otherwise optional)
A reference to the annotation that this annotation is âin reply to.â
Both annotations shall be on the same page of the document.
The relationship between the two annotations shall be specified by the RT entry.

If this entry is present in an FDF file, its type shall not be a dictionary but a text string containing the contents of the NM entry of the annotation being replied to, to allow for a situation where the annotation being replied to is not in the same FDF file.'>
	^self objectAt: #IRT ifAbsent: [PDF Dictionary empty]
%
method: Markup
IT
	<type: #Name>
	<version: 1 dot: 6>
	<attribute: 9 documentation: 'A name describing the intent of the markup annotation.
Intents allow conforming readers to distinguish between different uses and behaviors of a single markup annotation type.
If this entry is not present or its value is the same as the annotation type, the annotation shall have no explicit intent and should behave in a generic manner in a conforming reader.

Free text annotations, line annotations, polygon annotations, and polyline annotations have defined intents, whose values are enumerated in the corresponding tables.'>
	^self objectAt: #IT ifAbsent: [nil]
%
method: Markup
Popup
	<typeIndirect: #PopupAnnotation>
	<version: 1 dot: 3>
	<attribute: 2 documentation: 'An indirect reference to a pop-up annotation for entering or editing the text associated with this annotation.'>
	^self objectAt: #Popup ifAbsent: [(PDF classAt: #PopupAnnotation) empty]
%
method: Markup
RC
	<type: #String>
	<type: #Textstream>
	<version: 1 dot: 5>
	<attribute: 4 documentation: 'A rich text string that shall be displayed in the pop-up window when the annotation is opened.'>
	^self objectAt: #RC ifAbsent: ['' asPDF]
%
method: Markup
RT
	<type: #Name>
	<version: 1 dot: 6>
	<attribute: 8 documentation: '(meaningful only if IRT is present)
A name specifying the relationship (the âreply typeâ) between this annotation and one specified by IRT.
Valid values are:
	R		The annotation shall be considered a reply to the annotation specified by IRT.
			Conforming readers shall not display replies to an annotation individually but together in the form of threaded comments.
	Group	The annotation shall be grouped with the annotation specified by IRT.'>
	^self objectAt: #RT ifAbsent: [#R asPDF]
%
method: Markup
Subj
	<type: #String>
	<version: 1 dot: 5>
	<attribute: 7 documentation: 'Text representing a short description of the subject being addressed by the annotation.'>
	^self objectAt: #Subj ifAbsent: ['' asPDF]
%
method: Markup
T
	<type: #String>
	<version: 1 dot: 1>
	<attribute: 1 documentation: 'The text label that shall be displayed in the title bar of the annotationâs pop-up window when open and active.
This entry shall identify the user who added the annotation.'>
	^self objectAt: #T ifAbsent: ['' asPDF]
%
category: 'accessing'
classmethod: Movie
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Movie
		supertype: #Dictionary
		version: #(1 2)
		section: '13.4'
		documentation: 'The features described in this sub-clause are obsolescent and their use is no longer recommended.
They are superseded by the general multimedia framework described in 13.2, âMultimedia.â

PDF shall embed movies within a document by means of movie annotations.
Despite the name, a movie may consist entirely of sound with no visible images to be displayed on the screen.
The Movie and A (activation) entries in the movie annotation dictionary shall refer, respectively, to a movie dictionary that shall describe the static characteristics of the movie and a movie activation dictionary that shall specify how it shall be presented.'
%
category: 'accessing entries'
method: Movie
Aspect
	<typeArrayOf: #Number>
	<attribute: 2 documentation: 'The width and height of the movieâs bounding box, in pixels, and shall be specified as [width height].
This entry should be omitted for a movie consisting entirely of sound with no visible images.'>
	^self objectAt: #Aspect ifAbsent: [#(0 0) asPDF]
%
method: Movie
F
	<type: #FileSpecification>
	<required>
	<attribute: 1 documentation: 'A file specification identifying a self-describing movie file.
NOTE	The format of a self-describing movie file shall be left unspecified, and there is no guarantee of portability.'>
	^self objectAt: #F
%
method: Movie
Poster
	<type: #Boolean>
	<type: #ImageXObject>
	<attribute: 4 documentation: 'A flag or stream specifying whether and how a poster image representing the movie shall be displayed.
If this value is a stream, it shall contain an image XObject to be displayed as the poster.
If it is the boolean value true, the poster image shall be retrieved from the movie file; if it is false, no poster shall be displayed.'>
	^self objectAt: #Poster ifAbsent: [false]
%
method: Movie
Rotate
	<type: #Integer>
	<attribute: 3 documentation: 'The number of degrees by which the movie shall be rotated clockwise relative to the page.
The value shall be a multiple of 90.'>
	^self objectAt: #Rotate ifAbsent: [0 asPDF]
%
category: 'accessing'
classmethod: MovieActivation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #MovieActivation
		supertype: #Dictionary
		version: #(1 2)
		section: '13.4'
		documentation: 'The features described in this sub-clause are obsolescent and their use is no longer recommended.
They are superseded by the general multimedia framework described in 13.2, âMultimedia.â

PDF shall embed movies within a document by means of movie annotations.
Despite the name, a movie may consist entirely of sound with no visible images to be displayed on the screen.
The Movie and A (activation) entries in the movie annotation dictionary shall refer, respectively, to a movie dictionary that shall describe the static characteristics of the movie and a movie activation dictionary that shall specify how it shall be presented.'
%
category: 'accessing entries'
method: MovieActivation
Duration
	<type: #Integer>
	<type: #String>
	<type: #Array>
	<attribute: 2 documentation: 'The duration of the movie segment to be played, that shall be specified in the same form as Start.
If this entry is omitted, the movie shall be played to the end.'>
	^self objectAt: #Duration ifAbsent: [0 asPDF]
%
method: MovieActivation
FWPosition
	<typeArrayOf: #Number>
	<attribute: 9 documentation: 'For floating play windows, the relative position of the window on the screen.
The value shall be an array of two numbers
	[horiz vert]
each in the range 0.0 to 1.0, denoting the relative horizontal and vertical position of the movie window with respect to the screen.

	EXAMPLE	The value [0.5 0.5] centers the window on the screen.'>
	^self objectAt: #FWPosition ifAbsent: [#(0.5 0.5) asPDF]
%
method: MovieActivation
FWScale
	<typeArrayOf: #Integer>
	<attribute: 8 documentation: 'The magnification (zoom) factor at which the movie shall be played.
The presence of this entry implies that the movie shall be played in a floating window.
If the entry is absent, the movie shall be played in the annotation rectangle.

The value of the entry shall be an array of two positive integers, [numerator denominator], denoting a rational magnification factor for the movie.
The final window size, in pixels, shall be
	(numerator Ã· denominator) Ã Aspect
where the value of Aspect shall be taken from the movie dictionary.'>
	^self objectAt: #FWScale ifAbsent: [#(1 1) asPDF]
%
method: MovieActivation
Mode
	<type: #Name>
	<attribute: 6 documentation: 'The play mode for playing the movie:
	Once			Play once and stop.
	Open			Play and leave the movie controller bar open.
	Repeat			Play repeatedly from beginning to end until stopped.
	Palindrome	Play continuously forward and backward until stopped.'>
	^self objectAt: #Mode ifAbsent: [#Once asPDF]
%
method: MovieActivation
Rate
	<type: #Number>
	<attribute: 3 documentation: 'The initial speed at which to play the movie.
If the value of this entry is negative, the movie shall be played backward with respect to Start and Duration.'>
	^self objectAt: #Rate ifAbsent: [1.0 asPDF]
%
method: MovieActivation
ShowControls
	<type: #Boolean>
	<attribute: 5 documentation: 'A flag specifying whether to display a movie controller bar while playing the movie.'>
	^self objectAt: #ShowControls ifAbsent: [false]
%
method: MovieActivation
Start
	<type: #Integer>
	<type: #String>
	<type: #Array>
	<attribute: 1 documentation: 'The starting time of the movie segment to be played.
Movie time values shall be expressed in units of time based on a time scale, which defines the number of units per second.
The default time scale shall be defined in the movie data.
The starting time shall be nominally a non-negative 64-bit integer, specified as follows:
	â¢	If it is representable as an integer (subject to the implementation limit for integers, as described in Annex C), it shall be specified as such.
	â¢	If it is not representable as an integer, it shall be specified as an 8-byte string representing a 64-bit twos-complement integer, most significant byte first.
	â¢	If it is expressed in a time scale different from that of the movie itself, it shall be represented as an array of two values: an integer or byte string denoting the starting time, followed by an integer specifying the time scale in units per second.

If this entry is omitted, the movie shall be played from the beginning.'>
	^self objectAt: #Start ifAbsent: [0 asPDF]
%
method: MovieActivation
Synchronous
	<type: #Boolean>
	<attribute: 7 documentation: 'A flag specifying whether to play the movie synchronously or asynchronously.
If this value is true, the movie player shall retain control until the movie is completed or dismissed by the user.
If the value is false, the player shall return control to the conforming reader immediately after starting the movie.'>
	^self objectAt: #Synchronous ifAbsent: [false]
%
method: MovieActivation
Volume
	<type: #Number>
	<attribute: 4 documentation: 'The initial sound volume at which to play the movie, in the range â1.0 to 1.0.
Higher values shall denote greater volume; negative values shall mute the sound. Default value: 1.0.'>
	^self objectAt: #Volume ifAbsent: [1.0 asPDF]
%
category: 'accessing'
classmethod: MovieAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #MovieAnnotation
		supertype: #Annot
		version: #(1 2)
		section: '12.5.6.17'
		documentation: 'A movie annotation contains animated graphics and sound to be presented on the computer screen and through the speakers.
When the annotation is activated, the movie shall be played.'
%
classmethod: MovieAnnotation
subtype
	^#Movie
%
category: 'accessing entries'
method: MovieAnnotation
A
	<type: #Boolean>
	<type: #Dictionary>
	<attribute: 3 documentation: 'A flag or dictionary specifying whether and how to play the movie when the annotation is activated.
If this value is a dictionary, it shall be a movie activation dictionary specifying how to play the movie.
If the value is the boolean true, the movie shall be played using default activation parameters.
If the value is false, the movie shall not be played.'>
	^self objectAt: #A ifAbsent: [true]
%
method: MovieAnnotation
Movie
	<type: #Movie>
	<required>
	<attribute: 2 documentation: 'A movie dictionary that shall describe the movieâs static characteristics.'>
	^self objectAt: #Movie ifAbsent: [PDF Dictionary empty]
%
method: MovieAnnotation
T
	<type: #String>
	<attribute: 1 documentation: 'The title of the movie annotation.
Movie actions may use this title to reference the movie annotation.'>
	^self objectAt: #T ifAbsent: ['' asPDF]
%
category: 'accessing'
classmethod: OutlineItem
pdfTypeDefinition

	^PDFTypeDefinition
		name: #OutlineItem
		supertype: #Dictionary
		section: '12.3.3'
		documentation: 'A PDF document may contain a document outline that the conforming reader may display on the screen, allowing the user to navigate interactively from one part of the document to another.
The outline consists of a tree-structured hierarchy of outline items (sometimes called bookmarks), which serve as a visual table of contents to display the documentâs structure to the user.
The user may interactively open and close individual items by clicking them with the mouse.
When an item is open, its immediate children in the hierarchy shall become visible on the screen; each child may in turn be open or closed, selectively revealing or hiding further parts of the hierarchy. 
When an item is closed, all of its descendants in the hierarchy shall be hidden.
Clicking the text of any visible item activates the item, causing the conforming reader to jump to a destination or trigger an action associated with the item.

The root of a documentâs outline hierarchy is an outline dictionary specified by the Outlines entry in the document catalogue.
Each individual outline item within the hierarchy shall be defined by an outline item dictionary.
The items at each level of the hierarchy form a linked list, chained together through their Prev and Next entries and accessed through the First and Last entries in the parent item (or in the outline dictionary in the case of top-level items).
When displayed on the screen, the items at a given level shall appear in the order in which they occur in the linked list.'
%
category: 'accessing'
method: OutlineItem
itemAt: searchString in: readString
	"<OutlineItem | nil>
	aSectionString is like '7.3.5' "

	| rst search rest |
	searchString isEmpty ifTrue: [^self].
	rst := searchString readStream.
	search := readString , '.' , (rst upTo: $.).
	rest := rst upToEnd.
	^self items
		detect: [:item | search , '*' match: item titleString]
		ifFound: [:item | item itemAt: rest in: search]
		ifNone: [nil]
%
method: OutlineItem
items 
	"<SequenceableCollecrtion of: OutlineItem>"

	| list item |
	list := OrderedCollection new.
	(self hasKey: #First) ifFalse: [
		^list].
	item := self First.
	list add: item.
	[item hasKey: #Next] whileTrue: 
			[item := item Next.
			list add: item].
	^list
%
method: OutlineItem
titleString
	"<String>"
	
	^self Title asString
%
category: 'accessing entries'
method: OutlineItem
A
	<type: #Action>
	<version: 1 dot: 1>
	<attribute: 9 documentation: '(shall not be present if a Dest entry is present)
The action that shall be performed when this item is activated.'>
	^self objectAt: #A ifAbsent: [PDF Dictionary empty]
%
method: OutlineItem
C
	<typeArrayOf: #Number>
	<version: 1 dot: 4>
	<attribute: 11 documentation: 'An array of three numbers in the range 0.0 to 1.0, representing the components in the DeviceRGB colour space of the colour that shall be used for the outline entryâs text.'>
	^self objectAt: #C ifAbsent: [#(0.0 0.0 0.0) asPDF]
%
method: OutlineItem
Count
	<type: #Integer>
	<attribute: 7 documentation: '(Required if the item has any descendants)
If the outline item is open, Count is the sum of the number of visible descendent outline items at all levels.
The number of visible descendent outline items shall be determined by the following recursive process:
	Step 1. Initialize Count to zero.
	Step 2. Add to Count the number of immediate children. During repetitions of this step, update only the Count of the original outline item.
	Step 3. For each of those immediate children whose Count is positive and non-zero, repeat steps 2 and 3.
If the outline item is closed, Count is negative and its absolute value is the number of descendants that would be visible if the outline item were opened.'>
	^self objectAt: #Count
%
method: OutlineItem
Dest
	<type: #Destination>
	<type: #Name>
	<type: #String>
	<attribute: 8 documentation: '(shall not be present if an A entry is present)
The destination that shall be displayed when this item is activated.'>
	^self objectAt: #Dest ifAbsent: [#() asPDF]
%
method: OutlineItem
F
	<type: #Integer>
	<version: 1 dot: 4>
	<attribute: 12 documentation: 'A set of flags specifying style characteristics for displaying the outline itemâs text.

The value shall be an integer interpreted as one-bit flags specifying style characteristics for displaying the item.
Bit positions within the flag word are numbered from low-order to high-order bits, with the lowest-order bit numbered 1.
Bit position		Name		Meaning
	1			Italic		If set to 1, display the item in italic.
	2			Bold		If set to 1, display the item in bold.
All other bits of the integer shall be 0.'>
	^self objectAt: #F ifAbsent: [0 asPDF]
%
method: OutlineItem
First
	<typeIndirect: #OutlineItem>
	<attribute: 5 documentation: '(Required if the item has any descendants)
The first of this itemâs immediate children in the outline hierarchy.'>
	^self objectAt: #First
%
method: OutlineItem
Last
	<typeIndirect: #OutlineItem>
	<attribute: 6 documentation: '(Required if the item has any descendants)
The last of this itemâs immediate children in the outline hierarchy.'>
	^self objectAt: #Last
%
method: OutlineItem
Next
	<typeIndirect: #OutlineItem>
	<attribute: 4 documentation: '(Required for all but the last item at each level)
The next item at this outline level.'>
	^self objectAt: #Next
%
method: OutlineItem
Parent
	<typeIndirect: #OutlineItem>
	<typeIndirect: #Outlines>
	<required>
	<attribute: 2 documentation: 'The parent of this item in the outline hierarchy.
The parent of a top-level item shall be the outline dictionary itself.'>
	^self objectAt: #Parent
%
method: OutlineItem
Prev
	<typeIndirect: #OutlineItem>
	<attribute: 3 documentation: '(Required for all but the first item at each level)
The previous item at this outline level.'>
	^self objectAt: #Prev
%
method: OutlineItem
SE
	<typeIndirect: #Dictionary>
	<version: 1 dot: 3>
	<attribute: 10 documentation: 'The structure element to which the item refers.'>
	^self objectAt: #SE ifAbsent: [PDF Dictionary empty]
%
method: OutlineItem
Title
	<type: #String>
	<required>
	<attribute: 1 documentation: 'The text that shall be displayed on the screen for this item.'>
	^self objectAt: #Title
%
category: 'accessing'
classmethod: Outlines
pdfTypeDefinition

	^PDFTypeDefinition
		name: #Outlines
		supertype: #Dictionary
		section: '12.3.3'
		documentation: 'A PDF document may contain a document outline that the conforming reader may display on the screen, allowing the user to navigate interactively from one part of the document to another.
The outline consists of a tree-structured hierarchy of outline items (sometimes called bookmarks), which serve as a visual table of contents to display the documentâs structure to the user.
The user may interactively open and close individual items by clicking them with the mouse.
When an item is open, its immediate children in the hierarchy shall become visible on the screen; each child may in turn be open or closed, selectively revealing or hiding further parts of the hierarchy. 
When an item is closed, all of its descendants in the hierarchy shall be hidden.
Clicking the text of any visible item activates the item, causing the conforming reader to jump to a destination or trigger an action associated with the item.

The root of a documentâs outline hierarchy is an outline dictionary specified by the Outlines entry in the document catalogue.
Each individual outline item within the hierarchy shall be defined by an outline item dictionary.
The items at each level of the hierarchy form a linked list, chained together through their Prev and Next entries and accessed through the First and Last entries in the parent item (or in the outline dictionary in the case of top-level items).
When displayed on the screen, the items at a given level shall appear in the order in which they occur in the linked list.'
%
category: 'accessing'
method: Outlines
itemAt: aSectionString
	"<OutlineItem | nil>
	aSectionString is like '7.3.5' "

	| rst search rest |
	rst := aSectionString readStream.
	search := rst upTo: $..
	rest := rst upToEnd.
	^self items
		detect: [:item | search , '*' match: item titleString]
		ifFound: [:item | item itemAt: rest in: search]
		ifNone: [nil]
%
method: Outlines
items 
	"<SequenceableCollecrtion of: OutlineItem>"

	| list item |
	list := OrderedCollection new.
	item := self First.
	list add: item.
	[item hasKey: #Next] whileTrue: 
			[item := item Next.
			list add: item].
	^list
%
category: 'accessing entries'
method: Outlines
Count
	<type: #Integer>
	<attribute: 4 documentation: '(Required if the document has any open outline entries)
Total number of visible outline items at all levels of the outline.
The value cannot be negative.
This entry shall be omitted if there are no open outline items.'>
	^self objectAt: #Count
%
method: Outlines
First
	<typeIndirect: #OutlineItem>
	<required>
	<attribute: 2 documentation: '(Required if there are any open or closed outline entries)
An outline item dictionary representing the first top-level item in the outline.'>
	^self objectAt: #First
%
method: Outlines
Last
	<typeIndirect: #OutlineItem>
	<required>
	<attribute: 3 documentation: '(Required if there are any open or closed outline entries)
An outline item dictionary representing the last top-level item in the outline.'>
	^self objectAt: #Last
%
method: Outlines
Type
	<type: #Name>
	<attribute: 1 documentation: 'The type of PDF object that this dictionary describes.'>
	^self objectAt: #Type ifAbsent: [#Outlines asPDF]
%
category: 'accessing'
classmethod: PolygonAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #PolygonAnnotation
		supertype: #Annot
		version: #(1 5)
		section: '12.5.6.9'
		documentation: 'Polygon annotations display closed polygons on the page.
Such polygons may have any number of vertices connected by straight lines.
Polyline annotations are similar to polygons, except that the first and last vertex are not implicitly connected.'
%
classmethod: PolygonAnnotation
subtype
	^#Polygon
%
category: 'accessing entries'
method: PolygonAnnotation
BE
	<type: #BorderEffect>
	<attribute: 1 documentation: 'A border effect dictionary that shall describe an effect applied to the border described by the BS entry.'>
	^self objectAt: #BE ifAbsent: [(PDF classAt: #BorderEffect) empty]
%
category: 'accessing entries'
method: PolygonPolyline
BS
	<type: #BorderStyle>
	<attribute: 2 documentation: 'A border style dictionary specifying the width and dash pattern that shall be used in drawing the line.
The annotation dictionaryâs AP entry, if present, shall take precedence over the Vertices and BS entries.'>
	^self objectAt: #BS ifAbsent: [(PDF classAt: #BorderStyle) empty]
%
method: PolygonPolyline
IC
	<typeArrayOf: #Number>
	<version: 1 dot: 4>
	<attribute: 3 documentation: 'An array of numbers that shall be in the range 0.0 to 1.0 and shall specify the interior color with which to fill the annotationâs line endings.
The number of array elements determines the colour space in which the colour shall be defined:
	0	No colour; transparent
	1	DeviceGray
	3	DeviceRGB
	4	DeviceCMYK'>
	^self objectAt: #IC ifAbsent: [#() asPDF]
%
method: PolygonPolyline
IT
	<type: #Name>
	<version: 1 dot: 6>
	<attribute: 4 documentation: 'A name that shall describe the intent of the polygon or polyline annotation.
The following values shall bevalid:
	PolygonCloud						The annotation is intended to function as a cloud object.
	PolyLineDimension 	(PDF 1.7) 	The polyline annotation is intended to function as a dimension.
	PolygonDimension 	(PDF 1.7) 	The polygon annotation is intended to function as a dimension.'>
	^self objectAt: #IT ifAbsent: [nil]
%
method: PolygonPolyline
Measure
	<type: #Dictionary>
	<version: 1 dot: 7>
	<attribute: 5 documentation: 'A measure dictionary that shall specify the scale and units that apply to the annotation.'>
	^self objectAt: #Measure ifAbsent: [PDF Dictionary empty]
%
method: PolygonPolyline
Vertices
	<typeArrayOf: #Number>
	<required>
	<attribute: 1 documentation: 'An array of numbers specifying the width and dash pattern that shall represent the alternating horizontal and vertical coordinates, respectively, of each vertex, in default user space.'>
	^self objectAt: #Vertices ifAbsent: [#() asPDF]
%
category: 'accessing'
classmethod: PolyLineAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #PolyLineAnnotation
		supertype: #Annot
		version: #(1 5)
		section: '12.5.6.9'
		documentation: 'Polygon annotations display closed polygons on the page.
Such polygons may have any number of vertices connected by straight lines.
Polyline annotations are similar to polygons, except that the first and last vertex are not implicitly connected.'
%
classmethod: PolyLineAnnotation
subtype
	^#PolyLine
%
category: 'accessing entries'
method: PolyLineAnnotation
LE
	<typeArrayOf: #Name>
	<attribute: 1 documentation: 'An array of two names that shall specify the line ending styles.
The first and second elements of the array shall specify the line ending styles for the endpoints defined, respectively, by the first and last pairs of coordinates in the Vertices array.
The possible values are:
	/Square /Circle /Diamond /OpenArrow /ClosedArrow /None /Butt /ROpenArrow /RClosedArrow /Slash.'>
	^self objectAt: #LE ifAbsent: [#(#None #None) asPDF]
%
category: 'accessing'
classmethod: PopupAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #PopupAnnotation
		supertype: #Annot
		version: #(1 3)
		section: '12.5.6.14'
		documentation: 'A pop-up annotation displays text in a pop-up window for entry and editing.
It shall not appear alone but is associated with a markup annotation, its parent annotation, and shall be used for editing the parentâs text.
It shall have no appearance stream or associated actions of its own and shall be identified by the Popup entry in the parentâs annotation dictionary.'
%
classmethod: PopupAnnotation
subtype
	^#Popup
%
category: 'accessing entries'
method: PopupAnnotation
Open
	<type: #Boolean>
	<attribute: 2 documentation: 'A flag specifying whether the pop-up annotation shall initially be displayed open.'>
	^self objectAt: #Open ifAbsent: [false]
%
method: PopupAnnotation
Parent
	<typeIndirect: #Annot>
	<attribute: 1 documentation: 'The parent annotation with which this pop-up annotation shall be associated.
If this entry is present, the parent annotationâs Contents, M, C, and T entries shall override those of the pop-up annotation itself.'>
	^self objectAt: #Parent ifAbsent: [(PDF classAt: #Annot) empty]
%
category: 'accessing'
classmethod: PrinterMarkAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #PrinterMarkAnnotation
		supertype: #Annot
		version: #(1 4)
		section: '12.5.6.20'
		documentation: 'A printerâs mark annotation represents a graphic symbol, such as a registration target, colour bar, or cut mark, that may be added to a page to assist production personnel in identifying components of a multiple-plate job and maintaining consistent output during production.'
%
classmethod: PrinterMarkAnnotation
subtype
	^#PrinterMark
%
category: 'accessing entries'
method: PrinterMarkAnnotation
MN
	<type: #Name>
	<attribute: 1 documentation: 'An arbitrary name identifying the type of printerâs mark, such as ColorBar or RegistrationTarget.'>
	^self objectAt: #MN ifAbsent: [nil]
%
category: 'accessing'
classmethod: RedactAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #RedactAnnotation
		supertype: #Annot
		version: #(1 7)
		section: '12.5.6.23'
		documentation: 'A redaction annotation identifies content that is intended to be removed from the document.
The intent of redaction annotations is to enable the following process:
	a)	Content identification. A user applies redact annotations that specify the pieces or regions of content that should be removed.
		Up until the next step is performed, the user can see, move and redefine these annotations.
	b)	Content removal. The user instructs the viewer application to apply the redact annotations, after which the content in the area specified by the redact annotations is removed.
		In the removed contentâs place, some marking appears to indicate the area has been redacted.
		Also, the redact annotations are removed from the PDF document.

Redaction annotations provide a mechanism for the first step in the redaction process (content identification).
This allows content to be marked for redaction in a non-destructive way, thus enabling a review process for evaluating potential redactions prior to removing the specified content.

Redaction annotations shall provide enough information to be used in the second phase of the redaction process (content removal).
This phase is application-specific and requires the conforming reader to remove all content identified by the redaction annotation, as well as the annotation itself.'
%
classmethod: RedactAnnotation
subtype
	^#Redact
%
category: 'accessing entries'
method: RedactAnnotation
DA
	<type: #String>
	<attribute: 6 documentation: '(Required if OverlayText is present, ignored otherwise)
The appearance string to be used in formatting the overlay text when it is drawn after the affected content has been removed.
This entry is ignored if the RO entry is present.'>
	^self objectAt: #DA ifAbsent: [PDF String empty]
%
method: RedactAnnotation
IC
	<typeArrayOf: #Number>
	<attribute: 2 documentation: 'An array of three numbers in the range 0.0 to 1.0 specifying the components, in the DeviceRGB colour space, of the interior colour with which to fill the redacted region after the affected content has been removed.
If this entry is absent, the interior of the redaction region is left transparent.
This entry is ignored if the RO entry is present.'>
	^self objectAt: #IC ifAbsent: [#() asPDF]
%
method: RedactAnnotation
OverlayText
	<type: #String>
	<attribute: 4 documentation: 'A text string specifying the overlay text that should be drawn over the redacted region after the affected content has been removed.
This entry is ignored if the RO entry is present.'>
	^self objectAt: #OverlayText ifAbsent: ['' asPDF]
%
method: RedactAnnotation
Q
	<type: #Integer>
	<attribute: 7 documentation: 'A code specifying the form of quadding (justification) to be used in laying out the overlay text:
	0	Left-justified
	1	Centered
	2	Right-justified
This entry is ignored if the RO entry is present.'>
	^self objectAt: #Q ifAbsent: [0 asPDF]
%
method: RedactAnnotation
QuadPoints
	<typeArrayOf: #Number>
	<attribute: 1 documentation: 'An array of 8 x n numbers specifying the coordinates of n quadrilaterals in default user space.
If present, these quadrilaterals denote the content region that is intended to be removed.
If this entry is not present, the Rect entry denotes the content region that is intended to be removed.'>
	^self objectAt: #QuadPoints ifAbsent: [#() asPDF]
%
method: RedactAnnotation
Repeat
	<type: #Boolean>
	<attribute: 5 documentation: 'If true, then the text specified by OverlayText should be repeated to fill the redacted region after the affected content has been removed.
This entry is ignored if the RO entry is present.'>
	^self objectAt: #Repeat ifAbsent: [false]
%
method: RedactAnnotation
RO
	<type: #FormXObject>
	<attribute: 3 documentation: 'A form XObject specifying the overlay appearance for this redaction annotation.
After this redaction is applied and the affected content has been removed, the overlay appearance should be drawn such that its origin lines up with the lower-left corner of the annotation rectangle.
This form XObject is not necessarily related to other annotation appearances, and may or may not be present in the AP dictionary.
This entry takes precedence over the IC, OverlayText, DA, and Q entries.'>
	^self objectAt: #RO ifAbsent: [#() asPDF]
%
category: 'accessing'
classmethod: ScreenAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #ScreenAnnotation
		supertype: #Annot
		version: #(1 5)
		section: '12.5.6.18'
		documentation: 'A screen annotation specifies a region of a page upon which media clips may be played.
It also serves as an object from which actions can be triggered.'
%
classmethod: ScreenAnnotation
subtype
	^#Screen
%
category: 'accessing entries'
method: ScreenAnnotation
A
	<type: #Action>
	<attribute: 3 documentation: 'An action that shall be performed when the annotation is activated.'>
	^self objectAt: #A ifAbsent: [(PDF classAt: #Action) empty]
%
method: ScreenAnnotation
AA
	<type: #Dictionary>
	<attribute: 4 documentation: 'An additional-actions dictionary defining the screen annotationâs behaviour in response to various trigger events.'>
	^self objectAt: #AA ifAbsent: [PDF Dictionary empty]
%
method: ScreenAnnotation
MK
	<type: #AppearanceCharacteristics>
	<attribute: 2 documentation: 'An appearance characteristics dictionary.
The I entry of this dictionary provides the icon used in generating the appearance referred to by the screen annotationâs AP entry.'>
	^self objectAt: #MK ifAbsent: [(PDF classAt: #AppearanceCharacteristics) empty]
%
method: ScreenAnnotation
T
	<type: #String>
	<attribute: 1 documentation: 'The title of the screen annotation.'>
	^self objectAt: #T ifAbsent: ['' asPDF]
%
category: 'accessing'
classmethod: Sound
pdfTypeDefinition
	^PDFTypeDefinition
		name: #Sound
		supertype: #Stream
		version: #(1 2)
		section: '13.3'
		documentation: 'A sound object shall be a stream containing sample values that define a sound to be played through the computerâs speakers.
The Sound entry in a sound annotation or sound action dictionary shall identify a sound object representing the sound to be played when the annotation is activated.

Since a sound object is a stream, it may contain any of the standard entries common to all streams.
In particular, if it contains an F (file specification) entry, the sound shall be defined in an external file.
This sound file shall be self-describing, containing all information needed to render the sound; no additional information need be present in the PDF file.

	NOTE	The AIFF, AIFF-C (Mac OS), RIFF (.wav), and snd (.au) file formats are all self-describing.

If no F entry is present, the sound object itself shall contain the sample data and all other information needed to define the sound.'
%
category: 'accessing entries'
method: Sound
B
	<type: #Integer>
	<attribute: 4 documentation: 'The number of bits per sample value per channel.'>
	^self objectAt: #B ifAbsent: [8 asPDF]
%
method: Sound
C
	<type: #Integer>
	<attribute: 3 documentation: 'The number of sound channels.'>
	^self objectAt: #C ifAbsent: [1 asPDF]
%
method: Sound
CO
	<type: #Name>
	<attribute: 6 documentation: 'The sound compression format used on the sample data.
(This is separate from any stream compression specified by the sound objectâs Filter entry)
If this entry is absent, sound compression shall not be used; the data contains sampled waveforms that shall be played at R samples per second per channel.'>
	^self objectAt: #CO ifAbsent: [nil]
%
method: Sound
CP
	<type: #Object>
	<attribute: 7 documentation: 'Optional parameters specific to the sound compression format used.
No standard values have been defined for the CO and CP entries.'>
	^self objectAt: #CP ifAbsent: [nil]
%
method: Sound
E
	<type: #Name>
	<attribute: 5 documentation: 'The encoding format for the sample data:
	Raw		Unspecified or unsigned values in the range 0 to 2B â 1
	Signed		Twos-complement values
	muLaw		m-lawâencoded samples
	ALaw		A-lawâencoded samples'>
	^self objectAt: #E ifAbsent: [#Raw asPDF]
%
method: Sound
R
	<type: #Number>
	<required>
	<attribute: 2 documentation: 'The sampling rate, in samples per second.'>
	^self objectAt: #R
%
method: Sound
Type
	<type: #Name>
	<attribute: 1 documentation: 'The type of PDF object that this dictionary describes.'>
	^self objectAt: #Type ifAbsent: [#Sound asPDF]
%
category: 'accessing'
classmethod: SoundAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #SoundAnnotation
		supertype: #Annot
		version: #(1 2)
		section: '12.5.6.16'
		documentation: 'A sound annotation shall analogous to a text annotation except that instead of a text note, it contains sound recorded from the computerâs microphone or imported from a file.
When the annotation is activated, the sound shall be played.
The annotation shall behave like a text annotation in most ways, with a different icon (by default, a speaker) to indicate that it represents a sound.'
%
classmethod: SoundAnnotation
subtype
	^#Sound
%
category: 'accessing entries'
method: SoundAnnotation
Name
	<type: #Name>
	<attribute: 2 documentation: 'The name of an icon that shall be used in displaying the annotation.
Conforming readers shall provide predefined icon appearances for at least the standard names Speaker and Mic.
Additional names may be supported as well.
The annotation dictionaryâs AP entry, if present, shall take precedence over the Name entry.'>
	^self objectAt: #Name ifAbsent: [#Speaker asPDF]
%
method: SoundAnnotation
Sound
	<type: #Sound>
	<required>
	<attribute: 1 documentation: 'A sound object defining the sound that shall be played when the annotation is activated.'>
	^self objectAt: #Sound
%
category: 'accessing'
classmethod: SquareAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #SquareAnnotation
		supertype: #Annot
		version: #(1 3)
		section: '12.5.6.8'
		documentation: 'Square and circle annotations shall display, respectively, a rectangle or an ellipse on the page.
When opened, they shall display a pop-up window containing the text of the associated note.
The rectangle or ellipse shall be inscribed within the annotation rectangle defined by the annotation dictionaryâs Rect entry.

Despite the names square and circle, the width and height of the annotation rectangle need not be equal.'
%
classmethod: SquareAnnotation
subtype
	^#Square
%
category: 'accessing entries'
method: SquareCircle
BE
	<type: #BorderEffect>
	<version: 1 dot: 5>
	<attribute: 3 documentation: 'A border effect dictionary describing an effect applied to the border described by the BS entry.'>
	^self objectAt: #BE ifAbsent: [(PDF classAt: #BorderEffect) empty]
%
method: SquareCircle
BS
	<type: #BorderStyle>
	<attribute: 1 documentation: 'A border style dictionary specifying the line width and dash pattern that shall be used in drawing the rectangle or ellipse.
The annotation dictionaryâs AP entry, if present, takes precedence over the Rect and BS entries.'>
	^self objectAt: #BS ifAbsent: [(PDF classAt: #BorderStyle) empty]
%
method: SquareCircle
IC
	<typeArrayOf: #Number>
	<version: 1 dot: 4>
	<attribute: 2 documentation: 'An array of numbers that shall be in the range 0.0 to 1.0 and shall specify the interior color with which to fill the annotationâs rectangle or ellipse.
The number of array elements determines the colour space in which the colour shall be defined:
	0	No colour; transparent
	1	DeviceGray
	3	DeviceRGB
	4	DeviceCMYK'>
	^self objectAt: #IC ifAbsent: [#() asPDF]
%
method: SquareCircle
RD
	<type: #Rectangle>
	<version: 1 dot: 5>
	<attribute: 4 documentation: 'A set of four numbers that shall describe the numerical differences between two rectangles: the Rect entry of the annotation and the actual boundaries of the underlying square or circle.
Such a difference may occur in situations where a border effect (described by BE) causes the size of the Rect to increase beyond that of the square or circle.

The four numbers shall correspond to the differences in default user space between the left, top, right, and bottom coordinates of Rect and those of the square or circle, respectively.
Each value shall be greater than or equal to 0.
The sum of the top and bottom differences shall be less than the height of Rect, and the sum of the left and right differences shall be less than the width of Rect.'>
	^self objectAt: #RD ifAbsent: [(PDF classAt: #Rectangle) new]
%
category: 'accessing'
classmethod: SquigglyAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #SquigglyAnnotation
		supertype: #Annot
		version: #(1 4)
		section: '12.5.6.10'
		documentation: 'Text markup annotations shall appear as highlights, underlines, strikeouts, or jagged (âsquigglyâ) underlines in the text of a document.
When opened, they shall display a pop-up window containing the text of the associated note.'
%
classmethod: SquigglyAnnotation
subtype
	^#Squiggly
%
category: 'accessing'
classmethod: StampAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #StampAnnotation
		supertype: #Annot
		version: #(1 3)
		section: '12.5.6.12'
		documentation: 'A rubber stamp annotation displays text or graphics intended to look as if they were stamped on the page with a rubber stamp.
When opened, it shall display a pop-up window containing the text of the associated note.'
%
classmethod: StampAnnotation
subtype
	^#Stamp
%
category: 'accessing entries'
method: StampAnnotation
Name
	<type: #Name>
	<attribute: 1 documentation: 'The name of an icon that shall be used in displaying the annotation.
Conforming readers shall provide predefined icon appearances for at least the following standard names:
	Approved, Experimental, NotApproved, AsIs, Expired, 
	NotForPublicRelease, Confidential, Final, Sold, Departmental, 
	ForComment, TopSecret, Draft, ForPublicRelease
Additional names may be supported as well.
The annotation dictionaryâs AP entry, if present, shall take precedence over the Name entry.'>
	^self objectAt: #Name ifAbsent: [#Draft asPDF]
%
category: 'accessing'
classmethod: StrikeOutAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #StrikeOutAnnotation
		supertype: #Annot
		version: #(1 3)
		section: '12.5.6.10'
		documentation: 'Text markup annotations shall appear as highlights, underlines, strikeouts, or jagged (âsquigglyâ) underlines in the text of a document.
When opened, they shall display a pop-up window containing the text of the associated note.'
%
classmethod: StrikeOutAnnotation
subtype
	^#StrikeOut
%
category: 'accessing'
classmethod: TextAnnotation
pdfTypeDefinition

	^PDFTypeDefinition
		name: #TextAnnotation
		supertype: #Annot
		section: '12.5.6.4'
		documentation: 'A text annotation represents a âsticky noteâ attached to a point in the PDF document.
When closed, the annotation shall appear as an icon; when open, it shall display a pop-up window containing the text of the note in a font and size chosen by the conforming reader.
Text annotations shall not scale and rotate with the page; they shall behave as if the NoZoom and NoRotate annotation flags were always set.'
%
classmethod: TextAnnotation
subtype
	^#Text
%
category: 'accessing entries'
method: TextAnnotation
Name
	<type: #Name>
	<attribute: 2 documentation: 'The name of an icon that shall be used in displaying the annotation.
Conforming readers shall provide predefined icon appearances for at least the following standard names:
	Comment, Key, Note, Help, NewParagraph, Paragraph, Insert
Additional names may be supported as well.
The annotation dictionaryâs AP entry, if present, shall take precedence over the Name entry.'>
	^self objectAt: #Name ifAbsent: [#Note asPDF]
%
method: TextAnnotation
Open
	<type: #Boolean>
	<attribute: 1 documentation: 'A flag specifying whether the annotation shall initially be displayed open.'>
	^self objectAt: #Open ifAbsent: [false]
%
method: TextAnnotation
State
	<type: #String>
	<version: 1 dot: 5>
	<attribute: 3 documentation: 'The state to which the original annotation shall be set.
Default: (Unmarked) if StateModel is (Marked); (None) if StateModel is (Review).
With StateModel (Marked) can be (Marked) or (Unmarked);
with StateModel (Review) can be (Accepted), (Rejected), (Cancelled), (Completed) or (None).'>
	^self objectAt: #State ifAbsent: ['' asPDF]
%
method: TextAnnotation
StateModel
	<type: #String>
	<version: 1 dot: 5>
	<attribute: 4 documentation: '(Required if State is present, otherwise optional)
The state model corresponding to State.
Can be (Marked) or (Review)'>
	^self objectAt: #StateModel ifAbsent: ['' asPDF]
%
category: 'accessing entries'
method: TextMarkup
QuadPoints
	<typeArrayOf: #Number>
	<required>
	<attribute: 1 documentation: 'An array of 8 Ã n numbers specifying the coordinates of nquadrilaterals in default user space.
Each quadrilateral shall encompasses a word or group of contiguous words in the text underlying the annotation.
The coordinates for each quadrilateral shall be given in the order
	x1 y1 x2 y2 x3 y3 x4 y4
specifying the quadrilateralâs four vertices in counterclockwise order.
The text shall be oriented with respect to the edge connecting points (x1, y1) and (x2, y2).
The annotation dictionaryâs AP entry, if present, shall take precedence over QuadPoints.'>
	^self objectAt: #QuadPoints ifAbsent: [#() asPDF]
%
category: 'accessing'
classmethod: ThreeDActivation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #ThreeDActivation
		supertype: #Dictionary
		version: #(1 6)
		section: '13.6.2'
		documentation: 'An activation dictionary determines how the state of the annotation and its associated artwork may change.'
%
category: 'accessing entries'
method: ThreeDActivation
A
	<type: #Name>
	<attribute: 1 documentation: 'A name specifying the circumstances under which the annotation shall be activated.
Valid values are:
	PO	The annotation shall be activated as soon as the page containing the annotation is opened.
	PV	The annotation shall be activated as soon as any part of the page containing the annotation becomes visible.
	XA	The annotation shall remain inactive until explicitly activated by a script or user action.

	NOTE 	At any one time, only a single page shall be considered open in a conforming reader, even though more than one page may be visible, depending on the page layout.
Default value: XA.
	NOTE 	For performance reasons, documents intended for viewing in a web browser should use explicit activation (XA).
In non-interactive applications, such as printing systems or aggregating conforming reader, PO and PV indicate that the annotation shall be activated when the page is printed or placed; XA indicates that the annotation shall never be activated and the normal appearance shall be used.'>
	^self objectAt: #A ifAbsent: [#XA asPDF]
%
method: ThreeDActivation
AIS
	<type: #Name>
	<attribute: 2 documentation: 'A name specifying the state of the artwork instance upon activation of the annotation.
Valid values are:
	I	The artwork shall be instantiated, but real-time script-driven animations shall be disabled.
	L	Real-time script-driven animations shall be enabled if present; if not, the artwork shall be instantiated.

	NOTE	In non-interactive conforming readers, the artwork shall be instantiated and scripts shall be disabled.'>
	^self objectAt: #AIS ifAbsent: [#L asPDF]
%
method: ThreeDActivation
D
	<type: #Name>
	<attribute: 3 documentation: 'A name specifying the circumstances under which the annotation shall be deactivated.
Valid values are:
	PC	The annotation shall be deactivated as soon as the page is closed.
	PI	The annotation shall be deactivated as soon as the page containing the annotation becomes invisible.
	XD	The annotation shall remain active until explicitly deactivated by a script or user action.

	NOTE	At any one time, only a single page shall be considered open in the conforming reader, even though more than one page may be visible, depending on the page layout.'>
	^self objectAt: #D ifAbsent: [#PI asPDF]
%
method: ThreeDActivation
DIS
	<type: #Name>
	<attribute: 4 documentation: 'A name specifying the state of the artwork instance upon deactivation of the annotation.
Valid values are U (uninstantiated), I(instantiated), and L (live).

	NOTE	If the value of this entry is L, uninstantiation of instantiated artwork is necessary unless it has been modified. 
			Uninstantiation is never required in non-interactive conforming readers.'>
	^self objectAt: #DIS ifAbsent: [#U asPDF]
%
method: ThreeDActivation
NP
	<type: #Boolean>
	<version: 1 dot: 7>
	<attribute: 6 documentation: 'A flag indicating the default behavior of the user interface for viewing or managing information about the 3D artwork.
Such user interfaces can enable navigation to different views or can depict the hierarchy of the objects in the artwork (the model tree).
If true, the user interface should be made visible when the annotation is activated.
If false, the user interface should not be made visible by default.'>
	^self objectAt: #NP ifAbsent: [false]
%
method: ThreeDActivation
TB
	<type: #Boolean>
	<version: 1 dot: 7>
	<attribute: 5 documentation: 'A flag indicating the default behavior of an interactive toolbar associated with this annotation.
If true, a toolbar shall be displayed by default when the annotation is activated and given focus.
If false, a toolbar shall not be displayed by default.
	NOTE	Typically, a toolbar is positioned in proximity to the 3D annotation.'>
	^self objectAt: #TB ifAbsent: [true]
%
category: 'accessing'
classmethod: ThreeDAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #ThreeDAnnotation
		supertype: #Annot
		version: #(1 6)
		section: '13.6.2'
		documentation: '3D annotations are the means by which 3D artwork shall be represented in a PDF document.
In addition to these entries, a 3D annotation shall provide an appearance stream in its AP entry that has a normal appearance (the N entry).
This appearance may be used by applications that do not support 3D annotations and by all applications for the initial display of the annotation.'
%
classmethod: ThreeDAnnotation
subtype
	^#'3D'
%
category: 'accessing entries'
method: ThreeDAnnotation
ThreeDA
	<type: #ThreeDActivation>
	<attribute: 3 documentation: 'An activation dictionary that defines the times at which the annotation shall be activated and deactivated and the state of the 3D artwork instance at those times.
Default value: an activation dictionary containing default values for all its entries.'>
	^self objectAt: #'3DA' ifAbsent: [(PDF classAt: #ThreeDActivation) empty]
%
method: ThreeDAnnotation
ThreeDB
	<type: #Rectangle>
	<attribute: 5 documentation: 'The 3D view box, which is the rectangular area in which the 3D artwork shall be drawn.
It shall be within the rectangle specified by the annotationâs Rect entry and shall be expressed in the annotationâs target coordinate system.

Default value: the annotationâs Rect entry, expressed in the target coordinate system.
This value is [ -w/2 -h/2 w/2 h/2 ], where w and h are the width and height, respectively, of Rect.'>
	^self objectAt: #'3DB' ifAbsent: [(PDF classAt: #Rectangle) empty]
%
method: ThreeDAnnotation
ThreeDD
	<type: #Stream>
	<type: #Dictionary>
	<required>
	<attribute: 1 documentation: 'A 3D stream or 3D reference dictionary that specifies the 3D artwork to be shown.'>
	^self objectAt: #'3DD' ifAbsent: [PDF Dictionary empty]
%
method: ThreeDAnnotation
ThreeDI
	<type: #Boolean>
	<attribute: 4 documentation: 'A flag indicating the primary use of the 3D annotation.
If true, it is intended to be interactive; if false, it is intended to be manipulated programmatically, as with a JavaScript animation.
Conforming readers may present different user interface controls for interactive 3D annotations (for example, to rotate, pan, or zoom the artwork) than for those managed by a script or other mechanism.'>
	^self objectAt: #'3DI' ifAbsent: [true]
%
method: ThreeDAnnotation
ThreeDV
	<type: #Dictionary>
	<type: #Integer>
	<type: #String>
	<type: #Name>
	<attribute: 2 documentation: 'An object that specifies the default initial view of the 3D artwork that shall be used when the annotation is activated.
It may be either a 3D view dictionary or one of the following types specifying an element in the VA array in the 3D stream:
	â¢	An integer specifying an index into the VA array.
	â¢	A text string matching the IN entry in one of the views in the VAarray.
	â¢	A name that indicates the first (F), last (L), or default (D) entries in the VA array.
Default value: the default view in the 3D stream object specified by 3DD.'>
	^self objectAt: #'3DV' ifAbsent: [PDF Dictionary empty]
%
category: 'accessing'
classmethod: TrapNetAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #TrapNetAnnotation
		supertype: #Annot
		version: #(1 3)
		section: '12.5.6.21'
		documentation: 'A trap network annotation may be used to define the trapping characteristics for a page of a PDF document.
	NOTE	Trapping is the process of adding marks to a page along colour boundaries to avoid unwanted visual artifacts resulting from misregistration of colorants when the page is printed.
A page shall have no more than one trap network annotation, whose Subtype entry has the value TrapNet and which shall always be the last element in the page objectâs Annots array.'
%
classmethod: TrapNetAnnotation
subtype
	^#TrapNet
%
category: 'accessing entries'
method: TrapNetAnnotation
AnnotStates
	<typeArrayOf: #Name>
	<attribute: 3 documentation: '(Required if Version is present; shall be absent if LastModified is present)
An array of name objects representing the appearance states (value of the AS entry) for annotations associated with the page.
The appearance states shall be listed in the same order as the annotations in the pageâs Annots array.
For an annotation with no AS entry, the corresponding array element should be null.
No appearance state shall be included for the trap network annotation itself.'>
	^self objectAt: #AnnotStates ifAbsent: [#() asPDF]
%
method: TrapNetAnnotation
FontFauxing
	<typeArrayOf: #Font>
	<attribute: 4 documentation: 'An array of font dictionaries representing fonts that were fauxed (replaced by substitute fonts) during the generation of trap networks for the page.'>
	^self objectAt: #FontFauxing ifAbsent: [#() asPDF]
%
method: TrapNetAnnotation
LastModified
	<type: #Date>
	<version: 1 dot: 4>
	<attribute: 1 documentation: '(Required if Version and AnnotStates are absent; shall be absent if Version and AnnotStates are present)
The date and time when the trap network was most recently modified.'>
	^self objectAt: #LastModified ifAbsent: [nil]
%
method: TrapNetAnnotation
Version
	<type: #Array>
	<attribute: 2 documentation: '(Required if AnnotStates is present; shall be absent if LastModifiedis present)
An unordered array of all objects present in the page description at the time the trap networks were generated and that, if changed, could affect the appearance of the page. If present, the array shall include the following objects:
	â¢	All content streams identified in the page objectâs Contents entry
	â¢	All resource objects (other than procedure sets) in the pageâs resource dictionary
	â¢	All resource objects (other than procedure sets) in the resource dictionaries of any form XObjects on the page
	â¢	All OPI dictionaries associated with XObjects on the page'>
	^self objectAt: #Version ifAbsent: [#() asPDF]
%
category: 'accessing'
classmethod: UnderlineAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #UnderlineAnnotation
		supertype: #Annot
		version: #(1 3)
		section: '12.5.6.10'
		documentation: 'Text markup annotations shall appear as highlights, underlines, strikeouts, or jagged (âsquigglyâ) underlines in the text of a document.
When opened, they shall display a pop-up window containing the text of the associated note.'
%
classmethod: UnderlineAnnotation
subtype
	^#Underline
%
category: 'accessing'
classmethod: URI
pdfTypeDefinition
	^PDFTypeDefinition
		name: #URI
		supertype: #Action
		version: #(1 1)
		section: '12.6.4.7'
		documentation: 'A uniform resource identifier (URI) is a string that identifies (resolves to) a resource on the Internetâtypically a file that is the destination of a hypertext link, although it may also resolve to a query or other entity.
(URIs are described in Internet RFC 2396, Uniform Resource Identifiers (URI): Generic Syntax)

A URI action causes a URI to be resolved'
%
category: 'accessing entries'
method: URI
IsMap
	<type: #Boolean>
	<attribute: 2 documentation: 'A flag specifying whether to track the mouse position when the URI is resolved.
This entry applies only to actions triggered by the userâs clicking an annotation; it shall be ignored for actions associated with outline items or with a documentâs OpenAction entry'>
	^self objectAt: #IsMap ifAbsent: [false]
%
method: URI
URI
	<type: #AsciiString>
	<required>
	<attribute: 1 documentation: 'The uniform resource identifier to resolve, encoded in 7-bit ASCII'>
	^self objectAt: #URI
%
category: 'accessing'
classmethod: ViewerPreferences
pdfTypeDefinition
	^PDFTypeDefinition
		name: #ViewerPreferences
		supertype: #Dictionary
		version: #(1 2)
		section: '12.2'
		documentation: 'The ViewerPreferences entry in a documentâs catalogue designates a viewer preferences dictionary (PDF 1.2) controlling the way the document shall be presented on the screen or in print.
If no such dictionary is specified, conforming readers should behave in accordance with their own current user preference settings.'
%
category: 'accessing entries'
method: ViewerPreferences
CenterWindow
	<type: #Boolean>
	<attribute: 5 documentation: 'A flag specifying whether to position the documentâs window in the center of the screen.
Default value: false.'>
	^self objectAt: #CenterWindow ifAbsent: [false]
%
method: ViewerPreferences
Direction
	<type: #Name>
	<version: 1 dot: 3>
	<attribute: 8 documentation: 'The predominant reading order for text:
	L2R	Left to right
	R2L	Right to left (including vertical writing systems, such as Chinese, Japanese, and Korean)
This entry has no direct effect on the documentâs contents or page numbering but may be used to determine the relative positioning of pages when displayed side by side or printed n-up.
Default value: L2R.'>
	^self objectAt: #Direction ifAbsent: [#L2R asPDF]
%
method: ViewerPreferences
DisplayDocTitle
	<type: #Boolean>
	<version: 1 dot: 4>
	<attribute: 6 documentation: 'A flag specifying whether the windowâs title bar should display the document title taken from the Title entry of the document information dictionary.
If false, the title bar should instead display the name of the PDF file containing the document.
Default value: false.'>
	^self objectAt: #DisplayDocTitle ifAbsent: [false]
%
method: ViewerPreferences
Duplex
	<type: #Name>
	<version: 1 dot: 7>
	<attribute: 14 documentation: 'The paper handling option that shall be used when printing the file from the print dialog.
The following values are valid:
	Simplex 				Print single-sided
	DuplexFlipShortEdge 	Duplex and flip on the short edge of the sheet
	DuplexFlipLongEdge 	Duplex and flip on the long edge of the sheet
Default value: none'>
	^self objectAt: #Duplex ifAbsent: [#none asPDF]
%
method: ViewerPreferences
FitWindow
	<type: #Boolean>
	<attribute: 4 documentation: 'A flag specifying whether to resize the documentâs window to fit the size of the first displayed page.
Default value: false.'>
	^self objectAt: #FitWindow ifAbsent: [false]
%
method: ViewerPreferences
HideMenubar
	<type: #Boolean>
	<attribute: 2 documentation: 'A flag specifying whether to hide the conforming readerâs menu bar when the document is active.
Default value: false.'>
	^self objectAt: #HideMenubar ifAbsent: [false]
%
method: ViewerPreferences
HideToolbar
	<type: #Boolean>
	<attribute: 1 documentation: 'A flag specifying whether to hide the conforming readerâs tool bars when the document is active.
Default value: false.'>
	^self objectAt: #HideToolbar ifAbsent: [false]
%
method: ViewerPreferences
HideWindowUI
	<type: #Boolean>
	<attribute: 3 documentation: 'A flag specifying whether to hide user interface elements in the documentâs window (such as scroll bars and navigation controls), leaving only the documentâs contents displayed.
Default value: false.'>
	^self objectAt: #HideWindowUI ifAbsent: [false]
%
method: ViewerPreferences
NonFullScreenPageMode
	<type: #Name>
	<attribute: 7 documentation: 'The documentâs page mode, specifying how to display the document on exiting full-screen mode:
	UseNone	Neither document outline nor thumbnail images visible
	UseOutlines	Document outline visible
	UseThumbs	Thumbnail images visible
	UseOC	Optional content group panel visible
This entry is meaningful only if the value of the PageMode entry in the Catalog dictionary is FullScreen; it shall be ignored otherwise.
Default value: UseNone.'>
	^self objectAt: #NonFullScreenPageMode ifAbsent: [#UseNone asPDF]
%
method: ViewerPreferences
NumCopies
	<type: #Integer>
	<version: 1 dot: 7>
	<attribute: 17 documentation: 'The number of copies that shall be printed when the print dialog is opened for this file.
Values outside this range shall be ignored.
Default value: as defined by the conforming reader, but typically 1'>
	^self objectAt: #NumCopies ifAbsent: [1 asPDF]
%
method: ViewerPreferences
PickTrayByPDFSize
	<type: #Boolean>
	<version: 1 dot: 7>
	<attribute: 15 documentation: 'A flag specifying whether the PDF page size shall be used to select the input paper tray.
This setting influences only the preset values used to populate the print dialog presented by a conforming reader.
If PickTrayByPDFSize is true, the check box in the print dialog associated with input paper tray shall be checked.
This setting has no effect on operating systems that do not provide the ability to pick the input tray by size.
Default value: as defined by the conforming reader'>
	^self objectAt: #PickTrayByPDFSize ifAbsent: [false]
%
method: ViewerPreferences
PrintArea
	<type: #Name>
	<version: 1 dot: 4>
	<attribute: 11 documentation: 'The name of the page boundary representing the area of a page that shall be rendered when printing the document.
If the specified page boundary is not defined in the page object, its default value shall be used.
Default value: CropBox.
This entry is intended primarily for use by prepress applications that interpret or manipulate the page boundaries.
NOTE	Most conforming readers disregard it.'>
	^self objectAt: #PrintArea ifAbsent: [#CropBox asPDF]
%
method: ViewerPreferences
PrintClip
	<type: #Name>
	<version: 1 dot: 4>
	<attribute: 12 documentation: 'The name of the page boundary to which the contents of a page shall be clipped when printing the document.
If the specified page boundary is not defined in the page object, its default value shall be used.
Default value: CropBox.
This entry is intended primarily for use by prepress applications that interpret or manipulate the page boundaries.
NOTE	Most conforming readers disregard it.'>
	^self objectAt: #PrintClip ifAbsent: [#CropBox asPDF]
%
method: ViewerPreferences
PrintPageRange
	<typeArrayOf: #Integer>
	<version: 1 dot: 7>
	<attribute: 16 documentation: 'The page numbers used to initialize the print dialog box when the file is printed.
The array shall contain an even number of integers to be interpreted in pairs, with each pair specifying the first and last pages in a sub-range of pages to be printed.
The first page of the PDF file shall be denoted by 1.
Default value: as defined by the conforming reader'>
	^self objectAt: #PrintPageRange ifAbsent: [#() asPDF]
%
method: ViewerPreferences
PrintScaling
	<type: #Name>
	<version: 1 dot: 6>
	<attribute: 13 documentation: 'The page scaling option that shall be selected when a print dialog is displayed for this document.
Valid values are None, which indicates no page scaling, and AppDefault, which indicates the conforming readerâs default print scaling.
If this entry has an unrecognized value, AppDefault shall be used.
Default value: AppDefault.
If the print dialog is suppressed and its parameters are provided from some other source, this entry nevertheless shall be honored.'>
	^self objectAt: #PrintScaling ifAbsent: [#AppDefault asPDF]
%
method: ViewerPreferences
ViewArea
	<type: #Name>
	<version: 1 dot: 4>
	<attribute: 9 documentation: 'The name of the page boundary representing the area of a page that shall be displayed when viewing the document on the screen.
The value is the key designating the relevant page boundary in the page object.
If the specified page boundary is not defined in the page object, its default value shall be used.
Default value: CropBox.
This entry is intended primarily for use by prepress applications that interpret or manipulate the page boundaries.
NOTE	Most conforming readers disregard it.'>
	^self objectAt: #ViewArea ifAbsent: [#CropBox asPDF]
%
method: ViewerPreferences
ViewClip
	<type: #Name>
	<version: 1 dot: 4>
	<attribute: 10 documentation: 'The name of the page boundary to which the contents of a page shall be clipped when viewing the document on the screen. The value is the key designating the relevant page boundary in the page object.
If the specified page boundary is not defined in the page object, its default value shall be used.
Default value: CropBox.
This entry is intended primarily for use by prepress applications that interpret or manipulate the page boundaries.
NOTE	Most conforming readers disregard it.'>
	^self objectAt: #ViewClip ifAbsent: [#CropBox asPDF]
%
category: 'accessing'
classmethod: WatermarkAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #WatermarkAnnotation
		supertype: #Annot
		version: #(1 6)
		section: '12.5.6.21'
		documentation: 'A watermark annotation shall be used to represent graphics that shall be printed at a fixed size and position on a page, regardless of the dimensions of the printed page.
The FixedPrint entry of a watermark annotation dictionary shall be a dictionary that contains values for specifying the size and position of the annotation.

Watermark annotations shall have no pop-up window or other interactive elements.
When displaying a watermark annotation on-screen, conforming readers shall use the dimensions of the media box as the page size so that the scroll and zoom behaviour is the same as for other annotations.

	NOTE	Since many printing devices have non printable margins, such margins should be taken into consideration when positioning watermark annotations near the edge of a page.'
%
classmethod: WatermarkAnnotation
subtype
	^#Watermark
%
category: 'accessing entries'
method: WatermarkAnnotation
FixedPrint
	<type: #FixedPrint>
	<attribute: 1 documentation: 'A fixed print dictionary that specifies how this annotation shall be drawn relative to the dimensions of the target media.
If this entry is not present, the annotation shall be drawn without any special consideration for the dimensions of the target media.

If the dimensions of the target media are not known at the time of drawing, drawing shall be done relative to the dimensions specified by the pageâs MediaBox entry.'>
	^self objectAt: #FixedPrint ifAbsent: [(PDF classAt: #FixedPrint) empty]
%
category: 'accessing'
classmethod: WidgetAnnotation
pdfTypeDefinition
	^PDFTypeDefinition
		name: #WidgetAnnotation
		supertype: #Annot
		version: #(1 2)
		section: '12.5.6.19'
		documentation: 'Interactive forms use widget annotations to represent the appearance of fields and to manage user interactions.
As a convenience, when a field has only a single associated widget annotation, the contents of the field dictionary and the annotation dictionary may be merged into a single dictionary containing entries that pertain to both a field and an annotation.

	NOTE	This presents no ambiguity, since the contents of the two kinds of dictionaries do not conflict.'
%
classmethod: WidgetAnnotation
subtype
	^#Widget
%
category: 'accessing entries'
method: WidgetAnnotation
A
	<type: #Action>
	<version: 1 dot: 1>
	<attribute: 3 documentation: 'An action that shall be performed when the annotation is activated.'>
	^self objectAt: #A ifAbsent: [(PDF classAt: #Action) empty]
%
method: WidgetAnnotation
AA
	<type: #Dictionary>
	<version: 1 dot: 2>
	<attribute: 4 documentation: 'An additional-actions dictionary defining the screen annotationâs behaviour in response to various trigger events.'>
	^self objectAt: #AA ifAbsent: [PDF Dictionary empty]
%
method: WidgetAnnotation
BS
	<type: #BorderStyle>
	<version: 1 dot: 2>
	<attribute: 5 documentation: 'A border style dictionary specifying the width and dash pattern that shall be used in drawing the annotationâs border.
The annotation dictionaryâs AP entry, if present, shall take precedence over the L and BS entries.'>
	^self objectAt: #BS ifAbsent: [(PDF classAt: #BorderStyle) empty]
%
method: WidgetAnnotation
H
	<type: #Name>
	<attribute: 1 documentation: 'The annotationâs highlighting mode, the visual effect that shall be used when the mouse button is pressed or held down inside its active area:
	N 	(None) No highlighting.
	I 	(Invert) Invert the contents of the annotation rectangle.
	O 	(Outline) Invert the annotationâs border.
	P 	(Push) Display the annotationâs down appearance, if any.
		If no down appearance is defined, the contents of the annotation rectangle shall be offset to appear as if it were being pushed below the surface of the page.
	T 	(Toggle) Same as P (which is preferred).
A highlighting mode other than P shall override any down appearance defined for the annotation.'>
	^self objectAt: #H ifAbsent: [#I asPDF]
%
method: WidgetAnnotation
MK
	<type: #AppearanceCharacteristics>
	<attribute: 2 documentation: 'An appearance characteristics dictionary that shall be used in constructing a dynamic appearance stream specifying the annotationâs visual presentation on the page.
The name MK for this entry is of historical significance only and has no direct meaning.'>
	^self objectAt: #MK ifAbsent: [(PDF classAt: #AppearanceCharacteristics) empty]
%
method: WidgetAnnotation
Parent
	<typeIndirect: #Dictionary>
	<attribute: 6 documentation: '(Required if this widget annotation is one of multiple children in a field; absent otherwise)
An indirect reference to the widget annotationâs parent field.
A widget annotation may have at most one parent; that is, it can be included in the Kids array of at most one field.'>
	^self objectAt: #Parent ifAbsent: [PDF Dictionary empty]
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| dict components |
	dict := SymbolDictionary new.
	dict name: #'PDFtalk Deploying'.
	dict at: #comment put: 'Code for deploying the library in a runtime environment

resetting and priming global variables
hints for the runtime packager about dynamic references'.
	dict at: #isFunctional put: false.
	dict at: #notice put: ''.
	dict at: #storeVersion put: '2.3.5.0'.
	components := (GsPackageLibrary packageNamed: #PDFtalkLibrary) symbolDict at: #codeComponents.
	components := (components at:  #PDFtalk) at: #codeComponents.
	components at: dict name put: dict.
%
DoIt
System myUserProfile insertDictionary: PDFtalk at: 1.
%
category: '*PDFtalk Deploying-initialize-release'
classmethod: AttributeType
primeRuntime
	"self primeRuntime"

	self resetTypeClassesAtKey.
	self typeClassesAtKey
%
classmethod: AttributeType
resetTypeClassesAtKey
	"self resetTypeClassesAtKey"

	TypeClasses := nil
%
category: '*PDFtalk Deploying-initialize-release'
classmethod: Operation
primeRuntime
	"self primeRuntime"

	self resetClassesAtNames.
	self classesAtNames
%
classmethod: Operation
resetClassesAtNames
	"self resetClassesAtNames"

	ClassesAtNames := nil
%
category: '*PDFtalk Deploying-documentation'
classmethod: PDF
howToUpdateTheGemstoneLibrary
	"the steps to do when updating the Gemstone version after the {PDFtalk Project} has changed"
	"load the package [Gemstone Fileout PDFtalk] (if not already in the image). This will load the package {Gemstone Fileout}"
	"Doit
		GemstoneFileout.Writer fileOutPDFtalk.
		GemstoneFileout.Writer fileOutPDFtalkTesting.
	This will create the files 'PDFtalk.gs' and 'PDFtalkTesting.gs' in 'C:\Users\ChristianHaider.SMALLTALKED\Documents\GemStone\code' (change the path in the above methods)"
	"execute windows batch files to import the sources into Gemstone:
	in Directory 'C:\Users\ChristianHaider.SMALLTALKED\Documents\GemStone' run
		reloadPDFtalkWithTests335.bat 
		reloadPDFtalkWithTests341.bat
	Check the logs in 'C:\Users\ChristianHaider.SMALLTALKED\Documents\GemStone\logs'
		cleanUp335.log
		PDFtalk335.log
		PDFtalkTesting335.log
		(and the 341 variants)
	all 3 should end in 'Successful commit' "
	"open Jade and login to 'gemstone335'
	InspectIt
		PDF runAllTests
	should return: '248 run, 248 passes, 0 expected defects, 0 failures, 0 errors, 0 unexpected passes' "
	"upload the .gs files to Github https://github.com/ChristianHaider/PDFtalk-for-Gemstone
	and edit the release infos"
%
category: '*PDFtalk Deploying-initialize-release'
classmethod: PDF
primeEncoders
	"reset and load all encoders to fill the caches to avoid lazy initialization at runtime"
	"self primeEncoders"

	self resetEncoders.
	self standardEncoder.
	self macRomanEncoder.
	self winAnsiEncoder.
	self pdfDocEncoder
%
classmethod: PDF
primeRuntime
	"reset and load all class variables to fill the caches to avoid lazy initialization at runtime.
	This should be executed when deploying after all application fonts and extensions are loaded"
	"self primeRuntime"

	(Smalltalk at: #Value) primeRuntime.
	self primeEncoders.
	(PostScript at: #CharacterNames) primeRuntime.
	self primeTypes.
	AttributeType primeRuntime.
	Operation primeRuntime.
	((PDFtalk at: #Fonts) at: #Font) primeRuntime
%
classmethod: PDF
primeTypes
	"reset and load all PDF types to fill the cache to avoid lazy initialization at runtime"
	"self primeTypes"

	self resetTypes.
	self types
%
classmethod: PDF
resetEncoders
	"self resetEncoders"
	
	StandardEncoder := nil.
	MacRomanEncoder := nil.
	WinAnsiEncoder := nil.
	PDFDocEncoder := nil.
%
classmethod: PDF
resetTypes
	"self resetTypes"

	types := nil
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
System myUserProfile insertDictionary: (PDFtalk at: #Fonts) at: 1.
%
category: '*PDFtalk Deploying-actions'
classmethod: Font
reloadFonts
	"self reloadFonts"

	self resetLoadedFonts.
	self loadedFonts
%
classmethod: Font
resetLoadedFonts
	"self resetLoadedFonts"

	LoadedFonts := nil
%
category: '*PDFtalk Deploying-initialize-release'
classmethod: Font
primeRuntime
	"reset and load all class variables to fill the caches to avoid lazy initialization at runtime"
	"self primeRuntime"

	FontBody primeRuntime.
	self reloadFonts
%
category: '*PDFtalk Deploying-initialize-release'
classmethod: FontBody
primeRuntime
	"reset and load all class variables to fill the caches to avoid lazy initialization at runtime"
	"self primeRuntime"

	self resetPostScriptFonts
%
classmethod: FontBody
resetPostScriptFonts
	"self resetPostScriptFonts"

	PostScriptFonts := nil
%
DoIt
System myUserProfile removeDictionaryAt: 1.
%
DoIt
	| start |
	UserGlobals removeKey: #FileInSymbolDictionary.
	start := UserGlobals removeKey: #FileInStartingTimestamp ifAbsent: [
		^'No starting timestamp; no duration available'].
	'Run duration: ' , (DateAndTime now - start) printString.
%
IfErr_clear
Commit
# 
# Finished file-in successfully
# 
